tiny	2	0	official	spigot
c	a	a
	m	(F)Lorg/joml/Quaternionf;	a	lambda$static$5
		p	0		rad
	m	(Lorg/joml/Vector3f;F)Lorg/joml/Quaternionf;	a	lambda$of$6
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	b	lambda$static$4
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	c	lambda$static$3
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	d	lambda$static$2
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	e	lambda$static$1
		p	0		rad
	m	(F)Lorg/joml/Quaternionf;	f	lambda$static$0
		p	0		rad
	m	(Lorg/joml/Vector3f;)La;	of	of
		p	0		axis
	m	(F)Lorg/joml/Quaternionf;	rotation	rotation
		p	1		rad
	m	(F)Lorg/joml/Quaternionf;	rotationDegrees	rotationDegrees
		p	1		deg
	f	La;	a	XN
	f	La;	b	XP
	f	La;	c	YN
	f	La;	d	YP
	f	La;	e	ZN
	f	La;	f	ZP
c	b	b
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
c	c	c
	m	(II)V	<init>	<init>
		p	1		dividend
		p	2		divisor
	m	(II)Ljava/lang/Iterable;	a	asIterable
		p	0		dividend
		p	1		divisor
	m	(II)Ljava/util/Iterator;	b	lambda$asIterable$0
	f	I	a	denominator
	f	I	b	quotient
	f	I	c	mod
	f	I	d	returnedParts
	f	I	e	remainder
c	e	com/mojang/math/GivensParameters
	m	()Le;	a	inverse
	m	(F)Le;	a	fromPositiveAngle
		p	0		radians
	m	(FF)Le;	a	fromUnnormalized
		p	0		a
		p	1		b
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	a	aroundX
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	aroundX
	m	()F	b	cos
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	b	aroundY
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	b	aroundY
	m	()F	c	sin
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	c	aroundZ
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	c	aroundZ
	m	()F	d	sinHalf
	m	()F	e	cosHalf
	f	F	a	sinHalf
	f	F	b	cosHalf
c	f	com/mojang/math/MatrixUtil
	m	(FF)Le;	a	qrGivensQuat
		p	0		a1
		p	1		a2
	m	(FFF)Le;	a	approxGivensQuat
		p	0		a11
		p	1		a12
		p	2		a22
	m	(Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple;	a	svdDecompose
		p	0		A
	m	(Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf;	a	eigenvalueJacobi
		p	0		AtA
		p	1		numJacobiIterations
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V	a	similarityTransform
		p	0		X
		p	1		A
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V	a	stepJacobi
		p	0		AtA
	m	(Lorg/joml/Matrix4f;)Z	a	isPureTranslation
		p	0		matrix
	m	(Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f;	a	mulComponentWise
		p	0		matrix
		p	1		scalar
	m	(Lorg/joml/Matrix4f;)Z	b	isOrthonormal
		p	0		matrix
	f	F	a	G
	f	Le;	b	PI_4
c	h	com/mojang/math/PointGroupO
	m	(Ljava/lang/String;ILjava/lang/String;Li;ZZZ)V	<init>	<init>
		p	3		name
		p	4		axisTransformation
		p	5		flipX
		p	6		flipY
		p	7		flipZ
	m	()Lh;	a	inverse
	m	(I)[Lh;	a	lambda$static$5
	m	(Lh;)Lh;	a	compose
		p	1		transformation
	m	(Lh;Lh;)Z	a	lambda$static$3
	m	(Lji$a;)Z	a	inverts
		p	1		axis
	m	(Lji;)Lji;	a	rotate
		p	1		direction
	m	(Ljk;)Ljk;	a	rotate
		p	1		orientation
	m	([[Lh;)V	a	lambda$static$2
	m	()Lorg/joml/Matrix3f;	b	transformation
	m	(Lh;)Lh;	b	lambda$static$4
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lh;)Lh;	c	lambda$static$1
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lh;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lh;	e	$values
	f	Lh;	A	INVERT_Y
	f	Lh;	B	INVERT_Z
	f	Lh;	C	ROT_60_REF_NNN
	f	Lh;	D	ROT_60_REF_NNP
	f	Lh;	E	ROT_60_REF_NPN
	f	Lh;	F	ROT_60_REF_NPP
	f	Lh;	G	ROT_60_REF_PNN
	f	Lh;	H	ROT_60_REF_PNP
	f	Lh;	I	ROT_60_REF_PPN
	f	Lh;	J	ROT_60_REF_PPP
	f	Lh;	K	SWAP_XY
	f	Lh;	L	SWAP_YZ
	f	Lh;	M	SWAP_XZ
	f	Lh;	N	SWAP_NEG_XY
	f	Lh;	O	SWAP_NEG_YZ
	f	Lh;	P	SWAP_NEG_XZ
	f	Lh;	Q	ROT_90_REF_X_NEG
	f	Lh;	R	ROT_90_REF_X_POS
	f	Lh;	S	ROT_90_REF_Y_NEG
	f	Lh;	T	ROT_90_REF_Y_POS
	f	Lh;	U	ROT_90_REF_Z_NEG
	f	Lh;	V	ROT_90_REF_Z_POS
	f	Lorg/joml/Matrix3f;	X	transformation
	f	Ljava/lang/String;	Y	name
	f	Ljava/util/Map;	Z	rotatedDirections
	f	Lh;	a	IDENTITY
	f	Z	aa	invertX
	f	Z	ab	invertY
	f	Z	ac	invertZ
	f	Li;	ad	permutation
	f	[[Lh;	ae	cayleyTable
	f	[Lh;	af	inverseTable
	f	[Lh;	ag	$VALUES
	f	Lh;	b	ROT_180_FACE_XY
	f	Lh;	c	ROT_180_FACE_XZ
	f	Lh;	d	ROT_180_FACE_YZ
	f	Lh;	e	ROT_120_NNN
	f	Lh;	f	ROT_120_NNP
	f	Lh;	g	ROT_120_NPN
	f	Lh;	h	ROT_120_NPP
	f	Lh;	i	ROT_120_PNN
	f	Lh;	j	ROT_120_PNP
	f	Lh;	k	ROT_120_PPN
	f	Lh;	l	ROT_120_PPP
	f	Lh;	m	ROT_180_EDGE_XY_NEG
	f	Lh;	n	ROT_180_EDGE_XY_POS
	f	Lh;	o	ROT_180_EDGE_XZ_NEG
	f	Lh;	p	ROT_180_EDGE_XZ_POS
	f	Lh;	q	ROT_180_EDGE_YZ_NEG
	f	Lh;	r	ROT_180_EDGE_YZ_POS
	f	Lh;	s	ROT_90_X_NEG
	f	Lh;	t	ROT_90_X_POS
	f	Lh;	u	ROT_90_Y_NEG
	f	Lh;	v	ROT_90_Y_POS
	f	Lh;	w	ROT_90_Z_NEG
	f	Lh;	x	ROT_90_Z_POS
	f	Lh;	y	INVERSION
	f	Lh;	z	INVERT_X
c	h$1	com/mojang/math/PointGroupO$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	i	com/mojang/math/PointGroupS
	m	(Ljava/lang/String;IIII)V	<init>	<init>
		p	3		xMapping
		p	4		yMapping
		p	5		zMapping
	m	()Lorg/joml/Matrix3f;	a	transformation
	m	(I)I	a	permutation
		p	1		oldAxis
	m	(Li;)Li;	a	compose
		p	1		transformation
	m	([ILi;)Z	a	lambda$static$0
	m	([[Li;)V	a	lambda$static$1
	m	()[Li;	b	$values
	f	Li;	a	P123
	f	Li;	b	P213
	f	Li;	c	P132
	f	Li;	d	P231
	f	Li;	e	P312
	f	Li;	f	P321
	f	[I	g	permutation
	f	Lorg/joml/Matrix3f;	h	transformation
	f	I	i	ORDER
	f	[[Li;	j	cayleyTable
	f	[Li;	k	$VALUES
c	j	com/mojang/math/Transformation
	m	(Lorg/joml/Matrix4f;)V	<init>	<init>
		p	1		matrix
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)V	<init>	<init>
		p	1		translation
		p	2		leftRotation
		p	3		scale
		p	4		rightRotation
	m	()Lj;	a	identity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lj;)Lj;	a	compose
		p	1		other
	m	(Lj;F)Lj;	a	slerp
		p	1		target
		p	2		factor
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f;	a	compose
		p	0		translation
		p	1		leftRotation
		p	2		scale
		p	3		rightRotation
	m	()Lj;	b	inverse
	m	(Lj;)Lorg/joml/Quaternionf;	b	lambda$static$3
		p	0		affineTransformation
	m	()Lorg/joml/Matrix4f;	c	getMatrix
	m	(Lj;)Lorg/joml/Vector3f;	c	lambda$static$2
		p	0		affineTransformation
	m	()Lorg/joml/Vector3f;	d	getTranslation
	m	(Lj;)Lorg/joml/Quaternionf;	d	lambda$static$1
		p	0		affineTransformation
	m	()Lorg/joml/Quaternionf;	e	getLeftRotation
	m	(Lj;)Lorg/joml/Vector3f;	e	lambda$static$0
	m	()Lorg/joml/Vector3f;	f	getScale
	m	()Lorg/joml/Quaternionf;	g	getRightRotation
	m	()V	h	ensureDecomposed
	m	()Lj;	i	lambda$static$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EXTENDED_CODEC
	f	Lorg/joml/Matrix4f;	c	matrix
	f	Z	d	decomposed
	f	Lorg/joml/Vector3f;	e	translation
	f	Lorg/joml/Quaternionf;	f	leftRotation
	f	Lorg/joml/Vector3f;	g	scale
	f	Lorg/joml/Quaternionf;	h	rightRotation
	f	Lj;	i	IDENTITY
c	l	net/minecraft/BlockUtil
	m	(Ldcc;Ljd;Ldfy;Lji;Ldfy;)Ljava/util/Optional;	a	getTopConnectedBlock
		p	0		world
		p	1		pos
		p	2		intermediateBlock
		p	3		direction
		p	4		endBlock
	m	(Ljava/util/function/Predicate;Ljd$a;Lji;I)I	a	getLimit
		p	0		predicate
		p	1		pos
		p	2		direction
		p	3		max
	m	(Ljd;Lji$a;ILji$a;ILjava/util/function/Predicate;)Ll$a;	a	getLargestRectangleAround
		p	0		center
		p	1		primaryAxis
		p	2		primaryMaxBlocks
		p	3		secondaryAxis
		p	4		secondaryMaxBlocks
		p	5		predicate
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
		p	0		heights
c	l$a	net/minecraft/BlockUtil$Rectangle
	m	(Ljd;II)V	<init>	<init>
		p	1		lowerLeft
		p	2		width
		p	3		height
	f	Ljd;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
c	l$b	net/minecraft/BlockUtil$IntBounds
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	f	I	a	min
	f	I	b	max
c	m	net/minecraft/CharPredicate
	m	(C)Z	a	lambda$negate$1
		p	1		c
	m	(Lm;C)Z	a	lambda$or$2
		p	2		c
	m	(Lm;)Lm;	and	and
		p	1		predicate
	m	(Lm;C)Z	b	lambda$and$0
		p	2		c
	m	(Lm;)Lm;	or	or
		p	1		predicate
	m	(C)Z	test	test
		p	1		c
c	n	net/minecraft/EnumChatFormat
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		colorIndex
		p	6		colorValue
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
		p	3		name
		p	4		code
		p	5		modifier
		p	6		colorIndex
		p	7		colorValue
	m	()C	a	getChar
	m	(C)Ln;	a	getByCode
		p	0		code
	m	(I)Ln;	a	getById
		p	0		colorIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
		p	0		string
	m	(Ln;)Ln;	a	lambda$static$1
		p	0		f
	m	(ZZ)Ljava/util/Collection;	a	getNames
		p	0		colors
		p	1		modifiers
	m	()I	b	getId
	m	(Ljava/lang/String;)Ln;	b	getByName
		p	0		name
	m	(Ln;)Ljava/lang/String;	b	lambda$static$0
		p	0		f
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
		p	0		name
	m	()Z	d	isFormat
	m	()Z	e	isColor
	m	()Ljava/lang/Integer;	f	getColor
	m	()Ljava/lang/String;	g	getName
	m	()[Ln;	h	$values
	f	Ljava/lang/String;	A	name
	f	C	B	code
	f	Z	C	isFormat
	f	Ljava/lang/String;	D	toString
	f	I	E	id
	f	Ljava/lang/Integer;	F	color
	f	[Ln;	G	$VALUES
	f	Ln;	a	BLACK
	f	Ln;	b	DARK_BLUE
	f	Ln;	c	DARK_GREEN
	f	Ln;	d	DARK_AQUA
	f	Ln;	e	DARK_RED
	f	Ln;	f	DARK_PURPLE
	f	Ln;	g	GOLD
	f	Ln;	h	GRAY
	f	Ln;	i	DARK_GRAY
	f	Ln;	j	BLUE
	f	Ln;	k	GREEN
	f	Ln;	l	AQUA
	f	Ln;	m	RED
	f	Ln;	n	LIGHT_PURPLE
	f	Ln;	o	YELLOW
	f	Ln;	p	WHITE
	f	Ln;	q	OBFUSCATED
	f	Ln;	r	BOLD
	f	Ln;	s	STRIKETHROUGH
	f	Ln;	t	UNDERLINE
	f	Ln;	u	ITALIC
	f	Ln;	v	RESET
	f	Lcom/mojang/serialization/Codec;	w	CODEC
	f	C	x	PREFIX_CODE
	f	Ljava/util/Map;	y	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	z	STRIP_FORMATTING_PATTERN
c	o	net/minecraft/CrashReport
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	()Ljava/lang/String;	a	getTitle
	m	(Ljava/lang/String;)Lp;	a	addCategory
		p	1		name
	m	(Ljava/lang/String;I)Lp;	a	addCategory
		p	1		name
		p	2		ignoredStackTraceCallCount
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lo;	a	forThrowable
		p	0		cause
		p	1		title
	m	(Ljava/nio/file/Path;Ly;)Z	a	saveToFile
		p	1		path
		p	2		type
	m	(Ljava/nio/file/Path;Ly;Ljava/util/List;)Z	a	saveToFile
		p	1		path
		p	2		type
		p	3		extraInfo
	m	(Ly;)Ljava/lang/String;	a	getFriendlyReport
		p	1		type
	m	(Ly;Ljava/util/List;)Ljava/lang/String;	a	getFriendlyReport
		p	1		type
		p	2		extraInfo
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	()Ljava/nio/file/Path;	e	getSaveFile
	m	()Lac;	f	getSystemReport
	m	()V	g	preload
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	DATE_TIME_FORMATTER
	f	Ljava/lang/String;	c	title
	f	Ljava/lang/Throwable;	d	exception
	f	Ljava/util/List;	e	details
	f	Ljava/nio/file/Path;	f	saveFile
	f	Z	g	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	h	uncategorizedStackTrace
	f	Lac;	i	systemReport
c	p	net/minecraft/CrashReportSystemDetails
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		title
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(I)I	a	fillInStackTrace
		p	1		ignoredCallCount
	m	(Ldcy;DDD)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Ldcy;III)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Ldcy;Ljd;)Ljava/lang/String;	a	formatLocation
		p	0		world
		p	1		pos
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
		p	1		prev
		p	2		next
	m	(Ljava/lang/String;Ljava/lang/Object;)Lp;	a	setDetail
		p	1		name
		p	2		detail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
		p	1		name
		p	2		throwable
	m	(Ljava/lang/String;Lq;)Lp;	a	setDetail
		p	1		name
		p	2		callable
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
		p	1		crashReportBuilder
	m	(Lp;Ldcy;Ljd;Ldtc;)V	a	populateBlockDetails
		p	0		element
		p	1		world
		p	2		pos
		p	3		state
	m	(I)V	b	trimStacktrace
		p	1		callCount
	m	(Ldcy;Ljd;)Ljava/lang/String;	b	lambda$populateBlockDetails$0
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
c	p$a	net/minecraft/CrashReportSystemDetails$CrashReportDetail
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		detail
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
c	q	net/minecraft/CrashReportCallable
c	r	net/minecraft/DefaultUncaughtExceptionHandler
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	s	net/minecraft/ThreadNamedUncaughtExceptionHandler
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
		p	1		logger
	f	Lorg/slf4j/Logger;	a	logger
c	t	net/minecraft/MinecraftVersion
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	()Lae;	a	tryDetectVersion
	m	(Lass;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Leqx;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
	f	Lae;	a	BUILT_IN
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	id
	f	Ljava/lang/String;	d	name
	f	Z	e	stable
	f	Leqx;	f	worldVersion
	f	I	g	protocolVersion
	f	I	h	resourcePackVersion
	f	I	i	dataPackVersion
	f	Ljava/util/Date;	j	buildTime
c	v	net/minecraft/FileUtils
	m	(Ljava/lang/String;)Ljava/lang/String;	a	sanitizeName
		p	0		fileName
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decomposePath$3
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
		p	0		path
		p	1		name
		p	2		extension
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path;	a	resolvePath
		p	0		root
		p	1		paths
	m	([Ljava/lang/String;)V	a	validatePath
		p	0		paths
	m	(Ljava/lang/String;)Ljava/lang/String;	b	getFullResourcePath
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decomposePath$2
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
		p	0		path
		p	1		resourceName
		p	2		extension
	m	(Ljava/lang/String;)Ljava/lang/String;	c	normalizeResourcePath
		p	0		path
	m	(Ljava/nio/file/Path;)V	c	createDirectoriesSafe
		p	0		path
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	decomposePath
		p	0		path
	m	(Ljava/lang/String;)Z	e	isValidStrictPathSegment
		p	0		name
	m	(Ljava/lang/String;)Ljava/lang/String;	f	lambda$decomposePath$1
	m	(Ljava/lang/String;)Ljava/lang/String;	g	lambda$decomposePath$0
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
	f	Ljava/util/regex/Pattern;	d	STRICT_PATH_SEGMENT_CHECK
c	x	net/minecraft/Optionull
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
		p	0		value
		p	1		mapper
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	mapOrDefault
		p	0		value
		p	1		mapper
		p	2		other
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	mapOrElse
		p	0		value
		p	1		mapper
		p	2		getter
	m	(Ljava/util/Collection;)Ljava/lang/Object;	a	first
		p	0		collection
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	firstOrDefault
		p	0		collection
		p	1		defaultValue
	m	(Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	firstOrElse
		p	0		collection
		p	1		getter
	m	([B)Z	a	isNullOrEmpty
		p	0		array
	m	([C)Z	a	isNullOrEmpty
		p	0		array
	m	([D)Z	a	isNullOrEmpty
		p	0		array
	m	([F)Z	a	isNullOrEmpty
		p	0		array
	m	([I)Z	a	isNullOrEmpty
		p	0		array
	m	([J)Z	a	isNullOrEmpty
		p	0		array
	m	([Ljava/lang/Object;)Z	a	isNullOrEmpty
		p	0		array
	m	([S)Z	a	isNullOrEmpty
		p	0		array
	m	([Z)Z	a	isNullOrEmpty
		p	0		array
c	y	net/minecraft/ReportType
	m	()Ljava/lang/String;	a	getErrorComment
	m	(Ljava/lang/StringBuilder;Ljava/util/List;)V	a	appendHeader
		p	1		reportBuilder
		p	2		extraInfo
	m	()Ljava/lang/String;	b	header
	m	()Ljava/util/List;	c	nuggets
	f	Ly;	a	CRASH
	f	Ly;	b	PROFILE
	f	Ly;	c	TEST
	f	Ly;	d	NETWORK_PROTOCOL_ERROR
	f	Ly;	e	CHUNK_IO_ERROR
	f	Ljava/lang/String;	f	header
	f	Ljava/util/List;	g	nuggets
c	z	net/minecraft/ReportedException
	m	(Lo;)V	<init>	<init>
		p	1		report
	m	()Lo;	a	getReport
	f	Lo;	a	report
c	aa	net/minecraft/ResourceKeyInvalidException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		throwable
c	ab	net/minecraft/SharedConstants
	m	()V	a	tryDetectVersion
	m	(Lae;)V	a	setVersion
		p	0		gameVersion
	m	(Ldcd;)Z	a	debugVoidTerrain
		p	0		pos
	m	()Lae;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	f	Z	A	DEBUG_SUPPORT_BLOCKS
	f	Z	B	DEBUG_SHAPES
	f	Z	C	DEBUG_NEIGHBORSUPDATE
	f	Z	D	DEBUG_STRUCTURES
	f	Z	E	DEBUG_LIGHT
	f	Z	F	DEBUG_SKY_LIGHT_SECTIONS
	f	Z	G	DEBUG_WORLDGENATTEMPT
	f	Z	H	DEBUG_SOLID_FACE
	f	Z	I	DEBUG_CHUNKS
	f	Z	J	DEBUG_GAME_EVENT_LISTENERS
	f	Z	K	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	L	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	M	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	N	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	O	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	P	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	Q	DEBUG_NAMED_RUNNABLES
	f	Z	R	DEBUG_GOAL_SELECTOR
	f	Z	S	DEBUG_VILLAGE_SECTIONS
	f	Z	T	DEBUG_BRAIN
	f	Z	U	DEBUG_BEES
	f	Z	V	DEBUG_RAIDS
	f	Z	W	DEBUG_BLOCK_BREAK
	f	Z	X	DEBUG_RESOURCE_LOAD_TIMES
	f	Z	Y	DEBUG_MONITOR_TICK_TIMES
	f	Z	Z	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	aA	DEBUG_DISABLE_ORE_VEINS
	f	Z	aB	DEBUG_DISABLE_BLENDING
	f	Z	aC	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	aD	DEFAULT_MINECRAFT_PORT
	f	Z	aE	INGAME_DEBUG_OUTPUT
	f	Z	aF	DEBUG_SUBTITLES
	f	I	aG	FAKE_MS_LATENCY
	f	I	aH	FAKE_MS_JITTER
	f	Lio/netty/util/ResourceLeakDetector$Level;	aI	NETTY_LEAK_DETECTION
	f	Z	aJ	COMMAND_STACK_TRACES
	f	Z	aK	DEBUG_WORLD_RECREATE
	f	Z	aL	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aM	DEBUG_FEATURE_COUNT
	f	Z	aN	DEBUG_RESOURCE_GENERATION_OVERRIDE
	f	Z	aO	DEBUG_FORCE_TELEMETRY
	f	Z	aP	DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND
	f	J	aQ	MAXIMUM_TICK_TIME_NANOS
	f	F	aR	MAXIMUM_BLOCK_EXPLOSION_RESISTANCE
	f	Z	aS	USE_WORKFLOWS_HOOKS
	f	Z	aT	USE_DEVONLY
	f	Z	aU	CHECK_DATA_FIXER_SCHEMA
	f	Z	aV	IS_RUNNING_IN_IDE
	f	I	aW	WORLD_RESOLUTION
	f	I	aX	MAX_CHAT_LENGTH
	f	I	aY	MAX_USER_INPUT_COMMAND_LENGTH
	f	Z	a	SNAPSHOT
	f	I	aZ	MAX_FUNCTION_COMMAND_LENGTH
	f	Z	aa	DEBUG_DONT_SAVE_WORLD
	f	Z	ab	DEBUG_LARGE_DRIPSTONE
	f	Z	ac	DEBUG_CARVERS
	f	Z	ad	DEBUG_ORE_VEINS
	f	Z	ae	DEBUG_SCULK_CATALYST
	f	Z	af	DEBUG_BYPASS_REALMS_VERSION_CHECK
	f	Z	ag	DEBUG_SOCIAL_INTERACTIONS
	f	Z	ah	DEBUG_VALIDATE_RESOURCE_PATH_CASE
	f	Z	ai	DEBUG_UNLOCK_ALL_TRADES
	f	Z	aj	DEBUG_BREEZE_MOB
	f	Z	ak	DEBUG_TRIAL_SPAWNER_DETECTS_SHEEP_AS_PLAYERS
	f	Z	al	DEBUG_VAULT_DETECTS_SHEEP_AS_PLAYERS
	f	Z	am	DEBUG_FORCE_ONBOARDING_SCREEN
	f	Z	an	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	ao	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	ap	DEBUG_AQUIFERS
	f	Z	aq	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	ar	debugGenerateSquareTerrainWithoutNoise
	f	Z	as	debugGenerateStripedTerrainWithoutNoise
	f	Z	at	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	au	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	av	DEBUG_DISABLE_AQUIFERS
	f	Z	aw	DEBUG_DISABLE_SURFACE
	f	Z	ax	DEBUG_DISABLE_CARVERS
	f	Z	ay	DEBUG_DISABLE_STRUCTURES
	f	Z	az	DEBUG_DISABLE_FEATURES
	f	I	b	WORLD_VERSION
	f	I	ba	MAX_PLAYER_NAME_LENGTH
	f	I	bb	MAX_CHAINED_NEIGHBOR_UPDATES
	f	I	bc	MAX_RENDER_DISTANCE
	f	[C	bd	ILLEGAL_FILE_CHARACTERS
	f	I	be	TICKS_PER_SECOND
	f	I	bf	MILLIS_PER_TICK
	f	I	bg	TICKS_PER_MINUTE
	f	I	bh	TICKS_PER_GAME_DAY
	f	F	bi	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	F	bj	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	bk	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	bl	WORLD_ICON_SIZE
	f	I	bm	SNAPSHOT_PROTOCOL_BIT
	f	Lae;	bn	CURRENT_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	I	e	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	f	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	g	SNBT_NAG_VERSION
	f	Z	h	CRASH_EAGERLY
	f	I	i	RESOURCE_PACK_FORMAT
	f	I	j	DATA_PACK_FORMAT
	f	I	k	LANGUAGE_FORMAT
	f	I	l	REPORT_FORMAT_VERSION
	f	Ljava/lang/String;	m	DATA_VERSION_TAG
	f	Z	n	FIX_TNT_DUPE
	f	Z	o	FIX_SAND_DUPE
	f	Z	p	USE_DEBUG_FEATURES
	f	Z	q	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	r	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	s	DEBUG_HOTKEYS
	f	Z	t	DEBUG_UI_NARRATION
	f	Z	u	DEBUG_RENDER
	f	Z	v	DEBUG_PATHFINDING
	f	Z	w	DEBUG_WATER
	f	Z	x	DEBUG_HEIGHTMAP
	f	Z	y	DEBUG_COLLISION
	f	Z	z	DEBUG_SHOW_LOCAL_SERVER_ENTITY_HIT_BOXES
c	ac	net/minecraft/SystemReport
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(J)F	a	sizeInMiB
		p	0		bytes
	m	(Ljava/lang/String;)V	a	putSpaceForProperty
		p	1		property
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
		p	1		name
		p	2		adder
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
		p	1		name
		p	2		value
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
		p	1		name
		p	2		valueSupplier
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
		p	1		stringBuilder
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$22
		p	1		name
		p	2		value
	m	(Ljava/util/List;)V	a	putPhysicalMemory
		p	1		memories
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$23
		p	0		entry
	m	(Loshi/SystemInfo;)V	a	putHardware
		p	1		systemInfo
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
		p	1		centralProcessor
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
		p	1		globalMemory
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
		p	1		virtualMemory
	m	()V	b	putStorage
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$putSpaceForProperty$21
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	b	putSpaceForPath
		p	1		name
		p	2		pathSupplier
	m	(Ljava/util/List;)V	b	putGraphics
		p	1		graphicsCards
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	()Ljava/lang/String;	c	lambda$putStorage$20
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	()Ljava/lang/String;	d	lambda$new$3
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	()V	e	lambda$new$2
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	m	()Ljava/lang/String;	f	lambda$new$1
	m	()Ljava/lang/String;	g	lambda$new$0
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
c	ad	net/minecraft/SystemUtils
	m	()Ljava/util/stream/Collector;	a	toMap
	m	(I)Ljava/lang/String;	a	lambda$fixedSize$22
	m	(IILjava/util/List;)Z	a	isSymmetrical
		p	0		width
		p	1		height
		p	2		list
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
		p	0		retries
		p	1		taskName
		p	2		tasks
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/Typed;	a	writeAndReadTypedOrThrow
		p	0		typed
		p	1		type
		p	2		modifier
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/Typed;	a	readTypedOrThrow
		p	0		type
		p	1		value
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Z)Lcom/mojang/datafixers/Typed;	a	readTypedOrThrow
		p	0		type
		p	1		value
		p	2		allowPartial
	m	(Lduf;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
		p	0		property
		p	1		value
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Layw;)Ljava/util/List;	a	shuffledCopy
		p	0		list
		p	1		random
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/Object;)Z	a	lambda$anyOf$10
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	a	copyAndAdd
		p	0		valueToPrepend
		p	1		list
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
		p	0		object
		p	1		initializer
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
		p	0		runnable
		p	1		messageSupplier
	m	(Ljava/lang/String;)Ljava/net/URI;	a	parseAndValidateUntrustedUri
		p	0		uri
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
		p	0		string
		p	1		cursor
		p	2		delta
	m	(Ljava/lang/String;Lakr;)Ljava/lang/String;	a	makeDescriptionId
		p	0		type
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		task
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
		p	0		message
		p	1		throwable
	m	(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
		p	2		pool
	m	(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;ZLjava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
		p	3		runnable
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
		p	0		prefix
		p	1		consumer
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	wrapThreadWithTaskName
		p	0		activeThreadName
		p	1		supplier
	m	(Ljava/lang/String;Lm;)Ljava/lang/String;	a	sanitizeName
		p	0		string
		p	1		predicate
	m	(Ljava/lang/String;Z)Ljava/util/concurrent/ExecutorService;	a	makeIoExecutor
		p	0		namePrefix
		p	1		daemon
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
		p	0		thread
		p	1		t
	m	(Ljava/lang/Throwable;)V	a	throwAsRuntime
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
		p	0		src
		p	1		dest
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
		p	0		current
		p	1		newPath
		p	2		backup
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)Z	a	safeReplaceOrMoveFile
		p	0		current
		p	1		newPath
		p	2		backup
		p	3		noRestoreOnFail
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
		p	0		fileSystemProvider
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	a	allOf
		p	0		predicates
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		list
		p	1		length
	m	(Ljava/util/List;Layw;)Ljava/lang/Object;	a	getRandom
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;	a	copyAndAdd
		p	0		list
		p	1		valueToAppend
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$fallibleSequence$18
		p	1		void_
	m	(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fallibleSequence
		p	0		futures
		p	1		exceptionHandler
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$fallibleSequence$17
		p	3		future
	m	(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;	a	copyAndPut
		p	0		map
		p	1		keyToAppend
		p	2		valueToAppend
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
		p	0		optional
		p	1		presentAction
		p	2		elseAction
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/List;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFastAndCancel$15
		p	2		throwable
	m	(Ljava/util/concurrent/ExecutorService;)V	a	shutdownExecutor
		p	0		service
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
		p	0		biFunction
	m	(Ljava/util/function/Consumer;)V	a	setPause
		p	0		missingBreakpointHandler
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$19
		p	2		string
	m	(Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$fallibleSequence$16
		p	3		value
		p	4		throwable
	m	(Ljava/util/function/Function;)Laze;	a	singleKeyCache
		p	0		mapper
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;	a	blockUntilDone
		p	0		resultFactory
		p	1		donePredicate
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
		p	0		factory
	m	(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	name
		p	0		supplier
		p	1		messageSupplier
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/IntStream;Layw;)Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
		p	0		stream
		p	1		length
	m	(Ljava/util/stream/Stream;Layw;)Ljava/util/List;	a	toShuffledList
		p	0		stream
		p	1		random
	m	(Ljz;Ljava/lang/Object;)Ljava/lang/String;	a	getRegisteredName
		p	0		registry
		p	1		value
	m	(Lm;I)Ljava/lang/String;	a	lambda$sanitizeName$23
		p	1		charCode
	m	([ILayw;)I	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/lang/Object;Layw;)Ljava/lang/Object;	a	getRandom
		p	0		array
		p	1		random
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
		p	0		tasks
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$12
	m	()Ljava/util/stream/Collector;	b	toMutableList
	m	(I)Ljava/lang/String;	b	lambda$fixedSize$21
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
		p	0		typeReference
		p	1		id
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
		p	0		iterable
		p	1		object
	m	(Ljava/lang/Object;)Z	b	lambda$allOf$7
	m	(Ljava/lang/String;)V	b	logAndPauseIfInIde
		p	0		message
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$wrapThreadWithTaskName$5
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Object;	b	lambda$wrapThreadWithTaskName$6
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	b	pauseInIde
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
		p	0		src
		p	1		dest
		p	2		toCopy
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	b	anyOf
		p	0		predicates
	m	(Ljava/util/List;Layw;)Ljava/util/Optional;	b	getRandomSafe
		p	0		list
		p	1		random
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$14
		p	1		void_
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	memoize
		p	0		function
	m	([Ljava/lang/Object;Layw;)Ljava/util/List;	b	shuffledCopy
		p	0		array
		p	1		random
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$9
	m	()J	c	getMillis
	m	(I)Ljava/lang/String;	c	lambda$fixedSize$20
	m	(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;	c	makeExecutor
		p	0		name
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	c	describeError
		p	0		t
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
		p	0		path
	m	(Ljava/util/List;)Ljava/lang/Object;	c	lastOf
		p	0		list
	m	(Ljava/util/List;Layw;)V	c	shuffle
		p	0		list
		p	1		random
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	blockUntilDone
		p	0		resultFactory
	m	()J	d	getNanos
	m	(I)[Ljava/util/function/Predicate;	d	lambda$anyOf$11
	m	(Ljava/lang/String;)V	d	doPause
		p	0		message
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	d	sequence
		p	0		futures
	m	()J	e	getEpochMillis
	m	(I)[Ljava/util/function/Predicate;	e	lambda$allOf$8
	m	(Ljava/lang/String;)Z	e	lambda$getVmArguments$13
		p	0		runtimeArg
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	e	sequenceFailFast
		p	0		futures
	m	()Ljava/lang/String;	f	getFilenameFormattedDateTime
	m	(Ljava/lang/String;)V	f	lambda$static$2
		p	0		message
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	f	sequenceFailFastAndCancel
		p	0		futures
	m	()Ljava/util/concurrent/ExecutorService;	g	backgroundExecutor
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	g	createIndexLookup
		p	0		values
	m	()Ljava/util/concurrent/ExecutorService;	h	ioPool
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	h	createIndexIdentityLookup
		p	0		values
	m	()Ljava/util/concurrent/ExecutorService;	i	nonCriticalIoPool
	m	()V	j	shutdownExecutors
	m	()Lad$a;	k	getPlatform
	m	()Ljava/util/stream/Stream;	l	getVmArguments
	m	()V	m	startTimerHackThread
	m	()I	n	getMaxThreads
	m	()Ljava/lang/IllegalStateException;	o	lambda$static$1
	f	I	a	LINEAR_LOOKUP_THRESHOLD
	f	J	b	NANOS_PER_MILLI
	f	Lazo$a;	c	timeSource
	f	Lcom/google/common/base/Ticker;	d	TICKER
	f	Ljava/util/UUID;	e	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	f	ZIP_FILE_SYSTEM_PROVIDER
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	I	h	DEFAULT_MAX_THREADS
	f	I	i	DEFAULT_SAFE_FILE_OPERATION_RETRIES
	f	Ljava/lang/String;	j	MAX_THREADS_SYSTEM_PROPERTY
	f	Ljava/util/concurrent/ExecutorService;	k	BACKGROUND_EXECUTOR
	f	Ljava/util/concurrent/ExecutorService;	l	IO_POOL
	f	Ljava/util/concurrent/ExecutorService;	m	DOWNLOAD_POOL
	f	Ljava/time/format/DateTimeFormatter;	n	FILENAME_DATE_TIME_FORMATTER
	f	Ljava/util/Set;	o	ALLOWED_UNTRUSTED_LINK_PROTOCOLS
	f	Ljava/util/function/Consumer;	p	thePauser
c	ad$1	net/minecraft/SystemUtils$1
c	ad$2	net/minecraft/SystemUtils$2
	f	Ljava/util/function/Function;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$3	net/minecraft/SystemUtils$3
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
		p	1		pair
	f	Ljava/util/function/BiFunction;	a	val$function
	f	Ljava/util/Map;	b	cache
c	ad$4	net/minecraft/SystemUtils$4
c	ad$5	net/minecraft/SystemUtils$5
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
c	ad$6	net/minecraft/SystemUtils$6
	f	Ljava/nio/file/Path;	a	val$target
c	ad$7	net/minecraft/SystemUtils$7
	f	Ljava/nio/file/Path;	a	val$target
c	ad$8	net/minecraft/SystemUtils$8
	f	Ljava/nio/file/Path;	a	val$target
c	ad$9	net/minecraft/SystemUtils$9
c	ad$a	net/minecraft/SystemUtils$OS
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/io/File;)V	a	openFile
		p	1		file
	m	(Ljava/lang/String;)V	a	openUri
		p	1		uri
	m	(Ljava/net/URI;)V	a	openUri
		p	1		uri
	m	(Ljava/nio/file/Path;)V	a	openPath
		p	1		path
	m	()[Lad$a;	b	$values
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
		p	1		uri
	m	(Ljava/net/URI;)Ljava/lang/Process;	c	lambda$openUri$0
	f	Lad$a;	a	LINUX
	f	Lad$a;	b	SOLARIS
	f	Lad$a;	c	WINDOWS
	f	Lad$a;	d	OSX
	f	Lad$a;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lad$a;	g	$VALUES
c	ad$a$1	net/minecraft/SystemUtils$OS$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
		p	1		uri
c	ad$a$2	net/minecraft/SystemUtils$OS$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
		p	1		uri
c	ae	net/minecraft/WorldVersion
	m	(Lass;)I	a	getPackVersion
		p	1		type
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	c	getName
	m	()Leqx;	d	getDataVersion
	m	()I	e	getProtocolVersion
	m	()Ljava/util/Date;	f	getBuildTime
	m	()Z	g	isStable
c	af	net/minecraft/advancements/Advancement
	m	(Ljava/util/Optional;Ljava/util/Optional;Lak;Ljava/util/Map;Laj;Z)V	<init>	<init>
		p	1		parent
		p	2		display
		p	3		rewards
		p	4		criteria
		p	5		requirements
		p	6		sendsTelemetryEvent
	m	()Z	a	isRoot
	m	(Laf;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		advancement
	m	(Laf;Laj;)Laf;	a	lambda$validate$6
		p	1		validated
	m	(Lag;)Lwz;	a	name
		p	0		identifiedAdvancement
	m	(Las;)Lwz;	a	decorateName
		p	0		display
	m	(Layu;Ljn$a;)V	a	validate
		p	1		errorReporter
		p	2		lookup
	m	(Layu;Ljn$a;Ljava/lang/String;Lao;)V	a	lambda$validate$9
		p	2		name
		p	3		criterion
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ljava/util/Map;)Laj;	a	lambda$static$3
	m	(Ljava/util/Optional;Ljava/util/Optional;Lak;Ljava/util/Map;Ljava/util/Optional;Ljava/lang/Boolean;)Laf;	a	lambda$static$4
		p	0		parent
		p	1		display
		p	2		rewards
		p	3		criteria
		p	4		requirements
		p	5		sendsTelemetryEvent
	m	(Lwk;)V	a	write
		p	1		buf
	m	(Lwz;Lxw;)Lxw;	a	lambda$decorateName$7
		p	1		style
	m	()Ljava/util/Optional;	b	parent
	m	(Laf;)Ljava/util/Optional;	b	lambda$static$2
		p	0		advancement
	m	(Lag;)Lwz;	b	lambda$name$8
	m	(Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		criteria
	m	(Lwk;)Laf;	b	read
		p	0		buf
	m	()Ljava/util/Optional;	c	display
	m	()Lak;	d	rewards
	m	()Ljava/util/Map;	e	criteria
	m	()Laj;	f	requirements
	m	()Z	g	sendsTelemetryEvent
	m	()Ljava/util/Optional;	h	name
	m	()Ljava/lang/String;	i	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/Optional;	c	parent
	f	Ljava/util/Optional;	d	display
	f	Lak;	e	rewards
	f	Ljava/util/Map;	f	criteria
	f	Laj;	g	requirements
	f	Z	h	sendsTelemetryEvent
	f	Ljava/util/Optional;	i	name
	f	Lcom/mojang/serialization/Codec;	j	CRITERIA_CODEC
c	af$a	net/minecraft/advancements/Advancement$SerializedAdvancement
	m	()Laf$a;	a	advancement
	m	(Lag;)Laf$a;	a	parent
		p	1		parent
	m	(Laj$a;)Laf$a;	a	requirements
		p	1		merger
	m	(Laj;)Laf$a;	a	requirements
		p	1		requirements
	m	(Lak$a;)Laf$a;	a	rewards
		p	1		builder
	m	(Lak;)Laf$a;	a	rewards
		p	1		rewards
	m	(Lakr;)Laf$a;	a	parent
		p	1		parentId
	m	(Las;)Laf$a;	a	display
		p	1		display
	m	(Lcuq;Lwz;Lwz;Lakr;Lam;ZZZ)Laf$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Ldcv;Lwz;Lwz;Lakr;Lam;ZZZ)Laf$a;	a	display
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	(Ljava/lang/String;Lao;)Laf$a;	a	addCriterion
		p	1		name
		p	2		criterion
	m	(Ljava/util/Map;)Laj;	a	lambda$build$0
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Lag;	a	save
		p	1		exporter
		p	2		id
	m	()Laf$a;	b	recipeAdvancement
	m	(Lakr;)Lag;	b	build
		p	1		id
	m	()Laf$a;	c	sendsTelemetryEvent
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Optional;	b	display
	f	Lak;	c	rewards
	f	Lcom/google/common/collect/ImmutableMap$Builder;	d	criteria
	f	Ljava/util/Optional;	e	requirements
	f	Laj$a;	f	requirementsStrategy
	f	Z	g	sendsTelemetryEvent
c	ag	net/minecraft/advancements/AdvancementHolder
	m	()Lakr;	a	id
	m	()Laf;	b	value
	f	Lyx;	a	STREAM_CODEC
	f	Lyx;	b	LIST_STREAM_CODEC
	f	Lakr;	c	id
	f	Laf;	d	value
c	ah	net/minecraft/advancements/AdvancementNode
	m	(Lag;Lah;)V	<init>	<init>
		p	1		advancementEntry
		p	2		parent
	m	()Laf;	a	advancement
	m	(Lah;)Lah;	a	getRoot
		p	0		advancement
	m	()Lag;	b	holder
	m	(Lah;)V	b	addChild
		p	1		advancement
	m	()Lah;	c	parent
	m	()Lah;	d	root
	m	()Ljava/lang/Iterable;	e	children
	f	Lag;	a	holder
	f	Lah;	b	parent
	f	Ljava/util/Set;	c	children
c	ai	net/minecraft/advancements/AdvancementProgress
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		criteriaProgresses
	m	()Z	a	isDone
	m	(Lai;)I	a	compareTo
	m	(Laj;)V	a	update
		p	1		requirements
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ljava/lang/String;)Z	a	grantProgress
		p	1		name
	m	(Ljava/time/Instant;)Ljava/time/temporal/TemporalAccessor;	a	lambda$static$0
		p	0		instant
	m	(Ljava/util/Map$Entry;)Ljava/time/Instant;	a	lambda$static$4
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;Ljava/lang/Boolean;)Lai;	a	lambda$static$7
		p	0		criteriaProgresses
		p	1		done
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$9
		p	1		progress
	m	(Lvw;)V	a	serializeToNetwork
		p	1		buf
	m	(Lvw;Lap;)V	a	lambda$serializeToNetwork$10
		p	0		bufx
		p	1		progresses
	m	()Z	b	hasProgress
	m	(Lai;)Ljava/util/Map;	b	lambda$static$6
		p	0		advancementProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
		p	1		name
	m	(Ljava/util/Map$Entry;)Z	b	lambda$static$3
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	b	lambda$static$2
		p	0		map
	m	(Lvw;)Lai;	b	fromNetwork
		p	0		buf
	m	()F	c	getPercent
	m	(Ljava/lang/String;)Lap;	c	getCriterion
		p	1		name
	m	(Ljava/util/Map$Entry;)Lap;	c	lambda$static$1
		p	0		entry
	m	()Lwz;	d	getProgressText
	m	(Ljava/lang/String;)Z	d	isCriterionDone
		p	1		name
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/time/Instant;	g	getFirstProgressDate
	m	()I	h	countCompletedRequirements
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/format/DateTimeFormatter;	b	OBTAINED_TIME_FORMAT
	f	Lcom/mojang/serialization/Codec;	c	OBTAINED_TIME_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CRITERIA_CODEC
	f	Ljava/util/Map;	e	criteria
	f	Laj;	f	requirements
c	aj	net/minecraft/advancements/AdvancementRequirements
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()I	a	size
	m	(Ljava/util/Collection;)Laj;	a	allOf
		p	0		requirements
	m	(Ljava/util/List;Ljava/util/function/Predicate;)Z	a	anyMatch
		p	0		requirements
		p	1		predicate
	m	(Ljava/util/Set;)Lcom/mojang/serialization/DataResult;	a	validate
		p	1		requirements
	m	(Ljava/util/Set;Ljava/util/Set;)Ljava/lang/String;	a	lambda$validate$3
	m	(Ljava/util/function/Predicate;)Z	a	test
		p	1		predicate
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Ljava/util/List;)V	a	lambda$write$1
		p	0		bufx
		p	1		requirements
	m	()Z	b	isEmpty
	m	(Ljava/util/Collection;)Laj;	b	anyOf
		p	0		requirements
	m	(Ljava/util/function/Predicate;)I	b	count
		p	1		predicate
	m	(Lvw;)Ljava/util/List;	b	lambda$new$0
		p	0		bufx
	m	()Ljava/util/Set;	c	names
	m	()Ljava/util/List;	d	requirements
	m	()Ljava/lang/String;	e	lambda$validate$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laj;	b	EMPTY
	f	Ljava/util/List;	c	requirements
c	aj$a	net/minecraft/advancements/AdvancementRequirements$a
	m	(Ljava/util/Collection;)Laj;	create	create
		p	1		requirements
	f	Laj$a;	a	AND
	f	Laj$a;	b	OR
c	ak	net/minecraft/advancements/AdvancementRewards
	m	(ILjava/util/List;Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		experience
	m	()I	a	experience
	m	(Laqv;)V	a	grant
		p	1		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lnet/minecraft/server/MinecraftServer;Laqv;Lig;)V	a	lambda$grant$2
		p	2		function
	m	(Lnet/minecraft/server/MinecraftServer;Leo;)Ljava/util/Optional;	a	lambda$grant$1
		p	1		function
	m	()Ljava/util/List;	b	loot
	m	()Ljava/util/List;	c	recipes
	m	()Ljava/util/Optional;	d	function
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lak;	b	EMPTY
	f	I	c	experience
	f	Ljava/util/List;	d	loot
	f	Ljava/util/List;	e	recipes
	f	Ljava/util/Optional;	f	function
c	ak$a	net/minecraft/advancements/AdvancementRewards$a
	m	()Lak;	a	build
	m	(I)Lak$a;	a	experience
		p	0		experience
	m	(Lakq;)Lak$a;	a	loot
		p	0		loot
	m	(Lakr;)Lak$a;	a	recipe
		p	0		recipe
	m	(I)Lak$a;	b	addExperience
		p	1		experience
	m	(Lakq;)Lak$a;	b	addLootTable
		p	1		loot
	m	(Lakr;)Lak$a;	b	addRecipe
		p	1		recipe
	m	(Lakr;)Lak$a;	c	function
		p	0		function
	m	(Lakr;)Lak$a;	d	runs
		p	1		function
	f	I	a	experience
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	loot
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	recipes
	f	Ljava/util/Optional;	d	function
c	al	net/minecraft/advancements/AdvancementTree
	m	()V	a	clear
	m	(Lag;)Lah;	a	get
		p	1		advancement
	m	(Lah;)V	a	remove
		p	1		advancement
	m	(Lakr;)Lah;	a	get
		p	1		id
	m	(Lal$a;)V	a	setListener
		p	1		listener
	m	(Ljava/util/Collection;)V	a	addAll
		p	1		advancements
	m	(Ljava/util/Set;)V	a	remove
		p	1		advancements
	m	()Ljava/lang/Iterable;	b	roots
	m	(Lag;)Z	b	tryInsert
		p	1		advancement
	m	()Ljava/util/Collection;	c	nodes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	nodes
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Lal$a;	e	listener
c	al$a	net/minecraft/advancements/AdvancementTree$a
	m	()V	a	onAdvancementsCleared
	m	(Lah;)V	a	onAddAdvancementRoot
		p	1		root
	m	(Lah;)V	b	onRemoveAdvancementRoot
		p	1		root
	m	(Lah;)V	c	onAddAdvancementTask
		p	1		dependent
	m	(Lah;)V	d	onRemoveAdvancementTask
		p	1		dependent
c	am	net/minecraft/advancements/AdvancementFrameType
	m	(Ljava/lang/String;ILjava/lang/String;Ln;)V	<init>	<init>
		p	3		id
		p	4		titleFormat
	m	()Ln;	a	getChatColor
	m	(Lag;Laqv;)Lxn;	a	createAnnouncement
		p	1		advancementEntry
		p	2		player
	m	()Lwz;	b	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lam;	d	$values
	f	Lam;	a	TASK
	f	Lam;	b	CHALLENGE
	f	Lam;	c	GOAL
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Ln;	f	chatColor
	f	Lwz;	g	displayName
	f	[Lam;	h	$VALUES
c	an	net/minecraft/advancements/CriterionTriggers
	m	(Ljava/lang/String;Laq;)Laq;	a	register
		p	0		id
		p	1		criterion
	m	(Ljz;)Laq;	a	bootstrap
		p	0		registry
	f	Lbf;	A	CONSUME_ITEM
	f	Lbo;	B	EFFECTS_CHANGED
	f	Lei;	C	USED_TOTEM
	f	Lbn;	D	NETHER_TRAVEL
	f	Lcc;	E	FISHING_ROD_HOOKED
	f	Lba;	F	CHANNELED_LIGHTNING
	f	Ldu;	G	SHOT_CROSSBOW
	f	Lcz;	H	KILLED_BY_CROSSBOW
	f	Ldq;	I	RAID_WIN
	f	Ldq;	J	RAID_OMEN
	f	Ldx;	K	HONEY_BLOCK_SLIDE
	f	Lav;	L	BEE_NEST_DESTROYED
	f	Lef;	M	TARGET_BLOCK_HIT
	f	Lcw;	N	ITEM_USED_ON_BLOCK
	f	Lbl;	O	DEFAULT_BLOCK_USE
	f	Lau;	P	ANY_BLOCK_USE
	f	Ldg;	Q	GENERATE_LOOT
	f	Ldl;	R	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Ldl;	S	THROWN_ITEM_PICKED_UP_BY_PLAYER
	f	Ldn;	T	PLAYER_INTERACTED_WITH_ENTITY
	f	Lea;	U	START_RIDING_TRIGGER
	f	Lde;	V	LIGHTNING_STRIKE
	f	Lej;	W	USING_ITEM
	f	Lbn;	X	FALL_FROM_HEIGHT
	f	Lbn;	Y	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Lda;	Z	KILL_MOB_NEAR_SCULK_CATALYST
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcw;	aa	ALLAY_DROP_ITEM_ON_BLOCK
	f	Ldq;	ab	AVOID_VIBRATION
	f	Lds;	ac	RECIPE_CRAFTED
	f	Lds;	ad	CRAFTER_RECIPE_CRAFTED
	f	Lbz;	ae	FALL_AFTER_EXPLOSION
	f	Lcf;	b	IMPOSSIBLE
	f	Lda;	c	PLAYER_KILLED_ENTITY
	f	Lda;	d	ENTITY_KILLED_PLAYER
	f	Lbr;	e	ENTER_BLOCK
	f	Lcg;	f	INVENTORY_CHANGED
	f	Ldt;	g	RECIPE_UNLOCKED
	f	Ldm;	h	PLAYER_HURT_ENTITY
	f	Lbu;	i	ENTITY_HURT_PLAYER
	f	Lbp;	j	ENCHANTED_ITEM
	f	Lca;	k	FILLED_BUCKET
	f	Lay;	l	BREWED_POTION
	f	Lbe;	m	CONSTRUCT_BEACON
	f	Leh;	n	USED_ENDER_EYE
	f	Lec;	o	SUMMONED_ENTITY
	f	Lax;	p	BRED_ANIMALS
	f	Ldq;	q	LOCATION
	f	Ldq;	r	SLEPT_IN_BED
	f	Lbi;	s	CURED_ZOMBIE_VILLAGER
	f	Leg;	t	TRADE
	f	Lcm;	u	ITEM_DURABILITY_CHANGED
	f	Ldb;	v	LEVITATION
	f	Laz;	w	CHANGED_DIMENSION
	f	Ldq;	x	TICK
	f	Lee;	y	TAME_ANIMAL
	f	Lcw;	z	PLACED_BLOCK
c	ao	net/minecraft/advancements/Criterion
	m	()Laq;	a	trigger
	m	(Laq;)Lcom/mojang/serialization/Codec;	a	criterionCodec
		p	0		criterion
	m	(Laq;Lar;)Lao;	a	lambda$criterionCodec$0
		p	1		conditions
	m	()Lar;	b	triggerInstance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Laq;	b	trigger
	f	Lar;	c	triggerInstance
	f	Lcom/mojang/serialization/MapCodec;	d	MAP_CODEC
c	ap	net/minecraft/advancements/CriterionProgress
	m	(Ljava/time/Instant;)V	<init>	<init>
		p	1		obtainedTime
	m	()Z	a	isDone
	m	(Lvw;)V	a	serializeToNetwork
		p	1		buf
	m	()V	b	grant
	m	(Lvw;)Lap;	b	fromNetwork
		p	0		buf
	m	()V	c	revoke
	m	()Ljava/time/Instant;	d	getObtained
	f	Ljava/time/Instant;	a	obtained
c	aq	net/minecraft/advancements/CriterionTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakz;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lakz;Laq$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lar;)Lao;	a	createCriterion
		p	1		conditions
	m	(Lakz;Laq$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
c	aq$a	net/minecraft/advancements/CriterionTrigger$a
	m	(Lar;Lag;Ljava/lang/String;)V	<init>	<init>
		p	1		conditions
		p	3		id
	m	()Lar;	a	trigger
	m	(Lakz;)V	a	run
		p	1		tracker
	m	()Lag;	b	advancement
	m	()Ljava/lang/String;	c	criterion
	f	Lar;	a	trigger
	f	Lag;	b	advancement
	f	Ljava/lang/String;	c	criterion
c	ar	net/minecraft/advancements/CriterionInstance
	m	(Lbh;)V	a	validate
		p	1		validator
c	as	net/minecraft/advancements/AdvancementDisplay
	m	(Lcuq;Lwz;Lwz;Ljava/util/Optional;Lam;ZZZ)V	<init>	<init>
		p	1		icon
		p	2		title
		p	3		description
		p	4		background
		p	5		frame
		p	6		showToast
		p	7		announceToChat
		p	8		hidden
	m	()Lwz;	a	getTitle
	m	(FF)V	a	setLocation
		p	1		x
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lwk;)V	a	serializeToNetwork
		p	1		buf
	m	()Lwz;	b	getDescription
	m	(Lwk;)Las;	b	fromNetwork
		p	0		buf
	m	()Lcuq;	c	getIcon
	m	()Ljava/util/Optional;	d	getBackground
	m	()Lam;	e	getType
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lwz;	c	title
	f	Lwz;	d	description
	f	Lcuq;	e	icon
	f	Ljava/util/Optional;	f	background
	f	Lam;	g	type
	f	Z	h	showToast
	f	Z	i	announceChat
	f	Z	j	hidden
	f	F	k	x
	f	F	l	y
c	at	net/minecraft/advancements/TreeNodePosition
	m	(Lah;Lat;Lat;II)V	<init>	<init>
		p	1		advancement
		p	2		parent
		p	3		previousSibling
		p	4		childrenSize
		p	5		depth
	m	()V	a	firstWalk
	m	(F)V	a	thirdWalk
		p	1		deltaRow
	m	(FIF)F	a	secondWalk
		p	1		deltaRow
		p	2		depth
		p	3		minRow
	m	(Lah;)V	a	run
		p	0		root
	m	(Lah;Lat;)Lat;	a	addChild
		p	1		advancement
		p	2		lastChild
	m	(Las;)V	a	lambda$finalizePosition$0
		p	1		display
	m	(Lat;)Lat;	a	apportion
		p	1		last
	m	(Lat;F)V	a	moveSubtree
		p	1		positioner
		p	2		extraRowDistance
	m	(Lat;Lat;)Lat;	a	getAncestor
	m	()V	b	executeShifts
	m	()Lat;	c	previousOrThread
	m	()Lat;	d	nextOrThread
	m	()V	e	finalizePosition
	f	Lah;	a	node
	f	Lat;	b	parent
	f	Lat;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Lat;	f	ancestor
	f	Lat;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
c	au	net/minecraft/advancements/critereon/AnyBlockInteractionTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ljd;Lcuq;)V	a	trigger
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lerr;Lau$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	au$a	net/minecraft/advancements/critereon/AnyBlockInteractionTrigger$a
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbh;Lbg;)V	a	lambda$validate$1
		p	1		location
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	matches
		p	1		location
	m	()Ljava/util/Optional;	b	location
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
c	av	net/minecraft/advancements/critereon/CriterionTriggerBeeNestDestroyed
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ldtc;Lcuq;I)V	a	trigger
		p	1		player
		p	2		state
		p	3		stack
		p	4		beeCount
	m	(Ldtc;Lcuq;ILav$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	av$a	net/minecraft/advancements/critereon/CriterionTriggerBeeNestDestroyed$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	3		item
		p	4		beeCount
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfy;Lcs$a;Ldh$d;)Lao;	a	destroyedBeeNest
		p	0		block
		p	1		itemPredicateBuilder
		p	2		beeCountRange
	m	(Ldtc;Lcuq;I)Z	a	matches
		p	1		state
		p	2		stack
		p	3		count
	m	()Ljava/util/Optional;	b	block
	m	()Ljava/util/Optional;	c	item
	m	()Ldh$d;	d	beesInside
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	item
	f	Ldh$d;	e	beesInside
c	aw	net/minecraft/advancements/critereon/CriterionConditionBlock
	m	()Z	a	requiresNbt
	m	(Laqu;Ljd;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldcz;Ldqh;Ldk;)Z	a	matchesBlockEntity
		p	0		world
		p	1		blockEntity
		p	2		nbtPredicate
	m	(Ldtc;)Z	a	matchesState
		p	1		state
	m	(Ldtg;)Z	a	matches
		p	1		pos
	m	()Ljava/util/Optional;	b	blocks
	m	()Ljava/util/Optional;	c	properties
	m	()Ljava/util/Optional;	d	nbt
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/Optional;	c	blocks
	f	Ljava/util/Optional;	d	properties
	f	Ljava/util/Optional;	e	nbt
c	aw$a	net/minecraft/advancements/critereon/CriterionConditionBlock$a
	m	()Law$a;	a	block
	m	(Lawu;)Law$a;	a	of
		p	1		tag
	m	(Leb$a;)Law$a;	a	setProperties
		p	1		state
	m	(Ljava/util/Collection;)Law$a;	a	of
		p	1		blocks
	m	(Lub;)Law$a;	a	hasNbt
		p	1		nbt
	m	([Ldfy;)Law$a;	a	of
		p	1		blocks
	m	()Law;	b	build
	f	Ljava/util/Optional;	a	blocks
	f	Ljava/util/Optional;	b	properties
	f	Ljava/util/Optional;	c	nbt
c	ax	net/minecraft/advancements/critereon/CriterionTriggerBredAnimals
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcfe;Lcfe;Lbsl;)V	a	trigger
		p	1		player
		p	2		parent
		p	3		partner
		p	4		child
	m	(Lerr;Lerr;Lerr;Lax$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	ax$a	net/minecraft/advancements/critereon/CriterionTriggerBredAnimals$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		parentPredicate
		p	3		partnerPredicate
		p	4		childPredicate
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	bredAnimals
		p	0		child
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;Lerr;Lerr;)Z	a	matches
		p	1		parentContext
		p	2		partnerContext
		p	3		childContext
	m	(Ljava/util/Optional;Lerr;)Z	a	matches
		p	0		parent
		p	1		parentContext
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	bredAnimals
		p	0		parent
		p	1		partner
		p	2		child
	m	()Lao;	b	bredAnimals
	m	()Ljava/util/Optional;	c	parent
	m	()Ljava/util/Optional;	d	partner
	m	()Ljava/util/Optional;	e	child
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	parent
	f	Ljava/util/Optional;	d	partner
	f	Ljava/util/Optional;	e	child
c	ay	net/minecraft/advancements/critereon/CriterionTriggerBrewedPotion
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ljm;)V	a	trigger
		p	1		player
		p	2		potion
	m	(Ljm;Lay$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ay$a	net/minecraft/advancements/critereon/CriterionTriggerBrewedPotion$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljm;)Z	a	matches
		p	1		potion
	m	()Lao;	b	brewedPotion
	m	()Ljava/util/Optional;	c	potion
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	potion
c	az	net/minecraft/advancements/critereon/CriterionTriggerChangedDimension
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakq;Lakq;Laz$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Laqv;Lakq;Lakq;)V	a	trigger
		p	1		player
		p	2		from
		p	3		to
c	az$a	net/minecraft/advancements/critereon/CriterionTriggerChangedDimension$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
	m	()Ljava/util/Optional;	a	player
	m	(Lakq;)Lao;	a	changedDimensionTo
		p	0		to
	m	(Lakq;Lakq;)Lao;	a	changedDimension
		p	0		from
		p	1		to
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lao;	b	changedDimension
	m	(Lakq;)Lao;	b	changedDimensionFrom
		p	0		from
	m	(Lakq;Lakq;)Z	b	matches
		p	1		from
		p	2		to
	m	()Ljava/util/Optional;	c	from
	m	()Ljava/util/Optional;	d	to
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	from
	f	Ljava/util/Optional;	d	to
c	ba	net/minecraft/advancements/critereon/CriterionTriggerChanneledLightning
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;)Lerr;	a	lambda$trigger$0
		p	1		entity
	m	(Laqv;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		victims
	m	(Ljava/util/List;Lba$a;)Z	a	lambda$trigger$1
		p	1		conditions
c	ba$a	net/minecraft/advancements/critereon/CriterionTriggerChanneledLightning$a
	m	(Ljava/util/Optional;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
		p	2		victims
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/Collection;)Z	a	matches
		p	1		victims
	m	([Lbv$a;)Lao;	a	channeledLightning
		p	0		victims
	m	()Ljava/util/List;	b	victims
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/List;	c	victims
c	bb	net/minecraft/advancements/critereon/CollectionContentsPredicate
	m	()Ljava/util/List;	a	unpack
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		predicateCodec
	m	(Ljava/util/List;)Lbb;	a	of
		p	0		predicates
	m	([Ljava/util/function/Predicate;)Lbb;	a	of
		p	0		predicates
c	bb$a	net/minecraft/advancements/critereon/CollectionContentsPredicate$a
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
	m	(Ljava/lang/Object;Ljava/util/function/Predicate;)Z	a	lambda$test$0
		p	1		predicate
	m	()Ljava/util/List;	b	tests
	f	Ljava/util/List;	a	tests
c	bb$b	net/minecraft/advancements/critereon/CollectionContentsPredicate$b
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/function/Predicate;	b	test
	f	Ljava/util/function/Predicate;	a	test
c	bb$c	net/minecraft/advancements/critereon/CollectionContentsPredicate$c
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
c	bc	net/minecraft/advancements/critereon/CollectionCountsPredicate
	m	()Ljava/util/List;	a	unpack
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		predicateCodec
	m	(Ljava/util/List;)Lbc;	a	of
		p	0		entries
	m	([Lbc$a;)Lbc;	a	of
		p	0		entries
c	bc$a	net/minecraft/advancements/critereon/CollectionCountsPredicate$a
	m	()Ljava/util/function/Predicate;	a	test
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		predicateCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Ljava/lang/Iterable;)Z	a	test
		p	1		collection
	m	()Ldh$d;	b	count
	f	Ljava/util/function/Predicate;	a	test
	f	Ldh$d;	b	count
c	bc$b	net/minecraft/advancements/critereon/CollectionCountsPredicate$b
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	b	entries
	f	Ljava/util/List;	a	entries
c	bc$c	net/minecraft/advancements/critereon/CollectionCountsPredicate$c
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Lbc$a;	b	entry
	f	Lbc$a;	a	entry
c	bc$d	net/minecraft/advancements/critereon/CollectionCountsPredicate$d
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Iterable;)Z	a	test
c	bd	net/minecraft/advancements/critereon/CollectionPredicate
	m	()Ljava/util/Optional;	a	contains
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		predicateCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/Optional;	b	counts
	m	()Ljava/util/Optional;	c	size
	f	Ljava/util/Optional;	a	contains
	f	Ljava/util/Optional;	b	counts
	f	Ljava/util/Optional;	c	size
c	be	net/minecraft/advancements/critereon/CriterionTriggerConstructBeacon
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(ILbe$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Laqv;I)V	a	trigger
		p	1		player
		p	2		level
c	be$a	net/minecraft/advancements/critereon/CriterionTriggerConstructBeacon$a
	m	(Ljava/util/Optional;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		level
	m	()Ljava/util/Optional;	a	player
	m	(I)Z	a	matches
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$d;)Lao;	a	constructedBeacon
		p	0		level
	m	()Lao;	b	constructedBeacon
	m	()Ldh$d;	c	level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ldh$d;	c	level
c	bf	net/minecraft/advancements/critereon/CriterionTriggerConsumeItem
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcuq;Lbf$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	bf$a	net/minecraft/advancements/critereon/CriterionTriggerConsumeItem$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcs$a;)Lao;	a	usedItem
		p	0		predicate
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Ldcv;)Lao;	a	usedItem
		p	0		item
	m	()Lao;	b	usedItem
	m	()Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
c	bg	net/minecraft/advancements/critereon/ContextAwarePredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lbg;)Ljava/util/List;	a	lambda$static$0
		p	0		lootContextPredicate
	m	(Lerr;)Z	a	matches
		p	1		context
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	([Levc;)Lbg;	a	create
		p	0		conditions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositePredicates
c	bh	net/minecraft/advancements/critereon/CriterionValidator
	m	(Layu;Ljn$a;)V	<init>	<init>
		p	1		errorReporter
		p	2		conditionsLookup
	m	(Lbg;Leul;Ljava/lang/String;)V	a	validate
		p	1		predicate
		p	2		type
		p	3		path
	m	(Lbg;Ljava/lang/String;)V	a	validateEntity
		p	1		predicate
		p	2		path
	m	(Ljava/lang/String;Lbg;)V	a	lambda$validateEntity$0
		p	2		p
	m	(Ljava/util/List;Leul;Ljava/lang/String;)V	a	validate
		p	1		predicates
		p	2		type
		p	3		path
	m	(Ljava/util/List;Ljava/lang/String;)V	a	validateEntities
		p	1		predicates
		p	2		path
	m	(Ljava/util/Optional;Ljava/lang/String;)V	a	validateEntity
		p	1		predicate
		p	2		path
	f	Layu;	a	reporter
	f	Ljn$a;	b	lootData
c	bi	net/minecraft/advancements/critereon/CriterionTriggerCuredZombieVillager
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lckw;Lcmk;)V	a	trigger
		p	1		player
		p	2		zombie
		p	3		villager
	m	(Lerr;Lerr;Lbi$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	bi$a	net/minecraft/advancements/critereon/CriterionTriggerCuredZombieVillager$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		zombie
		p	3		villager
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;Lerr;)Z	a	matches
		p	1		zombie
		p	2		villager
	m	()Lao;	b	curedZombieVillager
	m	()Ljava/util/Optional;	c	zombie
	m	()Ljava/util/Optional;	d	villager
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	zombie
	f	Ljava/util/Optional;	d	villager
c	bj	net/minecraft/advancements/critereon/CriterionConditionDamage
	m	(Ldh$c;Ldh$c;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		dealt
		p	2		taken
	m	()Ldh$c;	a	dealtDamage
	m	(Laqv;Lbrk;FFZ)Z	a	matches
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldh$c;	b	takenDamage
	m	()Ljava/util/Optional;	c	sourceEntity
	m	()Ljava/util/Optional;	d	blocked
	m	()Ljava/util/Optional;	e	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$c;	b	dealtDamage
	f	Ldh$c;	c	takenDamage
	f	Ljava/util/Optional;	d	sourceEntity
	f	Ljava/util/Optional;	e	blocked
	f	Ljava/util/Optional;	f	type
c	bj$a	net/minecraft/advancements/critereon/CriterionConditionDamage$a
	m	()Lbj$a;	a	damageInstance
	m	(Lbk$a;)Lbj$a;	a	type
		p	1		builder
	m	(Lbk;)Lbj$a;	a	type
		p	1		type
	m	(Lbv;)Lbj$a;	a	sourceEntity
		p	1		sourceEntity
	m	(Ldh$c;)Lbj$a;	a	dealtDamage
		p	1		dealt
	m	(Ljava/lang/Boolean;)Lbj$a;	a	blocked
		p	1		blocked
	m	()Lbj;	b	build
	m	(Ldh$c;)Lbj$a;	b	takenDamage
		p	1		taken
	f	Ldh$c;	a	dealtDamage
	f	Ldh$c;	b	takenDamage
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	blocked
	f	Ljava/util/Optional;	e	type
c	bk	net/minecraft/advancements/critereon/CriterionConditionDamageSource
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		tagPredicates
	m	()Ljava/util/List;	a	tags
	m	(Laqu;Lexc;Lbrk;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		damageSource
	m	(Laqv;Lbrk;)Z	a	matches
		p	1		player
		p	2		damageSource
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	directEntity
	m	()Ljava/util/Optional;	c	sourceEntity
	m	()Ljava/util/Optional;	d	isDirect
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	tags
	f	Ljava/util/Optional;	c	directEntity
	f	Ljava/util/Optional;	d	sourceEntity
	f	Ljava/util/Optional;	e	isDirect
c	bk$a	net/minecraft/advancements/critereon/CriterionConditionDamageSource$a
	m	()Lbk$a;	a	damageType
	m	(Lbv$a;)Lbk$a;	a	direct
		p	1		entity
	m	(Led;)Lbk$a;	a	tag
		p	1		tagPredicate
	m	(Z)Lbk$a;	a	isDirect
		p	1		direct
	m	()Lbk;	b	build
	m	(Lbv$a;)Lbk$a;	b	source
		p	1		entity
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	tags
	f	Ljava/util/Optional;	b	directEntity
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	isDirect
c	bl	net/minecraft/advancements/critereon/DefaultBlockInteractionTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ljd;)V	a	trigger
		p	1		player
		p	2		pos
	m	(Lerr;Lbl$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	bl$a	net/minecraft/advancements/critereon/DefaultBlockInteractionTrigger$a
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbh;Lbg;)V	a	lambda$validate$1
		p	1		location
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	matches
		p	1		location
	m	()Ljava/util/Optional;	b	location
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
c	bm	net/minecraft/advancements/critereon/CriterionConditionDistance
	m	(Ldh$c;Ldh$c;Ldh$c;Ldh$c;Ldh$c;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
		p	4		horizontal
		p	5		absolute
	m	()Ldh$c;	a	x
	m	(DDDDDD)Z	a	matches
		p	1		x0
		p	3		y0
		p	5		z0
		p	7		x1
		p	9		y1
		p	11		z1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$c;)Lbm;	a	horizontal
		p	0		horizontal
	m	()Ldh$c;	b	y
	m	(Ldh$c;)Lbm;	b	vertical
		p	0		y
	m	()Ldh$c;	c	z
	m	(Ldh$c;)Lbm;	c	absolute
		p	0		absolute
	m	()Ldh$c;	d	horizontal
	m	()Ldh$c;	e	absolute
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$c;	b	x
	f	Ldh$c;	c	y
	f	Ldh$c;	d	z
	f	Ldh$c;	e	horizontal
	f	Ldh$c;	f	absolute
c	bn	net/minecraft/advancements/critereon/DistanceTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lexc;)V	a	trigger
		p	1		player
		p	2		startPos
	m	(Laqv;Lexc;Lexc;Lbn$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	bn$a	net/minecraft/advancements/critereon/DistanceTrigger$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		startPos
		p	3		distance
	m	()Ljava/util/Optional;	a	player
	m	(Laqu;Lexc;Lexc;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		endPos
	m	(Lbm;)Lao;	a	travelledThroughNether
		p	0		distance
	m	(Lbv$a;Lbm;)Lao;	a	rideEntityInLava
		p	0		entity
		p	1		distance
	m	(Lbv$a;Lbm;Ldf$a;)Lao;	a	fallFromHeight
		p	0		entity
		p	1		distance
		p	2		startPos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	startPosition
	m	()Ljava/util/Optional;	c	distance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	startPosition
	f	Ljava/util/Optional;	d	distance
c	bo	net/minecraft/advancements/critereon/CriterionTriggerEffectsChanged
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;)V	a	trigger
		p	1		player
		p	2		source
	m	(Laqv;Lerr;Lbo$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	bo$a	net/minecraft/advancements/critereon/CriterionTriggerEffectsChanged$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		effects
		p	3		source
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lerr;)Z	a	matches
		p	1		player
		p	2		context
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	gotEffectsFrom
		p	0		source
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldi$a;)Lao;	a	hasEffects
		p	0		effects
	m	()Ljava/util/Optional;	b	effects
	m	()Ljava/util/Optional;	c	source
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	effects
	f	Ljava/util/Optional;	d	source
c	bp	net/minecraft/advancements/critereon/CriterionTriggerEnchantedItem
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		levels
	m	(Lcuq;ILbp$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	bp$a	net/minecraft/advancements/critereon/CriterionTriggerEnchantedItem$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		levels
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;I)Z	a	matches
		p	1		stack
		p	2		levels
	m	()Lao;	b	enchantedItem
	m	()Ljava/util/Optional;	c	item
	m	()Ldh$d;	d	levels
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ldh$d;	d	levels
c	bq	net/minecraft/advancements/critereon/CriterionConditionEnchantments
	m	(Ljm;Ldh$d;)V	<init>	<init>
		p	1		enchantment
		p	2		levels
	m	(Ljq;Ldh$d;)V	<init>	<init>
		p	1		enchantments
		p	2		levels
	m	()Ljava/util/Optional;	a	enchantments
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldai;)Z	a	containedIn
		p	1		enchantmentsComponent
	m	(Ldai;Ljm;)Z	a	matchesEnchantment
		p	1		enchantmentsComponent
		p	2		enchantment
	m	()Ldh$d;	b	level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	enchantments
	f	Ldh$d;	c	level
c	br	net/minecraft/advancements/critereon/CriterionTriggerEnterBlock
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ldtc;)V	a	trigger
		p	1		player
		p	2		state
	m	(Ldtc;Lbr$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	br$a	net/minecraft/advancements/critereon/CriterionTriggerEnterBlock$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	3		state
	m	()Ljava/util/Optional;	a	player
	m	(Lbr$a;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		conditions
	m	(Lbr$a;Ljm;)Ljava/util/Optional;	a	lambda$validate$4
		p	1		block
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfy;)Lao;	a	entersBlock
		p	0		block
	m	(Ldtc;)Z	a	matches
		p	1		state
	m	(Ljm;Leb;)Ljava/util/Optional;	a	lambda$validate$1
		p	1		state
	m	(Ljm;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
		p	1		property
	m	()Ljava/util/Optional;	b	block
	m	(Lbr$a;)Lcom/mojang/serialization/DataResult;	b	lambda$validate$5
	m	(Ljm;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	()Ljava/util/Optional;	c	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	state
c	bs	net/minecraft/advancements/critereon/CriterionConditionEntityEquipment
	m	()Ljava/util/Optional;	a	head
	m	(Lbsr;)Z	a	matches
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljn;)Lbs;	a	captainPredicate
		p	0		bannerPatternLookup
	m	()Ljava/util/Optional;	b	chest
	m	()Ljava/util/Optional;	c	legs
	m	()Ljava/util/Optional;	d	feet
	m	()Ljava/util/Optional;	e	body
	m	()Ljava/util/Optional;	f	mainhand
	m	()Ljava/util/Optional;	g	offhand
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	head
	f	Ljava/util/Optional;	c	chest
	f	Ljava/util/Optional;	d	legs
	f	Ljava/util/Optional;	e	feet
	f	Ljava/util/Optional;	f	body
	f	Ljava/util/Optional;	g	mainhand
	f	Ljava/util/Optional;	h	offhand
c	bs$a	net/minecraft/advancements/critereon/CriterionConditionEntityEquipment$a
	m	()Lbs$a;	a	equipment
	m	(Lcs$a;)Lbs$a;	a	head
		p	1		item
	m	()Lbs;	b	build
	m	(Lcs$a;)Lbs$a;	b	chest
		p	1		item
	m	(Lcs$a;)Lbs$a;	c	legs
		p	1		item
	m	(Lcs$a;)Lbs$a;	d	feet
		p	1		item
	m	(Lcs$a;)Lbs$a;	e	body
		p	1		item
	m	(Lcs$a;)Lbs$a;	f	mainhand
		p	1		item
	m	(Lcs$a;)Lbs$a;	g	offhand
		p	1		item
	f	Ljava/util/Optional;	a	head
	f	Ljava/util/Optional;	b	chest
	f	Ljava/util/Optional;	c	legs
	f	Ljava/util/Optional;	d	feet
	f	Ljava/util/Optional;	e	body
	f	Ljava/util/Optional;	f	mainhand
	f	Ljava/util/Optional;	g	offhand
c	bt	net/minecraft/advancements/critereon/CriterionConditionEntityFlags
	m	()Ljava/util/Optional;	a	isOnGround
	m	(Lbsr;)Z	a	matches
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	isOnFire
	m	()Ljava/util/Optional;	c	isCrouching
	m	()Ljava/util/Optional;	d	isSprinting
	m	()Ljava/util/Optional;	e	isSwimming
	m	()Ljava/util/Optional;	f	isFlying
	m	()Ljava/util/Optional;	g	isBaby
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	isOnGround
	f	Ljava/util/Optional;	c	isOnFire
	f	Ljava/util/Optional;	d	isCrouching
	f	Ljava/util/Optional;	e	isSprinting
	f	Ljava/util/Optional;	f	isSwimming
	f	Ljava/util/Optional;	g	isFlying
	f	Ljava/util/Optional;	h	isBaby
c	bt$a	net/minecraft/advancements/critereon/CriterionConditionEntityFlags$a
	m	()Lbt$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbt$a;	a	setOnGround
		p	1		onGround
	m	()Lbt;	b	build
	m	(Ljava/lang/Boolean;)Lbt$a;	b	setOnFire
		p	1		onFire
	m	(Ljava/lang/Boolean;)Lbt$a;	c	setCrouching
		p	1		sneaking
	m	(Ljava/lang/Boolean;)Lbt$a;	d	setSprinting
		p	1		sprinting
	m	(Ljava/lang/Boolean;)Lbt$a;	e	setSwimming
		p	1		swimming
	m	(Ljava/lang/Boolean;)Lbt$a;	f	setIsFlying
		p	1		flying
	m	(Ljava/lang/Boolean;)Lbt$a;	g	setIsBaby
		p	1		isBaby
	f	Ljava/util/Optional;	a	isOnGround
	f	Ljava/util/Optional;	b	isOnFire
	f	Ljava/util/Optional;	c	isCrouching
	f	Ljava/util/Optional;	d	isSprinting
	f	Ljava/util/Optional;	e	isSwimming
	f	Ljava/util/Optional;	f	isFlying
	f	Ljava/util/Optional;	g	isBaby
c	bu	net/minecraft/advancements/critereon/CriterionTriggerEntityHurtPlayer
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbrk;FFZ)V	a	trigger
		p	1		player
		p	2		source
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Laqv;Lbrk;FFZLbu$a;)Z	a	lambda$trigger$0
		p	5		conditions
c	bu$a	net/minecraft/advancements/critereon/CriterionTriggerEntityHurtPlayer$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		damage
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lbrk;FFZ)Z	a	matches
		p	1		player
		p	2		damageSource
		p	3		dealt
		p	4		taken
		p	5		blocked
	m	(Lbj$a;)Lao;	a	entityHurtPlayer
		p	0		damageBuilder
	m	(Lbj;)Lao;	a	entityHurtPlayer
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lao;	b	entityHurtPlayer
	m	()Ljava/util/Optional;	c	damage
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	damage
c	bv	net/minecraft/advancements/critereon/CriterionConditionEntity
	m	()Ljava/util/Optional;	a	entityType
	m	(Laqu;Lexc;Lbsr;)Z	a	matches
		p	1		world
		p	2		pos
		p	3		entity
	m	(Laqv;Lbsr;)Z	a	matches
		p	1		player
		p	2		entity
	m	(Lbv$a;)Lbg;	a	wrap
		p	0		builder
	m	(Lbv;)Lbg;	a	wrap
		p	0		predicate
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$static$1
		p	0		entityPredicateCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	1		instance
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	wrap
		p	0		entityPredicate
	m	([Lbv$a;)Ljava/util/List;	a	wrap
		p	0		builders
	m	()Ljava/util/Optional;	b	distanceToPlayer
	m	(Laqu;Lexc;Lbsr;)Z	b	lambda$matches$2
		p	3		entityx
	m	(Laqv;Lbsr;)Lerr;	b	createContext
		p	0		player
		p	1		target
	m	()Ljava/util/Optional;	c	movement
	m	()Lbv$b;	d	location
	m	()Ljava/util/Optional;	e	effects
	m	()Ljava/util/Optional;	f	nbt
	m	()Ljava/util/Optional;	g	flags
	m	()Ljava/util/Optional;	h	equipment
	m	()Ljava/util/Optional;	i	subPredicate
	m	()Ljava/util/Optional;	j	periodicTick
	m	()Ljava/util/Optional;	k	vehicle
	m	()Ljava/util/Optional;	l	passenger
	m	()Ljava/util/Optional;	m	targetedEntity
	m	()Ljava/util/Optional;	n	team
	m	()Ljava/util/Optional;	o	slots
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	ADVANCEMENT_CODEC
	f	Ljava/util/Optional;	c	entityType
	f	Ljava/util/Optional;	d	distanceToPlayer
	f	Ljava/util/Optional;	e	movement
	f	Lbv$b;	f	location
	f	Ljava/util/Optional;	g	effects
	f	Ljava/util/Optional;	h	nbt
	f	Ljava/util/Optional;	i	flags
	f	Ljava/util/Optional;	j	equipment
	f	Ljava/util/Optional;	k	subPredicate
	f	Ljava/util/Optional;	l	periodicTick
	f	Ljava/util/Optional;	m	vehicle
	f	Ljava/util/Optional;	n	passenger
	f	Ljava/util/Optional;	o	targetedEntity
	f	Ljava/util/Optional;	p	team
	f	Ljava/util/Optional;	q	slots
c	bv$a	net/minecraft/advancements/critereon/CriterionConditionEntity$a
	m	()Lbv$a;	a	entity
	m	(I)Lbv$a;	a	periodicTick
		p	1		periodicTick
	m	(Lawu;)Lbv$a;	a	of
		p	1		tag
	m	(Lbm;)Lbv$a;	a	distance
		p	1		distance
	m	(Lbs$a;)Lbv$a;	a	equipment
		p	1		equipment
	m	(Lbs;)Lbv$a;	a	equipment
		p	1		equipment
	m	(Lbsx;)Lbv$a;	a	of
		p	1		type
	m	(Lbt$a;)Lbv$a;	a	flags
		p	1		flags
	m	(Lbv$a;)Lbv$a;	a	vehicle
		p	1		vehicle
	m	(Lbw;)Lbv$a;	a	subPredicate
		p	1		typeSpecific
	m	(Lby;)Lbv$a;	a	entityType
		p	1		type
	m	(Ldf$a;)Lbv$a;	a	located
		p	1		location
	m	(Ldi$a;)Lbv$a;	a	effects
		p	1		effects
	m	(Ldj;)Lbv$a;	a	moving
		p	1		movement
	m	(Ldk;)Lbv$a;	a	nbt
		p	1		nbt
	m	(Ldz;)Lbv$a;	a	slots
		p	1		slots
	m	(Ljava/lang/String;)Lbv$a;	a	team
		p	1		team
	m	()Lbv;	b	build
	m	(Lbv$a;)Lbv$a;	b	passenger
		p	1		passenger
	m	(Ldf$a;)Lbv$a;	b	steppingOn
		p	1		steppingOn
	m	(Lbv$a;)Lbv$a;	c	targetedEntity
		p	1		targetedEntity
	m	(Ldf$a;)Lbv$a;	c	movementAffectedBy
		p	1		movementAffectedBy
	f	Ljava/util/Optional;	a	entityType
	f	Ljava/util/Optional;	b	distanceToPlayer
	f	Ljava/util/Optional;	c	fallDistance
	f	Ljava/util/Optional;	d	movement
	f	Ljava/util/Optional;	e	location
	f	Ljava/util/Optional;	f	located
	f	Ljava/util/Optional;	g	steppingOnLocation
	f	Ljava/util/Optional;	h	movementAffectedBy
	f	Ljava/util/Optional;	i	effects
	f	Ljava/util/Optional;	j	nbt
	f	Ljava/util/Optional;	k	flags
	f	Ljava/util/Optional;	l	equipment
	f	Ljava/util/Optional;	m	subPredicate
	f	Ljava/util/Optional;	n	periodicTick
	f	Ljava/util/Optional;	o	vehicle
	f	Ljava/util/Optional;	p	passenger
	f	Ljava/util/Optional;	q	targetedEntity
	f	Ljava/util/Optional;	r	team
	f	Ljava/util/Optional;	s	slots
c	bv$b	net/minecraft/advancements/critereon/CriterionConditionEntity$b
	m	()Ljava/util/Optional;	a	located
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	steppingOn
	m	()Ljava/util/Optional;	c	affectsMovement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	located
	f	Ljava/util/Optional;	c	steppingOn
	f	Ljava/util/Optional;	d	affectsMovement
c	bw	net/minecraft/advancements/critereon/EntitySubPredicate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	bx	net/minecraft/advancements/critereon/EntitySubPredicates
	m	(Lbsr;)Ljava/util/Optional;	a	lambda$static$13
		p	0		entity
	m	(Ljava/lang/String;Lbx$a;)Lbx$a;	a	register
		p	0		id
		p	1		type
	m	(Ljava/lang/String;Lbx$b;)Lbx$b;	a	register
		p	0		id
		p	1		type
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	register
		p	0		id
		p	1		codec
	m	(Ljm;)Lbw;	a	catVariant
		p	0		catVariant
	m	(Ljq;)Lbw;	a	wolfVariant
		p	0		wolfVariant
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	m	(Lbsr;)Ljava/util/Optional;	b	lambda$static$12
		p	0		entity
	m	(Ljm;)Lbw;	b	frogVariant
		p	0		frogVariant
	m	(Lbsr;)Ljava/util/Optional;	c	lambda$static$11
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	d	lambda$static$10
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	e	lambda$static$9
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	f	lambda$static$8
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	g	lambda$static$7
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	h	lambda$static$6
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	i	lambda$static$5
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	j	lambda$static$4
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	k	lambda$static$3
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	l	lambda$static$2
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	m	lambda$static$1
		p	0		entity
	m	(Lbsr;)Ljava/util/Optional;	n	lambda$static$0
		p	0		entity
	f	Lcom/mojang/serialization/MapCodec;	a	LIGHTNING
	f	Lcom/mojang/serialization/MapCodec;	b	FISHING_HOOK
	f	Lcom/mojang/serialization/MapCodec;	c	PLAYER
	f	Lcom/mojang/serialization/MapCodec;	d	SLIME
	f	Lcom/mojang/serialization/MapCodec;	e	RAIDER
	f	Lbx$b;	f	AXOLOTL
	f	Lbx$b;	g	BOAT
	f	Lbx$b;	h	FOX
	f	Lbx$b;	i	MOOSHROOM
	f	Lbx$b;	j	RABBIT
	f	Lbx$b;	k	HORSE
	f	Lbx$b;	l	LLAMA
	f	Lbx$b;	m	VILLAGER
	f	Lbx$b;	n	PARROT
	f	Lbx$b;	o	TROPICAL_FISH
	f	Lbx$a;	p	PAINTING
	f	Lbx$a;	q	CAT
	f	Lbx$a;	r	FROG
	f	Lbx$a;	s	WOLF
c	bx$a	net/minecraft/advancements/critereon/EntitySubPredicates$a
	m	(Lakq;Ljava/util/function/Function;)V	<init>	<init>
		p	1		registryRef
		p	2		variantGetter
	m	(Lakq;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$2
		p	2		instance
	m	(Lakq;Ljava/util/function/Function;)Lbx$a;	a	create
		p	0		registryRef
		p	1		variantGetter
	m	(Lbx$a$a;)Ljq;	a	lambda$new$0
		p	0		type
	m	(Ljq;)Lbw;	a	createPredicate
		p	1		variants
	m	(Ljq;)Lbx$a$a;	b	lambda$new$1
		p	1		entries
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/util/function/Function;	b	getter
c	bx$a$a	net/minecraft/advancements/critereon/EntitySubPredicates$a$a
	m	(Lbx$a;Ljq;)V	<init>	<init>
		p	2		variants
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	f	Lbx$a;	b	this$0
	f	Ljq;	c	variants
c	bx$b	net/minecraft/advancements/critereon/EntitySubPredicates$b
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)V	<init>	<init>
		p	1		variantCodec
		p	2		variantGetter
	m	(Lbx$b$a;)Ljava/lang/Object;	a	lambda$new$0
		p	0		predicate
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$2
		p	2		instance
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lbx$b;	a	create
		p	0		codec
		p	1		variantGetter
	m	(Ljava/lang/Object;)Lbw;	a	createPredicate
		p	1		variant
	m	(Ljz;Ljava/util/function/Function;)Lbx$b;	a	create
		p	0		registry
		p	1		variantGetter
	m	(Ljava/lang/Object;)Lbx$b$a;	b	lambda$new$1
		p	1		variant
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/util/function/Function;	b	getter
c	bx$b$a	net/minecraft/advancements/critereon/EntitySubPredicates$b$a
	m	(Lbx$b;Ljava/lang/Object;)V	<init>	<init>
		p	2		variant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	f	Lbx$b;	b	this$0
	f	Ljava/lang/Object;	c	variant
c	by	net/minecraft/advancements/critereon/CriterionConditionEntityType
	m	()Ljq;	a	types
	m	(Lawu;)Lby;	a	of
		p	0		tag
	m	(Lbsx;)Lby;	a	of
		p	0		type
	m	(Lbsx;)Z	b	matches
		p	1		type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljq;	b	types
c	bz	net/minecraft/advancements/critereon/FallAfterExplosionTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lexc;Lbsr;)V	a	trigger
		p	1		player
		p	2		startPosition
		p	3		cause
	m	(Laqv;Lexc;Lexc;Lerr;Lbz$a;)Z	a	lambda$trigger$0
		p	4		conditions
c	bz$a	net/minecraft/advancements/critereon/FallAfterExplosionTrigger$a
	m	()Ljava/util/Optional;	a	player
	m	(Laqu;Lexc;Lexc;Lerr;)Z	a	matches
		p	1		world
		p	2		startPosition
		p	3		endPosition
		p	4		cause
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbm;Lbv$a;)Lao;	a	fallAfterExplosion
		p	0		distance
		p	1		cause
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	startPosition
	m	()Ljava/util/Optional;	c	distance
	m	()Ljava/util/Optional;	d	cause
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	startPosition
	f	Ljava/util/Optional;	d	distance
	f	Ljava/util/Optional;	e	cause
c	ca	net/minecraft/advancements/critereon/CriterionTriggerFilledBucket
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcuq;Lca$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ca$a	net/minecraft/advancements/critereon/CriterionTriggerFilledBucket$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcs$a;)Lao;	a	filledBucket
		p	0		item
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	()Ljava/util/Optional;	b	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
c	cb	net/minecraft/advancements/critereon/CriterionConditionInOpenWater
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Z)Lcb;	a	inOpenWater
		p	0		inOpenWater
	m	()Ljava/util/Optional;	b	inOpenWater
	f	Lcb;	b	ANY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ljava/util/Optional;	d	inOpenWater
c	cc	net/minecraft/advancements/critereon/CriterionTriggerFishingRodHooked
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;Lcnl;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		rod
		p	3		bobber
		p	4		fishingLoots
	m	(Lcuq;Lerr;Ljava/util/Collection;Lcc$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	cc$a	net/minecraft/advancements/critereon/CriterionTriggerFishingRodHooked$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		rod
		p	3		hookedEntity
		p	4		caughtItem
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lerr;Ljava/util/Collection;)Z	a	matches
		p	1		rodStack
		p	2		hookedEntity
		p	3		fishingLoots
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	fishedItem
		p	0		rod
		p	1		hookedEntity
		p	2		caughtItem
	m	()Ljava/util/Optional;	b	rod
	m	()Ljava/util/Optional;	c	entity
	m	()Ljava/util/Optional;	d	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	rod
	f	Ljava/util/Optional;	d	entity
	f	Ljava/util/Optional;	e	item
c	cd	net/minecraft/advancements/critereon/CriterionConditionFluid
	m	()Ljava/util/Optional;	a	fluids
	m	(Laqu;Ljd;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	fluids
	f	Ljava/util/Optional;	c	properties
c	cd$a	net/minecraft/advancements/critereon/CriterionConditionFluid$a
	m	()Lcd$a;	a	fluid
	m	(Leb;)Lcd$a;	a	setProperties
		p	1		state
	m	(Lepd;)Lcd$a;	a	of
		p	1		fluid
	m	(Ljq;)Lcd$a;	a	of
		p	1		tag
	m	()Lcd;	b	build
	f	Ljava/util/Optional;	a	fluids
	f	Ljava/util/Optional;	b	properties
c	ce	net/minecraft/advancements/critereon/GameTypePredicate
	m	()Ljava/util/List;	a	types
	m	(Ldct;)Z	a	matches
		p	1		gameMode
	m	([Ldct;)Lce;	a	of
		p	0		gameModes
	f	Lce;	a	ANY
	f	Lce;	b	SURVIVAL_LIKE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/List;	d	types
c	cf	net/minecraft/advancements/critereon/CriterionTriggerImpossible
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakz;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lakz;Laq$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Lakz;Laq$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
c	cf$a	net/minecraft/advancements/critereon/CriterionTriggerImpossible$a
	m	(Lbh;)V	a	validate
		p	1		validator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cg	net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcmw;Lcuq;)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
	m	(Laqv;Lcmw;Lcuq;III)V	a	trigger
		p	1		player
		p	2		inventory
		p	3		stack
		p	4		full
		p	5		empty
		p	6		occupied
	m	(Lcmw;Lcuq;IIILcg$a;)Z	a	lambda$trigger$0
		p	5		conditions
c	cg$a	net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged$a
	m	(Ljava/util/Optional;Lcg$a$a;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
	m	()Ljava/util/Optional;	a	player
	m	(I)[Lcs;	a	lambda$hasItems$1
	m	(Lcmw;Lcuq;III)Z	a	matches
		p	1		inventory
		p	2		stack
		p	3		full
		p	4		empty
		p	5		occupied
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcs;)Z	a	lambda$matches$2
		p	1		item
	m	([Lcs$a;)Lao;	a	hasItems
		p	0		items
	m	([Lcs;)Lao;	a	hasItems
		p	0		items
	m	([Ldcv;)Lao;	a	hasItems
		p	0		items
	m	()Lcg$a$a;	b	slots
	m	()Ljava/util/List;	c	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Lcg$a$a;	c	slots
	f	Ljava/util/List;	d	items
c	cg$a$a	net/minecraft/advancements/critereon/CriterionTriggerInventoryChanged$a$a
	m	()Ldh$d;	a	occupied
	m	(III)Z	a	matches
		p	1		full
		p	2		empty
		p	3		occupied
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldh$d;	b	full
	m	()Ldh$d;	c	empty
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcg$a$a;	b	ANY
	f	Ldh$d;	c	occupied
	f	Ldh$d;	d	full
	f	Ldh$d;	e	empty
c	ch	net/minecraft/advancements/critereon/ItemAttributeModifiersPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcxn;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	modifiers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	modifiers
c	ch$a	net/minecraft/advancements/critereon/ItemAttributeModifiersPredicate$a
	m	()Ljava/util/Optional;	a	attribute
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcxn$b;)Z	a	test
	m	()Ljava/util/Optional;	b	id
	m	()Ldh$c;	c	amount
	m	()Ljava/util/Optional;	d	operation
	m	()Ljava/util/Optional;	e	slot
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	attribute
	f	Ljava/util/Optional;	c	id
	f	Ldh$c;	d	amount
	f	Ljava/util/Optional;	e	operation
	f	Ljava/util/Optional;	f	slot
c	ci	net/minecraft/advancements/critereon/ItemBundlePredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcxf;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	items
c	cj	net/minecraft/advancements/critereon/ItemContainerPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcxo;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	items
c	ck	net/minecraft/advancements/critereon/ItemCustomDataPredicate
	m	()Ldk;	a	value
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Ldk;)Lck;	a	customData
		p	0		value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldk;	c	value
c	cl	net/minecraft/advancements/critereon/ItemDamagePredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ljava/lang/Integer;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Ldh$d;)Lcl;	a	durability
		p	0		durability
	m	()Ldh$d;	b	durability
	m	()Ldh$d;	c	damage
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$d;	c	durability
	f	Ldh$d;	d	damage
c	cm	net/minecraft/advancements/critereon/CriterionTriggerItemDurabilityChanged
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;I)V	a	trigger
		p	1		player
		p	2		stack
		p	3		durability
	m	(Lcuq;ILcm$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	cm$a	net/minecraft/advancements/critereon/CriterionTriggerItemDurabilityChanged$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ldh$d;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		durability
		p	4		delta
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;I)Z	a	matches
		p	1		stack
		p	2		durability
	m	(Ljava/util/Optional;Ldh$d;)Lao;	a	changedDurability
		p	0		item
		p	1		durability
	m	(Ljava/util/Optional;Ljava/util/Optional;Ldh$d;)Lao;	a	changedDurability
		p	0		playerPredicate
		p	1		item
		p	2		durability
	m	()Ljava/util/Optional;	b	item
	m	()Ldh$d;	c	durability
	m	()Ldh$d;	d	delta
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ldh$d;	d	durability
	f	Ldh$d;	e	delta
c	cn	net/minecraft/advancements/critereon/ItemEnchantmentsPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		enchantments
	m	(Lcuq;Ldai;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Ljava/util/List;)Lcn$a;	a	enchantments
		p	0		enchantments
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		predicateFunction
	m	()Ljava/util/List;	b	enchantments
	m	(Ljava/util/List;)Lcn$b;	b	storedEnchantments
		p	0		storedEnchantments
	f	Ljava/util/List;	a	enchantments
c	cn$a	net/minecraft/advancements/critereon/ItemEnchantmentsPredicate$a
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		enchantments
	m	()Lkp;	a	componentType
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cn$b	net/minecraft/advancements/critereon/ItemEnchantmentsPredicate$b
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		enchantments
	m	()Lkp;	a	componentType
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	co	net/minecraft/advancements/critereon/ItemFireworkExplosionPredicate
	m	()Lkp;	a	componentType
	m	(Lcuq;Lcxl;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Lco$a;	b	predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lco$a;	c	predicate
c	co$a	net/minecraft/advancements/critereon/ItemFireworkExplosionPredicate$a
	m	()Ljava/util/Optional;	a	shape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcxl;)Z	a	test
	m	()Ljava/util/Optional;	b	twinkle
	m	()Ljava/util/Optional;	c	trail
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	shape
	f	Ljava/util/Optional;	c	twinkle
	f	Ljava/util/Optional;	d	trail
c	cp	net/minecraft/advancements/critereon/ItemFireworksPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcxm;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	explosions
	m	()Ldh$d;	c	flightDuration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	explosions
	f	Ldh$d;	d	flightDuration
c	cq	net/minecraft/advancements/critereon/ItemJukeboxPlayablePredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcuu;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Lcq;	b	any
	m	()Ljava/util/Optional;	c	song
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	song
c	cr	net/minecraft/advancements/critereon/ItemPotionsPredicate
	m	()Lkp;	a	componentType
	m	(Lcuq;Lcwu;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Ljq;)Lct;	a	potions
		p	0		potions
	m	()Ljq;	b	potions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljq;	c	potions
c	cs	net/minecraft/advancements/critereon/CriterionConditionItem
	m	()Ljava/util/Optional;	a	items
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;)Z	a	test
		p	1		stack
	m	()Ldh$d;	b	count
	m	()Lko;	c	components
	m	()Ljava/util/Map;	d	subPredicates
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	items
	f	Ldh$d;	c	count
	f	Lko;	d	components
	f	Ljava/util/Map;	e	subPredicates
c	cs$a	net/minecraft/advancements/critereon/CriterionConditionItem$a
	m	()Lcs$a;	a	item
	m	(Lawu;)Lcs$a;	a	of
		p	1		tag
	m	(Lct$a;Lct;)Lcs$a;	a	withSubPredicate
		p	1		type
		p	2		subPredicate
	m	(Ldcv;)Ljm;	a	lambda$of$0
		p	0		item
	m	(Ldh$d;)Lcs$a;	a	withCount
		p	1		count
	m	(Lko;)Lcs$a;	a	hasComponents
		p	1		componentPredicate
	m	([Ldcv;)Lcs$a;	a	of
		p	1		items
	m	()Lcs;	b	build
	f	Ljava/util/Optional;	a	items
	f	Ldh$d;	b	count
	f	Lko;	c	components
	f	Lcom/google/common/collect/ImmutableMap$Builder;	d	subPredicates
c	ct	net/minecraft/advancements/critereon/ItemSubPredicate
	m	(Lcuq;)Z	a	matches
		p	1		stack
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	ct$a	net/minecraft/advancements/critereon/ItemSubPredicate$a
	m	()Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/Codec;	a	codec
c	cu	net/minecraft/advancements/critereon/ItemSubPredicates
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lct$a;	a	register
		p	0		id
		p	1		codec
	m	(Ljz;)Lct$a;	a	bootstrap
		p	0		registry
	f	Lct$a;	a	DAMAGE
	f	Lct$a;	b	ENCHANTMENTS
	f	Lct$a;	c	STORED_ENCHANTMENTS
	f	Lct$a;	d	POTIONS
	f	Lct$a;	e	CUSTOM_DATA
	f	Lct$a;	f	CONTAINER
	f	Lct$a;	g	BUNDLE_CONTENTS
	f	Lct$a;	h	FIREWORK_EXPLOSION
	f	Lct$a;	i	FIREWORKS
	f	Lct$a;	j	WRITABLE_BOOK
	f	Lct$a;	k	WRITTEN_BOOK
	f	Lct$a;	l	ATTRIBUTE_MODIFIERS
	f	Lct$a;	m	ARMOR_TRIM
	f	Lct$a;	n	JUKEBOX_PLAYABLE
c	cv	net/minecraft/advancements/critereon/ItemTrimPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcwx;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	material
	m	()Ljava/util/Optional;	c	pattern
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	material
	f	Ljava/util/Optional;	d	pattern
c	cw	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ljd;Lcuq;)V	a	trigger
		p	1		player
		p	2		pos
		p	3		stack
	m	(Lerr;Lcw$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	cw$a	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		location
	m	()Ljava/util/Optional;	a	player
	m	(I)[Levc;	a	lambda$placedBlock$1
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbh;Lbg;)V	a	lambda$validate$2
		p	1		location
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldf$a;Lcs$a;)Lao;	a	itemUsedOnBlock
		p	0		location
		p	1		item
	m	(Ldfy;)Lao;	a	placedBlock
		p	0		block
	m	(Lerr;)Z	a	matches
		p	1		location
	m	([Levc$a;)Lao;	a	placedBlock
		p	0		locationConditions
	m	()Ljava/util/Optional;	b	location
	m	(Ldf$a;Lcs$a;)Lao;	b	allayDropItemOnBlock
		p	0		location
		p	1		item
	m	(Ldf$a;Lcs$a;)Lcw$a;	c	itemUsedOnLocation
		p	0		location
		p	1		item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
c	cx	net/minecraft/advancements/critereon/ItemWritableBookPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcya;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	pages
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	pages
c	cx$a	net/minecraft/advancements/critereon/ItemWritableBookPredicate$a
	m	()Ljava/lang/String;	a	contents
	m	(Larl;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	contents
c	cy	net/minecraft/advancements/critereon/ItemWrittenBookPredicate
	m	()Lkp;	a	componentType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Lcyb;)Z	a	matches
		p	1		stack
		p	2		component
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
	m	()Ljava/util/Optional;	b	pages
	m	()Ljava/util/Optional;	c	author
	m	()Ljava/util/Optional;	d	title
	m	()Ldh$d;	e	generation
	m	()Ljava/util/Optional;	f	resolved
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	pages
	f	Ljava/util/Optional;	d	author
	f	Ljava/util/Optional;	e	title
	f	Ldh$d;	f	generation
	f	Ljava/util/Optional;	g	resolved
c	cy$a	net/minecraft/advancements/critereon/ItemWrittenBookPredicate$a
	m	()Lwz;	a	contents
	m	(Larl;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lwz;	b	contents
c	cz	net/minecraft/advancements/critereon/CriterionTriggerKilledByCrossbow
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ljava/util/Collection;)V	a	trigger
		p	1		player
		p	2		piercingKilledEntities
	m	(Ljava/util/List;Ljava/util/Set;Lcz$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	cz$a	net/minecraft/advancements/critereon/CriterionTriggerKilledByCrossbow$a
	m	(Ljava/util/Optional;Ljava/util/List;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		victims
		p	3		uniqueEntityTypes
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$d;)Lao;	a	crossbowKilled
		p	0		uniqueEntityTypes
	m	(Ljava/util/Collection;I)Z	a	matches
		p	1		victimContexts
		p	2		uniqueEntityTypeCount
	m	([Lbv$a;)Lao;	a	crossbowKilled
		p	0		victimPredicates
	m	()Ljava/util/List;	b	victims
	m	()Ldh$d;	c	uniqueEntityTypes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/List;	c	victims
	f	Ldh$d;	d	uniqueEntityTypes
c	da	net/minecraft/advancements/critereon/CriterionTriggerKilled
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;Lbrk;)V	a	trigger
		p	1		player
		p	2		entity
		p	3		killingDamage
	m	(Laqv;Lerr;Lbrk;Lda$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	da$a	net/minecraft/advancements/critereon/CriterionTriggerKilled$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		entity
		p	3		killingBlow
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lerr;Lbrk;)Z	a	matches
		p	1		player
		p	2		entity
		p	3		killingBlow
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
	m	(Lbv$a;Lbk$a;)Lao;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlowBuilder
	m	(Lbv$a;Ljava/util/Optional;)Lao;	a	playerKilledEntity
		p	0		killedEntityPredicateBuilder
		p	1		killingBlow
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/Optional;)Lao;	a	playerKilledEntity
		p	0		entity
	m	(Ljava/util/Optional;Lbk$a;)Lao;	a	playerKilledEntity
		p	0		entity
		p	1		damageSourcePredicateBuilder
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	playerKilledEntity
		p	0		entity
		p	1		killingBlow
	m	()Lao;	b	playerKilledEntity
	m	(Lbv$a;)Lao;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
	m	(Lbv$a;Lbk$a;)Lao;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		damageSourcePredicateBuilder
	m	(Lbv$a;Ljava/util/Optional;)Lao;	b	entityKilledPlayer
		p	0		killerEntityPredicateBuilder
		p	1		killingBlow
	m	(Ljava/util/Optional;)Lao;	b	entityKilledPlayer
		p	0		entity
	m	(Ljava/util/Optional;Lbk$a;)Lao;	b	entityKilledPlayer
		p	0		entity
		p	1		damageSourcePredicateBuilder
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lao;	b	entityKilledPlayer
		p	0		entity
		p	1		killingBlow
	m	()Lao;	c	playerKilledEntityNearSculkCatalyst
	m	()Lao;	d	entityKilledPlayer
	m	()Ljava/util/Optional;	e	entityPredicate
	m	()Ljava/util/Optional;	f	killingBlow
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entityPredicate
	f	Ljava/util/Optional;	d	killingBlow
c	db	net/minecraft/advancements/critereon/CriterionTriggerLevitation
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lexc;I)V	a	trigger
		p	1		player
		p	2		startPos
		p	3		duration
	m	(Laqv;Lexc;ILdb$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	db$a	net/minecraft/advancements/critereon/CriterionTriggerLevitation$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ldh$d;)V	<init>	<init>
		p	1		playerPredicate
		p	2		distance
		p	3		duration
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lexc;I)Z	a	matches
		p	1		player
		p	2		distance
		p	3		duration
	m	(Lbm;)Lao;	a	levitated
		p	0		distance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	distance
	m	()Ldh$d;	c	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	distance
	f	Ldh$d;	d	duration
c	dc	net/minecraft/advancements/critereon/CriterionConditionLight
	m	(Ldh$d;)V	<init>	<init>
		p	1		range
	m	()Ldh$d;	a	composite
	m	(Laqu;Ljd;)Z	a	matches
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$d;	b	composite
c	dc$a	net/minecraft/advancements/critereon/CriterionConditionLight$a
	m	()Ldc$a;	a	light
	m	(Ldh$d;)Ldc$a;	a	setComposite
		p	1		light
	m	()Ldc;	b	build
	f	Ldh$d;	a	composite
c	dd	net/minecraft/advancements/critereon/LightningBoltPredicate
	m	(Ldh$d;Ljava/util/Optional;)V	<init>	<init>
		p	1		blocksSetOnFire
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Lexc;Lbsr;)Z	a	lambda$matches$1
		p	3		struckEntity
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$d;)Ldd;	a	blockSetOnFire
		p	0		blocksSetOnFire
	m	()Ldh$d;	b	blocksSetOnFire
	m	()Ljava/util/Optional;	c	entityStruck
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldh$d;	c	blocksSetOnFire
	f	Ljava/util/Optional;	d	entityStruck
c	de	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;)Lerr;	a	lambda$trigger$0
		p	1		bystander
	m	(Laqv;Lbtm;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		lightning
		p	3		bystanders
	m	(Lerr;Ljava/util/List;Lde$a;)Z	a	lambda$trigger$1
		p	2		conditions
c	de$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		lightning
		p	3		bystander
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;Ljava/util/List;)Z	a	matches
		p	1		lightning
		p	2		bystanders
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	lightningStrike
		p	0		lightning
		p	1		bystander
	m	()Ljava/util/Optional;	b	lightning
	m	()Ljava/util/Optional;	c	bystander
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	lightning
	f	Ljava/util/Optional;	d	bystander
c	df	net/minecraft/advancements/critereon/CriterionConditionLocation
	m	()Ljava/util/Optional;	a	position
	m	(Laqu;DDD)Z	a	matches
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	biomes
	m	()Ljava/util/Optional;	c	structures
	m	()Ljava/util/Optional;	d	dimension
	m	()Ljava/util/Optional;	e	smokey
	m	()Ljava/util/Optional;	f	light
	m	()Ljava/util/Optional;	g	block
	m	()Ljava/util/Optional;	h	fluid
	m	()Ljava/util/Optional;	i	canSeeSky
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	position
	f	Ljava/util/Optional;	c	biomes
	f	Ljava/util/Optional;	d	structures
	f	Ljava/util/Optional;	e	dimension
	f	Ljava/util/Optional;	f	smokey
	f	Ljava/util/Optional;	g	light
	f	Ljava/util/Optional;	h	block
	f	Ljava/util/Optional;	i	fluid
	f	Ljava/util/Optional;	j	canSeeSky
c	df$a	net/minecraft/advancements/critereon/CriterionConditionLocation$a
	m	()Ldf$a;	a	location
	m	(Lakq;)Ldf$a;	a	inDimension
		p	0		dimension
	m	(Law$a;)Ldf$a;	a	setBlock
		p	1		block
	m	(Lcd$a;)Ldf$a;	a	setFluid
		p	1		fluid
	m	(Ldc$a;)Ldf$a;	a	setLight
		p	1		light
	m	(Ldh$c;)Ldf$a;	a	atYLocation
		p	0		y
	m	(Ljm;)Ldf$a;	a	inBiome
		p	0		biome
	m	(Ljq;)Ldf$a;	a	setBiomes
		p	1		biome
	m	(Z)Ldf$a;	a	setSmokey
		p	1		smokey
	m	()Ldf;	b	build
	m	(Lakq;)Ldf$a;	b	setDimension
		p	1		dimension
	m	(Ldh$c;)Ldf$a;	b	setX
		p	1		x
	m	(Ljm;)Ldf$a;	b	inStructure
		p	0		structure
	m	(Ljq;)Ldf$a;	b	setStructures
		p	1		structure
	m	(Z)Ldf$a;	b	setCanSeeSky
		p	1		canSeeSky
	m	(Ldh$c;)Ldf$a;	c	setY
		p	1		y
	m	(Ldh$c;)Ldf$a;	d	setZ
		p	1		z
	f	Ldh$c;	a	x
	f	Ldh$c;	b	y
	f	Ldh$c;	c	z
	f	Ljava/util/Optional;	d	biomes
	f	Ljava/util/Optional;	e	structures
	f	Ljava/util/Optional;	f	dimension
	f	Ljava/util/Optional;	g	smokey
	f	Ljava/util/Optional;	h	light
	f	Ljava/util/Optional;	i	block
	f	Ljava/util/Optional;	j	fluid
	f	Ljava/util/Optional;	k	canSeeSky
c	df$b	net/minecraft/advancements/critereon/CriterionConditionLocation$b
	m	()Ldh$c;	a	x
	m	(DDD)Z	a	matches
		p	1		x
		p	3		y
		p	5		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$c;Ldh$c;Ldh$c;)Ljava/util/Optional;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	()Ldh$c;	b	y
	m	()Ldh$c;	c	z
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$c;	b	x
	f	Ldh$c;	c	y
	f	Ldh$c;	d	z
c	dg	net/minecraft/advancements/critereon/CriterionTriggerPlayerGeneratesContainerLoot
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakq;Ldg$a;)Z	a	lambda$trigger$0
		p	1		conditions
	m	(Laqv;Lakq;)V	a	trigger
		p	1		player
		p	2		lootTable
c	dg$a	net/minecraft/advancements/critereon/CriterionTriggerPlayerGeneratesContainerLoot$a
	m	(Ljava/util/Optional;Lakq;)V	<init>	<init>
		p	1		playerPredicate
	m	()Ljava/util/Optional;	a	player
	m	(Lakq;)Lao;	a	lootTableUsed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lakq;	b	lootTable
	m	(Lakq;)Z	b	matches
		p	1		lootTable
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Lakq;	c	lootTable
c	dh	net/minecraft/advancements/critereon/CriterionConditionValue
	m	()Ljava/util/Optional;	a	min
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ldh$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Ldh;	a	fromReader
		p	0		commandReader
		p	1		commandFactory
		p	2		converter
		p	3		exceptionTypeSupplier
		p	4		mapper
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Optional;	a	readNumber
		p	0		reader
		p	1		converter
		p	2		exceptionTypeSupplier
	m	(Lcom/mojang/serialization/Codec;Ldh$a;)Lcom/mojang/serialization/Codec;	a	createCodec
		p	0		valueCodec
		p	1		rangeFactory
	m	(Lcom/mojang/serialization/Codec;Ldh$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$0
		p	2		instance
	m	(Ldh$a;Lcom/mojang/datafixers/util/Either;)Ldh;	a	lambda$createCodec$3
		p	1		either
	m	(Ldh$a;Ljava/lang/Number;)Ldh;	a	lambda$createCodec$2
		p	1		value
	m	(Ldh;)Lcom/mojang/datafixers/util/Either;	a	lambda$createCodec$4
		p	0		range
	m	()Ljava/util/Optional;	b	max
	m	(Ldh;)Ldh;	b	lambda$createCodec$1
		p	0		range
	m	()Z	c	isAny
	m	()Ljava/util/Optional;	d	unwrapPoint
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
c	dh$a	net/minecraft/advancements/critereon/CriterionConditionValue$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)Ldh;	create	create
		p	1		min
		p	2		max
c	dh$b	net/minecraft/advancements/critereon/CriterionConditionValue$b
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Ldh;	create	create
		p	1		reader
		p	2		min
		p	3		max
c	dh$c	net/minecraft/advancements/critereon/CriterionConditionValue$DoubleRange
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Optional;	a	min
	m	(D)Ldh$c;	a	exactly
		p	0		value
	m	(DD)Ldh$c;	a	between
		p	0		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;)Ldh$c;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Ldh$c;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Ldh$c;	a	fromReader
		p	0		reader
		p	1		mapper
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	lambda$fromReader$1
		p	0		value
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
		p	0		value
	m	()Ljava/util/Optional;	b	max
	m	(D)Ldh$c;	b	atLeast
		p	0		value
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$squareOpt$0
		p	0		d
	m	(D)Ldh$c;	c	atMost
		p	0		value
	m	(D)Z	d	matches
		p	1		value
	m	()Ljava/util/Optional;	e	minSq
	m	(D)Z	e	matchesSqr
		p	1		value
	m	()Ljava/util/Optional;	f	maxSq
	f	Ldh$c;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Optional;	e	min
	f	Ljava/util/Optional;	f	max
	f	Ljava/util/Optional;	g	minSq
	f	Ljava/util/Optional;	h	maxSq
c	dh$d	net/minecraft/advancements/critereon/CriterionConditionValue$IntegerRange
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Optional;	a	min
	m	(I)Ldh$d;	a	exactly
		p	0		value
	m	(II)Ldh$d;	a	between
		p	0		min
		p	1		max
	m	(J)Z	a	matchesSqr
		p	1		value
	m	(Lcom/mojang/brigadier/StringReader;)Ldh$d;	a	fromReader
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Ldh$d;	a	create
		p	0		reader
		p	1		min
		p	2		max
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Ldh$d;	a	fromReader
		p	0		reader
		p	1		converter
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$fromReader$2
		p	0		value
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
		p	0		value
	m	()Ljava/util/Optional;	b	max
	m	(I)Ldh$d;	b	atLeast
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	b	lambda$new$1
		p	0		i
	m	(I)Ldh$d;	c	atMost
		p	0		value
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	c	lambda$squareOpt$0
		p	0		i
	m	(I)Z	d	matches
		p	1		value
	m	()Ljava/util/Optional;	e	minSq
	m	()Ljava/util/Optional;	f	maxSq
	f	Ldh$d;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/Optional;	e	min
	f	Ljava/util/Optional;	f	max
	f	Ljava/util/Optional;	g	minSq
	f	Ljava/util/Optional;	h	maxSq
c	di	net/minecraft/advancements/critereon/CriterionConditionMobEffect
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		effects
	m	()Ljava/util/Map;	a	effectMap
	m	(Lbsr;)Z	a	matches
		p	1		entity
	m	(Lbtn;)Z	a	matches
		p	1		livingEntity
	m	(Ljava/util/Map;)Z	a	matches
		p	1		effects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	effectMap
c	di$a	net/minecraft/advancements/critereon/CriterionConditionMobEffect$a
	m	()Ldi$a;	a	effects
	m	(Ljm;)Ldi$a;	a	and
		p	1		effect
	m	(Ljm;Ldi$b;)Ldi$a;	a	and
		p	1		effect
		p	2		effectData
	m	()Ljava/util/Optional;	b	build
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	effectMap
c	di$b	net/minecraft/advancements/critereon/CriterionConditionMobEffect$b
	m	(Ldh$d;Ldh$d;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		amplifier
		p	2		duration
	m	()Ldh$d;	a	amplifier
	m	(Lbrz;)Z	a	matches
		p	1		statusEffectInstance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldh$d;	b	duration
	m	()Ljava/util/Optional;	c	ambient
	m	()Ljava/util/Optional;	d	visible
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$d;	b	amplifier
	f	Ldh$d;	c	duration
	f	Ljava/util/Optional;	d	ambient
	f	Ljava/util/Optional;	e	visible
c	dj	net/minecraft/advancements/critereon/MovementPredicate
	m	()Ldh$c;	a	x
	m	(DDDD)Z	a	matches
		p	1		x
		p	3		y
		p	5		z
		p	7		fallDistance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$c;)Ldj;	a	speed
		p	0		speed
	m	()Ldh$c;	b	y
	m	(Ldh$c;)Ldj;	b	horizontalSpeed
		p	0		horizontalSpeed
	m	()Ldh$c;	c	z
	m	(Ldh$c;)Ldj;	c	verticalSpeed
		p	0		verticalSpeed
	m	()Ldh$c;	d	speed
	m	(Ldh$c;)Ldj;	d	fallDistance
		p	0		fallDistance
	m	()Ldh$c;	e	horizontalSpeed
	m	()Ldh$c;	f	verticalSpeed
	m	()Ldh$c;	g	fallDistance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldh$c;	b	x
	f	Ldh$c;	c	y
	f	Ldh$c;	d	z
	f	Ldh$c;	e	speed
	f	Ldh$c;	f	horizontalSpeed
	f	Ldh$c;	g	verticalSpeed
	f	Ldh$c;	h	fallDistance
c	dk	net/minecraft/advancements/critereon/CriterionConditionNBT
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	()Lub;	a	tag
	m	(Lbsr;)Z	a	matches
		p	1		entity
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Luy;)Z	a	matches
		p	1		element
	m	(Lbsr;)Lub;	b	getEntityTagToCompare
		p	0		entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lub;	c	tag
c	dl	net/minecraft/advancements/critereon/PickedUpItemTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;Lbsr;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Laqv;Lcuq;Lerr;Ldl$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	dl$a	net/minecraft/advancements/critereon/PickedUpItemTrigger$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		entity
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lcuq;Lerr;)Z	a	matches
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lbg;Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	thrownItemPickedUpByEntity
		p	0		player
		p	1		item
		p	2		entity
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	thrownItemPickedUpByPlayer
		p	0		playerPredicate
		p	1		item
		p	2		entity
	m	()Ljava/util/Optional;	b	item
	m	()Ljava/util/Optional;	c	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ljava/util/Optional;	d	entity
c	dm	net/minecraft/advancements/critereon/CriterionTriggerPlayerHurtEntity
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;Lbrk;FFZ)V	a	trigger
		p	1		player
		p	2		entity
		p	3		damage
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Laqv;Lerr;Lbrk;FFZLdm$a;)Z	a	lambda$trigger$0
		p	6		conditions
c	dm$a	net/minecraft/advancements/critereon/CriterionTriggerPlayerHurtEntity$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		damage
		p	3		entity
	m	()Ljava/util/Optional;	a	player
	m	(Laqv;Lerr;Lbrk;FFZ)Z	a	matches
		p	1		player
		p	2		entity
		p	3		damageSource
		p	4		dealt
		p	5		taken
		p	6		blocked
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbj$a;)Lao;	a	playerHurtEntityWithDamage
		p	0		damage
	m	(Lbj$a;Ljava/util/Optional;)Lao;	a	playerHurtEntity
		p	0		damage
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/Optional;)Lao;	a	playerHurtEntityWithDamage
		p	0		damage
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lao;	a	playerHurtEntity
		p	0		damage
		p	1		entity
	m	()Lao;	b	playerHurtEntity
	m	(Ljava/util/Optional;)Lao;	b	playerHurtEntity
		p	0		entity
	m	()Ljava/util/Optional;	c	damage
	m	()Ljava/util/Optional;	d	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	damage
	f	Ljava/util/Optional;	d	entity
c	dn	net/minecraft/advancements/critereon/CriterionTriggerPlayerInteractedWithEntity
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;Lbsr;)V	a	trigger
		p	1		player
		p	2		stack
		p	3		entity
	m	(Lcuq;Lerr;Ldn$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	dn$a	net/minecraft/advancements/critereon/CriterionTriggerPlayerInteractedWithEntity$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
		p	3		entity
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcs$a;Ljava/util/Optional;)Lao;	a	itemUsedOnEntity
		p	0		item
		p	1		entity
	m	(Lcuq;Lerr;)Z	a	matches
		p	1		stack
		p	2		entity
	m	(Ljava/util/Optional;Lcs$a;Ljava/util/Optional;)Lao;	a	itemUsedOnEntity
		p	0		playerPredicate
		p	1		item
		p	2		entity
	m	()Ljava/util/Optional;	b	item
	m	()Ljava/util/Optional;	c	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ljava/util/Optional;	d	entity
c	dp	net/minecraft/advancements/critereon/CriterionConditionPlayer
	m	(Ldh$d;Lce;Ljava/util/List;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Ljava/util/Optional;)V	<init>	<init>
		p	1		experienceLevel
		p	4		recipes
		p	5		advancements
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)Z	a	lambda$matches$1
		p	0		hitEntity
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldh$d;	b	level
	m	()Lce;	c	gameType
	m	()Ljava/util/List;	d	stats
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	e	recipes
	m	()Ljava/util/Map;	f	advancements
	m	()Ljava/util/Optional;	g	lookingAt
	f	I	b	LOOKING_AT_RANGE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldh$d;	d	level
	f	Lce;	e	gameType
	f	Ljava/util/List;	f	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	g	recipes
	f	Ljava/util/Map;	h	advancements
	f	Ljava/util/Optional;	i	lookingAt
c	dp$a	net/minecraft/advancements/critereon/CriterionConditionPlayer$a
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
		p	1		criteria
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
	m	(Lai;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	c	criterions
c	dp$b	net/minecraft/advancements/critereon/CriterionConditionPlayer$b
	m	(Z)V	<init>	<init>
		p	1		done
	m	()Z	a	state
	m	(Lai;)Z	a	test
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	c	state
c	dp$c	net/minecraft/advancements/critereon/CriterionConditionPlayer$c
	m	(Ldp$c;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dp$d	net/minecraft/advancements/critereon/CriterionConditionPlayer$d
	m	()Ldp$d;	a	player
	m	(Lakr;Ljava/util/Map;)Ldp$d;	a	checkAdvancementCriterions
		p	1		id
		p	2		criteria
	m	(Lakr;Z)Ldp$d;	a	addRecipe
		p	1		id
		p	2		unlocked
	m	(Lavy;Ljm$c;Ldh$d;)Ldp$d;	a	addStat
		p	1		statType
		p	2		value
		p	3		range
	m	(Lbv$a;)Ldp$d;	a	setLookingAt
		p	1		lookingAt
	m	(Lce;)Ldp$d;	a	setGameType
		p	1		gameMode
	m	(Ldh$d;)Ldp$d;	a	setLevel
		p	1		experienceLevel
	m	()Ldp;	b	build
	m	(Lakr;Z)Ldp$d;	b	checkAdvancementDone
		p	1		id
		p	2		done
	f	Ldh$d;	a	level
	f	Lce;	b	gameType
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Ljava/util/Optional;	f	lookingAt
c	dp$e	net/minecraft/advancements/critereon/CriterionConditionPlayer$e
	m	(Lavy;Ljm;Ldh$d;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		range
	m	()Lavy;	a	type
	m	(Lavy;)Lcom/mojang/serialization/MapCodec;	a	createTypedCodec
		p	0		type
	m	(Lavy;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createTypedCodec$1
		p	1		instance
	m	(Lavy;Ljm;)Lavw;	a	lambda$new$2
	m	(Lavy;Ljm;Ldh$d;)Ldp$e;	a	lambda$createTypedCodec$0
	m	(Lawa;)Z	a	matches
		p	1		statHandler
	m	()Ljm;	b	value
	m	()Ldh$d;	c	range
	m	()Ljava/util/function/Supplier;	d	stat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lavy;	b	type
	f	Ljm;	c	value
	f	Ldh$d;	d	range
	f	Ljava/util/function/Supplier;	e	stat
c	dq	net/minecraft/advancements/critereon/PlayerTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;)V	a	trigger
		p	1		player
	m	(Ldq$a;)Z	a	lambda$trigger$0
		p	0		conditions
c	dq$a	net/minecraft/advancements/critereon/PlayerTrigger$a
	m	()Ljava/util/Optional;	a	player
	m	(Lbv$a;)Lao;	a	located
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldf$a;)Lao;	a	located
		p	0		location
	m	(Ldfy;Lcul;)Lao;	a	walkOnBlockWithEquipment
		p	0		block
		p	1		item
	m	(Ljava/util/Optional;)Lao;	a	located
		p	0		entity
	m	()Lao;	b	sleptInBed
	m	()Lao;	c	raidWon
	m	()Lao;	d	avoidVibration
	m	()Lao;	e	tick
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
c	dr	net/minecraft/advancements/critereon/RaiderPredicate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	hasRaid
	m	()Z	c	isCaptain
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldr;	c	CAPTAIN_WITHOUT_RAID
	f	Z	d	hasRaid
	f	Z	e	isCaptain
c	ds	net/minecraft/advancements/critereon/RecipeCraftedTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakr;Ljava/util/List;Lds$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Laqv;Lakr;Ljava/util/List;)V	a	trigger
		p	1		player
		p	2		recipeId
		p	3		ingredients
c	ds$a	net/minecraft/advancements/critereon/RecipeCraftedTrigger$a
	m	(Ljava/util/Optional;Lakr;Ljava/util/List;)V	<init>	<init>
		p	1		playerPredicate
		p	2		recipeId
		p	3		ingredients
	m	()Ljava/util/Optional;	a	player
	m	(Lakr;)Lao;	a	craftedItem
		p	0		recipeId
	m	(Lakr;Ljava/util/List;)Lao;	a	craftedItem
		p	0		recipeId
		p	1		ingredients
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lakr;	b	recipeId
	m	(Lakr;)Lao;	b	crafterCraftedItem
		p	0		recipeId
	m	(Lakr;Ljava/util/List;)Z	b	matches
		p	1		recipeId
		p	2		ingredients
	m	()Ljava/util/List;	c	ingredients
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Lakr;	c	recipeId
	f	Ljava/util/List;	d	ingredients
c	dt	net/minecraft/advancements/critereon/CriterionTriggerRecipeUnlocked
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lakr;)Lao;	a	unlocked
		p	0		id
	m	(Laqv;Lczb;)V	a	trigger
		p	1		player
		p	2		recipe
	m	(Lczb;Ldt$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	dt$a	net/minecraft/advancements/critereon/CriterionTriggerRecipeUnlocked$a
	m	(Ljava/util/Optional;Lakr;)V	<init>	<init>
		p	1		playerPredicate
		p	2		recipe
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lczb;)Z	a	matches
		p	1		recipe
	m	()Lakr;	b	recipe
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Lakr;	c	recipe
c	du	net/minecraft/advancements/critereon/CriterionTriggerShotCrossbow
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcuq;Ldu$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	du$a	net/minecraft/advancements/critereon/CriterionTriggerShotCrossbow$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Ldcv;)Lao;	a	shotCrossbow
		p	0		item
	m	(Ljava/util/Optional;)Lao;	a	shotCrossbow
		p	0		item
	m	()Ljava/util/Optional;	b	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
c	dv	net/minecraft/advancements/critereon/CriterionTriggerAbstract
	m	(Lakz;)V	a	removePlayerListeners
		p	1		tracker
	m	(Lakz;Laq$a;)V	a	addPlayerListener
		p	1		manager
		p	2		conditions
	m	(Laqv;Ljava/util/function/Predicate;)V	a	trigger
		p	1		player
		p	2		predicate
	m	(Lakz;)Ljava/util/Set;	b	lambda$addPlayerListener$0
		p	0		managerx
	m	(Lakz;Laq$a;)V	b	removePlayerListener
		p	1		manager
		p	2		conditions
	f	Ljava/util/Map;	a	players
c	dv$a	net/minecraft/advancements/critereon/CriterionTriggerAbstract$a
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
c	dw	net/minecraft/advancements/critereon/SingleComponentItemPredicate
	m	()Lkp;	a	componentType
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Lcuq;Ljava/lang/Object;)Z	a	matches
		p	1		stack
		p	2		component
c	dx	net/minecraft/advancements/critereon/CriterionSlideDownBlock
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Ldtc;)V	a	trigger
		p	1		player
		p	2		state
	m	(Ldtc;Ldx$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	dx$a	net/minecraft/advancements/critereon/CriterionSlideDownBlock$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	3		state
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfy;)Lao;	a	slidesDownBlock
		p	0		block
	m	(Ldtc;)Z	a	matches
		p	1		state
	m	(Ldx$a;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		conditions
	m	(Ldx$a;Ljm;)Ljava/util/Optional;	a	lambda$validate$4
		p	1		block
	m	(Ljm;Leb;)Ljava/util/Optional;	a	lambda$validate$1
		p	1		state
	m	(Ljm;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
		p	1		property
	m	()Ljava/util/Optional;	b	block
	m	(Ldx$a;)Lcom/mojang/serialization/DataResult;	b	lambda$validate$5
	m	(Ljm;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	()Ljava/util/Optional;	c	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	state
c	dy	net/minecraft/advancements/critereon/SlimePredicate
	m	(Ldh$d;)V	<init>	<init>
		p	1		size
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Laqu;Lexc;)Z	a	matches
		p	1		entity
		p	2		world
		p	3		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$d;)Ldy;	a	sized
		p	0		size
	m	()Ldh$d;	b	size
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldh$d;	c	size
c	dz	net/minecraft/advancements/critereon/SlotsPredicate
	m	()Ljava/util/Map;	a	slots
	m	(Lbsr;)Z	a	matches
		p	1		entity
	m	(Lbsr;Lcs;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	matchSlots
		p	0		entity
		p	1		itemPredicate
		p	2		slotIds
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	slots
c	ea	net/minecraft/advancements/critereon/StartRidingTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;)V	a	trigger
		p	1		player
	m	(Lea$a;)Z	a	lambda$trigger$0
		p	0		conditions
c	ea$a	net/minecraft/advancements/critereon/StartRidingTrigger$a
	m	()Ljava/util/Optional;	a	player
	m	(Lbv$a;)Lao;	a	playerStartsRiding
		p	0		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
c	eb	net/minecraft/advancements/critereon/CriterionTriggerProperties
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Ljava/util/List;	a	properties
	m	(Ldtc;)Z	a	matches
		p	1		state
	m	(Ldtd;)Ljava/util/Optional;	a	checkState
		p	1		stateManager
	m	(Ldtd;Ldte;)Z	a	matches
		p	1		stateManager
		p	2		container
	m	(Lepe;)Z	a	matches
		p	1		state
	m	(Ljava/util/List;)Ljava/util/Map;	a	lambda$static$2
		p	0		conditions
	m	(Ljava/util/Map$Entry;)Leb$c;	a	lambda$static$0
		p	0		state
	m	(Ljava/util/Map;)Ljava/util/List;	a	lambda$static$1
		p	0		states
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/List;	c	properties
	f	Lcom/mojang/serialization/Codec;	d	PROPERTIES_CODEC
c	eb$a	net/minecraft/advancements/critereon/CriterionTriggerProperties$a
	m	()Leb$a;	a	properties
	m	(Lduf;I)Leb$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Lduf;Ljava/lang/Comparable;)Leb$a;	a	hasProperty
		p	1		property
		p	2		value
	m	(Lduf;Ljava/lang/String;)Leb$a;	a	hasProperty
		p	1		property
		p	2		valueName
	m	(Lduf;Z)Leb$a;	a	hasProperty
		p	1		property
		p	2		value
	m	()Ljava/util/Optional;	b	build
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	matchers
c	eb$b	net/minecraft/advancements/critereon/CriterionTriggerProperties$b
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	value
	m	(Ldte;Lduf;)Z	a	match
		p	1		state
		p	2		property
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/lang/String;	e	value
c	eb$c	net/minecraft/advancements/critereon/CriterionTriggerProperties$c
	m	(Ljava/lang/String;Leb$e;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	name
	m	(Ldtd;)Ljava/util/Optional;	a	checkState
		p	1		factory
	m	(Ldtd;Ldte;)Z	a	match
		p	1		stateManager
		p	2		state
	m	()Leb$e;	b	valueMatcher
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	name
	f	Leb$e;	c	valueMatcher
c	eb$d	net/minecraft/advancements/critereon/CriterionTriggerProperties$d
	m	()Ljava/util/Optional;	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldte;Lduf;)Z	a	match
		p	1		state
		p	2		property
	m	()Ljava/util/Optional;	b	maxValue
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/Optional;	e	minValue
	f	Ljava/util/Optional;	f	maxValue
c	eb$e	net/minecraft/advancements/critereon/CriterionTriggerProperties$e
	m	(Ldte;Lduf;)Z	a	match
		p	1		state
		p	2		property
	m	(Leb$e;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
		p	0		valueMatcher
	m	(Leb$e;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$0
		p	0		valueMatcher
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
c	ec	net/minecraft/advancements/critereon/CriterionTriggerSummonedEntity
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lerr;Lec$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ec$a	net/minecraft/advancements/critereon/CriterionTriggerSummonedEntity$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		entity
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	summonedEntity
		p	0		summonedEntityPredicateBuilder
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	matches
		p	1		entity
	m	()Ljava/util/Optional;	b	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entity
c	ed	net/minecraft/advancements/critereon/TagPredicate
	m	(Lawu;Z)V	<init>	<init>
		p	1		tag
		p	2		expected
	m	()Lawu;	a	tag
	m	(Lakq;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registryRef
	m	(Lakq;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Lawu;)Led;	a	is
		p	0		tag
	m	(Ljm;)Z	a	matches
		p	1		registryEntry
	m	()Z	b	expected
	m	(Lawu;)Led;	b	isNot
		p	0		tag
	f	Lawu;	a	tag
	f	Z	b	expected
c	ee	net/minecraft/advancements/critereon/CriterionTriggerTamedAnimal
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcfe;)V	a	trigger
		p	1		player
		p	2		entity
	m	(Lerr;Lee$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ee$a	net/minecraft/advancements/critereon/CriterionTriggerTamedAnimal$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		entity
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	tamedAnimal
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	matches
		p	1		entity
	m	()Lao;	b	tamedAnimal
	m	()Ljava/util/Optional;	c	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entity
c	ef	net/minecraft/advancements/critereon/CriterionTriggerTargetHit
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lbsr;Lexc;I)V	a	trigger
		p	1		player
		p	2		projectile
		p	3		hitPos
		p	4		signalStrength
	m	(Lerr;Lexc;ILef$a;)Z	a	lambda$trigger$0
		p	3		conditions
c	ef$a	net/minecraft/advancements/critereon/CriterionTriggerTargetHit$a
	m	(Ljava/util/Optional;Ldh$d;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		signalStrength
		p	3		projectile
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldh$d;Ljava/util/Optional;)Lao;	a	targetHit
		p	0		signalStrength
		p	1		projectile
	m	(Lerr;Lexc;I)Z	a	matches
		p	1		projectile
		p	2		hitPos
		p	3		signalStrength
	m	()Ldh$d;	b	signalStrength
	m	()Ljava/util/Optional;	c	projectile
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ldh$d;	c	signalStrength
	f	Ljava/util/Optional;	d	projectile
c	eg	net/minecraft/advancements/critereon/CriterionTriggerVillagerTrade
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcmf;Lcuq;)V	a	trigger
		p	1		player
		p	2		merchant
		p	3		stack
	m	(Lerr;Lcuq;Leg$a;)Z	a	lambda$trigger$0
		p	2		conditions
c	eg$a	net/minecraft/advancements/critereon/CriterionTriggerVillagerTrade$a
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		villager
		p	3		item
	m	()Ljava/util/Optional;	a	player
	m	(Lbh;)V	a	validate
		p	1		validator
	m	(Lbv$a;)Lao;	a	tradedWithVillager
		p	0		playerPredicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;Lcuq;)Z	a	matches
		p	1		villager
		p	2		stack
	m	()Lao;	b	tradedWithVillager
	m	()Ljava/util/Optional;	c	villager
	m	()Ljava/util/Optional;	d	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	villager
	f	Ljava/util/Optional;	d	item
c	eh	net/minecraft/advancements/critereon/CriterionTriggerUsedEnderEye
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(DLeh$a;)Z	a	lambda$trigger$0
		p	2		conditions
	m	(Laqv;Ljd;)V	a	trigger
		p	1		player
		p	2		strongholdPos
c	eh$a	net/minecraft/advancements/critereon/CriterionTriggerUsedEnderEye$a
	m	(Ljava/util/Optional;Ldh$c;)V	<init>	<init>
		p	1		playerPredicate
		p	2		distance
	m	()Ljava/util/Optional;	a	player
	m	(D)Z	a	matches
		p	1		distance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldh$c;	b	distance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ldh$c;	c	distance
c	ei	net/minecraft/advancements/critereon/CriterionTriggerUsedTotem
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcuq;Lei$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ei$a	net/minecraft/advancements/critereon/CriterionTriggerUsedTotem$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcs;)Lao;	a	usedTotem
		p	0		itemPredicate
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	(Ldcv;)Lao;	a	usedTotem
		p	0		item
	m	()Ljava/util/Optional;	b	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
c	ej	net/minecraft/advancements/critereon/UsingItemTrigger
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Laqv;Lcuq;)V	a	trigger
		p	1		player
		p	2		stack
	m	(Lcuq;Lej$a;)Z	a	lambda$trigger$0
		p	1		conditions
c	ej$a	net/minecraft/advancements/critereon/UsingItemTrigger$a
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		playerPredicate
		p	2		item
	m	()Ljava/util/Optional;	a	player
	m	(Lbv$a;Lcs$a;)Lao;	a	lookingAt
		p	0		player
		p	1		item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;)Z	a	matches
		p	1		stack
	m	()Ljava/util/Optional;	b	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
c	ek	net/minecraft/advancements/critereon/CriterionConditionRange
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(D)Z	a	matchesSqr
		p	1		value
	m	(F)Lek;	a	exactly
		p	0		value
	m	(FF)Lek;	a	between
		p	0		min
		p	1		max
	m	(Lcom/google/gson/JsonElement;)Lek;	a	fromJson
		p	0		json
	m	(Lcom/mojang/brigadier/StringReader;Z)Lek;	a	fromReader
		p	0		reader
		p	1		allowFloats
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lek;	a	fromReader
		p	0		reader
		p	1		allowFloats
		p	2		transform
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
		p	0		value
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
		p	0		value
		p	1		function
	m	()Ljava/lang/Float;	b	min
	m	(F)Lek;	b	atLeast
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
		p	0		reader
		p	1		allowFloats
	m	()Ljava/lang/Float;	c	max
	m	(F)Lek;	c	atMost
		p	0		value
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
		p	0		reader
		p	1		allowFloats
	m	(F)Z	d	matches
		p	1		value
	f	Lek;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
c	en	net/minecraft/commands/CommandExceptionProvider
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
		p	0		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
		p	0		symbol
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
		p	0		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
		p	0		found
		p	1		max
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
		p	0		character
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
		p	0		found
		p	1		min
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
		p	0		expected
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
c	eo	net/minecraft/commands/CacheableFunction
	m	(Lakr;)V	<init>	<init>
		p	1		id
	m	()Lakr;	a	getId
	m	(Lalg;)Ljava/util/Optional;	a	get
		p	1		commandFunctionManager
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakr;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
c	ep	net/minecraft/commands/CommandBuildContext
	m	(Ljo$a;Lcpl;)Lep;	a	simple
		p	0		wrapperLookup
		p	1		enabledFeatures
c	ep$1	net/minecraft/commands/CommandBuildContext$1
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lcpl;Ljo$b;)Ljo$b;	a	lambda$lookup$0
		p	1		wrapper
	f	Ljo$a;	a	val$access
	f	Lcpl;	b	val$enabledFeatures
c	eq	net/minecraft/commands/CommandResultCallback
	m	(Leq;Leq;ZI)V	a	lambda$chain$0
		p	2		successful
		p	3		returnValue
	m	(Leq;Leq;)Leq;	chain	chain
		p	0		a
		p	1		b
	m	(ZI)V	onResult	onResult
		p	1		successful
		p	2		returnValue
	m	(I)V	onSuccess	onSuccess
		p	1		successful
	f	Leq;	a	EMPTY
c	eq$1	net/minecraft/commands/CommandResultCallback$1
	m	(ZI)V	onResult	onResult
		p	1		successful
		p	2		returnValue
c	er	net/minecraft/commands/CommandSigningContext
	m	(Ljava/lang/String;)Lxp;	a	getArgument
		p	1		argumentName
	f	Ler;	a	ANONYMOUS
c	er$1	net/minecraft/commands/CommandSigningContext$1
	m	(Ljava/lang/String;)Lxp;	a	getArgument
		p	1		argumentName
c	er$a	net/minecraft/commands/CommandSigningContext$a
	m	()Ljava/util/Map;	a	arguments
	m	(Ljava/lang/String;)Lxp;	a	getArgument
		p	1		argumentName
	f	Ljava/util/Map;	b	arguments
c	es	net/minecraft/commands/ICommandListener
	m	()Z	M_	shouldInformAdmins
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	()Z	k_	acceptsSuccess
	m	()Z	l_	alwaysAccepts
	m	()Z	w_	acceptsFailure
	f	Les;	a	NULL
c	es$1	net/minecraft/commands/ICommandListener$1
	m	()Z	M_	shouldInformAdmins
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	()Z	k_	acceptsSuccess
	m	()Z	w_	acceptsFailure
c	et	net/minecraft/commands/CommandListenerWrapper
	m	(Les;Lexc;Lexb;Laqu;ILjava/lang/String;Lwz;Lnet/minecraft/server/MinecraftServer;Lbsr;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
	m	(Les;Lexc;Lexb;Laqu;ILjava/lang/String;Lwz;Lnet/minecraft/server/MinecraftServer;Lbsr;ZLeq;Lff$a;Ler;Lazm;)V	<init>	<init>
		p	1		output
		p	2		pos
		p	3		rot
		p	4		world
		p	5		level
		p	6		name
		p	7		displayName
		p	8		server
		p	9		entity
		p	10		silent
		p	11		resultStorer
		p	12		entityAnchor
		p	13		signedArguments
		p	14		messageChainTaskQueue
	m	()Let;	a	withSuppressedOutput
	m	(I)Let;	a	withPermission
		p	1		level
	m	(Lakq;Ley$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Laqu;)Let;	a	withLevel
		p	1		world
	m	(Laqv;)Z	a	shouldFilterMessageTo
		p	1		recipient
	m	(Lbsr;)Let;	a	withEntity
		p	1		entity
	m	(Lbsr;Lff$a;)Let;	a	facing
		p	1		entity
		p	2		anchor
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLhv;)V	a	handleError
		p	1		type
		p	2		message
		p	3		silent
		p	4		tracer
	m	(Leq;)Let;	a	withCallback
	m	(Leq;Ljava/util/function/BinaryOperator;)Let;	a	withCallback
		p	1		returnValueConsumer
		p	2		merger
	m	(Ler;Lazm;)Let;	a	withSigningContext
		p	1		signedArguments
		p	2		messageChainTaskQueue
	m	(Les;)Let;	a	withSource
		p	1		output
	m	(Lexb;)Let;	a	withRotation
		p	1		rotation
	m	(Lexc;)Let;	a	withPosition
		p	1		position
	m	(Ley$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljz;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$0
		p	3		registry
	m	(Lff$a;)Let;	a	withAnchor
		p	1		anchor
	m	(Ljava/util/function/Supplier;Z)V	a	sendSuccess
		p	1		feedbackSupplier
		p	2		broadcastToOps
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(Lxo;ZLwv$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	()Lwz;	b	getDisplayName
	m	(I)Let;	b	withMaximumPermission
		p	1		level
	m	(Leq;)Lev;	b	withCallback
		p	1		returnValueConsumer
	m	(Lexc;)Let;	b	facing
		p	1		position
	m	(Lwz;)V	b	sendFailure
		p	1		message
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
		p	1		level
	m	(Lwz;)V	c	broadcastToAdmins
		p	1		message
	m	()Lexc;	d	getPosition
	m	()Laqu;	e	getLevel
	m	()Lbsr;	f	getEntity
	m	()Lbsr;	g	getEntityOrException
	m	()Laqv;	h	getPlayerOrException
	m	()Laqv;	i	getPlayer
	m	()Z	j	isPlayer
	m	()Lexb;	k	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	l	getServer
	m	()Lff$a;	m	getAnchor
	m	()Ler;	n	getSigningContext
	m	()Lazm;	o	getChatMessageChainer
	m	()Leq;	p	callback
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	()Ljava/util/stream/Stream;	t	getRecipeNames
	m	()Ljava/util/Set;	u	levels
	m	()Lka;	v	registryAccess
	m	()Lcpl;	w	enabledFeatures
	m	()Lcom/mojang/brigadier/CommandDispatcher;	x	dispatcher
	m	()Z	y	isSilent
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Les;	c	source
	f	Lexc;	d	worldPosition
	f	Laqu;	e	level
	f	I	f	permissionLevel
	f	Ljava/lang/String;	g	textName
	f	Lwz;	h	displayName
	f	Lnet/minecraft/server/MinecraftServer;	i	server
	f	Z	j	silent
	f	Lbsr;	k	entity
	f	Leq;	l	resultCallback
	f	Lff$a;	m	anchor
	f	Lexb;	n	rotation
	f	Ler;	o	signingContext
	f	Lazm;	p	chatMessageChainer
c	eu	net/minecraft/commands/CommandDispatcher
	m	(Leu$a;Lep;)V	<init>	<init>
		p	1		environment
		p	2		commandRegistryAccess
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Laqv;)V	a	sendCommands
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$validate$8
		p	1		parent
		p	2		child
		p	3		sibling
		p	4		inputs
	m	(Lcom/mojang/brigadier/ParseResults;)V	a	validateParseResults
		p	0		parse
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)V	a	performCommand
		p	1		parseResults
		p	2		command
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;Let;)Lcom/mojang/brigadier/context/ContextChain;	a	finishParsing
		p	0		parseResults
		p	1		command
		p	2		source
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults;	a	mapSource
		p	0		parseResults
		p	1		sourceMapper
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$10
		p	0		type
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$fillUsableCommands$6
		p	0		context
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Let;Ljava/util/Map;)V	a	fillUsableCommands
		p	1		tree
		p	2		result
		p	3		source
		p	4		resultNodes
	m	(Let;Ljava/lang/String;)V	a	performPrefixedCommand
		p	1		source
		p	2		command
	m	(Let;Ljava/util/function/Consumer;)V	a	executeCommandInContext
		p	0		commandSource
		p	1		callback
	m	(Leu$b;)Ljava/util/function/Predicate;	a	createValidator
		p	0		parser
	m	(Leu$b;Ljava/lang/String;)Z	a	lambda$createValidator$7
		p	1		string
	m	(Ley;)Z	a	lambda$fillUsableCommands$5
		p	0		sourcex
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	literal
		p	0		literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Let;Lhs;)V	a	lambda$performCommand$1
		p	3		context
	m	(Ljava/lang/String;Lxw;)Lxw;	a	lambda$finishParsing$4
		p	1		style
	m	(Ljo$a;)Lep;	a	createValidationContext
		p	0		registryLookup
	m	(Lxn;Lxw;)Lxw;	a	lambda$performCommand$2
		p	1		style
	m	()V	b	validate
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	getParseException
		p	0		parse
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$9
		p	0		type
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$performCommand$0
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	c	lambda$finishParsing$3
	f	I	a	LEVEL_ALL
	f	I	b	LEVEL_MODERATORS
	f	I	c	LEVEL_GAMEMASTERS
	f	I	d	LEVEL_ADMINS
	f	I	e	LEVEL_OWNERS
	f	Ljava/lang/ThreadLocal;	f	CURRENT_EXECUTION_CONTEXT
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Lcom/mojang/brigadier/CommandDispatcher;	h	dispatcher
c	eu$1	net/minecraft/commands/CommandDispatcher$1
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Ljo$b;)Ljo$b$a;	a	createLookup
		p	1		original
	f	Ljo$a;	a	val$registries
c	eu$1$1	net/minecraft/commands/CommandDispatcher$1$1
	m	()Ljo$b;	a	parent
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lawu;)Ljq$c;	b	getOrThrow
		p	1		tag
	m	(Lawu;)Ljq$c;	c	lambda$getOrThrow$0
	f	Ljo$b;	a	val$original
c	eu$a	net/minecraft/commands/CommandDispatcher$ServerType
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		integrated
		p	4		dedicated
	m	()[Leu$a;	a	$values
	f	Leu$a;	a	ALL
	f	Leu$a;	b	DEDICATED
	f	Leu$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Leu$a;	f	$VALUES
c	eu$b	net/minecraft/commands/CommandDispatcher$b
	m	(Lcom/mojang/brigadier/StringReader;)V	parse	parse
		p	1		reader
c	ev	net/minecraft/commands/ExecutionCommandSource
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$resultConsumer$0
		p	0		context
		p	1		success
		p	2		result
	m	(Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLhv;)V	a	handleError
		p	1		type
		p	2		message
		p	3		silent
		p	4		tracer
	m	(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;ZLhv;)V	a	handleError
		p	1		exception
		p	2		silent
		p	3		tracer
	m	()Lev;	a_	clearCallbacks
	m	(Leq;)Lev;	b	withCallback
		p	1		returnValueConsumer
	m	()Lcom/mojang/brigadier/ResultConsumer;	b_	resultConsumer
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Leq;	p	callback
	m	()Lcom/mojang/brigadier/CommandDispatcher;	x	dispatcher
	m	()Z	y	isSilent
c	ew	net/minecraft/commands/FunctionInstantiationException
	m	(Lwz;)V	<init>	<init>
		p	1		message
	m	()Lwz;	a	messageComponent
	f	Lwz;	a	messageComponent
c	ex	net/minecraft/commands/ParserUtils
	m	()Ljava/lang/reflect/Field;	a	lambda$static$1
	m	(Lcom/google/gson/stream/JsonReader;)I	a	getPos
		p	0		jsonReader
	m	(Lcom/mojang/brigadier/StringReader;Lm;)Ljava/lang/String;	a	readWhile
		p	0		stringReader
		p	1		predicate
	m	(Ljo$a;Lcom/mojang/brigadier/StringReader;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	parseJson
		p	0		registryLookup
		p	1		stringReader
		p	2		codec
	m	()Ljava/lang/reflect/Field;	b	lambda$static$0
	f	Ljava/lang/reflect/Field;	a	JSON_READER_POS
	f	Ljava/lang/reflect/Field;	b	JSON_READER_LINESTART
c	ey	net/minecraft/commands/ICompletionProvider
	m	()Ljava/util/Collection;	A	getSelectedEntities
	m	()Ljava/util/Collection;	B	getRelevantCoordinates
	m	()Ljava/util/Collection;	C	getAbsoluteCoordinates
	m	(Lakq;Ley$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
		p	1		registryRef
		p	2		suggestedIdType
		p	3		builder
		p	4		context
	m	(Lakr;)Lakr;	a	lambda$suggestResource$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
		p	1		context
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lakr;)V	a	lambda$suggestResource$3
		p	1		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lakr;)V	a	lambda$suggestResource$1
		p	2		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
		p	3		object
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		prefix
		p	3		identifier
		p	4		action
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
		p	0		candidates
		p	1		remaining
		p	2		identifier
		p	3		action
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
		p	0		remaining
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		prefix
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
		p	0		candidates
		p	1		builder
		p	2		identifier
		p	3		tooltip
	m	(Ljz;Ley$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
		p	1		registry
		p	2		suggestedIdType
		p	3		builder
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
		p	0		candidates
		p	1		builder
	m	(Lakr;)Lakr;	b	lambda$suggestResource$0
		p	0		id
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
		p	2		suggestionText
		p	3		tooltip
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
		p	1		candidate
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
		p	0		remaining
		p	1		candidates
		p	2		builder
		p	3		predicate
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
		p	0		candidates
		p	1		builder
	m	(I)Z	c	hasPermission
		p	1		level
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	()Ljava/util/stream/Stream;	t	getRecipeNames
	m	()Ljava/util/Set;	u	levels
	m	()Lka;	v	registryAccess
	m	()Lcpl;	w	enabledFeatures
	m	()Ljava/util/Collection;	z	getCustomTabSugggestions
c	ey$a	net/minecraft/commands/ICompletionProvider$a
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Ley$a;	c	$values
	f	Ley$a;	a	TAGS
	f	Ley$a;	b	ELEMENTS
	f	Ley$a;	c	ALL
	f	[Ley$a;	d	$VALUES
c	ey$b	net/minecraft/commands/ICompletionProvider$b
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	f	Ley$b;	a	DEFAULT_LOCAL
	f	Ley$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
c	ez	net/minecraft/commands/arguments/ArgumentAngle
	m	()Lez;	a	angle
	m	(Lcom/mojang/brigadier/StringReader;)Lez$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	f	Ljava/util/Collection;	c	EXAMPLES
c	ez$a	net/minecraft/commands/arguments/ArgumentAngle$a
	m	(FZ)V	<init>	<init>
		p	1		angle
		p	2		relative
	m	(Let;)F	a	getAngle
		p	1		source
	f	F	a	angle
	f	Z	b	isRelative
c	fa	net/minecraft/commands/arguments/ArgumentSignatures
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Lfa$b;Lxr$a;)Lfa$a;	a	lambda$signCommand$1
		p	1		argument
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lfa$a;)V	a	lambda$write$0
		p	0		buf2
		p	1		entry
	m	(Lxr;Lfa$b;)Lfa;	a	signCommand
		p	0		arguments
		p	1		signer
	f	Lfa;	a	EMPTY
	f	Ljava/util/List;	b	entries
	f	I	c	MAX_ARGUMENT_COUNT
	f	I	d	MAX_ARGUMENT_NAME_LENGTH
c	fa$a	net/minecraft/commands/arguments/ArgumentSignatures$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	name
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Lxl;	b	signature
	f	Ljava/lang/String;	a	name
	f	Lxl;	b	signature
c	fa$b	net/minecraft/commands/arguments/ArgumentSignatures$b
	m	(Ljava/lang/String;)Lxl;	sign	sign
		p	1		value
c	fb	net/minecraft/commands/arguments/ArgumentChatFormat
	m	()Lfb;	a	color
	m	(Lcom/mojang/brigadier/StringReader;)Ln;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ln;	a	getColor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		color
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fc	net/minecraft/commands/arguments/ArgumentChatComponent
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	(Lcom/mojang/brigadier/StringReader;)Lwz;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lwz;	a	getComponent
		p	0		context
		p	1		name
	m	(Lep;)Lfc;	a	textComponent
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		text
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljo$a;	c	registries
c	fd	net/minecraft/commands/arguments/ArgumentNBTTag
	m	()Lfd;	a	compoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lub;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lub;	a	getCompoundTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	fe	net/minecraft/commands/arguments/ArgumentDimension
	m	()Lfe;	a	dimension
	m	(Lakq;)Ljava/lang/String;	a	lambda$static$0
		p	0		key
	m	(Lcom/mojang/brigadier/StringReader;)Lakr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laqu;	a	getDimension
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
c	ff	net/minecraft/commands/arguments/ArgumentAnchor
	m	()Lff;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Lff$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lff$a;	a	getAnchor
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
c	ff$a	net/minecraft/commands/arguments/ArgumentAnchor$Anchor
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
		p	3		id
		p	4		offset
	m	()[Lff$a;	a	$values
	m	(Lbsr;)Lexc;	a	apply
		p	1		entity
	m	(Let;)Lexc;	a	apply
		p	1		source
	m	(Lexc;Lbsr;)Lexc;	a	lambda$static$1
		p	0		pos
		p	1		entity
	m	(Ljava/lang/String;)Lff$a;	a	getByName
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
		p	0		map
	m	(Lexc;Lbsr;)Lexc;	b	lambda$static$0
		p	0		pos
		p	1		entity
	f	Lff$a;	a	FEET
	f	Lff$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Lff$a;	f	$VALUES
c	fg	net/minecraft/commands/arguments/ArgumentEntity
	m	(ZZ)V	<init>	<init>
		p	1		singleTarget
		p	2		playersOnly
	m	()Lfg;	a	entity
	m	(Lcom/mojang/brigadier/StringReader;)Lhi;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lhi;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lhi;	a	parse
		p	1		reader
		p	2		allowAtSelectors
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbsr;	a	getEntity
		p	0		context
		p	1		name
	m	(Ley;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
		p	2		builder
	m	()Lfg;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
		p	0		context
		p	1		name
	m	()Lfg;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
		p	0		context
		p	1		name
	m	()Lfg;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laqv;	e	getPlayer
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Z	h	single
	f	Z	i	playersOnly
c	fg$a	net/minecraft/commands/arguments/ArgumentEntity$Info
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lfg$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfg$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfg;)Lfg$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lfg$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_SINGLE
	f	B	b	FLAG_PLAYERS_ONLY
c	fg$a$a	net/minecraft/commands/arguments/ArgumentEntity$Info$Template
	m	(Lfg$a;ZZ)V	<init>	<init>
		p	2		single
		p	3		playersOnly
	m	()Lio;	a	type
	m	(Lep;)Lfg;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfg$a;	a	this$0
	f	Z	b	single
	f	Z	c	playersOnly
c	fh	net/minecraft/commands/arguments/GameModeArgument
	m	()Lfh;	a	gameMode
	m	(Lcom/mojang/brigadier/StringReader;)Ldct;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldct;	a	getGameMode
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		gameMode
	f	Ljava/util/Collection;	a	EXAMPLES
	f	[Ldct;	b	VALUES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID
c	fi	net/minecraft/commands/arguments/ArgumentProfile
	m	()Lfi;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;)Lfi$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfi$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfi$a;	a	parse
		p	0		reader
		p	1		allowAtSelectors
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
		p	0		context
		p	1		name
	m	(Ley;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
		p	1		builder
	m	(Ljava/lang/String;Let;)Ljava/util/Collection;	a	lambda$parse$0
		p	1		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	f	Ljava/util/Collection;	b	EXAMPLES
c	fi$a	net/minecraft/commands/arguments/ArgumentProfile$a
	m	(Let;)Ljava/util/Collection;	getNames	getNames
		p	1		source
c	fi$b	net/minecraft/commands/arguments/ArgumentProfile$b
	m	(Lhi;)V	<init>	<init>
		p	1		selector
	m	(Let;)Ljava/util/Collection;	getNames	getNames
		p	1		source
	f	Lhi;	a	selector
c	fj	net/minecraft/commands/arguments/HeightmapTypeArgument
	m	()Lfj;	a	heightmap
	m	(I)[Ldyy$a;	a	lambda$keptTypes$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldyy$a;	a	getHeightmap
		p	0		context
		p	1		id
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	()[Ldyy$a;	b	keptTypes
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
		p	0		name
	f	Lcom/mojang/serialization/Codec;	a	LOWER_CASE_CODEC
c	fk	net/minecraft/commands/arguments/ArgumentChat
	m	()Lfk;	a	message
	m	(Lcom/mojang/brigadier/StringReader;)Lfk$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfk$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lwz;	a	getMessage
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	resolveChatMessage
		p	0		context
		p	1		name
		p	2		callback
	m	(Let;Lxp;)Ljava/util/concurrent/CompletableFuture;	a	filterPlainText
		p	0		source
		p	1		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		length
		p	1		maxLength
	m	(Ljava/util/function/Consumer;Let;Lxp;)V	a	resolveSignedMessage
		p	0		callback
		p	1		source
		p	2		message
	m	(Lxp;Lwz;Ljava/util/function/Consumer;Larm;)V	a	lambda$resolveSignedMessage$1
		p	3		filtered
	m	(Ljava/util/function/Consumer;Let;Lxp;)V	b	resolveDisguisedMessage
		p	0		callback
		p	1		source
		p	2		message
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	TOO_LONG
c	fk$a	net/minecraft/commands/arguments/ArgumentChat$a
	m	(Ljava/lang/String;[Lfk$b;)V	<init>	<init>
		p	1		contents
		p	2		selectors
	m	()Ljava/lang/String;	a	text
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfk$a;	a	parseText
		p	0		reader
		p	1		allowAtSelectors
	m	(Let;)Lwz;	a	resolveComponent
		p	1		source
	m	(Let;Z)Lwz;	a	toComponent
		p	1		source
		p	2		canUseSelectors
	m	()[Lfk$b;	b	parts
	f	Ljava/lang/String;	a	text
	f	[Lfk$b;	b	parts
c	fk$b	net/minecraft/commands/arguments/ArgumentChat$b
	m	(IILhi;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		selector
	m	()I	a	start
	m	(Let;)Lwz;	a	toComponent
		p	1		source
	m	()I	b	end
	m	()Lhi;	c	selector
	f	I	a	start
	f	I	b	end
	f	Lhi;	c	selector
c	fl	net/minecraft/commands/arguments/ArgumentNBTKey
	m	()Lfl;	a	nbtPath
	m	(C)Z	a	isAllowedInUnquotedName
		p	0		c
	m	(Lcom/mojang/brigadier/StringReader;)Lfl$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lfl$h;	a	readObjectNode
		p	0		reader
		p	1		name
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfl$h;	a	parseNode
		p	0		reader
		p	1		root
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfl$g;	a	getPath
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		index
	m	(Lub;)Ljava/util/function/Predicate;	a	createTagPredicate
		p	0		filter
	m	(Lub;Luy;)Z	a	lambda$createTagPredicate$3
		p	1		nbt
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		nbt
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		path
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DATA_TOO_DEEP
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NOTHING_FOUND
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_INDEX
	f	C	g	INDEX_MATCH_START
	f	C	h	INDEX_MATCH_END
	f	C	i	KEY_MATCH_START
	f	C	j	KEY_MATCH_END
	f	C	k	QUOTED_KEY_START
	f	C	l	SINGLE_QUOTED_KEY_START
c	fl$a	net/minecraft/commands/arguments/ArgumentNBTKey$a
	m	()Luy;	a	createPreferredParentTag
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lfl$a;	a	INSTANCE
c	fl$b	net/minecraft/commands/arguments/ArgumentNBTKey$b
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Luy;	a	createPreferredParentTag
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
c	fl$c	net/minecraft/commands/arguments/ArgumentNBTKey$c
	m	(I)V	<init>	<init>
		p	1		index
	m	()Luy;	a	createPreferredParentTag
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	I	a	index
c	fl$d	net/minecraft/commands/arguments/ArgumentNBTKey$d
	m	(Lub;)V	<init>	<init>
		p	1		filter
	m	()Luy;	a	createPreferredParentTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Luy;)V	a	lambda$getOrCreateTag$0
		p	2		nbt
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Lub;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
c	fl$e	net/minecraft/commands/arguments/ArgumentNBTKey$e
	m	(Ljava/lang/String;Lub;)V	<init>	<init>
		p	1		name
		p	2		filter
	m	()Luy;	a	createPreferredParentTag
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/lang/String;	a	name
	f	Lub;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
c	fl$f	net/minecraft/commands/arguments/ArgumentNBTKey$f
	m	(Lub;)V	<init>	<init>
		p	1		filter
	m	()Luy;	a	createPreferredParentTag
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
	f	Ljava/util/function/Predicate;	a	predicate
c	fl$g	net/minecraft/commands/arguments/ArgumentNBTKey$g
	m	(Ljava/lang/String;[Lfl$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		string
		p	2		nodes
		p	3		nodeEndIndices
	m	()Ljava/lang/String;	a	asString
	m	(ILub;Ljava/util/List;)I	a	insert
		p	1		index
		p	2		compound
		p	3		elements
	m	(Lfl$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
		p	1		node
	m	(Lfl$h;Lorg/apache/commons/lang3/mutable/MutableBoolean;Luy;Luy;)Ljava/lang/Integer;	a	lambda$set$4
		p	3		nbt
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$2
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lfl$g;	a	of
		p	0		path
	m	(Ljava/lang/String;Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Ljava/lang/String;	a	lambda$static$0
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
		p	0		elements
		p	1		operation
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Luy;)Luy;	a	lambda$set$3
	m	(Luy;)Ljava/util/List;	a	get
		p	1		element
	m	(Luy;I)Z	a	isTooDeep
		p	0		element
		p	1		depth
	m	(Luy;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		element
		p	2		source
	m	(Luy;Luy;)I	a	set
		p	1		element
		p	2		source
	m	()I	b	estimatePathDepth
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		path
	m	(Luy;)I	b	countMatching
		p	1		element
	m	(Luy;)I	c	remove
		p	1		element
	m	(Luy;)Ljava/util/List;	d	getOrCreateParents
		p	1		start
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	nodeToOriginalPosition
	f	[Lfl$h;	d	nodes
c	fl$h	net/minecraft/commands/arguments/ArgumentNBTKey$h
	m	()Luy;	a	createPreferredParentTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
		p	1		elements
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
		p	1		elements
		p	2		action
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
		p	1		elements
		p	2		supplier
	m	(Ljava/util/function/Supplier;Luy;Ljava/util/List;)V	a	lambda$getOrCreate$0
		p	2		current
		p	3		results
	m	(Luy;)I	a	removeTag
		p	1		current
	m	(Luy;Ljava/util/List;)V	a	getTag
		p	1		current
		p	2		results
	m	(Luy;Ljava/util/function/Supplier;)I	a	setTag
		p	1		current
		p	2		source
	m	(Luy;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
		p	1		current
		p	2		source
		p	3		results
c	fm	net/minecraft/commands/arguments/ArgumentNBTBase
	m	()Lfm;	a	nbtTag
	m	(Lcom/mojang/brigadier/StringReader;)Luy;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Luy;	a	getNbtTag
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	fn	net/minecraft/commands/arguments/ArgumentScoreboardObjective
	m	()Lfn;	a	objective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lexy;	a	getObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lexy;	b	getWritableObjective
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
c	fo	net/minecraft/commands/arguments/ArgumentScoreboardCriteria
	m	()Lfo;	a	criteria
	m	(Lavy;Ljava/lang/Object;)Ljava/lang/String;	a	getName
		p	1		stat
		p	2		value
	m	(Lcom/mojang/brigadier/StringReader;)Leyj;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leyj;	a	getCriteria
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	fp	net/minecraft/commands/arguments/ArgumentMathOperation
	m	()Lfp;	a	operation
	m	(II)I	a	lambda$getSimpleOperation$5
		p	0		a
		p	1		b
	m	(Lcom/mojang/brigadier/StringReader;)Lfp$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfp$a;	a	getOperation
		p	0		context
		p	1		name
	m	(Leye;Leye;)V	a	lambda$getOperation$0
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lfp$a;	a	getOperation
		p	0		operator
	m	(II)I	b	lambda$getSimpleOperation$4
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Lfp$b;	b	getSimpleOperation
		p	0		operator
	m	(II)I	c	lambda$getSimpleOperation$3
		p	0		a
		p	1		b
	m	(II)I	d	lambda$getSimpleOperation$2
		p	0		a
		p	1		b
	m	(II)I	e	lambda$getSimpleOperation$1
		p	0		a
		p	1		b
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
c	fp$a	net/minecraft/commands/arguments/ArgumentMathOperation$a
	m	(Leye;Leye;)V	apply	apply
		p	1		a
		p	2		b
c	fp$b	net/minecraft/commands/arguments/ArgumentMathOperation$b
	m	(II)I	apply	apply
		p	1		a
		p	2		b
	m	(Leye;Leye;)V	apply	apply
		p	1		a
		p	2		b
c	fq	net/minecraft/commands/arguments/ArgumentParticle
	m	(Lep;)V	<init>	<init>
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Llk;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticleType$2
	m	(Lcom/mojang/brigadier/StringReader;Ljo$a;)Llk;	a	readParticle
		p	0		reader
		p	1		registryLookup
	m	(Lcom/mojang/brigadier/StringReader;Ljo;)Lll;	a	readParticleType
		p	0		reader
		p	1		registryWrapper
	m	(Lcom/mojang/brigadier/StringReader;Lll;Ljo$a;)Llk;	a	readParticle
		p	0		reader
		p	1		type
		p	2		registryLookup
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Llk;	a	getParticle
		p	0		context
		p	1		name
	m	(Lep;)Lfq;	a	particle
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		error
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_OPTIONS
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Ljo$a;	d	registries
c	fr	net/minecraft/commands/arguments/ArgumentCriterionValue
	m	()Lfr$b;	a	intRange
	m	()Lfr$a;	b	floatRange
c	fr$a	net/minecraft/commands/arguments/ArgumentCriterionValue$a
	m	(Lcom/mojang/brigadier/StringReader;)Ldh$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldh$c;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	fr$b	net/minecraft/commands/arguments/ArgumentCriterionValue$b
	m	(Lcom/mojang/brigadier/StringReader;)Ldh$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldh$d;	a	getRange
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	fs	net/minecraft/commands/arguments/ResourceArgument
	m	(Lep;Lakq;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Ljm$c;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	a	getAttribute
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;)Ljm$c;	a	getResource
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Lep;Lakq;)Lfs;	a	resource
		p	0		registryAccess
		p	1		registryRef
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		element
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		element
		p	1		type
		p	2		expectedType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	b	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	c	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	d	getEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	e	getSummonableEntityType
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	f	getMobEffect
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	g	getEnchantment
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_UNKNOWN_RESOURCE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_INVALID_RESOURCE_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NOT_SUMMONABLE_ENTITY
	f	Lakq;	e	registryKey
	f	Ljo;	f	registryLookup
c	fs$a	net/minecraft/commands/arguments/ResourceArgument$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lfs$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfs$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfs;)Lfs$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lfs$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	fs$a$a	net/minecraft/commands/arguments/ResourceArgument$a$a
	m	(Lfs$a;Lakq;)V	<init>	<init>
		p	2		registryRef
	m	()Lio;	a	type
	m	(Lep;)Lfs;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfs$a;	a	this$0
	f	Lakq;	b	registryKey
c	ft	net/minecraft/commands/arguments/ResourceKeyArgument
	m	(Lakq;)V	<init>	<init>
		p	1		registryRef
	m	(Lakq;)Lft;	a	key
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Lakq;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakq;)Ljz;	a	getRegistry
		p	0		context
		p	1		registryRef
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	a	getConfiguredFeature
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lakq;	a	getRegistryKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lakq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$resolveKey$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	b	getStructure
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ljm$c;	b	resolveKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lakq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRegistryKey$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm$c;	c	getStructureTemplatePool
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_FEATURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_STRUCTURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_INVALID_TEMPLATE_POOL
	f	Lakq;	e	registryKey
c	ft$a	net/minecraft/commands/arguments/ResourceKeyArgument$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lft$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lft$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lft;)Lft$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lft$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	ft$a$a	net/minecraft/commands/arguments/ResourceKeyArgument$a$a
	m	(Lft$a;Lakq;)V	<init>	<init>
		p	2		registryRef
	m	()Lio;	a	type
	m	(Lep;)Lft;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lft$a;	a	this$0
	f	Lakq;	b	registryKey
c	fu	net/minecraft/commands/arguments/ArgumentMinecraftKeyRegistered
	m	()Lfu;	a	id
	m	(Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getRecipe$2
	m	(Lcom/mojang/brigadier/StringReader;)Lakr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lag;	a	getAdvancement
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lczb;	b	getRecipe
		p	0		context
		p	1		argumentName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lakr;	c	getId
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ADVANCEMENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_RECIPE
c	fv	net/minecraft/commands/arguments/ResourceOrIdArgument
	m	(Lep;Lakq;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		registryAccess
		p	2		registry
		p	3		entryCodec
	m	(Lcom/mojang/brigadier/StringReader;)Ljm;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
		p	1		argument
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;	a	getLootTable
		p	0		context
		p	1		argument
	m	(Lep;)Lfv$c;	a	lootTable
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		argument
	m	(Lcom/mojang/brigadier/StringReader;)Luy;	b	parseInlineOrId
		p	0		stringReader
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;	b	getLootModifier
		p	0		context
		p	1		argument
	m	(Lep;)Lfv$a;	b	lootModifier
		p	0		registryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Z	c	hasConsumedWholeArg
		p	0		stringReader
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;	c	getLootPredicate
		p	0		context
		p	1		argument
	m	(Lep;)Lfv$b;	c	lootPredicate
		p	0		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljm;	d	getResource
		p	0		context
		p	1		argument
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_FAILED_TO_PARSE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_INVALID
	f	Ljo$a;	d	registryLookup
	f	Z	e	hasRegistry
	f	Lcom/mojang/serialization/Codec;	f	codec
c	fv$a	net/minecraft/commands/arguments/ResourceOrIdArgument$a
	m	(Lep;)V	<init>	<init>
		p	1		registryAccess
c	fv$b	net/minecraft/commands/arguments/ResourceOrIdArgument$b
	m	(Lep;)V	<init>	<init>
		p	1		registryAccess
c	fv$c	net/minecraft/commands/arguments/ResourceOrIdArgument$c
	m	(Lep;)V	<init>	<init>
		p	1		registryAccess
c	fw	net/minecraft/commands/arguments/ResourceOrTagArgument
	m	(Lep;Lakq;)V	<init>	<init>
		p	1		registryAccess
		p	2		registryRef
	m	(Lakq;Ljm$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$2
		p	1		entry
	m	(Lakq;Ljq$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$3
		p	1		entryList
	m	(Lcom/mojang/brigadier/StringReader;)Lfw$c;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$6
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;)Lfw$c;	a	getResourceOrTag
		p	0		context
		p	1		name
		p	2		registryRef
	m	(Lep;Lakq;)Lfw;	a	resourceOrTag
		p	0		registryRef
		p	1		registryAccess
	m	(Lfw$c;Lakq;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		tag
		p	1		type
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		tag
		p	1		type
		p	2		expectedType
	m	(Lcom/mojang/brigadier/StringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$5
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_INVALID_TAG_TYPE
	f	Ljo;	d	registryLookup
	f	Lakq;	e	registryKey
c	fw$a	net/minecraft/commands/arguments/ResourceOrTagArgument$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lfw$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfw$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfw;)Lfw$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lfw$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	fw$a$a	net/minecraft/commands/arguments/ResourceOrTagArgument$a$a
	m	(Lfw$a;Lakq;)V	<init>	<init>
		p	2		registryRef
	m	()Lio;	a	type
	m	(Lep;)Lfw;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfw$a;	a	this$0
	f	Lakq;	b	registryKey
c	fw$b	net/minecraft/commands/arguments/ResourceOrTagArgument$b
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Ljm;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljm$c;	c	value
	f	Ljm$c;	a	value
c	fw$c	net/minecraft/commands/arguments/ResourceOrTagArgument$c
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	fw$d	net/minecraft/commands/arguments/ResourceOrTagArgument$d
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Ljm;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljq$c;	c	tag
	f	Ljq$c;	a	tag
c	fx	net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	m	(Lakq;)V	<init>	<init>
		p	1		registryRef
	m	(Lakq;)Lfx;	a	resourceOrTagKey
		p	0		registryRef
	m	(Lcom/mojang/brigadier/StringReader;)Lfx$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lakq;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lfx$c;	a	getResourceOrTagKey
		p	0		context
		p	1		name
		p	2		registryRef
		p	3		invalidException
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lfx$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTagKey$0
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lakq;	b	registryKey
c	fx$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lfx$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfx$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfx;)Lfx$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lfx$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	fx$a$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$a$a
	m	(Lfx$a;Lakq;)V	<init>	<init>
		p	2		registryRef
	m	()Lio;	a	type
	m	(Lep;)Lfx;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfx$a;	a	this$0
	f	Lakq;	b	registryKey
c	fx$b	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$b
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Ljm;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lakq;	c	key
	f	Lakq;	a	key
c	fx$c	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$c
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	()Ljava/lang/String;	b	asPrintable
c	fx$d	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$d
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lakq;)Ljava/util/Optional;	a	cast
		p	1		registryRef
	m	(Ljm;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Lawu;	c	key
	f	Lawu;	a	key
c	fy	net/minecraft/commands/arguments/ArgumentScoreholder
	m	(Z)V	<init>	<init>
		p	1		multiple
	m	()Lfy;	a	scoreHolder
	m	(Lcom/mojang/brigadier/StringReader;)Lfy$b;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfy$b;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfy$b;	a	parse
		p	1		reader
		p	2		allowAtSelectors
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leyf;	a	getName
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
		p	0		context
		p	1		name
		p	2		players
	m	(Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
		p	0		source
		p	1		players
	m	(Ljava/lang/String;Ljava/util/List;Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$5
		p	2		source
		p	3		holders
	m	(Ljava/util/List;Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
		p	1		source
		p	2		players
	m	(Ljava/util/UUID;Ljava/util/List;Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$4
		p	2		source
		p	3		holders
	m	()Lfy;	b	scoreHolders
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
		p	1		builderx
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	Z	d	multiple
c	fy$a	net/minecraft/commands/arguments/ArgumentScoreholder$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lfy$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lfy$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lfy;)Lfy$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lfy$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
	f	B	a	FLAG_MULTIPLE
c	fy$a$a	net/minecraft/commands/arguments/ArgumentScoreholder$a$a
	m	(Lfy$a;Z)V	<init>	<init>
		p	2		multiple
	m	()Lio;	a	type
	m	(Lep;)Lfy;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lfy$a;	a	this$0
	f	Z	b	multiple
c	fy$b	net/minecraft/commands/arguments/ArgumentScoreholder$b
	m	(Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		holders
c	fy$c	net/minecraft/commands/arguments/ArgumentScoreholder$c
	m	(Lhi;)V	<init>	<init>
		p	1		selector
	m	(Let;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
		p	1		source
		p	2		holders
	f	Lhi;	a	selector
c	fz	net/minecraft/commands/arguments/ArgumentScoreboardSlot
	m	()Lfz;	a	displaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Lexx;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lexx;	a	getDisplaySlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Ljava/util/Collection;	b	EXAMPLES
c	ga	net/minecraft/commands/arguments/SignedArgument
c	gb	net/minecraft/commands/arguments/ArgumentInventorySlot
	m	()Lgb;	a	slot
	m	(C)Z	a	lambda$parse$2
		p	0		c
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_ONLY_SINGLE_SLOT_ALLOWED
c	gc	net/minecraft/commands/arguments/SlotsArgument
	m	()Lgc;	a	slots
	m	(C)Z	a	lambda$parse$1
	m	(Lcom/mojang/brigadier/StringReader;)Lcrr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcrr;	a	getSlots
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		slotRange
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
c	gd	net/minecraft/commands/arguments/StringRepresentableArgument
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		codec
		p	2		valuesSupplier
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$getExamples$3
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
		p	1		name
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$listSuggestions$2
		p	0		enum_
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		value
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/util/function/Supplier;	c	values
c	ge	net/minecraft/commands/arguments/StyleArgument
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	(Lcom/mojang/brigadier/StringReader;)Lxw;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lxw;	a	getStyle
		p	0		context
		p	1		style
	m	(Lep;)Lge;	a	style
		p	0		registryAccess
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		style
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_JSON
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljo$a;	c	registries
c	gf	net/minecraft/commands/arguments/ArgumentScoreboardTeam
	m	()Lgf;	a	team
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leyb;	a	getTeam
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
c	gg	net/minecraft/commands/arguments/TemplateMirrorArgument
	m	()Lgd;	a	templateMirror
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldkv;	a	getMirror
		p	0		context
		p	1		id
c	gh	net/minecraft/commands/arguments/TemplateRotationArgument
	m	()Lgh;	a	templateRotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldmm;	a	getRotation
		p	0		context
		p	1		id
c	gi	net/minecraft/commands/arguments/ArgumentTime
	m	(I)V	<init>	<init>
		p	1		minimum
	m	()Lgi;	a	time
	m	(I)Lgi;	a	time
		p	0		minimum
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		value
		p	1		minimum
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_TICK_COUNT_TOO_LOW
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
	f	I	e	minimum
c	gi$a	net/minecraft/commands/arguments/ArgumentTime$a
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lgi$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lgi$a$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lgi;)Lgi$a$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lgi$a$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	gi$a$a	net/minecraft/commands/arguments/ArgumentTime$a$a
	m	(Lgi$a;I)V	<init>	<init>
		p	2		minimum
	m	()Lio;	a	type
	m	(Lep;)Lgi;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lgi$a;	a	this$0
	f	I	b	min
c	gj	net/minecraft/commands/arguments/ArgumentUUID
	m	()Lgj;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
c	gk	net/minecraft/commands/arguments/blocks/ArgumentTileLocation
	m	(Ldtc;Ljava/util/Set;Lub;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		data
	m	()Ldtc;	a	getState
	m	(Laqu;Ljd;)Z	a	test
		p	1		world
		p	2		pos
	m	(Laqu;Ljd;I)Z	a	place
		p	1		world
		p	2		pos
		p	3		flags
	m	(Ldtg;)Z	a	test
	m	()Ljava/util/Set;	b	getDefinedProperties
	f	Ldtc;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lub;	c	tag
c	gl	net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate
	m	(Lep;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lgl$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
		p	0		context
		p	1		name
	m	(Lep;)Lgl;	a	blockPredicate
		p	0		commandRegistryAccess
	m	(Lgn$a;)Lgl$b;	a	lambda$parse$0
		p	0		result
	m	(Lgn$b;)Lgl$b;	a	lambda$parse$1
		p	0		result
	m	(Ljo;Lcom/mojang/brigadier/StringReader;)Lgl$b;	a	parse
		p	0		registryWrapper
		p	1		reader
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Ljo;	b	blocks
c	gl$a	net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate$a
	m	(Ldtc;Ljava/util/Set;Lub;)V	<init>	<init>
		p	1		state
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldtg;)Z	a	test
	f	Ldtc;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lub;	c	nbt
c	gl$b	net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate$b
	m	()Z	a	requiresNbt
c	gl$c	net/minecraft/commands/arguments/blocks/ArgumentBlockPredicate$c
	m	(Ljq;Ljava/util/Map;Lub;)V	<init>	<init>
		p	1		tag
		p	2		properties
		p	3		nbt
	m	()Z	a	requiresNbt
	m	(Ldtg;)Z	a	test
	f	Ljq;	a	tag
	f	Lub;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
c	gm	net/minecraft/commands/arguments/blocks/ArgumentTile
	m	(Lep;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lgk;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgk;	a	getBlock
		p	0		context
		p	1		name
	m	(Lep;)Lgm;	a	block
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Ljo;	b	blocks
c	gn	net/minecraft/commands/arguments/blocks/ArgumentBlock
	m	(Ljo;Lcom/mojang/brigadier/StringReader;ZZ)V	<init>	<init>
		p	1		registryWrapper
		p	2		reader
		p	3		allowTag
		p	4		allowSnbt
	m	()V	a	parse
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(ILakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$7
	m	(Lakq;)Ljava/lang/String;	a	lambda$serialize$10
		p	0		key
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestPropertyNameOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lduf;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
		p	0		builder
		p	1		property
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
		p	1		builder
		p	2		name
	m	(Ldtc;)Ljava/lang/String;	a	serialize
		p	0		state
	m	(Lduf;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$8
		p	1		builder
	m	(Lduf;Ljava/lang/String;I)V	a	setValue
		p	1		property
		p	2		value
		p	3		cursor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		tag
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		block
		p	1		property
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		block
		p	1		property
		p	2		value
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$9
		p	2		builder
	m	(Ljava/lang/StringBuilder;Lduf;Ljava/lang/Comparable;)V	a	appendProperty
		p	0		builder
		p	1		property
		p	2		value
	m	(Ljo;Lcom/mojang/brigadier/StringReader;Z)Lgn$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Ljo;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	0		registryWrapper
		p	1		builder
		p	2		allowTag
		p	3		allowSnbt
	m	(Ljo;Ljava/lang/String;Z)Lgn$a;	a	parseForBlock
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	()Z	b	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestVaguePropertyNameOrEnd
		p	1		builder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		block
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		block
		p	1		property
	m	(Ljo;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		reader
		p	2		allowSnbt
	m	(Ljo;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
		p	0		registryWrapper
		p	1		string
		p	2		allowSnbt
	m	()V	c	readBlock
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestPropertyName
		p	1		builder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		block
		p	1		property
	m	()V	d	readTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestVaguePropertyName
		p	1		builder
	m	()V	e	readProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenNbt
		p	1		builder
	m	()V	f	readVagueProperties
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestEquals
		p	1		builder
	m	()V	g	readNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestNextPropertyOrEnd
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestOpenVaguePropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenPropertiesOrNbt
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestTag
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestItem
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
		p	1		builder
	f	Ljava/util/function/Function;	A	suggestions
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_UNKNOWN_TAG
	f	C	i	SYNTAX_START_PROPERTIES
	f	C	j	SYNTAX_START_NBT
	f	C	k	SYNTAX_END_PROPERTIES
	f	C	l	SYNTAX_EQUALS
	f	C	m	SYNTAX_PROPERTY_SEPARATOR
	f	C	n	SYNTAX_TAG
	f	Ljava/util/function/Function;	o	SUGGEST_NOTHING
	f	Ljo;	p	blocks
	f	Lcom/mojang/brigadier/StringReader;	q	reader
	f	Z	r	forTesting
	f	Z	s	allowNbt
	f	Ljava/util/Map;	t	properties
	f	Ljava/util/Map;	u	vagueProperties
	f	Lakr;	v	id
	f	Ldtd;	w	definition
	f	Ldtc;	x	state
	f	Lub;	y	nbt
	f	Ljq;	z	tag
c	gn$a	net/minecraft/commands/arguments/blocks/ArgumentBlock$a
	m	()Ldtc;	a	blockState
	m	()Ljava/util/Map;	b	properties
	m	()Lub;	c	nbt
	f	Ldtc;	a	blockState
	f	Ljava/util/Map;	b	properties
	f	Lub;	c	nbt
c	gn$b	net/minecraft/commands/arguments/blocks/ArgumentBlock$b
	m	()Ljq;	a	tag
	m	()Ljava/util/Map;	b	vagueProperties
	m	()Lub;	c	nbt
	f	Ljq;	a	tag
	f	Ljava/util/Map;	b	vagueProperties
	f	Lub;	c	nbt
c	gp	net/minecraft/commands/arguments/coordinates/ArgumentPosition
	m	()Lgp;	a	blockPos
	m	(Lcom/mojang/brigadier/StringReader;)Lgr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Laqu;Ljava/lang/String;)Ljd;	a	getLoadedBlockPos
		p	0		context
		p	1		world
		p	2		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljd;	a	getLoadedBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljd;	b	getBlockPos
		p	0		context
		p	1		name
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljd;	c	getSpawnablePos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	f	Ljava/util/Collection;	d	EXAMPLES
c	gq	net/minecraft/commands/arguments/coordinates/ArgumentVec2I
	m	()Lgq;	a	columnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lgr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laqi;	a	getColumnPos
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	gr	net/minecraft/commands/arguments/coordinates/IVectorPosition
	m	()Z	a	isXRelative
	m	(Let;)Lexc;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Let;)Lexb;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	(Let;)Ljd;	c	getBlockPos
		p	1		source
c	gs	net/minecraft/commands/arguments/coordinates/ArgumentVectorPosition
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	()Z	a	isXRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lgs;	a	parse
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
		p	0		reader
		p	1		startingCursorPos
	m	(Let;)Lexc;	a	getPosition
		p	1		source
	m	()Z	b	isYRelative
	m	(Let;)Lexb;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
c	gt	net/minecraft/commands/arguments/coordinates/ArgumentRotation
	m	()Lgt;	a	rotation
	m	(Lcom/mojang/brigadier/StringReader;)Lgr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgr;	a	getRotation
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
c	gu	net/minecraft/commands/arguments/coordinates/ArgumentRotationAxis
	m	()Lgu;	a	swizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
c	gv	net/minecraft/commands/arguments/coordinates/ArgumentVec2
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lgv;	a	vec2
	m	(Lcom/mojang/brigadier/StringReader;)Lgr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lexb;	a	getVec2
		p	0		context
		p	1		name
	m	(Z)Lgv;	a	vec2
		p	0		centerIntegers
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Z	c	centerCorrect
c	gw	net/minecraft/commands/arguments/coordinates/ArgumentVec3
	m	(Z)V	<init>	<init>
		p	1		centerIntegers
	m	()Lgw;	a	vec3
	m	(Lcom/mojang/brigadier/StringReader;)Lgr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lexc;	a	getVec3
		p	0		context
		p	1		name
	m	(Z)Lgw;	a	vec3
		p	0		centerIntegers
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgr;	b	getCoordinates
		p	0		context
		p	1		name
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Z	d	centerCorrect
c	gx	net/minecraft/commands/arguments/coordinates/ArgumentParserPosition
	m	(ZD)V	<init>	<init>
		p	1		relative
		p	2		value
	m	()Z	a	isRelative
	m	(D)D	a	get
		p	1		offset
	m	(Lcom/mojang/brigadier/StringReader;)Lgx;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lgx;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	C	c	PREFIX_RELATIVE
	f	Z	d	relative
	f	D	e	value
c	gy	net/minecraft/commands/arguments/coordinates/VectorPosition
	m	(Lgx;Lgx;Lgx;)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Z	a	isXRelative
	m	(DDD)Lgy;	a	absolute
		p	0		x
		p	2		y
		p	4		z
	m	(Lcom/mojang/brigadier/StringReader;)Lgy;	a	parseInt
		p	0		reader
	m	(Lcom/mojang/brigadier/StringReader;Z)Lgy;	a	parseDouble
		p	0		reader
		p	1		centerIntegers
	m	(Let;)Lexc;	a	getPosition
		p	1		source
	m	(Lexb;)Lgy;	a	absolute
		p	0		vec
	m	()Z	b	isYRelative
	m	(Let;)Lexb;	b	getRotation
		p	1		source
	m	()Z	c	isZRelative
	m	()Lgy;	d	current
	f	Lgx;	a	x
	f	Lgx;	b	y
	f	Lgx;	c	z
c	ha	net/minecraft/commands/arguments/item/ComponentPredicateParser
	m	(Lbmf;Lbmf;Lbmm;)Ljava/lang/Object;	a	lambda$createGrammar$7
		p	2		results
	m	(Lbmf;Lbmf;Lha$b;Lbmf;Lbmk;Lbmm;)Ljava/util/Optional;	a	lambda$createGrammar$9
		p	4		state
		p	5		results
	m	(Lbmm;)Lazs;	a	lambda$createGrammar$2
		p	0		results
	m	(Lha$b;)Lbmp;	a	createGrammar
		p	0		callbacks
	m	(Lha$b;Lbmf;Lbmf;Lbmm;)Ljava/util/List;	a	lambda$createGrammar$4
		p	3		results
	m	(Lha$b;Lbmf;Lbmm;)Ljava/lang/Object;	a	lambda$createGrammar$8
		p	2		results
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	a	lambda$createGrammar$5
		p	1		predicates
	m	(Lbmf;Lbmf;Lbmm;)Ljava/util/List;	b	lambda$createGrammar$6
		p	2		results
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	b	lambda$createGrammar$3
		p	1		predicates
	m	(Lbmf;Lbmf;Lbmm;)Ljava/util/Optional;	c	lambda$createGrammar$1
		p	2		results
	m	(Lbmf;Lbmf;Lbmm;)Ljava/util/List;	d	lambda$createGrammar$0
		p	2		results
c	ha$a	net/minecraft/commands/arguments/item/ComponentPredicateParser$a
	m	(Lbmf;Lha$b;)V	<init>	<init>
		p	1		symbol
		p	2		callbacks
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	validateElement
		p	1		reader
		p	2		id
c	ha$b	net/minecraft/commands/arguments/item/ComponentPredicateParser$b
	m	()Ljava/util/stream/Stream;	a	listElementTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	forElementType
		p	1		reader
		p	2		id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;)Ljava/lang/Object;	a	createComponentTest
		p	1		reader
		p	2		check
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Luy;)Ljava/lang/Object;	a	createComponentTest
		p	1		reader
		p	2		check
		p	3		nbt
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	negate
		p	1		predicate
	m	(Ljava/util/List;)Ljava/lang/Object;	a	anyOf
		p	1		predicates
	m	()Ljava/util/stream/Stream;	b	listTagTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	b	forTagType
		p	1		reader
		p	2		id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Luy;)Ljava/lang/Object;	b	createPredicateTest
		p	1		reader
		p	2		check
		p	3		nbt
	m	()Ljava/util/stream/Stream;	c	listComponentTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	c	lookupComponentType
		p	1		reader
		p	2		id
	m	()Ljava/util/stream/Stream;	d	listPredicateTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	d	lookupPredicateType
		p	1		reader
		p	2		id
c	ha$c	net/minecraft/commands/arguments/item/ComponentPredicateParser$c
	m	(Lbmf;Lha$b;)V	<init>	<init>
		p	1		symbol
		p	2		callbacks
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	validateElement
		p	1		reader
		p	2		id
c	ha$d	net/minecraft/commands/arguments/item/ComponentPredicateParser$d
	m	(Lbmf;Lha$b;)V	<init>	<init>
		p	1		symbol
		p	2		callbacks
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	validateElement
		p	1		reader
		p	2		id
c	ha$e	net/minecraft/commands/arguments/item/ComponentPredicateParser$e
	m	(Lbmf;Lha$b;)V	<init>	<init>
		p	1		symbol
		p	2		callbacks
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	validateElement
		p	1		reader
		p	2		id
c	hb	net/minecraft/commands/arguments/item/ArgumentTag
	m	()Lhb;	a	functions
	m	(Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Lcom/mojang/brigadier/StringReader;)Lhb$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakr;)Lig;	a	getFunction
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Lakr;)Ljava/util/Collection;	b	getFunctionTag
		p	0		context
		p	1		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
		p	0		context
		p	1		name
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	c	getFunctionCollection
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
c	hb$1	net/minecraft/commands/arguments/item/ArgumentTag$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
		p	1		context
	f	Lakr;	a	val$id
c	hb$2	net/minecraft/commands/arguments/item/ArgumentTag$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
		p	1		context
	f	Lakr;	a	val$id
c	hb$a	net/minecraft/commands/arguments/item/ArgumentTag$a
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
		p	1		context
c	hc	net/minecraft/commands/arguments/item/ArgumentItemStack
	m	(Lep;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lhd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhd;	a	getItem
		p	0		context
		p	1		name
	m	(Lep;)Lhc;	a	item
		p	0		commandRegistryAccess
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lhe;	b	parser
c	hd	net/minecraft/commands/arguments/item/ArgumentPredicateItemStack
	m	(Ljm;Lkn;)V	<init>	<init>
		p	1		item
		p	2		components
	m	()Lcul;	a	getItem
	m	(IZ)Lcuq;	a	createItemStack
		p	1		amount
		p	2		checkOverstack
	m	(Lakr;Luy;)Ljava/lang/String;	a	lambda$serializeComponents$1
		p	1		value
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$serializeComponents$2
		p	1		entry
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		item
		p	1		maxCount
	m	(Ljo$a;)Ljava/lang/String;	a	serialize
		p	1		registries
	m	()Ljava/lang/String;	b	getItemName
	m	(Ljo$a;)Ljava/lang/String;	b	serializeComponents
		p	1		registries
	m	()Ljava/lang/Object;	c	lambda$getItemName$3
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Ljm;	b	item
	f	Lkn;	c	components
c	he	net/minecraft/commands/arguments/item/ArgumentParserItemStack
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	(Lcom/mojang/brigadier/StringReader;)Lhe$a;	a	parse
		p	1		reader
	m	(Lcom/mojang/brigadier/StringReader;Lhe$d;)V	a	parse
		p	1		reader
		p	2		callbacks
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$validateComponents$5
		p	1		error
	m	(Lcom/mojang/brigadier/StringReader;Ljm;Lkn;)V	a	validateComponents
		p	0		reader
		p	1		item
		p	2		components
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	1		builder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		error
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		type
		p	1		error
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		type
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	C	a	SYNTAX_START_COMPONENTS
	f	C	b	SYNTAX_END_COMPONENTS
	f	C	c	SYNTAX_COMPONENT_SEPARATOR
	f	C	d	SYNTAX_COMPONENT_ASSIGNMENT
	f	C	e	SYNTAX_REMOVED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_UNKNOWN_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	ERROR_MALFORMED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_REPEATED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	k	ERROR_MALFORMED_ITEM
	f	Ljava/util/function/Function;	l	SUGGEST_NOTHING
	f	Ljo$b;	m	items
	f	Lcom/mojang/serialization/DynamicOps;	n	registryOps
c	he$1	net/minecraft/commands/arguments/item/ArgumentParserItemStack$1
	m	(Ljm;)V	a	visitItem
		p	1		item
	m	(Lkp;)V	a	visitRemovedComponent
		p	1		type
	m	(Lkp;Ljava/lang/Object;)V	a	visitComponent
		p	1		type
		p	2		value
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	a	val$itemResult
	f	Lkn$a;	b	val$componentsBuilder
c	he$a	net/minecraft/commands/arguments/item/ArgumentParserItemStack$a
	m	()Ljm;	a	item
	m	()Lkn;	b	components
	f	Ljm;	a	item
	f	Lkn;	b	components
c	he$b	net/minecraft/commands/arguments/item/ArgumentParserItemStack$b
	m	(Lhe;Lcom/mojang/brigadier/StringReader;Lhe$d;)V	<init>	<init>
		p	2		reader
		p	3		callbacks
	m	()V	a	parse
	m	(ILakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readItem$0
	m	(ILkp;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readComponent$1
		p	3		error
	m	(Lcom/mojang/brigadier/StringReader;)Lkp;	a	readComponentType
		p	0		reader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestStartComponents
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestComponent
		p	1		builder
		p	2		suffix
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Ljava/util/Map$Entry;)V	a	lambda$suggestComponent$3
		p	2		entry
	m	(Ljava/util/Map$Entry;)Lakr;	a	lambda$suggestComponent$2
		p	0		entry
	m	(Lkp;)V	a	readComponent
		p	1		type
	m	()V	b	readItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestNextOrEndComponents
		p	1		builder
	m	()V	c	readComponents
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestAssignment
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestItem
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestComponentAssignmentOrRemoval
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestComponent
		p	1		builder
	f	Lhe;	a	this$0
	f	Lcom/mojang/brigadier/StringReader;	b	reader
	f	Lhe$d;	c	visitor
c	he$c	net/minecraft/commands/arguments/item/ArgumentParserItemStack$c
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/StringReader;)Ljava/util/concurrent/CompletableFuture;	a	resolveSuggestions
		p	1		builder
		p	2		reader
	m	(Ljava/util/function/Function;)V	a	visitSuggestions
		p	1		suggestor
	f	Ljava/util/function/Function;	a	suggestions
c	he$d	net/minecraft/commands/arguments/item/ArgumentParserItemStack$d
	m	(Ljava/util/function/Function;)V	a	visitSuggestions
		p	1		suggestor
	m	(Ljm;)V	a	visitItem
		p	1		item
	m	(Lkp;)V	a	visitRemovedComponent
		p	1		type
	m	(Lkp;Ljava/lang/Object;)V	a	visitComponent
		p	1		type
		p	2		value
c	hf	net/minecraft/commands/arguments/item/ArgumentItemPredicate
	m	(Lep;)V	<init>	<init>
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/StringReader;)Lhf$d;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lhf$d;	a	getItemPredicate
		p	0		context
		p	1		name
	m	(Lcuq;)Z	a	lambda$static$6
		p	0		stack
	m	(Ldh$d;)Ljava/util/function/Predicate;	a	lambda$static$11
		p	0		range
	m	(Ldh$d;Lcuq;)Z	a	lambda$static$10
		p	1		stack
	m	(Lep;)Lhf;	a	itemPredicate
		p	0		commandRegistryAccess
	m	(Lhf$a;)Lhf$a;	a	lambda$static$9
		p	0		check
	m	(Lhf$c;)Lhf$c;	a	lambda$static$12
		p	0		check
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		predicate
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
	m	(Ldh$d;)Ljava/util/function/Predicate;	b	lambda$static$8
		p	0		range
	m	(Ldh$d;Lcuq;)Z	b	lambda$static$7
		p	1		stack
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		component
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		tag
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_MALFORMED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	ERROR_MALFORMED_PREDICATE
	f	Lakr;	h	COUNT_ID
	f	Ljava/util/Map;	i	PSEUDO_COMPONENTS
	f	Ljava/util/Map;	j	PSEUDO_PREDICATES
	f	Lbmp;	k	grammarWithContext
c	hf$a	net/minecraft/commands/arguments/item/ArgumentItemPredicate$a
	m	()Lakr;	a	id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakp;Luy;)Ljava/util/function/Predicate;	a	decode
		p	1		reader
		p	2		ops
		p	3		nbt
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;Lkp;)Lhf$a;	a	create
		p	0		reader
		p	1		id
		p	2		type
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$decode$3
		p	2		error
	m	(Lkp;Lcuq;)Z	a	lambda$create$0
		p	1		stack
	m	(Lkp;Ljava/lang/Object;)Ljava/util/function/Predicate;	a	lambda$create$2
		p	1		expected
	m	(Lkp;Ljava/lang/Object;Lcuq;)Z	a	lambda$create$1
		p	2		stack
	m	()Ljava/util/function/Predicate;	b	presenceChecker
	m	()Lcom/mojang/serialization/Decoder;	c	valueChecker
	f	Lakr;	a	id
	f	Ljava/util/function/Predicate;	b	presenceChecker
	f	Lcom/mojang/serialization/Decoder;	c	valueChecker
c	hf$b	net/minecraft/commands/arguments/item/ArgumentItemPredicate$b
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	()Ljava/util/stream/Stream;	a	listElementTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	forElementType
		p	1		reader
		p	2		id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lhf$a;)Ljava/util/function/Predicate;	a	createComponentTest
		p	1		reader
		p	2		check
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lhf$a;Luy;)Ljava/util/function/Predicate;	a	createComponentTest
		p	1		reader
		p	2		check
		p	3		nbt
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lhf$c;Luy;)Ljava/util/function/Predicate;	a	createPredicateTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;)Ljava/lang/Object;	a	createComponentTest
		p	1		reader
		p	2		check
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Luy;)Ljava/lang/Object;	a	createComponentTest
		p	1		reader
		p	2		check
		p	3		nbt
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	negate
		p	1		predicate
	m	(Ljava/util/List;)Ljava/lang/Object;	a	anyOf
		p	1		predicates
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	negate
		p	1		predicate
	m	(Ljm$c;)Lakr;	a	lambda$listComponentTypes$7
		p	0		entry
	m	(Ljm$c;Lcuq;)Z	a	lambda$forElementType$1
		p	1		stack
	m	(Ljq;Lcuq;)Z	a	lambda$forTagType$3
		p	1		stack
	m	()Ljava/util/stream/Stream;	b	listTagTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	b	forTagType
		p	1		reader
		p	2		id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Luy;)Ljava/lang/Object;	b	createPredicateTest
		p	1		reader
		p	2		check
		p	3		nbt
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljm$c;)Z	b	lambda$listComponentTypes$6
		p	0		entry
	m	()Ljava/util/stream/Stream;	c	listComponentTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	c	lookupComponentType
		p	1		reader
		p	2		id
	m	()Ljava/util/stream/Stream;	d	listPredicateTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	d	lookupPredicateType
		p	1		reader
		p	2		id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/util/function/Predicate;	e	forElementType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/util/function/Predicate;	f	forTagType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lhf$a;	g	lookupComponentType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lhf$c;	h	lookupPredicateType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	i	lambda$lookupPredicateType$5
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	j	lambda$lookupComponentType$4
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	k	lambda$forTagType$2
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	l	lambda$forElementType$0
	f	Ljo$b;	a	items
	f	Ljo$b;	b	components
	f	Ljo$b;	c	predicates
	f	Lakp;	d	registryOps
c	hf$c	net/minecraft/commands/arguments/item/ArgumentItemPredicate$c
	m	(Ljm$c;)V	<init>	<init>
		p	1		type
	m	()Lakr;	a	id
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakp;Luy;)Ljava/util/function/Predicate;	a	decode
		p	1		reader
		p	2		ops
		p	3		nbt
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$decode$1
		p	2		error
	m	(Lct;)Ljava/util/function/Predicate;	a	lambda$new$0
		p	0		predicate
	m	()Lcom/mojang/serialization/Decoder;	b	type
	f	Lakr;	a	id
	f	Lcom/mojang/serialization/Decoder;	b	type
c	hf$d	net/minecraft/commands/arguments/item/ArgumentItemPredicate$d
c	hi	net/minecraft/commands/arguments/selector/EntitySelector
	m	(IZZLjava/util/List;Ldh$c;Ljava/util/function/Function;Lewx;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbsx;Z)V	<init>	<init>
		p	1		count
		p	2		includesNonPlayers
		p	3		localWorldOnly
		p	4		predicates
		p	5		distance
		p	6		positionOffset
		p	7		box
		p	8		sorter
		p	9		senderOnly
		p	10		playerName
		p	11		uuid
		p	12		type
		p	13		usesAt
	m	()I	a	getMaxResults
	m	(Lcpl;Lbsr;)Z	a	lambda$getPredicate$1
		p	1		entity
	m	(Let;)Lbsr;	a	findSingleEntity
		p	1		source
	m	(Lewx;Lbsr;)Z	a	lambda$getPredicate$2
		p	1		entity
	m	(Lexc;)Lewx;	a	getAbsoluteAabb
		p	1		offset
	m	(Lexc;Lbsr;)Z	a	lambda$getPredicate$3
		p	2		entity
	m	(Lexc;Lewx;Lcpl;)Ljava/util/function/Predicate;	a	getPredicate
		p	1		pos
		p	2		box
		p	3		enabledFeatures
	m	(Lexc;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
		p	1		pos
		p	2		entities
	m	(Ljava/util/List;)Lwz;	a	joinNames
		p	0		entities
	m	(Ljava/util/List;Laqu;Lewx;Ljava/util/function/Predicate;)V	a	addEntities
		p	1		entities
		p	2		world
		p	3		box
		p	4		predicate
	m	()Z	b	includesEntities
	m	(Let;)Ljava/util/List;	b	findEntities
		p	1		source
	m	(Lexc;Ljava/util/List;)V	b	lambda$static$0
		p	0		pos
		p	1		entities
	m	()Z	c	isSelfSelector
	m	(Let;)Laqv;	c	findSinglePlayer
		p	1		source
	m	()Z	d	isWorldLimited
	m	(Let;)Ljava/util/List;	d	findPlayers
		p	1		source
	m	()Z	e	usesSelector
	m	(Let;)V	e	checkPermissions
		p	1		source
	m	()I	f	getResultLimit
	f	I	a	INFINITE
	f	Ljava/util/function/BiConsumer;	b	ORDER_ARBITRARY
	f	Ldxn;	c	ANY_TYPE
	f	I	d	maxResults
	f	Z	e	includesEntities
	f	Z	f	worldLimited
	f	Ljava/util/List;	g	contextFreePredicates
	f	Ldh$c;	h	range
	f	Ljava/util/function/Function;	i	position
	f	Lewx;	j	aabb
	f	Ljava/util/function/BiConsumer;	k	order
	f	Z	l	currentEntity
	f	Ljava/lang/String;	m	playerName
	f	Ljava/util/UUID;	n	entityUUID
	f	Ldxn;	o	type
	f	Z	p	usesSelector
c	hi$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Lbsr;)Lbsr;	a	tryCast
		p	1		obj
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
c	hj	net/minecraft/commands/arguments/selector/ArgumentParserSelector
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
		p	1		reader
		p	2		atAllowed
	m	()Z	A	hasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	()Z	H	hasAdvancements
	m	()V	I	finalizePredicates
	m	()Lhi;	a	getSelector
	m	(D)V	a	setX
		p	1		x
	m	(DDD)Lewx;	a	createAabb
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	a	setMaxResults
		p	1		limit
	m	(Lbsr;)Z	a	lambda$finalizePredicates$10
		p	1		entity
	m	(Lbsx;)V	a	limitToType
		p	1		entityType
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
		p	0		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
		p	1		builder
		p	2		consumer
	m	(Ldh$c;)V	a	setDistance
		p	1		distance
	m	(Ldh$d;)V	a	setLevel
		p	1		levelRange
	m	(Lek;)V	a	setRotX
		p	1		pitchRange
	m	(Lek;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
		p	1		angleRange
		p	2		entityToAngle
	m	(Lexc;)Lexc;	a	lambda$getSelector$9
		p	1		pos
	m	(Lexc;Lbsr;Lbsr;)I	a	lambda$static$4
		p	1		entity1
		p	2		entity2
	m	(Lexc;Ljava/util/List;)V	a	lambda$static$6
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Z	a	allowSelectors
		p	0		source
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
		p	1		sorter
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
		p	1		suggestionProvider
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
		p	1		predicate
	m	(Ljava/util/function/ToDoubleFunction;DDLbsr;)Z	a	lambda$createRotationPredicate$11
		p	5		entity
	m	(Z)V	a	setIncludesEntities
		p	1		includesNonPlayers
	m	()V	b	parseSelector
	m	(D)V	b	setY
		p	1		y
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
		p	1		builder
		p	2		consumer
	m	(Lek;)V	b	setRotY
		p	1		yawRange
	m	(Lexc;)Lexc;	b	lambda$getSelector$8
		p	0		pos
	m	(Lexc;Lbsr;Lbsr;)I	b	lambda$static$2
		p	1		entity1
		p	2		entity2
	m	(Lexc;Ljava/util/List;)V	b	lambda$static$5
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		option
	m	(Z)V	b	setHasNameEquals
		p	1		selectsName
	m	()V	c	parseNameOrUUID
	m	(D)V	c	setZ
		p	1		z
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
		p	1		builder
		p	2		consumer
	m	(Lexc;Ljava/util/List;)V	c	lambda$static$3
		p	0		pos
		p	1		entities
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		selectorType
	m	(Z)V	c	setHasNameNotEquals
		p	1		excludesName
	m	()V	d	parseOptions
	m	(D)V	d	setDeltaX
		p	1		dx
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
		p	1		builder
		p	2		consumer
	m	(Z)V	d	setLimited
		p	1		hasLimit
	m	()Z	e	shouldInvertValue
	m	(D)V	e	setDeltaY
		p	1		dy
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
		p	1		builder
		p	2		consumer
	m	(Z)V	e	setSorted
		p	1		hasSorter
	m	()Z	f	isTag
	m	(D)V	f	setDeltaZ
		p	1		dz
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	f	setHasGamemodeEquals
		p	1		selectsGameMode
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
		p	1		builder
		p	2		consumer
	m	(Z)V	g	setHasGamemodeNotEquals
		p	1		excludesGameMode
	m	()V	h	setWorldLimited
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
		p	1		builder
		p	2		consumer
	m	(Z)V	h	setHasTeamEquals
		p	1		selectsTeam
	m	()Ldh$c;	i	getDistance
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
		p	1		builder
		p	2		consumer
	m	(Z)V	i	setHasTeamNotEquals
		p	1		excludesTeam
	m	()Ldh$d;	j	getLevel
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$7
		p	0		builder
		p	1		consumer
	m	(Z)V	j	setHasScores
		p	1		selectsScores
	m	()Lek;	k	getRotX
	m	(Z)V	k	setHasAdvancements
		p	1		selectsAdvancements
	m	()Lek;	l	getRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	()Lhi;	t	parse
	m	()Z	u	isCurrentEntity
	m	()Z	v	hasNameEquals
	m	()Z	w	hasNameNotEquals
	m	()Z	x	isLimited
	m	()Z	y	isSorted
	m	()Z	z	hasGamemodeEquals
	f	Z	A	includesEntities
	f	Z	B	worldLimited
	f	Ldh$c;	C	distance
	f	Ldh$d;	D	level
	f	Ljava/lang/Double;	E	x
	f	Ljava/lang/Double;	F	y
	f	Ljava/lang/Double;	G	z
	f	Ljava/lang/Double;	H	deltaX
	f	Ljava/lang/Double;	I	deltaY
	f	Ljava/lang/Double;	J	deltaZ
	f	Lek;	K	rotX
	f	Lek;	L	rotY
	f	Ljava/util/List;	M	predicates
	f	Ljava/util/function/BiConsumer;	N	order
	f	Z	O	currentEntity
	f	Ljava/lang/String;	P	playerName
	f	I	Q	startPosition
	f	Ljava/util/UUID;	R	entityUUID
	f	Ljava/util/function/BiFunction;	S	suggestions
	f	Z	T	hasNameEquals
	f	Z	U	hasNameNotEquals
	f	Z	V	isLimited
	f	Z	W	isSorted
	f	Z	X	hasGamemodeEquals
	f	Z	Y	hasGamemodeNotEquals
	f	Z	Z	hasTeamEquals
	f	C	a	SYNTAX_SELECTOR_START
	f	Z	aa	hasTeamNotEquals
	f	Lbsx;	ab	type
	f	Z	ac	typeInverse
	f	Z	ad	hasScores
	f	Z	ae	hasAdvancements
	f	Z	af	usesSelectors
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	l	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	m	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	n	SUGGEST_NOTHING
	f	C	o	SYNTAX_OPTIONS_START
	f	C	p	SYNTAX_OPTIONS_END
	f	C	q	SYNTAX_OPTIONS_SEPARATOR
	f	C	r	SELECTOR_NEAREST_PLAYER
	f	C	s	SELECTOR_ALL_PLAYERS
	f	C	t	SELECTOR_RANDOM_PLAYERS
	f	C	u	SELECTOR_CURRENT_ENTITY
	f	C	v	SELECTOR_ALL_ENTITIES
	f	C	w	SELECTOR_NEAREST_ENTITY
	f	Lcom/mojang/brigadier/StringReader;	x	reader
	f	Z	y	allowSelectors
	f	I	z	maxResults
c	hk	net/minecraft/commands/arguments/selector/options/PlayerSelector
	m	(Lhj;)Z	A	lambda$bootStrap$21
		p	0		reader
	m	(Lhj;)V	B	lambda$bootStrap$20
		p	0		reader
	m	(Lhj;)Z	C	lambda$bootStrap$19
		p	0		reader
	m	(Lhj;)V	D	lambda$bootStrap$18
		p	0		reader
	m	(Lhj;)Z	E	lambda$bootStrap$17
		p	0		reader
	m	(Lhj;)V	F	lambda$bootStrap$16
		p	0		reader
	m	(Lhj;)Z	G	lambda$bootStrap$15
		p	0		reader
	m	(Lhj;)V	H	lambda$bootStrap$14
		p	0		reader
	m	(Lhj;)Z	I	lambda$bootStrap$13
		p	0		reader
	m	(Lhj;)V	J	lambda$bootStrap$12
		p	0		reader
	m	(Lhj;)Z	K	lambda$bootStrap$11
		p	0		reader
	m	(Lhj;)V	L	lambda$bootStrap$10
		p	0		reader
	m	(Lhj;)Z	M	lambda$bootStrap$9
		p	0		reader
	m	(Lhj;)V	N	lambda$bootStrap$8
		p	0		reader
	m	(Lhj;)Z	O	lambda$bootStrap$7
		p	0		reader
	m	(Lhj;)V	P	lambda$bootStrap$6
		p	0		reader
	m	()V	a	bootStrap
	m	(Lakq;ZLbsr;)Z	a	lambda$bootStrap$61
		p	2		entity
	m	(Lawu;ZLbsr;)Z	a	lambda$bootStrap$41
		p	2		entity
	m	(Lbsx;ZLbsr;)Z	a	lambda$bootStrap$43
		p	2		entity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
		p	0		builder
		p	1		consumer
	m	(Lhj;)Z	a	lambda$bootStrap$63
		p	0		reader
	m	(Lhj;ILakr;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$42
	m	(Lhj;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
		p	0		reader
		p	1		suggestionBuilder
	m	(Lhj;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$40
		p	1		builder
		p	2		consumer
	m	(Lhj;Ljava/lang/String;I)Lhk$a;	a	get
		p	0		reader
		p	1		option
		p	2		restoreCursor
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entity
	m	(Ljava/lang/String;Lhk$a;Ljava/util/function/Predicate;Lwz;)V	a	register
		p	0		id
		p	1		handler
		p	2		condition
		p	3		description
	m	(Ljava/lang/String;ZLbsr;)Z	a	lambda$bootStrap$46
		p	2		entity
	m	(Ljava/util/Map;Lai;)Z	a	lambda$bootStrap$56
		p	1		advancementProgress
	m	(Ljava/util/Map;Lbsr;)Z	a	lambda$bootStrap$58
		p	1		entity
	m	(Lub;ZLbsr;)Z	a	lambda$bootStrap$49
		p	2		entity
	m	(ZLai;)Z	a	lambda$bootStrap$57
		p	1		advancementProgress
	m	(ZLap;)Z	a	lambda$bootStrap$55
		p	1		criterionProgress
	m	(ZLdct;Lbsr;)Z	a	lambda$bootStrap$34
		p	2		entity
	m	(Lhj;)V	b	lambda$bootStrap$62
		p	0		reader
	m	(Lhj;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
		p	1		builder
		p	2		consumer
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		gameMode
	m	(Ljava/lang/String;ZLbsr;)Z	b	lambda$bootStrap$37
		p	2		entity
	m	(Ljava/util/Map;Lbsr;)Z	b	lambda$bootStrap$52
		p	1		entity
	m	(Lhj;)Z	c	lambda$bootStrap$60
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		sortType
	m	(Ljava/lang/String;ZLbsr;)Z	c	lambda$bootStrap$5
		p	2		entity
	m	(Lhj;)V	d	lambda$bootStrap$59
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
		p	0		option
	m	(Lhj;)Z	e	lambda$bootStrap$54
		p	0		reader
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
		p	0		option
	m	(Lhj;)V	f	lambda$bootStrap$53
		p	0		reader
	m	(Lhj;)Z	g	lambda$bootStrap$51
		p	0		reader
	m	(Lhj;)V	h	lambda$bootStrap$50
		p	0		reader
	m	(Lhj;)Z	i	lambda$bootStrap$48
		p	0		reader
	m	(Lhj;)V	j	lambda$bootStrap$47
		p	0		reader
	m	(Lhj;)Z	k	lambda$bootStrap$45
		p	0		reader
	m	(Lhj;)V	l	lambda$bootStrap$44
		p	0		reader
	m	(Lhj;)Z	m	lambda$bootStrap$39
		p	0		reader
	m	(Lhj;)V	n	lambda$bootStrap$38
		p	0		reader
	m	(Lhj;)Z	o	lambda$bootStrap$36
		p	0		reader
	m	(Lhj;)V	p	lambda$bootStrap$35
		p	0		reader
	m	(Lhj;)Z	q	lambda$bootStrap$32
		p	0		reader
	m	(Lhj;)V	r	lambda$bootStrap$31
		p	0		reader
	m	(Lhj;)Z	s	lambda$bootStrap$29
		p	0		reader
	m	(Lhj;)V	t	lambda$bootStrap$28
		p	0		reader
	m	(Lhj;)Z	u	lambda$bootStrap$27
		p	0		reader
	m	(Lhj;)V	v	lambda$bootStrap$26
		p	0		reader
	m	(Lhj;)Z	w	lambda$bootStrap$25
		p	0		reader
	m	(Lhj;)V	x	lambda$bootStrap$24
		p	0		reader
	m	(Lhj;)Z	y	lambda$bootStrap$23
		p	0		reader
	m	(Lhj;)V	z	lambda$bootStrap$22
		p	0		reader
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	f	Ljava/util/Map;	i	OPTIONS
c	hk$a	net/minecraft/commands/arguments/selector/options/PlayerSelector$a
	m	(Lhj;)V	handle	handle
		p	1		reader
c	hk$b	net/minecraft/commands/arguments/selector/options/PlayerSelector$b
	m	(Lhk$a;Ljava/util/function/Predicate;Lwz;)V	<init>	<init>
		p	1		handler
		p	2		condition
		p	3		description
	m	()Lhk$a;	a	modifier
	m	()Ljava/util/function/Predicate;	b	canUse
	m	()Lwz;	c	description
	f	Lhk$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	canUse
	f	Lwz;	c	description
c	hn	net/minecraft/commands/execution/ChainModifiers
	m	()Z	a	isForked
	m	(B)Lhn;	a	setFlag
		p	1		flag
	m	()Lhn;	b	setForked
	m	()Z	c	isReturn
	m	()Lhn;	d	setReturn
	m	()B	e	flags
	f	Lhn;	a	DEFAULT
	f	B	b	flags
	f	B	c	FLAG_FORKED
	f	B	d	FLAG_IS_RETURN
c	ho	net/minecraft/commands/execution/CommandQueueEntry
	m	()Lhu;	a	frame
	m	(Lhs;)V	a	execute
		p	1		context
	m	()Lhr;	b	action
	f	Lhu;	a	frame
	f	Lhr;	b	action
c	hp	net/minecraft/commands/execution/CustomCommandExecutor
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
c	hp$a	net/minecraft/commands/execution/CustomCommandExecutor$a
c	hp$b	net/minecraft/commands/execution/CustomCommandExecutor$b
	m	(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;Lev;Lhn;Lhv;)V	a	onError
		p	1		exception
		p	2		source
		p	3		flags
		p	4		tracer
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	b	runGuarded
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
c	hq	net/minecraft/commands/execution/CustomModifierExecutor
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	apply
		p	1		baseSource
		p	2		sources
		p	3		contextChain
		p	4		flags
		p	5		control
c	hq$a	net/minecraft/commands/execution/CustomModifierExecutor$a
c	hr	net/minecraft/commands/execution/EntryAction
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
c	hs	net/minecraft/commands/execution/ExecutionContext
	m	(IILbnf;)V	<init>	<init>
		p	1		maxCommandChainLength
		p	2		maxCommandForkCount
		p	3		profiler
	m	()V	a	runCommandQueue
	m	(I)V	a	discardAtDepthOrHigher
		p	1		depth
	m	(Lho;)V	a	queueNext
		p	1		entry
	m	(Lhs;Leq;)Lhu;	a	createTopFrame
		p	0		context
		p	1		returnValueConsumer
	m	(Lhs;Lii;Lev;Leq;)V	a	queueInitialFunctionCall
		p	0		context
		p	1		procedure
		p	2		source
		p	3		returnValueConsumer
	m	(Lhs;Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lev;Leq;)V	a	queueInitialCommandExecution
		p	0		context
		p	1		command
		p	2		contextChain
		p	3		source
		p	4		returnValueConsumer
	m	(Lhv;)V	a	tracer
		p	1		tracer
	m	()Lhv;	b	tracer
	m	(I)Lhu$a;	b	frameControlForDepth
		p	1		depth
	m	()Lbnf;	c	profiler
	m	(I)V	c	lambda$frameControlForDepth$0
	m	()I	d	forkLimit
	m	()V	e	incrementCost
	m	()V	f	handleQueueOverflow
	m	()V	g	pushNewCommands
	f	I	a	MAX_QUEUE_DEPTH
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	commandLimit
	f	I	d	forkLimit
	f	Lbnf;	e	profiler
	f	Lhv;	f	tracer
	f	I	g	commandQuota
	f	Z	h	queueOverflow
	f	Ljava/util/Deque;	i	commandQueue
	f	Ljava/util/List;	j	newTopCommands
	f	I	k	currentFrameDepth
c	ht	net/minecraft/commands/execution/ExecutionControl
	m	()Lhv;	a	tracer
	m	(Lhr;)V	a	queueNext
		p	1		action
	m	(Lhs;Lhu;)Lht;	a	create
		p	0		context
		p	1		frame
	m	(Lhv;)V	a	tracer
		p	1		tracer
	m	()Lhu;	b	currentFrame
c	ht$1	net/minecraft/commands/execution/ExecutionControl$1
	m	()Lhv;	a	tracer
	m	(Lhr;)V	a	queueNext
		p	1		action
	m	(Lhv;)V	a	tracer
		p	1		tracer
	m	()Lhu;	b	currentFrame
	f	Lhs;	a	val$context
	f	Lhu;	b	val$frame
c	hu	net/minecraft/commands/execution/Frame
	m	()V	a	returnFailure
	m	(I)V	a	returnSuccess
		p	1		returnValue
	m	()V	b	discard
	m	()I	c	depth
	m	()Leq;	d	returnValueConsumer
	m	()Lhu$a;	e	frameControl
	f	I	a	depth
	f	Leq;	b	returnValueConsumer
	f	Lhu$a;	c	frameControl
c	hu$a	net/minecraft/commands/execution/Frame$a
c	hv	net/minecraft/commands/execution/TraceCallbacks
	m	(ILakr;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(Ljava/lang/String;)V	a	onError
		p	1		message
c	hw	net/minecraft/commands/execution/UnboundEntryAction
	m	(Ljava/lang/Object;Lhs;Lhu;)V	a	lambda$bind$0
		p	2		context
		p	3		frame
	m	(Ljava/lang/Object;)Lhr;	bind	bind
		p	1		source
	m	(Ljava/lang/Object;Lhs;Lhu;)V	execute	execute
		p	1		source
		p	2		context
		p	3		frame
c	hy	net/minecraft/commands/execution/tasks/BuildContexts
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;)V	<init>	<init>
		p	1		command
		p	2		contextChain
	m	()Ljava/lang/String;	a	lambda$execute$1
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$execute$2
		p	0		context
		p	1		successful
		p	2		returnValue
	m	(Lev;Ljava/util/List;Lhs;Lhu;Lhn;)V	a	execute
		p	1		baseSource
		p	2		sources
		p	3		context
		p	4		frame
		p	5		flags
	m	(Lhs;Lhu;)V	a	traceCommandStart
		p	1		context
		p	2		frame
	m	(Lib;Lhu;Lev;)Lho;	a	lambda$execute$3
		p	1		frame
		p	2		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		count
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_FORK_LIMIT_REACHED
	f	Ljava/lang/String;	b	commandInput
	f	Lcom/mojang/brigadier/context/ContextChain;	c	command
c	hy$a	net/minecraft/commands/execution/tasks/BuildContexts$a
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lev;Ljava/util/List;)V	<init>	<init>
		p	1		command
		p	2		contextChain
		p	3		flags
		p	4		baseSource
		p	5		sources
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
	f	Lhn;	b	modifiers
	f	Lev;	c	originalSource
	f	Ljava/util/List;	d	sources
c	hy$b	net/minecraft/commands/execution/tasks/BuildContexts$b
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lev;)V	<init>	<init>
		p	1		command
		p	2		contextChain
		p	3		source
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
	f	Lev;	b	source
c	hy$c	net/minecraft/commands/execution/tasks/BuildContexts$c
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;)V	<init>	<init>
		p	1		command
		p	2		contextChain
	m	(Lev;Lhs;Lhu;)V	a	execute
	m	(Ljava/lang/Object;Lhs;Lhu;)V	execute	execute
		p	1		source
		p	2		context
		p	3		frame
c	hz	net/minecraft/commands/execution/tasks/CallFunction
	m	(Lii;Leq;Z)V	<init>	<init>
		p	1		function
		p	2		returnValueConsumer
		p	3		propagateReturn
	m	(Lev;Lhs;Lhu;)V	a	execute
	m	(Lev;Lhu;Lhw;)Lho;	a	lambda$execute$0
		p	1		frame
		p	2		action
	m	(Ljava/lang/Object;Lhs;Lhu;)V	execute	execute
		p	1		source
		p	2		context
		p	3		frame
	f	Lii;	a	function
	f	Leq;	b	resultCallback
	f	Z	c	returnParentFrame
c	ia	net/minecraft/commands/execution/tasks/ContinuationTask
	m	(Lia$a;Ljava/util/List;Lhu;)V	<init>	<init>
		p	1		wrapper
		p	2		actions
		p	3		frame
	m	(Lhs;Lhu;Ljava/util/List;Lia$a;)V	a	schedule
		p	0		context
		p	1		frame
		p	2		actions
		p	3		wrapper
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
	f	Lia$a;	a	taskFactory
	f	Ljava/util/List;	b	arguments
	f	Lho;	c	selfEntry
	f	I	d	index
c	ia$a	net/minecraft/commands/execution/tasks/ContinuationTask$a
	m	(Lhu;Ljava/lang/Object;)Lho;	create	create
		p	1		frame
		p	2		action
c	ib	net/minecraft/commands/execution/tasks/ExecuteCommand
	m	(Ljava/lang/String;Lhn;Lcom/mojang/brigadier/context/CommandContext;)V	<init>	<init>
		p	1		command
		p	2		flags
		p	3		context
	m	()Ljava/lang/String;	a	lambda$execute$0
	m	(Lev;Lhs;Lhu;)V	a	execute
	m	(Ljava/lang/Object;Lhs;Lhu;)V	execute	execute
		p	1		source
		p	2		context
		p	3		frame
	f	Ljava/lang/String;	a	commandInput
	f	Lhn;	b	modifiers
	f	Lcom/mojang/brigadier/context/CommandContext;	c	executionContext
c	ic	net/minecraft/commands/execution/tasks/FallthroughTask
	m	()Lhr;	a	instance
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
	f	Lic;	a	INSTANCE
c	id	net/minecraft/commands/execution/tasks/IsolatedCall
	m	(Ljava/util/function/Consumer;Leq;)V	<init>	<init>
		p	1		controlConsumer
		p	2		returnValueConsumer
	m	(Lhs;Lhu;)V	execute	execute
		p	1		context
		p	2		frame
	f	Ljava/util/function/Consumer;	a	taskProducer
	f	Leq;	b	output
c	ig	net/minecraft/commands/functions/CommandFunction
	m	()Lakr;	a	id
	m	(Lakr;Lcom/mojang/brigadier/CommandDispatcher;Lev;Ljava/util/List;)Lig;	a	fromLines
		p	0		id
		p	1		dispatcher
		p	2		source
		p	3		lines
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lev;Lcom/mojang/brigadier/StringReader;)Lhw;	a	parseCommand
		p	0		dispatcher
		p	1		source
		p	2		reader
	m	(Ljava/lang/CharSequence;)V	a	checkCommandLineLength
		p	0		command
	m	(Lub;Lcom/mojang/brigadier/CommandDispatcher;)Lii;	a	instantiate
		p	1		arguments
		p	2		dispatcher
	m	(Ljava/lang/CharSequence;)Z	b	shouldConcatenateNextLine
		p	0		string
c	ih	net/minecraft/commands/functions/FunctionBuilder
	m	(Lakr;)Lig;	a	build
		p	1		id
	m	(Lhw;)V	a	addCommand
		p	1		action
	m	(Ljava/lang/String;)I	a	getArgumentIndex
		p	1		variable
	m	(Ljava/lang/String;ILev;)V	a	addMacro
		p	1		command
		p	2		lineNum
		p	3		source
	m	(Ljava/util/List;)Lit/unimi/dsi/fastutil/ints/IntList;	a	convertToIndices
		p	1		variables
	f	Ljava/util/List;	a	plainEntries
	f	Ljava/util/List;	b	macroEntries
	f	Ljava/util/List;	c	macroArguments
c	ii	net/minecraft/commands/functions/InstantiatedFunction
	m	()Lakr;	a	id
	m	()Ljava/util/List;	b	entries
c	ij	net/minecraft/commands/functions/MacroFunction
	m	(Lakr;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		lines
		p	3		varNames
	m	()Lakr;	a	id
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
		p	0		format
	m	(Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;)V	a	lookupValues
		p	0		arguments
		p	1		indices
		p	2		out
	m	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;	a	lambda$substituteAndParse$2
		p	1		path
	m	(Ljava/util/List;Ljava/util/List;I)V	a	lambda$lookupValues$1
		p	2		index
	m	(Ljava/util/List;Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;)Lii;	a	substituteAndParse
		p	1		varNames
		p	2		arguments
		p	3		dispatcher
	m	(Lub;Lcom/mojang/brigadier/CommandDispatcher;)Lii;	a	instantiate
		p	1		arguments
		p	2		dispatcher
	m	(Luy;)Ljava/lang/String;	a	stringify
		p	0		nbt
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	I	b	MAX_CACHE_ENTRIES
	f	Ljava/util/List;	c	parameters
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;	d	cache
	f	Lakr;	e	id
	f	Ljava/util/List;	f	entries
c	ij$a	net/minecraft/commands/functions/MacroFunction$a
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lakr;)Lhw;	a	instantiate
		p	1		args
		p	2		dispatcher
		p	3		id
c	ij$b	net/minecraft/commands/functions/MacroFunction$b
	m	(Lil;Lit/unimi/dsi/fastutil/ints/IntList;Lev;)V	<init>	<init>
		p	1		invocation
		p	2		variableIndices
		p	3		source
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lakr;)Lhw;	a	instantiate
		p	1		args
		p	2		dispatcher
		p	3		id
	f	Lil;	a	template
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	parameters
	f	Lev;	c	compilationContext
c	ij$c	net/minecraft/commands/functions/MacroFunction$c
	m	(Lhw;)V	<init>	<init>
		p	1		action
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lakr;)Lhw;	a	instantiate
		p	1		args
		p	2		dispatcher
		p	3		id
	f	Lhw;	a	compiledAction
c	ik	net/minecraft/commands/functions/PlainTextFunction
	m	()Lakr;	a	id
	m	(Lub;Lcom/mojang/brigadier/CommandDispatcher;)Lii;	a	instantiate
		p	1		arguments
		p	2		dispatcher
	m	()Ljava/util/List;	b	entries
	f	Lakr;	a	id
	f	Ljava/util/List;	b	entries
c	il	net/minecraft/commands/functions/StringTemplate
	m	()Ljava/util/List;	a	segments
	m	(Ljava/lang/String;)Z	a	isValidVariableName
		p	0		name
	m	(Ljava/lang/String;I)Lil;	a	fromString
		p	0		command
		p	1		lineNumber
	m	(Ljava/util/List;)Ljava/lang/String;	a	substitute
		p	1		arguments
	m	()Ljava/util/List;	b	variables
	f	Ljava/util/List;	a	segments
	f	Ljava/util/List;	b	variables
c	io	net/minecraft/commands/synchronization/ArgumentTypeInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	io$a	net/minecraft/commands/synchronization/ArgumentTypeInfo$a
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
c	ip	net/minecraft/commands/synchronization/ArgumentTypeInfos
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio;	a	byClass
		p	0		argumentType
	m	(Ljava/lang/Class;)Z	a	isClassRecognized
		p	0		clazz
	m	(Ljz;)Lio;	a	bootstrap
		p	0		registry
	m	(Ljz;Ljava/lang/String;Ljava/lang/Class;Lio;)Lio;	a	register
		p	0		registry
		p	1		id
		p	2		clazz
		p	3		serializer
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	b	unpack
		p	0		argumentType
	m	(Ljava/lang/Class;)Ljava/lang/Class;	b	fixClassType
		p	0		clazz
	f	Ljava/util/Map;	a	BY_CLASS
c	iq	net/minecraft/commands/synchronization/ArgumentUtils
	m	(B)Z	a	numberHasMin
		p	0		flags
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeArgumentToJson
		p	0		json
		p	1		argumentType
	m	(Lcom/google/gson/JsonObject;Lio$a;)V	a	serializeCap
		p	0		json
		p	1		properties
	m	(Lcom/google/gson/JsonObject;Lio;Lio$a;)V	a	serializeCap
		p	0		json
		p	1		serializer
		p	2		properties
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
		p	0		dispatcher
		p	1		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
		p	0		rootNode
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
		p	0		node
		p	1		usedArgumentTypes
		p	2		visitedNodes
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
		p	2		child
	m	(ZZ)I	a	createNumberFlags
		p	0		hasMin
		p	1		hasMax
	m	(B)Z	b	numberHasMax
		p	0		flags
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	B	b	NUMBER_FLAG_MIN
	f	B	c	NUMBER_FLAG_MAX
c	ir	net/minecraft/commands/synchronization/SingletonArgumentInfo
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		typeSupplier
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lir$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lir$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Ljava/util/function/Function;)Lir;	a	contextAware
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;)Lir;	a	contextFree
		p	0		typeSupplier
	m	(Ljava/util/function/Supplier;Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$contextFree$0
		p	1		commandRegistryAccess
	m	(Lvw;)Lir$a;	a	deserializeFromNetwork
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lir$a;	b	unpack
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
	f	Lir$a;	a	template
c	ir$a	net/minecraft/commands/synchronization/SingletonArgumentInfo$a
	m	(Lir;Ljava/util/function/Function;)V	<init>	<init>
		p	2		typeSupplier
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lir;	a	this$0
	f	Ljava/util/function/Function;	b	constructor
c	is	net/minecraft/commands/synchronization/CompletionProviders
	m	(Lakr;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
		p	0		id
	m	(Lakr;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
		p	0		id
		p	1		provider
	m	(Lbsx;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		entityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbsx;)Z	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$5
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lakr;	a	getName
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$2
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	safelySwap
		p	0		provider
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	lambda$static$0
		p	0		context
		p	1		builder
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	ALL_RECIPES
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUMMONABLE_ENTITIES
	f	Ljava/util/Map;	e	PROVIDERS_BY_NAME
	f	Lakr;	f	DEFAULT_NAME
c	is$a	net/minecraft/commands/synchronization/CompletionProviders$a
	m	(Lakr;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
		p	1		id
		p	2		provider
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	delegate
	f	Lakr;	b	name
c	it	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lit$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lit$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lit$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lit$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	it$a	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$a
	m	(Lit;DD)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lit;	a	this$0
	f	D	b	min
	f	D	c	max
c	iu	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;)Liu$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Liu$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Liu$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Liu$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	iu$a	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$a
	m	(Liu;FF)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Liu;	a	this$0
	f	F	b	min
	f	F	c	max
c	iv	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Liv$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Liv$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Liv$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Liv$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	iv$a	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$a
	m	(Liv;II)V	<init>	<init>
		p	2		min
		p	3		max
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Liv;	a	this$0
	f	I	b	min
	f	I	c	max
c	iw	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;)Liw$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Liw$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Liw$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Liw$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	iw$a	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$a
	m	(Liw;JJ)V	<init>	<init>
		p	2		min
		p	4		max
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Liw;	a	this$0
	f	J	b	min
	f	J	c	max
c	ix	net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lio$a;	a	unpack
		p	1		argumentType
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;)Lix$a;	a	unpack
		p	1		argumentType
	m	(Lio$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lio$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lix$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
		p	1		properties
		p	2		json
	m	(Lix$a;Lvw;)V	a	serializeToNetwork
		p	1		properties
		p	2		buf
	m	(Lvw;)Lix$a;	a	deserializeFromNetwork
	m	(Lvw;)Lio$a;	b	deserializeFromNetwork
		p	1		buf
c	ix$1	net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
c	ix$a	net/minecraft/commands/synchronization/brigadier/ArgumentSerializerString$a
	m	(Lix;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V	<init>	<init>
		p	2		type
	m	()Lio;	a	type
	m	(Lep;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	instantiate
	m	(Lep;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
		p	1		commandRegistryAccess
	f	Lix;	a	this$0
	f	Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;	b	type
c	ja	net/minecraft/core/EnumAxisCycle
	m	()Lja;	a	inverse
	m	(DDDLji$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILji$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lji$a;)Lji$a;	a	cycle
		p	1		axis
	m	(Lji$a;Lji$a;)Lja;	a	between
		p	0		from
		p	1		to
	m	()[Lja;	b	$values
	f	Lja;	a	NONE
	f	Lja;	b	FORWARD
	f	Lja;	c	BACKWARD
	f	[Lji$a;	d	AXIS_VALUES
	f	[Lja;	e	VALUES
	f	[Lja;	f	$VALUES
c	ja$1	net/minecraft/core/EnumAxisCycle$1
	m	()Lja;	a	inverse
	m	(DDDLji$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILji$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lji$a;)Lji$a;	a	cycle
		p	1		axis
c	ja$2	net/minecraft/core/EnumAxisCycle$2
	m	()Lja;	a	inverse
	m	(DDDLji$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILji$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lji$a;)Lji$a;	a	cycle
		p	1		axis
c	ja$3	net/minecraft/core/EnumAxisCycle$3
	m	()Lja;	a	inverse
	m	(DDDLji$a;)D	a	cycle
		p	1		x
		p	3		y
		p	5		z
		p	7		axis
	m	(IIILji$a;)I	a	cycle
		p	1		x
		p	2		y
		p	3		z
		p	4		axis
	m	(Lji$a;)Lji$a;	a	cycle
		p	1		axis
c	jb	jb
	m	(Ljd;Ljd;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()Z	a	isBlock
	m	(Ljd;)Ljb;	a	of
		p	0		pos
	m	(Ljd;Ljd;)Ljb;	a	of
		p	0		first
		p	1		second
	m	(Lji;I)Ljb;	a	extend
		p	1		direction
		p	2		offset
	m	(Lkh;)Ljb;	a	offset
		p	1		offset
	m	()Lewx;	b	aabb
	m	(Ljd;)Ljb;	b	include
		p	1		pos
	m	(Lji;I)Ljb;	b	move
		p	1		direction
		p	2		offset
	m	()I	c	sizeX
	m	(Ljd;)Z	c	contains
		p	1		pos
	m	()I	d	sizeY
	m	()I	e	sizeZ
	m	()Ljd;	f	min
	m	()Ljd;	g	max
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	min
	f	Ljd;	c	max
c	jb$1	jb$1
	m	(Lio/netty/buffer/ByteBuf;)Ljb;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljb;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	jc	jc
	m	(Lj;)Lj;	a	blockCenterToCorner
		p	0		transformation
	m	(Lj;Lji;)Lj;	a	getUVLockTransform
		p	0		transformation
		p	1		dir
	m	(Ljava/util/EnumMap;)V	a	lambda$static$1
		p	0		map
	m	(Lj;)Lj;	b	blockCornerToCenter
		p	0		transformation
	m	(Ljava/util/EnumMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	f	Lorg/slf4j/Logger;	c	LOGGER
c	jd	net/minecraft/core/BlockPosition
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Lkh;)V	<init>	<init>
		p	1		pos
	m	()J	a	asLong
	m	(DDD)Ljd;	a	containing
		p	0		x
		p	2		y
		p	4		z
	m	(I)Ljd;	a	multiply
	m	(III)J	a	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILayw;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(J)I	a	getX
		p	0		packedPos
	m	(JIII)J	a	offset
		p	0		value
		p	2		x
		p	3		y
		p	4		z
	m	(JLji;)J	a	offset
		p	0		value
		p	2		direction
	m	(Layw;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
		p	0		random
		p	1		count
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Layw;ILjd;I)Ljava/lang/Iterable;	a	randomInCube
		p	0		random
		p	1		count
		p	2		around
		p	3		range
	m	(Ldmm;)Ljd;	a	rotate
		p	1		rotation
	m	(Lejj;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lewx;)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		box
	m	(Lexc;)Lexc;	a	clampLocationWithin
		p	1		pos
	m	(Ljava/util/Queue;ILjd;)V	a	lambda$breadthFirstTraversal$7
		p	2		queuedPos
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	(Ljd;)Ljava/util/stream/Stream;	a	squareOutSouthEast
		p	0		pos
	m	(Ljd;III)Ljava/lang/Iterable;	a	withinManhattan
		p	0		center
		p	1		rangeX
		p	2		rangeY
		p	3		rangeZ
	m	(Ljd;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I	a	breadthFirstTraversal
		p	0		pos
		p	1		maxDepth
		p	2		maxIterations
		p	3		nextQueuer
		p	4		callback
	m	(Ljd;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
		p	0		pos
		p	1		horizontalRange
		p	2		verticalRange
		p	3		condition
	m	(Ljd;ILji;Lji;)Ljava/lang/Iterable;	a	spiralAround
		p	0		center
		p	1		radius
		p	2		firstDirection
		p	3		secondDirection
	m	(Ljd;Ljd;)Ljd;	a	min
		p	0		a
		p	1		b
	m	(Lji$a;I)Ljd;	a	relative
	m	(Lji;)Ljd;	a	relative
	m	(Lji;I)Ljd;	a	relative
	m	(Lji;Lji;Ljd;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(Ljw;)Ljd;	a	containing
		p	0		pos
	m	(Lkh;)Ljd;	a	offset
	m	([I)Ljd;	a	lambda$static$0
		p	0		values
	m	()Lexc;	b	getCenter
	m	(I)Ljd;	b	above
		p	1		distance
	m	(III)Ljd;	b	offset
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
		p	0		startX
		p	1		startY
		p	2		startZ
		p	3		endX
		p	4		endY
		p	5		endZ
	m	(J)I	b	getY
		p	0		packedPos
	m	(Ljd;)Ljava/util/stream/IntStream;	b	lambda$static$2
		p	0		pos
	m	(Ljd;III)Ljava/util/stream/Stream;	b	withinManhattanStream
		p	0		center
		p	1		maxX
		p	2		maxY
		p	3		maxZ
	m	(Ljd;Ljd;)Ljd;	b	max
		p	0		a
		p	1		b
	m	(Lji$a;I)Lkh;	b	relative
		p	1		axis
		p	2		distance
	m	(Lji;)Lkh;	b	relative
		p	1		direction
	m	(Lji;I)Lkh;	b	relative
		p	1		direction
		p	2		distance
	m	(Lkh;)Ljd;	b	subtract
	m	()Lexc;	c	getBottomCenter
	m	(I)Ljd;	c	below
	m	(III)Lkh;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(J)I	c	getZ
		p	0		packedPos
	m	(Ljd;Ljd;)Ljava/lang/Iterable;	c	betweenClosed
		p	0		start
		p	1		end
	m	(Lkh;)Ljd;	c	cross
		p	1		pos
	m	()Ljd;	d	above
	m	(I)Ljd;	d	north
		p	1		distance
	m	(J)Ljd;	d	of
		p	0		packedPos
	m	(Ljd;Ljd;)Ljava/util/stream/Stream;	d	betweenClosedStream
		p	0		start
		p	1		end
	m	(Lkh;)Lkh;	d	cross
		p	1		vec
	m	()Ljd;	e	below
	m	(I)Ljd;	e	south
		p	1		distance
	m	(J)J	e	getFlatIndex
		p	0		y
	m	(Lkh;)Lkh;	e	subtract
		p	1		vec
	m	()Ljd;	f	north
	m	(I)Ljd;	f	west
		p	1		distance
	m	(Lkh;)Lkh;	f	offset
		p	1		vec
	m	()Ljd;	g	south
	m	(I)Ljd;	g	east
		p	1		distance
	m	()Ljd;	h	west
	m	(I)Ljd;	h	atY
		p	1		y
	m	()Ljd;	i	east
	m	(I)Lkh;	i	east
		p	1		distance
	m	()Ljd;	j	immutable
	m	(I)Lkh;	j	west
		p	1		distance
	m	()Ljd$a;	k	mutable
	m	(I)Lkh;	k	south
		p	1		distance
	m	()Lkh;	l	east
	m	(I)Lkh;	l	north
		p	1		distance
	m	()Lkh;	m	west
	m	(I)Lkh;	m	below
		p	1		distance
	m	()Lkh;	n	south
	m	(I)Lkh;	n	above
		p	1		distance
	m	()Lkh;	o	north
	m	(I)Lkh;	o	multiply
		p	1		scale
	m	()Lkh;	p	below
	m	()Lkh;	q	above
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljd;	c	ZERO
	f	I	d	PACKED_Y_LENGTH
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Z_LENGTH
	f	J	j	PACKED_X_MASK
	f	J	k	PACKED_Y_MASK
	f	J	l	PACKED_Z_MASK
	f	I	m	Y_OFFSET
	f	I	n	Z_OFFSET
	f	I	o	X_OFFSET
c	jd$1	net/minecraft/core/BlockPosition$1
	m	(Lio/netty/buffer/ByteBuf;)Ljd;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljd;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	jd$2	net/minecraft/core/BlockPosition$2
	m	()Ljd;	a	computeNext
	f	Ljd$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Layw;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
c	jd$3	net/minecraft/core/BlockPosition$3
	m	()Ljd;	a	computeNext
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	f	Ljd$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
c	jd$4	net/minecraft/core/BlockPosition$4
	m	()Ljd;	a	computeNext
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	f	Ljd$a;	g	cursor
	f	I	h	index
c	jd$5	net/minecraft/core/BlockPosition$5
	m	()Ljd$a;	a	computeNext
	f	Lji;	a	val$firstDirection
	f	Lji;	b	val$secondDirection
	f	Ljd;	c	val$center
	f	I	d	val$radius
	f	[Lji;	e	directions
	f	Ljd$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
c	jd$6	net/minecraft/core/BlockPosition$6
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
c	jd$a	net/minecraft/core/BlockPosition$MutableBlockPosition
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(I)Ljd;	a	multiply
	m	(Ldmm;)Ljd;	a	rotate
		p	1		rotation
	m	(Lja;III)Ljd$a;	a	set
		p	1		axis
		p	2		x
		p	3		y
		p	4		z
	m	(Lji$a;I)Ljd;	a	relative
	m	(Lji$a;II)Ljd$a;	a	clamp
		p	1		axis
		p	2		min
		p	3		max
	m	(Lji;I)Ljd;	a	relative
	m	(Lkh;III)Ljd$a;	a	setWithOffset
		p	1		pos
		p	2		x
		p	3		y
		p	4		z
	m	(Lkh;Lji;)Ljd$a;	a	setWithOffset
		p	1		pos
		p	2		direction
	m	(Lkh;Lkh;)Ljd$a;	a	setWithOffset
		p	1		vec1
		p	2		vec2
	m	(DDD)Ljd$a;	b	set
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ljd;	b	offset
	m	(Lji$a;I)Lkh;	b	relative
		p	1		axis
		p	2		distance
	m	(Lji;)Lkh;	b	relative
		p	1		direction
	m	(Lji;I)Lkh;	b	relative
		p	1		direction
		p	2		distance
	m	(III)Lkh;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(Lji;)Ljd$a;	c	move
		p	1		direction
	m	(Lji;I)Ljd$a;	c	move
		p	1		direction
		p	2		distance
	m	(III)Ljd$a;	d	set
		p	1		x
		p	2		y
		p	3		z
	m	(Lkh;)Lkh;	d	cross
		p	1		vec
	m	(III)Ljd$a;	e	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(Lkh;)Lkh;	e	subtract
		p	1		vec
	m	(J)Ljd$a;	f	set
		p	1		pos
	m	(Lkh;)Lkh;	f	offset
		p	1		vec
	m	(Lkh;)Ljd$a;	g	set
		p	1		pos
	m	(Lkh;)Ljd$a;	h	move
		p	1		vec
	m	(I)Lkh;	i	east
		p	1		distance
	m	()Ljd;	j	immutable
	m	(I)Lkh;	j	west
		p	1		distance
	m	(I)Lkh;	k	south
		p	1		distance
	m	()Lkh;	l	east
	m	(I)Lkh;	l	north
		p	1		distance
	m	()Lkh;	m	west
	m	(I)Lkh;	m	below
		p	1		distance
	m	()Lkh;	n	south
	m	(I)Lkh;	n	above
		p	1		distance
	m	()Lkh;	o	north
	m	(I)Lkh;	o	multiply
		p	1		scale
	m	()Lkh;	p	below
	m	(I)Ljd$a;	p	setX
	m	()Lkh;	q	above
	m	(I)Ljd$a;	q	setY
	m	(I)Ljd$a;	r	setZ
	m	(I)Lkh;	s	setZ
		p	1		z
	m	(I)Lkh;	t	setY
		p	1		y
	m	(I)Lkh;	u	setX
		p	1		x
c	je	net/minecraft/core/Cloner
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		elementCodec
	m	(Ljava/lang/Object;Ljo$a;Ljo$a;)Ljava/lang/Object;	a	clone
		p	1		value
		p	2		subsetRegistry
		p	3		fullRegistry
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$clone$1
		p	0		error
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	b	lambda$clone$0
		p	0		error
	f	Lcom/mojang/serialization/Codec;	a	directCodec
c	je$a	net/minecraft/core/Cloner$a
	m	(Lakq;)Lje;	a	cloner
		p	1		registryRef
	m	(Lakq;Lcom/mojang/serialization/Codec;)Lje$a;	a	addCodec
		p	1		registryRef
		p	2		elementCodec
	f	Ljava/util/Map;	a	codecs
c	jf	net/minecraft/core/CursorPosition
	m	(IIIIII)V	<init>	<init>
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
c	jg	net/minecraft/core/DefaultedMappedRegistry
	m	(Ljava/lang/String;Lakq;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		defaultId
		p	2		key
		p	3		lifecycle
		p	4		intrusive
	m	()Ljava/util/Optional;	a	getAny
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lakq;Ljava/lang/Object;Ljy;)Ljm$c;	a	register
		p	1		key
		p	2		value
		p	3		info
	m	(Lakr;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Layw;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	()Lakr;	b	getDefaultKey
	m	(Lakr;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Ljava/lang/Object;)Lakr;	b	getKey
		p	1		value
	m	()Ljava/util/Optional;	w	lambda$getRandom$0
	f	Lakr;	b	defaultKey
	f	Ljm$c;	c	defaultValue
c	jh	net/minecraft/core/RegistryBlocks
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lakr;)Ljava/lang/Object;	a	get
		p	1		id
	m	()Lakr;	b	getDefaultKey
	m	(Ljava/lang/Object;)Lakr;	b	getKey
		p	1		value
c	ji	net/minecraft/core/EnumDirection
	m	(Ljava/lang/String;IIIILjava/lang/String;Lji$b;Lji$a;Lkh;)V	<init>	<init>
		p	3		id
		p	4		idOpposite
		p	5		idHorizontal
		p	6		name
		p	7		direction
		p	8		axis
		p	9		vector
	m	()Ljava/util/stream/Stream;	a	stream
	m	(D)Lji;	a	fromYRot
		p	0		rotation
	m	(DDD)Lji;	a	getNearest
		p	0		x
		p	2		y
		p	4		z
	m	(F)Z	a	isFacingAngle
		p	1		yaw
	m	(FFF)Lji;	a	getNearest
		p	0		x
		p	1		y
		p	2		z
	m	(I)Lji;	a	from3DDataValue
		p	0		id
	m	(III)Lji;	a	fromDelta
		p	0		x
		p	1		y
		p	2		z
	m	(Layw;)Ljava/util/Collection;	a	allShuffled
		p	0		random
	m	(Lbsr;)[Lji;	a	orderedByNearest
		p	0		entity
	m	(Lbsr;Lji$a;)Lji;	a	getFacingAxis
		p	0		entity
		p	1		axis
	m	(Lexc;)Lji;	a	getNearest
		p	0		vec
	m	(Ljava/lang/String;)Lji;	a	byName
		p	0		name
	m	(Lji$a;)Lji;	a	getClockWise
		p	1		axis
	m	(Lji$a;Lji$b;)Lji;	a	fromAxisAndDirection
		p	0		axis
		p	1		direction
	m	(Lji$b;Lji$a;)Lji;	a	get
		p	0		direction
		p	1		axis
	m	(Lji;)Lcom/mojang/serialization/DataResult;	a	verifyVertical
		p	0		direction
	m	(Lji;Lji;Lji;)[Lji;	a	makeDirectionArray
		p	0		first
		p	1		second
		p	2		third
	m	(Lorg/joml/Matrix4f;Lji;)Lji;	a	rotate
		p	0		matrix
		p	1		direction
	m	()Lorg/joml/Quaternionf;	b	getRotation
	m	(I)Lji;	b	from2DDataValue
		p	0		value
	m	(Layw;)Lji;	b	getRandom
		p	0		random
	m	(Lji$a;)Lji;	b	getCounterClockWise
		p	1		axis
	m	(Lji;)I	b	lambda$static$3
		p	0		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)[Lji;	c	lambda$static$4
	m	(Lji;)Z	c	lambda$static$2
		p	0		direction
	m	()I	d	get3DDataValue
	m	(I)[Lji;	d	lambda$static$1
	m	(Lji;)I	d	lambda$static$0
		p	0		direction
	m	()I	e	get2DDataValue
	m	()Lji$b;	f	getAxisDirection
	m	()Lji;	g	getOpposite
	m	()Lji;	h	getClockWise
	m	()Lji;	i	getCounterClockWise
	m	()I	j	getStepX
	m	()I	k	getStepY
	m	()I	l	getStepZ
	m	()Lorg/joml/Vector3f;	m	step
	m	()Ljava/lang/String;	n	getName
	m	()Lji$a;	o	getAxis
	m	()F	p	toYRot
	m	()Lkh;	q	getNormal
	m	()Lji;	r	getClockWiseX
	m	()Lji;	s	getCounterClockWiseX
	m	()Lji;	t	getClockWiseZ
	m	()Lji;	u	getCounterClockWiseZ
	m	()Ljava/lang/String;	v	lambda$verifyVertical$5
	m	()[Lji;	w	$values
	f	Lji;	a	DOWN
	f	Lji;	b	UP
	f	Lji;	c	NORTH
	f	Lji;	d	SOUTH
	f	Lji;	e	WEST
	f	Lji;	f	EAST
	f	Lazk$a;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lyx;	j	STREAM_CODEC
	f	I	k	data3d
	f	I	l	oppositeIndex
	f	I	m	data2d
	f	Ljava/lang/String;	n	name
	f	Lji$a;	o	axis
	f	Lji$b;	p	axisDirection
	f	Lkh;	q	normal
	f	[Lji;	r	VALUES
	f	[Lji;	s	BY_3D_DATA
	f	[Lji;	t	BY_2D_DATA
	f	[Lji;	u	$VALUES
c	ji$a	net/minecraft/core/EnumDirection$EnumAxis
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
	m	(Layw;)Lji$a;	a	getRandom
		p	0		random
	m	(Ljava/lang/String;)Lji$a;	a	byName
		p	0		name
	m	(Lji;)Z	a	test
	m	()Z	b	isVertical
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isHorizontal
	m	()Lji$c;	e	getPlane
	m	()[Lji$a;	f	$values
	f	Lji$a;	a	X
	f	Lji$a;	b	Y
	f	Lji$a;	c	Z
	f	[Lji$a;	d	VALUES
	f	Lazk$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lji$a;	g	$VALUES
c	ji$a$1	net/minecraft/core/EnumDirection$EnumAxis$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ji$a$2	net/minecraft/core/EnumDirection$EnumAxis$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ji$a$3	net/minecraft/core/EnumDirection$EnumAxis$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDD)D	a	choose
		p	1		x
		p	3		y
		p	5		z
	m	(III)I	a	choose
		p	1		x
		p	2		y
		p	3		z
c	ji$b	net/minecraft/core/EnumDirection$EnumAxisDirection
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		offset
		p	4		description
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Lji$b;	c	opposite
	m	()[Lji$b;	d	$values
	f	Lji$b;	a	POSITIVE
	f	Lji$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Lji$b;	e	$VALUES
c	ji$c	net/minecraft/core/EnumDirection$EnumDirectionLimit
	m	(Ljava/lang/String;I[Lji;[Lji$a;)V	<init>	<init>
		p	3		facingArray
		p	4		axisArray
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Layw;)Lji;	a	getRandomDirection
		p	1		random
	m	(Lji;)Z	a	test
	m	()I	b	length
	m	(Layw;)Lji$a;	b	getRandomAxis
		p	1		random
	m	()[Lji$c;	c	$values
	m	(Layw;)Ljava/util/List;	c	shuffledCopy
		p	1		random
	f	Lji$c;	a	HORIZONTAL
	f	Lji$c;	b	VERTICAL
	f	[Lji;	c	faces
	f	[Lji$a;	d	axis
	f	[Lji$c;	e	$VALUES
c	jj	net/minecraft/core/EnumDirection8
	m	(Ljava/lang/String;I[Lji;)V	<init>	<init>
		p	3		directions
	m	()Ljava/util/Set;	a	getDirections
	m	()I	b	getStepX
	m	()I	c	getStepZ
	m	()[Ljj;	d	$values
	f	Ljj;	a	NORTH
	f	Ljj;	b	NORTH_EAST
	f	Ljj;	c	EAST
	f	Ljj;	d	SOUTH_EAST
	f	Ljj;	e	SOUTH
	f	Ljj;	f	SOUTH_WEST
	f	Ljj;	g	WEST
	f	Ljj;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	Lkh;	j	step
	f	[Ljj;	k	$VALUES
c	jk	net/minecraft/core/BlockPropertyJigsawOrientation
	m	(Ljava/lang/String;ILjava/lang/String;Lji;Lji;)V	<init>	<init>
		p	3		name
		p	4		facing
		p	5		rotation
	m	()Lji;	a	front
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lji;Lji;)Ljk;	a	fromFrontAndTop
		p	0		facing
		p	1		rotation
	m	()Lji;	b	top
	m	(Lji;Lji;)I	b	lookupKey
		p	0		facing
		p	1		rotation
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ljk;	d	$values
	f	Ljk;	a	DOWN_EAST
	f	Ljk;	b	DOWN_NORTH
	f	Ljk;	c	DOWN_SOUTH
	f	Ljk;	d	DOWN_WEST
	f	Ljk;	e	UP_EAST
	f	Ljk;	f	UP_NORTH
	f	Ljk;	g	UP_SOUTH
	f	Ljk;	h	UP_WEST
	f	Ljk;	i	WEST_UP
	f	Ljk;	j	EAST_UP
	f	Ljk;	k	NORTH_UP
	f	Ljk;	l	SOUTH_UP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	LOOKUP_TOP_FRONT
	f	Ljava/lang/String;	n	name
	f	Lji;	o	top
	f	Lji;	p	front
	f	[Ljk;	q	$VALUES
c	jl	net/minecraft/core/GlobalPos
	m	(Lakq;Ljd;)V	<init>	<init>
		p	1		dimension
		p	2		pos
	m	()Lakq;	a	dimension
	m	(Lakq;Ljd;)Ljl;	a	of
		p	0		dimension
		p	1		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljd;	b	pos
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lakq;	d	dimension
	f	Ljd;	e	pos
c	jm	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	(Lakq;)Z	a	is
		p	1		key
	m	(Lakr;)Z	a	is
		p	1		id
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Ljava/lang/Object;)Ljm;	a	direct
		p	0		value
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Ljm;)Z	a	is
		p	1		entry
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	()Z	b	isBound
	m	(Lakq;)Ljava/lang/String;	b	lambda$getRegisteredName$0
		p	0		key
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljm$b;	f	kind
	m	()Ljava/lang/String;	g	getRegisteredName
c	jm$a	net/minecraft/core/Holder$a
	m	()Ljava/lang/Object;	a	value
	m	(Lakq;)Z	a	is
		p	1		key
	m	(Lakr;)Z	a	is
		p	1		id
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Ljm;)Z	a	is
		p	1		entry
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	()Z	b	isBound
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljm$b;	f	kind
	f	Ljava/lang/Object;	a	value
c	jm$b	net/minecraft/core/Holder$b
	m	()[Ljm$b;	a	$values
	f	Ljm$b;	a	REFERENCE
	f	Ljm$b;	b	DIRECT
	f	[Ljm$b;	c	$VALUES
c	jm$c	net/minecraft/core/Holder$c
	m	(Ljm$c$a;Ljp;Lakq;Ljava/lang/Object;)V	<init>	<init>
		p	1		referenceType
		p	2		owner
		p	3		registryKey
		p	4		value
	m	()Ljava/lang/Object;	a	value
	m	(Lakq;)Z	a	is
		p	1		key
	m	(Lakr;)Z	a	is
		p	1		id
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Ljava/util/Collection;)V	a	bindTags
		p	1		tags
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Ljm;)Z	a	is
		p	1		entry
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljp;Lakq;)Ljm$c;	a	createStandAlone
		p	0		owner
		p	1		registryKey
	m	(Ljp;Ljava/lang/Object;)Ljm$c;	a	createIntrusive
		p	0		owner
		p	1		value
	m	()Z	b	isBound
	m	(Lakq;)V	b	bindKey
		p	1		registryKey
	m	(Ljava/lang/Object;)V	b	bindValue
		p	1		value
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljm$b;	f	kind
	m	()Lakq;	h	key
	f	Ljp;	a	owner
	f	Ljava/util/Set;	b	tags
	f	Ljm$c$a;	c	type
	f	Lakq;	d	key
	f	Ljava/lang/Object;	e	value
c	jm$c$a	net/minecraft/core/Holder$c$a
	m	()[Ljm$c$a;	a	$values
	f	Ljm$c$a;	a	STAND_ALONE
	f	Ljm$c$a;	b	INTRUSIVE
	f	[Ljm$c$a;	c	$VALUES
c	jn	net/minecraft/core/HolderGetter
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lakq;)Ljm$c;	b	getOrThrow
		p	1		key
	m	(Lawu;)Ljq$c;	b	getOrThrow
		p	1		tag
	m	(Lakq;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$0
	m	(Lawu;)Ljava/lang/IllegalStateException;	c	lambda$getOrThrow$1
c	jn$a	net/minecraft/core/HolderGetter$a
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lakq;Lakq;)Ljava/util/Optional;	a	get
		p	1		registryRef
		p	2		key
	m	(Lakq;Ljn;)Ljava/util/Optional;	a	lambda$get$1
		p	1		registryEntryLookup
	m	(Lakq;)Ljn;	b	lookupOrThrow
		p	1		registryRef
	m	(Lakq;)Ljava/lang/IllegalStateException;	c	lambda$lookupOrThrow$0
c	jo	net/minecraft/core/HolderLookup
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	c	listElementIds
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Ljava/util/stream/Stream;	e	listTagIds
c	jo$a	net/minecraft/core/HolderLookup$a
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lcom/mojang/serialization/DynamicOps;)Lakp;	a	createSerializationContext
		p	1		delegate
	m	(Ljava/util/stream/Stream;)Ljo$a;	a	create
		p	0		wrappers
	m	(Ljo$b;)Ljo$b;	a	lambda$create$1
		p	0		wrapper
	m	()Ljn$a;	b	asGetterLookup
	m	(Lakq;)Ljo$b;	b	lookupOrThrow
		p	1		registryRef
	m	(Lakq;)Ljava/lang/IllegalStateException;	e	lambda$lookupOrThrow$0
c	jo$a$1	net/minecraft/core/HolderLookup$a$1
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Ljo$b;)Ljn;	a	lambda$lookup$0
		p	0		lookup
	f	Ljo$a;	a	this$0
c	jo$a$2	net/minecraft/core/HolderLookup$a$2
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$map
c	jo$b	net/minecraft/core/HolderLookup$b
	m	(Lcpl;)Ljo$b;	a	filterFeatures
		p	1		enabledFeatures
	m	(Lcpl;Ljava/lang/Object;)Z	a	lambda$filterFeatures$0
		p	1		feature
	m	(Ljava/util/function/Predicate;)Ljo$b;	a	filterElements
		p	1		predicate
	m	()Lakq;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	jo$b$1	net/minecraft/core/HolderLookup$b$1
	m	()Ljo$b;	a	parent
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Ljava/util/function/Predicate;Ljm$c;)Z	a	lambda$listElements$1
		p	1		entry
	m	()Ljava/util/stream/Stream;	b	listElements
	m	(Ljava/util/function/Predicate;Ljm$c;)Z	b	lambda$get$0
		p	1		entry
	f	Ljava/util/function/Predicate;	a	val$filter
	f	Ljo$b;	b	this$0
c	jo$b$a	net/minecraft/core/HolderLookup$b$a
	m	()Ljo$b;	a	parent
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Lakq;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
c	jp	net/minecraft/core/HolderOwner
	m	(Ljp;)Z	a	canSerializeIn
		p	1		other
c	jq	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Ljm;	a	get
		p	1		index
	m	(Layw;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Ljava/util/List;)Ljq$a;	a	direct
		p	0		entries
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Ljq$a;	a	direct
		p	0		mapper
		p	1		values
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Ljq$a;	a	direct
		p	0		mapper
		p	1		values
	m	(Ljm;)Z	a	contains
		p	1		entry
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljp;Lawu;)Ljq$c;	a	emptyNamed
		p	0		owner
		p	1		tagKey
	m	([Ljm;)Ljq$a;	a	direct
		p	0		entries
	m	()I	b	size
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljq;	e	empty
c	jq$1	net/minecraft/core/HolderSet$1
	m	(Ljp;Lawu;)V	<init>	<init>
		p	1		owner
		p	2		tag
	m	()Ljava/util/List;	f	contents
c	jq$a	net/minecraft/core/HolderSet$a
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Ljm;)Z	a	contains
		p	1		entry
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	f	contents
	f	Ljq$a;	a	EMPTY
	f	Ljava/util/List;	b	contents
	f	Ljava/util/Set;	c	contentsSet
c	jq$b	net/minecraft/core/HolderSet$b
	m	()Ljava/util/stream/Stream;	a	stream
	m	(I)Ljm;	a	get
		p	1		index
	m	(Layw;)Ljava/util/Optional;	a	getRandomElement
		p	1		random
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	()I	b	size
	m	()Ljava/util/List;	f	contents
c	jq$c	net/minecraft/core/HolderSet$Named
	m	(Ljp;Lawu;)V	<init>	<init>
		p	1		owner
		p	2		tag
	m	(Ljm;)Z	a	contains
		p	1		entry
	m	(Ljp;)Z	a	canSerializeIn
		p	1		owner
	m	(Ljava/util/List;)V	b	bind
		p	1		entries
	m	()Lcom/mojang/datafixers/util/Either;	c	unwrap
	m	()Ljava/util/Optional;	d	unwrapKey
	m	()Ljava/util/List;	f	contents
	m	()Lawu;	g	key
	f	Ljp;	a	owner
	f	Lawu;	b	key
	f	Ljava/util/List;	c	contents
c	jr	net/minecraft/core/Registry
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
		p	1		index
	m	()I	c	size
	m	(Ljava/lang/Object;)I	c	getIdOrThrow
		p	1		value
	f	I	a	DEFAULT
c	js	net/minecraft/core/RegistryBlockID
	m	(I)V	<init>	<init>
		p	1		initialSize
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	(Ljava/lang/Object;)V	b	add
		p	1		value
	m	()I	c	size
	m	(I)Z	c	contains
		p	1		index
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
c	jt	net/minecraft/core/LayeredRegistryAccess
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		types
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		types
		p	2		registryManagers
	m	()Lka$b;	a	compositeAccess
	m	(II)Lka$b;	a	getCompositeAccessForLayers
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/lang/Object;)Lka$b;	a	getLayer
		p	1		index
	m	(Ljava/lang/Object;Ljava/util/List;)Ljt;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/lang/Object;[Lka$b;)Ljt;	a	replaceFrom
		p	1		type
		p	2		registryManagers
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
	m	(Ljava/util/Map;Lka$d;)V	a	lambda$collectRegistries$1
		p	1		entry
	m	(Ljava/util/Map;Lka;)V	a	lambda$collectRegistries$2
		p	1		registryManager
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	collectRegistries
		p	0		registryManagers
	m	(Ljava/lang/Object;)Lka$b;	b	getAccessForLoading
		p	1		type
	m	(Ljava/lang/Object;)Lka$b;	c	getAccessFrom
		p	1		type
	m	(Ljava/lang/Object;)I	d	getLayerIndexOrThrow
		p	1		type
	f	Ljava/util/List;	a	keys
	f	Ljava/util/List;	b	values
	f	Lka$b;	c	composite
c	ju	net/minecraft/core/RegistryMaterials
	m	(Lakq;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		key
		p	2		lifecycle
	m	(Lakq;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
		p	1		key
		p	2		lifecycle
		p	3		intrusive
	m	()Ljava/util/Optional;	a	getAny
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Lakq;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Lakq;Ljava/lang/Object;Ljy;)Ljm$c;	a	register
		p	1		key
		p	2		value
		p	3		info
	m	(Lakr;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lawu;)Ljq$c;	a	getOrCreateTag
		p	1		tag
	m	(Layw;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;)V	a	lambda$new$0
		p	0		map
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;Ljm$c;)V	a	lambda$freeze$4
		p	0		value
		p	1		entry
	m	(Ljava/util/Map$Entry;)Lakr;	a	lambda$freeze$6
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ljava/util/Map;Lawu;Ljava/util/List;)V	a	lambda$bindTags$11
		p	2		tag
		p	3		entries
	m	(Ljava/util/Map;Ljm$c;)V	a	lambda$bindTags$8
		p	1		entry
	m	(Ljm$c;)Ljava/lang/Object;	a	getValueFromNullable
		p	0		entry
	m	(Ljq$c;)V	a	lambda$resetTags$12
		p	0		entryList
	m	()V	b	validateWrite
	m	(Lakq;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Lawu;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Ljava/lang/Object;)Lakr;	b	getKey
		p	1		value
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$5
		p	0		entry
	m	(Ljava/util/Map;Lawu;Ljava/util/List;)V	b	lambda$bindTags$9
		p	2		tag
		p	3		entries
	m	(Ljm$c;)V	b	lambda$resetTags$13
		p	0		entry
	m	()I	c	size
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Lakq;)Ljava/util/Optional;	c	registrationInfo
		p	1		key
	m	(Lakr;)Ljava/util/Optional;	c	getHolder
		p	1		id
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	c	lambda$getTags$3
		p	0		entry
	m	()Lakq;	d	key
	m	(Lakq;)Z	d	containsKey
		p	1		key
	m	(Lakr;)Z	d	containsKey
		p	1		id
	m	(Lawu;)Ljq$c;	d	createTag
		p	1		tag
	m	(Ljava/lang/Object;)Ljava/util/Optional;	d	getResourceKey
		p	1		entry
	m	()Lcom/mojang/serialization/Lifecycle;	e	registryLifecycle
	m	(Lawu;)Ljava/lang/String;	e	lambda$bindTags$10
		p	0		tag
	m	(Ljava/lang/Object;)Ljm;	e	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	f	keySet
	m	(Ljava/lang/Object;)Ljm$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	registryKeySet
	m	(Ljava/lang/Object;)Ljm$c;	g	lambda$createIntrusiveHolder$7
		p	1		valuex
	m	()Ljava/util/Set;	h	entrySet
	m	(Lakq;)V	h	validateWrite
		p	1		key
	m	()Ljava/util/stream/Stream;	i	holders
	m	(Lakq;)Ljm$c;	i	getOrCreateHolderOrThrow
		p	1		key
	m	()Ljava/util/stream/Stream;	j	getTags
	m	(Lakq;)Ljm$c;	j	lambda$getOrCreateHolderOrThrow$2
		p	1		key2
	m	()Ljava/util/stream/Stream;	k	getTagNames
	m	(Lakq;)Ljm$c;	k	lambda$register$1
		p	1		k
	m	()Z	l	isEmpty
	m	()Ljz;	m	freeze
	m	()V	n	resetTags
	m	()Ljn;	o	createRegistrationLookup
	m	()Ljp;	p	holderOwner
	m	()Ljo$b;	q	asLookup
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lakq;	c	key
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	d	byId
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntMap;	e	toId
	f	Ljava/util/Map;	f	byLocation
	f	Ljava/util/Map;	g	byKey
	f	Ljava/util/Map;	h	byValue
	f	Ljava/util/Map;	i	registrationInfos
	f	Lcom/mojang/serialization/Lifecycle;	j	registryLifecycle
	f	Ljava/util/Map;	k	tags
	f	Z	l	frozen
	f	Ljava/util/Map;	m	unregisteredIntrusiveHolders
	f	Ljo$b;	n	lookup
	f	Ljava/lang/Object;	o	tagAdditionLock
c	ju$1	net/minecraft/core/RegistryMaterials$1
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Ljava/util/stream/Stream;	d	listTags
	m	()Lakq;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lju;	a	this$0
c	ju$2	net/minecraft/core/RegistryMaterials$2
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lakq;)Ljm$c;	b	getOrThrow
		p	1		key
	m	(Lawu;)Ljq$c;	b	getOrThrow
		p	1		tag
	f	Lju;	a	this$0
c	jv	net/minecraft/core/NonNullList
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
		p	1		delegate
		p	2		initialElement
	m	()Ljv;	a	create
	m	(I)Ljv;	a	createWithCapacity
		p	0		size
	m	(ILjava/lang/Object;)Ljv;	a	withSize
		p	0		size
		p	1		defaultValue
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Ljv;	a	of
		p	0		defaultValue
		p	1		values
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
c	jw	net/minecraft/core/IPosition
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	jx	net/minecraft/core/QuartPos
	m	(I)I	a	fromBlock
		p	0		blockCoord
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
		p	0		biomeCoord
	m	(I)I	d	fromSection
		p	0		chunkCoord
	m	(I)I	e	toSection
		p	0		biomeCoord
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
c	jy	net/minecraft/core/RegistrationInfo
	m	()Ljava/util/Optional;	a	knownPackInfo
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljy;	a	BUILT_IN
	f	Ljava/util/Optional;	b	knownPackInfo
	f	Lcom/mojang/serialization/Lifecycle;	c	lifecycle
c	jz	net/minecraft/core/IRegistry
	m	()Ljava/util/Optional;	a	getAny
	m	(Lakq;)Ljava/lang/Object;	a	get
		p	1		key
	m	(Lakr;)Ljava/lang/Object;	a	get
		p	1		id
	m	(Lawu;)Ljq$c;	a	getOrCreateTag
		p	1		tag
	m	(Lawu;Layw;)Ljava/util/Optional;	a	getRandomElementOf
		p	1		tag
		p	2		random
	m	(Layw;)Ljava/util/Optional;	a	getRandom
		p	1		random
	m	(Layw;Ljq$c;)Ljava/util/Optional;	a	lambda$getRandomElementOf$10
		p	1		entryList
	m	(Lcom/mojang/serialization/DynamicOps;Lakr;)Ljava/lang/Object;	a	lambda$keys$8
		p	1		id
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/util/Map;)V	a	bindTags
		p	1		tagEntries
	m	(Ljm$c;)Lcom/mojang/serialization/Lifecycle;	a	lambda$referenceHolderWithLifecycle$6
		p	1		entry
	m	(Ljm;)Lcom/mojang/serialization/DataResult;	a	safeCastToReference
		p	1		entry
	m	(Ljz;Lakq;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		key
		p	2		entry
	m	(Ljz;Lakr;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	(Ljz;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
		p	0		registry
		p	1		id
		p	2		entry
	m	()Lcom/mojang/serialization/Codec;	b	referenceHolderWithLifecycle
	m	(Lakq;)Ljava/util/Optional;	b	getHolder
		p	1		key
	m	(Lakr;)Ljava/util/Optional;	b	getOptional
		p	1		id
	m	(Lawu;)Ljava/util/Optional;	b	getTag
		p	1		tag
	m	(Ljava/lang/Object;)Lakr;	b	getKey
		p	1		value
	m	(Ljm$c;)Lakr;	b	lambda$referenceHolderWithLifecycle$5
		p	0		entry
	m	(Ljm;)Ljava/lang/String;	b	lambda$safeCastToReference$7
	m	(Ljz;Lakq;Ljava/lang/Object;)Ljm$c;	b	registerForHolder
		p	0		registry
		p	1		key
		p	2		entry
	m	(Ljz;Lakr;Ljava/lang/Object;)Ljm$c;	b	registerForHolder
		p	0		registry
		p	1		id
		p	2		entry
	m	(I)Ljava/util/Optional;	c	getHolder
		p	1		rawId
	m	(Lakq;)Ljava/util/Optional;	c	registrationInfo
		p	1		key
	m	(Lakr;)Ljava/util/Optional;	c	getHolder
		p	1		id
	m	(Lawu;)Ljava/lang/Iterable;	c	getTagOrEmpty
		p	1		tag
	m	(Ljm$c;)Ljm;	c	lambda$holderByNameCodec$1
		p	0		entry
	m	()Lakq;	d	key
	m	(Lakq;)Z	d	containsKey
		p	1		key
	m	(Lakr;)Z	d	containsKey
		p	1		id
	m	(Ljava/lang/Object;)Ljava/util/Optional;	d	getResourceKey
		p	1		entry
	m	()Lcom/mojang/serialization/Lifecycle;	e	registryLifecycle
	m	(Lakq;)Ljava/util/Optional;	e	getOptional
		p	1		key
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	e	lambda$referenceHolderWithLifecycle$4
		p	1		id
	m	(Ljava/lang/Object;)Ljm;	e	wrapAsHolder
		p	1		value
	m	()Ljava/util/Set;	f	keySet
	m	(Lakq;)Ljava/lang/Object;	f	getOrThrow
		p	1		key
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	f	lambda$referenceHolderWithLifecycle$3
	m	(Ljava/lang/Object;)Ljm$c;	f	createIntrusiveHolder
		p	1		value
	m	()Ljava/util/Set;	g	registryKeySet
	m	(Lakq;)Ljm$c;	g	getHolderOrThrow
		p	1		key
	m	(Lakr;)Ljava/lang/String;	g	lambda$referenceHolderWithLifecycle$2
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$0
		p	1		value
	m	()Ljava/util/Set;	h	entrySet
	m	(Lakq;)Ljava/lang/IllegalStateException;	h	lambda$getHolderOrThrow$9
	m	()Ljava/util/stream/Stream;	i	holders
	m	()Ljava/util/stream/Stream;	j	getTags
	m	()Ljava/util/stream/Stream;	k	getTagNames
	m	()Ljz;	m	freeze
	m	()V	n	resetTags
	m	()Ljp;	p	holderOwner
	m	()Ljo$b;	q	asLookup
	m	()Lcom/mojang/serialization/Codec;	r	byNameCodec
	m	()Lcom/mojang/serialization/Codec;	s	holderByNameCodec
	m	()Ljava/util/stream/Stream;	t	stream
	m	()Ljr;	u	asHolderIdMap
	m	()Ljo$b;	v	asTagAddingLookup
c	jz$1	net/minecraft/core/IRegistry$1
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljm$c;)Ljm;	a	lambda$iterator$0
		p	0		entry
	m	(Ljm;)I	a	getId
		p	1		value
	m	()I	c	size
	m	(I)Ljm;	c	byId
	f	Ljz;	b	this$0
c	jz$2	net/minecraft/core/IRegistry$2
	m	()Ljo$b;	a	parent
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	m	(Lawu;)Ljq$c;	b	getOrThrow
		p	1		tag
	f	Ljz;	a	this$0
c	ka	net/minecraft/core/IRegistryCustom
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Ljz;)Lka$b;	a	fromRegistryOfRegistries
		p	0		registries
	m	(Lka$d;)Lcom/mojang/serialization/Lifecycle;	a	lambda$allRegistriesLifecycle$1
		p	0		entry
	m	()Ljava/util/stream/Stream;	c	registries
	m	(Lakq;)Ljava/util/Optional;	c	registry
		p	1		key
	m	()Lka$b;	d	freeze
	m	(Lakq;)Ljz;	d	registryOrThrow
		p	1		key
	m	()Lcom/mojang/serialization/Lifecycle;	e	allRegistriesLifecycle
	m	(Lakq;)Ljava/lang/IllegalStateException;	f	lambda$registryOrThrow$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lka$b;	b	EMPTY
c	ka$1	net/minecraft/core/IRegistryCustom$1
	m	()Ljava/util/stream/Stream;	c	registries
	m	(Lakq;)Ljava/util/Optional;	c	registry
		p	1		key
	m	()Lka$b;	d	freeze
	f	Ljz;	c	val$registries
c	ka$a	net/minecraft/core/IRegistryCustom$a
	m	(Lka;Ljava/util/stream/Stream;)V	<init>	<init>
		p	2		entryStream
c	ka$b	net/minecraft/core/IRegistryCustom$Dimension
c	ka$c	net/minecraft/core/IRegistryCustom$c
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		registries
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entryStream
	m	(Ljz;)Ljz;	b	lambda$registry$1
		p	0		registry
	m	()Ljava/util/stream/Stream;	c	registries
	m	(Lakq;)Ljava/util/Optional;	c	registry
		p	1		key
	m	(Ljz;)Ljz;	c	lambda$new$0
		p	0		registry
	f	Ljava/util/Map;	c	registries
c	ka$d	net/minecraft/core/IRegistryCustom$d
	m	()Lakq;	a	key
	m	(Lakq;Ljz;)Lka$d;	a	fromUntyped
		p	0		key
		p	1		value
	m	(Ljava/util/Map$Entry;)Lka$d;	a	fromMapEntry
		p	0		entry
	m	()Ljz;	b	value
	m	()Lka$d;	c	freeze
	f	Lakq;	a	key
	f	Ljz;	b	value
c	kb	net/minecraft/core/RegistryCodecs
	m	(Lakq;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
	m	(Lakq;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
	m	(Lakq;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		elementCodec
		p	2		alwaysSerializeAsList
	m	(Lakq;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
		p	0		registryRef
		p	1		alwaysSerializeAsList
c	kc	net/minecraft/core/RegistrySetBuilder
	m	(Lakq;Lcom/mojang/serialization/Lifecycle;Ljp;Ljava/util/Map;)Ljo$b;	a	lookupFromMap
		p	0		registryRef
		p	1		lifecycle
		p	2		owner
		p	3		entries
	m	(Lakq;Lcom/mojang/serialization/Lifecycle;Lkc$i;)Lkc;	a	add
		p	1		registryRef
		p	2		lifecycle
		p	3		bootstrapFunction
	m	(Lakq;Lkc$i;)Lkc;	a	add
		p	1		registryRef
		p	2		bootstrapFunction
	m	(Ljava/util/Map;Lakq;)V	a	lambda$buildPatch$13
		p	1		key
	m	(Ljava/util/Map;Ljp;Lje;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;Ljm$c;)V	a	lambda$createLazyFullPatchedRegistries$9
		p	5		entry
	m	(Ljava/util/Map;Lka$d;)V	a	lambda$buildProviderWithContext$1
		p	1		registry
	m	(Ljava/util/Map;Lkc$j;)V	a	lambda$buildPatch$11
		p	1		registry
	m	(Ljava/util/Map;Lkc$m;Ljo$b;)V	a	lambda$buildProviderWithContext$2
		p	2		wrapper
	m	(Ljava/util/Set;Lakq;)Z	a	lambda$buildPatch$12
		p	1		key
	m	(Lje;Ljm$c;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/Object;	a	lambda$createLazyFullPatchedRegistries$7
	m	(Ljo$b;)Ljn;	a	wrapContextLookup
		p	0		wrapper
	m	(Ljp;Lakq;Lje;Ljm$c;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;Lakq;)Ljm$c;	a	lambda$createLazyFullPatchedRegistries$8
		p	6		key
	m	(Ljp;Lje$a;Lakq;Ljo$a;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljo$b;	a	createLazyFullPatchedRegistries
		p	1		owner
		p	2		cloneableRegistries
		p	3		registryRef
		p	4		patches
		p	5		base
		p	6		lazyWrapper
	m	(Ljp;Lje;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/Map;Ljm$c;)V	a	lambda$createLazyFullPatchedRegistries$6
		p	5		entry
	m	(Lka;)Ljo$a;	a	build
		p	1		registryManager
	m	(Lka;Ljo$a;Lje$a;)Lkc$g;	a	buildPatch
		p	1		baseRegistryManager
		p	2		wrapperLookup
		p	3		cloneableRegistries
	m	(Lka;Ljo$a;Lje$a;Ljava/util/Map;Ljo$a;)Ljo$a;	a	createLazyFullPatchedRegistries
		p	1		registryManager
		p	2		base
		p	3		cloneableRegistries
		p	4		initializedRegistries
		p	5		patches
	m	(Lkc$b;Lkc$j;)Ljo$b;	a	lambda$buildPatch$14
		p	1		registry
	m	(Lkc$b;Lkc$k;)Lkc$j;	a	lambda$buildPatch$10
		p	1		info
	m	(Lkc$m;Lje$a;Ljo$a;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;Lakq;)Ljo$b;	a	lambda$createLazyFullPatchedRegistries$4
		p	6		registryRef
	m	(Lkc$m;Lka;Ljava/util/stream/Stream;)Ljo$a;	a	buildProviderWithContext
		p	0		entryOwner
		p	1		registryManager
		p	2		wrappers
	m	(Lje;Ljm$c;Ljo$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/Object;	b	lambda$createLazyFullPatchedRegistries$5
	m	(Lka;)Lkc$b;	b	createState
		p	1		registryManager
	m	(Lkc$b;Lkc$k;)Ljo$b;	b	lambda$build$3
		p	1		info
	m	(Lkc$b;Lkc$k;)V	c	lambda$createState$0
		p	1		registry
	f	Ljava/util/List;	a	entries
c	kc$1	net/minecraft/core/RegistrySetBuilder$1
	m	(Ljp;Ljo$b;)V	<init>	<init>
		p	1		entryOwner
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	f	Ljo$b;	a	val$original
c	kc$2	net/minecraft/core/RegistrySetBuilder$2
	m	(Ljp;Lakq;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)V	<init>	<init>
		p	1		entryOwner
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	()Ljava/util/stream/Stream;	b	listElements
	m	()Lakq;	f	key
	m	()Lcom/mojang/serialization/Lifecycle;	g	registryLifecycle
	f	Lakq;	a	val$key
	f	Lcom/mojang/serialization/Lifecycle;	b	val$lifecycle
	f	Ljava/util/Map;	c	val$entries
c	kc$3	net/minecraft/core/RegistrySetBuilder$3
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lcom/mojang/serialization/DynamicOps;)Lakp;	a	createSerializationContext
		p	1		delegate
	m	(Lakq;)Ljava/util/Optional;	c	getEntry
		p	1		registryRef
	f	Ljava/util/Map;	a	val$lookups
c	kc$3$1	net/minecraft/core/RegistrySetBuilder$3$1
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Lkc$3;	a	this$0
c	kc$a	net/minecraft/core/RegistrySetBuilder$a
	m	()Ljo$b;	a	lookup
	m	(Ljo$b;)Lkc$a;	a	createForContextRegistry
		p	0		wrapper
	m	(Lkc$m;Ljo$b;)Lkc$a;	a	createForNewRegistry
		p	0		owner
		p	1		wrapper
	m	()Lakp$b;	b	opsInfo
	f	Ljo$b;	a	lookup
	f	Lakp$b;	b	opsInfo
c	kc$b	net/minecraft/core/RegistrySetBuilder$b
	m	()Lqq;	a	bootstrapContext
	m	(Lakq;Lkc$h;)V	a	lambda$reportUnclaimedRegisteredValues$2
		p	1		key
		p	2		value
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lka$d;)V	a	lambda$create$0
		p	1		entry
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lkc$l;Lakq;)V	a	lambda$create$1
		p	2		registryRef
	m	(Lka;Ljava/util/stream/Stream;)Lkc$b;	a	create
		p	0		dynamicRegistryManager
		p	1		registryRefs
	m	()V	b	reportUnclaimedRegisteredValues
	m	()V	c	reportNotCollectedHolders
	m	()V	d	throwOnError
	m	()Lkc$m;	e	owner
	m	()Lkc$l;	f	lookup
	m	()Ljava/util/Map;	g	registries
	m	()Ljava/util/Map;	h	registeredValues
	m	()Ljava/util/List;	i	errors
	f	Lkc$m;	a	owner
	f	Lkc$l;	b	lookup
	f	Ljava/util/Map;	c	registries
	f	Ljava/util/Map;	d	registeredValues
	f	Ljava/util/List;	e	errors
c	kc$b$1	net/minecraft/core/RegistrySetBuilder$b$1
	m	(Lakq;)Ljn;	a	lookup
		p	1		registryRef
	m	(Lakq;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljm$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
	f	Lkc$b;	a	this$0
c	kc$c	net/minecraft/core/RegistrySetBuilder$c
	m	(Ljp;)V	<init>	<init>
		p	1		entryOwner
	m	(Lawu;)Ljava/util/Optional;	a	get
		p	1		tag
	f	Ljp;	d	owner
c	kc$d	net/minecraft/core/RegistrySetBuilder$d
	m	(Ljp;Ljo$b;)V	<init>	<init>
		p	1		entryOwner
		p	2		base
	m	()Ljo$b;	a	parent
	f	Ljo$b;	a	parent
c	kc$e	net/minecraft/core/RegistrySetBuilder$e
	m	(Ljp;)V	<init>	<init>
		p	1		entryOwner
	m	()Ljava/util/stream/Stream;	d	listTags
c	kc$f	net/minecraft/core/RegistrySetBuilder$f
	m	(Ljp;Lakq;)V	<init>	<init>
		p	1		owner
		p	2		key
	m	()Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)V	b	bindValue
		p	1		value
	f	Ljava/util/function/Supplier;	a	supplier
c	kc$g	net/minecraft/core/RegistrySetBuilder$g
	m	()Ljo$a;	a	full
	m	()Ljo$a;	b	patches
	f	Ljo$a;	a	full
	f	Ljo$a;	b	patches
c	kc$h	net/minecraft/core/RegistrySetBuilder$h
	m	()Ljava/lang/Object;	a	value
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/lang/Object;	a	value
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
c	kc$i	net/minecraft/core/RegistrySetBuilder$i
	m	(Lqq;)V	run	run
		p	1		registerable
c	kc$j	net/minecraft/core/RegistrySetBuilder$j
	m	()Lakq;	a	key
	m	(Lkc$m;)Ljo$b;	a	buildAsLookup
		p	1		anyOwner
	m	(Lkc$m;Ljava/util/Map$Entry;)Ljm$c;	a	lambda$buildAsLookup$1
		p	1		entry
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	(Lkc$m;Ljava/util/Map$Entry;)Ljm$c;	b	lambda$buildAsLookup$0
	m	()Ljava/util/Map;	c	values
	f	Lakq;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/util/Map;	c	values
c	kc$k	net/minecraft/core/RegistrySetBuilder$k
	m	()Lakq;	a	key
	m	(Lkc$b;)Lkc$j;	a	collectRegisteredValues
		p	1		registries
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	(Lkc$b;)V	b	apply
		p	1		registries
	m	()Lkc$i;	c	bootstrap
	f	Lakq;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Lkc$i;	c	bootstrap
c	kc$l	net/minecraft/core/RegistrySetBuilder$l
	m	(Ljp;)V	<init>	<init>
		p	1		entryOwner
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lakq;)Ljm$c;	c	getOrCreate
		p	1		key
	m	(Lakq;)Ljm$c;	d	lambda$getOrCreate$0
		p	1		key2
	f	Ljava/util/Map;	a	holders
c	kc$m	net/minecraft/core/RegistrySetBuilder$m
	m	()Ljp;	a	cast
c	kc$n	net/minecraft/core/RegistrySetBuilder$n
	m	()Lkc$h;	a	value
	m	()Ljava/util/Optional;	b	holder
	f	Lkc$h;	a	value
	f	Ljava/util/Optional;	b	holder
c	kd	net/minecraft/core/RegistrySynchronization
	m	(Lcom/mojang/serialization/DynamicOps;Lakm$c;Lka;Ljava/util/Set;Ljava/util/function/BiConsumer;)V	a	packRegistry
		p	0		nbtOps
		p	1		entry
		p	2		registryManager
		p	3		knownPacks
		p	4		callback
	m	(Lcom/mojang/serialization/DynamicOps;Lka;Ljava/util/Set;Ljava/util/function/BiConsumer;)V	a	packRegistries
		p	0		nbtOps
		p	1		registryManager
		p	2		knownPacks
		p	3		callback
	m	(Lcom/mojang/serialization/DynamicOps;Lka;Ljava/util/Set;Ljava/util/function/BiConsumer;Lakm$c;)V	a	lambda$packRegistries$0
		p	4		registry
	m	(Ljava/util/Set;Lakm$c;Lcom/mojang/serialization/DynamicOps;Ljava/util/function/BiConsumer;Ljz;)V	a	lambda$packRegistry$3
		p	4		registry
	m	(Ljm$c;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$packRegistry$1
		p	1		error
	m	(Ljt;)Ljava/util/stream/Stream;	a	networkedRegistries
		p	0		combinedRegistries
	m	(Ljz;Ljava/util/Set;Lakm$c;Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Ljm$c;)V	a	lambda$packRegistry$2
		p	5		registryEntry
	m	(Lka$d;)Z	a	lambda$ownedNetworkableRegistries$4
		p	0		registry
	m	(Lka;)Ljava/util/stream/Stream;	a	ownedNetworkableRegistries
		p	0		dynamicRegistryManager
	m	(Ljt;)Ljava/util/stream/Stream;	b	networkSafeRegistries
		p	0		combinedRegistries
	f	Ljava/util/Set;	a	NETWORKABLE_REGISTRIES
c	kd$a	net/minecraft/core/RegistrySynchronization$a
	m	()Lakr;	a	id
	m	()Ljava/util/Optional;	b	data
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	id
	f	Ljava/util/Optional;	c	data
c	ke	net/minecraft/core/Vector3f
	m	(FFF)V	<init>	<init>
		p	1		pitch
		p	2		yaw
		p	3		roll
	m	(Luh;)V	<init>	<init>
		p	1		serialized
	m	()Luh;	a	save
	m	()F	b	getX
	m	()F	c	getY
	m	()F	d	getZ
	m	()F	e	getWrappedX
	m	()F	f	getWrappedY
	m	()F	g	getWrappedZ
	f	Lyx;	a	STREAM_CODEC
	f	F	b	x
	f	F	c	y
	f	F	d	z
c	ke$1	net/minecraft/core/Vector3f$1
	m	(Lio/netty/buffer/ByteBuf;)Lke;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lke;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	kf	net/minecraft/core/SectionPosition
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()I	a	x
	m	(D)I	a	posToSectionCoord
		p	0		coord
	m	(I)I	a	blockToSectionCoord
		p	0		coord
	m	(II)I	a	sectionToBlockCoord
		p	0		chunkCoord
		p	1		offset
	m	(III)Lkf;	a	of
		p	0		x
		p	1		y
		p	2		z
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
		p	0		minX
		p	1		minY
		p	2		minZ
		p	3		maxX
		p	4		maxY
		p	5		maxZ
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		x
		p	1		y
		p	2		z
		p	3		consumer
	m	(J)Lkf;	a	of
		p	0		packed
	m	(JIII)J	a	offset
		p	0		packed
		p	2		x
		p	3		y
		p	4		z
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	2		consumer
	m	(JLji;)J	a	offset
		p	0		packed
		p	2		direction
	m	(Ldcd;I)Lkf;	a	of
		p	0		chunkPos
		p	1		y
	m	(Ldcd;III)Ljava/util/stream/Stream;	a	aroundChunk
		p	0		center
		p	1		radius
		p	2		minY
		p	3		maxY
	m	(Lduy;)Lkf;	a	bottomOf
		p	0		chunk
	m	(Ldxg;)Lkf;	a	of
		p	0		entity
	m	(Ljd;)Lkf;	a	of
		p	0		pos
	m	(Ljd;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
		p	0		pos
		p	1		consumer
	m	(Ljw;)Lkf;	a	of
		p	0		pos
	m	(Lkf;I)Ljava/util/stream/Stream;	a	cube
		p	0		center
		p	1		radius
	m	(S)I	a	sectionRelativeX
		p	0		packedLocalPos
	m	()I	b	y
	m	(D)I	b	blockToSectionCoord
		p	0		coord
	m	(I)I	b	sectionRelative
		p	0		coord
	m	(II)J	b	getZeroNode
		p	0		x
		p	1		z
	m	(III)J	b	asLong
		p	0		x
		p	1		y
		p	2		z
	m	(J)I	b	x
		p	0		packed
	m	(Ljd;)S	b	sectionRelativePos
		p	0		pos
	m	(S)I	b	sectionRelativeY
		p	0		packedLocalPos
	m	()I	c	z
	m	(I)I	c	sectionToBlockCoord
		p	0		sectionCoord
	m	(III)Lkh;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(J)I	c	y
		p	0		packed
	m	(Ljd;)J	c	asLong
		p	0		pos
	m	(S)I	c	sectionRelativeZ
		p	0		packedLocalPos
	m	()I	d	minBlockX
	m	(III)Lkf;	d	offset
	m	(J)I	d	z
		p	0		packed
	m	(S)I	d	relativeToBlockX
		p	1		packedLocalPos
	m	()I	e	minBlockY
	m	(J)J	e	blockToSection
		p	0		blockPos
	m	(S)I	e	relativeToBlockY
		p	1		packedLocalPos
	m	()I	f	minBlockZ
	m	(J)J	f	getZeroNode
		p	0		pos
	m	(S)I	f	relativeToBlockZ
		p	1		packedLocalPos
	m	()I	g	maxBlockX
	m	(S)Ljd;	g	relativeToBlockPos
		p	1		packedLocalPos
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	()Ljd;	j	origin
	m	()Ljd;	k	center
	m	()Ldcd;	r	chunk
	m	()J	s	asLong
	m	()Ljava/util/stream/Stream;	t	blocksInside
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	h	PACKED_X_LENGTH
	f	I	i	PACKED_Y_LENGTH
	f	I	j	PACKED_Z_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	q	RELATIVE_X_SHIFT
	f	I	r	RELATIVE_Y_SHIFT
	f	I	s	RELATIVE_Z_SHIFT
c	kf$1	net/minecraft/core/SectionPosition$1
	f	Ljf;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
c	kg	net/minecraft/core/UUIDUtil
	m	(JJ)[I	a	leastMostToIntArray
		p	0		uuidMost
		p	2		uuidLeast
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
		p	0		dynamic
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	createOfflinePlayerUUID
		p	0		nickname
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	a	lambda$static$4
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
		p	0		uuid
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		uuidStream
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
		p	0		array
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	b	createOfflineProfile
		p	0		nickname
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	b	lambda$static$2
	m	(Ljava/util/UUID;)[B	b	uuidToByteArray
		p	0		uuid
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$5
		p	0		string
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	c	lambda$static$1
		p	0		uuid
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$3
		p	0		string
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC_SET
	f	Lcom/mojang/serialization/Codec;	c	CODEC_LINKED_SET
	f	Lcom/mojang/serialization/Codec;	d	STRING_CODEC
	f	Lcom/mojang/serialization/Codec;	e	AUTHLIB_CODEC
	f	Lcom/mojang/serialization/Codec;	f	LENIENT_CODEC
	f	Lyx;	g	STREAM_CODEC
	f	I	h	UUID_BYTES
	f	Ljava/lang/String;	i	UUID_PREFIX_OFFLINE_PLAYER
c	kg$1	net/minecraft/core/UUIDUtil$1
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/UUID;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/UUID;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	kh	net/minecraft/core/BaseBlockPosition
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(ILkh;)Lcom/mojang/serialization/DataResult;	a	lambda$offsetCodec$4
		p	1		vec
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	(Lji$a;)I	a	get
		p	1		axis
	m	(Ljw;D)Z	a	closerToCenterThan
		p	1		pos
		p	2		distance
	m	(Lkh;)Ljava/util/stream/IntStream;	a	lambda$static$2
		p	0		vec
	m	(Lkh;D)Z	a	closerThan
		p	1		vec
		p	2		distance
	m	([I)Lkh;	a	lambda$static$0
		p	0		coordinates
	m	(ILkh;)Ljava/lang/String;	b	lambda$offsetCodec$3
	m	(Lji$a;I)Lkh;	b	relative
		p	1		axis
		p	2		distance
	m	(Lji;)Lkh;	b	relative
		p	1		direction
	m	(Lji;I)Lkh;	b	relative
		p	1		direction
		p	2		distance
	m	(Ljw;)D	b	distToCenterSqr
		p	1		pos
	m	(DDD)D	c	distToCenterSqr
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lkh;	c	offset
		p	1		x
		p	2		y
		p	3		z
	m	(DDD)D	d	distToLowCornerSqr
		p	1		x
		p	3		y
		p	5		z
	m	(Lkh;)Lkh;	d	cross
		p	1		vec
	m	(Lkh;)Lkh;	e	subtract
		p	1		vec
	m	(Lkh;)Lkh;	f	offset
		p	1		vec
	m	(I)Lkh;	i	east
		p	1		distance
	m	(Lkh;)I	i	compareTo
	m	(I)Lkh;	j	west
		p	1		distance
	m	(Lkh;)D	j	distSqr
		p	1		vec
	m	(I)Lkh;	k	south
		p	1		distance
	m	(Lkh;)I	k	distManhattan
		p	1		vec
	m	()Lkh;	l	east
	m	(I)Lkh;	l	north
		p	1		distance
	m	()Lkh;	m	west
	m	(I)Lkh;	m	below
		p	1		distance
	m	()Lkh;	n	south
	m	(I)Lkh;	n	above
		p	1		distance
	m	()Lkh;	o	north
	m	(I)Lkh;	o	multiply
		p	1		scale
	m	()Lkh;	p	below
	m	()Lkh;	q	above
	m	(I)Lkh;	s	setZ
		p	1		z
	m	(I)Lkh;	t	setY
		p	1		y
	m	()I	u	getX
	m	(I)Lkh;	u	setX
		p	1		x
	m	()I	v	getY
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
		p	0		maxAbsValue
	m	()I	w	getZ
	m	()Ljava/lang/String;	x	toShortString
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lkh;	g	ZERO
c	ki	net/minecraft/core/IRegistryWritable
	m	(Lakq;Ljava/lang/Object;Ljy;)Ljm$c;	a	register
		p	1		key
		p	2		value
		p	3		info
	m	()Z	l	isEmpty
	m	()Ljn;	o	createRegistrationLookup
c	kj	net/minecraft/core/cauldron/CauldronInteraction
	m	()V	a	bootStrap
	m	(Ldcw;Ljd;Lcmx;Lbqq;Lcuq;Ldtc;Lavo;)Lbqt;	a	emptyBucket
		p	0		world
		p	1		pos
		p	2		player
		p	3		hand
		p	4		stack
		p	5		state
		p	6		soundEvent
	m	(Ldtc;)Z	a	lambda$bootStrap$8
		p	0		statex
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	a	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;Lcuq;Ljava/util/function/Predicate;Lavo;)Lbqt;	a	fillBucket
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
		p	6		output
		p	7		fullPredicate
		p	8		soundEvent
	m	(Ljava/lang/String;)Lkj$a;	a	newInteractionMap
		p	0		name
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
		p	0		behavior
	m	(Ldtc;)Z	b	lambda$bootStrap$6
		p	0		statex
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	b	lambda$static$14
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;)Z	c	lambda$bootStrap$2
		p	0		statex
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	c	lambda$static$13
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	d	lambda$static$12
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	e	lambda$static$11
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	f	lambda$static$10
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	g	lambda$bootStrap$9
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	h	lambda$bootStrap$7
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	i	lambda$bootStrap$5
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	interact	interact
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hand
		p	6		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	j	lambda$bootStrap$4
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	k	lambda$bootStrap$3
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	l	lambda$bootStrap$1
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lcuq;)Lbqt;	m	lambda$newInteractionMap$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		player
		p	4		hand
		p	5		stack
	f	Ljava/util/Map;	a	INTERACTIONS
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lkj$a;	c	EMPTY
	f	Lkj$a;	d	WATER
	f	Lkj$a;	e	LAVA
	f	Lkj$a;	f	POWDER_SNOW
	f	Lkj;	g	FILL_WATER
	f	Lkj;	h	FILL_LAVA
	f	Lkj;	i	FILL_POWDER_SNOW
	f	Lkj;	j	SHULKER_BOX
	f	Lkj;	k	BANNER
	f	Lkj;	l	DYED_ITEM
c	kj$a	net/minecraft/core/cauldron/CauldronInteraction$a
	m	()Ljava/lang/String;	a	name
	m	()Ljava/util/Map;	b	map
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	map
c	kl	net/minecraft/core/component/DataComponentHolder
	m	()Lkm;	a	getComponents
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
		p	1		type
		p	2		fallback
	m	(Lkp;)Z	b	has
		p	1		type
c	km	net/minecraft/core/component/DataComponentMap
	m	()Lkm$a;	a	builder
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	makeCodec
		p	0		componentTypeCodec
	m	(Ljava/util/function/Predicate;)Lkm;	a	filter
		p	1		predicate
	m	(Lkm;)Lcom/mojang/serialization/DataResult;	a	lambda$makeCodecFromMap$0
		p	0		componentMap
	m	(Lkm;Lkm;)Lkm;	a	composite
		p	0		base
		p	1		overrides
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
		p	1		type
		p	2		fallback
	m	()Ljava/util/Set;	b	keySet
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	makeCodecFromMap
		p	0		typeToValueMapCodec
	m	(Lkp;)Z	b	has
		p	1		type
	m	()Ljava/util/stream/Stream;	c	stream
	m	(Lkp;)Lks;	c	getTyped
		p	1		type
	m	()I	d	size
	m	(Lkp;)Lks;	d	lambda$iterator$1
		p	1		type
	m	()Z	e	isEmpty
	f	Lkm;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	km$1	net/minecraft/core/component/DataComponentMap$1
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	()Ljava/util/Set;	b	keySet
c	km$2	net/minecraft/core/component/DataComponentMap$2
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	()Ljava/util/Set;	b	keySet
	f	Lkm;	c	val$overrides
	f	Lkm;	d	val$prototype
c	km$3	net/minecraft/core/component/DataComponentMap$3
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	()Ljava/util/Set;	b	keySet
	f	Ljava/util/function/Predicate;	c	val$predicate
	f	Lkm;	d	this$0
c	km$a	net/minecraft/core/component/DataComponentMap$a
	m	()Lkm;	a	build
	m	(Ljava/util/Map;)Lkm;	a	buildFromMapTrusted
		p	0		components
	m	(Lkm;)Lkm$a;	a	addAll
		p	1		componentSet
	m	(Lkp;Ljava/lang/Object;)Lkm$a;	a	set
		p	1		type
		p	2		value
	m	(Lkp;Ljava/lang/Object;)V	b	setUnchecked
		p	1		type
		p	2		value
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	a	map
c	km$a$a	net/minecraft/core/component/DataComponentMap$a$a
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	()Ljava/util/Set;	b	keySet
	m	(Lkp;)Z	b	has
		p	1		type
	m	()I	d	size
	m	()Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	f	map
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	c	map
c	kn	net/minecraft/core/component/DataComponentPatch
	m	(Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)V	<init>	<init>
		p	1		changedComponents
	m	()Lkn$a;	a	builder
	m	(Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)Ljava/lang/String;	a	toString
		p	0		changes
	m	(Ljava/util/Map;)Lkn;	a	lambda$static$0
		p	0		changes
	m	(Ljava/util/function/Predicate;)Lkn;	a	forget
		p	1		removedTypePredicate
	m	(Lkm$a;Ljava/util/Set;Lkp;Ljava/util/Optional;)V	a	lambda$split$2
		p	2		type
		p	3		value
	m	(Lkn;)Ljava/util/Map;	a	lambda$static$1
		p	0		changes
	m	(Lkp;)Ljava/util/Optional;	a	get
		p	1		type
	m	()Ljava/util/Set;	b	entrySet
	m	()I	c	size
	m	()Z	d	isEmpty
	m	()Lkn$c;	e	split
	f	Lkn;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	d	map
	f	Ljava/lang/String;	e	REMOVED_PREFIX
c	kn$1	net/minecraft/core/component/DataComponentPatch$1
	m	(Lwk;)Lkn;	a	decode
	m	(Lwk;Lkn;)V	a	encode
	m	(Lwk;Lkp;Ljava/lang/Object;)V	a	encodeComponent
		p	0		buf
		p	1		type
		p	2		value
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	kn$a	net/minecraft/core/component/DataComponentPatch$a
	m	()Lkn;	a	build
	m	(Lkp;)Lkn$a;	a	remove
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Lkn$a;	a	set
		p	1		type
		p	2		value
	m	(Lks;)Lkn$a;	a	set
		p	1		component
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	a	map
c	kn$b	net/minecraft/core/component/DataComponentPatch$b
	m	()Lcom/mojang/serialization/Codec;	a	valueCodec
	m	(Lakr;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		id
	m	(Lkn$b;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		type
	m	(Lkp;)Ljava/lang/String;	a	lambda$static$3
	m	()Lkp;	b	type
	m	(Lakr;)Ljava/lang/String;	b	lambda$static$0
	m	()Z	c	removed
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lkp;	b	type
	f	Z	c	removed
c	kn$c	net/minecraft/core/component/DataComponentPatch$c
	m	()Lkm;	a	added
	m	()Ljava/util/Set;	b	removed
	f	Lkn$c;	a	EMPTY
	f	Lkm;	b	added
	f	Ljava/util/Set;	c	removed
c	ko	net/minecraft/core/component/DataComponentPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		components
	m	()Lko$a;	a	builder
	m	(Ljava/util/Map;)Lko;	a	lambda$static$0
	m	(Lkl;)Z	a	test
		p	1		holder
	m	(Lkm;)Lko;	a	allOf
		p	0		components
	m	(Lko;)Ljava/util/List;	a	lambda$static$3
		p	0		predicate
	m	(Lks;)Z	a	lambda$static$1
	m	()Z	b	alwaysMatches
	m	(Lkm;)Z	b	test
	m	(Lko;)Ljava/util/Map;	b	lambda$static$2
		p	0		predicate
	m	()Lkn;	c	asPatch
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lko;	c	EMPTY
	f	Ljava/util/List;	d	expectedComponents
c	ko$a	net/minecraft/core/component/DataComponentPredicate$a
	m	()Lko;	a	build
	m	(Lkp;Ljava/lang/Object;)Lko$a;	a	expect
		p	1		type
		p	2		value
	f	Ljava/util/List;	a	expectedComponents
c	kp	net/minecraft/core/component/DataComponentType
	m	()Lkp$a;	a	builder
	m	(Lkp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		componentType
	m	(Lyx;)Lyx;	a	lambda$static$1
		p	0		packetCodec
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lkp;)Ljava/lang/String;	b	lambda$static$2
	m	()Lcom/mojang/serialization/Codec;	c	codecOrThrow
	m	()Z	d	isTransient
	m	()Lyx;	e	streamCodec
	m	()Lcom/mojang/serialization/Codec;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	PERSISTENT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	VALUE_MAP_CODEC
c	kp$a	net/minecraft/core/component/DataComponentType$a
	m	()Lkp$a;	a	cacheEncoding
	m	(Lcom/mojang/serialization/Codec;)Lkp$a;	a	persistent
		p	1		codec
	m	(Lyx;)Lkp$a;	a	networkSynchronized
		p	1		packetCodec
	m	()Lkp;	b	build
	m	()Lyx;	c	lambda$build$0
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Lyx;	b	streamCodec
	f	Z	c	cacheEncoding
c	kp$a$a	net/minecraft/core/component/DataComponentType$a$a
	m	(Lcom/mojang/serialization/Codec;Lyx;)V	<init>	<init>
		p	1		codec
		p	2		packetCodec
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	()Lyx;	e	streamCodec
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Lyx;	f	streamCodec
c	kq	net/minecraft/core/component/DataComponents
	m	(Lkp$a;)Lkp$a;	A	lambda$static$30
		p	0		builder
	m	(Lkp$a;)Lkp$a;	B	lambda$static$29
		p	0		builder
	m	(Lkp$a;)Lkp$a;	C	lambda$static$28
		p	0		builder
	m	(Lkp$a;)Lkp$a;	D	lambda$static$27
		p	0		builder
	m	(Lkp$a;)Lkp$a;	E	lambda$static$26
		p	0		builder
	m	(Lkp$a;)Lkp$a;	F	lambda$static$25
		p	0		builder
	m	(Lkp$a;)Lkp$a;	G	lambda$static$24
		p	0		builder
	m	(Lkp$a;)Lkp$a;	H	lambda$static$23
		p	0		builder
	m	(Lkp$a;)Lkp$a;	I	lambda$static$22
		p	0		builder
	m	(Lkp$a;)Lkp$a;	J	lambda$static$21
		p	0		builder
	m	(Lkp$a;)Lkp$a;	K	lambda$static$20
		p	0		builder
	m	(Lkp$a;)Lkp$a;	L	lambda$static$19
		p	0		builder
	m	(Lkp$a;)Lkp$a;	M	lambda$static$18
		p	0		builder
	m	(Lkp$a;)Lkp$a;	N	lambda$static$17
		p	0		builder
	m	(Lkp$a;)Lkp$a;	O	lambda$static$16
		p	0		builder
	m	(Lkp$a;)Lkp$a;	P	lambda$static$15
		p	0		builder
	m	(Lkp$a;)Lkp$a;	Q	lambda$static$14
		p	0		builder
	m	(Lkp$a;)Lkp$a;	R	lambda$static$13
		p	0		builder
	m	(Lkp$a;)Lkp$a;	S	lambda$static$12
		p	0		builder
	m	(Lkp$a;)Lkp$a;	T	lambda$static$11
		p	0		builder
	m	(Lkp$a;)Lkp$a;	U	lambda$static$10
		p	0		builder
	m	(Lkp$a;)Lkp$a;	V	lambda$static$9
		p	0		builder
	m	(Lkp$a;)Lkp$a;	W	lambda$static$8
		p	0		builder
	m	(Lkp$a;)Lkp$a;	X	lambda$static$7
		p	0		builder
	m	(Lkp$a;)Lkp$a;	Y	lambda$static$6
		p	0		builder
	m	(Lkp$a;)Lkp$a;	Z	lambda$static$5
		p	0		builder
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lkp;	a	register
		p	0		id
		p	1		builderOperator
	m	(Ljz;)Lkp;	a	bootstrap
		p	0		registry
	m	(Lkp$a;)Lkp$a;	a	lambda$static$56
		p	0		builder
	m	(Lkp$a;)Lkp$a;	aa	lambda$static$4
		p	0		builder
	m	(Lkp$a;)Lkp$a;	ab	lambda$static$3
		p	0		builder
	m	(Lkp$a;)Lkp$a;	ac	lambda$static$2
		p	0		builder
	m	(Lkp$a;)Lkp$a;	ad	lambda$static$1
		p	0		builder
	m	(Lkp$a;)Lkp$a;	ae	lambda$static$0
		p	0		builder
	m	(Lkp$a;)Lkp$a;	b	lambda$static$55
		p	0		builder
	m	(Lkp$a;)Lkp$a;	c	lambda$static$54
		p	0		builder
	m	(Lkp$a;)Lkp$a;	d	lambda$static$53
		p	0		builder
	m	(Lkp$a;)Lkp$a;	e	lambda$static$52
		p	0		builder
	m	(Lkp$a;)Lkp$a;	f	lambda$static$51
		p	0		builder
	m	(Lkp$a;)Lkp$a;	g	lambda$static$50
		p	0		builder
	m	(Lkp$a;)Lkp$a;	h	lambda$static$49
		p	0		builder
	m	(Lkp$a;)Lkp$a;	i	lambda$static$48
		p	0		builder
	m	(Lkp$a;)Lkp$a;	j	lambda$static$47
		p	0		builder
	m	(Lkp$a;)Lkp$a;	k	lambda$static$46
		p	0		builder
	m	(Lkp$a;)Lkp$a;	l	lambda$static$45
		p	0		builder
	m	(Lkp$a;)Lkp$a;	m	lambda$static$44
		p	0		builder
	m	(Lkp$a;)Lkp$a;	n	lambda$static$43
		p	0		builder
	m	(Lkp$a;)Lkp$a;	o	lambda$static$42
		p	0		builder
	m	(Lkp$a;)Lkp$a;	p	lambda$static$41
		p	0		builder
	m	(Lkp$a;)Lkp$a;	q	lambda$static$40
		p	0		builder
	m	(Lkp$a;)Lkp$a;	r	lambda$static$39
		p	0		builder
	m	(Lkp$a;)Lkp$a;	s	lambda$static$38
		p	0		builder
	m	(Lkp$a;)Lkp$a;	t	lambda$static$37
		p	0		builder
	m	(Lkp$a;)Lkp$a;	u	lambda$static$36
		p	0		builder
	m	(Lkp$a;)Lkp$a;	v	lambda$static$35
		p	0		builder
	m	(Lkp$a;)Lkp$a;	w	lambda$static$34
		p	0		builder
	m	(Lkp$a;)Lkp$a;	x	lambda$static$33
		p	0		builder
	m	(Lkp$a;)Lkp$a;	y	lambda$static$32
		p	0		builder
	m	(Lkp$a;)Lkp$a;	z	lambda$static$31
		p	0		builder
	f	Lkp;	A	MAP_COLOR
	f	Lkp;	B	MAP_ID
	f	Lkp;	C	MAP_DECORATIONS
	f	Lkp;	D	MAP_POST_PROCESSING
	f	Lkp;	E	CHARGED_PROJECTILES
	f	Lkp;	F	BUNDLE_CONTENTS
	f	Lkp;	G	POTION_CONTENTS
	f	Lkp;	H	SUSPICIOUS_STEW_EFFECTS
	f	Lkp;	I	WRITABLE_BOOK_CONTENT
	f	Lkp;	J	WRITTEN_BOOK_CONTENT
	f	Lkp;	K	TRIM
	f	Lkp;	L	DEBUG_STICK_STATE
	f	Lkp;	M	ENTITY_DATA
	f	Lkp;	N	BUCKET_ENTITY_DATA
	f	Lkp;	O	BLOCK_ENTITY_DATA
	f	Lkp;	P	INSTRUMENT
	f	Lkp;	Q	OMINOUS_BOTTLE_AMPLIFIER
	f	Lkp;	R	JUKEBOX_PLAYABLE
	f	Lkp;	S	RECIPES
	f	Lkp;	T	LODESTONE_TRACKER
	f	Lkp;	U	FIREWORK_EXPLOSION
	f	Lkp;	V	FIREWORKS
	f	Lkp;	W	PROFILE
	f	Lkp;	X	NOTE_BLOCK_SOUND
	f	Lkp;	Y	BANNER_PATTERNS
	f	Lkp;	Z	BASE_COLOR
	f	Laxu;	a	ENCODER_CACHE
	f	Lkp;	aa	POT_DECORATIONS
	f	Lkp;	ab	CONTAINER
	f	Lkp;	ac	BLOCK_STATE
	f	Lkp;	ad	BEES
	f	Lkp;	ae	LOCK
	f	Lkp;	af	CONTAINER_LOOT
	f	Lkm;	ag	COMMON_ITEM_COMPONENTS
	f	Lkp;	b	CUSTOM_DATA
	f	Lkp;	c	MAX_STACK_SIZE
	f	Lkp;	d	MAX_DAMAGE
	f	Lkp;	e	DAMAGE
	f	Lkp;	f	UNBREAKABLE
	f	Lkp;	g	CUSTOM_NAME
	f	Lkp;	h	ITEM_NAME
	f	Lkp;	i	LORE
	f	Lkp;	j	RARITY
	f	Lkp;	k	ENCHANTMENTS
	f	Lkp;	l	CAN_PLACE_ON
	f	Lkp;	m	CAN_BREAK
	f	Lkp;	n	ATTRIBUTE_MODIFIERS
	f	Lkp;	o	CUSTOM_MODEL_DATA
	f	Lkp;	p	HIDE_ADDITIONAL_TOOLTIP
	f	Lkp;	q	HIDE_TOOLTIP
	f	Lkp;	r	REPAIR_COST
	f	Lkp;	s	CREATIVE_SLOT_LOCK
	f	Lkp;	t	ENCHANTMENT_GLINT_OVERRIDE
	f	Lkp;	u	INTANGIBLE_PROJECTILE
	f	Lkp;	v	FOOD
	f	Lkp;	w	FIRE_RESISTANT
	f	Lkp;	x	TOOL
	f	Lkp;	y	STORED_ENCHANTMENTS
	f	Lkp;	z	DYED_COLOR
c	kr	net/minecraft/core/component/PatchedDataComponentMap
	m	(Lkm;)V	<init>	<init>
		p	1		baseComponents
	m	(Lkm;Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;Z)V	<init>	<init>
		p	1		baseComponents
		p	2		changedComponents
		p	3		copyOnWrite
	m	(Lkm;)V	a	setAll
		p	1		components
	m	(Lkm;Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)Z	a	isPatchSanitized
		p	0		baseComponents
		p	1		changedComponents
	m	(Lkm;Lkn;)Lkr;	a	fromPatch
		p	0		baseComponents
		p	1		changes
	m	(Lkn;)V	a	applyPatch
		p	1		changes
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	(Lkp;Ljava/util/Optional;)V	a	applyPatch
		p	1		type
		p	2		optional
	m	()Ljava/util/Set;	b	keySet
	m	(Lkn;)V	b	restorePatch
		p	1		changes
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	b	set
		p	1		type
		p	2		value
	m	()I	d	size
	m	(Lkp;)Ljava/lang/Object;	d	remove
		p	1		type
	m	()Lkn;	f	asPatch
	m	()Lkr;	g	copy
	m	()V	h	ensureMapOwnership
	f	Lkm;	c	prototype
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	d	patch
	f	Z	e	copyOnWrite
c	ks	net/minecraft/core/component/TypedDataComponent
	m	()Lkp;	a	type
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encodeValue
		p	1		ops
	m	(Ljava/util/Map$Entry;)Lks;	a	fromEntryUnchecked
		p	0		entry
	m	(Lkp;Ljava/lang/Object;)Lks;	a	createUnchecked
		p	0		type
		p	1		value
	m	(Lkr;)V	a	applyTo
		p	1		components
	m	()Ljava/lang/Object;	b	value
	m	()Ljava/lang/String;	c	lambda$encodeValue$0
	f	Lyx;	a	STREAM_CODEC
	f	Lkp;	b	type
	f	Ljava/lang/Object;	c	value
c	ks$1	net/minecraft/core/component/TypedDataComponent$1
	m	(Lwk;)Lks;	a	decode
	m	(Lwk;Lkp;)Lks;	a	decodeTyped
		p	0		buf
		p	1		type
	m	(Lwk;Lks;)V	a	encode
	m	(Lwk;Lks;)V	b	encodeCap
		p	0		buf
		p	1		component
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	ku	net/minecraft/core/dispenser/SourceBlock
	m	()Lexc;	a	center
	m	()Laqu;	b	level
	m	()Ljd;	c	pos
	m	()Ldtc;	d	state
	m	()Ldra;	e	blockEntity
	f	Laqu;	a	level
	f	Ljd;	b	pos
	f	Ldtc;	c	state
	f	Ldra;	d	blockEntity
c	kv	net/minecraft/core/dispenser/DispenseBehaviorBoat
	m	(Lcov$b;)V	<init>	<init>
		p	1		type
	m	(Lcov$b;Z)V	<init>	<init>
		p	1		boatType
		p	2		chest
	m	(Lku;)V	a	playSound
		p	1		pointer
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lkw;	c	defaultDispenseItemBehavior
	f	Lcov$b;	d	type
	f	Z	e	isChestBoat
c	kw	net/minecraft/core/dispenser/DispenseBehaviorItem
	m	(Ldcw;Lcuq;ILji;Ljw;)V	a	spawnItem
		p	0		world
		p	1		stack
		p	2		speed
		p	3		side
		p	4		pos
	m	(Lku;)V	a	playSound
		p	1		pointer
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lku;Lcuq;Lcuq;)Lcuq;	a	consumeWithRemainder
		p	1		pointer
		p	2		stack
		p	3		remainder
	m	(Lku;Lji;)V	a	playAnimation
		p	1		pointer
		p	2		side
	m	(Lku;)V	b	playDefaultSound
		p	0		pointer
	m	(Lku;Lcuq;)V	b	addToInventoryOrDispense
		p	1		pointer
		p	2		stack
	m	(Lku;Lji;)V	b	playDefaultAnimation
		p	0		pointer
		p	1		side
	m	(Lku;Lcuq;)Lcuq;	dispense	dispense
		p	1		pointer
		p	2		stack
	f	I	c	DEFAULT_ACCURACY
c	kx	net/minecraft/core/dispenser/IDispenseBehavior
	m	()V	a	bootStrap
	m	(Lku;Lcuq;)Lcuq;	a	lambda$static$0
		p	0		pointer
		p	1		stack
	m	(Lku;Lcuq;)Lcuq;	dispense	dispense
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lkx;	b	NOOP
c	kx$1	net/minecraft/core/dispenser/IDispenseBehavior$1
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$2	net/minecraft/core/dispenser/IDispenseBehavior$2
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$3	net/minecraft/core/dispenser/IDispenseBehavior$3
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$4	net/minecraft/core/dispenser/IDispenseBehavior$4
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$5	net/minecraft/core/dispenser/IDispenseBehavior$5
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$6	net/minecraft/core/dispenser/IDispenseBehavior$6
	m	(Ldtb$a;)Z	a	lambda$execute$0
		p	0		state
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	m	(Lku;Lcuq;Lcuq;)Lcuq;	b	takeLiquid
		p	1		pointer
		p	2		oldStack
		p	3		newStack
c	kx$7	net/minecraft/core/dispenser/IDispenseBehavior$7
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$8	net/minecraft/core/dispenser/IDispenseBehavior$8
	m	(Lcul;)V	a	lambda$execute$0
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$9	net/minecraft/core/dispenser/IDispenseBehavior$9
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$10	net/minecraft/core/dispenser/IDispenseBehavior$10
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lkw;	c	defaultDispenseItemBehavior
c	kx$11	net/minecraft/core/dispenser/IDispenseBehavior$11
	m	(Lji;Lciw;)V	a	lambda$execute$0
		p	1		armorStand
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$12	net/minecraft/core/dispenser/IDispenseBehavior$12
	m	(Lbtn;)Z	a	lambda$execute$0
		p	0		entity
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$13	net/minecraft/core/dispenser/IDispenseBehavior$13
	m	(Lchi;)Z	a	lambda$execute$0
		p	0		horse
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$14	net/minecraft/core/dispenser/IDispenseBehavior$14
	m	(Lchh;)Z	a	lambda$execute$0
		p	0		donkey
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$15	net/minecraft/core/dispenser/IDispenseBehavior$15
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lkw;	c	defaultDispenseItemBehavior
c	kx$16	net/minecraft/core/dispenser/IDispenseBehavior$16
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$17	net/minecraft/core/dispenser/IDispenseBehavior$17
	m	(Lcul;)V	a	lambda$execute$0
		p	0		item
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	kx$18	net/minecraft/core/dispenser/IDispenseBehavior$18
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	ky	net/minecraft/core/dispenser/DispenseBehaviorMaybe
	m	(Lku;)V	a	playSound
		p	1		pointer
	m	(Z)V	a	setSuccess
		p	1		success
	m	()Z	b	isSuccess
	f	Z	c	success
c	kz	net/minecraft/core/dispenser/DispenseBehaviorProjectile
	m	(Lcul;)V	<init>	<init>
		p	1		item
	m	(Lku;)V	a	playSound
		p	1		pointer
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lcvm;	c	projectileItem
	f	Lcvm$a;	d	dispenseConfig
c	la	net/minecraft/core/dispenser/DispenseBehaviorShears
	m	(Laqu;Ljd;)Z	a	tryShearBeehive
		p	0		world
		p	1		pos
	m	(Lcul;)V	a	lambda$execute$0
		p	0		item
	m	(Ldtb$a;)Z	a	lambda$tryShearBeehive$1
		p	0		state
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	m	(Laqu;Ljd;)Z	b	tryShearLivingEntity
		p	0		world
		p	1		pos
c	lb	net/minecraft/core/dispenser/DispenseBehaviorShulkerBox
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lorg/slf4j/Logger;	c	LOGGER
c	le	net/minecraft/core/particles/ParticleParamBlock
	m	(Lll;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		blockState
	m	()Lll;	a	getType
	m	(Lle;)Ldtc;	a	lambda$streamCodec$3
		p	0		effect
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		type
	m	(Lll;Ldtc;)Lle;	a	lambda$streamCodec$2
		p	1		state
	m	()Ldtc;	b	getState
	m	(Lle;)Ldtc;	b	lambda$codec$1
		p	0		effect
	m	(Lll;)Lyx;	b	streamCodec
		p	0		type
	m	(Lll;Ldtc;)Lle;	b	lambda$codec$0
		p	1		state
	f	Lcom/mojang/serialization/Codec;	a	BLOCK_STATE_CODEC
	f	Lll;	b	type
	f	Ldtc;	c	state
c	lf	net/minecraft/core/particles/ColorParticleOption
	m	(Lll;I)V	<init>	<init>
		p	1		type
		p	2		color
	m	()Lll;	a	getType
	m	(Llf;)Ljava/lang/Integer;	a	lambda$streamCodec$3
		p	0		particleEffect
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		type
	m	(Lll;FFF)Llf;	a	create
		p	0		type
		p	1		r
		p	2		g
		p	3		b
	m	(Lll;I)Llf;	a	create
		p	0		type
		p	1		color
	m	(Lll;Ljava/lang/Integer;)Llf;	a	lambda$streamCodec$2
		p	1		color
	m	()F	b	getRed
	m	(Llf;)Ljava/lang/Integer;	b	lambda$codec$1
		p	0		effect
	m	(Lll;)Lyx;	b	streamCodec
		p	0		type
	m	(Lll;Ljava/lang/Integer;)Llf;	b	lambda$codec$0
		p	1		color
	m	()F	c	getGreen
	m	()F	d	getBlue
	m	()F	e	getAlpha
	f	Lll;	a	type
	f	I	b	color
c	lg	net/minecraft/core/particles/DustColorTransitionOptions
	m	(Lorg/joml/Vector3f;Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		fromColor
		p	2		toColor
		p	3		scale
	m	()Lll;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Llg;)Lorg/joml/Vector3f;	a	lambda$static$4
		p	0		effect
	m	()Lorg/joml/Vector3f;	b	getFromColor
	m	(Llg;)Lorg/joml/Vector3f;	b	lambda$static$3
		p	0		effect
	m	()Lorg/joml/Vector3f;	c	getToColor
	m	(Llg;)Lorg/joml/Vector3f;	c	lambda$static$1
		p	0		effect
	m	(Llg;)Lorg/joml/Vector3f;	d	lambda$static$0
		p	0		effect
	f	Lorg/joml/Vector3f;	a	SCULK_PARTICLE_COLOR
	f	Llg;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lorg/joml/Vector3f;	h	fromColor
	f	Lorg/joml/Vector3f;	i	toColor
c	lh	net/minecraft/core/particles/ParticleParamRedstone
	m	(Lorg/joml/Vector3f;F)V	<init>	<init>
		p	1		color
		p	2		scale
	m	()Lll;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Llh;)Lorg/joml/Vector3f;	a	lambda$static$2
		p	0		effect
	m	()Lorg/joml/Vector3f;	b	getColor
	m	(Llh;)Lorg/joml/Vector3f;	b	lambda$static$0
		p	0		effect
	f	Lorg/joml/Vector3f;	a	REDSTONE_PARTICLE_COLOR
	f	Llh;	b	REDSTONE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lorg/joml/Vector3f;	h	color
c	li	net/minecraft/core/particles/ParticleParamItem
	m	(Lll;Lcuq;)V	<init>	<init>
		p	1		type
		p	2		stack
	m	()Lll;	a	getType
	m	(Lli;)Lcuq;	a	lambda$streamCodec$3
		p	0		effect
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		type
	m	(Lll;Lcuq;)Lli;	a	lambda$streamCodec$2
		p	1		stack
	m	()Lcuq;	b	getItem
	m	(Lli;)Lcuq;	b	lambda$codec$1
		p	0		effect
	m	(Lll;)Lyx;	b	streamCodec
		p	0		type
	m	(Lll;Lcuq;)Lli;	b	lambda$codec$0
		p	1		stack
	f	Lcom/mojang/serialization/Codec;	a	ITEM_CODEC
	f	Lll;	b	type
	f	Lcuq;	c	itemStack
c	lj	lj
	m	(I)V	<init>	<init>
		p	1		maxCount
	m	()I	a	getLimit
	f	Llj;	a	SPORE_BLOSSOM
	f	I	b	limit
c	lk	net/minecraft/core/particles/ParticleParam
	m	()Lll;	a	getType
c	ll	net/minecraft/core/particles/Particle
	m	(Z)V	<init>	<init>
		p	1		alwaysShow
	m	()Z	b	getOverrideLimiter
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lyx;	d	streamCodec
	f	Z	a	overrideLimiter
c	lm	net/minecraft/core/particles/Particles
	m	(Ljava/lang/String;Z)Llq;	a	register
		p	0		name
		p	1		alwaysShow
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;)Lll;	a	register
		p	0		name
		p	1		alwaysShow
		p	2		codecGetter
		p	3		packetCodecGetter
	m	(Lll;)Lyx;	a	lambda$static$9
		p	0		type
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	b	lambda$static$8
		p	0		type
	m	(Lll;)Lyx;	c	lambda$static$7
		p	0		type
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	d	lambda$static$6
		p	0		type
	m	(Lll;)Lyx;	e	lambda$static$5
		p	0		type
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	f	lambda$static$4
		p	0		type
	m	(Lll;)Lyx;	g	lambda$static$3
		p	0		type
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	h	lambda$static$2
		p	0		type
	m	(Lll;)Lyx;	i	lambda$static$1
		p	0		type
	m	(Lll;)Lcom/mojang/serialization/MapCodec;	j	lambda$static$0
		p	0		type
	f	Llq;	A	GUST_EMITTER_SMALL
	f	Llq;	B	SONIC_BOOM
	f	Lll;	C	FALLING_DUST
	f	Llq;	D	FIREWORK
	f	Llq;	E	FISHING
	f	Llq;	F	FLAME
	f	Llq;	G	INFESTED
	f	Llq;	H	CHERRY_LEAVES
	f	Llq;	I	SCULK_SOUL
	f	Lll;	J	SCULK_CHARGE
	f	Llq;	K	SCULK_CHARGE_POP
	f	Llq;	L	SOUL_FIRE_FLAME
	f	Llq;	M	SOUL
	f	Llq;	N	FLASH
	f	Llq;	O	HAPPY_VILLAGER
	f	Llq;	P	COMPOSTER
	f	Llq;	Q	HEART
	f	Llq;	R	INSTANT_EFFECT
	f	Lll;	S	ITEM
	f	Lll;	T	VIBRATION
	f	Llq;	U	ITEM_SLIME
	f	Llq;	V	ITEM_COBWEB
	f	Llq;	W	ITEM_SNOWBALL
	f	Llq;	X	LARGE_SMOKE
	f	Llq;	Y	LAVA
	f	Llq;	Z	MYCELIUM
	f	Llq;	aA	ASH
	f	Llq;	aB	CRIMSON_SPORE
	f	Llq;	aC	WARPED_SPORE
	f	Llq;	aD	SPORE_BLOSSOM_AIR
	f	Llq;	aE	DRIPPING_OBSIDIAN_TEAR
	f	Llq;	aF	FALLING_OBSIDIAN_TEAR
	f	Llq;	aG	LANDING_OBSIDIAN_TEAR
	f	Llq;	aH	REVERSE_PORTAL
	f	Llq;	aI	WHITE_ASH
	f	Llq;	aJ	SMALL_FLAME
	f	Llq;	aK	SNOWFLAKE
	f	Llq;	aL	DRIPPING_DRIPSTONE_LAVA
	f	Llq;	a	ANGRY_VILLAGER
	f	Llq;	aM	FALLING_DRIPSTONE_LAVA
	f	Llq;	aN	DRIPPING_DRIPSTONE_WATER
	f	Llq;	aO	FALLING_DRIPSTONE_WATER
	f	Llq;	aP	GLOW_SQUID_INK
	f	Llq;	aQ	GLOW
	f	Llq;	aR	WAX_ON
	f	Llq;	aS	WAX_OFF
	f	Llq;	aT	ELECTRIC_SPARK
	f	Llq;	aU	SCRAPE
	f	Lll;	aV	SHRIEK
	f	Llq;	aW	EGG_CRACK
	f	Llq;	aX	DUST_PLUME
	f	Llq;	aY	TRIAL_SPAWNER_DETECTED_PLAYER
	f	Llq;	aZ	TRIAL_SPAWNER_DETECTED_PLAYER_OMINOUS
	f	Llq;	aa	NOTE
	f	Llq;	ab	POOF
	f	Llq;	ac	PORTAL
	f	Llq;	ad	RAIN
	f	Llq;	ae	SMOKE
	f	Llq;	af	WHITE_SMOKE
	f	Llq;	ag	SNEEZE
	f	Llq;	ah	SPIT
	f	Llq;	ai	SQUID_INK
	f	Llq;	aj	SWEEP_ATTACK
	f	Llq;	ak	TOTEM_OF_UNDYING
	f	Llq;	al	UNDERWATER
	f	Llq;	am	SPLASH
	f	Llq;	an	WITCH
	f	Llq;	ao	BUBBLE_POP
	f	Llq;	ap	CURRENT_DOWN
	f	Llq;	aq	BUBBLE_COLUMN_UP
	f	Llq;	ar	NAUTILUS
	f	Llq;	as	DOLPHIN
	f	Llq;	at	CAMPFIRE_COSY_SMOKE
	f	Llq;	au	CAMPFIRE_SIGNAL_SMOKE
	f	Llq;	av	DRIPPING_HONEY
	f	Llq;	aw	FALLING_HONEY
	f	Llq;	ax	LANDING_HONEY
	f	Llq;	ay	FALLING_NECTAR
	f	Llq;	az	FALLING_SPORE_BLOSSOM
	f	Lll;	b	BLOCK
	f	Llq;	ba	VAULT_CONNECTION
	f	Lll;	bb	DUST_PILLAR
	f	Llq;	bc	OMINOUS_SPAWNING
	f	Llq;	bd	RAID_OMEN
	f	Llq;	be	TRIAL_OMEN
	f	Lcom/mojang/serialization/Codec;	bf	CODEC
	f	Lyx;	bg	STREAM_CODEC
	f	Lll;	c	BLOCK_MARKER
	f	Llq;	d	BUBBLE
	f	Llq;	e	CLOUD
	f	Llq;	f	CRIT
	f	Llq;	g	DAMAGE_INDICATOR
	f	Llq;	h	DRAGON_BREATH
	f	Llq;	i	DRIPPING_LAVA
	f	Llq;	j	FALLING_LAVA
	f	Llq;	k	LANDING_LAVA
	f	Llq;	l	DRIPPING_WATER
	f	Llq;	m	FALLING_WATER
	f	Lll;	n	DUST
	f	Lll;	o	DUST_COLOR_TRANSITION
	f	Llq;	p	EFFECT
	f	Llq;	q	ELDER_GUARDIAN
	f	Llq;	r	ENCHANTED_HIT
	f	Llq;	s	ENCHANT
	f	Llq;	t	END_ROD
	f	Lll;	u	ENTITY_EFFECT
	f	Llq;	v	EXPLOSION_EMITTER
	f	Llq;	w	EXPLOSION
	f	Llq;	x	GUST
	f	Llq;	y	SMALL_GUST
	f	Llq;	z	GUST_EMITTER_LARGE
c	lm$1	net/minecraft/core/particles/Particles$1
	m	(ZLjava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		alwaysShow
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lyx;	d	streamCodec
	f	Ljava/util/function/Function;	a	val$codec
	f	Ljava/util/function/Function;	b	val$streamCodec
c	ln	net/minecraft/core/particles/DustParticleOptionsBase
	m	(F)V	<init>	<init>
		p	1		scale
	m	(Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		scale
	m	(Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	()F	d	getScale
	f	F	a	scale
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lcom/mojang/serialization/Codec;	g	SCALE
c	lo	net/minecraft/core/particles/SculkChargeParticleOptions
	m	()Lll;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Llo;)Ljava/lang/Float;	a	lambda$static$2
		p	0		effect
	m	()F	b	roll
	m	(Llo;)Ljava/lang/Float;	b	lambda$static$0
		p	0		particleEffect
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	F	c	roll
c	lp	net/minecraft/core/particles/ShriekParticleOption
	m	(I)V	<init>	<init>
		p	1		delay
	m	()Lll;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Llp;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		effect
	m	()I	b	getDelay
	m	(Llp;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		particleEffect
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	delay
c	lq	net/minecraft/core/particles/ParticleType
	m	(Z)V	<init>	<init>
		p	1		alwaysShow
	m	()Lll;	a	getType
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lyx;	d	streamCodec
	m	()Llq;	e	getType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lyx;	b	streamCodec
c	lr	net/minecraft/core/particles/VibrationParticleOption
	m	(Ldyd;I)V	<init>	<init>
		p	1		destination
		p	2		arrivalInTicks
	m	()Lll;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldyd;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		positionSource
	m	()Ldyd;	b	getDestination
	m	()I	c	getArrivalInTicks
	m	()Ljava/lang/String;	d	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	SAFE_POSITION_SOURCE_CODEC
	f	Ldyd;	d	destination
	f	I	e	arrivalInTicks
c	lt	net/minecraft/core/registries/BuiltInRegistries
	m	(Ljz;)Ljava/lang/Object;	A	lambda$static$21
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	B	lambda$static$20
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	C	lambda$static$19
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	D	lambda$static$18
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	E	lambda$static$17
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	F	lambda$static$16
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	G	lambda$static$15
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	H	lambda$static$14
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	I	lambda$static$13
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	J	lambda$static$12
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	K	lambda$static$11
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	L	lambda$static$10
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	M	lambda$static$9
	m	(Ljz;)Ljava/lang/Object;	N	lambda$static$8
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	O	lambda$static$7
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	P	lambda$static$6
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	Q	lambda$static$5
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	R	lambda$static$4
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	S	lambda$static$3
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	T	lambda$static$2
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	U	lambda$static$1
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	V	lambda$static$0
		p	0		registry
	m	()V	a	bootStrap
	m	(Lakq;)Ljava/lang/String;	a	lambda$internalRegister$47
	m	(Lakq;Ljava/lang/String;Llt$a;)Ljh;	a	registerDefaulted
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Lakq;Lki;Llt$a;)Lki;	a	internalRegister
		p	0		key
		p	1		registry
		p	2		initializer
	m	(Lakq;Llt$a;)Ljz;	a	registerSimple
		p	0		key
		p	1		initializer
	m	(Lakr;Ljava/util/function/Supplier;)V	a	lambda$createContents$49
		p	0		id
		p	1		initializer
	m	(Ljz;)V	a	validate
		p	0		registries
	m	(Ljz;Ljz;)V	a	lambda$validate$50
		p	1		registry
	m	(Llt$a;Lki;)Ljava/lang/Object;	a	lambda$internalRegister$48
	m	()V	b	createContents
	m	(Lakq;Ljava/lang/String;Llt$a;)Ljh;	b	registerDefaultedWithIntrusiveHolders
		p	0		key
		p	1		defaultId
		p	2		initializer
	m	(Lakq;Llt$a;)Ljz;	b	registerSimpleWithIntrusiveHolders
		p	0		key
		p	1		initializer
	m	(Ljz;)Ljava/lang/Object;	b	lambda$static$46
		p	0		registry
	m	()V	c	freeze
	m	(Ljz;)Ljava/lang/Object;	c	lambda$static$45
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	d	lambda$static$44
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	e	lambda$static$43
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	f	lambda$static$42
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	g	lambda$static$41
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	h	lambda$static$40
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	i	lambda$static$39
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	j	lambda$static$38
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	k	lambda$static$37
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	l	lambda$static$36
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	m	lambda$static$35
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	n	lambda$static$34
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	o	lambda$static$33
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	p	lambda$static$32
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	q	lambda$static$31
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	r	lambda$static$30
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	s	lambda$static$29
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	t	lambda$static$28
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	u	lambda$static$27
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	v	lambda$static$26
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	w	lambda$static$25
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	x	lambda$static$24
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	y	lambda$static$23
		p	0		registry
	m	(Ljz;)Ljava/lang/Object;	z	lambda$static$22
		p	0		registry
	f	Ljh;	A	SENSOR_TYPE
	f	Ljz;	B	SCHEDULE
	f	Ljz;	C	ACTIVITY
	f	Ljz;	D	LOOT_POOL_ENTRY_TYPE
	f	Ljz;	E	LOOT_FUNCTION_TYPE
	f	Ljz;	F	LOOT_CONDITION_TYPE
	f	Ljz;	G	LOOT_NUMBER_PROVIDER_TYPE
	f	Ljz;	H	LOOT_NBT_PROVIDER_TYPE
	f	Ljz;	I	LOOT_SCORE_PROVIDER_TYPE
	f	Ljz;	J	FLOAT_PROVIDER_TYPE
	f	Ljz;	K	INT_PROVIDER_TYPE
	f	Ljz;	L	HEIGHT_PROVIDER_TYPE
	f	Ljz;	M	BLOCK_PREDICATE_TYPE
	f	Ljz;	N	CARVER
	f	Ljz;	O	FEATURE
	f	Ljz;	P	STRUCTURE_PLACEMENT
	f	Ljz;	Q	STRUCTURE_PIECE
	f	Ljz;	R	STRUCTURE_TYPE
	f	Ljz;	S	PLACEMENT_MODIFIER_TYPE
	f	Ljz;	T	BLOCKSTATE_PROVIDER_TYPE
	f	Ljz;	U	FOLIAGE_PLACER_TYPE
	f	Ljz;	V	TRUNK_PLACER_TYPE
	f	Ljz;	W	ROOT_PLACER_TYPE
	f	Ljz;	X	TREE_DECORATOR_TYPE
	f	Ljz;	Y	FEATURE_SIZE_TYPE
	f	Ljz;	Z	BIOME_SOURCE
	f	Ljz;	aA	REGISTRY
	f	Lorg/slf4j/Logger;	aB	LOGGER
	f	Ljava/util/Map;	aC	LOADERS
	f	Lki;	aD	WRITABLE_REGISTRY
	f	Ljh;	a	GAME_EVENT
	f	Ljz;	aa	CHUNK_GENERATOR
	f	Ljz;	ab	MATERIAL_CONDITION
	f	Ljz;	ac	MATERIAL_RULE
	f	Ljz;	ad	DENSITY_FUNCTION_TYPE
	f	Ljz;	ae	BLOCK_TYPE
	f	Ljz;	af	STRUCTURE_PROCESSOR
	f	Ljz;	ag	STRUCTURE_POOL_ELEMENT
	f	Ljz;	ah	POOL_ALIAS_BINDING_TYPE
	f	Ljz;	ai	CAT_VARIANT
	f	Ljz;	aj	FROG_VARIANT
	f	Ljz;	ak	INSTRUMENT
	f	Ljz;	al	DECORATED_POT_PATTERN
	f	Ljz;	am	CREATIVE_MODE_TAB
	f	Ljz;	an	TRIGGER_TYPES
	f	Ljz;	ao	NUMBER_FORMAT_TYPE
	f	Ljz;	ap	ARMOR_MATERIAL
	f	Ljz;	aq	DATA_COMPONENT_TYPE
	f	Ljz;	ar	ENTITY_SUB_PREDICATE_TYPE
	f	Ljz;	as	ITEM_SUB_PREDICATE_TYPE
	f	Ljz;	at	MAP_DECORATION_TYPE
	f	Ljz;	au	ENCHANTMENT_EFFECT_COMPONENT_TYPE
	f	Ljz;	av	ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
	f	Ljz;	aw	ENCHANTMENT_ENTITY_EFFECT_TYPE
	f	Ljz;	ax	ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
	f	Ljz;	ay	ENCHANTMENT_VALUE_EFFECT_TYPE
	f	Ljz;	az	ENCHANTMENT_PROVIDER_TYPE
	f	Ljz;	b	SOUND_EVENT
	f	Ljh;	c	FLUID
	f	Ljz;	d	MOB_EFFECT
	f	Ljh;	e	BLOCK
	f	Ljh;	f	ENTITY_TYPE
	f	Ljh;	g	ITEM
	f	Ljz;	h	POTION
	f	Ljz;	i	PARTICLE_TYPE
	f	Ljz;	j	BLOCK_ENTITY_TYPE
	f	Ljz;	k	CUSTOM_STAT
	f	Ljh;	l	CHUNK_STATUS
	f	Ljz;	m	RULE_TEST
	f	Ljz;	n	RULE_BLOCK_ENTITY_MODIFIER
	f	Ljz;	o	POS_RULE_TEST
	f	Ljz;	p	MENU
	f	Ljz;	q	RECIPE_TYPE
	f	Ljz;	r	RECIPE_SERIALIZER
	f	Ljz;	s	ATTRIBUTE
	f	Ljz;	t	POSITION_SOURCE_TYPE
	f	Ljz;	u	COMMAND_ARGUMENT_TYPE
	f	Ljz;	v	STAT_TYPE
	f	Ljh;	w	VILLAGER_TYPE
	f	Ljh;	x	VILLAGER_PROFESSION
	f	Ljz;	y	POINT_OF_INTEREST_TYPE
	f	Ljh;	z	MEMORY_MODULE_TYPE
c	lt$a	net/minecraft/core/registries/BuiltInRegistries$a
	m	(Ljz;)Ljava/lang/Object;	run	run
		p	1		registry
c	lu	net/minecraft/core/registries/Registries
	m	(Lakq;)Lakq;	a	levelStemToLevel
		p	0		key
	m	(Ljava/lang/String;)Lakq;	a	createRegistryKey
		p	0		id
	m	(Lakq;)Lakq;	b	levelToLevelStem
		p	0		key
	m	(Lakq;)Ljava/lang/String;	c	elementsDirPath
		p	0		registryRef
	m	(Lakq;)Ljava/lang/String;	d	tagsDirPath
		p	0		registryRef
	f	Lakq;	A	FEATURE
	f	Lakq;	B	FEATURE_SIZE_TYPE
	f	Lakq;	C	FLOAT_PROVIDER_TYPE
	f	Lakq;	D	FLUID
	f	Lakq;	E	FOLIAGE_PLACER_TYPE
	f	Lakq;	F	FROG_VARIANT
	f	Lakq;	G	GAME_EVENT
	f	Lakq;	H	HEIGHT_PROVIDER_TYPE
	f	Lakq;	I	INSTRUMENT
	f	Lakq;	J	INT_PROVIDER_TYPE
	f	Lakq;	K	ITEM
	f	Lakq;	L	JUKEBOX_SONG
	f	Lakq;	M	LOOT_CONDITION_TYPE
	f	Lakq;	N	LOOT_FUNCTION_TYPE
	f	Lakq;	O	LOOT_NBT_PROVIDER_TYPE
	f	Lakq;	P	LOOT_NUMBER_PROVIDER_TYPE
	f	Lakq;	Q	LOOT_POOL_ENTRY_TYPE
	f	Lakq;	R	LOOT_SCORE_PROVIDER_TYPE
	f	Lakq;	S	MATERIAL_CONDITION
	f	Lakq;	T	MATERIAL_RULE
	f	Lakq;	U	MEMORY_MODULE_TYPE
	f	Lakq;	V	MENU
	f	Lakq;	W	MOB_EFFECT
	f	Lakq;	X	PAINTING_VARIANT
	f	Lakq;	Y	PARTICLE_TYPE
	f	Lakq;	Z	PLACEMENT_MODIFIER_TYPE
	f	Lakq;	aA	DATA_COMPONENT_TYPE
	f	Lakq;	aB	ENTITY_SUB_PREDICATE_TYPE
	f	Lakq;	aC	ITEM_SUB_PREDICATE_TYPE
	f	Lakq;	aD	MAP_DECORATION_TYPE
	f	Lakq;	aE	ENCHANTMENT_EFFECT_COMPONENT_TYPE
	f	Lakq;	aF	BIOME
	f	Lakq;	aG	CHAT_TYPE
	f	Lakq;	aH	CONFIGURED_CARVER
	f	Lakq;	aI	CONFIGURED_FEATURE
	f	Lakq;	aJ	DENSITY_FUNCTION
	f	Lakq;	aK	DIMENSION_TYPE
	f	Lakq;	aL	ENCHANTMENT
	f	Lakr;	a	ROOT_REGISTRY_NAME
	f	Lakq;	aM	ENCHANTMENT_PROVIDER
	f	Lakq;	aN	FLAT_LEVEL_GENERATOR_PRESET
	f	Lakq;	aO	NOISE_SETTINGS
	f	Lakq;	aP	NOISE
	f	Lakq;	aQ	PLACED_FEATURE
	f	Lakq;	aR	STRUCTURE
	f	Lakq;	aS	PROCESSOR_LIST
	f	Lakq;	aT	STRUCTURE_SET
	f	Lakq;	aU	TEMPLATE_POOL
	f	Lakq;	aV	TRIGGER_TYPE
	f	Lakq;	aW	TRIM_MATERIAL
	f	Lakq;	aX	TRIM_PATTERN
	f	Lakq;	aY	WORLD_PRESET
	f	Lakq;	aZ	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Lakq;	aa	POINT_OF_INTEREST_TYPE
	f	Lakq;	ab	POSITION_SOURCE_TYPE
	f	Lakq;	ac	POS_RULE_TEST
	f	Lakq;	ad	POTION
	f	Lakq;	ae	RECIPE_SERIALIZER
	f	Lakq;	af	RECIPE_TYPE
	f	Lakq;	ag	ROOT_PLACER_TYPE
	f	Lakq;	ah	RULE_TEST
	f	Lakq;	ai	RULE_BLOCK_ENTITY_MODIFIER
	f	Lakq;	aj	SCHEDULE
	f	Lakq;	ak	SENSOR_TYPE
	f	Lakq;	al	SOUND_EVENT
	f	Lakq;	am	STAT_TYPE
	f	Lakq;	an	STRUCTURE_PIECE
	f	Lakq;	ao	STRUCTURE_PLACEMENT
	f	Lakq;	ap	STRUCTURE_POOL_ELEMENT
	f	Lakq;	aq	POOL_ALIAS_BINDING
	f	Lakq;	ar	STRUCTURE_PROCESSOR
	f	Lakq;	as	STRUCTURE_TYPE
	f	Lakq;	at	TREE_DECORATOR_TYPE
	f	Lakq;	au	TRUNK_PLACER_TYPE
	f	Lakq;	av	VILLAGER_PROFESSION
	f	Lakq;	aw	VILLAGER_TYPE
	f	Lakq;	ax	DECORATED_POT_PATTERN
	f	Lakq;	ay	NUMBER_FORMAT_TYPE
	f	Lakq;	az	ARMOR_MATERIAL
	f	Lakq;	b	ACTIVITY
	f	Lakq;	ba	DIMENSION
	f	Lakq;	bb	LEVEL_STEM
	f	Lakq;	bc	LOOT_TABLE
	f	Lakq;	bd	ITEM_MODIFIER
	f	Lakq;	be	PREDICATE
	f	Lakq;	bf	ADVANCEMENT
	f	Lakq;	bg	RECIPE
	f	Lakq;	c	ATTRIBUTE
	f	Lakq;	d	BANNER_PATTERN
	f	Lakq;	e	BIOME_SOURCE
	f	Lakq;	f	BLOCK
	f	Lakq;	g	BLOCK_TYPE
	f	Lakq;	h	BLOCK_ENTITY_TYPE
	f	Lakq;	i	BLOCK_PREDICATE_TYPE
	f	Lakq;	j	BLOCK_STATE_PROVIDER_TYPE
	f	Lakq;	k	CARVER
	f	Lakq;	l	CAT_VARIANT
	f	Lakq;	m	WOLF_VARIANT
	f	Lakq;	n	CHUNK_GENERATOR
	f	Lakq;	o	CHUNK_STATUS
	f	Lakq;	p	COMMAND_ARGUMENT_TYPE
	f	Lakq;	q	CREATIVE_MODE_TAB
	f	Lakq;	r	CUSTOM_STAT
	f	Lakq;	s	DAMAGE_TYPE
	f	Lakq;	t	DENSITY_FUNCTION_TYPE
	f	Lakq;	u	ENCHANTMENT_ENTITY_EFFECT_TYPE
	f	Lakq;	v	ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
	f	Lakq;	w	ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
	f	Lakq;	x	ENCHANTMENT_PROVIDER_TYPE
	f	Lakq;	y	ENCHANTMENT_VALUE_EFFECT_TYPE
	f	Lakq;	z	ENTITY_TYPE
c	lw	lw
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	(Ldfy;)Llx$a;	a	familyBuilder
		p	0		baseBlock
	f	Llx;	A	EXPOSED_CUT_COPPER
	f	Llx;	B	WAXED_EXPOSED_COPPER
	f	Llx;	C	WAXED_EXPOSED_CUT_COPPER
	f	Llx;	D	WEATHERED_COPPER
	f	Llx;	E	WEATHERED_CUT_COPPER
	f	Llx;	F	WAXED_WEATHERED_COPPER
	f	Llx;	G	WAXED_WEATHERED_CUT_COPPER
	f	Llx;	H	OXIDIZED_COPPER
	f	Llx;	I	OXIDIZED_CUT_COPPER
	f	Llx;	J	WAXED_OXIDIZED_COPPER
	f	Llx;	K	WAXED_OXIDIZED_CUT_COPPER
	f	Llx;	L	COBBLESTONE
	f	Llx;	M	MOSSY_COBBLESTONE
	f	Llx;	N	DIORITE
	f	Llx;	O	POLISHED_DIORITE
	f	Llx;	P	GRANITE
	f	Llx;	Q	POLISHED_GRANITE
	f	Llx;	R	TUFF
	f	Llx;	S	POLISHED_TUFF
	f	Llx;	T	TUFF_BRICKS
	f	Llx;	U	NETHER_BRICKS
	f	Llx;	V	RED_NETHER_BRICKS
	f	Llx;	W	PRISMARINE
	f	Llx;	X	PURPUR
	f	Llx;	Y	PRISMARINE_BRICKS
	f	Llx;	Z	DARK_PRISMARINE
	f	Llx;	a	ACACIA_PLANKS
	f	Llx;	aa	QUARTZ
	f	Llx;	ab	SMOOTH_QUARTZ
	f	Llx;	ac	SANDSTONE
	f	Llx;	ad	CUT_SANDSTONE
	f	Llx;	ae	SMOOTH_SANDSTONE
	f	Llx;	af	RED_SANDSTONE
	f	Llx;	ag	CUT_RED_SANDSTONE
	f	Llx;	ah	SMOOTH_RED_SANDSTONE
	f	Llx;	ai	STONE
	f	Llx;	aj	STONE_BRICK
	f	Llx;	ak	DEEPSLATE
	f	Llx;	al	COBBLED_DEEPSLATE
	f	Llx;	am	POLISHED_DEEPSLATE
	f	Llx;	an	DEEPSLATE_BRICKS
	f	Llx;	ao	DEEPSLATE_TILES
	f	Ljava/util/Map;	ap	MAP
	f	Ljava/lang/String;	aq	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	ar	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Llx;	b	CHERRY_PLANKS
	f	Llx;	c	BIRCH_PLANKS
	f	Llx;	d	CRIMSON_PLANKS
	f	Llx;	e	JUNGLE_PLANKS
	f	Llx;	f	OAK_PLANKS
	f	Llx;	g	DARK_OAK_PLANKS
	f	Llx;	h	SPRUCE_PLANKS
	f	Llx;	i	WARPED_PLANKS
	f	Llx;	j	MANGROVE_PLANKS
	f	Llx;	k	BAMBOO_PLANKS
	f	Llx;	l	BAMBOO_MOSAIC
	f	Llx;	m	MUD_BRICKS
	f	Llx;	n	ANDESITE
	f	Llx;	o	POLISHED_ANDESITE
	f	Llx;	p	BLACKSTONE
	f	Llx;	q	POLISHED_BLACKSTONE
	f	Llx;	r	POLISHED_BLACKSTONE_BRICKS
	f	Llx;	s	BRICKS
	f	Llx;	t	END_STONE_BRICKS
	f	Llx;	u	MOSSY_STONE_BRICKS
	f	Llx;	v	COPPER_BLOCK
	f	Llx;	w	CUT_COPPER
	f	Llx;	x	WAXED_COPPER_BLOCK
	f	Llx;	y	WAXED_CUT_COPPER
	f	Llx;	z	EXPOSED_COPPER
c	lx	lx
	m	(Ldfy;)V	<init>	<init>
		p	1		baseBlock
	m	()Ldfy;	a	getBaseBlock
	m	(Llx$b;)Ldfy;	a	get
		p	1		variant
	m	()Ljava/util/Map;	b	getVariants
	m	()Z	c	shouldGenerateModel
	m	()Z	d	shouldGenerateRecipe
	m	()Ljava/util/Optional;	e	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	f	getRecipeUnlockedBy
	f	Ldfy;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Z	c	generateModel
	f	Z	d	generateRecipe
	f	Ljava/lang/String;	e	recipeGroupPrefix
	f	Ljava/lang/String;	f	recipeUnlockedBy
c	lx$a	lx$a
	m	(Ldfy;)V	<init>	<init>
		p	1		baseBlock
	m	()Llx;	a	getFamily
	m	(Ldfy;)Llx$a;	a	button
		p	1		block
	m	(Ldfy;Ldfy;)Llx$a;	a	sign
		p	1		block
		p	2		wallBlock
	m	(Ljava/lang/String;)Llx$a;	a	recipeGroupPrefix
		p	1		group
	m	()Llx$a;	b	dontGenerateModel
	m	(Ldfy;)Llx$a;	b	chiseled
		p	1		block
	m	(Ljava/lang/String;)Llx$a;	b	recipeUnlockedBy
		p	1		unlockCriterionName
	m	()Llx$a;	c	dontGenerateRecipe
	m	(Ldfy;)Llx$a;	c	mosaic
		p	1		block
	m	(Ldfy;)Llx$a;	d	cracked
		p	1		block
	m	(Ldfy;)Llx$a;	e	cut
		p	1		block
	m	(Ldfy;)Llx$a;	f	door
		p	1		block
	m	(Ldfy;)Llx$a;	g	customFence
		p	1		block
	m	(Ldfy;)Llx$a;	h	fence
		p	1		block
	m	(Ldfy;)Llx$a;	i	customFenceGate
		p	1		block
	m	(Ldfy;)Llx$a;	j	fenceGate
		p	1		block
	m	(Ldfy;)Llx$a;	k	slab
		p	1		block
	m	(Ldfy;)Llx$a;	l	stairs
		p	1		block
	m	(Ldfy;)Llx$a;	m	pressurePlate
		p	1		block
	m	(Ldfy;)Llx$a;	n	polished
		p	1		block
	m	(Ldfy;)Llx$a;	o	trapdoor
		p	1		block
	m	(Ldfy;)Llx$a;	p	wall
		p	1		block
	f	Llx;	a	family
c	lx$b	lx$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getRecipeGroup
	m	()[Llx$b;	b	$values
	f	Llx$b;	a	BUTTON
	f	Llx$b;	b	CHISELED
	f	Llx$b;	c	CRACKED
	f	Llx$b;	d	CUT
	f	Llx$b;	e	DOOR
	f	Llx$b;	f	CUSTOM_FENCE
	f	Llx$b;	g	FENCE
	f	Llx$b;	h	CUSTOM_FENCE_GATE
	f	Llx$b;	i	FENCE_GATE
	f	Llx$b;	j	MOSAIC
	f	Llx$b;	k	SIGN
	f	Llx$b;	l	SLAB
	f	Llx$b;	m	STAIRS
	f	Llx$b;	n	PRESSURE_PLATE
	f	Llx$b;	o	POLISHED
	f	Llx$b;	p	TRAPDOOR
	f	Llx$b;	q	WALL
	f	Llx$b;	r	WALL_SIGN
	f	Ljava/lang/String;	s	recipeGroup
	f	[Llx$b;	t	$VALUES
c	ly	net/minecraft/data/CachedOutput
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	a	lambda$static$0
		p	0		path
		p	1		data
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Lly;	a	NO_CACHE
c	lz	lz
	m	(Ljava/nio/file/Path;Lae;Z)V	<init>	<init>
		p	1		outputPath
		p	2		gameVersion
		p	3		ignoreCache
	m	()V	a	run
	m	(Lmb;Lcom/google/common/base/Stopwatch;Ljava/lang/String;Lma;)V	a	lambda$run$0
		p	3		name
		p	4		provider
	m	(Z)Llz$a;	a	getVanillaPack
		p	1		shouldRun
	m	(ZLjava/lang/String;)Llz$a;	a	getBuiltinDatapack
		p	1		shouldRun
		p	2		packName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	rootOutputFolder
	f	Lmc;	c	vanillaPackOutput
	f	Ljava/util/Set;	d	allProviderIds
	f	Ljava/util/Map;	e	providersToRun
	f	Lae;	f	version
	f	Z	g	alwaysGenerate
c	lz$a	lz$a
	m	(Llz;ZLjava/lang/String;Lmc;)V	<init>	<init>
		p	2		shouldRun
		p	3		name
		p	4		output
	m	(Lma$a;)Lma;	a	addProvider
		p	1		factory
	f	Llz;	a	this$0
	f	Z	b	toRun
	f	Ljava/lang/String;	c	providerPrefix
	f	Lmc;	d	output
c	ma	net/minecraft/data/DebugReportProvider
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonElement;Lly;Ljava/nio/file/Path;)V	a	lambda$saveStable$2
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
		p	0		key
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
		p	0		writer
		p	1		json
		p	2		path
	m	(Lly;Ljo$a;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
		p	0		writer
		p	1		registryLookup
		p	2		codec
		p	3		value
		p	4		path
	f	Ljava/util/function/ToIntFunction;	a	FIXED_ORDER_FIELDS
	f	Ljava/util/Comparator;	b	KEY_COMPARATOR
	f	Lorg/slf4j/Logger;	c	LOGGER
c	ma$a	net/minecraft/data/DebugReportProvider$a
	m	(Lmc;)Lma;	create	create
		p	1		output
c	mb	mb
	m	(Ljava/nio/file/Path;Ljava/util/Collection;Lae;)V	<init>	<init>
		p	1		root
		p	2		providerNames
		p	3		gameVersion
	m	()V	a	purgeStaleAndWrite
	m	(Ljava/lang/String;)Z	a	shouldRunInThisVersion
		p	1		providerName
	m	(Ljava/lang/String;Lmb$d;)Ljava/util/concurrent/CompletableFuture;	a	generateUpdate
		p	1		providerName
		p	2		runner
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lmb$b;	a	readCache
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/util/Set;Ljava/lang/String;Lmb$b;)V	a	lambda$purgeStaleAndWrite$1
		p	2		providerName
		p	3		cachedData
	m	(Lmb$a;Ljava/lang/Object;)Lmb$e;	a	lambda$generateUpdate$0
		p	1		void_
	m	(Lmb$e;)V	a	applyUpdate
		p	1		runResult
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	b	getProviderCachePath
		p	1		providerName
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	HEADER_MARKER
	f	Ljava/nio/file/Path;	c	rootDir
	f	Ljava/nio/file/Path;	d	cacheDir
	f	Ljava/lang/String;	e	versionId
	f	Ljava/util/Map;	f	caches
	f	Ljava/util/Set;	g	cachesToWrite
	f	Ljava/util/Set;	h	cachePaths
	f	I	i	initialCount
	f	I	j	writes
c	mb$1	mb$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	a	val$found
	f	Ljava/util/Set;	b	val$allowedFiles
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	c	val$removed
	f	Lmb;	d	this$0
c	mb$a	mb$a
	m	(Lmb;Ljava/lang/String;Ljava/lang/String;Lmb$b;)V	<init>	<init>
		p	2		providerName
		p	3		version
		p	4		oldCache
	m	()Lmb$e;	a	close
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z	a	shouldWrite
		p	1		path
		p	2		hashCode
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
		p	1		path
		p	2		data
		p	3		hashCode
	f	Ljava/lang/String;	b	provider
	f	Lmb$b;	c	oldCache
	f	Lmb$c;	d	newCache
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	writes
	f	Z	f	closed
c	mb$b	mb$b
	m	()I	a	count
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$load$0
		p	2		line
	m	(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	get
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lmb$b;	a	load
		p	0		root
		p	1		dataProviderPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V	a	save
		p	1		root
		p	2		dataProviderPath
		p	3		description
	m	()Ljava/lang/String;	b	version
	m	()Lcom/google/common/collect/ImmutableMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Lcom/google/common/collect/ImmutableMap;	b	data
c	mb$c	mb$c
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		version
	m	()Lmb$b;	a	build
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V	a	put
		p	1		path
		p	2		hashCode
	m	()Ljava/lang/String;	b	version
	m	()Ljava/util/concurrent/ConcurrentMap;	c	data
	f	Ljava/lang/String;	a	version
	f	Ljava/util/concurrent/ConcurrentMap;	b	data
c	mb$d	mb$d
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	update	update
		p	1		writer
c	mb$e	mb$e
	m	()Ljava/lang/String;	a	providerId
	m	()Lmb$b;	b	cache
	m	()I	c	writes
	f	Ljava/lang/String;	a	providerId
	f	Lmb$b;	b	cache
	f	I	c	writes
c	mc	net/minecraft/data/PackOutput
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Ljava/nio/file/Path;	a	getOutputFolder
	m	(Lakq;)Lmc$a;	a	createRegistryElementsPathProvider
		p	1		registryRef
	m	(Lmc$b;)Ljava/nio/file/Path;	a	getOutputFolder
		p	1		outputType
	m	(Lmc$b;Ljava/lang/String;)Lmc$a;	a	createPathProvider
		p	1		outputType
		p	2		directoryName
	m	(Lakq;)Lmc$a;	b	createRegistryTagsPathProvider
		p	1		registryRef
	f	Ljava/nio/file/Path;	a	outputFolder
c	mc$a	net/minecraft/data/PackOutput$a
	m	(Lmc;Lmc$b;Ljava/lang/String;)V	<init>	<init>
		p	1		dataGenerator
		p	2		outputType
		p	3		directoryName
	m	(Lakr;)Ljava/nio/file/Path;	a	json
		p	1		id
	m	(Lakr;Ljava/lang/String;)Ljava/nio/file/Path;	a	file
		p	1		id
		p	2		fileExtension
	f	Ljava/nio/file/Path;	a	root
	f	Ljava/lang/String;	b	kind
c	mc$b	net/minecraft/data/PackOutput$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		path
	m	()[Lmc$b;	a	$values
	f	Lmc$b;	a	DATA_PACK
	f	Lmc$b;	b	RESOURCE_PACK
	f	Lmc$b;	c	REPORTS
	f	Ljava/lang/String;	d	directory
	f	[Lmc$b;	e	$VALUES
c	md	md
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		tabGenerators
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ljava/util/Set;Ljava/util/List;Lly;Ljo$a;Lag;)V	a	lambda$run$0
		p	5		advancement
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Lmc$a;	d	pathProvider
	f	Ljava/util/List;	e	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
c	me	me
	m	(Ljava/lang/String;)Lag;	a	createPlaceholder
		p	0		id
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	mg	mg
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)Lmd;	a	create
		p	0		output
		p	1		registryLookupFuture
c	mh	mh
	m	(I)[Levc$a;	a	lambda$placedComparatorReadingBlock$3
	m	(Laf$a;)Laf$a;	a	smithingWithStyle
		p	0		builder
	m	(Laf$a;Lakr;)V	a	lambda$craftingANewLook$6
		p	1		template
	m	(Laf$a;Lbsx;)V	a	lambda$addMobsToKill$8
		p	1		type
	m	(Laf$a;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$respectingTheRemnantsCriterions$7
		p	1		pair
	m	(Laf$a;Ljava/util/List;)Laf$a;	a	addMobsToKill
		p	0		builder
		p	1		entityTypes
	m	(Laf$a;Ljo$a;Ljava/util/List;)Laf$a;	a	addBiomes
		p	0		builder
		p	1		registryLookup
		p	2		biomes
	m	(Laf$a;Loy$a;)V	a	lambda$smithingWithStyle$5
		p	1		templatex
	m	(Lag;Ljava/util/function/Consumer;Ljava/util/List;)Lag;	a	createMonsterHunterAdvancement
		p	0		parent
		p	1		exporter
		p	2		monsters
	m	(Lbsx;Lcul;)Lao;	a	lookAtThroughItem
		p	0		entity
		p	1		item
	m	(Ldfy;)Lao;	a	placedBlockReadByComparator
		p	0		block
	m	(Ldfy;Lji;)Leup$a;	a	lambda$placedComparatorReadingBlock$2
		p	1		facing
	m	(Ldh$d;Ljava/util/Optional;)Lao;	a	fireCountAndBystander
		p	0		range
		p	1		entity
	m	(Ljava/util/Set;Loy$a;)Z	a	lambda$smithingWithStyle$4
		p	1		template
	m	(Lji;)Levc$a;	a	lambda$placedBlockReadByComparator$0
		p	0		facing
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Ljo$a;Ljava/util/function/Consumer;Lag;Ldek$a;)V	a	createAdventuringTime
		p	0		registryLookup
		p	1		exporter
		p	2		parent
		p	3		biomeSourceListPreset
	m	(I)[Levc$a;	b	lambda$placedBlockReadByComparator$1
	m	(Laf$a;)Laf$a;	b	craftingANewLook
		p	0		builder
	m	(Ldfy;)Lao;	b	placedComparatorReadingBlock
		p	0		block
	m	(Laf$a;)Laf$a;	c	respectingTheRemnantsCriterions
		p	0		builder
	f	Ljava/util/List;	a	MOBS_TO_KILL
	f	I	b	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	c	Y_COORDINATE_AT_TOP
	f	I	d	Y_COORDINATE_AT_BOTTOM
	f	I	e	BEDROCK_THICKNESS
c	mi	mi
	m	(Laf$a;)Laf$a;	a	addLeashedFrogVariants
		p	0		builder
	m	(Laf$a;Lbsx;)V	a	lambda$addBreedable$2
		p	1		type
	m	(Laf$a;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Laf$a;	a	addBreedable
		p	0		advancementBuilder
		p	1		breedableAnimals
		p	2		eggLayingAnimals
	m	(Laf$a;Ljm$c;)V	a	lambda$addCatVariants$4
		p	1		entry
	m	(Laf$a;Ljo$a;)Laf$a;	a	addTamedWolfVariants
		p	0		builder
		p	1		registryLookup
	m	(Lag;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lag;	a	createBreedAllAnimalsAdvancement
		p	0		parent
		p	1		exporter
		p	2		breedableAnimals
		p	3		eggLayingAnimals
	m	(Ljm$c;)Lakr;	a	lambda$addCatVariants$3
		p	0		entry
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	m	(Ljo$b;Laf$a;Lakq;)V	a	lambda$addTamedWolfVariants$5
		p	2		key
	m	(Laf$a;)Laf$a;	b	addFood
		p	0		builder
	m	(Laf$a;Lbsx;)V	b	lambda$addBreedable$1
		p	1		type
	m	(Laf$a;Ljm$c;)V	b	lambda$addLeashedFrogVariants$0
		p	1		variant
	m	(Laf$a;)Laf$a;	c	addFishBuckets
		p	0		builder
	m	(Laf$a;)Laf$a;	d	addFish
		p	0		builder
	m	(Laf$a;)Laf$a;	e	addCatVariants
		p	0		builder
	f	Ljava/util/List;	a	BREEDABLE_ANIMALS
	f	Ljava/util/List;	b	INDIRECTLY_BREEDABLE_ANIMALS
	f	[Lcul;	c	WAX_SCRAPING_TOOLS
	f	[Lcul;	d	FISH
	f	[Lcul;	e	FISH_BUCKETS
	f	[Lcul;	f	EDIBLE_ITEMS
c	mj	mj
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
	f	Lbg;	a	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE
c	mk	mk
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	ml	ml
	m	(Ljo$a;Ljava/util/function/Consumer;)V	a	generate
		p	1		lookup
		p	2		exporter
c	mn	mn
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Lakr;)Ljava/nio/file/Path;	a	createPath
		p	1		id
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$3
		p	1		error
	m	(Ljava/nio/file/Path;Lly;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		writer
		p	2		ops
		p	3		codec
		p	4		biomeSource
	m	(Ljava/util/List;Lly;Lcom/mojang/serialization/DynamicOps;Ldek$a;Ldef$c;)V	a	lambda$run$0
		p	4		preset
		p	5		entries
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/nio/file/Path;	e	topPath
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	f	Lcom/mojang/serialization/MapCodec;	g	ENTRY_CODEC
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	mo	mo
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(Lakp;Lcom/google/gson/JsonObject;Ljm$c;)V	a	lambda$run$1
		p	2		entry
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;	a	lambda$run$0
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/nio/file/Path;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		registryLookup
	f	Lmc;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	mp	mp
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/nio/file/Path;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$0
		p	2		lookup
	f	Lmc;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	mq	mq
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(Lakp;Lcom/google/gson/JsonObject;Ljm$c;)V	a	lambda$run$1
		p	2		entry
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$run$0
		p	0		components
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/nio/file/Path;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		registryLookup
	f	Lmc;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	mr	mr
	m	(Lmc;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lvu;Ljava/util/List;)V	a	lambda$serializePackets$2
		p	1		phase
		p	2		states
	m	(Lcom/google/gson/JsonObject;Lwh$a;)V	a	lambda$serializePackets$1
		p	1		state
	m	(Lcom/google/gson/JsonObject;Lzi;I)V	a	lambda$serializePackets$0
		p	1		packetType
		p	2		protocolId
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	()Lcom/google/gson/JsonElement;	b	serializePackets
	f	Lmc;	d	output
c	ms	ms
	m	(Lmc;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Ljm$c;)V	a	lambda$run$0
		p	1		entry
	m	(Ljz;)Lcom/google/gson/JsonElement;	a	dumpRegistry
		p	0		registry
	m	(Ljz;Lcom/google/gson/JsonObject;Ljm$c;)V	a	lambda$dumpRegistry$1
		p	2		entry
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	f	Lmc;	d	output
c	mu	mu
	m	(Ljava/util/Set;Lcpl;Ljava/util/Map;Ljo$a;)V	<init>	<init>
		p	1		explosionImmuneItems
		p	2		requiredFeatures
		p	3		lootTables
		p	4		registryLookup
	m	(Ljava/util/Set;Lcpl;Ljo$a;)V	<init>	<init>
		p	1		explosionImmuneItems
		p	2		requiredFeatures
		p	3		registryLookup
	m	()Levc$a;	a	hasSilkTouch
	m	(Ldcv;)Lerw$a;	a	createSingleItemTable
		p	1		drop
	m	(Ldcv;Letb;)Letb;	a	applyExplosionDecay
		p	1		drop
		p	2		builder
	m	(Ldcv;Leuu;)Leuu;	a	applyExplosionCondition
		p	1		drop
		p	2		builder
	m	(Ldcv;Levy;)Lerw$a;	a	createSingleItemTable
		p	1		drop
		p	2		count
	m	(Ldfy;)Lerw$a;	a	createSlabItemTable
		p	1		drop
	m	(Ldfy;Lcul;)Lerw$a;	a	createOreDrop
		p	1		withSilkTouch
		p	2		withoutSilkTouch
	m	(Ldfy;Lcul;Lcul;Levc$a;)Lerw$a;	a	createCropDrops
		p	1		crop
		p	2		product
		p	3		seeds
		p	4		condition
	m	(Ldfy;Ldcv;)Lerw$a;	a	createSingleItemTableWithSilkTouch
		p	1		withSilkTouch
		p	2		withoutSilkTouch
	m	(Ldfy;Ldcv;Levy;)Lerw$a;	a	createSingleItemTableWithSilkTouch
		p	1		block
		p	2		drop
		p	3		count
	m	(Ldfy;Ldfy;)Lerw$a;	a	createDoublePlantWithSeedDrops
		p	1		tallPlant
		p	2		shortPlant
	m	(Ldfy;Ldfy;[F)Lerw$a;	a	createLeavesDrops
		p	1		leaves
		p	2		sapling
		p	3		saplingChance
	m	(Ldfy;Lduf;Ljava/lang/Comparable;)Lerw$a;	a	createSinglePropConditionTable
		p	1		drop
		p	2		property
		p	3		value
	m	(Ldfy;Lerw$a;)V	a	add
		p	1		block
		p	2		lootTable
	m	(Ldfy;Lesh$a;)Lerw$a;	a	createSilkTouchDispatchTable
		p	1		block
		p	2		loot
	m	(Ldfy;Levc$a;)Lerw$a;	a	createMultifaceBlockDrops
		p	1		drop
		p	2		condition
	m	(Ldfy;Levc$a;Lesh$a;)Lerw$a;	a	createSelfDropDispatchTable
		p	0		drop
		p	1		conditionBuilder
		p	2		child
	m	(Ldfy;Ljava/lang/Integer;)Letf$a;	a	lambda$createPetalsDrops$3
		p	1		flowerAmount
	m	(Ldfy;Ljava/util/function/Function;)V	a	add
		p	1		block
		p	2		lootTableFunction
	m	(Ldfy;Lji;)Letf$a;	a	lambda$createMultifaceBlockDrops$1
		p	1		direction
	m	()Levc$a;	b	doesNotHaveSilkTouch
	m	(Ldcv;)Lerw$a;	b	createShearsOnlyDrop
		p	0		drop
	m	(Ldfy;)Lerw$a;	b	createNameableBlockEntityTable
		p	1		drop
	m	(Ldfy;Lcul;)Lerw$a;	b	createStemDrops
		p	1		stem
		p	2		drop
	m	(Ldfy;Ldcv;)Lerw$a;	b	createMushroomBlockDrop
		p	1		withSilkTouch
		p	2		withoutSilkTouch
	m	(Ldfy;Ldfy;)V	b	addNetherVinesDropTable
		p	1		vine
		p	2		vinePlant
	m	(Ldfy;Ldfy;[F)Lerw$a;	b	createOakLeavesDrops
		p	1		leaves
		p	2		sapling
		p	3		saplingChance
	m	(Ldfy;Lesh$a;)Lerw$a;	b	createShearsDispatchTable
		p	1		block
		p	2		loot
	m	(Ldfy;Ljava/lang/Integer;)Letf$a;	b	lambda$createCandleDrops$2
		p	1		candles
	m	()Lerw$a;	c	noDrop
	m	(Ldcv;)Lerw$a;	c	createSilkTouchOnlyTable
		p	1		drop
	m	(Ldfy;)Lerw$a;	c	createShulkerBoxDrop
		p	1		drop
	m	(Ldfy;Lcul;)Lerw$a;	c	createAttachedStemDrops
		p	1		stem
		p	2		drop
	m	(Ldfy;Ldcv;)V	c	dropOther
		p	1		block
		p	2		drop
	m	(Ldfy;Ldfy;)V	c	otherWhenSilkTouch
		p	1		block
		p	2		drop
	m	(Ldfy;Lesh$a;)Lerw$a;	c	createSilkTouchOrShearsDispatchTable
		p	1		block
		p	2		loot
	m	(Ldfy;Ljava/lang/Integer;)Letf$a;	c	lambda$createStemDrops$0
		p	1		age
	m	()V	d	generate
	m	(Ldcv;)Lerw$a;	d	createPotFlowerItemTable
		p	1		drop
	m	(Ldfy;)Lerw$a;	d	createCopperOreDrops
		p	1		drop
	m	()Levc$a;	e	hasShearsOrSilkTouch
	m	(Ldfy;)Lerw$a;	e	createLapisOreDrops
		p	1		drop
	m	()Levc$a;	f	doesNotHaveShearsOrSilkTouch
	m	(Ldfy;)Lerw$a;	f	createRedstoneOreDrops
		p	1		drop
	m	(Ldfy;)Lerw$a;	g	createBannerDrop
		p	1		drop
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	m	(Ldfy;)Lerw$a;	h	createBeeNestDrop
		p	1		drop
	m	(Ldfy;)Lerw$a;	i	createBeeHiveDrop
		p	1		drop
	m	(Ldfy;)Lerw$a;	j	createCaveVinesDrop
		p	1		drop
	m	(Ldfy;)Lerw$a;	k	createGrassDrops
		p	1		withShears
	m	(Ldfy;)Lerw$a;	l	createMangroveLeavesDrops
		p	1		leaves
	m	(Ldfy;)Lerw$a;	m	createDoublePlantShearsDrop
		p	1		seagrass
	m	(Ldfy;)Lerw$a;	n	createCandleDrops
		p	1		candle
	m	(Ldfy;)Lerw$a;	o	createPetalsDrops
		p	1		flowerbed
	m	(Ldfy;)Lerw$a;	p	createCandleCakeDrops
		p	0		candleCake
	m	(Ldfy;)Lerw$a;	q	createDoorTable
		p	1		block
	m	(Ldfy;)V	r	dropPottedContents
		p	1		block
	m	(Ldfy;)V	s	dropWhenSilkTouch
		p	1		block
	m	(Ldfy;)V	t	dropSelf
		p	1		block
	m	(Ldfy;)Lerw$a;	u	lambda$dropPottedContents$4
		p	1		flowerPot
	f	Levc$a;	a	HAS_SHEARS
	f	Ljo$a;	b	registries
	f	Ljava/util/Set;	c	explosionResistant
	f	Lcpl;	d	enabledFeatures
	f	Ljava/util/Map;	e	map
	f	[F	f	NORMAL_LEAVES_SAPLING_CHANCES
	f	[F	g	NORMAL_LEAVES_STICK_CHANCES
c	mv	mv
	m	(Lcpl;Lcpl;Ljo$a;)V	<init>	<init>
		p	1		requiredFeatures
		p	2		featureSet
		p	3		registryLookup
	m	(Lcpl;Ljo$a;)V	<init>	<init>
		p	1		requiredFeatures
		p	2		registryLookup
	m	()Leuq$a;	a	shouldSmeltLoot
	m	(Lakq;)Levc$a;	a	killedByFrogVariant
		p	1		frogVariant
	m	(Lbsx;)Z	a	canHaveLootTable
		p	0		entityType
	m	(Lbsx;Lakq;Lerw$a;)V	a	add
		p	1		entityType
		p	2		tableKey
		p	3		lootTable
	m	(Lbsx;Lerw$a;)V	a	add
		p	1		entityType
		p	2		lootTable
	m	(Ldcv;)Lerw$a;	a	createSheepTable
		p	0		item
	m	(Ljava/util/Set;Ljava/util/function/BiConsumer;Ljm$c;)V	a	lambda$generate$2
		p	3		entityType
	m	(Ljava/util/Set;Ljm$c;Ljava/util/function/BiConsumer;Lakq;Lerw$a;)V	a	lambda$generate$0
		p	3		tableKey
		p	4		lootTableBuilder
	m	()V	b	generate
	m	(Lakq;)Ljava/lang/String;	b	lambda$generate$1
	m	(Lbsx;)Ljava/util/Map;	b	lambda$add$3
		p	0		type
	m	()Levc$a;	c	killedByFrog
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
	f	Ljava/util/Set;	b	SPECIAL_LOOT_TABLE_TYPES
	f	Lcpl;	c	allowed
	f	Lcpl;	d	required
	f	Ljava/util/Map;	e	map
c	mw	mw
	m	(Lmc;Ljava/util/Set;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		lootTableIds
		p	3		lootTypeGenerators
		p	4		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Lakq;)Lakr;	a	sequenceIdForLootTable
		p	0		lootTableKey
	m	(Lerx;Ljm$c;)V	a	lambda$run$3
		p	1		entry
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$run$4
		p	0		name
		p	1		message
	m	(Ljava/util/Map;Lmw$a;Lki;Lakq;Lerw$a;)V	a	lambda$run$1
		p	3		lootTable
		p	4		builder
	m	(Ljo$a;Ljava/util/Map;Lki;Lmw$a;)V	a	lambda$run$2
		p	3		lootTypeGenerator
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
		p	2		registryLookup
	m	(Lly;Ljo$a;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
		p	3		entry
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletionStage;	b	lambda$run$0
		p	2		registryLookup
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lmc$a;	e	pathProvider
	f	Ljava/util/Set;	f	requiredTables
	f	Ljava/util/List;	g	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	h	registries
c	mw$a	mw$a
	m	()Ljava/util/function/Function;	a	provider
	m	()Leul;	b	paramSet
	f	Ljava/util/function/Function;	a	provider
	f	Leul;	b	paramSet
c	mx	mx
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
c	mz	mz
	m	()Lerw$a;	a	pillagerOutpostLootTable
	m	()Lerw$a;	b	desertPyramidLootTable
	m	()Lerw$a;	c	ancientCityLootTable
	m	()Lerw$a;	d	jungleTempleLootTable
	m	()Ljo$a;	e	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	na	na
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)Lmw;	a	create
		p	0		output
		p	1		registryLookupFuture
c	nb	nb
	m	()Ljo$a;	a	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	nc	nc
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	(Ldfy;)Lerw$a;	A	lambda$generate$230
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	A	lambda$generate$169
		p	1		block
	m	(Ldfy;)Lerw$a;	B	lambda$generate$229
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	B	lambda$generate$168
		p	1		block
	m	(Ldfy;)Lerw$a;	C	lambda$generate$228
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	C	lambda$generate$167
		p	1		block
	m	(Ldfy;)Lerw$a;	D	lambda$generate$227
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	D	lambda$generate$166
		p	1		block
	m	(Ldfy;)Lerw$a;	E	lambda$generate$226
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	E	lambda$generate$165
		p	1		block
	m	(Ldfy;)Lerw$a;	F	lambda$generate$222
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	F	lambda$generate$164
		p	1		block
	m	(Ldfy;)Lerw$a;	G	lambda$generate$218
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	G	lambda$generate$163
		p	1		block
	m	(Ldfy;)Lerw$a;	H	lambda$generate$217
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	H	lambda$generate$162
		p	1		block
	m	(Ldfy;)Lerw$a;	I	lambda$generate$213
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	I	lambda$generate$161
		p	1		block
	m	(Ldfy;)Lerw$a;	J	lambda$generate$212
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	J	lambda$generate$160
		p	1		block
	m	(Ldfy;)Lerw$a;	K	lambda$generate$211
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	K	lambda$generate$159
		p	1		block
	m	(Ldfy;)Lerw$a;	L	lambda$generate$210
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	L	lambda$generate$158
		p	1		block
	m	(Ldfy;)Lerw$a;	M	lambda$generate$207
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	M	lambda$generate$157
		p	1		block
	m	(Ldfy;)Lerw$a;	N	lambda$generate$206
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	N	lambda$generate$156
		p	1		block
	m	(Ldfy;)Lerw$a;	O	lambda$generate$205
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	O	lambda$generate$155
		p	1		block
	m	(Ldfy;)Lerw$a;	P	lambda$generate$204
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	P	lambda$generate$154
		p	1		block
	m	(Ldfy;)Lerw$a;	Q	lambda$generate$203
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	Q	lambda$generate$153
		p	1		block
	m	(Ldfy;)Lerw$a;	R	lambda$generate$202
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	R	lambda$generate$152
		p	1		block
	m	(Ldfy;)Lerw$a;	S	lambda$generate$201
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	S	lambda$generate$151
		p	1		block
	m	(Ldfy;)Lerw$a;	T	lambda$generate$200
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	T	lambda$generate$150
		p	1		block
	m	(Ldfy;)Lerw$a;	U	lambda$generate$199
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	U	lambda$generate$149
		p	1		block
	m	(Ldfy;)Lerw$a;	V	lambda$generate$197
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	V	lambda$generate$148
		p	1		block
	m	(Ldfy;)Lerw$a;	W	lambda$generate$196
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	W	lambda$generate$147
		p	1		block
	m	(Ldfy;)Lerw$a;	X	lambda$generate$195
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	X	lambda$generate$146
		p	1		block
	m	(Ldfy;)Lerw$a;	Y	lambda$generate$194
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	Y	lambda$generate$145
		p	1		block
	m	(Ldfy;)Lerw$a;	Z	lambda$generate$193
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	Z	lambda$generate$144
		p	1		block
	m	(Ldfy;Ljava/lang/Integer;)Lesh$a;	a	lambda$generate$242
	m	(Ljava/lang/Integer;)Lesh$a;	a	lambda$createPitcherCropLoot$249
		p	0		age
	m	(Ljo$b;Ldfy;)Lerw$a;	a	lambda$generate$248
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	a	lambda$generate$238
		p	1		block
	m	(Ldfy;)Lerw$a;	aA	lambda$generate$99
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aA	lambda$generate$93
		p	1		block
	m	(Ldfy;)Lerw$a;	aB	lambda$generate$98
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aB	lambda$generate$92
		p	1		block
	m	(Ldfy;)Lerw$a;	aC	lambda$generate$97
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aC	lambda$generate$91
		p	1		block
	m	(Ldfy;)Lerw$a;	aD	lambda$generate$19
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aD	lambda$generate$90
		p	1		block
	m	(Ldfy;)Lerw$a;	aE	lambda$generate$18
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aE	lambda$generate$89
		p	1		block
	m	(Ldfy;)Lerw$a;	aF	lambda$generate$17
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aF	lambda$generate$88
		p	1		block
	m	(Ldfy;)Lerw$a;	aG	lambda$generate$16
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aG	lambda$generate$87
		p	1		block
	m	(Ldfy;)Lerw$a;	aH	lambda$generate$15
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aH	lambda$generate$86
		p	1		block
	m	(Ldfy;)Lerw$a;	aI	lambda$generate$14
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aI	lambda$generate$85
		p	1		block
	m	(Ldfy;)Lerw$a;	aJ	lambda$generate$13
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aJ	lambda$generate$84
		p	1		block
	m	(Ldfy;)Lerw$a;	aK	lambda$generate$12
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aK	lambda$generate$83
		p	1		block
	m	(Ldfy;)Lerw$a;	aL	lambda$generate$11
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aL	lambda$generate$82
		p	1		block
	m	(Ldfy;)Lerw$a;	aM	lambda$generate$10
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aM	lambda$generate$81
		p	1		block
	m	(Ldfy;)Lerw$a;	aN	lambda$generate$9
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aN	lambda$generate$80
		p	1		block
	m	(Ldfy;)Lerw$a;	aO	lambda$generate$8
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aO	lambda$generate$79
		p	1		block
	m	(Ldfy;)Lerw$a;	aP	lambda$generate$7
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aP	lambda$generate$78
		p	1		block
	m	(Ldfy;)Lerw$a;	aQ	lambda$generate$6
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aQ	lambda$generate$77
		p	1		block
	m	(Ldfy;)Lerw$a;	aR	lambda$generate$5
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aR	lambda$generate$76
		p	1		block
	m	(Ldfy;)Lerw$a;	aS	lambda$generate$4
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aS	lambda$generate$75
		p	1		block
	m	(Ldfy;)Lerw$a;	aT	lambda$generate$0
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aT	lambda$generate$74
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aU	lambda$generate$73
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aV	lambda$generate$72
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aW	lambda$generate$71
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aX	lambda$generate$70
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aY	lambda$generate$69
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aZ	lambda$generate$68
		p	1		block
	m	(Ldfy;)Lerw$a;	aa	lambda$generate$192
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aa	lambda$generate$143
		p	1		block
	m	(Ldfy;)Lerw$a;	ab	lambda$generate$191
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ab	lambda$generate$142
		p	1		block
	m	(Ldfy;)Lerw$a;	ac	lambda$generate$190
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ac	lambda$generate$141
		p	1		block
	m	(Ldfy;)Lerw$a;	ad	lambda$generate$189
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ad	lambda$generate$140
		p	1		block
	m	(Ldfy;)Lerw$a;	ae	lambda$generate$188
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ae	lambda$generate$139
		p	1		block
	m	(Ldfy;)Lerw$a;	af	lambda$generate$185
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	af	lambda$generate$138
		p	1		block
	m	(Ldfy;)Lerw$a;	ag	lambda$generate$120
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ag	lambda$generate$137
		p	1		block
	m	(Ldfy;)Lerw$a;	ah	lambda$generate$119
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ah	lambda$generate$136
		p	1		block
	m	(Ldfy;)Lerw$a;	ai	lambda$generate$117
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ai	lambda$generate$135
		p	1		block
	m	(Ldfy;)Lerw$a;	aj	lambda$generate$116
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aj	lambda$generate$134
		p	1		block
	m	(Ldfy;)Lerw$a;	ak	lambda$generate$115
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ak	lambda$generate$133
		p	1		block
	m	(Ldfy;)Lerw$a;	al	lambda$generate$114
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	al	lambda$generate$132
		p	1		block
	m	(Ldfy;)Lerw$a;	am	lambda$generate$113
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	am	lambda$generate$131
		p	1		block
	m	(Ldfy;)Lerw$a;	an	lambda$generate$112
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	an	lambda$generate$130
		p	1		block
	m	(Ldfy;)Lerw$a;	ao	lambda$generate$111
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ao	lambda$generate$129
		p	1		block
	m	(Ldfy;)Lerw$a;	ap	lambda$generate$110
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ap	lambda$generate$128
		p	1		block
	m	(Ldfy;)Lerw$a;	aq	lambda$generate$109
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aq	lambda$generate$127
		p	1		block
	m	(Ldfy;)Lerw$a;	ar	lambda$generate$108
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ar	lambda$generate$126
		p	1		block
	m	(Ldfy;)Lerw$a;	as	lambda$generate$107
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	as	lambda$generate$125
		p	1		block
	m	(Ldfy;)Lerw$a;	at	lambda$generate$106
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	at	lambda$generate$124
		p	1		block
	m	(Ldfy;)Lerw$a;	au	lambda$generate$105
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	au	lambda$generate$123
		p	1		block
	m	(Ldfy;)Lerw$a;	av	lambda$generate$104
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	av	lambda$generate$122
		p	1		block
	m	(Ldfy;)Lerw$a;	aw	lambda$generate$103
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	aw	lambda$generate$121
		p	1		block
	m	(Ldfy;)Lerw$a;	ax	lambda$generate$102
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ax	lambda$generate$96
		p	1		block
	m	(Ldfy;)Lerw$a;	ay	lambda$generate$101
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ay	lambda$generate$95
		p	1		block
	m	(Ldfy;)Lerw$a;	az	lambda$generate$100
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	az	lambda$generate$94
		p	1		block
	m	(Ldfy;Ljava/lang/Integer;)Lesh$a;	b	lambda$generate$241
	m	(Ljo$b;Ldfy;)Lerw$a;	b	lambda$generate$246
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	b	lambda$generate$237
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bA	lambda$generate$41
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bB	lambda$generate$40
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bC	lambda$generate$39
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bD	lambda$generate$38
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bE	lambda$generate$37
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bF	lambda$generate$36
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bG	lambda$generate$35
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bH	lambda$generate$34
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bI	lambda$generate$33
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bJ	lambda$generate$32
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bK	lambda$generate$31
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bL	lambda$generate$30
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bM	lambda$generate$29
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bN	lambda$generate$28
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bO	lambda$generate$27
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bP	lambda$generate$26
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bQ	lambda$generate$25
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bR	lambda$generate$24
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bS	lambda$generate$23
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bT	lambda$generate$22
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bU	lambda$generate$21
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bV	lambda$generate$20
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bW	lambda$generate$3
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bX	lambda$generate$2
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bY	lambda$generate$1
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	ba	lambda$generate$67
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bb	lambda$generate$66
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bc	lambda$generate$65
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bd	lambda$generate$64
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	be	lambda$generate$63
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bf	lambda$generate$62
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bg	lambda$generate$61
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bh	lambda$generate$60
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bi	lambda$generate$59
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bj	lambda$generate$58
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bk	lambda$generate$57
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bl	lambda$generate$56
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bm	lambda$generate$55
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bn	lambda$generate$54
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bo	lambda$generate$53
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bp	lambda$generate$52
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bq	lambda$generate$51
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	br	lambda$generate$50
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bs	lambda$generate$49
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bt	lambda$generate$48
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bu	lambda$generate$47
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bv	lambda$generate$46
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bw	lambda$generate$45
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bx	lambda$generate$44
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	by	lambda$generate$43
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	bz	lambda$generate$42
		p	1		block
	m	(Ldcv;)Lerw$a;	c	lambda$generate$224
		p	0		block
	m	(Ldfy;Ljava/lang/Integer;)Letf$a;	c	lambda$generate$118
		p	1		pickles
	m	(Ljo$b;Ldfy;)Lerw$a;	c	lambda$generate$244
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	c	lambda$generate$234
		p	1		block
	m	()V	d	generate
	m	(Ldcv;)Lerw$a;	d	lambda$generate$223
		p	0		block
	m	(Ljo$b;Ldfy;)Lerw$a;	d	lambda$generate$240
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	d	lambda$generate$233
		p	1		block
	m	()Lerw$a;	e	createPitcherCropLoot
	m	(Ldcv;)Lerw$a;	e	lambda$generate$221
		p	0		block
	m	(Ljo$b;Ldfy;)Lerw$a;	e	lambda$generate$239
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	e	lambda$generate$225
		p	1		block
	m	(Ldcv;)Lerw$a;	f	lambda$generate$220
		p	0		block
	m	(Ljo$b;Ldfy;)Lerw$a;	f	lambda$generate$236
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	f	lambda$generate$216
		p	1		block
	m	(Ldcv;)Lerw$a;	g	lambda$generate$219
		p	0		block
	m	(Ljo$b;Ldfy;)Lerw$a;	g	lambda$generate$235
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	g	lambda$generate$215
		p	1		block
	m	(Ljo$b;Ldfy;)Lerw$a;	h	lambda$generate$214
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	h	lambda$generate$209
		p	1		block
	m	(Ljo$b;Ldfy;)Lerw$a;	i	lambda$generate$198
		p	2		block
	m	(Lnc;Ldfy;)Lerw$a;	i	lambda$generate$208
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	j	lambda$generate$187
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	k	lambda$generate$186
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	l	lambda$generate$184
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	m	lambda$generate$183
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	n	lambda$generate$182
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	o	lambda$generate$181
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	p	lambda$generate$180
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	q	lambda$generate$179
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	r	lambda$generate$178
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	s	lambda$generate$177
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	t	lambda$generate$176
		p	1		block
	m	(Ldfy;)Lerw$a;	u	createDecoratedPotTable
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	u	lambda$generate$175
		p	1		block
	m	(Ldfy;)Lerw$a;	v	lambda$generate$247
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	v	lambda$generate$174
		p	1		block
	m	(Ldfy;)Lerw$a;	w	lambda$generate$245
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	w	lambda$generate$173
		p	1		block
	m	(Ldfy;)Lerw$a;	x	lambda$generate$243
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	x	lambda$generate$172
		p	1		block
	m	(Ldfy;)Lerw$a;	y	lambda$generate$232
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	y	lambda$generate$171
		p	1		block
	m	(Ldfy;)Lerw$a;	z	lambda$generate$231
		p	1		block
	m	(Lnc;Ldfy;)Lerw$a;	z	lambda$generate$170
		p	1		block
	f	[F	g	JUNGLE_LEAVES_SAPLING_CHANGES
	f	Ljava/util/Set;	h	EXPLOSION_RESISTANT
c	nd	nd
	m	()Lerw$a;	a	shipwreckSupplyLootTable
	m	(Ljava/util/function/BiConsumer;)V	a	spawnerLootTables
		p	1		lootTableBiConsumer
	m	()Lerw$a;	b	shipwreckMapLootTable
	m	()Lerw$a;	c	bastionHoglinStableLootTable
	m	()Lerw$a;	d	bastionBridgeLootTable
	m	()Lerw$a;	e	endCityTreasureLootTable
	m	()Lerw$a;	f	netherBridgeLootTable
	m	()Lerw$a;	g	bastionTreasureLootTable
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	m	()Lerw$a;	h	bastionOtherLootTable
	m	()Lerw$a;	i	woodlandMansionLootTable
	m	()Lerw$a;	j	strongholdLibraryLootTable
	m	()Lerw$a;	k	strongholdCorridorLootTable
	m	()Lerw$a;	l	ancientCityLootTable
	m	()Lerw$a;	m	jungleTempleLootTable
	m	()Lerw$a;	n	shipwreckTreasureLootTable
	m	()Lerw$a;	o	pillagerOutpostLootTable
	m	()Lerw$a;	p	desertPyramidLootTable
	m	()Ljo$a;	q	registries
	f	Ljo$a;	a	registries
c	ne	ne
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	()V	b	generate
	m	()Lerw$a;	d	elderGuardianLootTable
c	nf	nf
	m	()Ljo$a;	a	registries
	m	(Lcul;Lcul;Lcwx;Ljo$b;)Lerw$a;	a	trialChamberEquipment
		p	0		helmet
		p	1		chestplate
		p	2		trim
		p	3		enchantmentRegistryWrapper
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	ng	ng
	m	()Lerw$a;	a	fishingFishLootTable
	m	()Ljo$a;	b	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	nh	nh
	m	()Ljo$a;	a	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	ni	ni
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)Lmw;	a	create
		p	0		output
		p	1		registryLookupFuture
c	nj	nj
	m	()Ljo$a;	a	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	nk	nk
	m	()Ljo$a;	a	registries
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
		p	1		lootTableBiConsumer
	f	Ljo$a;	a	registries
c	nm	nm
	m	(Lmc;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(Late;Ljava/lang/Object;)Lnm;	a	add
		p	1		serializer
		p	2		metadata
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		key
		p	2		jsonSupplier
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lmc;Lwz;)Lnm;	a	forFeaturePack
		p	0		output
		p	1		description
	m	(Lmc;Lwz;Lcpl;)Lnm;	a	forFeaturePack
		p	0		output
		p	1		description
		p	2		requiredFeatures
	m	(Late;Ljava/lang/Object;)Lcom/google/gson/JsonElement;	b	lambda$add$0
	f	Lmc;	d	output
	f	Ljava/util/Map;	e	elements
c	no	no
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiConsumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		blockStateCollector
		p	2		modelCollector
		p	3		simpleItemModelExemptionCollector
	m	()V	A	createCauldrons
	m	(Ldfy;)Ljava/util/List;	A	createFloorFireModels
		p	1		texture
	m	()V	B	createChorusFlower
	m	(Ldfy;)Ljava/util/List;	B	createSideFireModels
		p	1		texture
	m	()V	C	createCrafterBlock
	m	(Ldfy;)Ljava/util/List;	C	createTopFireModels
		p	1		texture
	m	()V	D	createEndPortalFrame
	m	(Ldfy;)V	D	createLantern
		p	1		lantern
	m	()V	E	createChorusPlant
	m	(Ldfy;)V	E	createNonTemplateHorizontalBlock
		p	1		block
	m	()V	F	createComposter
	m	(Ldfy;)V	F	createMultiface
		p	1		block
	m	()V	G	createAmethystClusters
	m	(Ldfy;)V	G	createShulkerBox
		p	1		shulkerBox
	m	()V	H	createPointedDripstone
	m	()V	I	createDaylightDetector
	m	()V	J	createLightningRod
	m	()V	K	createFarmland
	m	()V	L	createFire
	m	()V	M	createSoulFire
	m	()V	N	createMuddyMangroveRoots
	m	()V	O	createMangrovePropagule
	m	()V	P	createFrostedIce
	m	()V	Q	createGrassBlocks
	m	()V	R	createCocoa
	m	()V	S	createDirtPath
	m	()V	T	createHopper
	m	()V	U	createIronBars
	m	()V	V	createLever
	m	()V	W	createLilyPad
	m	()V	X	createFrogspawnBlock
	m	()V	Y	createNetherPortalBlock
	m	()V	Z	createNetherrack
	m	()V	a	run
	m	(I)Ljava/util/List;	a	createBambooModels
		p	1		age
	m	(ILjava/lang/String;Lof;)Lakr;	a	createTurtleEggModel
		p	1		eggs
		p	2		prefix
		p	3		textures
	m	(Lakr;)[Lnx;	a	createRotatedVariants
		p	0		modelId
	m	(Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Ldsp;Ljava/lang/Boolean;)Lnx;	a	lambda$createVault$35
		p	8		vaultState
		p	9		ominous
	m	(Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Ldsi;Ljava/lang/Boolean;)Lnx;	a	lambda$createTrialSpawner$34
		p	6		spawnerState
		p	7		ominous
	m	(Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Ljava/lang/Boolean;Ldug;)Lnx;	a	lambda$createActiveRail$9
		p	6		on
		p	7		shape
	m	(Lakr;Lakr;Lakr;Lakr;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lnx;	a	lambda$createCopperBulb$19
		p	4		lit
		p	5		powered
	m	(Lakr;Lakr;Lduj;)Lnx;	a	lambda$createCalibratedSculkSensor$37
		p	2		phase
	m	(Lakr;Lakr;Ljava/lang/Boolean;)Lnx;	a	lambda$createSculkCatalyst$54
		p	2		bloom
	m	(Lakr;Ldfy;)Lno$a;	a	blockEntityModels
		p	1		modelId
		p	2		particleBlock
	m	(Lakr;Ljava/lang/Integer;)Lnx;	a	lambda$createSnowBlocks$39
		p	1		height
	m	(Lakr;Lof;)V	a	lambda$createGrassBlocks$33
		p	1		textures
	m	(Lcul;)V	a	createSimpleFlatItemModel
		p	1		item
	m	(Lcul;Lakr;)V	a	delegateItemModel
		p	1		item
		p	2		parentModelId
	m	(Lcwa;)V	a	lambda$run$61
		p	1		item
	m	(Ldfy;)V	a	createTrivialCube
		p	1		block
	m	(Ldfy;II)Lakr;	a	lambda$createCropBlock$14
	m	(Ldfy;Lakr;)V	a	delegateItemModel
		p	1		block
		p	2		parentModelId
	m	(Ldfy;Lakr;Lakr;)Lnu;	a	createRotatedVariant
		p	0		block
		p	1		firstModelId
		p	2		secondModelId
	m	(Ldfy;Lakr;Lakr;Lakr;)Lnr;	a	createWall
		p	0		wallBlock
		p	1		postModelId
		p	2		lowSideModelId
		p	3		tallSideModelId
	m	(Ldfy;Lakr;Lakr;Lakr;Lakr;)Lnr;	a	createCopperBulb
		p	1		copperBulbBlock
		p	2		modelId
		p	3		litModelId
		p	4		poweredModelId
		p	5		litPoweredModelId
	m	(Ldfy;Lakr;Lakr;Lakr;Lakr;Lakr;)Lnr;	a	createCustomFence
		p	0		customFenceBlock
		p	1		postModelId
		p	2		northModelId
		p	3		eastModelId
		p	4		southModelId
		p	5		westModelId
	m	(Ldfy;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;Lakr;)Lnr;	a	createDoor
		p	0		doorBlock
		p	1		bottomLeftHingeClosedModelId
		p	2		bottomLeftHingeOpenModelId
		p	3		bottomRightHingeClosedModelId
		p	4		bottomRightHingeOpenModelId
		p	5		topLeftHingeClosedModelId
		p	6		topLeftHingeOpenModelId
		p	7		topRightHingeClosedModelId
		p	8		topRightHingeOpenModelId
	m	(Ldfy;Lakr;Lakr;Lakr;Lakr;Z)Lnr;	a	createFenceGate
		p	0		fenceGateBlock
		p	1		openModelId
		p	2		closedModelId
		p	3		openWallModelId
		p	4		closedWallModelId
		p	5		uvlock
	m	(Ldfy;Lakr;Lnx;)V	a	createGrassLikeBlock
		p	1		topSoil
		p	2		modelId
		p	3		snowyVariant
	m	(Ldfy;Lakr;Lof;)V	a	createPistonVariant
		p	1		piston
		p	2		extendedModelId
		p	3		textures
	m	(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;	a	createMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Ldfy;Lcul;)V	a	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Ldfy;Ldfy;)V	a	copyDoorModel
		p	1		parent
		p	2		doorBlock
	m	(Ldfy;Ldfy;Ldfy;)V	a	createHangingSign
		p	1		strippedLog
		p	2		hangingSign
		p	3		wallHangingSign
	m	(Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;Ldfy;)V	a	createCoral
		p	1		coral
		p	2		deadCoral
		p	3		coralBlock
		p	4		deadCoralBlock
		p	5		coralFan
		p	6		deadCoralFan
		p	7		coralWallFan
		p	8		deadCoralWallFan
	m	(Ldfy;Ldfy;Ljava/util/function/BiFunction;)V	a	createCraftingTableLike
		p	1		block
		p	2		otherTextureSource
		p	3		texturesFactory
	m	(Ldfy;Ldfy;Lno$e;)V	a	createPlant
		p	1		plantBlock
		p	2		flowerPotBlock
		p	3		tintType
	m	(Ldfy;Lduf;[I)V	a	createCropBlock
		p	1		crop
		p	2		ageProperty
		p	3		ageTextureIndices
	m	(Ldfy;Ljava/lang/Integer;)Lnx;	a	lambda$createBrushableBlock$5
		p	2		dusted
	m	(Ldfy;Ljava/lang/Integer;Ldty;)Lnx;	a	lambda$createPitcherCrop$8
		p	1		age
		p	2		half
	m	(Ldfy;Ljava/lang/String;)V	a	createSimpleFlatItemModel
		p	1		block
		p	2		textureSuffix
	m	(Ldfy;Ljava/lang/String;Lod;Ljava/util/function/Function;)Lakr;	a	createSuffixedVariant
		p	1		block
		p	2		suffix
		p	3		model
		p	4		texturesFactory
	m	(Ldfy;Ljava/util/function/Function;)V	a	createBeeNest
		p	1		beehive
		p	2		texturesFactory
	m	(Ldfy;Lno$e;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
	m	(Ldfy;Lno$e;Lduf;[I)V	a	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		stageProperty
		p	4		stages
	m	(Ldfy;Lno$e;Lof;)V	a	createCrossBlockWithDefaultItem
		p	1		block
		p	2		tintType
		p	3		texture
	m	(Ldfy;Lns$c;)V	a	lambda$createMultiface$53
	m	(Ldfy;Lns$c;Ldtt;)V	a	lambda$createMultiface$52
		p	2		property
	m	(Ldfy;Lof;)V	a	createPumpkinVariant
		p	1		block
		p	2		texture
	m	(Ldfy;Lof;Ljava/lang/Integer;)Lnx;	a	lambda$createStems$7
		p	3		age
	m	(Ldfy;Lof;Ljava/util/function/BiConsumer;)Lnr;	a	createPillarBlockUVLocked
		p	0		block
		p	1		textureMap
		p	2		modelCollector
	m	(Ldfy;Lof;Lod;)V	a	createTrivialBlock
		p	1		block
		p	2		textures
		p	3		model
	m	(Ldfy;Loh$a;)V	a	createAxisAlignedPillarBlock
		p	1		block
		p	2		modelFactory
	m	(Ldfy;Loh$a;Loh$a;)V	a	createRotatedPillarWithHorizontalVariant
		p	1		block
		p	2		verticalModelFactory
		p	3		horizontalModelFactory
	m	(Ldtt;Lakr;Lakr;)Lnv;	a	createBooleanModelDispatch
		p	0		property
		p	1		trueModel
		p	2		falseModel
	m	(Lduf;Ljava/lang/Comparable;Lakr;Lakr;)Lnv;	a	createEmptyOrFullDispatch
		p	0		property
		p	1		fence
		p	2		higherOrEqualModelId
		p	3		lowerModelId
	m	(Ldum;)Lnx;	a	lambda$createStructureBlock$40
		p	1		mode
	m	(Ljava/lang/Boolean;Ljava/lang/Boolean;)Lnx;	a	lambda$createTripwireHook$42
	m	(Ljava/lang/Comparable;Lnx;Lnx;Ljava/lang/Comparable;)Lnx;	a	lambda$createEmptyOrFullDispatch$13
	m	(Ljava/lang/Integer;)Lakr;	a	lambda$createSnifferEgg$44
		p	1		hatch
	m	(Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;)Lnx;	a	lambda$createRepeater$38
		p	0		tick
		p	1		locked
		p	2		on
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Lakr;	a	createTurtleEggModel
		p	1		eggs
		p	2		hatch
	m	(Ljava/lang/String;I)Lnx;	a	lambda$createBambooModels$11
	m	(Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List;	a	wrapModels
		p	0		modelIds
		p	1		processor
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Lnx;	a	lambda$createSnifferEgg$45
		p	1		hatch
	m	(Lji;Ldtz;)Lnx;	a	createPointedDripstoneVariant
		p	1		direction
		p	2		thickness
	m	(Ljk;)Lnx;	a	lambda$createJigsaw$59
	m	(Ljk;Lnx;)Lnx;	a	applyRotation
		p	1		orientation
		p	2		variant
	m	(Llx;)V	a	lambda$run$60
		p	1		family
	m	(Lnt;Lakr;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createChiseledBookshelf$55
		p	3		pair
	m	(Lnt;Lns$c;Lny$a;)V	a	addSlotStateAndRotationVariants
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
	m	(Lnt;Lns$c;Lny$a;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$addSlotStateAndRotationVariants$56
		p	4		pair
	m	(Lnt;Lns$c;Lny$a;Ldtt;Lod;Z)V	a	addBookSlotModel
		p	1		blockStateSupplier
		p	2		facingCondition
		p	3		rotation
		p	4		property
		p	5		model
		p	6		occupied
	m	(Lnv$d;Ldty;Lakr;Lakr;Lakr;Lakr;)Lnv$d;	a	configureDoorHalf
		p	0		variantMap
		p	1		targetHalf
		p	2		leftHingeClosedModelId
		p	3		leftHingeOpenModelId
		p	4		rightHingeClosedModelId
		p	5		rightHingeOpenModelId
	m	(Lnx;)Lnx;	a	lambda$createSoulFire$31
	m	(Lod;Ljava/lang/String;Lof;Lno$d;)Lakr;	a	lambda$addBookSlotModel$57
		p	4		key
	m	(Lof;)V	a	lambda$new$4
		p	0		textures
	m	(Lof;Lakr;)Lof;	a	lambda$createChorusFlower$17
		p	1		id
	m	(Loh$a;[Ldfy;)V	a	createColoredBlockWithRandomRotations
		p	1		modelFactory
		p	2		blocks
	m	([ILdfy;Lno$e;Ljava/lang/Integer;)Lnx;	a	lambda$createCrossBlock$6
		p	4		stage
	m	([ILit/unimi/dsi/fastutil/ints/Int2ObjectMap;Ldfy;Ljava/lang/Integer;)Lnx;	a	lambda$createCropBlock$15
		p	1		age
	m	([Lakr;Ljava/lang/Integer;)Lnx;	a	lambda$createRespawnAnchor$58
		p	1		charges
	m	([Ldfy;)V	a	createCampfires
		p	1		blocks
	m	()V	aA	createInfestedDeepslate
	m	()V	aB	createRespawnAnchor
	m	()V	aC	createJigsaw
	m	()V	aD	createPetrifiedOakSlab
	m	()V	aE	createLightBlock
	m	()V	aa	createObserver
	m	()V	ab	createPistons
	m	()V	ac	createPistonHeads
	m	()V	ad	createTrialSpawner
	m	()V	ae	createVault
	m	()V	af	createSculkSensor
	m	()V	ag	createCalibratedSculkSensor
	m	()V	ah	createSculkShrieker
	m	()V	ai	createScaffolding
	m	()V	aj	createCaveVines
	m	()V	ak	createRedstoneLamp
	m	()V	al	createRedstoneTorch
	m	()V	am	createRepeater
	m	()V	an	createSeaPickle
	m	()V	ao	createSnowBlocks
	m	()V	ap	createStonecutter
	m	()V	aq	createStructureBlock
	m	()V	ar	createSweetBerryBush
	m	()V	as	createTripwire
	m	()V	at	createTripwireHook
	m	()V	au	createTurtleEgg
	m	()V	av	createSnifferEgg
	m	()V	aw	createSculkCatalyst
	m	()V	ax	createChiseledBookshelf
	m	()V	ay	createMagmaBlock
	m	()V	az	createInfestedStone
	m	()Lnv;	b	createHorizontalFacingDispatch
	m	(Lakr;)Lnx;	b	lambda$static$51
		p	0		model
	m	(Lakr;Lakr;Lduj;)Lnx;	b	lambda$createSculkSensor$36
		p	2		phase
	m	(Lakr;Lof;)V	b	lambda$createGrassBlocks$32
		p	1		textures
	m	(Ldfy;)V	b	createGenericCube
		p	1		block
	m	(Ldfy;Lakr;)Lnu;	b	createRotatedVariant
		p	0		block
		p	1		modelId
	m	(Ldfy;Lakr;Lakr;)Lnr;	b	createButton
		p	0		buttonBlock
		p	1		regularModelId
		p	2		pressedModelId
	m	(Ldfy;Lakr;Lakr;Lakr;)Lnr;	b	createStairs
		p	0		stairsBlock
		p	1		innerModelId
		p	2		regularModelId
		p	3		outerModelId
	m	(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;	b	createNorthWestMirroredCubeGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Ldfy;Ldfy;)V	b	copyTrapdoorModel
		p	1		parent
		p	2		trapdoorBlock
	m	(Ldfy;Ldfy;Lno$e;)V	b	createGrowingPlant
		p	1		plant
		p	2		plantStem
		p	3		tintType
	m	(Ldfy;Lno$e;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
	m	(Ldfy;Lno$e;Lof;)V	b	createCrossBlock
		p	1		block
		p	2		tintType
		p	3		crossTexture
	m	(Ldfy;Loh$a;)V	b	createTrivialBlock
		p	1		block
		p	2		modelFactory
	m	(Ljava/lang/Integer;)Lnx;	b	lambda$createSweetBerryBush$41
		p	1		stage
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/util/List;	b	lambda$createTurtleEgg$43
	m	(Ljk;)Lnx;	b	lambda$createCrafterBlock$18
		p	1		orientation
	m	(Lnx;)Lnx;	b	lambda$createSoulFire$30
	m	(Lof;)V	b	lambda$new$3
		p	0		textures
	m	(Lof;Lakr;)Lof;	b	lambda$createCommandBlock$10
		p	1		id
	m	(Loh$a;[Ldfy;)V	b	createColoredBlockWithStateRotations
		p	1		modelFactory
		p	2		blocks
	m	()Lnv;	c	createHorizontalFacingDispatchAlt
	m	(Lakr;)Lnx;	c	lambda$static$50
		p	0		model
	m	(Lakr;Lof;)V	c	lambda$createFurnace$16
		p	1		textures
	m	(Ldfy;)V	c	skipAutoItemBlock
		p	1		block
	m	(Ldfy;Lakr;)Lnu;	c	createSimpleBlock
		p	0		block
		p	1		modelId
	m	(Ldfy;Lakr;Lakr;)Lnr;	c	createFence
		p	0		fenceBlock
		p	1		postModelId
		p	2		sideModelId
	m	(Ldfy;Lakr;Lakr;Lakr;)Lnr;	c	createOrientableTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;	c	createMirroredColumnGenerator
		p	0		block
		p	1		modelId
		p	2		textures
		p	3		modelCollector
	m	(Ldfy;Ldfy;)V	c	createNonTemplateModelBlock
		p	1		block
		p	2		modelReference
	m	(Ldfy;Lno$e;)V	c	createDoublePlant
		p	1		doubleBlock
		p	2		tintType
	m	(Ldfy;Loh$a;)V	c	createHorizontallyRotatedBlock
		p	1		block
		p	2		modelFactory
	m	(Lnx;)Lnx;	c	lambda$createSoulFire$29
	m	(Lof;)V	c	lambda$new$2
		p	0		textureMap
	m	()Lnv;	d	createTorchHorizontalDispatch
	m	(Lakr;)Lnx;	d	lambda$static$49
		p	0		model
	m	(Lakr;Lof;)V	d	lambda$createBarrel$12
	m	(Ldfy;)V	d	createSimpleFlatItemModel
		p	1		block
	m	(Ldfy;Lakr;)Lnr;	d	createAxisAlignedPillarBlock
		p	0		block
		p	1		modelId
	m	(Ldfy;Lakr;Lakr;)Lnr;	d	createRotatedPillarWithHorizontalVariant
		p	0		block
		p	1		verticalModelId
		p	2		horizontalModelId
	m	(Ldfy;Lakr;Lakr;Lakr;)Lnr;	d	createTrapdoor
		p	0		trapdoorBlock
		p	1		topModelId
		p	2		bottomModelId
		p	3		openModelId
	m	(Ldfy;Ldfy;)V	d	createCoralFans
		p	1		coralFanBlock
		p	2		coralWallFanBlock
	m	(Ldfy;Loh$a;)V	d	createFurnace
		p	1		cooker
		p	2		modelFactory
	m	(Lnx;)Lnx;	d	lambda$createSoulFire$28
	m	(Lof;)V	d	lambda$new$1
		p	0		textureMap
	m	()Lnv;	e	createFacingDispatch
	m	(Lakr;)Lnx;	e	lambda$static$48
		p	0		model
	m	(Ldfy;)V	e	createRotatedMirroredVariantBlock
		p	1		block
	m	(Ldfy;Lakr;)V	e	createAxisAlignedPillarBlockCustomModel
		p	1		block
		p	2		modelId
	m	(Ldfy;Lakr;Lakr;)Lnr;	e	createPressurePlate
		p	0		pressurePlateBlock
		p	1		upModelId
		p	2		downModelId
	m	(Ldfy;Lakr;Lakr;Lakr;)Lnr;	e	createSlab
		p	0		slabBlock
		p	1		bottomModelId
		p	2		topModelId
		p	3		fullModelId
	m	(Ldfy;Ldfy;)V	e	createStems
		p	1		stemBlock
		p	2		attachedStemBlock
	m	(Lnx;)Lnx;	e	lambda$createSoulFire$27
	m	(Lof;)V	e	lambda$new$0
		p	0		textureMap
	m	()Lnv;	f	createRotatedPillar
	m	(Lakr;)Lnx;	f	lambda$static$47
		p	0		model
	m	(Ldfy;)V	f	createRotatedVariantBlock
		p	1		block
	m	(Ldfy;Lakr;)V	f	createAirLikeBlock
		p	1		block
		p	2		particleSource
	m	(Ldfy;Lakr;Lakr;)V	f	createDoubleBlock
		p	1		block
		p	2		upperHalfModelId
		p	3		lowerHalfModelId
	m	(Ldfy;Ldfy;)Lno$a;	f	blockEntityModels
		p	1		block
		p	2		particleBlock
	m	(Lnx;)Lnx;	f	lambda$createFire$26
	m	()V	g	createBigDripLeafBlock
	m	(Lakr;)Lnx;	g	lambda$static$46
		p	0		model
	m	(Ldfy;)V	g	createBrushableBlock
		p	1		block
	m	(Ldfy;Ldfy;)V	g	createFullAndCarpetBlocks
		p	1		wool
		p	2		carpet
	m	(Lnx;)Lnx;	g	lambda$createFire$25
	m	()V	h	createPitcherPlant
	m	(Lakr;)Lnx;	h	lambda$wrapModels$20
		p	0		modelId
	m	(Ldfy;)Lno$b;	h	family
		p	1		block
	m	(Ldfy;Ldfy;)V	h	createGlassBlocks
		p	1		glass
		p	2		glassPane
	m	(Lnx;)Lnx;	h	lambda$createFire$24
	m	()V	i	createPitcherCrop
	m	(Ldfy;)V	i	createDoor
		p	1		doorBlock
	m	(Ldfy;Ldfy;)V	i	copyCopperBulbModel
		p	1		unwaxedCopperBulbBlock
		p	2		waxedCopperBulbBlock
	m	(Lnx;)Lnx;	i	lambda$createFire$23
	m	()V	j	createSunflower
	m	(Ldfy;)V	j	createOrientableTrapdoor
		p	1		trapdoorBlock
	m	(Ldfy;Ldfy;)V	j	createWeightedPressurePlate
		p	1		weightedPressurePlate
		p	2		textureSource
	m	(Lnx;)Lnx;	j	lambda$createFire$22
	m	()V	k	createTallSeagrass
	m	(Ldfy;)V	k	createTrapdoor
		p	1		trapdoorBlock
	m	(Ldfy;Ldfy;)V	k	copyModel
		p	1		modelSource
		p	2		child
	m	(Lnx;)Lnx;	k	lambda$createFire$21
	m	()V	l	createSmallDripleaf
	m	(Ldfy;)Lno$f;	l	woodProvider
		p	1		logBlock
	m	(Ldfy;Ldfy;)V	l	createNormalTorch
		p	1		torch
		p	2		wallTorch
	m	()V	m	createBamboo
	m	(Ldfy;)V	m	createNonTemplateModelBlock
		p	1		block
	m	(Ldfy;Ldfy;)V	m	createBedItem
		p	1		bed
		p	2		particleSource
	m	()Lnv;	n	createColumnWithFacing
	m	(Ldfy;)V	n	createPassiveRail
		p	1		rail
	m	(Ldfy;Ldfy;)V	n	createNetherRoots
		p	1		root
		p	2		pottedRoot
	m	()V	o	createBarrel
	m	(Ldfy;)V	o	createActiveRail
		p	1		rail
	m	(Ldfy;Ldfy;)V	o	createCandleAndCandleCake
		p	1		candle
		p	2		cake
	m	()V	p	createBell
	m	(Ldfy;)V	p	createFlowerBed
		p	1		flowerbed
	m	()V	q	createGrindstone
	m	(Ldfy;)V	q	createCommandBlock
		p	1		commandBlock
	m	()V	r	createBookshelf
	m	(Ldfy;)V	r	createAnvil
		p	1		anvil
	m	()V	s	createRedstoneWire
	m	(Ldfy;)V	s	createAzalea
		p	1		block
	m	()V	t	createComparator
	m	(Ldfy;)V	t	createPottedAzalea
		p	1		block
	m	()V	u	createSmoothStoneSlab
	m	(Ldfy;)V	u	createMushroomBlock
		p	1		mushroomBlock
	m	()V	v	createBrewingStand
	m	(Ldfy;)V	v	createDispenserBlock
		p	1		block
	m	()V	w	createCakeBlock
	m	(Ldfy;)V	w	createCopperBulb
		p	1		copperBulbBlock
	m	()V	x	createCartographyTable
	m	(Ldfy;)V	x	createAmethystCluster
		p	1		block
	m	()V	y	createSmithingTable
	m	(Ldfy;)V	y	createNyliumBlock
		p	1		block
	m	()V	z	createPumpkins
	m	(Ldfy;)V	z	createRotatableColumn
		p	1		block
	f	Ljava/util/List;	a	MULTIFACE_GENERATOR
	f	Ljava/util/function/Consumer;	b	blockStateOutput
	f	Ljava/util/function/BiConsumer;	c	modelOutput
	f	Ljava/util/function/Consumer;	d	skippedAutoModelsOutput
	f	Ljava/util/List;	e	nonOrientableTrapdoor
	f	Ljava/util/Map;	f	fullBlockModelCustomGenerators
	f	Ljava/util/Map;	g	texturedModels
	f	Ljava/util/Map;	h	SHAPE_CONSUMERS
	f	Ljava/util/Map;	i	CHISELED_BOOKSHELF_SLOT_MODEL_CACHE
c	no$1	no$1
	f	[I	a	$SwitchMap$net$minecraft$core$FrontAndTop
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$entity$vault$VaultState
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$entity$trialspawner$TrialSpawnerState
	f	[I	d	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	e	$SwitchMap$net$minecraft$world$level$block$state$properties$DoubleBlockHalf
c	no$a	no$a
	m	(Lno;Lakr;Ldfy;)V	<init>	<init>
		p	2		modelId
		p	3		block
	m	(Lod;[Ldfy;)Lno$a;	a	createWithCustomBlockItemModel
		p	1		model
		p	2		blocks
	m	([Ldfy;)Lno$a;	a	create
		p	1		blocks
	m	([Ldfy;)Lno$a;	b	createWithoutBlockItem
		p	1		blocks
	f	Lno;	a	this$0
	f	Lakr;	b	baseModel
c	no$b	no$b
	m	(Lno;Lof;)V	<init>	<init>
		p	2		textures
	m	(Ldfy;)Lno$b;	a	button
		p	1		buttonBlock
	m	(Ldfy;Ldfy;)Lno$b;	a	donateModelTo
		p	1		parent
		p	2		child
	m	(Ldfy;Lod;)Lno$b;	a	fullBlock
		p	1		block
		p	2		model
	m	(Llx$b;Ldfy;)V	a	lambda$generateFor$1
		p	1		variant
		p	2		block
	m	(Llx;)Lno$b;	a	generateFor
		p	1		family
	m	(Lod;Ldfy;)Lakr;	a	getOrCreateModel
		p	1		model
		p	2		block
	m	(Ldfy;)Lno$b;	b	wall
		p	1		wallBlock
	m	(Ldfy;Lod;)Lakr;	b	lambda$getOrCreateModel$0
		p	2		newModel
	m	(Ldfy;)Lno$b;	c	customFence
		p	1		customFenceBlock
	m	(Ldfy;)Lno$b;	d	fence
		p	1		fenceBlock
	m	(Ldfy;)Lno$b;	e	customFenceGate
		p	1		customFenceGateBlock
	m	(Ldfy;)Lno$b;	f	fenceGate
		p	1		fenceGateBlock
	m	(Ldfy;)Lno$b;	g	pressurePlate
		p	1		pressurePlateBlock
	m	(Ldfy;)Lno$b;	h	sign
		p	1		signBlock
	m	(Ldfy;)Lno$b;	i	slab
		p	1		block
	m	(Ldfy;)Lno$b;	j	stairs
		p	1		block
	m	(Ldfy;)Lno$b;	k	fullBlockVariant
		p	1		block
	m	(Ldfy;)Lno$b;	l	door
		p	1		block
	m	(Ldfy;)V	m	trapdoor
		p	1		block
	f	Lno;	a	this$0
	f	Lof;	b	mapping
	f	Ljava/util/Map;	c	models
	f	Llx;	d	family
	f	Lakr;	e	fullBlock
	f	Ljava/util/Set;	f	skipGeneratingModelsFor
c	no$c	no$c
	m	(Ldfy;Lakr;Lof;Ljava/util/function/BiConsumer;)Lnr;	create	create
		p	1		block
		p	2		modelId
		p	3		textures
		p	4		modelCollector
c	no$d	no$d
	m	()Lod;	a	template
	m	()Ljava/lang/String;	b	modelSuffix
	f	Lod;	a	template
	f	Ljava/lang/String;	b	modelSuffix
c	no$e	no$e
	m	()Lod;	a	getCross
	m	()Lod;	b	getCrossPot
	m	()[Lno$e;	c	$values
	f	Lno$e;	a	TINTED
	f	Lno$e;	b	NOT_TINTED
	f	[Lno$e;	c	$VALUES
c	no$f	no$f
	m	(Lno;Lof;)V	<init>	<init>
		p	2		textures
	m	(Ldfy;)Lno$f;	a	wood
		p	1		woodBlock
	m	(Ldfy;)Lno$f;	b	log
		p	1		stemBlock
	m	(Ldfy;)Lno$f;	c	logWithHorizontal
		p	1		logBlock
	m	(Ldfy;)Lno$f;	d	logUVLocked
		p	1		logBlock
	f	Lno;	a	this$0
	f	Lof;	b	logMapping
c	np	np
	m	(Ljava/util/function/BiConsumer;)V	<init>	<init>
		p	1		writer
	m	()V	a	run
	m	(Lakr;Lakr;Lakr;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
	m	(Lakr;Lakr;Lakr;Lakr;)V	a	generateLayeredItem
		p	1		id
		p	2		layer0
		p	3		layer1
		p	4		layer2
	m	(Lakr;Ljava/lang/String;)Lakr;	a	getItemModelForTrimMaterial
		p	1		id
		p	2		trimMaterialName
	m	(Lakr;Ljava/util/Map;Ljm;)Lcom/google/gson/JsonObject;	a	generateBaseArmorTrimTemplate
		p	1		id
		p	2		textures
		p	3		armorMaterial
	m	(Lcsf;)V	a	generateArmorTrims
		p	1		armor
	m	(Lcsf;Lakr;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	lambda$generateArmorTrims$1
		p	2		id
		p	3		textures
	m	(Lcul;)V	a	generateItemWithOverlay
		p	1		armor
	m	(Lcul;Lcul;Lod;)V	a	generateFlatItem
		p	1		item
		p	2		texture
		p	3		model
	m	(Lcul;Ljava/lang/String;Lod;)V	a	generateFlatItem
		p	1		item
		p	2		suffix
		p	3		model
	m	(Lcul;Lod;)V	a	generateFlatItem
		p	1		item
		p	2		model
	m	(Lcsf;Lakr;Ljava/util/Map;)Lcom/google/gson/JsonObject;	b	lambda$generateArmorTrims$0
		p	2		id
		p	3		textures
	m	(Lcul;)V	b	generateCompassItem
		p	1		compass
	m	(Lcul;)V	c	generateClockItem
		p	1		clock
	f	Lakr;	a	TRIM_TYPE_PREDICATE_ID
	f	Ljava/util/List;	b	GENERATED_TRIM_MODELS
	f	Ljava/util/function/BiConsumer;	c	output
c	np$a	np$a
	m	()Ljava/lang/String;	a	name
	m	(Ljm;)Ljava/lang/String;	a	name
		p	1		armorMaterial
	m	()F	b	itemModelIndex
	m	()Ljava/util/Map;	c	overrideArmorMaterials
	f	Ljava/lang/String;	a	name
	f	F	b	itemModelIndex
	f	Ljava/util/Map;	c	overrideArmorMaterials
c	nq	nq
	m	(Lmc;)V	<init>	<init>
		p	1		output
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$7
	m	(Ldfy;)Ljava/nio/file/Path;	a	lambda$run$5
		p	1		block
	m	(Ljava/util/Map$Entry;)Z	a	lambda$run$2
		p	0		entry
	m	(Ljava/util/Map;Lakr;Ljava/util/function/Supplier;)V	a	lambda$run$1
		p	1		id
		p	2		jsonSupplier
	m	(Ljava/util/Map;Ldfy;)Z	a	lambda$run$3
		p	1		block
	m	(Ljava/util/Map;Lnr;)V	a	lambda$run$0
		p	1		blockStateSupplier
	m	(Ljava/util/Set;Ljava/util/Map;Ldfy;)V	a	lambda$run$4
		p	2		block
	m	(Ljava/util/function/Function;Lly;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$saveCollection$6
		p	2		entry
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	saveCollection
		p	1		cache
		p	2		models
		p	3		pathGetter
	f	Lmc$a;	d	blockStatePathProvider
	f	Lmc$a;	e	modelPathProvider
c	nr	nr
	m	()Ldfy;	a	getBlock
c	ns	ns
	m	()Lns$c;	a	condition
	m	(Ldtd;)V	a	validate
		p	1		stateManager
	m	([Lns;)Lns;	a	and
		p	0		conditions
	m	([Lns;)Lns;	b	or
		p	0		conditions
c	ns$a	ns$a
	m	(Lns$b;Ljava/util/List;)V	<init>	<init>
		p	1		operator
		p	2		components
	m	(Ldtd;)V	a	validate
		p	1		stateManager
	m	(Ldtd;Lns;)V	a	lambda$validate$0
		p	1		component
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Lns$b;	a	operation
	f	Ljava/util/List;	b	subconditions
c	ns$b	ns$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lns$b;	a	$values
	f	Lns$b;	a	AND
	f	Lns$b;	b	OR
	f	Ljava/lang/String;	c	id
	f	[Lns$b;	d	$VALUES
c	ns$c	ns$c
	m	(Lcom/google/gson/JsonObject;Lduf;Ljava/lang/String;)V	a	lambda$get$0
		p	1		property
		p	2		value
	m	(Ldtd;)V	a	validate
		p	1		stateManager
	m	(Ldtd;Lduf;)Z	a	lambda$validate$1
		p	1		property
	m	(Lduf;Ljava/lang/Comparable;)Lns$c;	a	term
		p	1		property
		p	2		value
	m	(Lduf;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lns$c;	a	term
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Lduf;Ljava/lang/String;)V	a	putValue
		p	1		property
		p	2		value
	m	(Lduf;Ljava/util/stream/Stream;)Ljava/lang/String;	a	joinValues
		p	0		property
		p	1		valueStream
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Lduf;Ljava/lang/Comparable;)Lns$c;	b	negatedTerm
		p	1		property
		p	2		value
	m	(Lduf;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lns$c;	b	negatedTerm
		p	1		property
		p	2		value
		p	3		otherValues
	m	(Lduf;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String;	c	getTerm
		p	0		property
		p	1		value
		p	2		otherValues
	f	Ljava/util/Map;	a	terms
c	nt	nt
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	()Ldfy;	a	getBlock
	m	(Ldfy;)Lnt;	a	multiPart
		p	0		block
	m	(Ldtd;Lnt$b;)V	a	lambda$get$0
		p	1		multipart
	m	(Ljava/util/List;)Lnt;	a	with
		p	1		variants
	m	(Lns;Ljava/util/List;)Lnt;	a	with
		p	1		condition
		p	2		variants
	m	(Lns;Lnx;)Lnt;	a	with
		p	1		condition
		p	2		variant
	m	(Lns;[Lnx;)Lnt;	a	with
		p	1		condition
		p	2		variants
	m	(Lnx;)Lnt;	a	with
		p	1		variant
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ldfy;	a	block
	f	Ljava/util/List;	b	parts
c	nt$a	nt$a
	m	(Lns;Ljava/util/List;)V	<init>	<init>
		p	1		when
		p	2		variants
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldtd;)V	a	validate
		p	1		stateManager
	f	Lns;	a	condition
c	nt$b	nt$b
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		variants
	m	()Lcom/google/gson/JsonElement;	a	get
	m	(Lcom/google/gson/JsonObject;)V	a	decorate
		p	1		json
	m	(Ldtd;)V	a	validate
		p	1		stateManager
	f	Ljava/util/List;	a	variants
c	nu	nu
	m	(Ldfy;Ljava/util/List;)V	<init>	<init>
		p	1		block
		p	2		variants
	m	()Ldfy;	a	getBlock
	m	(Lcom/google/common/collect/ImmutableList$Builder;Lnx;Lnx;)V	a	lambda$mergeVariants$5
		p	2		rightVariant
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$get$1
		p	1		entry
	m	(Ldfy;)Lnu;	a	multiVariant
		p	0		block
	m	(Ldfy;Lnx;)Lnu;	a	multiVariant
		p	0		block
		p	1		variant
	m	(Ldfy;[Lnx;)Lnu;	a	multiVariant
		p	0		block
		p	1		variants
	m	(Lduf;)V	a	lambda$with$0
		p	1		property
	m	(Ljava/util/List;Lcom/google/common/collect/ImmutableList$Builder;Lnx;)V	a	lambda$mergeVariants$6
		p	2		leftVariant
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	mergeVariants
		p	0		left
		p	1		right
	m	(Ljava/util/Map;Lcom/google/gson/JsonObject;)V	a	lambda$get$4
		p	1		json
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$get$3
		p	1		pair
	m	(Lnv;)Lnu;	a	with
		p	1		map
	m	()Lcom/google/gson/JsonElement;	b	get
	m	(Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	b	lambda$get$2
		p	1		pair
	f	Ldfy;	a	block
	f	Ljava/util/List;	b	baseVariants
	f	Ljava/util/Set;	c	seenProperties
	f	Ljava/util/List;	d	declaredPropertySets
c	nv	nv
	m	()Ljava/util/Map;	a	getEntries
	m	(Lduf;)Lnv$a;	a	property
		p	0		property
	m	(Lduf;Lduf;)Lnv$b;	a	properties
		p	0		first
		p	1		second
	m	(Lduf;Lduf;Lduf;)Lnv$c;	a	properties
		p	0		first
		p	1		second
		p	2		third
	m	(Lduf;Lduf;Lduf;Lduf;)Lnv$d;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
	m	(Lduf;Lduf;Lduf;Lduf;Lduf;)Lnv$e;	a	properties
		p	0		first
		p	1		second
		p	2		third
		p	3		fourth
		p	4		fifth
	m	(Lduf;Lnw;)Ljava/util/stream/Stream;	a	lambda$verifyComplete$0
		p	1		propertiesMap
	m	(Lnw;)Z	a	lambda$verifyComplete$1
		p	1		propertiesMap
	m	(Lnw;Ljava/util/List;)V	a	putValue
		p	1		condition
		p	2		possibleVariants
	m	()Ljava/util/List;	b	getDefinedProperties
	m	()V	c	verifyComplete
	f	Ljava/util/Map;	a	values
c	nv$a	nv$a
	m	(Lduf;)V	<init>	<init>
		p	1		property
	m	(Ljava/lang/Comparable;Ljava/util/List;)Lnv$a;	a	select
		p	1		value
		p	2		variants
	m	(Ljava/lang/Comparable;Lnx;)Lnv$a;	a	select
		p	1		value
		p	2		variant
	m	(Ljava/util/function/Function;)Lnv;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	a	lambda$generateList$1
		p	2		value
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/util/function/Function;)Lnv;	b	generateList
		p	1		variantFactory
	m	(Ljava/util/function/Function;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	2		value
	f	Lduf;	a	property1
c	nv$b	nv$b
	m	(Lduf;Lduf;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnv$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnx;)Lnv$b;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		variant
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$2
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lnv;	a	generate
		p	1		variantFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	3		secondValue
	m	(Ljava/util/function/BiFunction;)Lnv;	b	generateList
		p	1		variantsFactory
	m	(Ljava/util/function/BiFunction;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	2		firstValue
	f	Lduf;	a	property1
	f	Lduf;	b	property2
c	nv$c	nv$c
	m	(Lduf;Lduf;Lduf;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnv$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnx;)Lnv$c;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$h;Ljava/lang/Comparable;)V	a	lambda$generateList$3
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$h;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	3		secondValue
	m	(Lnv$h;)Lnv;	a	generate
		p	1		variantFactory
	m	(Lnv$h;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$h;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$h;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	3		secondValue
	m	(Lnv$h;)Lnv;	b	generateList
		p	1		variantFactory
	m	(Lnv$h;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	2		firstValue
	f	Lduf;	a	property1
	f	Lduf;	b	property2
	f	Lduf;	c	property3
c	nv$d	nv$d
	m	(Lduf;Lduf;Lduf;Lduf;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnv$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnx;)Lnv$d;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	a	lambda$generateList$4
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	3		secondValue
	m	(Lnv$g;)Lnv;	a	generate
		p	1		variantFactory
	m	(Lnv$g;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$g;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	3		secondValue
	m	(Lnv$g;)Lnv;	b	generateList
		p	1		variantFactory
	m	(Lnv$g;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	2		firstValue
	f	Lduf;	a	property1
	f	Lduf;	b	property2
	f	Lduf;	c	property3
	f	Lduf;	d	property4
c	nv$e	nv$e
	m	(Lduf;Lduf;Lduf;Lduf;Lduf;)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		third
		p	4		fourth
		p	5		fifth
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnv$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variants
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnx;)Lnv$e;	a	select
		p	1		firstValue
		p	2		secondValue
		p	3		thirdValue
		p	4		fourthValue
		p	5		fifthValue
		p	6		variant
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	a	lambda$generateList$5
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	a	lambda$generateList$6
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	a	lambda$generateList$7
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	a	lambda$generateList$8
		p	3		secondValue
	m	(Lnv$f;)Lnv;	a	generate
		p	1		variantFactory
	m	(Lnv$f;Ljava/lang/Comparable;)V	a	lambda$generateList$9
		p	2		firstValue
	m	()Ljava/util/List;	b	getDefinedProperties
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	b	lambda$generate$0
		p	6		fifthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	b	lambda$generate$1
		p	5		fourthValue
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	b	lambda$generate$2
		p	4		thirdValue
	m	(Ljava/lang/Comparable;Lnv$f;Ljava/lang/Comparable;)V	b	lambda$generate$3
		p	3		secondValue
	m	(Lnv$f;)Lnv;	b	generateList
		p	1		variantFactory
	m	(Lnv$f;Ljava/lang/Comparable;)V	b	lambda$generate$4
		p	2		firstValue
	f	Lduf;	a	property1
	f	Lduf;	b	property2
	f	Lduf;	c	property3
	f	Lduf;	d	property4
	f	Lduf;	e	property5
c	nv$f	nv$f
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
		p	5		five
c	nv$g	nv$g
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
		p	4		four
c	nv$h	nv$h
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		one
		p	2		two
		p	3		three
c	nw	nw
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		values
	m	()Lnw;	a	empty
	m	(Lduf$a;)Lnw;	a	extend
		p	1		value
	m	(Lnw;)Lnw;	a	extend
		p	1		propertiesMap
	m	([Lduf$a;)Lnw;	a	of
		p	0		values
	m	()Ljava/lang/String;	b	getKey
	m	(Lduf$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		value
	f	Lnw;	a	EMPTY
	f	Ljava/util/Comparator;	b	COMPARE_BY_NAME
	f	Ljava/util/List;	c	values
c	nx	nx
	m	()Lnx;	a	variant
	m	(Lcom/google/gson/JsonArray;Lnx;)V	a	lambda$convertList$1
		p	1		variant
	m	(Lcom/google/gson/JsonObject;Lnz$a;)V	a	lambda$get$0
		p	1		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	convertList
		p	0		variants
	m	(Lnx;Lnx;)Lnx;	a	merge
		p	0		first
		p	1		second
	m	(Lnz;Ljava/lang/Object;)Lnx;	a	with
		p	1		key
		p	2		value
	m	()Lcom/google/gson/JsonElement;	b	get
	f	Ljava/util/Map;	a	values
c	ny	ny
	m	(Lakr;)Lcom/google/gson/JsonElement;	a	lambda$static$2
		p	0		id
	m	(Lny$a;)Lcom/google/gson/JsonElement;	a	lambda$static$1
		p	0		rotation
	m	(Lny$a;)Lcom/google/gson/JsonElement;	b	lambda$static$0
		p	0		rotation
	f	Lnz;	a	X_ROT
	f	Lnz;	b	Y_ROT
	f	Lnz;	c	MODEL
	f	Lnz;	d	UV_LOCK
	f	Lnz;	e	WEIGHT
c	ny$a	ny$a
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		degrees
	m	()[Lny$a;	a	$values
	f	Lny$a;	a	R0
	f	Lny$a;	b	R90
	f	Lny$a;	c	R180
	f	Lny$a;	d	R270
	f	I	e	value
	f	[Lny$a;	f	$VALUES
c	nz	nz
	m	(Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		key
		p	2		writer
	m	(Ljava/lang/Object;)Lnz$a;	a	withValue
		p	1		value
	f	Ljava/lang/String;	a	key
	f	Ljava/util/function/Function;	b	serializer
c	nz$a	nz$a
	m	(Lnz;Ljava/lang/Object;)V	<init>	<init>
		p	2		value
	m	()Lnz;	a	getKey
	m	(Lcom/google/gson/JsonObject;)V	a	addToVariant
		p	1		json
	f	Lnz;	a	this$0
	f	Ljava/lang/Object;	b	value
c	ob	ob
	m	(Lakr;)V	<init>	<init>
		p	1		parent
	m	()Lcom/google/gson/JsonElement;	a	get
	f	Lakr;	a	parent
c	oc	oc
	m	(Lcul;)Lakr;	a	getModelLocation
		p	0		item
	m	(Lcul;Ljava/lang/String;)Lakr;	a	getModelLocation
		p	0		item
		p	1		suffix
	m	(Ldfy;)Lakr;	a	getModelLocation
		p	0		block
	m	(Ldfy;Ljava/lang/String;)Lakr;	a	getModelLocation
		p	0		block
		p	1		suffix
	m	(Ljava/lang/String;)Lakr;	a	decorateBlockModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getModelLocation$1
		p	1		path
	m	(Ljava/lang/String;)Lakr;	b	decorateItemModelLocation
		p	0		name
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getModelLocation$0
		p	1		path
c	od	od
	m	(Ljava/util/Optional;Ljava/util/Optional;[Log;)V	<init>	<init>
		p	1		parent
		p	2		variant
		p	3		requiredTextureKeys
	m	(Lakr;Ljava/util/Map;)Lcom/google/gson/JsonObject;	a	createBaseTemplate
		p	1		id
		p	2		textures
	m	(Lakr;Lof;Ljava/util/function/BiConsumer;)Lakr;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
	m	(Lakr;Lof;Ljava/util/function/BiConsumer;Lod$a;)Lakr;	a	create
		p	1		id
		p	2		textures
		p	3		modelCollector
		p	4		jsonFactory
	m	(Lcom/google/gson/JsonObject;Lakr;)V	a	lambda$createBaseTemplate$1
		p	1		parent
	m	(Lcom/google/gson/JsonObject;Log;Lakr;)V	a	lambda$createBaseTemplate$2
		p	1		textureKey
		p	2		texture
	m	(Ldfy;)Lakr;	a	getDefaultModelLocation
		p	1		block
	m	(Ldfy;Ljava/lang/String;Lof;Ljava/util/function/BiConsumer;)Lakr;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	m	(Ldfy;Lof;Ljava/util/function/BiConsumer;)Lakr;	a	create
		p	1		block
		p	2		textures
		p	3		modelCollector
	m	(Lod$a;Lakr;Ljava/util/Map;)Lcom/google/gson/JsonElement;	a	lambda$create$0
	m	(Lof;)Ljava/util/Map;	a	createMap
		p	1		textures
	m	(Ldfy;Ljava/lang/String;Lof;Ljava/util/function/BiConsumer;)Lakr;	b	createWithOverride
		p	1		block
		p	2		suffix
		p	3		textures
		p	4		modelCollector
	f	Ljava/util/Optional;	a	model
	f	Ljava/util/Set;	b	requiredSlots
	f	Ljava/util/Optional;	c	suffix
c	od$a	od$a
	m	(Lakr;Ljava/util/Map;)Lcom/google/gson/JsonObject;	create	create
		p	1		id
		p	2		textures
c	oe	oe
	m	(I)[Lod;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/lang/String;[Log;)Lod;	a	create
		p	0		parent
		p	1		variant
		p	2		requiredTextureKeys
	m	(Ljava/lang/String;[Log;)Lod;	a	create
		p	0		parent
		p	1		requiredTextureKeys
	m	([Log;)Lod;	a	create
		p	0		requiredTextureKeys
	m	(I)Lod;	b	lambda$static$0
		p	0		stage
	m	(Ljava/lang/String;[Log;)Lod;	b	createItem
		p	0		parent
		p	1		requiredTextureKeys
	f	Lod;	A	DOOR_TOP_LEFT_OPEN
	f	Lod;	B	DOOR_TOP_RIGHT
	f	Lod;	C	DOOR_TOP_RIGHT_OPEN
	f	Lod;	D	CUSTOM_FENCE_POST
	f	Lod;	E	CUSTOM_FENCE_SIDE_NORTH
	f	Lod;	F	CUSTOM_FENCE_SIDE_EAST
	f	Lod;	G	CUSTOM_FENCE_SIDE_SOUTH
	f	Lod;	H	CUSTOM_FENCE_SIDE_WEST
	f	Lod;	I	CUSTOM_FENCE_INVENTORY
	f	Lod;	J	FENCE_POST
	f	Lod;	K	FENCE_SIDE
	f	Lod;	L	FENCE_INVENTORY
	f	Lod;	M	WALL_POST
	f	Lod;	N	WALL_LOW_SIDE
	f	Lod;	O	WALL_TALL_SIDE
	f	Lod;	P	WALL_INVENTORY
	f	Lod;	Q	CUSTOM_FENCE_GATE_CLOSED
	f	Lod;	R	CUSTOM_FENCE_GATE_OPEN
	f	Lod;	S	CUSTOM_FENCE_GATE_WALL_CLOSED
	f	Lod;	T	CUSTOM_FENCE_GATE_WALL_OPEN
	f	Lod;	U	FENCE_GATE_CLOSED
	f	Lod;	V	FENCE_GATE_OPEN
	f	Lod;	W	FENCE_GATE_WALL_CLOSED
	f	Lod;	X	FENCE_GATE_WALL_OPEN
	f	Lod;	Y	PRESSURE_PLATE_UP
	f	Lod;	Z	PRESSURE_PLATE_DOWN
	f	Lod;	aA	FLOWERBED_4
	f	Lod;	aB	CORAL_FAN
	f	Lod;	aC	CORAL_WALL_FAN
	f	Lod;	aD	GLAZED_TERRACOTTA
	f	Lod;	aE	CHORUS_FLOWER
	f	Lod;	aF	DAYLIGHT_DETECTOR
	f	Lod;	aG	STAINED_GLASS_PANE_NOSIDE
	f	Lod;	aH	STAINED_GLASS_PANE_NOSIDE_ALT
	f	Lod;	aI	STAINED_GLASS_PANE_POST
	f	Lod;	aJ	STAINED_GLASS_PANE_SIDE
	f	Lod;	aK	STAINED_GLASS_PANE_SIDE_ALT
	f	Lod;	aL	COMMAND_BLOCK
	f	Lod;	a	CUBE
	f	Lod;	aM	CHISELED_BOOKSHELF_SLOT_TOP_LEFT
	f	Lod;	aN	CHISELED_BOOKSHELF_SLOT_TOP_MID
	f	Lod;	aO	CHISELED_BOOKSHELF_SLOT_TOP_RIGHT
	f	Lod;	aP	CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT
	f	Lod;	aQ	CHISELED_BOOKSHELF_SLOT_BOTTOM_MID
	f	Lod;	aR	CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT
	f	Lod;	aS	ANVIL
	f	[Lod;	aT	STEMS
	f	Lod;	aU	ATTACHED_STEM
	f	Lod;	aV	CROP
	f	Lod;	aW	FARMLAND
	f	Lod;	aX	FIRE_FLOOR
	f	Lod;	aY	FIRE_SIDE
	f	Lod;	aZ	FIRE_SIDE_ALT
	f	Lod;	aa	PARTICLE_ONLY
	f	Lod;	ab	SLAB_BOTTOM
	f	Lod;	ac	SLAB_TOP
	f	Lod;	ad	LEAVES
	f	Lod;	ae	STAIRS_STRAIGHT
	f	Lod;	af	STAIRS_INNER
	f	Lod;	ag	STAIRS_OUTER
	f	Lod;	ah	TRAPDOOR_TOP
	f	Lod;	ai	TRAPDOOR_BOTTOM
	f	Lod;	aj	TRAPDOOR_OPEN
	f	Lod;	ak	ORIENTABLE_TRAPDOOR_TOP
	f	Lod;	al	ORIENTABLE_TRAPDOOR_BOTTOM
	f	Lod;	am	ORIENTABLE_TRAPDOOR_OPEN
	f	Lod;	an	POINTED_DRIPSTONE
	f	Lod;	ao	CROSS
	f	Lod;	ap	TINTED_CROSS
	f	Lod;	aq	FLOWER_POT_CROSS
	f	Lod;	ar	TINTED_FLOWER_POT_CROSS
	f	Lod;	as	RAIL_FLAT
	f	Lod;	at	RAIL_CURVED
	f	Lod;	au	RAIL_RAISED_NE
	f	Lod;	av	RAIL_RAISED_SW
	f	Lod;	aw	CARPET
	f	Lod;	ax	FLOWERBED_1
	f	Lod;	ay	FLOWERBED_2
	f	Lod;	az	FLOWERBED_3
	f	Lod;	bA	FLAT_HANDHELD_ROD_ITEM
	f	Lod;	bB	TWO_LAYERED_ITEM
	f	Lod;	bC	THREE_LAYERED_ITEM
	f	Lod;	bD	SHULKER_BOX_INVENTORY
	f	Lod;	bE	BED_INVENTORY
	f	Lod;	bF	BANNER_INVENTORY
	f	Lod;	bG	SKULL_INVENTORY
	f	Lod;	bH	CANDLE
	f	Lod;	bI	TWO_CANDLES
	f	Lod;	bJ	THREE_CANDLES
	f	Lod;	bK	FOUR_CANDLES
	f	Lod;	bL	CANDLE_CAKE
	f	Lod;	b	CUBE_DIRECTIONAL
	f	Lod;	bM	SCULK_SHRIEKER
	f	Lod;	bN	VAULT
	f	Lod;	bO	FLAT_HANDHELD_MACE_ITEM
	f	Lod;	ba	FIRE_UP
	f	Lod;	bb	FIRE_UP_ALT
	f	Lod;	bc	CAMPFIRE
	f	Lod;	bd	LANTERN
	f	Lod;	be	HANGING_LANTERN
	f	Lod;	bf	TORCH
	f	Lod;	bg	WALL_TORCH
	f	Lod;	bh	PISTON
	f	Lod;	bi	PISTON_HEAD
	f	Lod;	bj	PISTON_HEAD_SHORT
	f	Lod;	bk	SEAGRASS
	f	Lod;	bl	TURTLE_EGG
	f	Lod;	bm	TWO_TURTLE_EGGS
	f	Lod;	bn	THREE_TURTLE_EGGS
	f	Lod;	bo	FOUR_TURTLE_EGGS
	f	Lod;	bp	SINGLE_FACE
	f	Lod;	bq	CAULDRON_LEVEL1
	f	Lod;	br	CAULDRON_LEVEL2
	f	Lod;	bs	CAULDRON_FULL
	f	Lod;	bt	AZALEA
	f	Lod;	bu	POTTED_AZALEA
	f	Lod;	bv	POTTED_FLOWERING_AZALEA
	f	Lod;	bw	SNIFFER_EGG
	f	Lod;	bx	FLAT_ITEM
	f	Lod;	by	MUSIC_DISC
	f	Lod;	bz	FLAT_HANDHELD_ITEM
	f	Lod;	c	CUBE_ALL
	f	Lod;	d	CUBE_ALL_INNER_FACES
	f	Lod;	e	CUBE_MIRRORED_ALL
	f	Lod;	f	CUBE_NORTH_WEST_MIRRORED_ALL
	f	Lod;	g	CUBE_COLUMN_UV_LOCKED_X
	f	Lod;	h	CUBE_COLUMN_UV_LOCKED_Y
	f	Lod;	i	CUBE_COLUMN_UV_LOCKED_Z
	f	Lod;	j	CUBE_COLUMN
	f	Lod;	k	CUBE_COLUMN_HORIZONTAL
	f	Lod;	l	CUBE_COLUMN_MIRRORED
	f	Lod;	m	CUBE_TOP
	f	Lod;	n	CUBE_BOTTOM_TOP
	f	Lod;	o	CUBE_BOTTOM_TOP_INNER_FACES
	f	Lod;	p	CUBE_ORIENTABLE
	f	Lod;	q	CUBE_ORIENTABLE_TOP_BOTTOM
	f	Lod;	r	CUBE_ORIENTABLE_VERTICAL
	f	Lod;	s	BUTTON
	f	Lod;	t	BUTTON_PRESSED
	f	Lod;	u	BUTTON_INVENTORY
	f	Lod;	v	DOOR_BOTTOM_LEFT
	f	Lod;	w	DOOR_BOTTOM_LEFT_OPEN
	f	Lod;	x	DOOR_BOTTOM_RIGHT
	f	Lod;	y	DOOR_BOTTOM_RIGHT_OPEN
	f	Lod;	z	DOOR_TOP_LEFT
c	of	of
	m	(Ldfy;)Lof;	A	orientableCube
		p	0		block
	m	(Ldfy;)Lof;	B	orientableCubeOnlyTop
		p	0		block
	m	(Ldfy;)Lof;	C	orientableCubeSameEnds
		p	0		block
	m	(Ldfy;)Lof;	D	top
		p	0		top
	m	(Ldfy;)Lof;	E	campfire
		p	0		block
	m	(Ldfy;)Lof;	F	layer0
		p	0		block
	m	(Ldfy;)Lakr;	G	getBlockTexture
		p	0		block
	m	()Ljava/util/stream/Stream;	a	getForced
	m	(Lakr;)Lof;	a	defaultTexture
		p	0		id
	m	(Lakr;Lakr;)Lof;	a	column
		p	0		side
		p	1		end
	m	(Lakr;Lakr;Lakr;)Lof;	a	layered
		p	0		layer0
		p	1		layer1
		p	2		layer2
	m	(Lcul;)Lof;	a	particleFromItem
		p	0		item
	m	(Lcul;Ljava/lang/String;)Lakr;	a	getItemTexture
		p	0		item
		p	1		suffix
	m	(Ldfy;)Lof;	a	cube
		p	0		block
	m	(Ldfy;Ldfy;)Lof;	a	attachedStem
		p	0		stem
		p	1		upper
	m	(Ldfy;Ljava/lang/String;)Lakr;	a	getBlockTexture
		p	0		block
		p	1		suffix
	m	(Ldfy;Ljava/lang/String;Ljava/lang/String;)Lof;	a	trialSpawner
		p	0		block
		p	1		side
		p	2		top
	m	(Ldfy;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lof;	a	vault
		p	0		block
		p	1		front
		p	2		side
		p	3		top
		p	4		bottom
	m	(Ldfy;Z)Lof;	a	candleCake
		p	0		block
		p	1		lit
	m	(Ljava/lang/String;)Lof;	a	snifferEgg
		p	0		age
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$getItemTexture$1
		p	1		path
	m	(Log;)Lakr;	a	get
		p	1		key
	m	(Log;Lakr;)Lof;	a	put
		p	1		key
		p	2		id
	m	(Log;Log;)Lof;	a	copySlot
		p	1		parent
		p	2		child
	m	(Z)Lof;	a	sculkShrieker
		p	0		canSummon
	m	(Lakr;)Lof;	b	cube
		p	0		id
	m	(Lakr;Lakr;)Lof;	b	door
		p	0		top
		p	1		bottom
	m	(Lcul;)Lof;	b	layer0
		p	0		item
	m	(Ldfy;)Lof;	b	defaultTexture
		p	0		block
	m	(Ldfy;Ldfy;)Lof;	b	pane
		p	0		block
		p	1		top
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$getBlockTexture$0
		p	1		path
	m	(Log;Lakr;)Lof;	b	putForced
		p	1		key
		p	2		id
	m	(Log;Log;)Lof;	b	copyForced
		p	1		parent
		p	2		child
	m	(Lakr;)Lof;	c	cross
		p	0		id
	m	(Lakr;Lakr;)Lof;	c	layered
		p	0		layer0
		p	1		layer1
	m	(Lcul;)Lakr;	c	getItemTexture
		p	0		item
	m	(Ldfy;)Lof;	c	cross
		p	0		block
	m	(Ldfy;Ldfy;)Lof;	c	craftingTable
		p	0		block
		p	1		bottom
	m	(Log;Lakr;)Lof;	c	copyAndUpdate
		p	1		key
		p	2		id
	m	(Lakr;)Lof;	d	plant
		p	0		id
	m	(Ldfy;)Lof;	d	plant
		p	0		block
	m	(Ldfy;Ldfy;)Lof;	d	fletchingTable
		p	0		frontTopSideBlock
		p	1		downBlock
	m	(Log;Lakr;)Lof;	d	singleSlot
		p	0		key
		p	1		id
	m	(Lakr;)Lof;	e	rail
		p	0		id
	m	(Ldfy;)Lof;	e	rail
		p	0		block
	m	(Lakr;)Lof;	f	wool
		p	0		id
	m	(Ldfy;)Lof;	f	wool
		p	0		block
	m	(Lakr;)Lof;	g	crop
		p	0		id
	m	(Ldfy;)Lof;	g	flowerbed
		p	0		block
	m	(Lakr;)Lof;	h	particle
		p	0		id
	m	(Ldfy;)Lof;	h	stem
		p	0		block
	m	(Lakr;)Lof;	i	torch
		p	0		id
	m	(Ldfy;)Lof;	i	pattern
		p	0		block
	m	(Lakr;)Lof;	j	cauldron
		p	0		content
	m	(Ldfy;)Lof;	j	fan
		p	0		block
	m	(Lakr;)Lof;	k	layer0
		p	0		id
	m	(Ldfy;)Lof;	k	column
		p	0		block
	m	(Ldfy;)Lof;	l	cubeTop
		p	0		block
	m	(Ldfy;)Lof;	m	pottedAzalea
		p	0		block
	m	(Ldfy;)Lof;	n	logColumn
		p	0		block
	m	(Ldfy;)Lof;	o	fence
		p	0		block
	m	(Ldfy;)Lof;	p	customParticle
		p	0		block
	m	(Ldfy;)Lof;	q	cubeBottomTop
		p	0		block
	m	(Ldfy;)Lof;	r	cubeBottomTopWithWall
		p	0		block
	m	(Ldfy;)Lof;	s	columnWithWall
		p	0		block
	m	(Ldfy;)Lof;	t	door
		p	0		block
	m	(Ldfy;)Lof;	u	particle
		p	0		block
	m	(Ldfy;)Lof;	v	fire0
		p	0		block
	m	(Ldfy;)Lof;	w	fire1
		p	0		block
	m	(Ldfy;)Lof;	x	lantern
		p	0		block
	m	(Ldfy;)Lof;	y	torch
		p	0		block
	m	(Ldfy;)Lof;	z	commandBlock
		p	0		block
	f	Ljava/util/Map;	a	slots
	f	Ljava/util/Set;	b	forcedSlots
c	og	og
	m	(Ljava/lang/String;Log;)V	<init>	<init>
		p	1		name
		p	2		parent
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Log;	a	create
		p	0		name
	m	(Ljava/lang/String;Log;)Log;	a	create
		p	0		name
		p	1		parent
	m	()Log;	b	getParent
	f	Log;	A	CROP
	f	Log;	B	DIRT
	f	Log;	C	FIRE
	f	Log;	D	LANTERN
	f	Log;	E	PLATFORM
	f	Log;	F	UNSTICKY
	f	Log;	G	TORCH
	f	Log;	H	LAYER0
	f	Log;	I	LAYER1
	f	Log;	J	LAYER2
	f	Log;	K	LIT_LOG
	f	Log;	L	CANDLE
	f	Log;	M	INSIDE
	f	Log;	N	CONTENT
	f	Log;	O	INNER_TOP
	f	Log;	P	FLOWERBED
	f	Ljava/lang/String;	Q	id
	f	Log;	R	parent
	f	Log;	a	ALL
	f	Log;	b	TEXTURE
	f	Log;	c	PARTICLE
	f	Log;	d	END
	f	Log;	e	BOTTOM
	f	Log;	f	TOP
	f	Log;	g	FRONT
	f	Log;	h	BACK
	f	Log;	i	SIDE
	f	Log;	j	NORTH
	f	Log;	k	SOUTH
	f	Log;	l	EAST
	f	Log;	m	WEST
	f	Log;	n	UP
	f	Log;	o	DOWN
	f	Log;	p	CROSS
	f	Log;	q	PLANT
	f	Log;	r	WALL
	f	Log;	s	RAIL
	f	Log;	t	WOOL
	f	Log;	u	PATTERN
	f	Log;	v	PANE
	f	Log;	w	EDGE
	f	Log;	x	FAN
	f	Log;	y	STEM
	f	Log;	z	UPPER_STEM
c	oh	oh
	m	(Lof;Lod;)V	<init>	<init>
		p	1		textures
		p	2		model
	m	()Lod;	a	getTemplate
	m	(Lakr;)Loh;	a	createAllSame
		p	0		id
	m	(Ldfy;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lakr;	a	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Ldfy;Ljava/util/function/BiConsumer;)Lakr;	a	create
		p	1		block
		p	2		writer
	m	(Ljava/util/function/Consumer;)Loh;	a	updateTextures
		p	1		texturesConsumer
	m	(Ljava/util/function/Function;Lod;)Loh$a;	a	createDefault
		p	0		texturesGetter
		p	1		model
	m	(Ljava/util/function/Function;Lod;Ldfy;)Loh;	a	lambda$createDefault$0
		p	2		block
	m	()Lof;	b	getMapping
	f	Lof;	A	mapping
	f	Lod;	B	template
	f	Loh$a;	a	CUBE
	f	Loh$a;	b	CUBE_INNER_FACES
	f	Loh$a;	c	CUBE_MIRRORED
	f	Loh$a;	d	COLUMN
	f	Loh$a;	e	COLUMN_HORIZONTAL
	f	Loh$a;	f	CUBE_TOP_BOTTOM
	f	Loh$a;	g	CUBE_TOP
	f	Loh$a;	h	ORIENTABLE_ONLY_TOP
	f	Loh$a;	i	ORIENTABLE
	f	Loh$a;	j	CARPET
	f	Loh$a;	k	FLOWERBED_1
	f	Loh$a;	l	FLOWERBED_2
	f	Loh$a;	m	FLOWERBED_3
	f	Loh$a;	n	FLOWERBED_4
	f	Loh$a;	o	GLAZED_TERRACOTTA
	f	Loh$a;	p	CORAL_FAN
	f	Loh$a;	q	PARTICLE_ONLY
	f	Loh$a;	r	ANVIL
	f	Loh$a;	s	LEAVES
	f	Loh$a;	t	LANTERN
	f	Loh$a;	u	HANGING_LANTERN
	f	Loh$a;	v	SEAGRASS
	f	Loh$a;	w	COLUMN_ALT
	f	Loh$a;	x	COLUMN_HORIZONTAL_ALT
	f	Loh$a;	y	TOP_BOTTOM_WITH_WALL
	f	Loh$a;	z	COLUMN_WITH_WALL
c	oh$a	oh$a
	m	(Ljava/util/function/Consumer;Ldfy;)Loh;	a	lambda$updateTexture$0
		p	2		block
	m	(Ldfy;Ljava/util/function/BiConsumer;)Lakr;	create	create
		p	1		block
		p	2		writer
	m	(Ldfy;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lakr;	createWithSuffix	createWithSuffix
		p	1		block
		p	2		suffix
		p	3		writer
	m	(Ldfy;)Loh;	get	get
		p	1		block
	m	(Ljava/util/function/Consumer;)Loh$a;	updateTexture	updateTexture
		p	1		consumer
c	ol	ol
	m	()Lcul;	a	getResult
	m	(Ldcv;)Lakr;	a	getDefaultRecipeId
		p	0		item
	m	(Ljava/lang/String;)Lol;	a	group
		p	1		group
	m	(Ljava/lang/String;Lao;)Lol;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lom;)Lcyo;	a	determineBookCategory
		p	0		category
	m	(Lon;)V	a	save
		p	1		exporter
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lon;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipePath
	f	Lakr;	a	ROOT_RECIPE_ADVANCEMENT
c	ol$1	ol$1
	f	[I	a	$SwitchMap$net$minecraft$data$recipes$RecipeCategory
c	om	om
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getFolderName
	m	()[Lom;	b	$values
	f	Lom;	a	BUILDING_BLOCKS
	f	Lom;	b	DECORATIONS
	f	Lom;	c	REDSTONE
	f	Lom;	d	TRANSPORTATION
	f	Lom;	e	TOOLS
	f	Lom;	f	COMBAT
	f	Lom;	g	FOOD
	f	Lom;	h	BREWING
	f	Lom;	i	MISC
	f	Ljava/lang/String;	j	recipeFolderName
	f	[Lom;	k	$VALUES
c	on	on
	m	()Laf$a;	a	advancement
	m	(Lakr;Lcyz;Lag;)V	a	accept
		p	1		recipeId
		p	2		recipe
		p	3		advancement
c	oo	oo
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Lcs;	a	lambda$inventoryTrigger$23
	m	(Lawu;)Lao;	a	has
		p	0		tag
	m	(Lcpl;Llx;Lon;Llx$b;Ldfy;)V	a	lambda$generateRecipes$7
		p	3		variant
		p	4		block
	m	(Lcpl;Lon;Ldfy;Ldfy;)V	a	lambda$waxRecipes$4
		p	2		unwaxed
		p	3		waxed
	m	(Lcul;Lcul;)Z	a	lambda$colorBlockWithDye$3
		p	1		dyeable
	m	(Ldcv;)Lao;	a	has
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	a	doorBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Ljava/lang/String;	a	getConversionRecipeName
		p	0		to
		p	1		from
	m	(Ldfy;)Lao;	a	insideOf
		p	0		block
	m	(Ldh$d;Ldcv;)Lao;	a	has
		p	0		count
		p	1		item
	m	(Llx;Llx$b;)Ldfy;	a	getBaseBlock
		p	0		family
		p	1		variant
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
		p	2		registryLookup
	m	(Lly;Ljo$a;Lag;)Ljava/util/concurrent/CompletableFuture;	a	buildAdvancement
		p	1		cache
		p	2		registryLookup
		p	3		advancement
	m	(Lol;Llx$b;Ljava/lang/String;)V	a	lambda$generateRecipes$5
		p	2		group
	m	(Lom;Ldcv;Lcyw;)Lol;	a	slabBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;)V	a	buildRecipes
		p	1		exporter
	m	(Lon;Lcpl;)V	a	generateForEnabledBlockFamilies
		p	0		exporter
		p	1		enabledFeatures
	m	(Lon;Lcpl;Llx;)V	a	lambda$generateForEnabledBlockFamilies$2
		p	2		family
	m	(Lon;Lcul;Lakr;)V	a	trimSmithing
		p	0		exporter
		p	1		template
		p	2		recipeId
	m	(Lon;Lcul;Lom;Lcul;)V	a	netheriteSmithing
		p	0		exporter
		p	1		input
		p	2		category
		p	3		result
	m	(Lon;Lcze;Lcyh$a;Ljava/util/List;Lom;Ldcv;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
		p	0		exporter
		p	1		serializer
		p	2		recipeFactory
		p	3		inputs
		p	4		category
		p	5		output
		p	6		experience
		p	7		cookingTime
		p	8		group
		p	9		suffix
	m	(Lon;Ldcv;Lawu;)V	a	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Lon;Ldcv;Lawu;I)V	a	planksFromLog
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Lon;Ldcv;Lcyw;)V	a	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Lon;Ldcv;Ldcv;)V	a	woodFromLogs
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Ldcv;Ldcv;Ljava/lang/String;)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
	m	(Lon;Ldcv;Ldcv;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
		p	0		exporter
		p	1		output
		p	2		input
		p	3		group
		p	4		outputCount
	m	(Lon;Ldfy;Ldfy;)V	a	grate
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Ljava/lang/String;Lcze;Lcyh$a;I)V	a	cookRecipes
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		recipeFactory
		p	4		cookingTime
	m	(Lon;Ljava/lang/String;Lcze;Lcyh$a;ILdcv;Ldcv;F)V	a	simpleCookingRecipe
		p	0		exporter
		p	1		cooker
		p	2		serializer
		p	3		recipeFactory
		p	4		cookingTime
		p	5		items
		p	6		output
		p	7		experience
	m	(Lon;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V	a	colorBlockWithDye
		p	0		exporter
		p	1		dyes
		p	2		dyeables
		p	3		group
	m	(Lon;Ljava/util/List;Lom;Ldcv;FILjava/lang/String;)V	a	oreSmelting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Lon;Llx;Lcpl;)V	a	generateRecipes
		p	0		exporter
		p	1		family
		p	2		enabledFeatures
	m	(Lon;Lom;Ldcv;Ldcv;)V	a	twoByTwoPacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lon;Lom;Ldcv;Ldcv;I)V	a	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		count
	m	(Lon;Lom;Ldcv;Ldcv;Ljava/lang/String;)V	a	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
		p	4		criterionName
	m	(Lon;Lom;Ldcv;Lom;Ldcv;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
	m	(Lon;Lom;Ldcv;Lom;Ldcv;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
	m	(Lon;Lom;Ldcv;Lom;Ldcv;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		compactingId
		p	6		compactingGroup
		p	7		reverseId
		p	8		reverseGroup
	m	([Lcs$a;)Lao;	a	inventoryTrigger
		p	0		predicates
	m	([Lcs;)Lao;	a	inventoryTrigger
		p	0		predicates
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$1
	m	(Ldcv;)Ljava/lang/String;	b	getHasName
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	b	stairBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	b	lambda$static$22
		p	0		output
		p	1		input
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletionStage;	b	lambda$run$0
		p	2		registryLookup
	m	(Lom;Ldcv;Lcyw;)Lop;	b	chiseledBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;Lcpl;)V	b	waxRecipes
		p	0		exporter
		p	1		enabledFeatures
	m	(Lon;Ldcv;Lawu;I)V	b	planksFromLogs
		p	0		exporter
		p	1		output
		p	2		input
		p	3		count
	m	(Lon;Ldcv;Ldcv;)V	b	woodenBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Ldfy;Ldfy;)V	b	copperBulb
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Ljava/util/List;Lom;Ldcv;FILjava/lang/String;)V	b	oreBlasting
		p	0		exporter
		p	1		inputs
		p	2		category
		p	3		output
		p	4		experience
		p	5		cookingTime
		p	6		group
	m	(Lon;Lom;Ldcv;Ldcv;)V	b	threeByThreePacker
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Lon;Lom;Ldcv;Lom;Ldcv;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
		p	0		exporter
		p	1		reverseCategory
		p	2		baseItem
		p	3		compactingCategory
		p	4		compactItem
		p	5		reverseId
		p	6		reverseGroup
	m	(Ldcv;)Ljava/lang/String;	c	getItemName
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	c	trapdoorBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	c	lambda$static$21
		p	0		output
		p	1		input
	m	(Lom;Ldcv;Lcyw;)Lol;	c	pressurePlateBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;Ldcv;Ldcv;)V	c	chestBoat
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	c	slab
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;)Ljava/lang/String;	d	getSimpleRecipeName
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	d	buttonBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	d	lambda$static$20
		p	0		output
		p	1		input
	m	(Lom;Ldcv;Lcyw;)Lol;	d	wallBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;Ldcv;Ldcv;)V	d	pressurePlate
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	d	wall
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;)Ljava/lang/String;	e	getSmeltingRecipeName
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	e	fenceBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	e	lambda$static$19
		p	0		output
		p	1		input
	m	(Lom;Ldcv;Lcyw;)Lol;	e	polishedBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;Ldcv;Ldcv;)V	e	hangingSign
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	e	polished
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;)Ljava/lang/String;	f	getBlastingRecipeName
		p	0		item
	m	(Ldcv;Lcyw;)Lol;	f	fenceGateBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	f	lambda$static$18
		p	0		output
		p	1		input
	m	(Lom;Ldcv;Lcyw;)Lop;	f	cutBuilder
		p	0		category
		p	1		output
		p	2		input
	m	(Lon;Ldcv;Ldcv;)V	f	carpet
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	f	cut
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;)Ljava/lang/String;	g	lambda$generateRecipes$6
	m	(Ldcv;Lcyw;)Lol;	g	signBuilder
		p	0		output
		p	1		input
	m	(Ldcv;Ldcv;)Lol;	g	lambda$static$17
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	g	bedFromPlanksAndWool
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	g	chiseled
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;Ldcv;)Lol;	h	lambda$static$16
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	h	banner
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	h	mosaicBuilder
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;Ldcv;)Lol;	i	lambda$static$15
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	i	stainedGlassFromGlassAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Lon;Lom;Ldcv;Ldcv;)V	i	stonecutterResultFromBase
		p	0		exporter
		p	1		category
		p	2		output
		p	3		input
	m	(Ldcv;Ldcv;)Lol;	j	lambda$static$14
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	j	stainedGlassPaneFromStainedGlass
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ldcv;Ldcv;)Lol;	k	lambda$static$13
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	k	stainedGlassPaneFromGlassPaneAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ldcv;Ldcv;)Lol;	l	lambda$static$12
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	l	coloredTerracottaFromTerracottaAndDye
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ldcv;Ldcv;)Lol;	m	lambda$static$11
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	m	concretePowder
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ldcv;Ldcv;)Lol;	n	lambda$static$10
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	n	candle
		p	0		exporter
		p	1		output
		p	2		input
	m	(Ldcv;Ldcv;)Lol;	o	lambda$static$9
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	o	copySmithingTemplate
		p	0		exporter
		p	1		template
		p	2		resource
	m	(Ldcv;Ldcv;)Lol;	p	lambda$static$8
		p	0		output
		p	1		input
	m	(Lon;Ldcv;Ldcv;)V	p	smeltingResultFromBase
		p	0		exporter
		p	1		output
		p	2		input
	f	Lmc$a;	d	recipePathProvider
	f	Lmc$a;	e	advancementPathProvider
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	f	Ljava/util/Map;	g	SHAPE_BUILDERS
c	oo$1	oo$1
	m	()Laf$a;	a	advancement
	m	(Lakr;Lcyz;Lag;)V	a	accept
		p	1		recipeId
		p	2		recipe
		p	3		advancement
	f	Ljava/util/Set;	a	val$allRecipes
	f	Ljava/util/List;	b	val$tasks
	f	Lly;	c	val$cache
	f	Ljo$a;	d	val$registries
	f	Loo;	e	this$0
c	op	op
	m	(Lom;Ldcv;I)V	<init>	<init>
		p	1		category
		p	2		output
		p	3		count
	m	()Lcul;	a	getResult
	m	(Lakr;)Lczi;	a	ensureValid
		p	1		recipeId
	m	(Ljava/lang/Character;Lawu;)Lop;	a	define
		p	1		c
		p	2		tag
	m	(Ljava/lang/Character;Lcyw;)Lop;	a	define
		p	1		c
		p	2		ingredient
	m	(Ljava/lang/Character;Ldcv;)Lop;	a	define
		p	1		c
		p	2		itemProvider
	m	(Ljava/lang/String;)Lol;	a	group
		p	1		group
	m	(Ljava/lang/String;Lao;)Lol;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lom;Ldcv;)Lop;	a	shaped
		p	0		category
		p	1		output
	m	(Lom;Ldcv;I)Lop;	a	shaped
		p	0		category
		p	1		output
		p	2		count
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Z)Lop;	a	showNotification
		p	1		showNotification
	m	(Ljava/lang/String;)Lop;	b	pattern
		p	1		patternStr
	m	(Ljava/lang/String;Lao;)Lop;	b	unlockedBy
	m	(Ljava/lang/String;)Lop;	c	group
	f	Lom;	b	category
	f	Lcul;	c	result
	f	I	d	count
	f	Ljava/util/List;	e	rows
	f	Ljava/util/Map;	f	key
	f	Ljava/util/Map;	g	criteria
	f	Ljava/lang/String;	h	group
	f	Z	i	showNotification
c	oq	oq
	m	(Lom;Ldcv;I)V	<init>	<init>
		p	1		category
		p	2		output
		p	3		count
	m	()Lcul;	a	getResult
	m	(Lakr;)V	a	ensureValid
		p	1		recipeId
	m	(Lawu;)Loq;	a	requires
		p	1		tag
	m	(Lcyw;)Loq;	a	requires
		p	1		ingredient
	m	(Lcyw;I)Loq;	a	requires
		p	1		ingredient
		p	2		size
	m	(Ldcv;I)Loq;	a	requires
		p	1		itemProvider
		p	2		size
	m	(Ljava/lang/String;)Lol;	a	group
		p	1		group
	m	(Ljava/lang/String;Lao;)Lol;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lom;Ldcv;)Loq;	a	shapeless
		p	0		category
		p	1		output
	m	(Lom;Ldcv;I)Loq;	a	shapeless
		p	0		category
		p	1		output
		p	2		count
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ldcv;)Loq;	b	requires
		p	1		itemProvider
	m	(Ljava/lang/String;)Loq;	b	group
	m	(Ljava/lang/String;Lao;)Loq;	b	unlockedBy
	f	Lom;	b	category
	f	Lcul;	c	result
	f	I	d	count
	f	Ljv;	e	ingredients
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
c	or	or
	m	(Lom;Lcyn;Ldcv;Lcyw;FILcyh$a;)V	<init>	<init>
		p	1		category
		p	2		cookingCategory
		p	3		output
		p	4		input
		p	5		experience
		p	6		cookingTime
		p	7		recipeFactory
	m	()Lcul;	a	getResult
	m	(Lakr;)V	a	ensureValid
		p	1		recipeId
	m	(Lcyw;Lom;Ldcv;FI)Lor;	a	campfireCooking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Lcyw;Lom;Ldcv;FILcze;Lcyh$a;)Lor;	a	generic
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
		p	5		serializer
		p	6		recipeFactory
	m	(Lcze;Ldcv;)Lcyn;	a	determineRecipeCategory
		p	0		serializer
		p	1		output
	m	(Ljava/lang/String;)Lol;	a	group
		p	1		group
	m	(Ljava/lang/String;Lao;)Lol;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lcyw;Lom;Ldcv;FI)Lor;	b	blasting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Ldcv;)Lcyn;	b	determineSmeltingRecipeCategory
		p	0		output
	m	(Ljava/lang/String;)Lor;	b	group
	m	(Ljava/lang/String;Lao;)Lor;	b	unlockedBy
	m	(Lcyw;Lom;Ldcv;FI)Lor;	c	smelting
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	m	(Ldcv;)Lcyn;	c	determineBlastingRecipeCategory
		p	0		output
	m	(Lcyw;Lom;Ldcv;FI)Lor;	d	smoking
		p	0		input
		p	1		category
		p	2		output
		p	3		experience
		p	4		cookingTime
	f	Lom;	b	category
	f	Lcyn;	c	bookCategory
	f	Lcul;	d	result
	f	Lcyw;	e	ingredient
	f	F	f	experience
	f	I	g	cookingTime
	f	Ljava/util/Map;	h	criteria
	f	Ljava/lang/String;	i	group
	f	Lcyh$a;	j	factory
c	os	os
	m	(Lom;Lczo$a;Lcyw;Ldcv;I)V	<init>	<init>
		p	1		category
		p	2		recipeFactory
		p	3		input
		p	4		output
		p	5		count
	m	()Lcul;	a	getResult
	m	(Lakr;)V	a	ensureValid
		p	1		recipeId
	m	(Lcyw;Lom;Ldcv;)Los;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
	m	(Lcyw;Lom;Ldcv;I)Los;	a	stonecutting
		p	0		input
		p	1		category
		p	2		output
		p	3		count
	m	(Ljava/lang/String;)Lol;	a	group
		p	1		group
	m	(Ljava/lang/String;Lao;)Lol;	a	unlockedBy
		p	1		name
		p	2		criterion
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Ljava/lang/String;)Los;	b	group
	m	(Ljava/lang/String;Lao;)Los;	b	unlockedBy
	f	Lom;	b	category
	f	Lcul;	c	result
	f	Lcyw;	d	ingredient
	f	I	e	count
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
	f	Lczo$a;	h	factory
c	ot	ot
	m	(Lcyw;Lcyw;Lcyw;Lom;Lcul;)V	<init>	<init>
		p	1		template
		p	2		base
		p	3		addition
		p	4		category
		p	5		result
	m	(Lakr;)V	a	ensureValid
		p	1		recipeId
	m	(Lcyw;Lcyw;Lcyw;Lom;Lcul;)Lot;	a	smithing
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
		p	4		result
	m	(Ljava/lang/String;Lao;)Lot;	a	unlocks
		p	1		name
		p	2		criterion
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	m	(Lon;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lcyw;	a	template
	f	Lcyw;	b	base
	f	Lcyw;	c	addition
	f	Lom;	d	category
	f	Lcul;	e	result
	f	Ljava/util/Map;	f	criteria
c	ou	ou
	m	(Lom;Lcyw;Lcyw;Lcyw;)V	<init>	<init>
		p	1		category
		p	2		template
		p	3		base
		p	4		addition
	m	(Lakr;)V	a	ensureValid
		p	1		recipeId
	m	(Lcyw;Lcyw;Lcyw;Lom;)Lou;	a	smithingTrim
		p	0		template
		p	1		base
		p	2		addition
		p	3		category
	m	(Ljava/lang/String;Lao;)Lou;	a	unlocks
		p	1		name
		p	2		criterion
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		recipeId
	f	Lom;	a	category
	f	Lcyw;	b	template
	f	Lcyw;	c	base
	f	Lcyw;	d	addition
	f	Ljava/util/Map;	e	criteria
c	ov	ov
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		recipeFactory
	m	(Ljava/util/function/Function;)Lov;	a	special
		p	0		recipeFactory
	m	(Lon;Lakr;)V	a	save
		p	1		exporter
		p	2		id
	m	(Lon;Ljava/lang/String;)V	a	save
		p	1		exporter
		p	2		id
	f	Ljava/util/function/Function;	a	factory
c	ox	ox
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lon;)V	a	buildRecipes
		p	1		exporter
c	oy	oy
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lcul;)Loy$a;	a	lambda$smithingTrims$1
		p	0		template
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
		p	2		registryLookup
	m	(Lon;)V	a	buildRecipes
		p	1		exporter
	m	(Lon;Loy$a;)V	a	lambda$buildRecipes$0
		p	1		template
	m	()Ljava/util/stream/Stream;	b	smithingTrims
	f	Lcom/google/common/collect/ImmutableList;	d	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	k	EMERALD_SMELTABLES
c	oy$a	oy$a
	m	()Lcul;	a	template
	m	()Lakr;	b	id
	f	Lcul;	a	template
	f	Lakr;	b	id
c	pa	pa
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$4
	m	(Lakq;Lly;Lcom/mojang/serialization/DynamicOps;Lakm$c;Ljo$b;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$5
		p	5		wrapper
	m	(Ljava/nio/file/Path;Lcom/mojang/serialization/DataResult$Error;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpValue$7
	m	(Ljava/nio/file/Path;Lly;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
		p	0		path
		p	1		cache
		p	2		json
		p	3		encoder
		p	4		value
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/nio/file/Path;Lcom/google/gson/JsonElement;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpValue$6
	m	(Lly;Ljo$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
		p	2		lookup
	m	(Lly;Ljo$a;Lcom/mojang/serialization/DynamicOps;Lakm$c;)Ljava/util/Optional;	a	dumpRegistryCap
		p	1		writer
		p	2		lookup
		p	3		ops
		p	4		registry
	m	(Lmc$a;Lly;Lcom/mojang/serialization/DynamicOps;Lakm$c;Ljm$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$3
		p	4		entry
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$1
	m	(Lly;Ljo$a;Lcom/mojang/serialization/DynamicOps;Lakm$c;)Ljava/util/stream/Stream;	b	lambda$run$0
		p	4		entry
	f	Lmc;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
c	pb	pb
	m	(Ljava/util/concurrent/CompletableFuture;Lkc;)Ljava/util/concurrent/CompletableFuture;	a	createLookup
		p	0		registriesFuture
		p	1		builder
	m	(Lje$a;Lakm$c;)V	a	lambda$createLookup$0
		p	1		entry
	m	(Ljo$a;)Ljo$b;	a	lambda$createLookup$2
	m	(Lkc;Ljo$a;)Lkc$g;	a	lambda$createLookup$3
		p	1		lookup
	m	(Ljo$a;)Ljo$b;	b	lambda$createLookup$1
c	pc	pc
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	createLookup
		p	0		registryLookupFuture
	f	Lkc;	a	BUILDER
c	pd	net/minecraft/data/registries/VanillaRegistries
	m	()Ljo$a;	a	createLookup
	m	(Leiv;)Z	a	validatePlacedFeature
		p	0		placedFeature
	m	(Ljm$c;Leiv;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$1
		p	1		value
	m	(Ljn;Lakr;Lakq;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$0
		p	2		key
	m	(Ljn;Lakr;Ljm$c;Ljm;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$2
		p	3		placedFeature
	m	(Ljn;Ljm$c;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$3
		p	1		biome
	m	(Ljn;Ljo;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		placedFeatureLookup
		p	1		biomeLookup
	m	(Ljo$a;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
		p	0		wrapperLookup
	f	Lkc;	a	BUILDER
c	pf	net/minecraft/data/structures/DebugReportNBT
	m	(Lmc;Ljava/util/Collection;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	0		inputPath
		p	1		filePath
	m	(Ljava/nio/file/Path;Lly;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
		p	0		writer
		p	1		path
		p	2		content
	m	(Lly;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
		p	0		writer
		p	1		inputPath
		p	2		filename
		p	3		outputPath
	m	(Lly;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	3		path
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$3
	m	(Lly;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	lambda$run$1
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/Iterable;	e	inputFolders
	f	Lmc;	f	output
c	pg	pg
	m	(Ljava/lang/String;)V	a	updateInDirectory
		p	0		directory
	m	(Ljava/nio/file/Path;)V	a	lambda$updateInDirectory$1
		p	0		path
	m	([Ljava/lang/String;)V	a	main
		p	0		args
	m	(Ljava/nio/file/Path;)Z	b	lambda$updateInDirectory$0
		p	0		path
c	ph	ph
	m	(Lmc;Ljava/lang/Iterable;)V	<init>	<init>
		p	1		output
		p	2		paths
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$3
	m	(Ljava/lang/String;Lub;)Lub;	a	applyFilters
		p	1		key
		p	2		compound
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lph$c;	a	readStructure
		p	1		path
		p	2		name
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
		p	1		root
		p	2		file
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lly;Ljava/nio/file/Path;)V	a	lambda$run$1
	m	(Ljava/nio/file/Path;Lly;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(Ljava/nio/file/Path;Lly;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
		p	4		path
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
		p	0		future
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Lph$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
		p	1		cache
		p	2		data
		p	3		root
	m	(Lph$a;)Lph;	a	addFilter
		p	1		tweaker
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lmc;	e	output
	f	Ljava/lang/Iterable;	f	inputFolders
	f	Ljava/util/List;	g	filters
c	ph$a	ph$a
	m	(Ljava/lang/String;Lub;)Lub;	apply	apply
		p	1		name
		p	2		nbt
c	ph$b	ph$b
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		path
		p	2		cause
c	ph$c	ph$c
	m	(Ljava/lang/String;[BLcom/google/common/hash/HashCode;)V	<init>	<init>
		p	1		name
		p	2		bytes
	m	()Ljava/lang/String;	a	name
	m	()[B	b	payload
	m	()Lcom/google/common/hash/HashCode;	c	hash
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Lcom/google/common/hash/HashCode;	c	hash
c	pi	pi
	m	(Ljava/lang/String;Lub;)Lub;	a	update
		p	0		name
		p	1		nbt
	m	(Ljava/lang/String;Lub;)Lub;	apply	apply
		p	1		name
		p	2		nbt
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	PREFIX
c	pk	pk
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		dataGenerator
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pl	pl
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pm	pm
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pn	pn
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		maxChainedNeighborUpdates
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	po	po
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljava/util/Set;Ljm$c;)Z	a	lambda$tooltipOrder$0
		p	1		entry
	m	(Ljo$a;[Lakq;)V	a	tooltipOrder
		p	1		registryLookup
		p	2		enchantments
c	pp	pp
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lbsx;)Lakq;	a	lambda$new$0
		p	0		entityType
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pq	pq
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pr	pr
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Lepd;)Lakq;	a	lambda$new$0
		p	0		fluid
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	ps	ps
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
	f	Ljava/util/List;	d	VIBRATIONS_EXCEPT_FLAP
c	pt	pt
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pu	pu
	m	(Lmc;Lakq;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
		p	5		valueToKey
	m	(Lmc;Lakq;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		valueToKey
	m	(Lawu;)Lpu$a;	a	tag
	m	(Lawu;)Lpz$b;	b	tag
		p	1		tag
	f	Ljava/util/function/Function;	d	keyExtractor
c	pu$a	pu$a
	m	(Lawr;Ljava/util/function/Function;)V	<init>	<init>
		p	1		builder
		p	2		valueToKey
	m	(Lawu;)Lpu$a;	a	addTag
	m	(Ljava/lang/Object;)Lpu$a;	a	add
		p	1		value
	m	([Ljava/lang/Object;)Lpu$a;	a	add
		p	1		values
	m	(Lawu;)Lpz$b;	b	addTag
		p	1		identifiedTag
	f	Ljava/util/function/Function;	a	keyExtractor
c	pv	pv
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		parentTagLookupFuture
		p	4		blockTagLookupFuture
	m	(Lawu;Lawu;)V	a	copy
		p	1		blockTag
		p	2		itemTag
	m	(Lcul;)Lakq;	a	lambda$new$1
		p	0		item
	m	(Ljo$a;Lpz$c;)Ljo$a;	a	lambda$createContentsProvider$4
		p	1		lookup
		p	2		blockTags
	m	(Lpz$c;Lawu;Lawu;)V	a	lambda$createContentsProvider$3
		p	2		blockTag
		p	3		itemTag
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Lcul;)Lakq;	b	lambda$new$0
		p	0		item
	m	(Lawu;)Ljava/lang/IllegalStateException;	d	lambda$createContentsProvider$2
	f	Ljava/util/concurrent/CompletableFuture;	d	blockTags
	f	Ljava/util/Map;	g	tagsToCopy
c	pw	pw
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	px	px
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	py	py
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	pz	pz
	m	(Lmc;Lakq;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
	m	(Lmc;Lakq;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryRef
		p	3		registryLookupFuture
		p	4		parentTagLookupFuture
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Lakr;)Lawr;	a	lambda$getOrCreateRawBuilder$8
		p	0		id
	m	(Lawu;)Ljava/util/Optional;	a	lambda$contentsGetter$9
		p	1		tag
	m	(Ljava/lang/Void;)Lpz$c;	a	lambda$contentsGetter$10
		p	1		void_
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Laws;)Z	a	lambda$run$4
		p	2		tagEntry
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lly;Lpz$a;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
	m	(Ljo$a;Lpz$c;)Lpz$a;	a	lambda$run$1
		p	0		lookup
		p	1		parent
	m	(Ljo$b;Lakr;)Z	a	lambda$run$2
		p	2		id
	m	(Lly;)Ljava/util/concurrent/CompletableFuture;	a	run
		p	1		writer
	m	(Lly;Lpz$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$7
		p	2		info
	m	(Lpz$a;Lakr;)Z	a	lambda$run$3
		p	2		id
	m	()Ljava/util/concurrent/CompletableFuture;	b	createContentsProvider
	m	(Lawu;)Lpz$b;	b	tag
		p	1		tag
	m	(Ljo$a;)Ljo$a;	b	lambda$createContentsProvider$11
		p	1		lookup
	m	()Ljava/util/concurrent/CompletableFuture;	c	contentsGetter
	m	(Lawu;)Lawr;	c	getOrCreateRawBuilder
		p	1		tag
	m	(Ljo$a;)Ljo$a;	c	lambda$run$0
		p	1		registryLookupFuture
	f	Ljava/util/concurrent/CompletableFuture;	d	lookupProvider
	f	Lmc$a;	e	pathProvider
	f	Lakq;	f	registryKey
	f	Ljava/util/concurrent/CompletableFuture;	g	contentsDone
	f	Ljava/util/concurrent/CompletableFuture;	h	parentProvider
	f	Ljava/util/Map;	i	builders
c	pz$a	pz$a
	m	()Ljo$a;	a	contents
	m	()Lpz$c;	b	parent
	f	Ljo$a;	a	contents
	f	Lpz$c;	b	parent
c	pz$b	pz$b
	m	(Lawr;)V	<init>	<init>
		p	1		builder
	m	(Lakq;)Lpz$b;	a	add
		p	1		key
	m	(Lakr;)Lpz$b;	a	addOptional
		p	1		id
	m	(Ljava/util/List;)Lpz$b;	a	addAll
		p	1		keys
	m	([Lakq;)Lpz$b;	a	add
		p	1		keys
	m	(Lakr;)Lpz$b;	b	addOptionalTag
		p	1		id
	m	(Lawu;)Lpz$b;	b	addTag
		p	1		identifiedTag
	f	Lawr;	a	builder
c	pz$c	pz$c
	m	(Lawu;)Ljava/util/Optional;	a	lambda$empty$0
		p	0		tag
	m	(Lawu;)Z	contains	contains
		p	1		tag
c	qa	qa
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	qb	qb
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	qc	qc
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ldfy;)Z	a	lambda$addTags$1
		p	0		block
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
	m	(Ldfy;)Lakq;	b	lambda$new$0
		p	0		block
c	qd	qd
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	qe	qe
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
		p	3		blockTagLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	qf	qf
	m	(Lmc;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		output
		p	2		registryLookupFuture
	m	(Ljo$a;)V	a	addTags
		p	1		lookup
c	qh	net/minecraft/data/worldgen/AncientCityStructurePieces
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
c	qi	net/minecraft/data/worldgen/AncientCityStructurePools
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	qj	net/minecraft/data/worldgen/WorldGenFeatureBastionBridge
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	qk	net/minecraft/data/worldgen/WorldGenFeatureBastionHoglinStable
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	ql	net/minecraft/data/worldgen/WorldGenFeatureBastionUnits
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	qm	net/minecraft/data/worldgen/WorldGenFeatureBastionPieces
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
c	qn	net/minecraft/data/worldgen/WorldGenFeatureBastionExtra
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	qo	net/minecraft/data/worldgen/WorldGenFeatureBastionTreasure
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	qp	net/minecraft/data/worldgen/BiomeSettings
	m	(Lddx$a;)V	A	addLushCavesVegetationFeatures
		p	0		builder
	m	(Lddx$a;)V	B	addLushCavesSpecialOres
		p	0		builder
	m	(Lddx$a;)V	C	addMountainTrees
		p	0		builder
	m	(Lddx$a;)V	D	addMountainForestTrees
		p	0		builder
	m	(Lddx$a;)V	E	addJungleTrees
		p	0		builder
	m	(Lddx$a;)V	F	addSparseJungleTrees
		p	0		builder
	m	(Lddx$a;)V	G	addBadlandsTrees
		p	0		builder
	m	(Lddx$a;)V	H	addSnowyTrees
		p	0		builder
	m	(Lddx$a;)V	I	addJungleGrass
		p	0		builder
	m	(Lddx$a;)V	J	addSavannaGrass
		p	0		builder
	m	(Lddx$a;)V	K	addShatteredSavannaGrass
		p	0		builder
	m	(Lddx$a;)V	L	addSavannaExtraGrass
		p	0		builder
	m	(Lddx$a;)V	M	addBadlandGrass
		p	0		builder
	m	(Lddx$a;)V	N	addForestFlowers
		p	0		builder
	m	(Lddx$a;)V	O	addForestGrass
		p	0		builder
	m	(Lddx$a;)V	P	addSwampVegetation
		p	0		builder
	m	(Lddx$a;)V	Q	addMangroveSwampVegetation
		p	0		builder
	m	(Lddx$a;)V	R	addMushroomFieldVegetation
		p	0		builder
	m	(Lddx$a;)V	S	addPlainVegetation
		p	0		builder
	m	(Lddx$a;)V	T	addDesertVegetation
		p	0		builder
	m	(Lddx$a;)V	U	addGiantTaigaVegetation
		p	0		builder
	m	(Lddx$a;)V	V	addDefaultFlowers
		p	0		builder
	m	(Lddx$a;)V	W	addCherryGroveVegetation
		p	0		builder
	m	(Lddx$a;)V	X	addMeadowVegetation
		p	0		builder
	m	(Lddx$a;)V	Y	addWarmFlowers
		p	0		builder
	m	(Lddx$a;)V	Z	addDefaultGrass
		p	0		builder
	m	(Lddx$a;)V	a	addDefaultCarversAndLakes
		p	0		builder
	m	(Lddx$a;Z)V	a	addDefaultOres
		p	0		builder
		p	1		largeCopperOreBlob
	m	(Ldei$a;)V	a	farmAnimals
		p	0		builder
	m	(Ldei$a;I)V	a	commonSpawns
		p	0		builder
		p	1		skeletonWeight
	m	(Ldei$a;II)V	a	warmOceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMinGroupSize
	m	(Ldei$a;III)V	a	oceanSpawns
		p	0		builder
		p	1		squidWeight
		p	2		squidMaxGroupSize
		p	3		codWeight
	m	(Ldei$a;IIIZ)V	a	monsters
		p	0		builder
		p	1		zombieWeight
		p	2		zombieVillagerWeight
		p	3		skeletonWeight
		p	4		drowned
	m	(Lddx$a;)V	aa	addTaigaGrass
		p	0		builder
	m	(Lddx$a;)V	ab	addPlainGrass
		p	0		builder
	m	(Lddx$a;)V	ac	addDefaultMushrooms
		p	0		builder
	m	(Lddx$a;)V	ad	addDefaultExtraVegetation
		p	0		builder
	m	(Lddx$a;)V	ae	addBadlandExtraVegetation
		p	0		builder
	m	(Lddx$a;)V	af	addJungleMelons
		p	0		builder
	m	(Lddx$a;)V	ag	addSparseJungleMelons
		p	0		builder
	m	(Lddx$a;)V	ah	addJungleVines
		p	0		builder
	m	(Lddx$a;)V	ai	addDesertExtraVegetation
		p	0		builder
	m	(Lddx$a;)V	aj	addSwampExtraVegetation
		p	0		builder
	m	(Lddx$a;)V	ak	addDesertExtraDecoration
		p	0		builder
	m	(Lddx$a;)V	al	addFossilDecoration
		p	0		builder
	m	(Lddx$a;)V	am	addColdOceanExtraVegetation
		p	0		builder
	m	(Lddx$a;)V	an	addDefaultSeagrass
		p	0		builder
	m	(Lddx$a;)V	ao	addLukeWarmKelp
		p	0		builder
	m	(Lddx$a;)V	ap	addDefaultSprings
		p	0		builder
	m	(Lddx$a;)V	aq	addFrozenSprings
		p	0		builder
	m	(Lddx$a;)V	ar	addIcebergs
		p	0		builder
	m	(Lddx$a;)V	as	addBlueIce
		p	0		builder
	m	(Lddx$a;)V	at	addSurfaceFreezing
		p	0		builder
	m	(Lddx$a;)V	au	addNetherDefaultOres
		p	0		builder
	m	(Lddx$a;)V	av	addAncientDebris
		p	0		builder
	m	(Lddx$a;)V	aw	addDefaultCrystalFormations
		p	0		builder
	m	(Lddx$a;)V	b	addDefaultMonsterRoom
		p	0		builder
	m	(Ldei$a;)V	b	caveSpawns
		p	0		builder
	m	(Lddx$a;)V	c	addDefaultUndergroundVariety
		p	0		builder
	m	(Ldei$a;)V	c	commonSpawns
		p	0		builder
	m	(Lddx$a;)V	d	addDripstone
		p	0		builder
	m	(Ldei$a;)V	d	plainsSpawns
		p	0		builder
	m	(Lddx$a;)V	e	addSculk
		p	0		builder
	m	(Ldei$a;)V	e	snowySpawns
		p	0		builder
	m	(Lddx$a;)V	f	addDefaultOres
		p	0		builder
	m	(Ldei$a;)V	f	desertSpawns
		p	0		builder
	m	(Lddx$a;)V	g	addExtraGold
		p	0		builder
	m	(Ldei$a;)V	g	dripstoneCavesSpawns
		p	0		builder
	m	(Lddx$a;)V	h	addExtraEmeralds
		p	0		builder
	m	(Ldei$a;)V	h	mooshroomSpawns
		p	0		builder
	m	(Lddx$a;)V	i	addInfestedStone
		p	0		builder
	m	(Ldei$a;)V	i	baseJungleSpawns
		p	0		builder
	m	(Lddx$a;)V	j	addDefaultSoftDisks
		p	0		builder
	m	(Ldei$a;)V	j	endSpawns
		p	0		builder
	m	(Lddx$a;)V	k	addSwampClayDisk
		p	0		builder
	m	(Lddx$a;)V	l	addMangroveSwampDisks
		p	0		builder
	m	(Lddx$a;)V	m	addMossyStoneBlock
		p	0		builder
	m	(Lddx$a;)V	n	addFerns
		p	0		builder
	m	(Lddx$a;)V	o	addRareBerryBushes
		p	0		builder
	m	(Lddx$a;)V	p	addCommonBerryBushes
		p	0		builder
	m	(Lddx$a;)V	q	addLightBambooVegetation
		p	0		builder
	m	(Lddx$a;)V	r	addBambooVegetation
		p	0		builder
	m	(Lddx$a;)V	s	addTaigaTrees
		p	0		builder
	m	(Lddx$a;)V	t	addGroveTrees
		p	0		builder
	m	(Lddx$a;)V	u	addWaterTrees
		p	0		builder
	m	(Lddx$a;)V	v	addBirchTrees
		p	0		builder
	m	(Lddx$a;)V	w	addOtherBirchTrees
		p	0		builder
	m	(Lddx$a;)V	x	addTallBirchTrees
		p	0		builder
	m	(Lddx$a;)V	y	addSavannaTrees
		p	0		builder
	m	(Lddx$a;)V	z	addShatteredSavannaTrees
		p	0		builder
c	qq	net/minecraft/data/worldgen/BootstrapContext
	m	(Lakq;)Ljn;	a	lookup
		p	1		registryRef
	m	(Lakq;Ljava/lang/Object;)Ljm$c;	a	register
		p	1		key
		p	2		value
	m	(Lakq;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljm$c;	a	register
		p	1		key
		p	2		value
		p	3		lifecycle
c	qr	net/minecraft/data/worldgen/WorldGenCarvers
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		carverRegisterable
	f	Lakq;	a	CAVE
	f	Lakq;	b	CAVE_EXTRA_UNDERGROUND
	f	Lakq;	c	CANYON
	f	Lakq;	d	NETHER_CAVE
c	qs	net/minecraft/data/worldgen/WorldGenFeatureDesertVillage
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	TERMINATORS_KEY
	f	Lakq;	c	ZOMBIE_TERMINATORS_KEY
c	qt	net/minecraft/data/worldgen/DimensionTypes
	m	(Lqq;)V	a	bootstrap
		p	0		dimensionTypeRegisterable
c	qu	net/minecraft/data/worldgen/NoiseData
	m	(Lqq;)V	a	bootstrap
		p	0		noiseParametersRegisterable
	m	(Lqq;ILakq;Lakq;Lakq;Lakq;)V	a	registerBiomeNoises
		p	0		noiseParametersRegisterable
		p	1		octaveOffset
		p	2		temperatureKey
		p	3		vegetationKey
		p	4		continentalnessKey
		p	5		erosionKey
	m	(Lqq;Lakq;ID[D)V	a	register
		p	0		noiseParametersRegisterable
		p	1		key
		p	2		firstOctave
		p	3		firstAmplitude
		p	5		amplitudes
	f	Leoh$a;	a	DEFAULT_SHIFT
c	qv	net/minecraft/data/worldgen/WorldGenFeaturePillagerOutpostPieces
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
c	qw	net/minecraft/data/worldgen/WorldGenFeatureVillagePlain
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	TERMINATORS_KEY
c	qx	net/minecraft/data/worldgen/WorldGenFeaturePieces
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		structurePoolsRegisterable
	m	(Lqq;Ljava/lang/String;Lelb;)V	a	register
		p	0		structurePoolsRegisterable
		p	1		id
		p	2		pool
	m	(Ljava/lang/String;)Lakq;	b	parseKey
		p	0		id
	f	Lakq;	a	EMPTY
c	qy	net/minecraft/data/worldgen/ProcessorLists
	m	(Lakq;I)Lemy;	a	trailsArchyLootProcessor
		p	0		lootTable
		p	1		limit
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		processorListRegisterable
	m	(Lqq;Lakq;Ljava/util/List;)V	a	register
		p	0		processorListRegisterable
		p	1		key
		p	2		processors
	f	Lakq;	A	ROOF
	f	Lakq;	B	HIGH_WALL
	f	Lakq;	C	HIGH_RAMPART
	f	Lakq;	D	FOSSIL_ROT
	f	Lakq;	E	FOSSIL_COAL
	f	Lakq;	F	FOSSIL_DIAMONDS
	f	Lakq;	G	ANCIENT_CITY_START_DEGRADATION
	f	Lakq;	H	ANCIENT_CITY_GENERIC_DEGRADATION
	f	Lakq;	I	ANCIENT_CITY_WALLS_DEGRADATION
	f	Lakq;	J	TRAIL_RUINS_HOUSES_ARCHAEOLOGY
	f	Lakq;	K	TRAIL_RUINS_ROADS_ARCHAEOLOGY
	f	Lakq;	L	TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY
	f	Lakq;	M	TRIAL_CHAMBERS_COPPER_BULB_DEGRADATION
	f	Lakq;	N	EMPTY
	f	Lakq;	a	ZOMBIE_PLAINS
	f	Lakq;	b	ZOMBIE_SAVANNA
	f	Lakq;	c	ZOMBIE_SNOWY
	f	Lakq;	d	ZOMBIE_TAIGA
	f	Lakq;	e	ZOMBIE_DESERT
	f	Lakq;	f	MOSSIFY_10_PERCENT
	f	Lakq;	g	MOSSIFY_20_PERCENT
	f	Lakq;	h	MOSSIFY_70_PERCENT
	f	Lakq;	i	STREET_PLAINS
	f	Lakq;	j	STREET_SAVANNA
	f	Lakq;	k	STREET_SNOWY_OR_TAIGA
	f	Lakq;	l	FARM_PLAINS
	f	Lakq;	m	FARM_SAVANNA
	f	Lakq;	n	FARM_SNOWY
	f	Lakq;	o	FARM_TAIGA
	f	Lakq;	p	FARM_DESERT
	f	Lakq;	q	OUTPOST_ROT
	f	Lakq;	r	BOTTOM_RAMPART
	f	Lakq;	s	TREASURE_ROOMS
	f	Lakq;	t	HOUSING
	f	Lakq;	u	SIDE_WALL_DEGRADATION
	f	Lakq;	v	STABLE_DEGRADATION
	f	Lakq;	w	BASTION_GENERIC_DEGRADATION
	f	Lakq;	x	RAMPART_DEGRADATION
	f	Lakq;	y	ENTRANCE_REPLACEMENT
	f	Lakq;	z	BRIDGE
c	qz	net/minecraft/data/worldgen/WorldGenFeatureVillageSavanna
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	TERMINATORS_KEY
	f	Lakq;	c	ZOMBIE_TERMINATORS_KEY
c	ra	net/minecraft/data/worldgen/WorldGenFeatureVillageSnowy
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	TERMINATORS_KEY
c	rb	net/minecraft/data/worldgen/StructureSets
	m	(Lqq;)V	a	bootstrap
		p	0		structureSetRegisterable
c	rc	net/minecraft/data/worldgen/Structures
	m	(Lbtq;)Lejy;	a	lambda$bootstrap$3
		p	0		spawnGroup
	m	(Lqq;)V	a	bootstrap
		p	0		structureRegisterable
	m	(Lbtq;)Lbtq;	b	lambda$bootstrap$2
		p	0		spawnGroup
	m	(Lbtq;)Lejy;	c	lambda$bootstrap$1
		p	0		spawnGroup
	m	(Lbtq;)Lbtq;	d	lambda$bootstrap$0
		p	0		spawnGroup
c	rd	net/minecraft/data/worldgen/SurfaceRuleData
	m	()Ldzp$o;	a	overworld
	m	(D)Ldzp$f;	a	surfaceNoiseAbove
		p	0		min
	m	(I)[Ldzp$o;	a	lambda$overworldLike$0
	m	(Ldfy;)Ldzp$o;	a	makeStateRule
		p	0		block
	m	(ZZZ)Ldzp$o;	a	overworldLike
		p	0		surface
		p	1		bedrockRoof
		p	2		bedrockFloor
	m	()Ldzp$o;	b	nether
	m	()Ldzp$o;	c	end
	m	()Ldzp$o;	d	air
	f	Ldzp$o;	A	SOUL_SAND
	f	Ldzp$o;	B	SOUL_SOIL
	f	Ldzp$o;	C	BASALT
	f	Ldzp$o;	D	BLACKSTONE
	f	Ldzp$o;	E	WARPED_WART_BLOCK
	f	Ldzp$o;	F	WARPED_NYLIUM
	f	Ldzp$o;	G	NETHER_WART_BLOCK
	f	Ldzp$o;	H	CRIMSON_NYLIUM
	f	Ldzp$o;	I	ENDSTONE
	f	Ldzp$o;	a	AIR
	f	Ldzp$o;	b	BEDROCK
	f	Ldzp$o;	c	WHITE_TERRACOTTA
	f	Ldzp$o;	d	ORANGE_TERRACOTTA
	f	Ldzp$o;	e	TERRACOTTA
	f	Ldzp$o;	f	RED_SAND
	f	Ldzp$o;	g	RED_SANDSTONE
	f	Ldzp$o;	h	STONE
	f	Ldzp$o;	i	DEEPSLATE
	f	Ldzp$o;	j	DIRT
	f	Ldzp$o;	k	PODZOL
	f	Ldzp$o;	l	COARSE_DIRT
	f	Ldzp$o;	m	MYCELIUM
	f	Ldzp$o;	n	GRASS_BLOCK
	f	Ldzp$o;	o	CALCITE
	f	Ldzp$o;	p	GRAVEL
	f	Ldzp$o;	q	SAND
	f	Ldzp$o;	r	SANDSTONE
	f	Ldzp$o;	s	PACKED_ICE
	f	Ldzp$o;	t	SNOW_BLOCK
	f	Ldzp$o;	u	MUD
	f	Ldzp$o;	v	POWDER_SNOW
	f	Ldzp$o;	w	ICE
	f	Ldzp$o;	x	WATER
	f	Ldzp$o;	y	LAVA
	f	Ldzp$o;	z	NETHERRACK
c	re	net/minecraft/data/worldgen/WorldGenFeatureVillageTaiga
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	TERMINATORS_KEY
c	rf	net/minecraft/data/worldgen/TerrainProvider
	m	(F)F	a	calculateMountainRidgeZeroContinentalnessPoint
	m	(FFF)F	a	mountainContinentalness
	m	(FFFF)F	a	calculateSlope
	m	(Lazq;FFFFFFLazq;)Laxp;	a	ridgeSpline
		p	0		ridgesFolded
		p	1		continentalness
		p	7		amplifier
	m	(Lazq;FLazq;)Laxp;	a	buildWeirdnessJaggednessSpline
		p	0		ridges
		p	2		amplifier
	m	(Lazq;FZLazq;)Laxp;	a	buildMountainRidgeSplineWithPoints
		p	0		ridgesFolded
		p	3		amplifier
	m	(Lazq;Lazq;FFFFFFZZLazq;)Laxp;	a	buildErosionOffsetSpline
		p	0		erosion
		p	1		ridgesFolded
		p	2		continentalness
		p	10		amplifier
	m	(Lazq;Lazq;FFLazq;)Laxp;	a	buildRidgeJaggednessSpline
		p	0		ridges
		p	1		ridgesFolded
		p	4		amplifier
	m	(Lazq;Lazq;Lazq;FFFFLazq;)Laxp;	a	buildErosionJaggednessSpline
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	7		amplifier
	m	(Lazq;Lazq;Lazq;FZLazq;)Laxp;	a	getErosionFactor
		p	0		erosion
		p	1		ridges
		p	2		ridgesFolded
		p	5		amplifier
	m	(Lazq;Lazq;Lazq;Lazq;Z)Laxp;	a	overworldFactor
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(Lazq;Lazq;Lazq;Z)Laxp;	a	overworldOffset
		p	0		continents
		p	1		erosion
		p	2		ridgesFolded
		p	3		amplified
	m	(F)F	b	lambda$static$2
		p	0		value
	m	(Lazq;Lazq;Lazq;Lazq;Z)Laxp;	b	overworldJaggedness
		p	0		continents
		p	1		erosion
		p	2		ridges
		p	3		ridgesFolded
		p	4		amplified
	m	(F)F	c	lambda$static$1
		p	0		value
	m	(F)F	d	lambda$static$0
		p	0		value
	f	F	a	DEEP_OCEAN_CONTINENTALNESS
	f	F	b	OCEAN_CONTINENTALNESS
	f	F	c	PLAINS_CONTINENTALNESS
	f	F	d	BEACH_CONTINENTALNESS
	f	Lazq;	e	NO_TRANSFORM
	f	Lazq;	f	AMPLIFIED_OFFSET
	f	Lazq;	g	AMPLIFIED_FACTOR
	f	Lazq;	h	AMPLIFIED_JAGGEDNESS
c	rg	net/minecraft/data/worldgen/TrailRuinsStructurePools
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
c	rh	net/minecraft/data/worldgen/TrialChambersStructurePools
	m	(Ljava/lang/String;)Ljava/lang/String;	a	spawner
		p	0		path
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
	f	Lakq;	a	START
	f	Lakq;	b	HALLWAY_FALLBACK
	f	Lakq;	c	CHAMBER_CAP_FALLBACK
	f	Ljava/util/List;	d	ALIAS_BINDINGS
c	ri	net/minecraft/data/worldgen/WorldGenFeatureVillages
	m	(Lqq;)V	a	bootstrap
		p	0		poolRegisterable
c	rj	net/minecraft/data/worldgen/biome/BiomeData
	m	(Lqq;)V	a	bootstrap
		p	0		biomeRegisterable
c	rk	net/minecraft/data/worldgen/biome/EndBiomes
	m	(Lddx$a;)Lddw;	a	baseEndBiome
		p	0		builder
	m	(Ljn;Ljn;)Lddw;	a	endBarrens
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	b	theEnd
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	c	endMidlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	d	endHighlands
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	e	smallEndIslands
		p	0		featureLookup
		p	1		carverLookup
c	rl	net/minecraft/data/worldgen/biome/NetherBiomes
	m	(Ljn;Ljn;)Lddw;	a	netherWastes
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	b	soulSandValley
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	c	basaltDeltas
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	d	crimsonForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	e	warpedForest
		p	0		featureLookup
		p	1		carverLookup
c	rm	net/minecraft/data/worldgen/biome/OverworldBiomes
	m	(F)I	a	calculateSkyColor
		p	0		temperature
	m	(Lddx$a;)V	a	globalOverworldGeneration
		p	0		generationSettings
	m	(Ldei$a;IILddx$a;)Lddw;	a	baseOcean
		p	0		spawnSettings
		p	1		waterColor
		p	2		waterFogColor
		p	3		generationSettings
	m	(Ljn;Ljn;)Lddw;	a	sparseJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;FZZZLdei$a;Lavm;)Lddw;	a	baseJungle
		p	0		featureLookup
		p	1		carverLookup
		p	2		depth
		p	3		bamboo
		p	4		sparse
		p	5		unmodified
		p	6		spawnSettings
		p	7		music
	m	(Ljn;Ljn;Z)Lddw;	a	oldGrowthTaiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		spruce
	m	(Ljn;Ljn;ZZ)Lddw;	a	savanna
		p	0		featureLookup
		p	1		carverLookup
		p	2		windswept
		p	3		plateau
	m	(Ljn;Ljn;ZZZ)Lddw;	a	plains
		p	0		featureLookup
		p	1		carverLookup
		p	2		sunflower
		p	3		snowy
		p	4		iceSpikes
	m	(ZFFIILjava/lang/Integer;Ljava/lang/Integer;Ldei$a;Lddx$a;Lavm;)Lddw;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		waterColor
		p	4		waterFogColor
		p	5		grassColor
		p	6		foliageColor
		p	7		spawnSettings
		p	8		generationSettings
		p	9		music
	m	(ZFFLdei$a;Lddx$a;Lavm;)Lddw;	a	biome
		p	0		precipitation
		p	1		temperature
		p	2		downfall
		p	3		spawnSettings
		p	4		generationSettings
		p	5		music
	m	(Ljn;Ljn;)Lddw;	b	jungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	b	windsweptHills
		p	0		featureLookup
		p	1		carverLookup
		p	2		forest
	m	(Ljn;Ljn;ZZ)Lddw;	b	beach
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
		p	3		stony
	m	(Ljn;Ljn;ZZZ)Lddw;	b	forest
		p	0		featureLookup
		p	1		carverLookup
		p	2		birch
		p	3		oldGrowth
		p	4		flower
	m	(Ljn;Ljn;)Lddw;	c	bambooJungle
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	c	badlands
		p	0		featureLookup
		p	1		carverLookup
		p	2		plateau
	m	(Ljn;Ljn;)Lddw;	d	desert
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	d	coldOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Ljn;Ljn;)Lddw;	e	mushroomFields
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	e	ocean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Ljn;Ljn;)Lddw;	f	warmOcean
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	f	lukeWarmOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Ljn;Ljn;)Lddw;	g	darkForest
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	g	frozenOcean
		p	0		featureLookup
		p	1		carverLookup
		p	2		deep
	m	(Ljn;Ljn;)Lddw;	h	swamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	h	taiga
		p	0		featureLookup
		p	1		carverLookup
		p	2		snowy
	m	(Ljn;Ljn;)Lddw;	i	mangroveSwamp
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	i	river
		p	0		featureLookup
		p	1		carverLookup
		p	2		frozen
	m	(Ljn;Ljn;)Lddw;	j	theVoid
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;Z)Lddw;	j	meadowOrCherryGrove
		p	0		featureLookup
		p	1		carverLookup
		p	2		cherryGrove
	m	(Ljn;Ljn;)Lddw;	k	frozenPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	l	jaggedPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	m	stonyPeaks
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	n	snowySlopes
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	o	grove
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	p	lushCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	q	dripstoneCaves
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddw;	r	deepDark
		p	0		featureLookup
		p	1		carverLookup
	m	(Ljn;Ljn;)Lddx$a;	s	baseOceanGeneration
		p	0		featureLookup
		p	1		carverLookup
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	c	SWAMP_SKELETON_WEIGHT
	f	I	d	OVERWORLD_FOG_COLOR
	f	Lavm;	e	NORMAL_MUSIC
c	ro	net/minecraft/data/worldgen/features/AquaticFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	SEAGRASS_SHORT
	f	Lakq;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Lakq;	c	SEAGRASS_MID
	f	Lakq;	d	SEAGRASS_TALL
	f	Lakq;	e	SEA_PICKLE
	f	Lakq;	f	SEAGRASS_SIMPLE
	f	Lakq;	g	KELP
	f	Lakq;	h	WARM_OCEAN_VEGETATION
c	rp	net/minecraft/data/worldgen/features/CaveFeatures
	m	()Ljm;	a	makeSmallDripleaf
	m	(Lji;)Ljm;	a	makeDripleaf
		p	0		direction
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	MONSTER_ROOM
	f	Lakq;	b	FOSSIL_COAL
	f	Lakq;	c	FOSSIL_DIAMONDS
	f	Lakq;	d	DRIPSTONE_CLUSTER
	f	Lakq;	e	LARGE_DRIPSTONE
	f	Lakq;	f	POINTED_DRIPSTONE
	f	Lakq;	g	UNDERWATER_MAGMA
	f	Lakq;	h	GLOW_LICHEN
	f	Lakq;	i	ROOTED_AZALEA_TREE
	f	Lakq;	j	CAVE_VINE
	f	Lakq;	k	CAVE_VINE_IN_MOSS
	f	Lakq;	l	MOSS_VEGETATION
	f	Lakq;	m	MOSS_PATCH
	f	Lakq;	n	MOSS_PATCH_BONEMEAL
	f	Lakq;	o	DRIPLEAF
	f	Lakq;	p	CLAY_WITH_DRIPLEAVES
	f	Lakq;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Lakq;	r	LUSH_CAVES_CLAY
	f	Lakq;	s	MOSS_PATCH_CEILING
	f	Lakq;	t	SPORE_BLOSSOM
	f	Lakq;	u	AMETHYST_GEODE
	f	Lakq;	v	SCULK_PATCH_DEEP_DARK
	f	Lakq;	w	SCULK_PATCH_ANCIENT_CITY
	f	Lakq;	x	SCULK_VEIN
c	rq	net/minecraft/data/worldgen/features/EndFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	END_PLATFORM
	f	Lakq;	b	END_SPIKE
	f	Lakq;	c	END_GATEWAY_RETURN
	f	Lakq;	d	END_GATEWAY_DELAYED
	f	Lakq;	e	CHORUS_PLANT
	f	Lakq;	f	END_ISLAND
c	rr	net/minecraft/data/worldgen/features/FeatureUtils
	m	(ILjm;)Leev;	a	simpleRandomPatchConfiguration
		p	0		tries
		p	1		feature
	m	(Lece;Leei;)Leev;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
	m	(Lece;Leei;Ljava/util/List;)Leev;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
	m	(Lece;Leei;Ljava/util/List;I)Leev;	a	simplePatchConfiguration
		p	0		feature
		p	1		config
		p	2		predicateBlocks
		p	3		tries
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljava/util/List;)Leaf;	a	simplePatchPredicate
		p	0		validGround
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Lqq;Lakq;Lece;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
	m	(Lqq;Lakq;Lece;Leei;)V	a	register
		p	0		registerable
		p	1		key
		p	2		feature
		p	3		config
c	rs	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	ICE_SPIKE
	f	Lakq;	b	ICE_PATCH
	f	Lakq;	c	FOREST_ROCK
	f	Lakq;	d	ICEBERG_PACKED
	f	Lakq;	e	ICEBERG_BLUE
	f	Lakq;	f	BLUE_ICE
	f	Lakq;	g	LAKE_LAVA
	f	Lakq;	h	DISK_CLAY
	f	Lakq;	i	DISK_GRAVEL
	f	Lakq;	j	DISK_SAND
	f	Lakq;	k	FREEZE_TOP_LAYER
	f	Lakq;	l	DISK_GRASS
	f	Lakq;	m	BONUS_CHEST
	f	Lakq;	n	VOID_START_PLATFORM
	f	Lakq;	o	DESERT_WELL
	f	Lakq;	p	SPRING_LAVA_OVERWORLD
	f	Lakq;	q	SPRING_LAVA_FROZEN
	f	Lakq;	r	SPRING_WATER
c	rt	net/minecraft/data/worldgen/features/NetherFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	DELTA
	f	Lakq;	b	SMALL_BASALT_COLUMNS
	f	Lakq;	c	LARGE_BASALT_COLUMNS
	f	Lakq;	d	BASALT_BLOBS
	f	Lakq;	e	BLACKSTONE_BLOBS
	f	Lakq;	f	GLOWSTONE_EXTRA
	f	Lakq;	g	CRIMSON_FOREST_VEGETATION
	f	Lakq;	h	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Lakq;	i	WARPED_FOREST_VEGETION
	f	Lakq;	j	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Lakq;	k	NETHER_SPROUTS
	f	Lakq;	l	NETHER_SPROUTS_BONEMEAL
	f	Lakq;	m	TWISTING_VINES
	f	Lakq;	n	TWISTING_VINES_BONEMEAL
	f	Lakq;	o	WEEPING_VINES
	f	Lakq;	p	PATCH_CRIMSON_ROOTS
	f	Lakq;	q	BASALT_PILLAR
	f	Lakq;	r	SPRING_LAVA_NETHER
	f	Lakq;	s	SPRING_NETHER_CLOSED
	f	Lakq;	t	SPRING_NETHER_OPEN
	f	Lakq;	u	PATCH_FIRE
	f	Lakq;	v	PATCH_SOUL_FIRE
c	ru	net/minecraft/data/worldgen/features/OreFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	A	ORE_EMERALD
	f	Lakq;	B	ORE_ANCIENT_DEBRIS_LARGE
	f	Lakq;	C	ORE_ANCIENT_DEBRIS_SMALL
	f	Lakq;	D	ORE_COPPPER_SMALL
	f	Lakq;	E	ORE_COPPER_LARGE
	f	Lakq;	F	ORE_CLAY
	f	Lakq;	a	ORE_MAGMA
	f	Lakq;	b	ORE_SOUL_SAND
	f	Lakq;	c	ORE_NETHER_GOLD
	f	Lakq;	d	ORE_QUARTZ
	f	Lakq;	e	ORE_GRAVEL_NETHER
	f	Lakq;	f	ORE_BLACKSTONE
	f	Lakq;	g	ORE_DIRT
	f	Lakq;	h	ORE_GRAVEL
	f	Lakq;	i	ORE_GRANITE
	f	Lakq;	j	ORE_DIORITE
	f	Lakq;	k	ORE_ANDESITE
	f	Lakq;	l	ORE_TUFF
	f	Lakq;	m	ORE_COAL
	f	Lakq;	n	ORE_COAL_BURIED
	f	Lakq;	o	ORE_IRON
	f	Lakq;	p	ORE_IRON_SMALL
	f	Lakq;	q	ORE_GOLD
	f	Lakq;	r	ORE_GOLD_BURIED
	f	Lakq;	s	ORE_REDSTONE
	f	Lakq;	t	ORE_DIAMOND_SMALL
	f	Lakq;	u	ORE_DIAMOND_MEDIUM
	f	Lakq;	v	ORE_DIAMOND_LARGE
	f	Lakq;	w	ORE_DIAMOND_BURIED
	f	Lakq;	x	ORE_LAPIS
	f	Lakq;	y	ORE_LAPIS_BURIED
	f	Lakq;	z	ORE_INFESTED
c	rv	net/minecraft/data/worldgen/features/PileFeatures
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	PILE_HAY
	f	Lakq;	b	PILE_MELON
	f	Lakq;	c	PILE_SNOW
	f	Lakq;	d	PILE_ICE
	f	Lakq;	e	PILE_PUMPKIN
c	rw	net/minecraft/data/worldgen/features/TreeFeatures
	m	()Lefe$a;	a	createOak
	m	(Ldfy;Ldfy;IIII)Lefe$a;	a	createStraightBlobTree
		p	0		log
		p	1		leaves
		p	2		baseHeight
		p	3		firstRandomHeight
		p	4		secondRandomHeight
		p	5		radius
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	m	()Lefe$a;	b	createBirch
	m	()Lefe$a;	c	createSuperBirch
	m	()Lefe$a;	d	createJungleTree
	m	()Lefe$a;	e	createFancyOak
	m	()Lefe$a;	f	cherry
	f	Lakq;	A	OAK_BEES_0002
	f	Lakq;	B	OAK_BEES_002
	f	Lakq;	C	OAK_BEES_005
	f	Lakq;	D	BIRCH_BEES_0002
	f	Lakq;	E	BIRCH_BEES_002
	f	Lakq;	F	BIRCH_BEES_005
	f	Lakq;	G	FANCY_OAK_BEES_0002
	f	Lakq;	H	FANCY_OAK_BEES_002
	f	Lakq;	I	FANCY_OAK_BEES_005
	f	Lakq;	J	FANCY_OAK_BEES
	f	Lakq;	K	CHERRY_BEES_005
	f	Lakq;	a	CRIMSON_FUNGUS
	f	Lakq;	b	CRIMSON_FUNGUS_PLANTED
	f	Lakq;	c	WARPED_FUNGUS
	f	Lakq;	d	WARPED_FUNGUS_PLANTED
	f	Lakq;	e	HUGE_BROWN_MUSHROOM
	f	Lakq;	f	HUGE_RED_MUSHROOM
	f	Lakq;	g	OAK
	f	Lakq;	h	DARK_OAK
	f	Lakq;	i	BIRCH
	f	Lakq;	j	ACACIA
	f	Lakq;	k	SPRUCE
	f	Lakq;	l	PINE
	f	Lakq;	m	JUNGLE_TREE
	f	Lakq;	n	FANCY_OAK
	f	Lakq;	o	JUNGLE_TREE_NO_VINE
	f	Lakq;	p	MEGA_JUNGLE_TREE
	f	Lakq;	q	MEGA_SPRUCE
	f	Lakq;	r	MEGA_PINE
	f	Lakq;	s	SUPER_BIRCH_BEES_0002
	f	Lakq;	t	SUPER_BIRCH_BEES
	f	Lakq;	u	SWAMP_OAK
	f	Lakq;	v	JUNGLE_BUSH
	f	Lakq;	w	AZALEA_TREE
	f	Lakq;	x	MANGROVE
	f	Lakq;	y	TALL_MANGROVE
	f	Lakq;	z	CHERRY
c	rx	net/minecraft/data/worldgen/features/VegetationFeatures
	m	(Legj;I)Leev;	a	grassPatch
		p	0		block
		p	1		tries
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	A	DARK_FOREST_VEGETATION
	f	Lakq;	B	TREES_FLOWER_FOREST
	f	Lakq;	C	MEADOW_TREES
	f	Lakq;	D	TREES_TAIGA
	f	Lakq;	E	TREES_GROVE
	f	Lakq;	F	TREES_SAVANNA
	f	Lakq;	G	BIRCH_TALL
	f	Lakq;	H	TREES_WINDSWEPT_HILLS
	f	Lakq;	I	TREES_WATER
	f	Lakq;	J	TREES_BIRCH_AND_OAK
	f	Lakq;	K	TREES_PLAINS
	f	Lakq;	L	TREES_SPARSE_JUNGLE
	f	Lakq;	M	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lakq;	N	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lakq;	O	TREES_JUNGLE
	f	Lakq;	P	BAMBOO_VEGETATION
	f	Lakq;	Q	MUSHROOM_ISLAND_VEGETATION
	f	Lakq;	R	MANGROVE_VEGETATION
	f	Lakq;	a	BAMBOO_NO_PODZOL
	f	Lakq;	b	BAMBOO_SOME_PODZOL
	f	Lakq;	c	VINES
	f	Lakq;	d	PATCH_BROWN_MUSHROOM
	f	Lakq;	e	PATCH_RED_MUSHROOM
	f	Lakq;	f	PATCH_SUNFLOWER
	f	Lakq;	g	PATCH_PUMPKIN
	f	Lakq;	h	PATCH_BERRY_BUSH
	f	Lakq;	i	PATCH_TAIGA_GRASS
	f	Lakq;	j	PATCH_GRASS
	f	Lakq;	k	PATCH_GRASS_JUNGLE
	f	Lakq;	l	SINGLE_PIECE_OF_GRASS
	f	Lakq;	m	PATCH_DEAD_BUSH
	f	Lakq;	n	PATCH_MELON
	f	Lakq;	o	PATCH_WATERLILY
	f	Lakq;	p	PATCH_TALL_GRASS
	f	Lakq;	q	PATCH_LARGE_FERN
	f	Lakq;	r	PATCH_CACTUS
	f	Lakq;	s	PATCH_SUGAR_CANE
	f	Lakq;	t	FLOWER_DEFAULT
	f	Lakq;	u	FLOWER_FLOWER_FOREST
	f	Lakq;	v	FLOWER_SWAMP
	f	Lakq;	w	FLOWER_PLAIN
	f	Lakq;	x	FLOWER_MEADOW
	f	Lakq;	y	FLOWER_CHERRY
	f	Lakq;	z	FOREST_FLOWERS
c	sa	net/minecraft/data/worldgen/placement/AquaticPlacements
	m	(I)Ljava/util/List;	a	seagrassPlacement
		p	0		count
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	SEAGRASS_WARM
	f	Lakq;	b	SEAGRASS_NORMAL
	f	Lakq;	c	SEAGRASS_COLD
	f	Lakq;	d	SEAGRASS_RIVER
	f	Lakq;	e	SEAGRASS_SWAMP
	f	Lakq;	f	SEAGRASS_DEEP_WARM
	f	Lakq;	g	SEAGRASS_DEEP
	f	Lakq;	h	SEAGRASS_DEEP_COLD
	f	Lakq;	i	SEAGRASS_SIMPLE
	f	Lakq;	j	SEA_PICKLE
	f	Lakq;	k	KELP_COLD
	f	Lakq;	l	KELP_WARM
	f	Lakq;	m	WARM_OCEAN_VEGETATION
c	sb	net/minecraft/data/worldgen/placement/CavePlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	MONSTER_ROOM
	f	Lakq;	b	MONSTER_ROOM_DEEP
	f	Lakq;	c	FOSSIL_UPPER
	f	Lakq;	d	FOSSIL_LOWER
	f	Lakq;	e	DRIPSTONE_CLUSTER
	f	Lakq;	f	LARGE_DRIPSTONE
	f	Lakq;	g	POINTED_DRIPSTONE
	f	Lakq;	h	UNDERWATER_MAGMA
	f	Lakq;	i	GLOW_LICHEN
	f	Lakq;	j	ROOTED_AZALEA_TREE
	f	Lakq;	k	CAVE_VINES
	f	Lakq;	l	LUSH_CAVES_VEGETATION
	f	Lakq;	m	LUSH_CAVES_CLAY
	f	Lakq;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Lakq;	o	SPORE_BLOSSOM
	f	Lakq;	p	CLASSIC_VINES
	f	Lakq;	q	AMETHYST_GEODE
	f	Lakq;	r	SCULK_PATCH_DEEP_DARK
	f	Lakq;	s	SCULK_PATCH_ANCIENT_CITY
	f	Lakq;	t	SCULK_VEIN
c	sc	net/minecraft/data/worldgen/placement/EndPlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	END_PLATFORM
	f	Lakq;	b	END_SPIKE
	f	Lakq;	c	END_GATEWAY_RETURN
	f	Lakq;	d	CHORUS_PLANT
	f	Lakq;	e	END_ISLAND_DECORATED
c	sd	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	ICE_SPIKE
	f	Lakq;	b	ICE_PATCH
	f	Lakq;	c	FOREST_ROCK
	f	Lakq;	d	ICEBERG_PACKED
	f	Lakq;	e	ICEBERG_BLUE
	f	Lakq;	f	BLUE_ICE
	f	Lakq;	g	LAKE_LAVA_UNDERGROUND
	f	Lakq;	h	LAKE_LAVA_SURFACE
	f	Lakq;	i	DISK_CLAY
	f	Lakq;	j	DISK_GRAVEL
	f	Lakq;	k	DISK_SAND
	f	Lakq;	l	DISK_GRASS
	f	Lakq;	m	FREEZE_TOP_LAYER
	f	Lakq;	n	VOID_START_PLATFORM
	f	Lakq;	o	DESERT_WELL
	f	Lakq;	p	SPRING_LAVA
	f	Lakq;	q	SPRING_LAVA_FROZEN
	f	Lakq;	r	SPRING_WATER
c	se	net/minecraft/data/worldgen/placement/NetherPlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	DELTA
	f	Lakq;	b	SMALL_BASALT_COLUMNS
	f	Lakq;	c	LARGE_BASALT_COLUMNS
	f	Lakq;	d	BASALT_BLOBS
	f	Lakq;	e	BLACKSTONE_BLOBS
	f	Lakq;	f	GLOWSTONE_EXTRA
	f	Lakq;	g	GLOWSTONE
	f	Lakq;	h	CRIMSON_FOREST_VEGETATION
	f	Lakq;	i	WARPED_FOREST_VEGETATION
	f	Lakq;	j	NETHER_SPROUTS
	f	Lakq;	k	TWISTING_VINES
	f	Lakq;	l	WEEPING_VINES
	f	Lakq;	m	PATCH_CRIMSON_ROOTS
	f	Lakq;	n	BASALT_PILLAR
	f	Lakq;	o	SPRING_DELTA
	f	Lakq;	p	SPRING_CLOSED
	f	Lakq;	q	SPRING_CLOSED_DOUBLE
	f	Lakq;	r	SPRING_OPEN
	f	Lakq;	s	PATCH_SOUL_FIRE
	f	Lakq;	t	PATCH_FIRE
c	sf	net/minecraft/data/worldgen/placement/OrePlacements
	m	(ILeiy;)Ljava/util/List;	a	commonOrePlacement
		p	0		count
		p	1		heightModifier
	m	(Leiy;Leiy;)Ljava/util/List;	a	orePlacement
		p	0		countModifier
		p	1		heightModifier
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	m	(ILeiy;)Ljava/util/List;	b	rareOrePlacement
		p	0		chance
		p	1		heightModifier
	f	Lakq;	A	ORE_REDSTONE_LOWER
	f	Lakq;	B	ORE_DIAMOND
	f	Lakq;	C	ORE_DIAMOND_MEDIUM
	f	Lakq;	D	ORE_DIAMOND_LARGE
	f	Lakq;	E	ORE_DIAMOND_BURIED
	f	Lakq;	F	ORE_LAPIS
	f	Lakq;	G	ORE_LAPIS_BURIED
	f	Lakq;	H	ORE_INFESTED
	f	Lakq;	I	ORE_EMERALD
	f	Lakq;	J	ORE_ANCIENT_DEBRIS_LARGE
	f	Lakq;	K	ORE_ANCIENT_DEBRIS_SMALL
	f	Lakq;	L	ORE_COPPER
	f	Lakq;	M	ORE_COPPER_LARGE
	f	Lakq;	N	ORE_CLAY
	f	Lakq;	a	ORE_MAGMA
	f	Lakq;	b	ORE_SOUL_SAND
	f	Lakq;	c	ORE_GOLD_DELTAS
	f	Lakq;	d	ORE_QUARTZ_DELTAS
	f	Lakq;	e	ORE_GOLD_NETHER
	f	Lakq;	f	ORE_QUARTZ_NETHER
	f	Lakq;	g	ORE_GRAVEL_NETHER
	f	Lakq;	h	ORE_BLACKSTONE
	f	Lakq;	i	ORE_DIRT
	f	Lakq;	j	ORE_GRAVEL
	f	Lakq;	k	ORE_GRANITE_UPPER
	f	Lakq;	l	ORE_GRANITE_LOWER
	f	Lakq;	m	ORE_DIORITE_UPPER
	f	Lakq;	n	ORE_DIORITE_LOWER
	f	Lakq;	o	ORE_ANDESITE_UPPER
	f	Lakq;	p	ORE_ANDESITE_LOWER
	f	Lakq;	q	ORE_TUFF
	f	Lakq;	r	ORE_COAL_UPPER
	f	Lakq;	s	ORE_COAL_LOWER
	f	Lakq;	t	ORE_IRON_UPPER
	f	Lakq;	u	ORE_IRON_MIDDLE
	f	Lakq;	v	ORE_IRON_SMALL
	f	Lakq;	w	ORE_GOLD_EXTRA
	f	Lakq;	x	ORE_GOLD
	f	Lakq;	y	ORE_GOLD_LOWER
	f	Lakq;	z	ORE_REDSTONE
c	sg	net/minecraft/data/worldgen/placement/PlacementUtils
	m	()Leix;	a	isEmpty
	m	(IFI)Leiy;	a	countExtra
		p	0		count
		p	1		extraChance
		p	2		extraCount
	m	(Ldfy;)Leij;	a	filteredByBlockSurvival
		p	0		block
	m	(Lece;Leei;)Ljm;	a	onlyWhenEmpty
		p	0		feature
		p	1		featureConfig
	m	(Lece;Leei;Leaf;)Ljm;	a	filtered
		p	0		feature
		p	1		featureConfig
		p	2		predicate
	m	(Lece;Leei;[Leiy;)Ljm;	a	inlinePlaced
		p	0		feature
		p	1		featureConfig
		p	2		modifiers
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljm;[Leiy;)Ljm;	a	inlinePlaced
		p	0		feature
		p	1		modifiers
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Lqq;Lakq;Ljm;Ljava/util/List;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	m	(Lqq;Lakq;Ljm;[Leiy;)V	a	register
		p	0		featureRegisterable
		p	1		key
		p	2		feature
		p	3		modifiers
	f	Leiy;	a	HEIGHTMAP
	f	Leiy;	b	HEIGHTMAP_TOP_SOLID
	f	Leiy;	c	HEIGHTMAP_WORLD_SURFACE
	f	Leiy;	d	HEIGHTMAP_OCEAN_FLOOR
	f	Leiy;	e	FULL_RANGE
	f	Leiy;	f	RANGE_10_10
	f	Leiy;	g	RANGE_8_8
	f	Leiy;	h	RANGE_4_4
	f	Leiy;	i	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
c	sh	net/minecraft/data/worldgen/placement/TreePlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	A	FANCY_OAK_BEES_002
	f	Lakq;	B	FANCY_OAK_BEES
	f	Lakq;	C	CHERRY_BEES_005
	f	Lakq;	a	CRIMSON_FUNGI
	f	Lakq;	b	WARPED_FUNGI
	f	Lakq;	c	OAK_CHECKED
	f	Lakq;	d	DARK_OAK_CHECKED
	f	Lakq;	e	BIRCH_CHECKED
	f	Lakq;	f	ACACIA_CHECKED
	f	Lakq;	g	SPRUCE_CHECKED
	f	Lakq;	h	MANGROVE_CHECKED
	f	Lakq;	i	CHERRY_CHECKED
	f	Lakq;	j	PINE_ON_SNOW
	f	Lakq;	k	SPRUCE_ON_SNOW
	f	Lakq;	l	PINE_CHECKED
	f	Lakq;	m	JUNGLE_TREE_CHECKED
	f	Lakq;	n	FANCY_OAK_CHECKED
	f	Lakq;	o	MEGA_JUNGLE_TREE_CHECKED
	f	Lakq;	p	MEGA_SPRUCE_CHECKED
	f	Lakq;	q	MEGA_PINE_CHECKED
	f	Lakq;	r	TALL_MANGROVE_CHECKED
	f	Lakq;	s	JUNGLE_BUSH
	f	Lakq;	t	SUPER_BIRCH_BEES_0002
	f	Lakq;	u	SUPER_BIRCH_BEES
	f	Lakq;	v	OAK_BEES_0002
	f	Lakq;	w	OAK_BEES_002
	f	Lakq;	x	BIRCH_BEES_0002_PLACED
	f	Lakq;	y	BIRCH_BEES_002
	f	Lakq;	z	FANCY_OAK_BEES_0002
c	si	net/minecraft/data/worldgen/placement/VegetationPlacements
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
		p	0		count
	m	(ILeiy;)Ljava/util/List;	a	getMushroomPlacement
		p	0		chance
		p	1		modifier
	m	(Leiy;)Ljava/util/List;	a	treePlacement
		p	0		modifier
	m	(Leiy;Ldfy;)Ljava/util/List;	a	treePlacement
		p	0		modifier
		p	1		block
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	m	(Leiy;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
		p	0		countModifier
	f	Lakq;	A	PATCH_CACTUS_DECORATED
	f	Lakq;	B	PATCH_SUGAR_CANE_SWAMP
	f	Lakq;	C	PATCH_SUGAR_CANE_DESERT
	f	Lakq;	D	PATCH_SUGAR_CANE_BADLANDS
	f	Lakq;	E	PATCH_SUGAR_CANE
	f	Lakq;	F	BROWN_MUSHROOM_NETHER
	f	Lakq;	G	RED_MUSHROOM_NETHER
	f	Lakq;	H	BROWN_MUSHROOM_NORMAL
	f	Lakq;	I	RED_MUSHROOM_NORMAL
	f	Lakq;	J	BROWN_MUSHROOM_TAIGA
	f	Lakq;	K	RED_MUSHROOM_TAIGA
	f	Lakq;	L	BROWN_MUSHROOM_OLD_GROWTH
	f	Lakq;	M	RED_MUSHROOM_OLD_GROWTH
	f	Lakq;	N	BROWN_MUSHROOM_SWAMP
	f	Lakq;	O	RED_MUSHROOM_SWAMP
	f	Lakq;	P	FLOWER_WARM
	f	Lakq;	Q	FLOWER_DEFAULT
	f	Lakq;	R	FLOWER_FLOWER_FOREST
	f	Lakq;	S	FLOWER_SWAMP
	f	Lakq;	T	FLOWER_PLAINS
	f	Lakq;	U	FLOWER_MEADOW
	f	Lakq;	V	FLOWER_CHERRY
	f	Lakq;	W	TREES_PLAINS
	f	Lakq;	X	DARK_FOREST_VEGETATION
	f	Lakq;	Y	FLOWER_FOREST_FLOWERS
	f	Lakq;	Z	FOREST_FLOWERS
	f	Lakq;	a	BAMBOO_LIGHT
	f	Lakq;	aa	TREES_FLOWER_FOREST
	f	Lakq;	ab	TREES_MEADOW
	f	Lakq;	ac	TREES_CHERRY
	f	Lakq;	ad	TREES_TAIGA
	f	Lakq;	ae	TREES_GROVE
	f	Lakq;	af	TREES_BADLANDS
	f	Lakq;	ag	TREES_SNOWY
	f	Lakq;	ah	TREES_SWAMP
	f	Lakq;	ai	TREES_WINDSWEPT_SAVANNA
	f	Lakq;	aj	TREES_SAVANNA
	f	Lakq;	ak	BIRCH_TALL
	f	Lakq;	al	TREES_BIRCH
	f	Lakq;	am	TREES_WINDSWEPT_FOREST
	f	Lakq;	an	TREES_WINDSWEPT_HILLS
	f	Lakq;	ao	TREES_WATER
	f	Lakq;	ap	TREES_BIRCH_AND_OAK
	f	Lakq;	aq	TREES_SPARSE_JUNGLE
	f	Lakq;	ar	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lakq;	as	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lakq;	at	TREES_JUNGLE
	f	Lakq;	au	BAMBOO_VEGETATION
	f	Lakq;	av	MUSHROOM_ISLAND_VEGETATION
	f	Lakq;	aw	TREES_MANGROVE
	f	Leiy;	ax	TREE_THRESHOLD
	f	Lakq;	b	BAMBOO
	f	Lakq;	c	VINES
	f	Lakq;	d	PATCH_SUNFLOWER
	f	Lakq;	e	PATCH_PUMPKIN
	f	Lakq;	f	PATCH_GRASS_PLAIN
	f	Lakq;	g	PATCH_GRASS_FOREST
	f	Lakq;	h	PATCH_GRASS_BADLANDS
	f	Lakq;	i	PATCH_GRASS_SAVANNA
	f	Lakq;	j	PATCH_GRASS_NORMAL
	f	Lakq;	k	PATCH_GRASS_TAIGA_2
	f	Lakq;	l	PATCH_GRASS_TAIGA
	f	Lakq;	m	PATCH_GRASS_JUNGLE
	f	Lakq;	n	GRASS_BONEMEAL
	f	Lakq;	o	PATCH_DEAD_BUSH_2
	f	Lakq;	p	PATCH_DEAD_BUSH
	f	Lakq;	q	PATCH_DEAD_BUSH_BADLANDS
	f	Lakq;	r	PATCH_MELON
	f	Lakq;	s	PATCH_MELON_SPARSE
	f	Lakq;	t	PATCH_BERRY_COMMON
	f	Lakq;	u	PATCH_BERRY_RARE
	f	Lakq;	v	PATCH_WATERLILY
	f	Lakq;	w	PATCH_TALL_GRASS_2
	f	Lakq;	x	PATCH_TALL_GRASS
	f	Lakq;	y	PATCH_LARGE_FERN
	f	Lakq;	z	PATCH_CACTUS_DESERT
c	sj	net/minecraft/data/worldgen/placement/VillagePlacements
	m	(Lqq;)V	a	bootstrap
		p	0		featureRegisterable
	f	Lakq;	a	PILE_HAY_VILLAGE
	f	Lakq;	b	PILE_MELON_VILLAGE
	f	Lakq;	c	PILE_SNOW_VILLAGE
	f	Lakq;	d	PILE_ICE_VILLAGE
	f	Lakq;	e	PILE_PUMPKIN_VILLAGE
	f	Lakq;	f	OAK_VILLAGE
	f	Lakq;	g	ACACIA_VILLAGE
	f	Lakq;	h	SPRUCE_VILLAGE
	f	Lakq;	i	PINE_VILLAGE
	f	Lakq;	j	PATCH_CACTUS_VILLAGE
	f	Lakq;	k	FLOWER_PLAIN_VILLAGE
	f	Lakq;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Lakq;	m	PATCH_BERRY_BUSH_VILLAGE
c	sl	net/minecraft/gametest/framework/AfterBatch
	m	()Ljava/lang/String;	a	batch
c	sm	net/minecraft/gametest/framework/BeforeBatch
	m	()Ljava/lang/String;	a	batch
c	sn	net/minecraft/gametest/framework/ExhaustedAttemptsException
	m	(IILsx;)V	<init>	<init>
		p	1		attempts
		p	2		successes
		p	3		test
c	so	net/minecraft/gametest/framework/GameTest
	m	()I	a	timeoutTicks
	m	()Ljava/lang/String;	b	batch
	m	()Z	c	skyAccess
	m	()I	d	rotationSteps
	m	()Z	e	required
	m	()Z	f	manualOnly
	m	()Ljava/lang/String;	g	template
	m	()J	h	setupTicks
	m	()I	i	attempts
	m	()I	j	requiredSuccesses
c	sp	net/minecraft/gametest/framework/GameTestHarnessAssertion
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	sq	net/minecraft/gametest/framework/GameTestHarnessAssertionPosition
	m	(Ljava/lang/String;Ljd;Ljd;J)V	<init>	<init>
		p	1		message
		p	2		pos
		p	3		relativePos
		p	4		tick
	m	()Ljava/lang/String;	a	getMessageToShowAtBlock
	m	()Ljd;	b	getRelativePos
	m	()Ljd;	c	getAbsolutePos
	f	Ljd;	a	absolutePos
	f	Ljd;	b	relativePos
	f	J	c	tick
c	sr	net/minecraft/gametest/framework/GameTestHarnessBatch
	m	(Ljava/lang/String;Ljava/util/Collection;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		id
		p	2		testFunctions
		p	3		beforeBatchConsumer
		p	4		afterBatchConsumer
	m	()Ljava/lang/String;	a	name
	m	()Ljava/util/Collection;	b	gameTestInfos
	m	()Ljava/util/function/Consumer;	c	beforeBatchFunction
	m	()Ljava/util/function/Consumer;	d	afterBatchFunction
	f	Ljava/lang/String;	a	DEFAULT_BATCH_NAME
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Collection;	c	gameTestInfos
	f	Ljava/util/function/Consumer;	d	beforeBatchFunction
	f	Ljava/util/function/Consumer;	e	afterBatchFunction
c	ss	net/minecraft/gametest/framework/GameTestBatchFactory
	m	()Lta$b;	a	fromGameTestInfo
	m	(I)Lta$b;	a	fromGameTestInfo
		p	0		batchSize
	m	(ILjava/util/Collection;)Ljava/util/Collection;	a	lambda$fromGameTestInfo$6
		p	1		states
	m	(ILjava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$fromGameTestInfo$5
		p	1		entry
	m	(Laqu;Ljava/lang/String;Ljava/util/List;J)Lsr;	a	lambda$fromTestFunction$1
		p	2		states
		p	3		index
	m	(Laqu;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$fromTestFunction$2
		p	1		entry
	m	(Laqu;Ltr;)Lsx;	a	lambda$fromTestFunction$0
		p	1		testFunction
	m	(Ljava/lang/String;Ljava/util/List;J)Lsr;	a	lambda$fromGameTestInfo$4
		p	1		states
		p	2		index
	m	(Ljava/util/Collection;Laqu;)Ljava/util/Collection;	a	fromTestFunction
		p	0		testFunctions
		p	1		world
	m	(Ljava/util/Collection;Ljava/lang/String;J)Lsr;	a	toGameTestBatch
		p	0		states
		p	1		batchId
		p	2		index
	m	(Lsx;)Ljava/lang/String;	a	lambda$fromGameTestInfo$3
		p	0		state
	m	(Ltr;ILaqu;)Lsx;	a	toGameTestInfo
		p	0		testFunction
		p	1		rotationSteps
		p	2		world
	f	I	a	MAX_TESTS_PER_BATCH
c	st	net/minecraft/gametest/framework/GameTestBatchListener
	m	(Lsr;)V	a	testBatchStarting
		p	1		batch
	m	(Lsr;)V	b	testBatchFinished
		p	1		batch
c	su	net/minecraft/gametest/framework/GameTestHarnessEvent
	m	(Ljava/lang/Long;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		duration
		p	2		task
	m	(JLjava/lang/Runnable;)Lsu;	a	create
		p	0		duration
		p	2		task
	m	(Ljava/lang/Runnable;)Lsu;	a	create
		p	0		task
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
c	sv	net/minecraft/gametest/framework/GameTestGenerator
c	sw	net/minecraft/gametest/framework/GameTestHarnessHelper
	m	(Lsx;)V	<init>	<init>
		p	1		test
	m	()Laqu;	a	getLevel
	m	(I)V	a	setDayTime
		p	1		timeOfDay
	m	(III)V	a	pressButton
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdfy;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		block
	m	(IIILdtc;)V	a	setBlock
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
		p	1		duration
		p	2		runnable
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
		p	1		tick
		p	3		runnable
	m	(JLjd;)V	a	assertAtTickTimeContainerEmpty
		p	1		delay
		p	3		pos
	m	(JLjd;Lcul;)V	a	assertAtTickTimeContainerContains
		p	1		delay
		p	3		pos
		p	4		item
	m	(Lakq;)V	a	setBiome
		p	1		biome
	m	(Lbsr;)Z	a	lambda$killAllEntitiesOfClass$0
		p	0		entity
	m	(Lbsr;III)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsr;Lbsr;)Z	a	lambda$assertEntityInstancePresent$14
		p	1		e
	m	(Lbsr;Lewx;Ljava/lang/String;)V	a	assertEntityPosition
		p	1		entity
		p	2		box
		p	3		message
	m	(Lbsr;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V	a	assertEntityProperty
		p	1		entity
		p	2		propertyGetter
		p	3		propertyName
		p	4		expectedValue
	m	(Lbsr;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertEntityProperty
		p	1		entity
		p	2		predicate
		p	3		testName
	m	(Lbsr;Ljd;)V	a	assertEntityInstancePresent
		p	1		entity
		p	2		pos
	m	(Lbsr;Ljd;Ljd;)Lsq;	a	lambda$assertEntityInstancePresent$15
	m	(Lbsx;)Lbsr;	a	findOneEntity
		p	1		type
	m	(Lbsx;DDD)V	a	assertEntityTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbsx;FFF)Lbsr;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;I)V	a	assertEntitiesPresent
		p	1		type
		p	2		amount
	m	(Lbsx;III)Lbsr;	a	spawn
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;IIID)Lbsr;	a	findClosestEntity
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		margin
	m	(Lbsx;Lexc;)Lbsr;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbsx;Lexc;D)Ljava/util/List;	a	findEntities
		p	1		type
		p	2		pos
		p	3		margin
	m	(Lbsx;Lexc;Lexc;)V	a	assertEntityPresent
		p	1		type
		p	2		pos1
		p	3		pos2
	m	(Lbsx;Ljd;)Lbsr;	a	spawn
		p	1		type
		p	2		pos
	m	(Lbsx;Ljd;D)V	a	assertEntityPresent
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbsx;Ljd;ID)V	a	assertEntitiesPresent
		p	1		type
		p	2		pos
		p	3		amount
		p	4		radius
	m	(Lbtn;)Lbtn;	a	makeAboutToDrown
		p	1		entity
	m	(Lbtn;Ljm;I)V	a	assertLivingEntityHasMobEffect
		p	1		entity
		p	2		effect
		p	3		amplifier
	m	(Lbtp;FFF)V	a	moveTo
		p	1		entity
		p	2		x
		p	3		y
		p	4		z
	m	(Lbtp;Ljd;F)Ltb;	a	walkTo
		p	1		entity
		p	2		pos
		p	3		speed
	m	(Lcmx;Lcuq;Ljd;Lji;)V	a	placeAt
		p	1		player
		p	2		stack
		p	3		pos
		p	4		direction
	m	(Lcul;)V	a	assertItemEntityPresent
		p	1		item
	m	(Lcul;FFF)Lcjh;	a	spawnItem
		p	1		item
		p	2		x
		p	3		y
		p	4		z
	m	(Lcul;Lcuq;)Z	a	lambda$assertEntityInventoryContains$19
		p	1		stack
	m	(Lcul;Lexc;)Lcjh;	a	spawnItem
		p	1		item
		p	2		pos
	m	(Lcul;Ljd;)Lcjh;	a	spawnItem
		p	1		item
		p	2		pos
	m	(Lcul;Ljd;D)V	a	assertItemEntityPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Lcul;Ljd;DI)V	a	assertItemEntityCountIs
		p	1		item
		p	2		pos
		p	3		radius
		p	5		amount
	m	(Ldct;)Lcmx;	a	makeMockPlayer
		p	1		gameMode
	m	(Ldfy;III)V	a	assertBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Ldfy;Ljd;)V	a	assertBlockPresent
		p	1		block
		p	2		pos
	m	(Ldtc;)Z	a	lambda$pressButton$4
		p	0		state
	m	(Ldtc;Ldfy;Ldfy;)Z	a	lambda$assertBlockPresent$7
		p	2		block1
	m	(Lduf;Ljava/util/function/Predicate;Ldtc;)Z	a	lambda$assertBlockProperty$12
		p	2		state
	m	(Ldyy$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Lejj;Ljd;)V	a	assertSameBlockStates
		p	1		checkedBlockBox
		p	2		correctStatePos
	m	(Lewx;Lbsr;)Z	a	lambda$findEntities$2
		p	1		entity
	m	(Lexc;)Lexc;	a	absoluteVec
		p	1		pos
	m	(Lexc;Lbsr;)Z	a	lambda$assertEntityNotTouching$17
		p	1		entity
	m	(Lexc;Lbsr;Lbsr;)I	a	lambda$findClosestEntity$1
		p	1		a
		p	2		b
	m	(Ljava/lang/Class;)V	a	killAllEntitiesOfClass
		p	1		entityClass
	m	(Ljava/lang/Object;)Z	a	lambda$assertEntityInventoryContains$18
		p	0		entity
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)V	a	assertValueEqual
		p	1		value
		p	2		expected
		p	3		name
	m	(Ljava/lang/Runnable;)V	a	succeedIf
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$28
		p	2		tick
	m	(Ljava/lang/String;)V	a	fail
		p	1		message
	m	(Ljava/lang/String;Lbsr;)V	a	fail
		p	1		message
		p	2		entity
	m	(Ljava/lang/String;Ljd;)V	a	fail
		p	1		message
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
		p	1		posConsumer
	m	(Ljava/util/function/Predicate;Ldtc;)Z	a	lambda$assertBlock$11
		p	1		state
	m	(Ljd;)Ldtc;	a	getBlockState
		p	1		pos
	m	(Ljd;J)V	a	pulseRedstone
		p	1		pos
		p	2		delay
	m	(Ljd;Lbsx;Lcul;)V	a	assertEntityIsHolding
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Ljd;Lbsx;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Ljd;Lcmx;)V	a	useBlock
		p	1		pos
		p	2		player
	m	(Ljd;Lcmx;Lewy;)V	a	useBlock
		p	1		pos
		p	2		player
		p	3		result
	m	(Ljd;Lcul;)V	a	assertContainerContains
		p	1		pos
		p	2		item
	m	(Ljd;Ldfy;)V	a	setBlock
		p	1		pos
		p	2		block
	m	(Ljd;Ldfy;Ldfy;)Z	a	lambda$assertBlockNotPresent$8
		p	3		block1
	m	(Ljd;Ldtc;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Ljd;Lduf;Ljava/lang/Comparable;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		value
	m	(Ljd;Lduf;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlockProperty
		p	1		pos
		p	2		property
		p	3		predicate
		p	4		errorMessage
	m	(Ljd;Lejj;Ljd;)V	a	lambda$assertSameBlockStates$20
		p	3		checkedPos
	m	(Ljd;Ljava/util/function/Predicate;Ljava/lang/String;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessage
	m	(Ljd;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlock
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(Ljd;Ljd;)V	a	assertSameBlockState
		p	1		checkedPos
		p	2		correctStatePos
	m	(Ljd;Lji;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V	a	assertRedstoneSignal
		p	1		pos
		p	2		direction
		p	3		powerPredicate
		p	4		errorMessage
	m	(ZLjava/lang/String;)V	a	assertTrue
		p	1		condition
		p	2		message
	m	()V	b	killAllEntities
	m	(III)V	b	pullLever
		p	1		x
		p	2		y
		p	3		z
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
		p	1		ticks
		p	3		runnable
	m	(Lbsx;)V	b	assertEntityPresent
		p	1		type
	m	(Lbsx;DDD)V	b	assertEntityNotTouching
		p	1		type
		p	2		x
		p	4		y
		p	6		z
	m	(Lbsx;FFF)Lbtp;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;III)Lbtp;	b	spawnWithNoFreeWill
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;IIID)Ljava/util/List;	b	findEntities
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		margin
	m	(Lbsx;Lexc;)Lbtp;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbsx;Lexc;Lexc;)V	b	assertEntityNotPresent
		p	1		type
		p	2		pos1
		p	3		pos2
	m	(Lbsx;Ljd;)Lbtp;	b	spawnWithNoFreeWill
		p	1		type
		p	2		pos
	m	(Lbsx;Ljd;D)Ljava/util/List;	b	getEntities
		p	1		type
		p	2		pos
		p	3		radius
	m	(Lbtn;)Lbtn;	b	withLowHealth
		p	1		entity
	m	(Lbtp;Ljd;F)V	b	lambda$walkTo$3
	m	(Lcul;)V	b	assertItemEntityNotPresent
		p	1		item
	m	(Lcul;Ljd;D)V	b	assertItemEntityNotPresent
		p	1		item
		p	2		pos
		p	3		radius
	m	(Ldfy;III)V	b	assertBlockNotPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Ldfy;Ljd;)V	b	assertBlockNotPresent
		p	1		block
		p	2		pos
	m	(Lexc;)Lexc;	b	relativeVec
		p	1		pos
	m	(Lexc;Lbsr;)Z	b	lambda$assertEntityTouching$16
		p	1		entity
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
		p	1		runnable
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$27
		p	2		tick
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$assertBlockProperty$13
	m	(Ljd;)Ldqh;	b	getBlockEntity
		p	1		pos
	m	(Ljd;Lbsx;Lcul;)V	b	assertEntityInventoryContains
		p	1		pos
		p	2		entityType
		p	3		item
	m	(Ljd;Lbsx;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
		p	1		pos
		p	2		type
		p	3		entityDataGetter
		p	4		data
	m	(Ljd;Lcul;)V	b	lambda$assertAtTickTimeContainerContains$21
	m	(Ljd;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	b	assertBlockState
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	(ZLjava/lang/String;)V	b	assertFalse
		p	1		condition
		p	2		message
	m	()Laqv;	c	makeMockServerPlayerInLevel
	m	(Lbsx;)Ljava/util/List;	c	getEntities
		p	1		type
	m	(Lbsx;III)V	c	assertEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;Ljd;)V	c	assertEntityPresent
		p	1		type
		p	2		pos
	m	(Ldfy;III)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		x
		p	3		y
		p	4		z
	m	(Ldfy;Ljd;)V	c	succeedWhenBlockPresent
		p	1		block
		p	2		pos
	m	(Ljava/lang/Runnable;)V	c	failIf
		p	1		task
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$assertBlock$10
	m	(Ljd;)V	c	pressButton
		p	1		pos
	m	(Ljd;Lbsx;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$23
	m	(Ljd;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	c	assertBlockEntityData
		p	1		pos
		p	2		predicate
		p	3		errorMessageSupplier
	m	()V	d	setNight
	m	(Lbsx;)V	d	assertEntityNotPresent
		p	1		type
	m	(Lbsx;III)V	d	assertEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;Ljd;)V	d	assertEntityNotPresent
		p	1		type
		p	2		pos
	m	(Ldfy;Ljd;)V	d	lambda$succeedWhenBlockPresent$9
	m	(Ljava/lang/Runnable;)V	d	failIfEver
		p	1		task
	m	(Ljd;)V	d	useBlock
		p	1		pos
	m	()V	e	succeed
	m	(Lbsx;III)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;Ljd;)V	e	succeedWhenEntityPresent
		p	1		type
		p	2		pos
	m	(Ljava/lang/Runnable;)V	e	onEachTick
		p	1		runnable
	m	(Ljd;)V	e	pullLever
		p	1		pos
	m	()V	f	tickPrecipitation
	m	(Lbsx;III)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbsx;Ljd;)V	f	succeedWhenEntityNotPresent
		p	1		type
		p	2		pos
	m	(Ljd;)V	f	destroyBlock
		p	1		pos
	m	()Ltb;	g	startSequence
	m	(Lbsx;Ljd;)V	g	lambda$succeedWhenEntityNotPresent$25
	m	(Ljd;)V	g	assertContainerEmpty
		p	1		pos
	m	()Ldmm;	h	getTestRotation
	m	(Lbsx;Ljd;)V	h	lambda$succeedWhenEntityPresent$24
	m	(Ljd;)V	h	randomTick
		p	1		pos
	m	()J	i	getTick
	m	(Ljd;)V	i	tickPrecipitation
		p	1		pos
	m	()Lewx;	j	getBounds
	m	(Ljd;)Ljd;	j	absolutePos
		p	1		pos
	m	()V	k	ensureSingleFinalCheck
	m	(Ljd;)Ljd;	k	relativePos
		p	1		pos
	m	()Lewx;	l	getRelativeBounds
	m	(Ljd;)V	l	lambda$assertAtTickTimeContainerEmpty$22
	m	()Ljava/lang/Exception;	m	lambda$failIf$26
	m	(Ljd;)V	m	lambda$pulseRedstone$6
	m	()Ljava/lang/String;	n	lambda$pressButton$5
	f	Lsx;	a	testInfo
	f	Z	b	finalCheckAdded
c	sw$1	net/minecraft/gametest/framework/GameTestHarnessHelper$1
	m	(Lsw;Ldcw;Ljd;FLcom/mojang/authlib/GameProfile;Ldct;)V	<init>	<init>
		p	2		world
		p	3		pos
		p	4		yaw
		p	5		gameProfile
	m	()Z	R_	isSpectator
	m	()Z	f	isCreative
	m	()Z	g	isLocalPlayer
	f	Ldct;	b	val$gameType
c	sw$2	net/minecraft/gametest/framework/GameTestHarnessHelper$2
	m	(Lsw;Lnet/minecraft/server/MinecraftServer;Laqu;Lcom/mojang/authlib/GameProfile;Laqh;)V	<init>	<init>
		p	2		server
		p	3		world
		p	4		profile
		p	5		clientOptions
	m	()Z	R_	isSpectator
	m	()Z	f	isCreative
c	sx	net/minecraft/gametest/framework/GameTestHarnessInfo
	m	(Ltr;Ldmm;Laqu;Ltk;)V	<init>	<init>
		p	1		testFunction
		p	2		rotation
		p	3		world
		p	4		testAttemptConfig
	m	()Ljava/util/stream/Stream;	A	getListeners
	m	()Lsx;	B	copyReset
	m	()Z	C	ensureStructureIsPlaced
	m	()V	D	tickInternal
	m	()V	E	startTest
	m	()V	F	finish
	m	()Ljd;	G	getOrCalculateNorthwestCorner
	m	()Lsx;	a	placeStructure
	m	(I)Lsx;	a	startExecution
		p	1		additionalExpectedStopTime
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
		p	1		tick
		p	3		runnable
	m	(Lbsr;)V	a	lambda$succeed$6
		p	0		entity
	m	(Ldcd;)Z	a	lambda$tick$0
		p	1		chunkPos
	m	(Ljava/lang/Throwable;)V	a	fail
		p	1		throwable
	m	(Ljd;)V	a	setStructureBlockPos
		p	1		pos
	m	(Lsy;)V	a	addListener
		p	1		listener
	m	(Lta;)V	a	tick
		p	1		context
	m	(Lta;Lsy;)V	a	lambda$tick$2
		p	2		listener
	m	(Ltb;)V	a	lambda$tickInternal$4
		p	1		runner
	m	()Ljava/lang/String;	b	getTestName
	m	(Lbsr;)Z	b	lambda$succeed$5
		p	0		entity
	m	(Ljd;)V	b	setNorthWestCorner
		p	1		boxMinPos
	m	(Lsy;)V	b	lambda$prepareTestStructure$7
		p	1		listener
	m	(Lta;Lsy;)V	b	lambda$tick$1
		p	2		listener
	m	(Ltb;)V	b	lambda$tickInternal$3
		p	1		runner
	m	()Ljd;	c	getStructureBlockPos
	m	()Lewx;	d	getStructureBounds
	m	()Ldrx;	e	getStructureBlockEntity
	m	()Laqu;	f	getLevel
	m	()Z	g	hasSucceeded
	m	()Z	h	hasFailed
	m	()Z	i	hasStarted
	m	()Z	j	isDone
	m	()J	k	getRunTime
	m	()V	l	succeed
	m	()Ljava/lang/Throwable;	m	getError
	m	()Lsx;	n	prepareTestStructure
	m	()J	o	getTick
	m	()Ltb;	p	createSequence
	m	()Z	q	isRequired
	m	()Z	r	isOptional
	m	()Ljava/lang/String;	s	getStructureName
	m	()Ldmm;	t	getRotation
	m	()Ltr;	u	getTestFunction
	m	()I	v	getTimeoutTicks
	m	()Z	w	isFlaky
	m	()I	x	maxAttempts
	m	()I	y	requiredSuccesses
	m	()Ltk;	z	retryOptions
	f	Ltr;	a	testFunction
	f	Ljd;	b	structureBlockPos
	f	Ljd;	c	northWestCorner
	f	Laqu;	d	level
	f	Ljava/util/Collection;	e	listeners
	f	I	f	timeoutTicks
	f	Ljava/util/Collection;	g	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	h	runAtTickTimeMap
	f	J	i	startTick
	f	I	j	ticksToWaitForChunkLoading
	f	Z	k	placedStructure
	f	Z	l	chunksLoaded
	f	J	m	tickCount
	f	Z	n	started
	f	Ltk;	o	retryOptions
	f	Lcom/google/common/base/Stopwatch;	p	timer
	f	Z	q	done
	f	Ldmm;	r	rotation
	f	Ljava/lang/Throwable;	s	error
	f	Ldrx;	t	structureBlockEntity
c	sy	net/minecraft/gametest/framework/GameTestHarnessListener
	m	(Lsx;)V	a	testStructureLoaded
		p	1		test
	m	(Lsx;Lsx;Lta;)V	a	testAddedForRerun
		p	1		prevState
		p	2		nextState
		p	3		context
	m	(Lsx;Lta;)V	a	testPassed
		p	1		test
		p	2		context
	m	(Lsx;Lta;)V	b	testFailed
		p	1		test
		p	2		context
c	sz	net/minecraft/gametest/framework/GameTestHarnessRegistry
	m	()Ljava/util/Collection;	a	getAllTestFunctions
	m	(Laqu;)V	a	lambda$getAfterBatchFunction$2
		p	0		world
	m	(Ljava/lang/Class;)V	a	register
		p	0		testClass
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	a	getTestFunctionsForClassName
		p	0		testClass
	m	(Ljava/lang/String;Ltr;)Z	a	lambda$findTestFunction$3
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)V	a	register
		p	0		method
	m	(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V	a	registerBatchFunction
		p	0		method
		p	1		clazz
		p	2		batchIdFunction
		p	3		batchConsumerMap
	m	(Ljava/lang/reflect/Method;Ljava/lang/Object;)V	a	lambda$turnMethodIntoConsumer$4
		p	1		args
	m	(Ltr;)V	a	rememberFailedTest
		p	0		testFunction
	m	(Ltr;Ljava/lang/String;)Z	a	isTestFunctionPartOfClass
		p	0		testFunction
		p	1		testClass
	m	()Ljava/util/Collection;	b	getAllTestClassNames
	m	(Laqu;)V	b	lambda$getBeforeBatchFunction$1
		p	0		world
	m	(Ljava/lang/String;)Z	b	isTestClass
		p	0		testClass
	m	(Ljava/lang/String;Ltr;)Z	b	lambda$getTestFunctionsForClassName$0
		p	1		testFunction
	m	(Ljava/lang/reflect/Method;)Ljava/util/Collection;	b	useTestGeneratorMethod
		p	0		method
	m	()Ljava/util/stream/Stream;	c	getLastFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	c	getBeforeBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Ltr;	c	turnMethodIntoTestFunction
		p	0		method
	m	()V	d	forgetFailedTests
	m	(Ljava/lang/String;)Ljava/util/function/Consumer;	d	getAfterBatchFunction
		p	0		batchId
	m	(Ljava/lang/reflect/Method;)Ljava/util/function/Consumer;	d	turnMethodIntoConsumer
		p	0		method
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	findTestFunction
		p	0		structurePath
	m	(Ljava/lang/String;)Ltr;	f	getTestFunction
		p	0		structurePath
	f	Ljava/util/Collection;	a	TEST_FUNCTIONS
	f	Ljava/util/Set;	b	TEST_CLASS_NAMES
	f	Ljava/util/Map;	c	BEFORE_BATCH_FUNCTIONS
	f	Ljava/util/Map;	d	AFTER_BATCH_FUNCTIONS
	f	Ljava/util/Set;	e	LAST_FAILED_TESTS
c	ta	net/minecraft/gametest/framework/GameTestHarnessRunner
	m	(Lta$b;Ljava/util/Collection;Laqu;Ltd;Lta$c;Lta$c;Z)V	<init>	<init>
		p	1		batcher
		p	2		batches
		p	3		world
		p	4		manager
		p	5		reuseSpawner
		p	6		initialSpawner
		p	7		stopAfterFailure
	m	()Ljava/util/List;	a	getTestInfos
	m	(I)V	a	runBatch
		p	1		batchIndex
	m	(Laqu;)V	a	clearMarkers
		p	0		world
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	createStructuresForBatch
		p	1		oldStates
	m	(Lsr;)Ljava/util/stream/Stream;	a	lambda$new$0
		p	0		batch
	m	(Lst;)V	a	addListener
		p	1		batchListener
	m	(Lsx;)V	a	rerunTest
		p	1		state
	m	(Lsx;Lsx;Lsy;)V	a	lambda$rerunTest$2
		p	3		listener
	m	()V	b	start
	m	(Lst;)V	b	lambda$runBatch$3
		p	1		listener
	m	(Lsx;)Ljava/util/Optional;	b	spawn
		p	1		oldState
	m	()V	c	stop
	m	(Lsx;)Ljava/lang/String;	c	lambda$runScheduledRerunTests$4
		p	0		state
	m	()V	d	runScheduledRerunTests
	m	(Lsx;)V	d	lambda$new$1
		p	0		state
	f	I	a	DEFAULT_TESTS_PER_ROW
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laqu;	c	level
	f	Ltd;	d	testTicker
	f	Ljava/util/List;	e	allTestInfos
	f	Lcom/google/common/collect/ImmutableList;	f	batches
	f	Ljava/util/List;	g	batchListeners
	f	Ljava/util/List;	h	scheduledForRerun
	f	Lta$b;	i	testBatcher
	f	Z	j	stopped
	f	Lsr;	k	currentBatch
	f	Lta$c;	l	existingStructureSpawner
	f	Lta$c;	m	newStructureSpawner
	f	Z	n	haltOnError
c	ta$1	net/minecraft/gametest/framework/GameTestHarnessRunner$1
	m	()V	a	testCompleted
	m	(J)V	a	lambda$testFailed$2
		p	1		chunkPos
	m	(Lst;)V	a	lambda$testCompleted$0
		p	1		listener
	m	(Lsx;)V	a	testStructureLoaded
		p	1		test
	m	(Lsx;Lsx;Lta;)V	a	testAddedForRerun
		p	1		prevState
		p	2		nextState
		p	3		context
	m	(Lsx;Lta;)V	a	testPassed
		p	1		test
		p	2		context
	m	(J)V	b	lambda$testCompleted$1
		p	1		chunkPos
	m	(Lsx;Lta;)V	b	testFailed
		p	1		test
		p	2		context
	f	Lti;	a	val$currentBatchTracker
	f	I	b	val$batchIndex
	f	Lta;	c	this$0
c	ta$a	net/minecraft/gametest/framework/GameTestHarnessRunner$a
	m	(Ljava/util/Collection;Laqu;)V	<init>	<init>
		p	1		batches
		p	2		world
	m	()Lta;	a	build
	m	(Ljava/util/Collection;Laqu;)Lta$a;	a	fromBatches
		p	0		batches
		p	1		world
	m	(Lta$b;)Lta$a;	a	batcher
		p	1		batcher
	m	(Lta$c;)Lta$a;	a	newStructureSpawner
		p	1		initialSpawner
	m	(Ltm;)Lta$a;	a	existingStructureSpawner
		p	1		reuseSpawner
	m	(Z)Lta$a;	a	haltOnError
		p	1		stopAfterFailure
	m	(Ljava/util/Collection;Laqu;)Lta$a;	b	fromInfo
		p	0		states
		p	1		world
	f	Laqu;	a	level
	f	Ltd;	b	testTicker
	f	Lta$b;	c	batcher
	f	Lta$c;	d	existingStructureSpawner
	f	Lta$c;	e	newStructureSpawner
	f	Ljava/util/Collection;	f	batches
	f	Z	g	haltOnError
c	ta$b	net/minecraft/gametest/framework/GameTestHarnessRunner$b
	m	(Ljava/util/Collection;)Ljava/util/Collection;	batch	batch
		p	1		states
c	ta$c	net/minecraft/gametest/framework/GameTestHarnessRunner$c
	m	(Laqu;)V	a	onBatchStart
		p	1		world
	m	(Lsx;)Ljava/util/Optional;	a	lambda$static$1
		p	0		oldState
	m	(Lsx;)Ljava/util/Optional;	b	lambda$static$0
		p	0		oldState
	m	(Lsx;)Ljava/util/Optional;	spawnStructure	spawnStructure
		p	1		oldState
	f	Lta$c;	a	IN_PLACE
	f	Lta$c;	b	NOT_SET
c	tb	net/minecraft/gametest/framework/GameTestHarnessSequence
	m	(Lsx;)V	<init>	<init>
		p	1		gameTest
	m	()V	a	thenSucceed
	m	(I)Ltb;	a	thenIdle
		p	1		minDuration
	m	(ILjava/lang/Runnable;)Ltb;	a	thenExecuteAfter
		p	1		minDuration
		p	2		task
	m	(J)V	a	tickAndContinue
		p	1		tick
	m	(JLjava/lang/Runnable;)Ltb;	a	thenWaitUntil
		p	1		duration
		p	3		task
	m	(Ljava/lang/Runnable;)Ltb;	a	thenWaitUntil
		p	1		task
	m	(Ljava/util/function/Supplier;)V	a	thenFail
		p	1		exceptionSupplier
	m	(Ltb$a;)V	a	lambda$thenTrigger$5
	m	()Ltb$a;	b	thenTrigger
	m	(ILjava/lang/Runnable;)Ltb;	b	thenExecuteFor
		p	1		minDuration
		p	2		task
	m	(J)V	b	tickAndFailIfNotComplete
		p	1		tick
	m	(Ljava/lang/Runnable;)Ltb;	b	thenExecute
		p	1		task
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	()V	c	lambda$thenIdle$0
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(J)V	c	tick
		p	1		tick
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
		p	1		task
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	f	Lsx;	a	parent
	f	Ljava/util/List;	b	events
	f	J	c	lastTick
c	tb$a	net/minecraft/gametest/framework/GameTestHarnessSequence$a
	m	()V	a	assertTriggeredThisTick
	m	(J)V	a	trigger
		p	1		tick
	f	Ltb;	a	this$0
	f	J	b	NOT_TRIGGERED
	f	J	c	triggerTime
c	tc	tc
	m	(Ljava/lang/Thread;Lerf$c;Latp;Lalp;Ljava/util/Collection;Ljd;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		testFunctions
		p	6		pos
	m	()Z	M_	shouldInformAdmins
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lalo$c;Ldda;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$create$2
		p	2		executor
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ldcs;)V	a	lambda$static$0
		p	0		gameRules
	m	(Ldda;Lalo$a;)Lalo$b;	a	lambda$create$1
		p	1		context
	m	(Ljava/lang/Thread;Lerf$c;Latp;Ljava/util/Collection;Ljd;)Ltc;	a	create
		p	0		thread
		p	1		session
		p	2		resourcePackManager
		p	3		batches
		p	4		pos
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Lsx;)V	a	lambda$tickServer$4
		p	0		test
	m	(Laqu;)V	b	startTests
		p	1		world
	m	(Lsx;)V	b	lambda$tickServer$3
		p	0		test
	m	()Z	br	haveTestsStarted
	m	()Z	e	initServer
	m	()Lblu;	f	getTickTimeLogger
	m	()Z	g	isTickTimeLoggingEnabled
	m	()V	i	onServerExit
	m	()Z	j	isHardcore
	m	()I	k	getOperatorUserPermissionLevel
	m	()I	l	getFunctionCompilationLevel
	m	()Z	m	shouldRconBroadcast
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	p	isEpollEnabled
	m	()Z	q	isCommandBlockEnabled
	m	()Z	r	isPublished
	m	()V	v_	waitUntilNextTick
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	I	l	PROGRESS_REPORT_INTERVAL
	f	I	m	TEST_POSITION_RANGE
	f	Lalm;	n	NO_SERVICES
	f	Lblr;	o	sampleLogger
	f	Ljava/util/List;	p	testBatches
	f	Ljava/util/List;	q	testFunctions
	f	Ljd;	r	spawnPos
	f	Lcom/google/common/base/Stopwatch;	s	stopwatch
	f	Ldcs;	t	TEST_GAME_RULES
	f	Ldzw;	u	WORLD_OPTIONS
	f	Lti;	v	testTracker
c	tc$1	tc$1
	m	(Ltc;Lnet/minecraft/server/MinecraftServer;Ljt;Leri;I)V	<init>	<init>
		p	2		server
		p	3		registryManager
		p	4		saveHandler
		p	5		maxPlayers
c	td	net/minecraft/gametest/framework/GameTestHarnessTicker
	m	()V	a	clear
	m	(Lsx;)V	a	add
		p	1		test
	m	(Lta;)V	a	setRunner
		p	1		runContext
	m	()V	b	tick
	m	(Lsx;)V	b	lambda$tick$0
		p	1		test
	f	Ltd;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
	f	Lta;	c	runner
c	te	net/minecraft/gametest/framework/GameTestHarnessTimeout
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	tf	net/minecraft/gametest/framework/GlobalTestReporter
	m	()V	a	finish
	m	(Lsx;)V	a	onTestFailed
		p	0		test
	m	(Ltu;)V	a	replaceWith
		p	0		listener
	m	(Lsx;)V	b	onTestSuccess
		p	0		test
	f	Ltu;	a	DELEGATE
c	tg	tg
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
		p	1		file
	m	(Lsx;)V	a	onTestFailed
		p	1		test
	m	(Lsx;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
		p	1		test
		p	2		name
	m	(Lsx;)V	b	onTestSuccess
		p	1		test
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
c	th	net/minecraft/gametest/framework/GameTestHarnessLogger
	m	(Lsx;)V	a	onTestFailed
		p	1		test
	m	(Lsx;)V	b	onTestSuccess
		p	1		test
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ti	net/minecraft/gametest/framework/GameTestHarnessCollector
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		tests
	m	()I	a	getFailedRequiredCount
	m	(Ljava/lang/StringBuffer;Lsx;)V	a	lambda$getProgressBar$1
		p	1		test
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
		p	1		onFailed
	m	(Lsx;)V	a	addTestToTrack
		p	1		test
	m	(Lsy;)V	a	addListener
		p	1		listener
	m	(Lsy;Lsx;)V	a	lambda$addListener$0
		p	1		test
	m	()I	b	getFailedOptionalCount
	m	(Lsx;)V	b	remove
		p	1		state
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
c	ti$1	net/minecraft/gametest/framework/GameTestHarnessCollector$1
	m	(Lsx;)V	a	testStructureLoaded
		p	1		test
	m	(Lsx;Lsx;Lta;)V	a	testAddedForRerun
		p	1		prevState
		p	2		nextState
		p	3		context
	m	(Lsx;Lta;)V	a	testPassed
		p	1		test
		p	2		context
	m	(Lsx;Lta;)V	b	testFailed
		p	1		test
		p	2		context
	f	Ljava/util/function/Consumer;	a	val$listener
c	tj	net/minecraft/gametest/framework/ReportGameListener
	m	(Laqu;Ljd;Ljava/lang/String;)V	a	showRedBox
		p	0		world
		p	1		pos
		p	2		message
	m	(Laqu;Ln;Ljava/lang/String;)V	a	say
		p	0		world
		p	1		formatting
		p	2		message
	m	(Laqv;)Z	a	lambda$say$1
		p	0		player
	m	(Ljava/lang/String;Ln;Laqv;)V	a	lambda$say$2
		p	2		player
	m	(Ljava/lang/String;ZLjava/lang/String;)Lcuq;	a	createBook
		p	0		text
		p	1		required
		p	2		output
	m	(Ljava/lang/StringBuffer;Ljava/lang/String;)V	a	lambda$createBook$0
		p	1		line
	m	(Lsx;)V	a	testStructureLoaded
		p	1		test
	m	(Lsx;Ldfy;)V	a	spawnBeacon
		p	0		test
		p	1		block
	m	(Lsx;Ljava/lang/String;)V	a	reportPassed
		p	0		test
		p	1		output
	m	(Lsx;Ljava/lang/Throwable;)V	a	reportFailure
		p	0		test
		p	1		output
	m	(Lsx;Lsx;Lta;)V	a	testAddedForRerun
		p	1		prevState
		p	2		nextState
		p	3		context
	m	(Lsx;Lta;)V	a	testPassed
		p	1		test
		p	2		context
	m	(Lsx;Lta;Z)V	a	handleRetry
		p	1		state
		p	2		context
		p	3		prevPassed
	m	(Lsx;)Ljd;	b	getBeaconPos
		p	0		state
	m	(Lsx;Ldfy;)V	b	updateBeaconGlass
		p	0		state
		p	1		block
	m	(Lsx;Ljava/lang/String;)V	b	visualizePassedTest
		p	0		test
		p	1		output
	m	(Lsx;Ljava/lang/Throwable;)V	b	visualizeFailedTest
		p	0		test
		p	1		output
	m	(Lsx;Lta;)V	b	testFailed
		p	1		test
		p	2		context
	m	(Lsx;Ljava/lang/String;)V	c	spawnLectern
		p	0		test
		p	1		output
	f	I	a	attempts
	f	I	b	successes
c	tk	net/minecraft/gametest/framework/RetryOptions
	m	()Ltk;	a	noRetries
	m	(II)Z	a	hasTriesLeft
		p	1		attempt
		p	2		successes
	m	()Z	b	unlimitedTries
	m	()Z	c	hasRetries
	m	()I	d	numberOfTries
	m	()Z	e	haltOnFailure
	f	I	a	numberOfTries
	f	Z	b	haltOnFailure
	f	Ltk;	c	NO_RETRIES
c	tl	net/minecraft/gametest/framework/StructureBlockPosFinder
c	tm	net/minecraft/gametest/framework/StructureGridSpawner
	m	(Ljd;IZ)V	<init>	<init>
		p	1		origin
		p	2		testsPerRow
		p	3		clearBeforeBatch
	m	(Laqu;)V	a	onBatchStart
		p	1		world
	m	(Laqu;Lsx;)V	a	lambda$onBatchStart$0
		p	1		state
	m	(Lsx;)Ljava/util/Optional;	spawnStructure	spawnStructure
		p	1		oldState
	f	I	c	SPACE_BETWEEN_COLUMNS
	f	I	d	SPACE_BETWEEN_ROWS
	f	I	e	testsPerRow
	f	I	f	currentRowCount
	f	Lewx;	g	rowBounds
	f	Ljd$a;	h	nextTestNorthWestCorner
	f	Ljd;	i	firstTestNorthWestCorner
	f	Z	j	clearOnBatch
	f	F	k	maxX
	f	Ljava/util/Collection;	l	testInLastBatch
c	tn	net/minecraft/gametest/framework/GameTestHarnessStructures
	m	(I)Ldmm;	a	getRotationForRotationSteps
		p	0		steps
	m	(ILaqu;Ljd;)V	a	lambda$clearSpaceForStructure$4
		p	2		pos
	m	(ILjd;Laqu;)V	a	clearBlock
		p	0		altitude
		p	1		pos
		p	2		world
	m	(Laqu;Ldcd;)V	a	lambda$forceLoadChunks$3
		p	1		chunkPos
	m	(Laqu;Ljd;)Ljava/util/Optional;	a	lambda$lookedAtStructureBlockPos$11
		p	1		p
	m	(Lbsr;)Z	a	lambda$clearSpaceForStructure$5
		p	0		entity
	m	(Ldmm;)I	a	getRotationStepsForRotation
		p	0		rotation
	m	(Ldrx;)Lewx;	a	getStructureBounds
		p	0		structureBlockEntity
	m	(Lejj;Laqu;)V	a	clearSpaceForStructure
		p	0		area
		p	1		world
	m	(Lewx;Laqu;)V	a	removeBarriers
		p	0		box
		p	1		world
	m	(Lewx;Laqu;Z)V	a	encaseStructure
		p	0		box
		p	1		world
		p	2		noSkyAccess
	m	(Lexc;Lexc;Ldrx;)Z	a	lambda$lookedAtStructureBlockPos$12
		p	2		blockEntity
	m	(Ljava/lang/String;Ldrx;)Z	a	lambda$findStructureByTestFunction$9
		p	1		blockEntity
	m	(Ljava/lang/String;Ljd;Lkh;Ldmm;Laqu;)V	a	createNewEmptyStructureBlock
		p	0		testName
		p	1		pos
		p	2		relativePos
		p	3		rotation
		p	4		world
	m	(Ljd;ILaqu;)Ljava/util/Optional;	a	findStructureBlockContainingPos
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljd;ILaqu;Ljava/lang/String;)Ljava/util/stream/Stream;	a	findStructureByTestFunction
		p	0		pos
		p	1		radius
		p	2		world
		p	3		templateName
	m	(Ljd;Laqu;Ljd;)Z	a	lambda$findStructureBlockContainingPos$6
		p	2		structureBlockPos
	m	(Ljd;Lbsr;Laqu;)Ljava/util/stream/Stream;	a	lookedAtStructureBlockPos
		p	0		pos
		p	1		entity
		p	2		world
	m	(Ljd;Ljd;)I	a	lambda$findNearestStructureBlock$7
		p	1		posx
	m	(Ljd;Ljd;Laqu;)Z	a	doesStructureContain
		p	0		structureBlockPos
		p	1		pos
		p	2		world
	m	(Ljd;Ljd;Laqu;Ljd;)V	a	lambda$removeBarriers$2
		p	3		pos
	m	(Ljd;Ljd;Ldmm;Laqu;)V	a	addCommandBlockAndButtonToStartTest
		p	0		pos
		p	1		relativePos
		p	2		rotation
		p	3		world
	m	(Ljd;Ljd;ZLaqu;Ljd;)V	a	lambda$encaseStructure$1
		p	4		pos
	m	(Ljd;Lkh;Ldmm;)Ljd;	a	getTransformedFarCorner
		p	0		pos
		p	1		size
		p	2		rotation
	m	(Lsx;)Ljava/lang/IllegalStateException;	a	lambda$prepareTestStructure$0
	m	(Lsx;Ljd;Ldmm;Laqu;)Ldrx;	a	prepareTestStructure
		p	0		state
		p	1		pos
		p	2		rotation
		p	3		world
	m	(Laqu;Ljd;)Z	b	lambda$findStructureBlocks$10
		p	1		p
	m	(Ldrx;)Lejj;	b	getStructureBoundingBox
		p	0		structureBlockEntity
	m	(Lejj;Laqu;)V	b	forceLoadChunks
		p	0		box
		p	1		world
	m	(Ljd;ILaqu;)Ljava/util/Optional;	b	findNearestStructureBlock
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljd;Lkh;Ldmm;)Lejj;	b	getStructureBoundingBox
		p	0		pos
		p	1		relativePos
		p	2		rotation
	m	(Lsx;Ljd;Ldmm;Laqu;)Ldrx;	b	createStructureBlock
		p	0		state
		p	1		pos
		p	2		rotation
		p	3		world
	m	(Laqu;Ljd;)Ldrx;	c	lambda$findStructureByTestFunction$8
		p	1		posx
	m	(Ldrx;)Ljd;	c	getStructureOrigin
		p	0		structureBlockEntity
	m	(Ljd;ILaqu;)Ljava/util/stream/Stream;	c	findStructureBlocks
		p	0		pos
		p	1		radius
		p	2		world
	m	(Ljd;ILaqu;)Lejj;	d	getBoundingBoxAtGround
		p	0		pos
		p	1		radius
		p	2		world
	f	I	a	DEFAULT_Y_SEARCH_RADIUS
	f	Ljava/lang/String;	b	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/lang/String;	c	testStructuresDir
	f	Lorg/slf4j/Logger;	d	LOGGER
c	tn$1	net/minecraft/gametest/framework/GameTestHarnessStructures$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	to	net/minecraft/gametest/framework/GameTestHarnessTestClassArgument
	m	()Lto;	a	testClassName
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	getTestClassName
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	tp	net/minecraft/gametest/framework/GameTestHarnessTestCommand
	m	()I	a	stopTests
	m	(ILet;Ltk;Ltr;)Lsx;	a	lambda$toGameTestInfo$36
		p	3		testFunction
	m	(Laqu;Ljava/lang/String;)Z	a	verifyStructureExists
		p	0		world
		p	1		templateId
	m	(Laqu;Ljava/lang/String;Ln;)V	a	say
		p	0		world
		p	1		message
		p	2		formatting
	m	(Laqu;Ljd;)V	a	lambda$createNewStructure$37
		p	1		pos
	m	(Laqv;)Z	a	lambda$say$41
		p	0		player
	m	(Lbsr;)V	a	lambda$resetGameTestInfo$33
		p	0		entity
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$runWithRetryOptions$3
		p	0		extraConfigAdder
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	runWithRetryOptions
		p	0		builder
		p	1		callback
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	runWithRetryOptions
		p	0		builder
		p	1		callback
		p	2		extraConfigAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$32
		p	0		context
	m	(Let;)Ljd;	a	createTestPositionAround
		p	0		source
	m	(Let;Laqu;Lta;)I	a	trackAndStartRunner
		p	0		source
		p	1		world
		p	2		context
	m	(Let;Ldrx;)I	a	saveAndExportTestStructure
		p	0		source
		p	1		blockEntity
	m	(Let;Ljava/lang/String;)I	a	showPos
		p	0		source
		p	1		variableName
	m	(Let;Ljava/lang/String;III)I	a	createNewStructure
		p	0		source
		p	1		testName
		p	2		x
		p	3		y
		p	4		z
	m	(Let;Ltk;Ljd;)Ljava/util/Optional;	a	lambda$toGameTestInfos$34
		p	2		pos
	m	(Let;Ltk;Ltl;)Ljava/util/stream/Stream;	a	toGameTestInfos
		p	0		source
		p	1		config
		p	2		finder
	m	(Let;Ltk;Ltt;I)Ljava/util/stream/Stream;	a	toGameTestInfo
		p	0		source
		p	1		config
		p	2		finder
		p	3		rotationSteps
	m	(Let;Ltr;)Z	a	lambda$toGameTestInfo$35
		p	1		testFunction
	m	(Ljava/lang/String;)Lwz;	a	lambda$say$40
	m	(Ljava/lang/String;Ln;Laqv;)V	a	lambda$say$42
		p	2		player
	m	(Ljava/lang/String;Lwz;)Lwz;	a	lambda$showPos$38
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$runWithRetryOptionsAndBuildInfo$6
		p	1		extraConfigAdder
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$runWithRetryOptionsAndBuildInfo$5
		p	1		context
	m	(Ljd;Laqu;Ltk;)Ljava/util/Optional;	a	createGameTestInfo
		p	0		pos
		p	1		world
		p	2		config
	m	(Lsx;)I	a	resetGameTestInfo
		p	0		state
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	runWithRetryOptionsAndBuildInfo
		p	0		builder
		p	1		callback
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$31
		p	0		context
	m	(Let;Ljava/lang/String;)I	b	exportTestStructure
		p	0		source
		p	1		testName
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$runWithRetryOptionsAndBuildInfo$4
		p	1		context
	m	(Lsx;)V	b	lambda$trackAndStartRunner$39
		p	0		state
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$30
		p	0		context
	m	(Let;Ljava/lang/String;)V	c	say
		p	0		source
		p	1		message
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$runWithRetryOptions$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$29
		p	0		context
	m	(Let;Ljava/lang/String;)I	d	importTestStructure
		p	0		source
		p	1		testName
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$runWithRetryOptions$1
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$28
		p	0		context
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$runWithRetryOptions$0
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$27
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$26
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$25
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltp$a;	x	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltp$a;	y	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltp$a;	z	lambda$register$7
		p	0		context
	f	I	a	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS
	f	I	b	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	DEFAULT_CLEAR_RADIUS
	f	I	e	MAX_CLEAR_RADIUS
	f	I	f	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	g	SHOW_POS_DURATION_MS
	f	I	h	DEFAULT_X_SIZE
	f	I	i	DEFAULT_Y_SIZE
	f	I	j	DEFAULT_Z_SIZE
	f	Ljava/lang/String;	k	STRUCTURE_BLOCK_ENTITY_COULD_NOT_BE_FOUND
	f	Ltq$a;	l	testFinder
c	tp$a	net/minecraft/gametest/framework/GameTestHarnessTestCommand$a
	m	(Ltq;)V	<init>	<init>
		p	1		finder
	m	()I	a	reset
	m	(I)I	a	run
		p	1		rotationSteps
	m	(II)I	a	run
		p	1		rotationSteps
		p	2		testsPerRow
	m	(Laqu;)V	a	lambda$export$4
	m	(Laqu;Ljd;)I	a	lambda$clear$0
		p	1		pos
	m	(Laqu;Lorg/apache/commons/lang3/mutable/MutableBoolean;Let;Ljd;)I	a	lambda$export$3
		p	3		pos
	m	(Let;Ljava/lang/Integer;)V	a	lambda$export$5
		p	1		count
	m	(Ljava/lang/String;Lxw;)Lxw;	a	lambda$locate$6
		p	1		style
	m	(Ljava/util/stream/Stream;Ljava/util/function/ToIntFunction;Ljava/lang/Runnable;Ljava/util/function/Consumer;)V	a	logAndRun
		p	1		finder
		p	2		consumer
		p	3		emptyCallback
		p	4		finishCallback
	m	(Ljd;Lorg/apache/commons/lang3/mutable/MutableInt;Ljd;)V	a	lambda$locate$8
		p	3		pos
	m	(Ltk;)I	a	run
		p	1		config
	m	(Ltk;I)I	a	run
		p	1		config
		p	2		rotationSteps
	m	(Ltk;II)I	a	run
		p	1		config
		p	2		rotationSteps
		p	3		testsPerRow
	m	(Lwz;)Lwz;	a	lambda$locate$7
	m	()I	b	clear
	m	(Laqu;)V	b	lambda$clear$1
	m	(Let;Ljava/lang/Integer;)V	b	lambda$clear$2
		p	1		count
	m	()I	c	export
	m	()I	d	run
	m	()I	e	locate
	m	()I	f	verify
	f	Ltq;	a	finder
c	tp$b	net/minecraft/gametest/framework/GameTestHarnessTestCommand$b
	m	()Let;	a	source
	m	(Lsr;)V	a	testBatchStarting
		p	1		batch
	m	(Lsr;)V	b	testBatchFinished
		p	1		batch
	f	Let;	a	source
c	tp$c	net/minecraft/gametest/framework/GameTestHarnessTestCommand$c
	m	(Laqu;Lti;)V	<init>	<init>
		p	1		world
		p	2		tests
	m	()Laqu;	a	level
	m	(Laqu;Lti;)V	a	showTestSummaryIfAllDone
		p	0		world
		p	1		tests
	m	(Lsx;)V	a	testStructureLoaded
		p	1		test
	m	(Lsx;Lsx;Lta;)V	a	testAddedForRerun
		p	1		prevState
		p	2		nextState
		p	3		context
	m	(Lsx;Lta;)V	a	testPassed
		p	1		test
		p	2		context
	m	()Lti;	b	tracker
	m	(Lsx;Lta;)V	b	testFailed
		p	1		test
		p	2		context
	f	Laqu;	a	level
	f	Lti;	b	tracker
c	tq	net/minecraft/gametest/framework/TestFinder
	m	(Let;Ljava/util/function/Function;Ltt;Ltl;)V	<init>	<init>
		p	1		commandSource
		p	2		runnerFactory
		p	3		testFunctionFinder
		p	4		structureBlockPosFinder
	m	()Let;	a	source
	m	()Ljava/lang/Object;	b	get
	f	Ltt;	a	NO_FUNCTIONS
	f	Ltl;	b	NO_STRUCTURES
	f	Ltt;	c	testFunctionFinder
	f	Ltl;	d	structureBlockPosFinder
	f	Let;	e	source
	f	Ljava/util/function/Function;	f	contextProvider
c	tq$a	net/minecraft/gametest/framework/TestFinder$a
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		runnerFactory
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		runnerFactory
		p	2		testFunctionsSupplierMapper
		p	3		structurePosSupplierMapper
	m	()Ljava/util/stream/Stream;	a	lambda$allTests$8
	m	(I)Ltq$a;	a	createMultipleCopies
		p	1		count
	m	(ILjava/util/function/Supplier;)Ljava/util/function/Supplier;	a	lambda$createCopies$2
		p	1		supplier
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	a	nearest
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Ljava/lang/Object;	a	radius
		p	1		context
		p	2		radius
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/Object;	a	allTestsInClass
		p	1		context
		p	2		testClass
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/lang/Object;	a	failedTests
		p	1		context
		p	2		onlyRequired
	m	(Let;)Ljava/util/stream/Stream;	a	lambda$lookedAt$6
	m	(Let;Ltt;Ltl;)Ljava/lang/Object;	a	build
		p	1		source
		p	2		testFunctionFinder
		p	3		structureBlockFinder
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	a	lambda$allTestsInClass$10
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	lambda$new$1
		p	0		structurePosSupplier
	m	(Ljd;ILet;)Ljava/util/stream/Stream;	a	lambda$radius$3
	m	(Ljd;Let;)Ljava/util/stream/Stream;	a	lambda$allNearby$5
	m	(Ljd;Let;Ljava/lang/String;)Ljava/util/stream/Stream;	a	lambda$locateByName$14
	m	(Ltr;)Z	a	lambda$allTestsInClass$9
	m	(Z)Ljava/util/stream/Stream;	a	lambda$failedTests$12
	m	(ZLtr;)Z	a	lambda$failedTests$11
		p	1		function
	m	(I)Ljava/util/function/UnaryOperator;	b	createCopies
		p	0		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	b	allNearby
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/Object;	b	byArgument
		p	1		context
		p	2		name
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	b	lambda$new$0
		p	0		testFunctionsSupplier
	m	(Ljd;Let;)Ljava/util/stream/Stream;	b	lambda$nearest$4
	m	(Ltr;)Z	b	lambda$allTests$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	c	lookedAt
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/Object;	c	locateByName
		p	1		context
		p	2		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	d	allTests
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/stream/Stream;	d	lambda$byArgument$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	e	failedTests
		p	1		context
	f	Ljava/util/function/Function;	a	contextProvider
	f	Ljava/util/function/UnaryOperator;	b	testFunctionFinderWrapper
	f	Ljava/util/function/UnaryOperator;	c	structureBlockPosFinderWrapper
c	tr	net/minecraft/gametest/framework/GameTestHarnessTestFunction
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		tickLimit
		p	5		duration
		p	7		required
		p	8		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldmm;IJZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		setupTicks
		p	8		required
		p	9		starter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ldmm;IJZZIIZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		batchId
		p	2		templatePath
		p	3		templateName
		p	4		rotation
		p	5		tickLimit
		p	6		duration
		p	8		required
	m	()Z	a	isFlaky
	m	(Lsw;)V	a	run
		p	1		context
	m	()Ljava/lang/String;	b	batchName
	m	()Ljava/lang/String;	c	testName
	m	()Ljava/lang/String;	d	structureName
	m	()Ldmm;	e	rotation
	m	()I	f	maxTicks
	m	()J	g	setupTicks
	m	()Z	h	required
	m	()Z	i	manualOnly
	m	()I	j	maxAttempts
	m	()I	k	requiredSuccesses
	m	()Z	l	skyAccess
	m	()Ljava/util/function/Consumer;	m	function
	f	Ljava/lang/String;	a	batchName
	f	Ljava/lang/String;	b	testName
	f	Ljava/lang/String;	c	structureName
	f	Ldmm;	d	rotation
	f	I	e	maxTicks
	f	J	f	setupTicks
	f	Z	g	required
	f	Z	h	manualOnly
	f	I	i	maxAttempts
	f	I	j	requiredSuccesses
	f	Z	k	skyAccess
	f	Ljava/util/function/Consumer;	l	function
c	ts	net/minecraft/gametest/framework/GameTestHarnessTestFunctionArgument
	m	()Lts;	a	testFunctionArgument
	m	(Lcom/mojang/brigadier/StringReader;)Ltr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTestFunction
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ltr;	a	getTestFunction
		p	0		context
		p	1		name
	f	Ljava/util/Collection;	a	EXAMPLES
c	tt	net/minecraft/gametest/framework/TestFunctionFinder
c	tu	net/minecraft/gametest/framework/GameTestHarnessITestReporter
	m	()V	a	finish
	m	(Lsx;)V	a	onTestFailed
		p	1		test
	m	(Lsx;)V	b	onTestSuccess
		p	1		test
c	tw	net/minecraft/locale/LocaleLanguage
	m	()Ltw;	a	getInstance
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
		p	0		inputStream
		p	1		entryConsumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
		p	1		texts
	m	(Ljava/util/function/BiConsumer;Ljava/lang/String;)V	a	parseTranslations
		p	0		entryConsumer
		p	1		path
	m	(Ltw;)V	a	inject
		p	0		language
	m	(Lxe;)Laya;	a	getVisualOrder
		p	1		text
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	m	()Ltw;	c	loadDefault
	f	Ljava/lang/String;	a	DEFAULT
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Ltw;	e	instance
c	tw$1	net/minecraft/locale/LocaleLanguage$1
	m	(Layb;Lxw;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
		p	1		style
		p	2		string
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
		p	1		key
		p	2		fallback
	m	(Lxe;)Laya;	a	getVisualOrder
		p	1		text
	m	(Lxe;Layb;)Z	a	lambda$getVisualOrder$1
		p	1		visitor
	m	()Z	b	isDefaultRightToLeft
	m	(Ljava/lang/String;)Z	b	has
		p	1		key
	f	Ljava/util/Map;	b	val$storage
c	ty	net/minecraft/nbt/NBTTagByteArray
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Ltz;	a	get
	m	(ILtz;)Ltz;	a	set
	m	(ILuy;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[B	a	toArray
		p	0		list
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Ltz;	b	remove
	m	(ILtz;)V	b	add
	m	(ILuy;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lva;	c	getType
	m	(I)Luy;	c	remove
	m	(ILuy;)V	c	add
	m	()Luy;	d	copy
	m	(ILuy;)Luy;	d	set
	m	()[B	e	getAsByteArray
	m	()B	f	getElementType
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[B	c	data
c	ty$1	net/minecraft/nbt/NBTTagByteArray$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lty;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)[B	d	readAccounted
		p	0		input
		p	1		tracker
c	tz	net/minecraft/nbt/NBTTagByte
	m	(B)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(B)Ltz;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	(Z)Ltz;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Ltz;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lva;	a	TYPE
	f	Ltz;	b	ZERO
	f	Ltz;	c	ONE
	f	I	w	SELF_SIZE_IN_BYTES
	f	B	x	data
c	tz$1	net/minecraft/nbt/NBTTagByte$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Ltz;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)B	d	readAccounted
		p	0		input
		p	1		tracker
c	tz$a	net/minecraft/nbt/NBTTagByte$a
	f	[Ltz;	a	cache
c	ua	net/minecraft/nbt/NBTList
	m	(ILuy;)Z	a	setTag
		p	1		index
		p	2		element
	m	(ILuy;)Z	b	addTag
		p	1		index
		p	2		element
	m	(I)Luy;	c	remove
	m	(ILuy;)V	c	add
	m	(ILuy;)Luy;	d	set
	m	()B	f	getElementType
c	ub	net/minecraft/nbt/NBTTagCompound
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		entries
	m	()I	a	sizeInBytes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		dynamic
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	getUUID
		p	1		key
	m	(Ljava/lang/String;B)V	a	putByte
		p	1		key
		p	2		value
	m	(Ljava/lang/String;D)V	a	putDouble
		p	1		key
		p	2		value
	m	(Ljava/lang/String;F)V	a	putFloat
		p	1		key
		p	2		value
	m	(Ljava/lang/String;I)V	a	putInt
		p	1		key
		p	2		value
	m	(Ljava/lang/String;J)V	a	putLong
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/List;)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/util/UUID;)V	a	putUUID
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Luy;)Luy;	a	put
		p	1		key
		p	2		element
	m	(Ljava/lang/String;Luy;Ljava/io/DataOutput;)V	a	writeNamedTag
		p	0		key
		p	1		element
		p	2		output
	m	(Ljava/lang/String;Lva;Ljava/lang/ClassCastException;)Lo;	a	createReport
		p	1		key
		p	2		reader
		p	3		exception
	m	(Ljava/lang/String;S)V	a	putShort
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Z)V	a	putBoolean
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[B)V	a	putByteArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[I)V	a	putIntArray
		p	1		key
		p	2		value
	m	(Ljava/lang/String;[J)V	a	putLongArray
		p	1		key
		p	2		value
	m	(Lub;)Lub;	a	merge
		p	1		source
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Luy;)Ljava/lang/String;	a	lambda$static$0
	m	(Lva;Ljava/lang/String;Ljava/io/DataInput;Luk;)Luy;	a	readNamedTagData
		p	0		reader
		p	1		key
		p	2		input
		p	3		tracker
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/lang/String;)Z	b	hasUUID
		p	1		key
	m	(Ljava/lang/String;I)Z	b	contains
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	b	putIntArray
		p	1		key
		p	2		value
	m	(Lub;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$2
		p	0		nbt
	m	()Lva;	c	getType
	m	(Ljava/lang/String;)Luy;	c	get
		p	1		key
	m	(Ljava/lang/String;I)Luh;	c	getList
		p	1		key
		p	2		type
	m	(Ljava/lang/String;Ljava/util/List;)V	c	putLongArray
		p	1		key
		p	2		value
	m	()Luy;	d	copy
	m	(Ljava/lang/String;)B	d	getTagType
		p	1		key
	m	()Ljava/util/Set;	e	getAllKeys
	m	(Ljava/lang/String;)Z	e	contains
		p	1		key
	m	()I	f	size
	m	(Ljava/lang/String;)B	f	getByte
		p	1		key
	m	()Z	g	isEmpty
	m	(Ljava/lang/String;)S	g	getShort
		p	1		key
	m	()Lub;	h	shallowCopy
	m	(Ljava/lang/String;)I	h	getInt
		p	1		key
	m	()Lub;	i	copy
	m	(Ljava/lang/String;)J	i	getLong
		p	1		key
	m	()Ljava/util/Set;	j	entrySet
	m	(Ljava/lang/String;)F	j	getFloat
		p	1		key
	m	(Ljava/lang/String;)D	k	getDouble
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	l	getString
		p	1		key
	m	(Ljava/lang/String;)[B	m	getByteArray
		p	1		key
	m	(Ljava/lang/String;)[I	n	getIntArray
		p	1		key
	m	(Ljava/lang/String;)[J	o	getLongArray
		p	1		key
	m	(Ljava/lang/String;)Lub;	p	getCompound
		p	1		key
	m	(Ljava/lang/String;)Z	q	getBoolean
		p	1		key
	m	(Ljava/lang/String;)V	r	remove
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	s	lambda$createReport$3
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lva;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	I	w	MAP_ENTRY_SIZE_IN_BYTES
	f	Ljava/util/Map;	x	tags
c	ub$1	net/minecraft/nbt/NBTTagCompound$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lub;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	c	parseCompound
		p	0		input
		p	1		visitor
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Lub;	d	loadCompound
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Luk;)Ljava/lang/String;	e	readString
		p	0		input
		p	1		tracker
c	ub$2	net/minecraft/nbt/NBTTagCompound$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	uc	net/minecraft/nbt/NBTTagDouble
	m	(D)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(D)Luc;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Luc;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Luc;	a	ZERO
	f	Lva;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	D	w	data
c	uc$1	net/minecraft/nbt/NBTTagDouble$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Luc;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)D	d	readAccounted
		p	0		input
		p	1		tracker
c	ud	net/minecraft/nbt/NBTTagEnd
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Lud;	e	copy
	f	Lva;	a	TYPE
	f	Lud;	b	INSTANCE
	f	I	c	SELF_SIZE_IN_BYTES
c	ud$1	net/minecraft/nbt/NBTTagEnd$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILuk;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Luk;)Lud;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
c	ue	net/minecraft/nbt/NBTTagFloat
	m	(F)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(F)Lue;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Lue;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lue;	a	ZERO
	f	Lva;	b	TYPE
	f	I	c	SELF_SIZE_IN_BYTES
	f	F	w	data
c	ue$1	net/minecraft/nbt/NBTTagFloat$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lue;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)F	d	readAccounted
		p	0		input
		p	1		tracker
c	uf	net/minecraft/nbt/NBTTagIntArray
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lug;	a	get
	m	(ILug;)Lug;	a	set
	m	(ILuy;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[I	a	toArray
		p	0		list
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Lug;	b	remove
	m	(ILug;)V	b	add
	m	(ILuy;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lva;	c	getType
	m	(I)Luy;	c	remove
	m	(ILuy;)V	c	add
	m	()Luy;	d	copy
	m	(ILuy;)Luy;	d	set
	m	()Luf;	e	copy
	m	()B	f	getElementType
	m	()[I	g	getAsIntArray
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[I	c	data
c	uf$1	net/minecraft/nbt/NBTTagIntArray$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Luf;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)[I	d	readAccounted
		p	0		input
		p	1		tracker
c	ug	net/minecraft/nbt/NBTTagInt
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Lug;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Lug;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	I	c	data
c	ug$1	net/minecraft/nbt/NBTTagInt$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lug;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)I	d	readAccounted
		p	0		input
		p	1		tracker
c	ug$a	net/minecraft/nbt/NBTTagInt$a
	f	[Lug;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	uh	net/minecraft/nbt/NBTTagList
	m	(Ljava/util/List;B)V	<init>	<init>
		p	1		list
		p	2		type
	m	()I	a	sizeInBytes
	m	(I)Lub;	a	getCompound
		p	1		index
	m	(ILuy;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Luy;)Z	a	updateType
		p	1		element
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Luh;	b	getList
		p	1		index
	m	(ILuy;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lva;	c	getType
	m	(I)Luy;	c	remove
	m	(ILuy;)V	c	add
	m	()Luy;	d	copy
	m	(I)S	d	getShort
		p	1		index
	m	(ILuy;)Luy;	d	set
	m	()Luh;	e	copy
	m	(I)I	e	getInt
		p	1		index
	m	()B	f	getElementType
	m	(I)[I	f	getIntArray
		p	1		index
	m	()V	g	updateTypeAfterRemove
	m	(I)[J	g	getLongArray
		p	1		index
	m	(I)D	h	getDouble
		p	1		index
	m	(I)F	i	getFloat
		p	1		index
	m	(I)Ljava/lang/String;	j	getString
		p	1		index
	m	(I)Luy;	k	get
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Ljava/util/List;	c	list
	f	B	w	type
c	uh$1	net/minecraft/nbt/NBTTagList$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Luh;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	c	parseList
		p	0		input
		p	1		visitor
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luh;	d	loadList
		p	0		input
		p	1		tracker
c	uh$2	net/minecraft/nbt/NBTTagList$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
c	ui	net/minecraft/nbt/NBTTagLongArray
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		value
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(I)Luj;	a	get
	m	(ILuj;)Luj;	a	set
	m	(ILuy;)Z	a	setTag
		p	1		index
		p	2		element
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/util/List;)[J	a	toArray
		p	0		list
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(I)Luj;	b	remove
	m	(ILuj;)V	b	add
	m	(ILuy;)Z	b	addTag
		p	1		index
		p	2		element
	m	()Lva;	c	getType
	m	(I)Luy;	c	remove
	m	(ILuy;)V	c	add
	m	()Luy;	d	copy
	m	(ILuy;)Luy;	d	set
	m	()Lui;	e	copy
	m	()B	f	getElementType
	m	()[J	g	getAsLongArray
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	[J	c	data
c	ui$1	net/minecraft/nbt/NBTTagLongArray$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lui;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)[J	d	readAccounted
		p	0		input
		p	1		tracker
c	uj	net/minecraft/nbt/NBTTagLong
	m	(J)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(J)Luj;	a	valueOf
		p	0		value
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Luj;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	J	c	data
c	uj$1	net/minecraft/nbt/NBTTagLong$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Luj;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)J	d	readAccounted
		p	0		input
		p	1		tracker
c	uj$a	net/minecraft/nbt/NBTTagLong$a
	f	[Luj;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	uk	net/minecraft/nbt/NBTReadLimiter
	m	(JI)V	<init>	<init>
		p	1		maxBytes
		p	3		maxDepth
	m	()Luk;	a	unlimitedHeap
	m	(J)Luk;	a	create
		p	0		maxBytes
	m	(JJ)V	a	accountBytes
		p	1		multiplier
		p	3		bytes
	m	()V	b	pushDepth
	m	(J)V	b	accountBytes
		p	1		bytes
	m	()V	c	popDepth
	m	()J	d	getUsage
	m	()I	e	getDepth
	f	I	a	MAX_STACK_DEPTH
	f	J	b	quota
	f	J	c	usage
	f	I	d	maxDepth
	f	I	e	depth
c	ul	net/minecraft/nbt/NbtAccounterException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	um	net/minecraft/nbt/NbtException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	un	net/minecraft/nbt/NbtFormatException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	uo	net/minecraft/nbt/NBTCompressedStreamTools
	m	(Ljava/io/DataInput;)Lub;	a	read
		p	0		input
	m	(Ljava/io/DataInput;Luk;)Lub;	a	read
		p	0		input
		p	1		tracker
	m	(Ljava/io/DataInput;Luk;B)Luy;	a	readTagSafe
		p	0		input
		p	1		tracker
		p	2		typeId
	m	(Ljava/io/DataInput;Luv;Luk;)V	a	parse
		p	0		input
		p	1		scanner
		p	2		tracker
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	a	createDecompressorStream
		p	0		stream
	m	(Ljava/io/InputStream;Luk;)Lub;	a	readCompressed
		p	0		stream
		p	1		tagSizeTracker
	m	(Ljava/io/InputStream;Luv;Luk;)V	a	parseCompressed
		p	0		stream
		p	1		scanner
		p	2		tracker
	m	(Ljava/io/OutputStream;)Ljava/io/DataOutputStream;	a	createCompressorStream
		p	0		stream
	m	(Ljava/nio/file/Path;)Lub;	a	read
		p	0		path
	m	(Ljava/nio/file/Path;Luk;)Lub;	a	readCompressed
		p	0		path
		p	1		tagSizeTracker
	m	(Ljava/nio/file/Path;Luv;Luk;)V	a	parseCompressed
		p	0		path
		p	1		scanner
		p	2		tracker
	m	(Lub;Ljava/io/DataOutput;)V	a	write
		p	0		nbt
		p	1		output
	m	(Lub;Ljava/io/OutputStream;)V	a	writeCompressed
		p	0		nbt
		p	1		stream
	m	(Lub;Ljava/nio/file/Path;)V	a	writeCompressed
		p	0		nbt
		p	1		path
	m	(Luy;Ljava/io/DataOutput;)V	a	writeAnyTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/DataInput;Luk;)Luy;	b	readAnyTag
		p	0		input
		p	1		tracker
	m	(Lub;Ljava/nio/file/Path;)V	b	write
		p	0		nbt
		p	1		path
	m	(Luy;Ljava/io/DataOutput;)V	b	writeUnnamedTag
		p	0		nbt
		p	1		output
	m	(Ljava/io/DataInput;Luk;)Luy;	c	readUnnamedTag
		p	0		input
		p	1		tracker
	m	(Luy;Ljava/io/DataOutput;)V	c	writeUnnamedTagWithFallback
		p	0		nbt
		p	1		output
	f	[Ljava/nio/file/OpenOption;	a	SYNC_OUTPUT_OPTIONS
c	uo$1	net/minecraft/nbt/NBTCompressedStreamTools$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	uo$a	net/minecraft/nbt/NBTCompressedStreamTools$a
	m	(Ljava/io/DataOutput;)V	<init>	<init>
		p	1		delegate
c	up	net/minecraft/nbt/DynamicOpsNBT
	m	()Luy;	a	empty
	m	(B)Luy;	a	createByte
	m	(D)Luy;	a	createDouble
	m	(F)Luy;	a	createFloat
	m	(I)Luy;	a	createInt
	m	(J)Luy;	a	createLong
	m	(Lcom/mojang/serialization/DynamicOps;Luy;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Luy;	a	createNumeric
	m	(Ljava/lang/String;)Luy;	a	createString
	m	(Ljava/nio/ByteBuffer;)Luy;	a	createByteList
	m	(Ljava/util/List;)Ljava/lang/String;	a	lambda$mergeToMap$14
	m	(Ljava/util/List;Lub;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$11
		p	0		entry
		p	2		pair
	m	(Ljava/util/List;Lup$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$5
		p	1		merger
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$15
	m	(Ljava/util/stream/IntStream;)Luy;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Luy;	a	createLongList
	m	(Ljava/util/stream/Stream;)Luy;	a	createMap
	m	(Lub;)Luy;	a	tryUnwrap
		p	0		nbt
	m	(Lub;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$20
		p	1		entry
	m	(Lub;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$17
	m	(Luh;Ljava/util/function/Consumer;)V	a	lambda$getList$24
	m	(Luy;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Luy;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Luy;Ljava/lang/String;)Luy;	a	remove
	m	(Luy;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Luy;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Luy;Lup$f;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$2
		p	1		merger
	m	(Luy;Luy;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Luy;Luy;Luy;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(S)Luy;	a	createShort
	m	(Z)Luy;	a	createBoolean
	m	()Ljava/lang/String;	b	lambda$getStream$23
	m	(Ljava/util/List;)Ljava/lang/String;	b	lambda$mergeToMap$12
	m	(Ljava/util/stream/Stream;)Luy;	b	createList
	m	(Luy;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	()Ljava/lang/String;	c	lambda$getStringValue$1
	m	(Luy;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	()Ljava/lang/String;	d	lambda$getNumberValue$0
	m	(Luy;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Luy;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Luy;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Luy;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Luy;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Luy;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Luy;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Luy;)Ljava/util/Optional;	k	createCollector
		p	0		nbt
	m	(Luy;)Ljava/lang/String;	l	lambda$getList$25
	m	(Luy;)Luy;	m	lambda$getStream$22
		p	0		nbt
	m	(Luy;)Luy;	n	lambda$getStream$21
		p	0		nbt
	m	(Luy;)Ljava/lang/String;	o	lambda$getMap$19
	m	(Luy;)Ljava/lang/String;	p	lambda$getMapEntries$18
	m	(Luy;)Ljava/lang/String;	q	lambda$getMapValues$16
	m	(Luy;)Ljava/lang/String;	r	lambda$mergeToMap$13
	m	(Luy;)Ljava/lang/String;	s	lambda$mergeToMap$10
	m	(Luy;)Ljava/lang/String;	t	lambda$mergeToMap$9
	m	(Luy;)Ljava/lang/String;	u	lambda$mergeToMap$8
	m	(Luy;)Lcom/mojang/serialization/DataResult;	v	lambda$mergeToList$7
	m	(Luy;)Ljava/lang/String;	w	lambda$mergeToList$6
	m	(Luy;)Lcom/mojang/serialization/DataResult;	x	lambda$mergeToList$4
	m	(Luy;)Ljava/lang/String;	y	lambda$mergeToList$3
	f	Lup;	a	INSTANCE
	f	Ljava/lang/String;	b	WRAPPER_MARKER
c	up$1	net/minecraft/nbt/DynamicOpsNBT$1
	m	(Ljava/lang/String;)Luy;	a	get
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
	m	(Luy;)Luy;	a	get
	f	Lub;	a	val$tag
	f	Lup;	b	this$0
c	up$a	net/minecraft/nbt/DynamicOpsNBT$a
	m	(B)V	<init>	<init>
		p	1		value
	m	([B)V	<init>	<init>
		p	1		values
	m	()Luy;	a	result
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/bytes/ByteArrayList;	a	values
c	up$b	net/minecraft/nbt/DynamicOpsNBT$b
	m	(Lit/unimi/dsi/fastutil/bytes/ByteArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	<init>	<init>
		p	1		list
	m	(Lit/unimi/dsi/fastutil/longs/LongArrayList;)V	<init>	<init>
		p	1		list
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		nbts
	m	()Luy;	a	result
	m	(B)V	a	lambda$new$1
		p	1		value
	m	(I)V	a	lambda$new$0
		p	1		value
	m	(J)V	a	lambda$new$2
		p	1		value
	m	(Lub;)Z	a	isWrapper
		p	0		nbt
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	m	(Luy;)Luy;	b	wrapIfNeeded
		p	0		value
	m	(Luy;)Lub;	c	wrapElement
		p	0		value
	f	Luh;	a	result
c	up$c	net/minecraft/nbt/DynamicOpsNBT$c
	m	(Luh;)V	<init>	<init>
		p	1		nbt
	m	(Luy;)V	<init>	<init>
		p	1		nbt
	m	()Luy;	a	result
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	f	Luh;	a	result
c	up$d	net/minecraft/nbt/DynamicOpsNBT$d
	m	()Luy;	a	result
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	f	Lup$d;	a	INSTANCE
c	up$e	net/minecraft/nbt/DynamicOpsNBT$e
	m	(I)V	<init>	<init>
		p	1		value
	m	([I)V	<init>	<init>
		p	1		values
	m	()Luy;	a	result
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	values
c	up$f	net/minecraft/nbt/DynamicOpsNBT$f
	m	()Luy;	a	result
	m	(Ljava/lang/Iterable;)Lup$f;	a	acceptAll
		p	1		nbts
	m	(Ljava/util/stream/Stream;)Lup$f;	a	acceptAll
		p	1		nbts
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
c	up$g	net/minecraft/nbt/DynamicOpsNBT$g
	m	(J)V	<init>	<init>
		p	1		value
	m	([J)V	<init>	<init>
		p	1		values
	m	()Luy;	a	result
	m	(Luy;)Lup$f;	a	accept
		p	1		nbt
	f	Lit/unimi/dsi/fastutil/longs/LongArrayList;	a	values
c	up$h	net/minecraft/nbt/DynamicOpsNBT$h
	m	(Lup;)V	<init>	<init>
		p	1		ops
	m	()Lub;	a	initBuilder
	m	(Ljava/lang/String;Luy;Lub;)Lub;	a	append
	m	(Lub;Luy;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Luy;)Ljava/lang/String;	a	lambda$build$0
c	uq	net/minecraft/nbt/GameProfileSerializer
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
		p	0		depth
		p	1		stringBuilder
	m	(Ldtc;)Lub;	a	writeBlockState
		p	0		state
	m	(Ldte;Lduf;Ljava/lang/String;Lub;Lub;)Ldte;	a	setValueHelper
		p	0		state
		p	1		property
		p	2		key
		p	3		properties
		p	4		root
	m	(Lduf;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	0		property
		p	1		value
	m	(Lepe;)Lub;	a	writeFluidState
		p	0		state
	m	(Ljava/lang/String;)Lub;	a	snbtToStructure
		p	0		string
	m	(Ljava/lang/StringBuilder;Luy;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
		p	0		stringBuilder
		p	1		nbt
		p	2		depth
		p	3		withArrayContents
	m	(Ljava/util/Map;Lub;)Luh;	a	lambda$unpackStructureTemplate$10
		p	1		nbt
	m	(Ljava/util/UUID;)Luf;	a	createUUID
		p	0		uuid
	m	(Ljd;)Luy;	a	writeBlockPos
		p	0		pos
	m	(Ljn;Lub;)Ldtc;	a	readBlockState
		p	0		blockLookup
		p	1		nbt
	m	(Lub;)Ljava/lang/String;	a	structureToSnbt
		p	0		compound
	m	(Lub;I)Lub;	a	addDataVersion
		p	0		nbt
		p	1		dataVersion
	m	(Lub;Ljava/lang/String;)Ljava/util/Optional;	a	readBlockPos
		p	0		nbt
		p	1		key
	m	(Lub;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$12
		p	2		property
	m	(Luh;)D	a	lambda$static$5
		p	0		nbt
	m	(Luh;Lub;)V	a	lambda$packStructureTemplate$9
		p	1		nbt
	m	(Luh;Luh;Luh;)V	a	lambda$packStructureTemplate$6
		p	2		nbt
	m	(Luy;)Ljava/util/UUID;	a	loadUUID
		p	0		element
	m	(Luy;Luy;Z)Z	a	compareNbt
		p	0		standard
		p	1		subject
		p	2		ignoreListOrder
	m	(Luy;Z)Ljava/lang/String;	a	prettyPrint
		p	0		nbt
		p	1		withArrayContents
	m	(Ljava/lang/String;)Lub;	b	unpackBlockState
		p	0		string
	m	(Lub;)Lub;	b	packStructureTemplate
		p	0		compound
	m	(Lub;I)I	b	getDataVersion
		p	0		nbt
		p	1		fallback
	m	(Lub;Ljava/lang/String;)Ljava/lang/String;	b	lambda$packBlockState$11
		p	1		key
	m	(Luh;)D	b	lambda$static$4
		p	0		nbt
	m	(Luy;)Ljava/lang/String;	b	prettyPrint
		p	0		nbt
	m	(Lub;)Lub;	c	unpackStructureTemplate
		p	0		compound
	m	(Luh;)D	c	lambda$static$3
		p	0		nbt
	m	(Luy;)Lwz;	c	toPrettyComponent
		p	0		element
	m	(Lub;)Ljava/lang/String;	d	packBlockState
		p	0		compound
	m	(Luh;)I	d	lambda$static$2
		p	0		nbt
	m	(Lub;)Lub;	e	addCurrentDataVersion
		p	0		nbt
	m	(Luh;)I	e	lambda$static$1
		p	0		nbt
	m	(Lub;)Luh;	f	lambda$packStructureTemplate$8
		p	0		nbt
	m	(Luh;)I	f	lambda$static$0
		p	0		nbt
	m	(Lub;)Luh;	g	lambda$packStructureTemplate$7
		p	0		nbt
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	C	d	PROPERTIES_START
	f	C	e	PROPERTIES_END
	f	Ljava/lang/String;	f	ELEMENT_SEPARATOR
	f	C	g	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	h	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	i	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	INDENT
	f	I	l	NOT_FOUND
c	ur	net/minecraft/nbt/NBTNumber
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
c	us	net/minecraft/nbt/ReportedNbtException
	m	(Lo;)V	<init>	<init>
		p	1		report
c	ut	net/minecraft/nbt/NBTTagShort
	m	(S)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	(S)Lut;	a	valueOf
		p	0		value
	m	()B	b	getId
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Lut;	e	copy
	m	()J	f	getAsLong
	m	()I	g	getAsInt
	m	()S	h	getAsShort
	m	()B	i	getAsByte
	m	()D	j	getAsDouble
	m	()F	k	getAsFloat
	m	()Ljava/lang/Number;	l	getAsNumber
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	S	c	data
c	ut$1	net/minecraft/nbt/NBTTagShort$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Lut;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	()I	c	size
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)S	d	readAccounted
		p	0		input
		p	1		tracker
c	ut$a	net/minecraft/nbt/NBTTagShort$a
	f	[Lut;	a	cache
	f	I	b	HIGH
	f	I	c	LOW
c	uu	net/minecraft/nbt/SnbtPrinterTagVisitor
	m	(Ljava/lang/String;ILjava/util/List;)V	<init>	<init>
		p	1		prefix
		p	2		indentationLevel
		p	3		pathParts
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
		p	0		name
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lty;)V	a	visitByteArray
		p	1		element
	m	(Ltz;)V	a	visitByte
		p	1		element
	m	(Lub;)V	a	visitCompound
		p	1		compound
	m	(Luc;)V	a	visitDouble
		p	1		element
	m	(Lud;)V	a	visitEnd
		p	1		element
	m	(Lue;)V	a	visitFloat
		p	1		element
	m	(Luf;)V	a	visitIntArray
		p	1		element
	m	(Lug;)V	a	visitInt
		p	1		element
	m	(Luh;)V	a	visitList
		p	1		element
	m	(Lui;)V	a	visitLongArray
		p	1		element
	m	(Luj;)V	a	visitLong
		p	1		element
	m	(Lut;)V	a	visitShort
		p	1		element
	m	(Luw;)V	a	visitString
		p	1		element
	m	(Luy;)Ljava/lang/String;	a	visit
		p	1		element
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
		p	1		part
	m	(Lub;)Ljava/util/List;	b	getKeys
		p	1		compound
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
c	uv	net/minecraft/nbt/StreamTagVisitor
	m	()Luv$b;	a	visitEnd
	m	(B)Luv$b;	a	visit
		p	1		value
	m	(D)Luv$b;	a	visit
		p	1		value
	m	(F)Luv$b;	a	visit
		p	1		value
	m	(I)Luv$b;	a	visit
		p	1		value
	m	(J)Luv$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Luv$b;	a	visit
		p	1		value
	m	(Lva;)Luv$a;	a	visitEntry
		p	1		type
	m	(Lva;I)Luv$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lva;Ljava/lang/String;)Luv$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Luv$b;	a	visit
		p	1		value
	m	([B)Luv$b;	a	visit
		p	1		value
	m	([I)Luv$b;	a	visit
		p	1		value
	m	([J)Luv$b;	a	visit
		p	1		value
	m	()Luv$b;	b	visitContainerEnd
	m	(Lva;)Luv$b;	b	visitRootEntry
		p	1		rootType
	m	(Lva;I)Luv$a;	b	visitElement
		p	1		type
		p	2		index
c	uv$a	net/minecraft/nbt/StreamTagVisitor$a
	m	()[Luv$a;	a	$values
	f	Luv$a;	a	ENTER
	f	Luv$a;	b	SKIP
	f	Luv$a;	c	BREAK
	f	Luv$a;	d	HALT
	f	[Luv$a;	e	$VALUES
c	uv$b	net/minecraft/nbt/StreamTagVisitor$b
	m	()[Luv$b;	a	$values
	f	Luv$b;	a	CONTINUE
	f	Luv$b;	b	BREAK
	f	Luv$b;	c	HALT
	f	[Luv$b;	d	$VALUES
c	uw	net/minecraft/nbt/NBTTagString
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		value
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataInput;)V	a	skipString
		p	0		input
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Ljava/lang/String;)Luw;	a	valueOf
		p	0		value
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
		p	0		value
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Luw;	e	copy
	m	()Ljava/lang/String;	s_	getAsString
	f	Ljava/lang/String;	A	data
	f	Lva;	a	TYPE
	f	I	b	SELF_SIZE_IN_BYTES
	f	Luw;	c	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
c	uw$1	net/minecraft/nbt/NBTTagString$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;Luk;)Luw;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
	m	(Ljava/io/DataInput;Luk;)Ljava/lang/String;	d	readAccounted
		p	0		input
		p	1		tracker
c	ux	net/minecraft/nbt/StringTagVisitor
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscape
		p	0		name
	m	(Lty;)V	a	visitByteArray
		p	1		element
	m	(Ltz;)V	a	visitByte
		p	1		element
	m	(Lub;)V	a	visitCompound
		p	1		compound
	m	(Luc;)V	a	visitDouble
		p	1		element
	m	(Lud;)V	a	visitEnd
		p	1		element
	m	(Lue;)V	a	visitFloat
		p	1		element
	m	(Luf;)V	a	visitIntArray
		p	1		element
	m	(Lug;)V	a	visitInt
		p	1		element
	m	(Luh;)V	a	visitList
		p	1		element
	m	(Lui;)V	a	visitLongArray
		p	1		element
	m	(Luj;)V	a	visitLong
		p	1		element
	m	(Lut;)V	a	visitShort
		p	1		element
	m	(Luw;)V	a	visitString
		p	1		element
	m	(Luy;)Ljava/lang/String;	a	visit
		p	1		element
	f	Ljava/util/regex/Pattern;	a	SIMPLE_VALUE
	f	Ljava/lang/StringBuilder;	b	builder
c	uy	net/minecraft/nbt/NBTBase
	m	()I	a	sizeInBytes
	m	(Ljava/io/DataOutput;)V	a	write
		p	1		output
	m	(Luv;)Luv$b;	a	accept
		p	1		visitor
	m	(Lvc;)V	a	accept
		p	1		visitor
	m	()B	b	getId
	m	(Luv;)V	b	acceptAsRoot
		p	1		visitor
	m	()Lva;	c	getType
	m	()Luy;	d	copy
	m	()Ljava/lang/String;	s_	getAsString
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	B	u	TAG_ANY_NUMERIC
	f	I	v	MAX_DEPTH
c	uz	net/minecraft/nbt/MojangsonParser
	m	(Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		reader
	m	()Lub;	a	readSingleStruct
	m	(C)V	a	expect
		p	1		c
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Lub;	a	parseTag
		p	0		string
	m	(Lva;Lva;)Ljava/util/List;	a	readArray
		p	1		arrayTypeReader
		p	2		typeReader
	m	()Ljava/lang/String;	b	readKey
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		receivedType
		p	1		expectedType
	m	(Ljava/lang/String;)Luy;	b	type
		p	1		input
	m	()Luy;	c	readTypedValue
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$3
		p	0		nbt
	m	()Luy;	d	readValue
	m	()Luy;	e	readList
	m	()Lub;	f	readStruct
	m	()Luy;	g	readListTag
	m	()Luy;	h	readArrayTag
	m	()Z	i	hasElementSeparator
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_KEY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INSERT_MIXED_LIST
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_INSERT_MIXED_ARRAY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ARRAY
	f	C	g	ELEMENT_SEPARATOR
	f	C	h	NAME_VALUE_SEPARATOR
	f	Lcom/mojang/serialization/Codec;	i	AS_CODEC
	f	Lcom/mojang/serialization/Codec;	j	LENIENT_CODEC
	f	C	k	LIST_OPEN
	f	C	l	LIST_CLOSE
	f	C	m	STRUCT_CLOSE
	f	C	n	STRUCT_OPEN
	f	Ljava/util/regex/Pattern;	o	DOUBLE_PATTERN_NOSUFFIX
	f	Ljava/util/regex/Pattern;	p	DOUBLE_PATTERN
	f	Ljava/util/regex/Pattern;	q	FLOAT_PATTERN
	f	Ljava/util/regex/Pattern;	r	BYTE_PATTERN
	f	Ljava/util/regex/Pattern;	s	LONG_PATTERN
	f	Ljava/util/regex/Pattern;	t	SHORT_PATTERN
	f	Ljava/util/regex/Pattern;	u	INT_PATTERN
	f	Lcom/mojang/brigadier/StringReader;	v	reader
c	va	net/minecraft/nbt/NBTTagType
	m	()Ljava/lang/String;	a	getName
	m	(I)Lva;	a	createInvalid
		p	0		type
	m	(Ljava/io/DataInput;ILuk;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	(Ljava/io/DataInput;Luv;Luk;)V	b	parseRoot
		p	1		input
		p	2		visitor
		p	3		tracker
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	m	()Z	d	isValue
c	va$1	net/minecraft/nbt/NBTTagType$1
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/io/DataInput;ILuk;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Luk;)Lud;	a	load
	m	(Ljava/io/DataInput;Luv;Luk;)Luv$b;	a	parse
		p	1		input
		p	2		visitor
		p	3		tracker
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	()Ljava/io/IOException;	c	createException
	m	(Ljava/io/DataInput;Luk;)Luy;	c	load
		p	1		input
		p	2		tracker
	f	I	a	val$id
c	va$2	net/minecraft/nbt/NBTTagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
c	va$a	net/minecraft/nbt/NBTTagType$a
	m	(Ljava/io/DataInput;ILuk;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
	m	(Ljava/io/DataInput;Luk;)V	b	skip
		p	1		input
		p	2		tracker
	m	()I	c	size
c	va$b	net/minecraft/nbt/NBTTagType$b
	m	(Ljava/io/DataInput;ILuk;)V	a	skip
		p	1		input
		p	2		count
		p	3		tracker
c	vb	net/minecraft/nbt/NBTTagTypes
	m	(I)Lva;	a	getType
		p	0		id
	f	[Lva;	a	TYPES
c	vc	net/minecraft/nbt/TagVisitor
	m	(Lty;)V	a	visitByteArray
		p	1		element
	m	(Ltz;)V	a	visitByte
		p	1		element
	m	(Lub;)V	a	visitCompound
		p	1		compound
	m	(Luc;)V	a	visitDouble
		p	1		element
	m	(Lud;)V	a	visitEnd
		p	1		element
	m	(Lue;)V	a	visitFloat
		p	1		element
	m	(Luf;)V	a	visitIntArray
		p	1		element
	m	(Lug;)V	a	visitInt
		p	1		element
	m	(Luh;)V	a	visitList
		p	1		element
	m	(Lui;)V	a	visitLongArray
		p	1		element
	m	(Luj;)V	a	visitLong
		p	1		element
	m	(Lut;)V	a	visitShort
		p	1		element
	m	(Luw;)V	a	visitString
		p	1		element
c	vd	net/minecraft/nbt/TextComponentTagVisitor
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		prefix
	m	(Ljava/lang/String;)Lwz;	a	handleEscapePretty
		p	0		name
	m	(Lty;)V	a	visitByteArray
		p	1		element
	m	(Ltz;)V	a	visitByte
		p	1		element
	m	(Lub;)V	a	visitCompound
		p	1		compound
	m	(Luc;)V	a	visitDouble
		p	1		element
	m	(Lud;)V	a	visitEnd
		p	1		element
	m	(Lue;)V	a	visitFloat
		p	1		element
	m	(Luf;)V	a	visitIntArray
		p	1		element
	m	(Lug;)V	a	visitInt
		p	1		element
	m	(Luh;)V	a	visitList
		p	1		element
	m	(Lui;)V	a	visitLongArray
		p	1		element
	m	(Luj;)V	a	visitLong
		p	1		element
	m	(Lut;)V	a	visitShort
		p	1		element
	m	(Luw;)V	a	visitString
		p	1		element
	m	(Luy;)Lwz;	a	visit
		p	1		element
	m	(Luy;Z)V	a	appendSubTag
		p	1		element
		p	2		indent
	f	Lwz;	A	FLOAT_TYPE
	f	Lwz;	B	DOUBLE_TYPE
	f	Lwz;	C	BYTE_ARRAY_TYPE
	f	Ljava/lang/String;	D	indentation
	f	I	E	indentDepth
	f	I	F	depth
	f	Lxn;	G	result
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	I	c	MAX_DEPTH
	f	I	d	MAX_LENGTH
	f	Lit/unimi/dsi/fastutil/bytes/ByteCollection;	e	INLINE_ELEMENT_TYPES
	f	Ln;	f	SYNTAX_HIGHLIGHTING_KEY
	f	Ln;	g	SYNTAX_HIGHLIGHTING_STRING
	f	Ln;	h	SYNTAX_HIGHLIGHTING_NUMBER
	f	Ln;	i	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	j	SIMPLE_VALUE
	f	Ljava/lang/String;	k	LIST_OPEN
	f	Ljava/lang/String;	l	LIST_CLOSE
	f	Ljava/lang/String;	m	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	n	ELEMENT_SPACING
	f	Ljava/lang/String;	o	STRUCT_OPEN
	f	Ljava/lang/String;	p	STRUCT_CLOSE
	f	Ljava/lang/String;	q	NEWLINE
	f	Ljava/lang/String;	r	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	s	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	t	WRAPPED_ELEMENT_SEPARATOR
	f	Ljava/lang/String;	u	SPACED_ELEMENT_SEPARATOR
	f	Lwz;	v	FOLDED
	f	Lwz;	w	BYTE_TYPE
	f	Lwz;	x	SHORT_TYPE
	f	Lwz;	y	INT_TYPE
	f	Lwz;	z	LONG_TYPE
c	vf	net/minecraft/nbt/visitors/CollectFields
	m	([Lvh;)V	<init>	<init>
		p	1		queries
	m	(Lva;)Luv$a;	a	visitEntry
		p	1		type
	m	(Lva;Ljava/lang/String;)Luv$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Luv$b;	b	visitContainerEnd
	m	(Lva;)Luv$b;	b	visitRootEntry
		p	1		rootType
	m	()I	c	getMissingFieldCount
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
c	vg	net/minecraft/nbt/visitors/CollectToTag
	m	()Luv$b;	a	visitEnd
	m	(B)Luv$b;	a	visit
		p	1		value
	m	(D)Luv$b;	a	visit
		p	1		value
	m	(F)Luv$b;	a	visit
		p	1		value
	m	(I)Luv$b;	a	visit
		p	1		value
	m	(J)Luv$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Luv$b;	a	visit
		p	1		value
	m	(Lub;Luy;)V	a	lambda$visitRootEntry$1
		p	2		nbt
	m	(Luy;)V	a	appendEntry
		p	1		nbt
	m	(Lva;)Luv$a;	a	visitEntry
		p	1		type
	m	(Lva;I)Luv$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lva;Ljava/lang/String;)Luv$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Luv$b;	a	visit
		p	1		value
	m	([B)Luv$b;	a	visit
		p	1		value
	m	([I)Luv$b;	a	visit
		p	1		value
	m	([J)Luv$b;	a	visit
		p	1		value
	m	()Luv$b;	b	visitContainerEnd
	m	(Lub;Luy;)V	b	lambda$enterContainerIfNeeded$0
		p	2		nbt
	m	(Luy;)V	b	lambda$visitRootEntry$2
		p	1		nbt
	m	(Lva;)Luv$b;	b	visitRootEntry
		p	1		rootType
	m	(Lva;I)Luv$a;	b	visitElement
		p	1		type
		p	2		index
	m	(Lva;)V	c	enterContainerIfNeeded
		p	1		type
	m	()Luy;	d	getResult
	m	()I	e	depth
	f	Ljava/lang/String;	a	lastId
	f	Luy;	b	rootTag
	f	Ljava/util/Deque;	c	consumerStack
c	vh	net/minecraft/nbt/visitors/FieldSelector
	m	(Ljava/lang/String;Ljava/lang/String;Lva;Ljava/lang/String;)V	<init>	<init>
		p	1		path1
		p	2		path2
		p	3		type
		p	4		key
	m	(Ljava/lang/String;Lva;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		type
		p	3		key
	m	(Lva;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		key
	m	()Ljava/util/List;	a	path
	m	()Lva;	b	type
	m	()Ljava/lang/String;	c	name
	f	Ljava/util/List;	a	path
	f	Lva;	b	type
	f	Ljava/lang/String;	c	name
c	vi	net/minecraft/nbt/visitors/FieldTree
	m	(I)V	<init>	<init>
		p	1		depth
	m	()Lvi;	a	createRoot
	m	(Ljava/lang/String;)Lvi;	a	lambda$addEntry$0
		p	1		path
	m	(Lva;Ljava/lang/String;)Z	a	isSelected
		p	1		type
		p	2		key
	m	(Lvh;)V	a	addEntry
		p	1		query
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
c	vj	vj
	m	()Luv$b;	a	visitEnd
	m	(B)Luv$b;	a	visit
		p	1		value
	m	(D)Luv$b;	a	visit
		p	1		value
	m	(F)Luv$b;	a	visit
		p	1		value
	m	(I)Luv$b;	a	visit
		p	1		value
	m	(J)Luv$b;	a	visit
		p	1		value
	m	(Ljava/lang/String;)Luv$b;	a	visit
		p	1		value
	m	(Lva;)Luv$a;	a	visitEntry
		p	1		type
	m	(Lva;I)Luv$b;	a	visitList
		p	1		entryType
		p	2		length
	m	(Lva;Ljava/lang/String;)Luv$a;	a	visitEntry
		p	1		type
		p	2		key
	m	(S)Luv$b;	a	visit
		p	1		value
	m	([B)Luv$b;	a	visit
		p	1		value
	m	([I)Luv$b;	a	visit
		p	1		value
	m	([J)Luv$b;	a	visit
		p	1		value
	m	()Luv$b;	b	visitContainerEnd
	m	(Lva;)Luv$b;	b	visitRootEntry
		p	1		rootType
	m	(Lva;I)Luv$a;	b	visitElement
		p	1		type
		p	2		index
	f	Lvj;	a	INSTANCE
c	vk	net/minecraft/nbt/visitors/SkipFields
	m	([Lvh;)V	<init>	<init>
		p	1		excludedQueries
	m	(Lva;Ljava/lang/String;)Luv$a;	a	visitEntry
		p	1		type
		p	2		key
	m	()Luv$b;	b	visitContainerEnd
	f	Ljava/util/Deque;	a	stack
c	vm	net/minecraft/network/BandwidthDebugMonitor
	m	(Lblr;)V	<init>	<init>
		p	1		log
	m	()V	a	tick
	m	(I)V	a	onReceive
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	bytesReceived
	f	Lblr;	b	bandwidthLogger
c	vn	net/minecraft/network/PacketEncryptionHandler
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
		p	1		buf
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
		p	1		buf
		p	2		result
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
		p	1		context
		p	2		buf
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
c	vo	net/minecraft/network/PacketDecrypter
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	f	Lvn;	a	cipher
c	vp	net/minecraft/network/PacketEncrypter
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
		p	1		cipher
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lvn;	a	cipher
c	vq	net/minecraft/network/ClientboundPacketListener
	m	()Lzh;	a	flow
c	vr	net/minecraft/network/PacketDecompressor
	m	(IZ)V	<init>	<init>
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(IZ)V	a	setThreshold
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lio/netty/buffer/ByteBuf;)V	a	setupInflaterInput
		p	1		buf
	m	(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;	a	inflate
		p	1		context
		p	2		expectedSize
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
c	vs	net/minecraft/network/PacketCompressor
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
		p	1		compressionThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
c	vt	net/minecraft/network/NetworkManager
	m	(Lzh;)V	<init>	<init>
		p	1		side
	m	()V	a	flushChannel
	m	(IZ)V	a	setupCompression
		p	1		compressionThreshold
		p	2		rejectsBadPackets
	m	(Lblr;)V	a	setBandwidthLogger
		p	1		log
	m	(Lio/netty/channel/ChannelFuture;)V	a	syncAfterConfigurationChange
		p	0		future
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;)V	a	channelRead0
	m	(Lio/netty/channel/ChannelPipeline;)V	a	configurePacketHandler
		p	1		pipeline
	m	(Lio/netty/channel/ChannelPipeline;Lzh;)V	a	configureInMemoryPipeline
		p	0		pipeline
		p	1		side
	m	(Lio/netty/channel/ChannelPipeline;Lzh;ZLvm;)V	a	configureSerialization
		p	0		pipeline
		p	1		side
		p	2		local
		p	3		packetSizeLogger
	m	(Ljava/lang/String;ILaio;)V	a	initiateServerboundPlayConnection
		p	1		address
		p	2		port
		p	3		listener
	m	(Ljava/lang/String;ILajo;)V	a	initiateServerboundStatusConnection
		p	1		address
		p	2		port
		p	3		listener
	m	(Ljava/lang/String;ILwh;Lwh;Lvq;Laii;)V	a	initiateServerboundConnection
		p	1		address
		p	2		port
		p	3		outboundState
		p	4		inboundState
		p	5		prePlayStateListener
		p	6		intent
	m	(Ljava/lang/String;ILwh;Lwh;Lvq;Z)V	a	initiateServerboundPlayConnection
		p	1		address
		p	2		port
		p	3		outboundState
		p	4		inboundState
		p	5		prePlayStateListener
		p	6		transfer
	m	(Ljava/net/InetSocketAddress;ZLblr;)Lvt;	a	connectToServer
		p	0		address
		p	1		useEpoll
		p	2		packetSizeLog
	m	(Ljava/net/InetSocketAddress;ZLvt;)Lio/netty/channel/ChannelFuture;	a	connect
		p	0		address
		p	1		useEpoll
		p	2		connection
	m	(Ljava/net/SocketAddress;)Lvt;	a	connectToLocalServer
		p	0		address
	m	(Ljava/util/function/Consumer;)V	a	runOnceConnected
		p	1		task
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
		p	1		decryptionCipher
		p	2		encryptionCipher
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
		p	0		marker
	m	(Lvm;Z)Lio/netty/channel/ChannelInboundHandler;	a	createFrameDecoder
		p	0		packetSizeLogger
		p	1		local
	m	(Lvv;)V	a	disconnect
		p	1		disconnectionInfo
	m	(Lwb;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupInboundProtocol$7
		p	1		context
	m	(Lwc;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundProtocol$8
		p	1		context
	m	(Lwf;)V	a	setListenerForServerboundHandshake
		p	1		packetListener
	m	(Lwg;Lio/netty/util/concurrent/Future;)V	a	lambda$doSendPacket$13
		p	2		future
	m	(Lwh;)V	a	setupOutboundProtocol
		p	1		newState
	m	(Lwh;Lvq;Ljava/lang/String;ILaii;Lwh;Lvt;)V	a	lambda$initiateServerboundConnection$10
		p	7		connection
	m	(Lwh;Lwf;)V	a	setupInboundProtocol
		p	1		state
		p	2		packetListener
	m	(Lwz;)V	a	disconnect
		p	1		disconnectReason
	m	(Lzg;)V	a	send
		p	1		packet
	m	(Lzg;Lwf;)V	a	genericsFtw
		p	0		packet
		p	1		listener
	m	(Lzg;Lwg;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lzg;Lwg;Z)V	a	send
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	(Lzg;Lwg;ZLvt;)V	a	lambda$send$11
		p	3		connection
	m	(Z)Ljava/lang/String;	a	getLoggableAddress
		p	1		logIps
	m	(ZLio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundProtocol$9
		p	2		context
	m	()V	b	tick
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
		p	0		marker
	m	(Lvv;)V	b	lambda$exceptionCaught$6
	m	(Lwh;Lwf;)V	b	validateListener
		p	1		state
		p	2		listener
	m	(Lzg;Lwg;Z)V	b	sendPacket
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	(Z)Ljava/lang/String;	b	outboundHandlerName
		p	0		sendingSide
	m	()V	c	tickSecond
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
		p	0		marker
	m	(Lzg;Lwg;Z)V	c	doSendPacket
		p	1		packet
		p	2		callbacks
		p	3		flush
	m	(Z)Ljava/lang/String;	c	inboundHandlerName
		p	0		receivingSide
	m	()Ljava/net/SocketAddress;	d	getRemoteAddress
	m	(Lzg;Lwg;Z)V	d	lambda$sendPacket$12
	m	(Z)Lio/netty/channel/ChannelOutboundHandler;	d	createFrameEncoder
		p	0		local
	m	()Z	e	isMemoryConnection
	m	()Lzh;	f	getReceiving
	m	()Lzh;	g	getSending
	m	()Z	h	isEncrypted
	m	()Z	i	isConnected
	m	()Z	j	isConnecting
	m	()Lwf;	k	getPacketListener
	m	()Lvv;	l	getDisconnectionDetails
	m	()V	m	setReadOnly
	m	()V	n	handleDisconnection
	m	()F	o	getAverageReceivedPackets
	m	()F	p	getAverageSentPackets
	m	()V	q	flush
	m	()V	r	flushQueue
	m	()Lvv;	s	lambda$handleDisconnection$15
	m	()V	t	lambda$flush$14
	m	()Lio/netty/channel/DefaultEventLoopGroup;	u	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	v	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	w	lambda$static$3
	f	Lvv;	A	delayedDisconnect
	f	Lvm;	B	bandwidthDebugMonitor
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Ljava/util/function/Supplier;	e	NETWORK_WORKER_GROUP
	f	Ljava/util/function/Supplier;	f	NETWORK_EPOLL_WORKER_GROUP
	f	Ljava/util/function/Supplier;	g	LOCAL_WORKER_GROUP
	f	F	h	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Lwh;	j	INITIAL_PROTOCOL
	f	Lzh;	k	receiving
	f	Z	l	sendLoginDisconnect
	f	Ljava/util/Queue;	m	pendingActions
	f	Lio/netty/channel/Channel;	n	channel
	f	Ljava/net/SocketAddress;	o	address
	f	Lwf;	p	disconnectListener
	f	Lwf;	q	packetListener
	f	Lvv;	r	disconnectionDetails
	f	Z	s	encrypted
	f	Z	t	disconnectionHandled
	f	I	u	receivedPackets
	f	I	v	sentPackets
	f	F	w	averageReceivedPackets
	f	F	x	averageSentPackets
	f	I	y	tickCount
	f	Z	z	handlingFault
c	vt$1	net/minecraft/network/NetworkManager$1
	f	Lvt;	a	val$connection
c	vt$2	net/minecraft/network/NetworkManager$2
c	vt$3	net/minecraft/network/NetworkManager$3
	f	Lvt;	a	val$connection
c	vu	net/minecraft/network/EnumProtocol
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/lang/String;	a	id
	m	()[Lvu;	b	$values
	f	Lvu;	a	HANDSHAKING
	f	Lvu;	b	PLAY
	f	Lvu;	c	STATUS
	f	Lvu;	d	LOGIN
	f	Lvu;	e	CONFIGURATION
	f	Ljava/lang/String;	f	id
	f	[Lvu;	g	$VALUES
c	vv	net/minecraft/network/DisconnectionDetails
	m	(Lwz;)V	<init>	<init>
		p	1		reason
	m	()Lwz;	a	reason
	m	()Ljava/util/Optional;	b	report
	m	()Ljava/util/Optional;	c	bugReportLink
	f	Lwz;	a	reason
	f	Ljava/util/Optional;	b	report
	f	Ljava/util/Optional;	c	bugReportLink
c	vw	net/minecraft/network/PacketDataSerializer
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
		p	1		parent
	m	()Lvw;	A	markWriterIndex
	m	()Lvw;	B	resetWriterIndex
	m	()Lvw;	C	discardReadBytes
	m	()Lvw;	D	discardSomeReadBytes
	m	()Lvw;	E	retain
	m	()Lvw;	F	touch
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(D)Lvw;	a	writeDouble
	m	(F)Lvw;	a	writeFloat
	m	(I)[B	a	readByteArray
		p	1		maxSize
	m	(ID)Lvw;	a	setDouble
	m	(IF)Lvw;	a	setFloat
	m	(II)Lvw;	a	setIndex
	m	(IJ)Lvw;	a	setLong
	m	(ILio/netty/buffer/ByteBuf;)Lvw;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lvw;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lvw;	a	getBytes
	m	(ILjava/io/OutputStream;I)Lvw;	a	getBytes
	m	(ILjava/nio/ByteBuffer;)Lvw;	a	getBytes
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$4
		p	2		value
	m	(IZ)Lvw;	a	setBoolean
	m	(I[B)Lvw;	a	getBytes
	m	(I[BII)Lvw;	a	getBytes
	m	(J)Lvw;	a	writeVarLong
		p	1		value
	m	(Lakq;)Lakq;	a	readResourceKey
		p	1		registryRef
	m	(Lakr;)Lvw;	a	writeResourceLocation
		p	1		id
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readJsonWithCodec
		p	1		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeJsonWithCodec
		p	1		codec
		p	2		value
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodecTrusted
		p	1		ops
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lvw;	a	writeWithCodec
		p	1		ops
		p	2		codec
		p	3		value
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Luk;)Ljava/lang/Object;	a	readWithCodec
		p	1		ops
		p	2		codec
		p	3		sizeTracker
	m	(Ldcd;)Lvw;	a	writeChunkPos
		p	1		pos
	m	(Lewy;)V	a	writeBlockHitResult
		p	1		hitResult
	m	(Lexc;)V	a	writeVec3
		p	1		vec
	m	(Lio/netty/buffer/ByteBuf;)[B	a	readByteArray
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;I)[B	a	readByteArray
		p	0		buf
		p	1		maxSize
	m	(Lio/netty/buffer/ByteBuf;II)Lvw;	a	readBytes
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;Lyz;)V	a	writeNullable
		p	0		buf
		p	1		value
		p	2		writer
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/UUID;)V	a	writeUUID
		p	0		buf
		p	1		uuid
	m	(Lio/netty/buffer/ByteBuf;Ljd;)V	a	writeBlockPos
		p	0		buf
		p	1		pos
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Quaternionf;)V	a	writeQuaternion
		p	0		buf
		p	1		quaternion
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Vector3f;)V	a	writeVector3f
		p	0		buf
		p	1		vector
	m	(Lio/netty/buffer/ByteBuf;Luk;)Luy;	a	readNbt
		p	0		buf
		p	1		sizeTracker
	m	(Lio/netty/buffer/ByteBuf;Luy;)V	a	writeNbt
		p	0		buf
		p	1		nbt
	m	(Lio/netty/buffer/ByteBuf;Lyy;)Ljava/lang/Object;	a	readNullable
		p	0		buf
		p	1		reader
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	writeByteArray
		p	0		buf
		p	1		array
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
		p	1		list
	m	(Ljava/io/OutputStream;I)Lvw;	a	readBytes
	m	(Ljava/lang/Class;)Ljava/util/EnumSet;	a	readEnumSet
		p	1		type
	m	(Ljava/lang/Enum;)Lvw;	a	writeEnum
		p	1		instance
	m	(Ljava/lang/Object;)Lvw;	a	touch
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$writeJsonWithCodec$3
		p	1		error
	m	(Ljava/lang/Object;Lyz;)V	a	writeNullable
		p	1		value
		p	2		writer
	m	(Ljava/lang/String;)Lvw;	a	writeUtf
		p	1		string
	m	(Ljava/lang/String;I)Lvw;	a	writeUtf
		p	1		string
		p	2		maxLength
	m	(Ljava/nio/ByteBuffer;)Lvw;	a	readBytes
	m	(Ljava/security/PublicKey;)Lvw;	a	writePublicKey
		p	1		publicKey
	m	(Ljava/time/Instant;)V	a	writeInstant
		p	1		instant
	m	(Ljava/util/BitSet;)V	a	writeBitSet
		p	1		bitSet
	m	(Ljava/util/BitSet;I)V	a	writeFixedBitSet
		p	1		bitSet
		p	2		size
	m	(Ljava/util/Collection;Lyz;)V	a	writeCollection
		p	1		collection
		p	2		writer
	m	(Ljava/util/Date;)Lvw;	a	writeDate
		p	1		date
	m	(Ljava/util/EnumSet;Ljava/lang/Class;)V	a	writeEnumSet
		p	1		enumSet
		p	2		type
	m	(Ljava/util/Map;Lyz;Lyz;)V	a	writeMap
		p	1		map
		p	2		keyWriter
		p	3		valueWriter
	m	(Ljava/util/Optional;Lyz;)V	a	writeOptional
		p	1		value
		p	2		writer
	m	(Ljava/util/UUID;)Lvw;	a	writeUUID
		p	1		uuid
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
		p	1		consumer
	m	(Ljava/util/function/IntFunction;)Ljava/lang/Object;	a	readById
		p	1		idToValue
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
		p	0		applier
		p	1		max
	m	(Ljava/util/function/IntFunction;Lyy;)Ljava/util/Collection;	a	readCollection
		p	1		collectionFactory
		p	2		reader
	m	(Ljava/util/function/IntFunction;Lyy;Lyy;)Ljava/util/Map;	a	readMap
		p	1		mapFactory
		p	2		keyReader
		p	3		valueReader
	m	(Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lvw;	a	writeById
		p	1		valueToId
		p	2		value
	m	(Ljd;)Lvw;	a	writeBlockPos
		p	1		pos
	m	(Ljl;)V	a	writeGlobalPos
		p	1		pos
	m	(Lkf;)Lvw;	a	writeSectionPos
		p	1		pos
	m	(Lorg/joml/Quaternionf;)V	a	writeQuaternion
		p	1		quaternionf
	m	(Lorg/joml/Vector3f;)V	a	writeVector3f
		p	1		vector3f
	m	(Luk;)Luy;	a	readNbt
		p	1		sizeTracker
	m	(Luy;)Lvw;	a	writeNbt
		p	1		nbt
	m	(Luy;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$readWithCodec$0
		p	1		error
	m	(Lyy;)Ljava/util/List;	a	readList
		p	1		reader
	m	(Lyy;Lyy;)Ljava/util/Map;	a	readMap
		p	1		keyReader
		p	2		valueReader
	m	(Lyz;Lyz;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$5
		p	3		key
		p	4		value
	m	(Z)Lvw;	a	writeBoolean
	m	([B)Lvw;	a	writeByteArray
		p	1		array
	m	([BII)Lvw;	a	readBytes
	m	([I)Lvw;	a	writeVarIntArray
		p	1		array
	m	([J)Lvw;	a	writeLongArray
		p	1		array
	m	([JI)[J	a	readLongArray
		p	1		toArray
		p	2		maxSize
	m	()[B	b	readByteArray
	m	(I)[I	b	readVarIntArray
		p	1		maxSize
	m	(II)Lvw;	b	setByte
	m	(IJ)Lvw;	b	setLongLE
	m	(ILio/netty/buffer/ByteBuf;)Lvw;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lvw;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lvw;	b	setBytes
	m	(ILjava/nio/ByteBuffer;)Lvw;	b	setBytes
	m	(I[B)Lvw;	b	setBytes
	m	(I[BII)Lvw;	b	setBytes
	m	(J)Lvw;	b	writeLong
	m	(Lakq;)V	b	writeResourceKey
		p	1		key
	m	(Lio/netty/buffer/ByteBuf;)Ljd;	b	readBlockPos
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;I)Lvw;	b	readBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lvw;	b	writeBytes
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	b	readEnum
		p	1		enumClass
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	b	lambda$writeWithCodec$1
		p	1		error
	m	(Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	b	lambda$readJsonWithCodec$2
		p	0		error
	m	(Ljava/nio/ByteBuffer;)Lvw;	b	writeBytes
	m	(Lyy;)Ljava/util/Optional;	b	readOptional
		p	1		reader
	m	([B)Lvw;	b	readBytes
	m	([BII)Lvw;	b	writeBytes
	m	([J)[J	b	readLongArray
		p	1		toArray
	m	()[I	c	readVarIntArray
	m	(I)Lvw;	c	writeVarInt
		p	1		value
	m	(II)Lvw;	c	setShort
	m	(J)Lvw;	c	writeLongLE
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Vector3f;	c	readVector3f
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;I)Lvw;	c	writeBytes
	m	(Lyy;)Ljava/lang/Object;	c	readNullable
		p	1		reader
	m	([B)Lvw;	c	writeBytes
	m	()[J	d	readLongArray
	m	(I)Ljava/lang/String;	d	readUtf
		p	1		maxLength
	m	(II)Lvw;	d	setShortLE
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Quaternionf;	d	readQuaternion
		p	0		buf
	m	()Ljd;	e	readBlockPos
	m	(I)Ljava/util/BitSet;	e	readFixedBitSet
		p	1		size
	m	(II)Lvw;	e	setMedium
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/UUID;	e	readUUID
		p	0		buf
	m	()Ldcd;	f	readChunkPos
	m	(I)Lvw;	f	capacity
	m	(II)Lvw;	f	setMediumLE
	m	(Lio/netty/buffer/ByteBuf;)Lub;	f	readNbt
		p	0		buf
	m	()Lkf;	g	readSectionPos
	m	(I)Lvw;	g	readerIndex
	m	(II)Lvw;	g	setInt
	m	(Lio/netty/buffer/ByteBuf;)Lvw;	g	readBytes
	m	()Ljl;	h	readGlobalPos
	m	(I)Lvw;	h	writerIndex
	m	(II)Lvw;	h	setIntLE
	m	(Lio/netty/buffer/ByteBuf;)Lvw;	h	writeBytes
	m	()Lorg/joml/Vector3f;	i	readVector3f
	m	(I)Lvw;	i	ensureWritable
	m	(II)Lvw;	i	setChar
	m	()Lorg/joml/Quaternionf;	j	readQuaternion
	m	(I)Lvw;	j	skipBytes
	m	(II)Lvw;	j	setZero
	m	()Lexc;	k	readVec3
	m	(I)Lvw;	k	writeByte
	m	()I	l	readVarInt
	m	(I)Lvw;	l	writeShort
	m	()J	m	readVarLong
	m	(I)Lvw;	m	writeShortLE
	m	()Ljava/util/UUID;	n	readUUID
	m	(I)Lvw;	n	writeMedium
	m	()Lub;	o	readNbt
	m	(I)Lvw;	o	writeMediumLE
	m	()Ljava/lang/String;	p	readUtf
	m	(I)Lvw;	p	writeInt
	m	()Lakr;	q	readResourceLocation
	m	(I)Lvw;	q	writeIntLE
	m	()Lakq;	r	readRegistryKey
	m	(I)Lvw;	r	writeChar
	m	()Ljava/util/Date;	s	readDate
	m	(I)Lvw;	s	writeZero
	m	()Ljava/time/Instant;	t	readInstant
	m	(I)Lvw;	t	retain
	m	()Ljava/security/PublicKey;	u	readPublicKey
	m	()Lewy;	v	readBlockHitResult
	m	()Ljava/util/BitSet;	w	readBitSet
	m	()Lvw;	x	clear
	m	()Lvw;	y	markReaderIndex
	m	()Lvw;	z	resetReaderIndex
	f	I	a	DEFAULT_NBT_QUOTA
	f	S	b	MAX_STRING_LENGTH
	f	I	c	MAX_COMPONENT_STRING_LENGTH
	f	Lio/netty/buffer/ByteBuf;	d	source
	f	I	e	PUBLIC_KEY_SIZE
	f	I	f	MAX_PUBLIC_KEY_HEADER_SIZE
	f	I	g	MAX_PUBLIC_KEY_LENGTH
	f	Lcom/google/gson/Gson;	h	GSON
c	vx	vx
	f	Ljava/lang/String;	a	DECOMPRESS
	f	Ljava/lang/String;	b	COMPRESS
	f	Ljava/lang/String;	c	DECODER
	f	Ljava/lang/String;	d	ENCODER
	f	Ljava/lang/String;	e	INBOUND_CONFIG
	f	Ljava/lang/String;	f	OUTBOUND_CONFIG
	f	Ljava/lang/String;	g	SPLITTER
	f	Ljava/lang/String;	h	PREPENDER
	f	Ljava/lang/String;	i	DECRYPT
	f	Ljava/lang/String;	j	ENCRYPT
	f	Ljava/lang/String;	k	UNBUNDLER
	f	Ljava/lang/String;	l	BUNDLER
	f	Ljava/lang/String;	m	PACKET_HANDLER
	f	Ljava/lang/String;	n	TIMEOUT
	f	Ljava/lang/String;	o	LEGACY_QUERY
	f	Ljava/lang/String;	p	LATENCY
c	vy	net/minecraft/network/MonitorFrameDecoder
	m	(Lvm;)V	<init>	<init>
		p	1		logger
	f	Lvm;	a	monitor
c	vz	net/minecraft/network/NoOpFrameDecoder
c	wa	net/minecraft/network/NoOpFrameEncoder
c	wb	net/minecraft/network/PacketBundlePacker
	m	(Lzf;)V	<init>	<init>
		p	1		handler
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;Ljava/util/List;)V	a	decode
	m	(Lzg;)V	a	verifyNonTerminalPacket
		p	0		packet
	f	Lzf;	a	bundlerInfo
	f	Lzf$a;	b	currentBundler
c	wc	net/minecraft/network/PacketBundleUnpacker
	m	(Lzf;)V	<init>	<init>
		p	1		bundleHandler
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;Ljava/util/List;)V	a	encode
	f	Lzf;	a	bundlerInfo
c	wd	net/minecraft/network/PacketDecoder
	m	(Lwh;)V	<init>	<init>
		p	1		state
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lwh;	b	protocolInfo
c	we	net/minecraft/network/PacketEncoder
	m	(Lwh;)V	<init>	<init>
		p	1		state
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lwh;	b	protocolInfo
c	wf	net/minecraft/network/PacketListener
	m	()Lzh;	a	flow
	m	(Lo;)V	a	fillCrashReport
		p	1		report
	m	(Lo;Lp;)V	a	fillListenerSpecificCrashDetails
		p	1		report
		p	2		section
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	(Lwz;Ljava/lang/Throwable;)Lvv;	a	createDisconnectionInfo
		p	1		reason
		p	2		exception
	m	(Lzg;)Z	a	shouldHandleMessage
		p	1		packet
	m	(Lzg;Ljava/lang/Exception;)V	a	onPacketError
		p	1		packet
		p	2		exception
	m	()Lvu;	b	protocol
	m	()Z	c	isAcceptingMessages
	m	()Ljava/lang/String;	d	lambda$fillCrashReport$1
	m	()Ljava/lang/String;	e	lambda$fillCrashReport$0
c	wg	net/minecraft/network/PacketSendListener
	m	()V	a	onSuccess
	m	(Ljava/lang/Runnable;)Lwg;	a	thenRun
		p	0		runnable
	m	(Ljava/util/function/Supplier;)Lwg;	a	exceptionallySend
		p	0		failurePacket
	m	()Lzg;	b	onFailure
c	wg$1	net/minecraft/network/PacketSendListener$1
	m	()V	a	onSuccess
	m	()Lzg;	b	onFailure
	f	Ljava/lang/Runnable;	a	val$runnable
c	wg$2	net/minecraft/network/PacketSendListener$2
	m	()Lzg;	b	onFailure
	f	Ljava/util/function/Supplier;	a	val$handler
c	wh	net/minecraft/network/ProtocolInfo
	m	()Lvu;	a	id
	m	()Lzh;	b	flow
	m	()Lyx;	c	codec
	m	()Lzf;	d	bundlerInfo
c	wh$a	net/minecraft/network/ProtocolInfo$a
	m	()Lvu;	a	id
	m	(Ljava/util/function/Function;)Lwh;	a	bind
		p	1		registryBinder
	m	(Lwh$a$a;)V	a	listPackets
		p	1		callback
	m	()Lzh;	b	flow
c	wh$a$a	net/minecraft/network/ProtocolInfo$a$a
	m	(Lzi;I)V	accept	accept
		p	1		type
		p	2		protocolId
c	wi	net/minecraft/network/ProtocolSwapHandler
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;)V	a	handleInboundTerminalPacket
		p	0		context
		p	1		packet
	m	(Lio/netty/channel/ChannelHandlerContext;Lzg;)V	b	handleOutboundTerminalPacket
		p	0		context
		p	1		packet
c	wj	net/minecraft/network/NetworkManagerServer
	m	(I)V	<init>	<init>
		p	1		rateLimit
	m	()V	c	tickSecond
	m	()V	q	lambda$tickSecond$0
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Lwz;	i	EXCEED_REASON
	f	I	j	rateLimitPacketsPerSecond
c	wk	net/minecraft/network/RegistryFriendlyByteBuf
	m	(Lio/netty/buffer/ByteBuf;Lka;)V	<init>	<init>
		p	1		buf
		p	2		registryManager
	m	()Lka;	G	registryAccess
	m	(Lka;)Ljava/util/function/Function;	a	decorator
		p	0		registryManager
	m	(Lka;Lio/netty/buffer/ByteBuf;)Lwk;	a	lambda$decorator$0
		p	1		buf
	f	Lka;	d	registryAccess
c	wl	net/minecraft/network/ServerboundPacketListener
	m	()Lzh;	a	flow
c	wm	net/minecraft/network/SkipEncodeException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		cause
c	wn	net/minecraft/network/TickablePacketListener
	m	()V	d	tick
c	wo	net/minecraft/network/UnconfiguredPipelineHandler
	m	(Lio/netty/channel/ChannelInboundHandler;)Lwo$b;	a	setupInboundHandler
		p	0		newDecoder
	m	(Lio/netty/channel/ChannelInboundHandler;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupInboundHandler$0
		p	1		context
	m	(Lio/netty/channel/ChannelOutboundHandler;)Lwo$d;	a	setupOutboundHandler
		p	0		newEncoder
	m	(Lio/netty/channel/ChannelOutboundHandler;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundHandler$1
		p	1		context
	m	(Lwh;)Lwo$b;	a	setupInboundProtocol
		p	0		newState
	m	(Lwh;)Lwo$d;	b	setupOutboundProtocol
		p	0		newState
c	wo$a	net/minecraft/network/UnconfiguredPipelineHandler$a
c	wo$b	net/minecraft/network/UnconfiguredPipelineHandler$b
	m	(Lwo$b;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$andThen$0
		p	2		context
	m	(Lio/netty/channel/ChannelHandlerContext;)V	run	run
		p	1		context
c	wo$c	net/minecraft/network/UnconfiguredPipelineHandler$c
c	wo$d	net/minecraft/network/UnconfiguredPipelineHandler$d
	m	(Lwo$d;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$andThen$0
		p	2		context
	m	(Lio/netty/channel/ChannelHandlerContext;)V	run	run
		p	1		context
c	wp	net/minecraft/network/Utf8String
	m	(Lio/netty/buffer/ByteBuf;I)Ljava/lang/String;	a	read
		p	0		buf
		p	1		maxLength
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/CharSequence;I)V	a	write
		p	0		buf
		p	1		string
		p	2		maxLength
c	wq	net/minecraft/network/VarInt
	m	(B)Z	a	hasContinuationBit
		p	0		b
	m	(I)I	a	getByteSize
		p	0		i
	m	(Lio/netty/buffer/ByteBuf;)I	a	read
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	a	write
		p	0		buf
		p	1		i
	f	I	a	MAX_VARINT_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
c	wr	net/minecraft/network/VarLong
	m	(B)Z	a	hasContinuationBit
		p	0		b
	m	(J)I	a	getByteSize
		p	0		l
	m	(Lio/netty/buffer/ByteBuf;)J	a	read
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf;	a	write
		p	0		buf
		p	1		l
	f	I	a	MAX_VARLONG_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
c	ws	net/minecraft/network/PacketSplitter
	m	(Lvm;)V	<init>	<init>
		p	1		packetSizeLogger
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z	a	copyVarint
		p	0		source
		p	1		sizeBuf
	f	I	a	MAX_VARINT21_BYTES
	f	Lio/netty/buffer/ByteBuf;	b	helperBuf
	f	Lvm;	c	monitor
c	wt	net/minecraft/network/PacketPrepender
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	f	I	a	MAX_VARINT21_BYTES
c	wu	net/minecraft/network/chat/ChatDecorator
	m	(Laqv;Lwz;)Lwz;	a	lambda$static$0
		p	0		sender
		p	1		message
	m	(Laqv;Lwz;)Lwz;	decorate	decorate
		p	1		sender
		p	2		message
	f	Lwu;	a	PLAIN
c	wv	net/minecraft/network/chat/ChatMessageType
	m	()Lww;	a	chat
	m	(Lakq;Lbsr;)Lwv$a;	a	bind
		p	0		typeKey
		p	1		entity
	m	(Lakq;Let;)Lwv$a;	a	bind
		p	0		typeKey
		p	1		source
	m	(Lakq;Lka;Lwz;)Lwv$a;	a	bind
		p	0		typeKey
		p	1		registryManager
		p	2		name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		messageTypeRegisterable
	m	()Lww;	b	narration
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lww;	d	DEFAULT_CHAT_DECORATION
	f	Lakq;	e	CHAT
	f	Lakq;	f	SAY_COMMAND
	f	Lakq;	g	MSG_COMMAND_INCOMING
	f	Lakq;	h	MSG_COMMAND_OUTGOING
	f	Lakq;	i	TEAM_MSG_COMMAND_INCOMING
	f	Lakq;	j	TEAM_MSG_COMMAND_OUTGOING
	f	Lakq;	k	EMOTE_COMMAND
	f	Lww;	l	chat
	f	Lww;	m	narration
c	wv$a	net/minecraft/network/chat/ChatMessageType$a
	m	(Ljm;Lwz;)V	<init>	<init>
		p	1		type
		p	2		name
	m	()Ljm;	a	chatType
	m	(Lwz;)Lwz;	a	decorate
		p	1		content
	m	()Lwz;	b	name
	m	(Lwz;)Lwz;	b	decorateNarration
		p	1		content
	m	()Ljava/util/Optional;	c	targetName
	m	(Lwz;)Lwv$a;	c	withTargetName
		p	1		targetName
	f	Lyx;	a	STREAM_CODEC
	f	Ljm;	b	chatType
	f	Lwz;	c	name
	f	Ljava/util/Optional;	d	targetName
c	ww	net/minecraft/network/chat/ChatDecoration
	m	()Ljava/lang/String;	a	translationKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lww;	a	withSender
		p	0		translationKey
	m	(Lwz;Lwv$a;)Lwz;	a	decorate
		p	1		content
		p	2		params
	m	()Ljava/util/List;	b	parameters
	m	(Ljava/lang/String;)Lww;	b	incomingDirectMessage
		p	0		translationKey
	m	(Lwz;Lwv$a;)[Lwz;	b	resolveParameters
		p	1		content
		p	2		params
	m	()Lxw;	c	style
	m	(Ljava/lang/String;)Lww;	c	outgoingDirectMessage
		p	0		translationKey
	m	(Ljava/lang/String;)Lww;	d	teamMessage
		p	0		translationKey
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/lang/String;	c	translationKey
	f	Ljava/util/List;	d	parameters
	f	Lxw;	e	style
c	ww$a	net/minecraft/network/chat/ChatDecoration$a
	m	(Ljava/lang/String;IILjava/lang/String;Lww$a$a;)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		selector
	m	()[Lww$a;	a	$values
	m	(Lww$a;)I	a	lambda$static$4
		p	0		parameter
	m	(Lwz;Lwv$a;)Lwz;	a	select
		p	1		content
		p	2		params
	m	(Lww$a;)I	b	lambda$static$3
		p	0		parameter
	m	(Lwz;Lwv$a;)Lwz;	b	lambda$static$2
		p	0		content
		p	1		params
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lwz;Lwv$a;)Lwz;	c	lambda$static$1
		p	0		content
		p	1		params
	m	(Lwz;Lwv$a;)Lwz;	d	lambda$static$0
		p	0		content
		p	1		params
	f	Lww$a;	a	SENDER
	f	Lww$a;	b	TARGET
	f	Lww$a;	c	CONTENT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lyx;	e	STREAM_CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Lww$a$a;	i	selector
	f	[Lww$a;	j	$VALUES
c	ww$a$a	net/minecraft/network/chat/ChatDecoration$a$a
	m	(Lwz;Lwv$a;)Lwz;	select	select
		p	1		content
		p	2		params
c	wx	net/minecraft/network/chat/ChatClickable
	m	(Lwx$a;Ljava/lang/String;)V	<init>	<init>
		p	1		action
		p	2		value
	m	()Lwx$a;	a	getAction
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lwx;)Ljava/lang/String;	a	lambda$static$1
		p	0		event
	m	()Ljava/lang/String;	b	getValue
	m	(Lwx;)Lwx$a;	b	lambda$static$0
		p	0		event
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lwx$a;	b	action
	f	Ljava/lang/String;	c	value
c	wx$a	net/minecraft/network/chat/ChatClickable$EnumClickAction
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		userDefinable
	m	()Z	a	isAllowedFromServer
	m	(Lwx$a;)Lcom/mojang/serialization/DataResult;	a	filterForSerialization
		p	0		action
	m	()[Lwx$a;	b	$values
	m	(Lwx$a;)Ljava/lang/String;	b	lambda$filterForSerialization$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lwx$a;	a	OPEN_URL
	f	Lwx$a;	b	OPEN_FILE
	f	Lwx$a;	c	RUN_COMMAND
	f	Lwx$a;	d	SUGGEST_COMMAND
	f	Lwx$a;	e	CHANGE_PAGE
	f	Lwx$a;	f	COPY_TO_CLIPBOARD
	f	Lcom/mojang/serialization/MapCodec;	g	UNSAFE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	h	CODEC
	f	Z	i	allowFromServer
	f	Ljava/lang/String;	j	name
	f	[Lwx$a;	k	$VALUES
c	wy	net/minecraft/network/chat/CommonComponents
	m	()Lxn;	a	space
	m	(J)Lxn;	a	days
		p	0		days
	m	(Ljava/util/Collection;)Lwz;	a	joinLines
		p	0		texts
	m	(Lwz;Lwz;)Lxn;	a	optionNameValue
		p	0		text
		p	1		value
	m	(Lwz;Z)Lxn;	a	optionStatus
		p	0		text
		p	1		value
	m	(Z)Lwz;	a	optionStatus
		p	0		on
	m	([Lwz;)Lxn;	a	joinForNarration
		p	0		sentences
	m	(J)Lxn;	b	hours
		p	0		hours
	m	([Lwz;)Lwz;	b	joinLines
		p	0		texts
	m	(J)Lxn;	c	minutes
		p	0		minutes
	f	Lwz;	a	EMPTY
	f	Lwz;	b	OPTION_ON
	f	Lwz;	c	OPTION_OFF
	f	Lwz;	d	GUI_DONE
	f	Lwz;	e	GUI_CANCEL
	f	Lwz;	f	GUI_YES
	f	Lwz;	g	GUI_NO
	f	Lwz;	h	GUI_OK
	f	Lwz;	i	GUI_PROCEED
	f	Lwz;	j	GUI_CONTINUE
	f	Lwz;	k	GUI_BACK
	f	Lwz;	l	GUI_TO_TITLE
	f	Lwz;	m	GUI_ACKNOWLEDGE
	f	Lwz;	n	GUI_OPEN_IN_BROWSER
	f	Lwz;	o	GUI_COPY_LINK_TO_CLIPBOARD
	f	Lwz;	p	GUI_DISCONNECT
	f	Lwz;	q	TRANSFER_CONNECT_FAILED
	f	Lwz;	r	CONNECT_FAILED
	f	Lwz;	s	NEW_LINE
	f	Lwz;	t	NARRATION_SEPARATOR
	f	Lwz;	u	ELLIPSIS
	f	Lwz;	v	SPACE
c	wz	net/minecraft/network/chat/IChatBaseComponent
	m	()Lxw;	a	getStyle
	m	(I)Ljava/lang/String;	a	getString
		p	1		length
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	2		string
	m	(Lakr;)Lwz;	a	translationArg
		p	0		id
	m	(Lcom/mojang/brigadier/Message;)Lwz;	a	translationArg
		p	0		message
	m	(Ldcd;)Lwz;	a	translationArg
		p	0		pos
	m	(Ljava/lang/String;)Lwz;	a	nullToEmpty
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Lxn;	a	translatableWithFallback
		p	0		key
		p	1		fallback
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lxn;	a	translatableWithFallback
		p	0		key
		p	1		fallback
		p	2		args
	m	(Ljava/lang/String;Ljava/util/Optional;)Lxn;	a	selector
		p	0		pattern
		p	1		separator
	m	(Ljava/lang/String;ZLjava/util/Optional;Lyb;)Lxn;	a	nbt
		p	0		rawPath
		p	1		interpret
		p	2		separator
		p	3		dataSource
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lxn;	a	translatable
		p	0		key
		p	1		args
	m	(Ljava/net/URI;)Lwz;	a	translationArg
		p	0		uri
	m	(Ljava/util/Date;)Lwz;	a	translationArg
		p	0		date
	m	(Ljava/util/List;Lxw;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
		p	1		styleOverride
		p	2		text
	m	(Ljava/util/UUID;)Lwz;	a	translationArg
		p	0		uuid
	m	(Lwz;)Z	a	contains
		p	1		text
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	(Lxw;)Ljava/util/List;	a	toFlatList
		p	1		style
	m	()Lxa;	b	getContents
	m	(Ljava/lang/String;)Lxn;	b	literal
		p	0		string
	m	(Ljava/lang/String;Ljava/lang/String;)Lxn;	b	score
		p	0		name
		p	1		objective
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lxn;	b	translatableEscape
		p	0		key
		p	1		args
	m	()Ljava/util/List;	c	getSiblings
	m	(Ljava/lang/String;)Lxn;	c	translatable
		p	0		key
	m	()Ljava/lang/String;	d	tryCollapseToString
	m	(Ljava/lang/String;)Lxn;	d	keybind
		p	0		string
	m	()Lxn;	e	plainCopy
	m	()Lxn;	f	copy
	m	()Laya;	g	getVisualOrderText
	m	()Ljava/util/List;	h	toFlatList
	m	()Lxn;	i	empty
c	wz$a	net/minecraft/network/chat/IChatBaseComponent$ChatSerializer
	m	(Lcom/google/gson/JsonElement;Ljo$a;)Lxn;	a	fromJson
		p	0		json
		p	1		registries
	m	(Ljava/lang/String;Ljo$a;)Lxn;	a	fromJson
		p	0		json
		p	1		registries
	m	(Lwz;Ljo$a;)Ljava/lang/String;	a	toJson
		p	0		text
		p	1		registries
	m	(Lcom/google/gson/JsonElement;Ljo$a;)Lxn;	b	deserialize
		p	0		json
		p	1		registries
	m	(Ljava/lang/String;Ljo$a;)Lxn;	b	fromJsonLenient
		p	0		json
		p	1		registries
	m	(Lwz;Ljo$a;)Lcom/google/gson/JsonElement;	b	serialize
		p	0		text
		p	1		registries
	f	Lcom/google/gson/Gson;	a	GSON
c	wz$b	net/minecraft/network/chat/IChatBaseComponent$b
	m	(Ljo$a;)V	<init>	<init>
		p	1		registries
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lxn;	a	deserialize
	m	(Lwz;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	f	Ljo$a;	a	registries
c	xa	net/minecraft/network/chat/ComponentContents
	m	()Lxa$a;	a	type
	m	(Let;Lbsr;I)Lxn;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
c	xa$a	net/minecraft/network/chat/ComponentContents$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	b	id
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/lang/String;	b	id
c	xb	net/minecraft/network/chat/ComponentSerialization
	m	(I)Lcom/mojang/serialization/Codec;	a	flatCodec
		p	0		maxSerializedLength
	m	(Lcom/mojang/datafixers/util/Either;)Lwz;	a	lambda$createCodec$5
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	createCodec
		p	0		selfCodec
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$2
		p	2		instance
	m	(Ljava/util/List;)Lxn;	a	createFromList
		p	0		texts
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/MapEncoder;	a	lambda$createLegacyComponentMatcher$0
		p	2		object
	m	(Lwz;)Lcom/mojang/datafixers/util/Either;	a	lambda$createCodec$6
		p	0		text
	m	([Lazk;)[Lazk;	a	lambda$createLegacyComponentMatcher$1
	m	([Lazk;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	createLegacyComponentMatcher
		p	0		types
		p	1		typeToCodec
		p	2		valueToType
		p	3		dispatchingKey
	m	(Lcom/mojang/datafixers/util/Either;)Lwz;	b	lambda$createCodec$3
		p	0		either2
	m	(Lwz;)Lwz;	b	lambda$createCodec$4
		p	0		text
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lyx;	c	OPTIONAL_STREAM_CODEC
	f	Lyx;	d	TRUSTED_STREAM_CODEC
	f	Lyx;	e	TRUSTED_OPTIONAL_STREAM_CODEC
	f	Lyx;	f	TRUSTED_CONTEXT_FREE_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	g	FLAT_CODEC
c	xb$1	net/minecraft/network/chat/ComponentSerialization$1
	m	(Lcom/mojang/datafixers/util/Pair;Lwz;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$0
		p	1		text
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Lcom/google/gson/JsonElement;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$2
		p	2		json
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DynamicOps;	a	asJsonOps
		p	0		ops
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
		p	1		pair
	m	(Lwz;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	f	Lcom/mojang/serialization/Codec;	a	val$stringCodec
c	xb$a	net/minecraft/network/chat/ComponentSerialization$a
	m	(Ljava/util/List;Ljava/util/function/Function;)V	<init>	<init>
		p	1		codecs
		p	2		codecGetter
	m	()Ljava/lang/String;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapCodec;)Ljava/util/stream/Stream;	a	lambda$keys$1
		p	1		codec
	f	Ljava/util/List;	a	codecs
	f	Ljava/util/function/Function;	b	encoderGetter
c	xb$b	net/minecraft/network/chat/ComponentSerialization$b
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		dispatchingKey
		p	2		withKeyCodec
		p	3		withoutKeyCodec
	f	Ljava/lang/String;	a	typeFieldName
	f	Lcom/mojang/serialization/MapCodec;	b	typed
	f	Lcom/mojang/serialization/MapCodec;	c	fuzzy
c	xc	net/minecraft/network/chat/ChatComponentUtils
	m	(Lcom/mojang/brigadier/Message;)Lwz;	a	fromMessage
		p	0		message
	m	(Let;Ljava/util/Optional;Lbsr;I)Ljava/util/Optional;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Let;Lwz;Lbsr;I)Lxn;	a	updateForEntity
		p	0		source
		p	1		text
		p	2		sender
		p	3		depth
	m	(Let;Lxw;Lbsr;I)Lxw;	a	resolveStyle
		p	0		source
		p	1		style
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lxn;	a	copyOnClickText
		p	0		string
	m	(Ljava/lang/String;Lxw;)Lxw;	a	lambda$copyOnClickText$1
		p	1		style
	m	(Ljava/util/Collection;)Lwz;	a	formatList
		p	0		strings
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lxn;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lwz;	a	formatAndSortList
		p	0		elements
		p	1		transformer
	m	(Ljava/util/Collection;Lwz;)Lwz;	a	formatList
		p	0		texts
		p	1		separator
	m	(Ljava/util/Collection;Lwz;Ljava/util/function/Function;)Lxn;	a	formatList
		p	0		elements
		p	1		separator
		p	2		transformer
	m	(Lwz;)Lxn;	a	wrapInSquareBrackets
		p	0		text
	m	(Lxn;Lxw;)Lxn;	a	mergeStyles
		p	0		text
		p	1		style
	m	(Ljava/lang/String;)Lwz;	b	lambda$formatList$0
		p	0		string
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lwz;	b	formatList
		p	0		elements
		p	1		transformer
	m	(Lwz;)Z	b	isTranslationResolvable
		p	0		text
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Lwz;	b	DEFAULT_SEPARATOR
	f	Lwz;	c	DEFAULT_NO_STYLE_SEPARATOR
c	xd	net/minecraft/network/chat/FilterMask
	m	(I)V	<init>	<init>
		p	1		length
	m	(Ljava/util/BitSet;)V	<init>	<init>
		p	1		mask
	m	(Ljava/util/BitSet;Lxd$a;)V	<init>	<init>
		p	1		mask
		p	2		status
	m	()Z	a	isEmpty
	m	(I)V	a	setFiltered
		p	1		index
	m	(Ljava/lang/String;)Ljava/lang/String;	a	apply
		p	1		raw
	m	(Lvw;)Lxd;	a	read
		p	0		buf
	m	(Lvw;Lxd;)V	a	write
		p	0		buf
		p	1		mask
	m	()Z	b	isFullyFiltered
	m	(Ljava/lang/String;)Lwz;	b	applyWithFormatting
		p	1		message
	m	()Lxd$a;	c	type
	m	()Ljava/util/BitSet;	d	mask
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lxd;	b	FULLY_FILTERED
	f	Lxd;	c	PASS_THROUGH
	f	Lxw;	d	FILTERED_STYLE
	f	Lcom/mojang/serialization/MapCodec;	e	PASS_THROUGH_CODEC
	f	Lcom/mojang/serialization/MapCodec;	f	FULLY_FILTERED_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	PARTIALLY_FILTERED_CODEC
	f	C	h	HASH
	f	Ljava/util/BitSet;	i	mask
	f	Lxd$a;	j	type
c	xd$a	net/minecraft/network/chat/FilterMask$a
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V	<init>	<init>
		p	3		id
		p	4		codecSupplier
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lcom/mojang/serialization/MapCodec;	b	lambda$static$2
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcom/mojang/serialization/MapCodec;	d	lambda$static$1
	m	()Lcom/mojang/serialization/MapCodec;	e	lambda$static$0
	m	()[Lxd$a;	f	$values
	f	Lxd$a;	a	PASS_THROUGH
	f	Lxd$a;	b	FULLY_FILTERED
	f	Lxd$a;	c	PARTIALLY_FILTERED
	f	Ljava/lang/String;	d	serializedName
	f	Ljava/util/function/Supplier;	e	codec
	f	[Lxd$a;	f	$VALUES
c	xe	net/minecraft/network/chat/IChatFormatted
	m	(Ljava/lang/String;Lxw;)Lxe;	a	of
		p	0		string
		p	1		style
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
		p	1		string
	m	(Ljava/util/List;)Lxe;	a	composite
		p	0		visitables
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	m	([Lxe;)Lxe;	a	composite
		p	0		visitables
	m	(Ljava/lang/String;)Lxe;	e	of
		p	0		string
	f	Ljava/util/Optional;	a	STOP_ITERATION
	f	Lxe;	b	EMPTY
c	xe$1	net/minecraft/network/chat/IChatFormatted$1
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
c	xe$2	net/minecraft/network/chat/IChatFormatted$2
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
c	xe$3	net/minecraft/network/chat/IChatFormatted$3
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/lang/String;	c	val$text
	f	Lxw;	d	val$style
c	xe$4	net/minecraft/network/chat/IChatFormatted$4
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		styledVisitor
		p	2		style
	f	Ljava/util/List;	c	val$parts
c	xe$a	net/minecraft/network/chat/IChatFormatted$a
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		asString
c	xe$b	net/minecraft/network/chat/IChatFormatted$b
	m	(Lxw;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
		p	1		style
		p	2		asString
c	xf	net/minecraft/network/chat/ChatHoverable
	m	(Lxf$a;Ljava/lang/Object;)V	<init>	<init>
		p	1		action
		p	2		contents
	m	(Lxf$e;)V	<init>	<init>
		p	1		data
	m	()Lxf$a;	a	getAction
	m	(Lxf$a;)Ljava/lang/Object;	a	getValue
		p	1		action
	m	(Lxf;)Lxf$e;	a	lambda$static$0
		p	0		event
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lxf$e;	b	event
c	xf$a	net/minecraft/network/chat/ChatHoverable$EnumHoverAction
	m	(Ljava/lang/String;ZLcom/mojang/serialization/Codec;Lxf$d;)V	<init>	<init>
		p	1		name
		p	2		parsable
		p	3		contentCodec
		p	4		legacySerializer
	m	()Z	a	isAllowedFromServer
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	cast
		p	1		o
	m	(Lwz;Lakp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
		p	0		text
		p	1		ops
	m	(Lxf$a;)Lcom/mojang/serialization/DataResult;	a	filterForSerialization
		p	0		action
	m	(Lxf$e;)Ljava/lang/Object;	a	lambda$new$3
		p	0		action
	m	()Ljava/lang/String;	b	lambda$filterForSerialization$4
	m	(Ljava/lang/Object;)Lxf$e;	b	lambda$new$2
		p	1		value
	m	(Lxf$a;)Ljava/lang/String;	b	lambda$filterForSerialization$5
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lxf$a;	d	lambda$static$1
	f	Lxf$a;	a	SHOW_TEXT
	f	Lxf$a;	b	SHOW_ITEM
	f	Lxf$a;	c	SHOW_ENTITY
	f	Lcom/mojang/serialization/Codec;	d	UNSAFE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Z	g	allowFromServer
	f	Lcom/mojang/serialization/MapCodec;	h	codec
	f	Lcom/mojang/serialization/MapCodec;	i	legacyCodec
c	xf$a$1	net/minecraft/network/chat/ChatHoverable$EnumHoverAction$1
	m	()Ljava/lang/String;	a	lambda$encode$2
	m	(Lcom/mojang/datafixers/util/Pair;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$0
		p	2		value
	m	(Lcom/mojang/serialization/DynamicOps;Lxf$d;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
		p	3		pair
	m	(Lxf$e;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	f	Lxf$d;	a	val$legacyConverter
	f	Lxf$a;	b	this$0
c	xf$b	net/minecraft/network/chat/ChatHoverable$b
	m	(Lbsx;Ljava/util/UUID;Ljava/util/Optional;)V	<init>	<init>
		p	1		entityType
		p	2		uuid
		p	3		name
	m	(Lbsx;Ljava/util/UUID;Lwz;)V	<init>	<init>
		p	1		entityType
		p	2		uuid
		p	3		name
	m	()Ljava/util/List;	a	getTooltipLines
	m	(Lbsx;Ljava/util/UUID;Lwz;)Lxf$b;	a	lambda$legacyCreate$4
		p	2		text
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$legacyCreate$5
	m	(Lwz;Lakp;)Lcom/mojang/serialization/DataResult;	a	legacyCreate
		p	0		text
		p	1		ops
	m	(Lxf$b;)Ljava/util/Optional;	a	lambda$static$2
		p	0		content
	m	(Lxf$b;)Ljava/util/UUID;	b	lambda$static$1
		p	0		content
	m	(Lxf$b;)Lbsx;	c	lambda$static$0
		p	0		content
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbsx;	b	type
	f	Ljava/util/UUID;	c	id
	f	Ljava/util/Optional;	d	name
	f	Ljava/util/List;	e	linesCache
c	xf$c	net/minecraft/network/chat/ChatHoverable$c
	m	(Lcuq;)V	<init>	<init>
		p	1		stack
	m	(Ljm;ILkn;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		changes
	m	()Lcuq;	a	getItemStack
	m	(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Ljava/lang/String;	a	lambda$legacyCreate$0
	m	(Lwz;Lakp;)Lcom/mojang/serialization/DataResult;	a	legacyCreate
		p	0		text
		p	1		ops
	f	Lcom/mojang/serialization/Codec;	a	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	SIMPLE_CODEC
	f	Ljm;	d	item
	f	I	e	count
	f	Lkn;	f	components
	f	Lcuq;	g	itemStack
c	xf$d	net/minecraft/network/chat/ChatHoverable$d
	m	(Lwz;Lakp;)Lcom/mojang/serialization/DataResult;	parse	parse
		p	1		text
		p	2		os
c	xf$e	net/minecraft/network/chat/ChatHoverable$e
	m	()Lxf$a;	a	action
	m	(Lxf$a;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$1
		p	0		action
	m	()Ljava/lang/Object;	b	value
	m	(Lxf$a;)Lcom/mojang/serialization/MapCodec;	b	lambda$static$0
		p	0		action
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	LEGACY_CODEC
	f	Lxf$a;	c	action
	f	Ljava/lang/Object;	d	value
c	xg	net/minecraft/network/chat/LastSeenMessages
	m	()Ljava/util/List;	a	entries
	m	(Laza$a;)V	a	updateSignature
		p	1		updater
	m	(Lxm;)Lxg$a;	a	pack
		p	1		storage
	m	(Lxm;Lxl;)Lxl$a;	a	lambda$pack$0
		p	1		signature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lxg;	b	EMPTY
	f	I	c	LAST_SEEN_MESSAGES_MAX_LENGTH
	f	Ljava/util/List;	d	entries
c	xg$a	net/minecraft/network/chat/LastSeenMessages$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/List;	a	entries
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lxm;)Ljava/util/Optional;	a	unpack
		p	1		storage
	f	Lxg$a;	a	EMPTY
	f	Ljava/util/List;	b	entries
c	xg$b	net/minecraft/network/chat/LastSeenMessages$b
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()I	a	offset
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	acknowledged
	f	I	a	offset
	f	Ljava/util/BitSet;	b	acknowledged
c	xh	xh
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getAndClearOffset
	m	(Lxj;)V	a	addEntry
		p	1		message
	m	(Lxl;)V	a	ignorePending
		p	1		signature
	m	(Lxl;Z)Z	a	addPending
		p	1		signature
		p	2		displayed
	m	()Lxh$a;	b	generateAndApplyUpdate
	m	()I	c	offset
	f	[Lxj;	a	trackedMessages
	f	I	b	tail
	f	I	c	offset
	f	Lxl;	d	lastTrackedMessage
c	xh$a	xh$a
	m	()Lxg;	a	lastSeen
	m	()Lxg$b;	b	update
	f	Lxg;	a	lastSeen
	f	Lxg$b;	b	update
c	xi	net/minecraft/network/chat/LastSeenMessagesValidator
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	trackedMessagesCount
	m	(I)Z	a	applyOffset
		p	1		index
	m	(Lxg$b;)Ljava/util/Optional;	a	applyUpdate
		p	1		acknowledgment
	m	(Lxl;)V	a	addPending
		p	1		signature
	f	I	a	lastSeenCount
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	b	trackedMessages
	f	Lxl;	c	lastPendingMessage
c	xj	net/minecraft/network/chat/LastSeenTrackedEntry
	m	()Lxj;	a	acknowledge
	m	()Lxl;	b	signature
	m	()Z	c	pending
	f	Lxl;	a	signature
	f	Z	b	pending
c	xk	xk
	m	()Lxq;	a	asRemote
	m	(Lcmz;)Lxk;	a	create
		p	0		keyPair
	m	(Ljava/util/UUID;)Lxt$c;	a	createMessageEncoder
		p	1		sender
	m	()Ljava/util/UUID;	b	sessionId
	m	()Lcmz;	c	keyPair
	f	Ljava/util/UUID;	a	sessionId
	f	Lcmz;	b	keyPair
c	xl	net/minecraft/network/chat/MessageSignature
	m	()Ljava/nio/ByteBuffer;	a	asByteBuffer
	m	(Lazb;Laza;)Z	a	verify
		p	1		verifier
		p	2		updatable
	m	(Lvw;)Lxl;	a	read
		p	0		buf
	m	(Lvw;Lxl;)V	a	write
		p	0		buf
		p	1		signature
	m	(Lxm;)Lxl$a;	a	pack
		p	1		storage
	m	()[B	b	bytes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	BYTES
	f	[B	c	bytes
c	xl$a	net/minecraft/network/chat/MessageSignature$a
	m	(I)V	<init>	<init>
		p	1		id
	m	(Lxl;)V	<init>	<init>
		p	1		signature
	m	()I	a	id
	m	(Lvw;)Lxl$a;	a	read
		p	0		buf
	m	(Lvw;Lxl$a;)V	a	write
		p	0		buf
		p	1		indexed
	m	(Lxm;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Lxl;	b	fullSignature
	f	I	a	FULL_SIGNATURE
	f	I	b	id
	f	Lxl;	c	fullSignature
c	xm	net/minecraft/network/chat/MessageSignatureCache
	m	(I)V	<init>	<init>
		p	1		maxEntries
	m	()Lxm;	a	createDefault
	m	(I)Lxl;	a	unpack
		p	1		index
	m	(Ljava/util/ArrayDeque;)V	a	push
		p	1		deque
	m	(Ljava/util/List;)V	a	push
		p	1		signatures
	m	(Lxl;)I	a	pack
		p	1		signature
	m	(Lxs;Lxl;)V	a	push
		p	1		body
		p	2		signature
	f	I	a	NOT_FOUND
	f	I	b	DEFAULT_CAPACITY
	f	[Lxl;	c	entries
c	xn	net/minecraft/network/chat/IChatMutableComponent
	m	(Lxa;Ljava/util/List;Lxw;)V	<init>	<init>
		p	1		content
		p	2		siblings
		p	3		style
	m	()Lxw;	a	getStyle
	m	(Ljava/util/function/UnaryOperator;)Lxn;	a	withStyle
		p	1		styleUpdater
	m	(Ln;)Lxn;	a	withStyle
		p	1		formatting
	m	(Lxa;)Lxn;	a	create
		p	0		content
	m	([Ln;)Lxn;	a	withStyle
		p	1		formattings
	m	()Lxa;	b	getContents
	m	(I)Lxn;	b	withColor
		p	1		color
	m	(Lwz;)Lxn;	b	append
		p	1		text
	m	(Lxw;)Lxn;	b	setStyle
		p	1		style
	m	()Ljava/util/List;	c	getSiblings
	m	(Lxw;)Lxn;	c	withStyle
		p	1		styleOverride
	m	(Ljava/lang/String;)Lxn;	f	append
		p	1		text
	m	()Laya;	g	getVisualOrderText
	f	Lxa;	c	contents
	f	Ljava/util/List;	d	siblings
	f	Lxw;	e	style
	f	Laya;	f	visualOrderText
	f	Ltw;	g	decomposedWith
c	xo	net/minecraft/network/chat/OutgoingChatMessage
	m	()Lwz;	a	content
	m	(Laqv;ZLwv$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	(Lxp;)Lxo;	a	create
		p	0		message
c	xo$a	net/minecraft/network/chat/OutgoingChatMessage$a
	m	()Lwz;	a	content
	m	(Laqv;ZLwv$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	f	Lwz;	a	content
c	xo$b	net/minecraft/network/chat/OutgoingChatMessage$b
	m	(Lxp;)V	<init>	<init>
		p	1		message
	m	()Lwz;	a	content
	m	(Laqv;ZLwv$a;)V	a	sendToPlayer
		p	1		sender
		p	2		filterMaskEnabled
		p	3		params
	m	()Lxp;	b	message
	f	Lxp;	a	message
c	xp	net/minecraft/network/chat/PlayerChatMessage
	m	()Lxp;	a	removeUnsignedContent
	m	(Laza$a;)V	a	lambda$verify$4
		p	1		updater
	m	(Laza$a;Lxu;Lxs;)V	a	updateSignature
		p	0		updater
		p	1		link
		p	2		body
	m	(Lazb;)Z	a	verify
		p	1		verifier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ljava/lang/String;)Lxp;	a	system
		p	0		content
	m	(Ljava/time/Instant;)Z	a	hasExpiredServer
		p	1		currentTime
	m	(Ljava/util/UUID;)Z	a	hasSignatureFrom
		p	1		sender
	m	(Ljava/util/UUID;Ljava/lang/String;)Lxp;	a	unsigned
		p	0		sender
		p	1		content
	m	(Lwz;)Lxp;	a	withUnsignedContent
		p	1		unsignedContent
	m	(Lxd;)Lxp;	a	filter
		p	1		filterMask
	m	(Lxp;)Ljava/util/Optional;	a	lambda$static$1
		p	0		message
	m	(Lxu;Ljava/util/Optional;Lxs;Ljava/util/Optional;Lxd;)Lxp;	a	lambda$static$2
		p	0		link
		p	1		signature
		p	2		signedBody
		p	3		unsignedContent
		p	4		filterMask
	m	(Z)Lxp;	a	filter
		p	1		enabled
	m	()Lxp;	b	removeSignature
	m	(Ljava/time/Instant;)Z	b	hasExpiredClient
		p	1		currentTime
	m	(Lxp;)Ljava/util/Optional;	b	lambda$static$0
		p	0		message
	m	()Ljava/lang/String;	c	signedContent
	m	()Lwz;	d	decoratedContent
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	()Ljava/util/UUID;	g	sender
	m	()Z	h	isSystem
	m	()Z	i	hasSignature
	m	()Z	j	isFullyFiltered
	m	()Lxu;	k	link
	m	()Lxl;	l	signature
	m	()Lxs;	m	signedBody
	m	()Lwz;	n	unsignedContent
	m	()Lxd;	o	filterMask
	m	()Lwz;	p	lambda$decoratedContent$5
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/time/Duration;	b	MESSAGE_EXPIRES_AFTER_SERVER
	f	Ljava/time/Duration;	c	MESSAGE_EXPIRES_AFTER_CLIENT
	f	Lxu;	d	link
	f	Lxl;	e	signature
	f	Lxs;	f	signedBody
	f	Lwz;	g	unsignedContent
	f	Lxd;	h	filterMask
	f	Ljava/util/UUID;	i	SYSTEM_SENDER
c	xq	net/minecraft/network/chat/RemoteChatSession
	m	()Lxq$a;	a	asData
	m	(Ljava/time/Duration;)Lxv;	a	createMessageValidator
		p	1		gracePeriod
	m	(Ljava/util/UUID;)Lxt$b;	a	createMessageDecoder
		p	1		sender
	m	()Z	b	hasExpired
	m	(Ljava/time/Duration;)Z	b	lambda$createMessageValidator$0
	m	()Ljava/util/UUID;	c	sessionId
	m	()Lcna;	d	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lcna;	b	profilePublicKey
c	xq$a	net/minecraft/network/chat/RemoteChatSession$a
	m	()Ljava/util/UUID;	a	sessionId
	m	(Lcom/mojang/authlib/GameProfile;Lazb;)Lxq;	a	validate
		p	1		gameProfile
		p	2		servicesSignatureVerifier
	m	(Lvw;)Lxq$a;	a	read
		p	0		buf
	m	(Lvw;Lxq$a;)V	a	write
		p	0		buf
		p	1		serialized
	m	()Lcna$a;	b	profilePublicKey
	f	Ljava/util/UUID;	a	sessionId
	f	Lcna$a;	b	profilePublicKey
c	xr	net/minecraft/network/chat/SignableCommand
	m	()Ljava/util/List;	a	arguments
	m	(Lcom/mojang/brigadier/ParseResults;)Z	a	hasSignableArguments
		p	0		parseResults
	m	(Ljava/lang/String;)Lxr$a;	a	getArgument
		p	1		name
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List;	a	collectArguments
		p	0		argumentName
		p	1		builder
	m	(Lcom/mojang/brigadier/ParseResults;)Lxr;	b	of
		p	0		parseResults
	f	Ljava/util/List;	a	arguments
c	xr$a	net/minecraft/network/chat/SignableCommand$a
	m	()Ljava/lang/String;	a	name
	m	()Lcom/mojang/brigadier/tree/ArgumentCommandNode;	b	node
	m	()Ljava/lang/String;	c	value
	f	Lcom/mojang/brigadier/tree/ArgumentCommandNode;	a	node
	f	Ljava/lang/String;	b	value
c	xs	net/minecraft/network/chat/SignedMessageBody
	m	()Ljava/lang/String;	a	content
	m	(Laza$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lxs;	a	unsigned
		p	0		content
	m	(Lxm;)Lxs$a;	a	pack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Lxg;	d	lastSeen
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/lang/String;	b	content
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Lxg;	e	lastSeen
c	xs$a	net/minecraft/network/chat/SignedMessageBody$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	content
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lxg;)Lxs;	a	lambda$unpack$0
		p	1		lastSeenMessages
	m	(Lxm;)Ljava/util/Optional;	a	unpack
		p	1		storage
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Lxg$a;	d	lastSeen
	f	Ljava/lang/String;	a	content
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Lxg$a;	d	lastSeen
c	xt	net/minecraft/network/chat/SignedMessageChain
	m	(Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		sender
		p	2		sessionId
	m	(Lazc;)Lxt$c;	a	encoder
		p	1		signer
	m	(Lazc;Lxs;)Lxl;	a	lambda$encoder$1
		p	2		body
	m	(Lcna;)Lxt$b;	a	decoder
		p	1		playerPublicKey
	m	(Lxu;Lxs;Laza$a;)V	a	lambda$encoder$0
		p	2		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lxu;	b	nextLink
	f	Ljava/time/Instant;	c	lastTimeStamp
c	xt$1	net/minecraft/network/chat/SignedMessageChain$1
	m	(Lxl;Lxs;)Lxp;	unpack	unpack
		p	1		signature
		p	2		body
	f	Lcna;	a	val$profilePublicKey
	f	Lazb;	b	val$signatureValidator
	f	Lxt;	c	this$0
c	xt$a	net/minecraft/network/chat/SignedMessageChain$a
	m	(Lwz;)V	<init>	<init>
		p	1		message
	f	Lwz;	a	MISSING_PROFILE_KEY
	f	Lwz;	b	CHAIN_BROKEN
	f	Lwz;	c	EXPIRED_PROFILE_KEY
	f	Lwz;	d	INVALID_SIGNATURE
	f	Lwz;	e	OUT_OF_ORDER_CHAT
c	xt$b	net/minecraft/network/chat/SignedMessageChain$b
	m	(Ljava/util/function/BooleanSupplier;Ljava/util/UUID;Lxl;Lxs;)Lxp;	a	lambda$unsigned$0
		p	2		signature
		p	3		body
	m	(Lxl;Lxs;)Lxp;	unpack	unpack
		p	1		signature
		p	2		body
	m	(Ljava/util/UUID;Ljava/util/function/BooleanSupplier;)Lxt$b;	unsigned	unsigned
		p	0		sender
		p	1		secureProfileEnforced
c	xt$c	net/minecraft/network/chat/SignedMessageChain$c
	m	(Lxs;)Lxl;	a	lambda$static$0
		p	0		body
	m	(Lxs;)Lxl;	pack	pack
		p	1		body
	f	Lxt$c;	a	UNSIGNED
c	xu	net/minecraft/network/chat/SignedMessageLink
	m	()Lxu;	a	advance
	m	(Laza$a;)V	a	updateSignature
		p	1		updater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/UUID;)Lxu;	a	unsigned
		p	0		sender
	m	(Ljava/util/UUID;Ljava/util/UUID;)Lxu;	a	root
		p	0		sender
		p	1		sessionId
	m	(Lxu;)Z	a	isDescendantOf
		p	1		preceding
	m	()I	b	index
	m	()Ljava/util/UUID;	c	sender
	m	()Ljava/util/UUID;	d	sessionId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	index
	f	Ljava/util/UUID;	c	sender
	f	Ljava/util/UUID;	d	sessionId
c	xv	net/minecraft/network/chat/SignedMessageValidator
	m	(Lxp;)Lxp;	a	lambda$static$0
		p	0		message
	m	(Lxp;)Lxp;	updateAndValidate	updateAndValidate
		p	1		message
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lxv;	b	ACCEPT_UNSIGNED
	f	Lxv;	c	REJECT_ALL
c	xv$a	net/minecraft/network/chat/SignedMessageValidator$a
	m	(Lazb;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		signatureVerifier
		p	2		expirationChecker
	m	(Lxp;)Z	a	validateChain
		p	1		message
	m	(Lxp;)Z	b	validate
		p	1		message
	m	(Lxp;)Lxp;	updateAndValidate	updateAndValidate
		p	1		message
	f	Lazb;	d	validator
	f	Ljava/util/function/BooleanSupplier;	e	expired
	f	Lxp;	f	lastMessage
	f	Z	g	isChainValid
c	xw	net/minecraft/network/chat/ChatModifier
	m	(Lxy;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lwx;Lxf;Ljava/lang/String;Lakr;)V	<init>	<init>
		p	1		color
		p	2		bold
		p	3		italic
		p	4		underlined
		p	5		strikethrough
		p	6		obfuscated
		p	7		clickEvent
		p	8		hoverEvent
		p	9		insertion
		p	10		font
	m	()Lxy;	a	getColor
	m	(I)Lxw;	a	withColor
		p	1		rgbColor
	m	(Lakr;)Lxw;	a	withFont
		p	1		font
	m	(Ljava/lang/Boolean;)Lxw;	a	withBold
		p	1		bold
	m	(Ljava/lang/String;)Lxw;	a	withInsertion
		p	1		insertion
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lxw;	a	create
		p	0		color
		p	1		bold
		p	2		italic
		p	3		underlined
		p	4		strikethrough
		p	5		obfuscated
	m	(Ln;)Lxw;	a	withColor
		p	1		color
	m	(Lwx;)Lxw;	a	withClickEvent
		p	1		clickEvent
	m	(Lxf;)Lxw;	a	withHoverEvent
		p	1		hoverEvent
	m	(Lxw;)Lxw;	a	applyTo
		p	1		parent
	m	(Lxw;Ljava/lang/Object;Ljava/lang/Object;)Lxw;	a	checkEmptyAfterChange
		p	0		newStyle
		p	1		oldAttribute
		p	2		newAttribute
	m	(Lxy;)Lxw;	a	withColor
		p	1		color
	m	([Ln;)Lxw;	a	applyFormats
		p	1		formattings
	m	()Z	b	isBold
	m	(Ljava/lang/Boolean;)Lxw;	b	withItalic
		p	1		italic
	m	(Ln;)Lxw;	b	applyFormat
		p	1		formatting
	m	()Z	c	isItalic
	m	(Ljava/lang/Boolean;)Lxw;	c	withUnderlined
		p	1		underline
	m	(Ln;)Lxw;	c	applyLegacyFormat
		p	1		formatting
	m	()Z	d	isStrikethrough
	m	(Ljava/lang/Boolean;)Lxw;	d	withStrikethrough
		p	1		strikethrough
	m	()Z	e	isUnderlined
	m	(Ljava/lang/Boolean;)Lxw;	e	withObfuscated
		p	1		obfuscated
	m	()Z	f	isObfuscated
	m	()Z	g	isEmpty
	m	()Lwx;	h	getClickEvent
	m	()Lxf;	i	getHoverEvent
	m	()Ljava/lang/String;	j	getInsertion
	m	()Lakr;	k	getFont
	f	Lxw;	a	EMPTY
	f	Lakr;	b	DEFAULT_FONT
	f	Lxy;	c	color
	f	Ljava/lang/Boolean;	d	bold
	f	Ljava/lang/Boolean;	e	italic
	f	Ljava/lang/Boolean;	f	underlined
	f	Ljava/lang/Boolean;	g	strikethrough
	f	Ljava/lang/Boolean;	h	obfuscated
	f	Lwx;	i	clickEvent
	f	Lxf;	j	hoverEvent
	f	Ljava/lang/String;	k	insertion
	f	Lakr;	l	font
c	xw$1	net/minecraft/network/chat/ChatModifier$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	xw$a	net/minecraft/network/chat/ChatModifier$a
	m	()V	a	prependSeparator
	m	(Ljava/lang/String;Ljava/lang/Boolean;)V	a	addFlagString
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addValueString
		p	1		key
		p	2		value
	f	Ljava/lang/StringBuilder;	a	val$result
	f	Z	b	isNotFirst
c	xw$b	net/minecraft/network/chat/ChatModifier$ChatModifierSerializer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Lxw;)Ljava/util/Optional;	a	lambda$static$9
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	b	lambda$static$8
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	c	lambda$static$7
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	d	lambda$static$6
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	e	lambda$static$5
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	f	lambda$static$4
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	g	lambda$static$3
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	h	lambda$static$2
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	i	lambda$static$1
		p	0		style
	m	(Lxw;)Ljava/util/Optional;	j	lambda$static$0
		p	0		style
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	TRUSTED_STREAM_CODEC
c	xx	xx
	m	(Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V	<init>	<init>
		p	1		string
		p	2		styles
		p	3		reverser
	m	()Ljava/lang/String;	a	getPlainText
	m	(I)I	a	lambda$create$0
		p	0		codePoint
	m	(IIZ)Ljava/util/List;	a	substring
		p	1		start
		p	2		length
		p	3		reverse
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
		p	0		string
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILxw;I)Z	a	lambda$create$2
		p	2		charIndex
		p	3		stylex
		p	4		codePoint
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Lxw;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
		p	2		style
		p	3		text
	m	(Lxe;)Lxx;	a	create
		p	0		visitable
	m	(Lxe;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lxx;	a	create
		p	0		visitable
		p	1		reverser
		p	2		shaper
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
c	xy	net/minecraft/network/chat/ChatHexColor
	m	(I)V	<init>	<init>
		p	1		rgb
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		rgb
		p	2		name
	m	()I	a	getValue
	m	(I)Lxy;	a	fromRgb
		p	0		rgb
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	parseColor
		p	0		name
	m	(Ln;)Lxy;	a	fromLegacyFormat
		p	0		formatting
	m	(Lxy;)Ljava/lang/String;	a	lambda$static$1
		p	0		textColor
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$parseColor$4
	m	(Ln;)Lxy;	b	lambda$static$0
		p	0		formatting
	m	()Ljava/lang/String;	c	formatValue
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$parseColor$3
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$parseColor$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	CUSTOM_COLOR_PREFIX
	f	Ljava/util/Map;	c	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	d	NAMED_COLORS
	f	I	e	value
	f	Ljava/lang/String;	f	name
c	xz	net/minecraft/network/chat/ThrowingComponent
	m	(Lwz;)V	<init>	<init>
		p	1		messageText
	m	(Lwz;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		messageText
		p	2		cause
	m	()Lwz;	a	getComponent
	f	Lwz;	a	component
c	ya	net/minecraft/network/chat/contents/BlockDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lgr;)V	<init>	<init>
		p	1		rawPath
	m	()Lyb$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;)Ljava/util/stream/Stream;	a	getData
		p	1		source
	m	(Ljava/lang/String;)Lgr;	a	compilePos
		p	0		string
	m	()Ljava/lang/String;	b	posPattern
	m	()Lgr;	c	compiledPos
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyb$a;	b	TYPE
	f	Ljava/lang/String;	d	posPattern
	f	Lgr;	e	compiledPos
c	yb	net/minecraft/network/chat/contents/DataSource
	m	()Lyb$a;	a	type
	m	(Let;)Ljava/util/stream/Stream;	a	getData
		p	1		source
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	yb$a	net/minecraft/network/chat/contents/DataSource$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	b	id
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/lang/String;	b	id
c	yc	net/minecraft/network/chat/contents/EntityDataSource
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		rawPath
	m	(Ljava/lang/String;Lhi;)V	<init>	<init>
		p	1		rawPath
	m	()Lyb$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;)Ljava/util/stream/Stream;	a	getData
		p	1		source
	m	(Ljava/lang/String;)Lhi;	a	compileSelector
		p	0		rawSelector
	m	()Ljava/lang/String;	b	selectorPattern
	m	()Lhi;	c	compiledSelector
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyb$a;	b	TYPE
	f	Ljava/lang/String;	d	selectorPattern
	f	Lhi;	e	compiledSelector
c	yd	net/minecraft/network/chat/contents/KeybindContents
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Lxa$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	(Lyd;)Ljava/lang/String;	a	lambda$static$0
		p	0		content
	m	()Ljava/lang/String;	b	getName
	m	()Lwz;	c	getNestedComponent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxa$a;	b	TYPE
	f	Ljava/lang/String;	c	name
	f	Ljava/util/function/Supplier;	d	nameResolver
c	ye	net/minecraft/network/chat/contents/KeybindResolver
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	lambda$static$1
		p	0		key
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
		p	0		factory
	m	(Ljava/lang/String;)Lwz;	b	lambda$static$0
	f	Ljava/util/function/Function;	a	keyResolver
c	yf	net/minecraft/network/chat/contents/NbtContents
	m	(Ljava/lang/String;Lfl$g;ZLjava/util/Optional;Lyb;)V	<init>	<init>
		p	1		rawPath
		p	2		path
		p	3		interpret
		p	4		separator
		p	5		dataSource
	m	(Ljava/lang/String;ZLjava/util/Optional;Lyb;)V	<init>	<init>
		p	1		rawPath
		p	2		interpret
		p	3		separator
		p	4		dataSource
	m	()Lxa$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;Lbsr;I)Lxn;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Let;Lbsr;ILjava/lang/String;)Ljava/util/stream/Stream;	a	lambda$resolve$2
		p	3		text
	m	(Ljava/lang/String;)Lfl$g;	a	compileNbtPath
		p	0		rawPath
	m	(Ljava/util/stream/Stream;)Lxn;	a	lambda$resolve$6
	m	(Ljava/util/stream/Stream;Lxn;)Lxn;	a	lambda$resolve$5
		p	1		text
	m	(Lub;)Ljava/util/stream/Stream;	a	lambda$resolve$1
		p	1		nbt
	m	(Lwz;Lxn;Lxn;)Lxn;	a	lambda$resolve$3
		p	1		accumulator
		p	2		current
	m	(Lxn;Lxn;Lxn;)Lxn;	a	lambda$resolve$4
		p	1		accumulator
		p	2		current
	m	()Ljava/lang/String;	b	getNbtPath
	m	()Z	c	isInterpreting
	m	()Ljava/util/Optional;	d	getSeparator
	m	()Lyb;	e	getDataSource
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxa$a;	b	TYPE
	f	Lfl$g;	c	compiledNbtPath
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Z	e	interpreting
	f	Ljava/util/Optional;	f	separator
	f	Ljava/lang/String;	g	nbtPathPattern
	f	Lyb;	h	dataSource
c	yg	net/minecraft/network/chat/contents/LiteralContents
	m	()Lxa$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lyg;	a	create
		p	0		string
	m	()Ljava/lang/String;	b	text
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxa$a;	b	TYPE
	f	Lyg;	c	EMPTY
c	yg$1	net/minecraft/network/chat/contents/LiteralContents$1
	m	()Ljava/lang/String;	b	text
c	yg$a	net/minecraft/network/chat/contents/LiteralContents$a
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		string
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ljava/lang/String;	b	text
	f	Ljava/lang/String;	d	text
c	yh	net/minecraft/network/chat/contents/ScoreContents
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		name
		p	2		objective
	m	()Lxa$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;)Leyf;	a	findTargetName
		p	1		source
	m	(Let;Lbsr;I)Lxn;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Leyf;Let;)Lxn;	a	getScore
		p	1		scoreHolder
		p	2		source
	m	(Ljava/lang/String;)Lhi;	a	parseSelector
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	()Lhi;	c	getSelector
	m	()Ljava/lang/String;	d	getObjective
	f	Lcom/mojang/serialization/MapCodec;	a	INNER_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lxa$a;	c	TYPE
	f	Ljava/lang/String;	d	name
	f	Lhi;	e	selector
	f	Ljava/lang/String;	f	objective
c	yi	net/minecraft/network/chat/contents/SelectorContents
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		pattern
		p	2		separator
	m	()Lxa$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;Lbsr;I)Lxn;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/String;)Lhi;	a	parseSelector
		p	0		pattern
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	()Ljava/lang/String;	b	getPattern
	m	()Lhi;	c	getSelector
	m	()Ljava/util/Optional;	d	getSeparator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxa$a;	b	TYPE
	f	Ljava/util/Optional;	c	separator
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	pattern
	f	Lhi;	f	selector
c	yj	net/minecraft/network/chat/contents/StorageDataSource
	m	()Lyb$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;)Ljava/util/stream/Stream;	a	getData
		p	1		source
	m	()Lakr;	b	id
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyb$a;	b	TYPE
	f	Lakr;	d	id
c	yk	net/minecraft/network/chat/contents/TranslatableContents
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
		p	1		key
		p	2		fallback
		p	3		args
	m	()Lxa$a;	a	type
	m	(I)Lxe;	a	getArgument
		p	1		index
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Let;Lbsr;I)Lxn;	a	resolve
		p	1		source
		p	2		sender
		p	3		depth
	m	(Ljava/lang/Object;)Z	a	isAllowedPrimitiveArgument
		p	0		argument
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lyk;	a	create
		p	0		key
		p	1		fallback
		p	2		args
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
		p	1		translation
		p	2		partsConsumer
	m	(Ljava/util/List;)[Ljava/lang/Object;	a	lambda$adjustArgs$9
		p	0		list
	m	(Ljava/util/Optional;)[Ljava/lang/Object;	a	adjustArgs
		p	0		args
	m	(Lwz;)Ljava/lang/Object;	a	lambda$static$2
		p	0		text
	m	(Lxe$a;)Ljava/util/Optional;	a	visit
		p	1		visitor
	m	(Lxe$b;Lxw;)Ljava/util/Optional;	a	visit
		p	1		visitor
		p	2		style
	m	(Lyk;)Ljava/util/Optional;	a	lambda$static$7
		p	0		content
	m	([Ljava/lang/Object;)Ljava/util/Optional;	a	adjustArgs
		p	0		args
	m	()Ljava/lang/String;	b	getKey
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	filterAllowedArguments
		p	0		object
	m	(Lyk;)Ljava/util/Optional;	b	lambda$static$6
		p	0		content
	m	()Ljava/lang/String;	c	getFallback
	m	(Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$4
		p	0		argument
	m	(Lyk;)Ljava/lang/String;	c	lambda$static$5
		p	0		content
	m	()[Ljava/lang/Object;	d	getArgs
	m	(Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$static$1
		p	0		object
	m	()V	e	decompose
	m	()Ljava/lang/String;	f	lambda$filterAllowedArguments$0
	f	[Ljava/lang/Object;	a	NO_ARGS
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lxa$a;	c	TYPE
	f	Lcom/mojang/serialization/Codec;	d	PRIMITIVE_ARG_CODEC
	f	Lcom/mojang/serialization/Codec;	e	ARG_CODEC
	f	Lxe;	f	TEXT_PERCENT
	f	Lxe;	g	TEXT_NULL
	f	Ljava/lang/String;	h	key
	f	Ljava/lang/String;	i	fallback
	f	[Ljava/lang/Object;	j	args
	f	Ltw;	k	decomposedWith
	f	Ljava/util/List;	l	decomposedParts
	f	Ljava/util/regex/Pattern;	m	FORMAT_PATTERN
c	yl	net/minecraft/network/chat/contents/TranslatableFormatException
	m	(Lyk;I)V	<init>	<init>
		p	1		text
		p	2		index
	m	(Lyk;Ljava/lang/String;)V	<init>	<init>
		p	1		text
		p	2		message
	m	(Lyk;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		text
		p	2		cause
c	yn	net/minecraft/network/chat/numbers/BlankFormat
	m	()Lyq;	a	type
	m	(I)Lxn;	a	format
		p	1		number
	f	Lyn;	a	INSTANCE
	f	Lyq;	b	TYPE
c	yn$1	net/minecraft/network/chat/numbers/BlankFormat$1
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lyx;	b	streamCodec
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
c	yo	net/minecraft/network/chat/numbers/FixedFormat
	m	(Lwz;)V	<init>	<init>
		p	1		text
	m	()Lyq;	a	type
	m	(I)Lxn;	a	format
		p	1		number
	f	Lyq;	a	TYPE
	f	Lwz;	b	value
c	yo$1	net/minecraft/network/chat/numbers/FixedFormat$1
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	(Lyo;)Lwz;	a	lambda$$1
		p	0		format
	m	()Lyx;	b	streamCodec
	m	(Lyo;)Lwz;	b	lambda$$0
		p	0		format
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
c	yp	net/minecraft/network/chat/numbers/NumberFormat
	m	()Lyq;	a	type
	m	(I)Lxn;	a	format
		p	1		number
c	yq	net/minecraft/network/chat/numbers/NumberFormatType
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lyx;	b	streamCodec
c	yr	net/minecraft/network/chat/numbers/NumberFormatTypes
	m	(Ljz;)Lyq;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lyx;	d	OPTIONAL_STREAM_CODEC
c	ys	net/minecraft/network/chat/numbers/StyledFormat
	m	(Lxw;)V	<init>	<init>
		p	1		style
	m	()Lyq;	a	type
	m	(I)Lxn;	a	format
		p	1		number
	f	Lyq;	a	TYPE
	f	Lys;	b	NO_STYLE
	f	Lys;	c	SIDEBAR_DEFAULT
	f	Lys;	d	PLAYER_LIST_DEFAULT
	f	Lxw;	e	style
c	ys$1	net/minecraft/network/chat/numbers/StyledFormat$1
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	(Lys;)Lxw;	a	lambda$$1
		p	0		format
	m	()Lyx;	b	streamCodec
	m	(Lys;)Lxw;	b	lambda$$0
		p	0		format
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
c	yv	net/minecraft/network/codec/ByteBufCodecs
	m	()Lyx$a;	a	list
	m	(I)Lyx;	a	byteArray
		p	0		maxLength
	m	(ILyx;)Lyx;	a	lambda$list$12
		p	1		codec
	m	(Lakq;)Lyx;	a	registry
		p	0		registry
	m	(Lakq;Ljava/util/function/Function;)Lyx;	a	registry
		p	0		registry
		p	1		registryTransformer
	m	(Lakq;Lyx;)Lyx;	a	holder
		p	0		registry
		p	1		directCodec
	m	(Lcom/mojang/serialization/Codec;)Lyx;	a	fromCodecTrusted
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Luy;	a	lambda$fromCodec$8
		p	1		value
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)Lyx;	a	fromCodec
		p	0		codec
		p	1		sizeTracker
	m	(Lcom/mojang/serialization/Codec;Luy;)Ljava/lang/Object;	a	lambda$fromCodec$6
		p	1		nbt
	m	(Lio/netty/buffer/ByteBuf;I)I	a	readCount
		p	0		buf
		p	1		maxSize
	m	(Lio/netty/buffer/ByteBuf;II)V	a	writeCount
		p	0		buf
		p	1		size
		p	2		maxSize
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$fromCodec$7
		p	1		error
	m	(Ljava/util/function/IntFunction;)Lyx$a;	a	collection
		p	0		collectionFactory
	m	(Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lyx;	a	idMapper
		p	0		indexToValue
		p	1		valueToIndex
	m	(Ljava/util/function/IntFunction;Lyx;)Lyx;	a	collection
		p	0		factory
		p	1		elementCodec
	m	(Ljava/util/function/IntFunction;Lyx;I)Lyx;	a	collection
		p	0		factory
		p	1		elementCodec
		p	2		maxSize
	m	(Ljava/util/function/IntFunction;Lyx;Lyx;)Lyx;	a	map
		p	0		factory
		p	1		keyCodec
		p	2		valueCodec
	m	(Ljava/util/function/IntFunction;Lyx;Lyx;I)Lyx;	a	map
		p	0		factory
		p	1		keyCodec
		p	2		valueCodec
		p	3		maxSize
	m	(Ljava/util/function/Supplier;)Lyx;	a	tagCodec
		p	0		sizeTracker
	m	(Ljr;)Lyx;	a	idMapper
		p	0		iterable
	m	(Ljz;)Ljr;	a	lambda$registry$13
		p	0		registry
	m	(Lub;)Luy;	a	lambda$compoundTagCodec$2
		p	0		nbt
	m	(Luy;)Lub;	a	lambda$compoundTagCodec$1
		p	0		nbt
	m	(Luy;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$fromCodec$5
		p	1		error
	m	(Lyx;)Lyx;	a	optional
		p	0		codec
	m	(Lyx;Lyx;)Lyx;	a	either
		p	0		left
		p	1		right
	m	()Luk;	b	lambda$fromCodecWithRegistries$9
	m	(I)Lyx;	b	stringUtf8
		p	0		maxLength
	m	(Lakq;)Lyx;	b	holderRegistry
		p	0		registry
	m	(Lcom/mojang/serialization/Codec;)Lyx;	b	fromCodec
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)Lyx;	b	fromCodecWithRegistries
		p	0		codec
		p	1		sizeTracker
	m	(Ljava/util/function/IntFunction;Lyx;)Lyx;	b	lambda$collection$10
		p	1		codec
	m	(Ljava/util/function/Supplier;)Lyx;	b	compoundTagCodec
		p	0		sizeTracker
	m	(Lyx;)Lyx;	b	lambda$list$11
		p	0		codec
	m	()Luk;	c	lambda$fromCodec$4
	m	(I)Lyx$a;	c	list
		p	0		maxLength
	m	(Lakq;)Lyx;	c	holderSet
		p	0		registryRef
	m	(Lcom/mojang/serialization/Codec;)Lyx;	c	fromCodecWithRegistriesTrusted
		p	0		codec
	m	()Luk;	d	lambda$static$3
	m	(Lcom/mojang/serialization/Codec;)Lyx;	d	fromCodecWithRegistries
		p	0		codec
	m	()Luk;	e	lambda$static$0
	f	I	a	MAX_INITIAL_COLLECTION_SIZE
	f	Lyx;	b	BOOL
	f	Lyx;	c	BYTE
	f	Lyx;	d	SHORT
	f	Lyx;	e	UNSIGNED_SHORT
	f	Lyx;	f	INT
	f	Lyx;	g	VAR_INT
	f	Lyx;	h	VAR_LONG
	f	Lyx;	i	FLOAT
	f	Lyx;	j	DOUBLE
	f	Lyx;	k	BYTE_ARRAY
	f	Lyx;	l	STRING_UTF8
	f	Lyx;	m	TAG
	f	Lyx;	n	TRUSTED_TAG
	f	Lyx;	o	COMPOUND_TAG
	f	Lyx;	p	TRUSTED_COMPOUND_TAG
	f	Lyx;	q	OPTIONAL_COMPOUND_TAG
	f	Lyx;	r	VECTOR3F
	f	Lyx;	s	QUATERNIONF
	f	Lyx;	t	GAME_PROFILE_PROPERTIES
	f	Lyx;	u	GAME_PROFILE
c	yv$1	net/minecraft/network/codec/ByteBufCodecs$1
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Boolean;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Boolean;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$2	net/minecraft/network/codec/ByteBufCodecs$2
	m	(Lio/netty/buffer/ByteBuf;)[B	a	decode
		p	1		buf
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	val$maxSize
c	yv$3	net/minecraft/network/codec/ByteBufCodecs$3
	m	(Lio/netty/buffer/ByteBuf;)[B	a	decode
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$4	net/minecraft/network/codec/ByteBufCodecs$4
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	val$maxStringLength
c	yv$5	net/minecraft/network/codec/ByteBufCodecs$5
	m	(Lio/netty/buffer/ByteBuf;)Luy;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Luy;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/Supplier;	a	val$accounter
c	yv$6	net/minecraft/network/codec/ByteBufCodecs$6
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$encode$1
		p	1		error
	m	(Luy;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$decode$0
		p	1		error
	m	(Lwk;)Ljava/lang/Object;	a	decode
	m	(Lwk;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$tagCodec
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	yv$7	net/minecraft/network/codec/ByteBufCodecs$7
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$8	net/minecraft/network/codec/ByteBufCodecs$8
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Vector3f;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Vector3f;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$9	net/minecraft/network/codec/ByteBufCodecs$9
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Quaternionf;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Quaternionf;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$10	net/minecraft/network/codec/ByteBufCodecs$10
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$original
c	yv$11	net/minecraft/network/codec/ByteBufCodecs$11
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Collection;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Collection;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	val$maxSize
	f	Ljava/util/function/IntFunction;	b	val$constructor
	f	Lyx;	c	val$elementCodec
c	yv$12	net/minecraft/network/codec/ByteBufCodecs$12
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Byte;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Byte;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$13	net/minecraft/network/codec/ByteBufCodecs$13
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Map;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Map;)V	a	encode
	m	(Lyx;Lio/netty/buffer/ByteBuf;Lyx;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$encode$0
		p	3		k
		p	4		v
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	val$maxSize
	f	Lyx;	b	val$keyCodec
	f	Lyx;	c	val$valueCodec
	f	Ljava/util/function/IntFunction;	d	val$constructor
c	yv$14	net/minecraft/network/codec/ByteBufCodecs$14
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/datafixers/util/Either;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/datafixers/util/Either;)V	a	encode
	m	(Lio/netty/buffer/ByteBuf;Lyx;Ljava/lang/Object;)V	a	lambda$encode$1
		p	2		right
	m	(Lio/netty/buffer/ByteBuf;Lyx;Ljava/lang/Object;)V	b	lambda$encode$0
		p	2		left
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$leftCodec
	f	Lyx;	b	val$rightCodec
c	yv$15	net/minecraft/network/codec/ByteBufCodecs$15
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/IntFunction;	a	val$byId
	f	Ljava/util/function/ToIntFunction;	b	val$toId
c	yv$16	net/minecraft/network/codec/ByteBufCodecs$16
	m	(Lwk;)Ljava/lang/Object;	a	decode
	m	(Lwk;Ljava/lang/Object;)V	a	encode
	m	(Lwk;)Ljr;	b	getRegistryOrThrow
		p	1		buf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/Function;	a	val$mapExtractor
	f	Lakq;	b	val$registryKey
c	yv$17	net/minecraft/network/codec/ByteBufCodecs$17
	m	(Lwk;)Ljm;	a	decode
	m	(Lwk;Ljm;)V	a	encode
	m	(Lwk;)Ljr;	b	getRegistryOrThrow
		p	1		buf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lakq;	a	val$registryKey
	f	Lyx;	b	val$directCodec
	f	I	c	DIRECT_HOLDER_ID
c	yv$18	net/minecraft/network/codec/ByteBufCodecs$18
	m	(Lwk;)Ljq;	a	decode
	m	(Lwk;Ljq;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lakq;	a	val$registryKey
	f	I	b	NAMED_SET
	f	Lyx;	c	holderCodec
c	yv$19	net/minecraft/network/codec/ByteBufCodecs$19
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/authlib/properties/PropertyMap;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/authlib/properties/PropertyMap;)V	a	encode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	lambda$encode$1
		p	0		buf2
		p	1		signature
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	b	lambda$decode$0
		p	0		buf2
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	MAX_PROPERTY_NAME_LENGTH
	f	I	b	MAX_PROPERTY_VALUE_LENGTH
	f	I	c	MAX_PROPERTY_SIGNATURE_LENGTH
	f	I	d	MAX_PROPERTIES
c	yv$20	net/minecraft/network/codec/ByteBufCodecs$20
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/authlib/GameProfile;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/authlib/GameProfile;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$21	net/minecraft/network/codec/ByteBufCodecs$21
	f	[I	a	$SwitchMap$net$minecraft$core$Holder$Kind
c	yv$22	net/minecraft/network/codec/ByteBufCodecs$22
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Short;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Short;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$23	net/minecraft/network/codec/ByteBufCodecs$23
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$24	net/minecraft/network/codec/ByteBufCodecs$24
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$25	net/minecraft/network/codec/ByteBufCodecs$25
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$26	net/minecraft/network/codec/ByteBufCodecs$26
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Long;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Long;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$27	net/minecraft/network/codec/ByteBufCodecs$27
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Float;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Float;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yv$28	net/minecraft/network/codec/ByteBufCodecs$28
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Double;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Double;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	yw	net/minecraft/network/codec/IdDispatchCodec
	m	(Ljava/util/function/Function;Ljava/util/List;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
		p	1		packetIdGetter
		p	2		packetTypes
		p	3		typeToIndex
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/util/function/Function;)Lyw$a;	a	builder
		p	0		packetIdGetter
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	I	a	UNKNOWN_TYPE
	f	Ljava/util/function/Function;	b	typeGetter
	f	Ljava/util/List;	c	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	toId
c	yw$a	net/minecraft/network/codec/IdDispatchCodec$a
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		packetIdGetter
	m	()Lyw;	a	build
	m	(Ljava/lang/Object;Lyx;)Lyw$a;	a	add
		p	1		id
		p	2		codec
	f	Ljava/util/List;	a	entries
	f	Ljava/util/function/Function;	b	typeGetter
c	yw$b	net/minecraft/network/codec/IdDispatchCodec$b
	m	()Lyx;	a	serializer
	m	()Ljava/lang/Object;	b	type
	f	Lyx;	a	serializer
	f	Ljava/lang/Object;	b	type
c	yx	net/minecraft/network/codec/StreamCodec
	m	()Lyx;	a	cast
	m	(Ljava/lang/Object;)Lyx;	a	unit
		p	0		value
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lyx;	a	map
		p	1		to
		p	2		from
	m	(Ljava/util/function/UnaryOperator;)Lyx;	a	recursive
		p	0		codecGetter
	m	(Lyx$a;)Lyx;	a	apply
		p	1		function
	m	(Lyx;Ljava/util/function/Function;Ljava/util/function/Function;)Lyx;	a	composite
		p	0		codec
		p	1		from
		p	2		to
	m	(Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lyx;	a	composite
		p	0		codec1
		p	1		from1
		p	2		codec2
		p	3		from2
		p	4		to
	m	(Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function3;)Lyx;	a	composite
		p	0		codec1
		p	1		from1
		p	2		codec2
		p	3		from2
		p	4		codec3
		p	5		from3
		p	6		to
	m	(Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;)Lyx;	a	composite
		p	0		codec1
		p	1		from1
		p	2		codec2
		p	3		from2
		p	4		codec3
		p	5		from3
		p	6		codec4
		p	7		from4
		p	8		to
	m	(Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function5;)Lyx;	a	composite
		p	0		codec1
		p	1		from1
		p	2		codec2
		p	3		from2
		p	4		codec3
		p	5		from3
		p	6		codec4
		p	7		from4
		p	8		codec5
		p	9		from5
		p	10		to
	m	(Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lyx;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function6;)Lyx;	a	composite
		p	0		codec1
		p	1		from1
		p	2		codec2
		p	3		from2
		p	4		codec3
		p	5		from3
		p	6		codec4
		p	7		from4
		p	8		codec5
		p	9		from5
		p	10		codec6
		p	11		from6
		p	12		to
	m	(Lyz;Lyy;)Lyx;	a	of
		p	0		encoder
		p	1		decoder
	m	(Lza;Lyy;)Lyx;	a	ofMember
		p	0		encoder
		p	1		decoder
	m	(Ljava/util/function/Function;)Lyx;	b	mapStream
		p	1		function
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lyx;	b	dispatch
		p	1		type
		p	2		codec
c	yx$1	net/minecraft/network/codec/StreamCodec$1
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyy;	a	val$decoder
	f	Lyz;	b	val$encoder
c	yx$2	net/minecraft/network/codec/StreamCodec$2
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Lyx;	b	val$codec2
	f	Lyx;	c	val$codec3
	f	Lyx;	d	val$codec4
	f	Lcom/mojang/datafixers/util/Function4;	e	val$constructor
	f	Ljava/util/function/Function;	f	val$getter1
	f	Ljava/util/function/Function;	g	val$getter2
	f	Ljava/util/function/Function;	h	val$getter3
	f	Ljava/util/function/Function;	i	val$getter4
c	yx$3	net/minecraft/network/codec/StreamCodec$3
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Lyx;	b	val$codec2
	f	Lyx;	c	val$codec3
	f	Lyx;	d	val$codec4
	f	Lyx;	e	val$codec5
	f	Lcom/mojang/datafixers/util/Function5;	f	val$constructor
	f	Ljava/util/function/Function;	g	val$getter1
	f	Ljava/util/function/Function;	h	val$getter2
	f	Ljava/util/function/Function;	i	val$getter3
	f	Ljava/util/function/Function;	j	val$getter4
	f	Ljava/util/function/Function;	k	val$getter5
c	yx$4	net/minecraft/network/codec/StreamCodec$4
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Lyx;	b	val$codec2
	f	Lyx;	c	val$codec3
	f	Lyx;	d	val$codec4
	f	Lyx;	e	val$codec5
	f	Lyx;	f	val$codec6
	f	Lcom/mojang/datafixers/util/Function6;	g	val$constructor
	f	Ljava/util/function/Function;	h	val$getter1
	f	Ljava/util/function/Function;	i	val$getter2
	f	Ljava/util/function/Function;	j	val$getter3
	f	Ljava/util/function/Function;	k	val$getter4
	f	Ljava/util/function/Function;	l	val$getter5
	f	Ljava/util/function/Function;	m	val$getter6
c	yx$5	net/minecraft/network/codec/StreamCodec$5
	m	(Ljava/util/function/UnaryOperator;)Lyx;	b	lambda$$0
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/UnaryOperator;	a	val$factory
	f	Ljava/util/function/Supplier;	b	inner
c	yx$6	net/minecraft/network/codec/StreamCodec$6
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyy;	a	val$decoder
	f	Lza;	b	val$encoder
c	yx$7	net/minecraft/network/codec/StreamCodec$7
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/lang/Object;	a	val$instance
c	yx$8	net/minecraft/network/codec/StreamCodec$8
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/Function;	a	val$to
	f	Ljava/util/function/Function;	b	val$from
	f	Lyx;	c	this$0
c	yx$9	net/minecraft/network/codec/StreamCodec$9
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/Function;	a	val$operation
	f	Lyx;	b	this$0
c	yx$a	net/minecraft/network/codec/StreamCodec$a
	m	(Lyx;)Lyx;	apply	apply
		p	1		codec
c	yx$10	net/minecraft/network/codec/StreamCodec$10
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/function/Function;	a	val$codec
	f	Ljava/util/function/Function;	b	val$type
	f	Lyx;	c	this$0
c	yx$11	net/minecraft/network/codec/StreamCodec$11
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Ljava/util/function/Function;	b	val$constructor
	f	Ljava/util/function/Function;	c	val$getter1
c	yx$12	net/minecraft/network/codec/StreamCodec$12
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Lyx;	b	val$codec2
	f	Ljava/util/function/BiFunction;	c	val$constructor
	f	Ljava/util/function/Function;	d	val$getter1
	f	Ljava/util/function/Function;	e	val$getter2
c	yx$13	net/minecraft/network/codec/StreamCodec$13
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec1
	f	Lyx;	b	val$codec2
	f	Lyx;	c	val$codec3
	f	Lcom/mojang/datafixers/util/Function3;	d	val$constructor
	f	Ljava/util/function/Function;	e	val$getter1
	f	Ljava/util/function/Function;	f	val$getter2
	f	Ljava/util/function/Function;	g	val$getter3
c	yy	net/minecraft/network/codec/StreamDecoder
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
c	yz	net/minecraft/network/codec/StreamEncoder
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	za	net/minecraft/network/codec/StreamMemberEncoder
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		value
		p	2		buf
c	zd	net/minecraft/network/protocol/BundleDelimiterPacket
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
c	ze	net/minecraft/network/protocol/BundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	()Lzi;	a	type
	m	()Ljava/lang/Iterable;	b	subPackets
	f	Ljava/lang/Iterable;	a	packets
c	zf	net/minecraft/network/protocol/BundlerInfo
	m	(Lzg;)Lzf$a;	a	startPacketBundling
		p	1		splitter
	m	(Lzg;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	m	(Lzi;Ljava/util/function/Function;Lzd;)Lzf;	a	createForPacket
		p	0		id
		p	1		bundleFunction
		p	2		splitter
	f	I	a	BUNDLE_SIZE_LIMIT
c	zf$1	net/minecraft/network/protocol/BundlerInfo$1
	m	(Lzg;)Lzf$a;	a	startPacketBundling
		p	1		splitter
	m	(Lzg;Ljava/util/function/Consumer;)V	a	unbundlePacket
		p	1		packet
		p	2		consumer
	f	Lzi;	b	val$bundlePacketType
	f	Lzd;	c	val$delimiterPacket
	f	Ljava/util/function/Function;	d	val$constructor
c	zf$1$1	net/minecraft/network/protocol/BundlerInfo$1$1
	m	(Lzg;)Lzg;	a	addPacket
		p	1		packet
	f	Lzf$1;	a	this$0
	f	Ljava/util/List;	b	bundlePackets
c	zf$a	net/minecraft/network/protocol/BundlerInfo$a
	m	(Lzg;)Lzg;	a	addPacket
		p	1		packet
c	zg	net/minecraft/network/protocol/Packet
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lza;Lyy;)Lyx;	a	codec
		p	0		encoder
		p	1		decoder
	m	()Z	c	isSkippable
	m	()Z	d	isTerminal
c	zh	net/minecraft/network/protocol/EnumProtocolDirection
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Lzh;	a	getOpposite
	m	()Ljava/lang/String;	b	id
	m	()[Lzh;	c	$values
	f	Lzh;	a	SERVERBOUND
	f	Lzh;	b	CLIENTBOUND
	f	Ljava/lang/String;	c	id
	f	[Lzh;	d	$VALUES
c	zi	net/minecraft/network/protocol/PacketType
	m	()Lzh;	a	flow
	m	()Lakr;	b	id
	f	Lzh;	a	flow
	f	Lakr;	b	id
c	zj	net/minecraft/network/protocol/PlayerConnectionUtils
	m	(Ljava/lang/Exception;Lzg;Lwf;)Lz;	a	makeReportedException
		p	0		exception
		p	1		packet
		p	2		listener
	m	(Lo;Lwf;Lzg;)V	a	fillCrashReport
		p	0		report
		p	1		listener
		p	2		packet
	m	(Lwf;Lzg;)V	a	lambda$ensureRunningOnSameThread$0
	m	(Lzg;)Ljava/lang/String;	a	lambda$fillCrashReport$3
	m	(Lzg;Lwf;Laqu;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		world
	m	(Lzg;Lwf;Lbph;)V	a	ensureRunningOnSameThread
		p	0		packet
		p	1		listener
		p	2		engine
	m	(Lzg;)Ljava/lang/String;	b	lambda$fillCrashReport$2
	m	(Lzg;)Ljava/lang/String;	c	lambda$fillCrashReport$1
	f	Lorg/slf4j/Logger;	a	LOGGER
c	zk	net/minecraft/network/protocol/ProtocolCodecBuilder
	m	(Lzh;)V	<init>	<init>
		p	1		side
	m	()Lyx;	a	build
	m	(Lzi;Lyx;)Lzk;	a	add
		p	1		id
		p	2		codec
	f	Lyw$a;	a	dispatchBuilder
	f	Lzh;	b	flow
c	zl	net/minecraft/network/protocol/ProtocolInfoBuilder
	m	(Lvu;Lzh;)V	<init>	<init>
		p	1		type
		p	2		side
	m	()Lwh$a;	a	buildUnbound
	m	(Ljava/util/function/Function;)Lwh;	a	build
		p	1		bufUpgrader
	m	(Ljava/util/function/Function;Ljava/util/List;)Lyx;	a	buildPacketCodec
		p	1		bufUpgrader
		p	2		packetTypes
	m	(Lvu;Ljava/util/function/Consumer;)Lwh$a;	a	serverboundProtocol
		p	0		type
		p	1		registrar
	m	(Lvu;Lzh;Ljava/util/function/Consumer;)Lwh$a;	a	protocol
		p	0		type
		p	1		side
		p	2		registrar
	m	(Lzi;Ljava/util/function/Function;Lzd;)Lzl;	a	withBundlePacket
		p	1		id
		p	2		bundler
		p	3		splitter
	m	(Lzi;Lyx;)Lzl;	a	addPacket
		p	1		id
		p	2		codec
	m	(Lvu;Ljava/util/function/Consumer;)Lwh$a;	b	clientboundProtocol
		p	0		type
		p	1		registrar
	f	Lvu;	a	protocol
	f	Lzh;	b	flow
	f	Ljava/util/List;	c	codecs
	f	Lzf;	d	bundlerInfo
c	zl$1	net/minecraft/network/protocol/ProtocolInfoBuilder$1
	m	()Lvu;	a	id
	m	(Ljava/util/function/Function;)Lwh;	a	bind
		p	1		registryBinder
	m	(Lwh$a$a;)V	a	listPackets
		p	1		callback
	m	()Lzh;	b	flow
	f	Ljava/util/List;	a	val$codecs
	f	Lzf;	b	val$bundlerInfo
	f	Lzl;	c	this$0
c	zl$a	net/minecraft/network/protocol/ProtocolInfoBuilder$a
	m	()Lzi;	a	type
	m	(Lzk;Ljava/util/function/Function;)V	a	addToBuilder
		p	1		builder
		p	2		bufUpgrader
	m	()Lyx;	b	serializer
	f	Lzi;	a	type
	f	Lyx;	b	serializer
c	zl$b	net/minecraft/network/protocol/ProtocolInfoBuilder$b
	m	()Lvu;	a	id
	m	()Lzh;	b	flow
	m	()Lyx;	c	codec
	m	()Lzf;	d	bundlerInfo
	f	Lvu;	a	id
	f	Lzh;	b	flow
	f	Lyx;	c	codec
	f	Lzf;	d	bundlerInfo
c	zm	net/minecraft/network/protocol/common/ClientCommonPacketListener
	m	(Lzn;)V	a	handleCustomPayload
		p	1		packet
	m	(Lzo;)V	a	handleCustomReportDetails
		p	1		packet
	m	(Lzp;)V	a	handleDisconnect
		p	1		packet
	m	(Lzq;)V	a	handleKeepAlive
		p	1		packet
	m	(Lzr;)V	a	handlePing
		p	1		packet
	m	(Lzs;)V	a	handleResourcePackPop
		p	1		packet
	m	(Lzt;)V	a	handleResourcePackPush
		p	1		packet
	m	(Lzu;)V	a	handleServerLinks
		p	1		packet
	m	(Lzv;)V	a	handleStoreCookie
		p	1		packet
	m	(Lzw;)V	a	handleTransfer
		p	1		packet
	m	(Lzx;)V	a	handleUpdateTags
		p	1		packet
c	zn	net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket
	m	()Lzi;	a	type
	m	(Lakr;)Lyx;	a	lambda$static$2
		p	0		id
	m	(Ljava/util/ArrayList;)V	a	lambda$static$1
		p	0		types
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Laaj;	b	payload
	m	(Lakr;)Lyx;	b	lambda$static$0
		p	0		id
	f	Lyx;	a	GAMEPLAY_STREAM_CODEC
	f	Lyx;	b	CONFIG_STREAM_CODEC
	f	Laaj;	c	payload
	f	I	d	MAX_PAYLOAD_SIZE
c	zo	net/minecraft/network/protocol/common/ClientboundCustomReportDetailsPacket
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/util/Map;	b	details
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/Map;	b	details
	f	I	c	MAX_DETAIL_KEY_LENGTH
	f	I	d	MAX_DETAIL_VALUE_LENGTH
	f	I	e	MAX_DETAIL_COUNT
	f	Lyx;	f	DETAILS_STREAM_CODEC
c	zp	net/minecraft/network/protocol/common/ClientboundDisconnectPacket
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Lwz;	b	reason
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	reason
c	zq	net/minecraft/network/protocol/common/ClientboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()J	b	getId
	f	Lyx;	a	STREAM_CODEC
	f	J	b	id
c	zr	net/minecraft/network/protocol/common/ClientboundPingPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
c	zs	net/minecraft/network/protocol/common/ClientboundResourcePackPopPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	b	id
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/Optional;	b	id
c	zt	net/minecraft/network/protocol/common/ClientboundResourcePackPushPacket
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	b	id
	m	()Ljava/lang/String;	e	url
	m	()Ljava/lang/String;	f	hash
	m	()Z	g	required
	m	()Ljava/util/Optional;	h	prompt
	f	I	a	MAX_HASH_LENGTH
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/UUID;	c	id
	f	Ljava/lang/String;	d	url
	f	Ljava/lang/String;	e	hash
	f	Z	f	required
	f	Ljava/util/Optional;	g	prompt
c	zu	net/minecraft/network/protocol/common/ClientboundServerLinksPacket
	m	()Lzi;	a	type
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	links
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	links
c	zv	net/minecraft/network/protocol/common/ClientboundStoreCookiePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Lakr;	b	key
	m	()[B	e	payload
	f	Lyx;	a	STREAM_CODEC
	f	Lyx;	b	PAYLOAD_STREAM_CODEC
	f	Lakr;	c	key
	f	[B	d	payload
	f	I	e	MAX_PAYLOAD_SIZE
c	zw	net/minecraft/network/protocol/common/ClientboundTransferPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	host
	m	()I	e	port
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	host
	f	I	c	port
c	zx	net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		groups
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lawx$a;)V	a	lambda$write$0
		p	0		bufx
		p	1		serializedGroup
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzm;)V	a	handle
		p	1		listener
	m	()Ljava/util/Map;	b	getTags
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/Map;	b	tags
c	zy	net/minecraft/network/protocol/common/CommonPacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_CUSTOM_PAYLOAD
	f	Lzi;	b	CLIENTBOUND_CUSTOM_REPORT_DETAILS
	f	Lzi;	c	CLIENTBOUND_DISCONNECT
	f	Lzi;	d	CLIENTBOUND_KEEP_ALIVE
	f	Lzi;	e	CLIENTBOUND_PING
	f	Lzi;	f	CLIENTBOUND_RESOURCE_PACK_POP
	f	Lzi;	g	CLIENTBOUND_RESOURCE_PACK_PUSH
	f	Lzi;	h	CLIENTBOUND_SERVER_LINKS
	f	Lzi;	i	CLIENTBOUND_STORE_COOKIE
	f	Lzi;	j	CLIENTBOUND_TRANSFER
	f	Lzi;	k	CLIENTBOUND_UPDATE_TAGS
	f	Lzi;	l	SERVERBOUND_CLIENT_INFORMATION
	f	Lzi;	m	SERVERBOUND_CUSTOM_PAYLOAD
	f	Lzi;	n	SERVERBOUND_KEEP_ALIVE
	f	Lzi;	o	SERVERBOUND_PONG
	f	Lzi;	p	SERVERBOUND_RESOURCE_PACK
c	zz	net/minecraft/network/protocol/common/ServerCommonPacketListener
	m	(Laaa;)V	a	handleClientInformation
		p	1		packet
	m	(Laab;)V	a	handleCustomPayload
		p	1		packet
	m	(Laac;)V	a	handleKeepAlive
		p	1		packet
	m	(Laad;)V	a	handlePong
		p	1		packet
	m	(Laae;)V	a	handleResourcePackResponse
		p	1		packet
c	aaa	net/minecraft/network/protocol/common/ServerboundClientInformationPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzz;)V	a	handle
		p	1		listener
	m	()Laqh;	b	information
	f	Lyx;	a	STREAM_CODEC
	f	Laqh;	b	information
c	aab	net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket
	m	()Lzi;	a	type
	m	(Lakr;)Lyx;	a	lambda$static$0
		p	0		id
	m	(Ljava/util/ArrayList;)V	a	lambda$static$1
		p	0		types
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzz;)V	a	handle
		p	1		listener
	m	()Laaj;	b	payload
	f	Lyx;	a	STREAM_CODEC
	f	Laaj;	b	payload
	f	I	c	MAX_PAYLOAD_SIZE
c	aac	net/minecraft/network/protocol/common/ServerboundKeepAlivePacket
	m	(J)V	<init>	<init>
		p	1		id
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzz;)V	a	handle
		p	1		listener
	m	()J	b	getId
	f	Lyx;	a	STREAM_CODEC
	f	J	b	id
c	aad	net/minecraft/network/protocol/common/ServerboundPongPacket
	m	(I)V	<init>	<init>
		p	1		parameter
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzz;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
c	aae	net/minecraft/network/protocol/common/ServerboundResourcePackPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lzz;)V	a	handle
		p	1		listener
	m	()Ljava/util/UUID;	b	id
	m	()Laae$a;	e	action
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/UUID;	b	id
	f	Laae$a;	c	action
c	aae$a	net/minecraft/network/protocol/common/ServerboundResourcePackPacket$a
	m	()Z	a	isTerminal
	m	()[Laae$a;	b	$values
	f	Laae$a;	a	SUCCESSFULLY_LOADED
	f	Laae$a;	b	DECLINED
	f	Laae$a;	c	FAILED_DOWNLOAD
	f	Laae$a;	d	ACCEPTED
	f	Laae$a;	e	DOWNLOADED
	f	Laae$a;	f	INVALID_URL
	f	Laae$a;	g	FAILED_RELOAD
	f	Laae$a;	h	DISCARDED
	f	[Laae$a;	i	$VALUES
c	aaf	net/minecraft/network/protocol/common/custom/BeeDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Laaf$a;	b	beeInfo
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Laaf$a;	c	beeInfo
c	aaf$a	net/minecraft/network/protocol/common/custom/BeeDebugPayload$a
	m	(Ljava/util/UUID;ILexc;Leps;Ljd;Ljd;ILjava/util/Set;Ljava/util/List;)V	<init>	<init>
		p	1		uuid
		p	2		entityId
		p	4		path
		p	5		hive
		p	6		flower
		p	7		travelTicks
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	generateName
	m	(Ljd;)Z	a	hasHive
		p	1		pos
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Leps;)V	a	lambda$write$0
		p	0		buf
		p	1		path
	m	()Ljava/util/UUID;	b	uuid
	m	()I	c	id
	m	()Lexc;	d	pos
	m	()Leps;	e	path
	m	()Ljd;	f	hivePos
	m	()Ljd;	g	flowerPos
	m	()I	h	travelTicks
	m	()Ljava/util/Set;	i	goals
	m	()Ljava/util/List;	j	blacklistedHives
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Lexc;	c	pos
	f	Leps;	d	path
	f	Ljd;	e	hivePos
	f	Ljd;	f	flowerPos
	f	I	g	travelTicks
	f	Ljava/util/Set;	h	goals
	f	Ljava/util/List;	i	blacklistedHives
c	aag	net/minecraft/network/protocol/common/custom/BrainDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Laag$a;	b	brainDump
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Laag$a;	c	brainDump
c	aag$a	net/minecraft/network/protocol/common/custom/BrainDebugPayload$a
	m	(Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLexc;Ljava/lang/String;Leps;ZILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		uuid
		p	2		entityId
		p	3		name
		p	4		profession
		p	5		xp
		p	6		health
		p	7		maxHealth
		p	11		wantsGolem
		p	12		angerLevel
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/util/UUID;	a	uuid
	m	(Ljd;)Z	a	hasPoi
		p	1		pos
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Leps;)V	a	lambda$write$0
		p	0		buf
		p	1		path
	m	()I	b	id
	m	(Ljd;)Z	b	hasPotentialPoi
		p	1		pos
	m	()Ljava/lang/String;	c	name
	m	()Ljava/lang/String;	d	profession
	m	()I	e	xp
	m	()F	f	health
	m	()F	g	maxHealth
	m	()Lexc;	h	pos
	m	()Ljava/lang/String;	i	inventory
	m	()Leps;	j	path
	m	()Z	k	wantsGolem
	m	()I	l	angerLevel
	m	()Ljava/util/List;	m	activities
	m	()Ljava/util/List;	n	behaviors
	m	()Ljava/util/List;	o	memories
	m	()Ljava/util/List;	p	gossips
	m	()Ljava/util/Set;	q	pois
	m	()Ljava/util/Set;	r	potentialPois
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	profession
	f	I	e	xp
	f	F	f	health
	f	F	g	maxHealth
	f	Lexc;	h	pos
	f	Ljava/lang/String;	i	inventory
	f	Leps;	j	path
	f	Z	k	wantsGolem
	f	I	l	angerLevel
	f	Ljava/util/List;	m	activities
	f	Ljava/util/List;	n	behaviors
	f	Ljava/util/List;	o	memories
	f	Ljava/util/List;	p	gossips
	f	Ljava/util/Set;	q	pois
	f	Ljava/util/Set;	r	potentialPois
c	aah	net/minecraft/network/protocol/common/custom/BrandPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	brand
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljava/lang/String;	c	brand
c	aai	net/minecraft/network/protocol/common/custom/BreezeDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Laai$a;	b	breezeInfo
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Laai$a;	c	breezeInfo
c	aai$a	net/minecraft/network/protocol/common/custom/BreezeDebugPayload$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljava/lang/String;	a	generateName
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/util/UUID;	b	uuid
	m	()I	c	id
	m	()Ljava/lang/Integer;	d	attackTarget
	m	()Ljd;	e	jumpTarget
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Ljava/lang/Integer;	c	attackTarget
	f	Ljd;	d	jumpTarget
c	aaj	net/minecraft/network/protocol/common/custom/CustomPacketPayload
	m	()Laaj$b;	a	type
	m	(Laaj$a;Ljava/util/List;)Lyx;	a	codec
		p	0		unknownCodecFactory
		p	1		types
	m	(Laaj$c;)Lakr;	a	lambda$codec$0
		p	0		type
	m	(Ljava/lang/String;)Laaj$b;	a	createType
		p	0		id
	m	(Lza;Lyy;)Lyx;	a	codec
		p	0		encoder
		p	1		decoder
c	aaj$1	net/minecraft/network/protocol/common/custom/CustomPacketPayload$1
	m	(Lakr;)Lyx;	a	findCodec
		p	1		id
	m	(Lvw;)Laaj;	a	decode
	m	(Lvw;Laaj$b;Laaj;)V	a	writeCap
		p	1		value
		p	2		id
		p	3		payload
	m	(Lvw;Laaj;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Ljava/util/Map;	a	val$idToType
	f	Laaj$a;	b	val$fallback
c	aaj$a	net/minecraft/network/protocol/common/custom/CustomPacketPayload$a
	m	(Lakr;)Lyx;	create	create
		p	1		id
c	aaj$b	net/minecraft/network/protocol/common/custom/CustomPacketPayload$b
	m	()Lakr;	a	id
	f	Lakr;	a	id
c	aaj$c	net/minecraft/network/protocol/common/custom/CustomPacketPayload$c
	m	()Laaj$b;	a	type
	m	()Lyx;	b	codec
	f	Laaj$b;	a	type
	f	Lyx;	b	codec
c	aak	net/minecraft/network/protocol/common/custom/DiscardedPayload
	m	()Laaj$b;	a	type
	m	(ILakr;Lvw;)Laak;	a	lambda$codec$1
		p	2		buf
	m	(Laak;Lvw;)V	a	lambda$codec$0
		p	0		value
		p	1		buf
	m	(Lakr;I)Lyx;	a	codec
		p	0		id
		p	1		maxBytes
	m	()Lakr;	b	id
	f	Lakr;	a	id
c	aal	net/minecraft/network/protocol/common/custom/GameEventDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Lakq;	b	gameEventType
	m	()Lexc;	c	pos
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Lakq;	c	gameEventType
	f	Lexc;	d	pos
c	aam	net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload
	m	()Laaj$b;	a	type
	m	()Ldyd;	b	listenerPos
	m	()I	c	listenerRange
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ldyd;	c	listenerPos
	f	I	d	listenerRange
c	aan	net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljd;	b	pos
	m	()I	c	color
	m	()Ljava/lang/String;	d	text
	m	()I	e	durationMs
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljd;	c	pos
	f	I	d	color
	f	Ljava/lang/String;	e	text
	f	I	f	durationMs
c	aao	net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
c	aap	net/minecraft/network/protocol/common/custom/GoalDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Laap$a;)V	a	lambda$write$0
		p	0		buf
		p	1		goal
	m	()I	b	entityId
	m	()Ljd;	c	pos
	m	()Ljava/util/List;	d	goals
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	I	c	entityId
	f	Ljd;	d	pos
	f	Ljava/util/List;	e	goals
c	aap$a	net/minecraft/network/protocol/common/custom/GoalDebugPayload$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()I	a	priority
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Z	b	isRunning
	m	()Ljava/lang/String;	c	name
	f	I	a	priority
	f	Z	b	isRunning
	f	Ljava/lang/String;	c	name
c	aaq	net/minecraft/network/protocol/common/custom/HiveDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Laaq$a;	b	hiveInfo
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Laaq$a;	c	hiveInfo
c	aaq$a	net/minecraft/network/protocol/common/custom/HiveDebugPayload$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Ljd;	a	pos
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	hiveType
	m	()I	c	occupantCount
	m	()I	d	honeyLevel
	m	()Z	e	sedated
	f	Ljd;	a	pos
	f	Ljava/lang/String;	b	hiveType
	f	I	c	occupantCount
	f	I	d	honeyLevel
	f	Z	e	sedated
c	aar	net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()J	b	time
	m	()Ljd;	c	pos
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	J	c	time
	f	Ljd;	d	pos
c	aas	net/minecraft/network/protocol/common/custom/PathfindingDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()I	b	entityId
	m	()Leps;	c	path
	m	()F	d	maxNodeDistance
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	I	c	entityId
	f	Leps;	d	path
	f	F	e	maxNodeDistance
c	aat	net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljd;	b	pos
	m	()Ljava/lang/String;	c	poiType
	m	()I	d	freeTicketCount
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljd;	c	pos
	f	Ljava/lang/String;	d	poiType
	f	I	e	freeTicketCount
c	aau	net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljd;	b	pos
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljd;	c	pos
c	aav	net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljd;	b	pos
	m	()I	c	freeTicketCount
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljd;	c	pos
	f	I	d	freeTicketCount
c	aaw	net/minecraft/network/protocol/common/custom/RaidsDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/util/List;	b	raidCenters
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljava/util/List;	c	raidCenters
c	aax	net/minecraft/network/protocol/common/custom/StructuresDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lejj;)V	a	writeBoundingBox
		p	0		buf
		p	1		box
	m	(Lvw;Lvw;Laax$a;)V	a	lambda$write$0
		p	1		buf2
		p	2		piece
	m	()Lakq;	b	dimension
	m	(Lvw;)Lejj;	b	readBoundingBox
		p	0		buf
	m	()Lejj;	c	mainBB
	m	()Ljava/util/List;	d	pieces
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Lakq;	c	dimension
	f	Lejj;	d	mainBB
	f	Ljava/util/List;	e	pieces
c	aax$a	net/minecraft/network/protocol/common/custom/StructuresDebugPayload$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lejj;	a	boundingBox
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Z	b	isStart
	f	Lejj;	a	boundingBox
	f	Z	b	isStart
c	aay	net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/util/Set;	b	villageChunks
	m	()Ljava/util/Set;	c	notVillageChunks
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljava/util/Set;	c	villageChunks
	f	Ljava/util/Set;	d	notVillageChunks
c	aaz	net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laaj$b;	a	type
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljd;	b	pos
	m	()F	c	scale
	m	()F	d	red
	m	()F	e	green
	m	()F	f	blue
	m	()F	g	alpha
	f	Lyx;	a	STREAM_CODEC
	f	Laaj$b;	b	TYPE
	f	Ljd;	c	pos
	f	F	d	scale
	f	F	e	red
	f	F	f	green
	f	F	g	blue
	f	F	h	alpha
c	abc	net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener
	m	(Labd;)V	a	handleConfigurationFinished
		p	1		packet
	m	(Labe;)V	a	handleRegistryData
		p	1		packet
	m	(Labf;)V	a	handleResetChat
		p	1		packet
	m	(Labg;)V	a	handleSelectKnownPacks
		p	1		packet
	m	(Labh;)V	a	handleEnabledFeatures
		p	1		packet
	m	()Lvu;	b	protocol
c	abd	net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket
	m	()Lzi;	a	type
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	d	isTerminal
	f	Labd;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	abe	net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket
	m	()Lzi;	a	type
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakq;	b	registry
	m	()Ljava/util/List;	e	entries
	f	Lyx;	a	STREAM_CODEC
	f	Lakq;	b	registry
	f	Ljava/util/List;	c	entries
	f	Lyx;	d	REGISTRY_KEY_STREAM_CODEC
c	abf	net/minecraft/network/protocol/configuration/ClientboundResetChatPacket
	m	()Lzi;	a	type
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Labf;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	abg	net/minecraft/network/protocol/configuration/ClientboundSelectKnownPacks
	m	()Lzi;	a	type
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	knownPacks
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	knownPacks
c	abh	net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labc;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/Set;	b	features
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/Set;	b	features
c	abi	net/minecraft/network/protocol/configuration/ConfigurationPacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_FINISH_CONFIGURATION
	f	Lzi;	b	CLIENTBOUND_REGISTRY_DATA
	f	Lzi;	c	CLIENTBOUND_UPDATE_ENABLED_FEATURES
	f	Lzi;	d	CLIENTBOUND_SELECT_KNOWN_PACKS
	f	Lzi;	e	CLIENTBOUND_RESET_CHAT
	f	Lzi;	f	SERVERBOUND_FINISH_CONFIGURATION
	f	Lzi;	g	SERVERBOUND_SELECT_KNOWN_PACKS
c	abj	net/minecraft/network/protocol/configuration/ConfigurationProtocols
	m	(Lzl;)V	a	lambda$static$1
		p	0		builder
	m	(Lzl;)V	b	lambda$static$0
		p	0		builder
	f	Lwh$a;	a	SERVERBOUND_TEMPLATE
	f	Lwh;	b	SERVERBOUND
	f	Lwh$a;	c	CLIENTBOUND_TEMPLATE
	f	Lwh;	d	CLIENTBOUND
c	abk	net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener
	m	(Labl;)V	a	handleConfigurationFinished
		p	1		packet
	m	(Labm;)V	a	handleSelectKnownPacks
		p	1		packet
	m	()Lvu;	b	protocol
c	abl	net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket
	m	()Lzi;	a	type
	m	(Labk;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	d	isTerminal
	f	Labl;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	abm	net/minecraft/network/protocol/configuration/ServerboundSelectKnownPacks
	m	()Lzi;	a	type
	m	(Labk;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	knownPacks
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	knownPacks
c	abo	net/minecraft/network/protocol/cookie/ClientCookiePacketListener
	m	(Labp;)V	a	handleRequestCookie
		p	1		packet
c	abp	net/minecraft/network/protocol/cookie/ClientboundCookieRequestPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labo;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	key
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	key
c	abq	net/minecraft/network/protocol/cookie/CookiePacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_COOKIE_REQUEST
	f	Lzi;	b	SERVERBOUND_COOKIE_RESPONSE
c	abr	net/minecraft/network/protocol/cookie/ServerCookiePacketListener
	m	(Labs;)V	a	handleCookieResponse
		p	1		packet
c	abs	net/minecraft/network/protocol/cookie/ServerboundCookieResponsePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labr;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	key
	m	()[B	e	payload
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	key
	f	[B	c	payload
c	abu	net/minecraft/network/protocol/game/PacketListenerPlayOut
	m	(Labv;)V	a	handleAddEntity
		p	1		packet
	m	(Labw;)V	a	handleAddExperienceOrb
		p	1		packet
	m	(Labx;)V	a	handleAnimate
		p	1		packet
	m	(Laby;)V	a	handleAwardStats
		p	1		packet
	m	(Labz;)V	a	handleBlockChangedAck
		p	1		packet
	m	(Laca;)V	a	handleBlockDestruction
		p	1		packet
	m	(Lacb;)V	a	handleBlockEntityData
		p	1		packet
	m	(Lacc;)V	a	handleBlockEvent
		p	1		packet
	m	(Lacd;)V	a	handleBlockUpdate
		p	1		packet
	m	(Lace;)V	a	handleBossUpdate
		p	1		packet
	m	(Lacg;)V	a	handleBundlePacket
		p	1		packet
	m	(Lach;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Laci;)V	a	handleChunkBatchFinished
		p	1		packet
	m	(Lacj;)V	a	handleChunkBatchStart
		p	1		packet
	m	(Lack;)V	a	handleChunksBiomes
		p	1		packet
	m	(Lacl;)V	a	handleTitlesClear
		p	1		packet
	m	(Lacm;)V	a	handleCommandSuggestions
		p	1		packet
	m	(Lacn;)V	a	handleCommands
		p	1		packet
	m	(Laco;)V	a	handleContainerClose
		p	1		packet
	m	(Lacp;)V	a	handleContainerContent
		p	1		packet
	m	(Lacq;)V	a	handleContainerSetData
		p	1		packet
	m	(Lacr;)V	a	handleContainerSetSlot
		p	1		packet
	m	(Lacs;)V	a	handleItemCooldown
		p	1		packet
	m	(Lact;)V	a	handleCustomChatCompletions
		p	1		packet
	m	(Lacu;)V	a	handleDamageEvent
		p	1		packet
	m	(Lacv;)V	a	handleDebugSample
		p	1		packet
	m	(Lacw;)V	a	handleDeleteChat
		p	1		packet
	m	(Lacx;)V	a	handleDisguisedChat
		p	1		packet
	m	(Lacy;)V	a	handleEntityEvent
		p	1		packet
	m	(Lacz;)V	a	handleExplosion
		p	1		packet
	m	(Lada;)V	a	handleForgetLevelChunk
		p	1		packet
	m	(Ladb;)V	a	handleGameEvent
		p	1		packet
	m	(Ladc;)V	a	handleHorseScreenOpen
		p	1		packet
	m	(Ladd;)V	a	handleHurtAnimation
		p	1		packet
	m	(Lade;)V	a	handleInitializeBorder
		p	1		packet
	m	(Ladg;)V	a	handleLevelChunkWithLight
		p	1		packet
	m	(Ladh;)V	a	handleLevelEvent
		p	1		packet
	m	(Ladi;)V	a	handleParticleEvent
		p	1		packet
	m	(Ladj;)V	a	handleLightUpdatePacket
		p	1		packet
	m	(Ladl;)V	a	handleLogin
		p	1		packet
	m	(Ladm;)V	a	handleMapItemData
		p	1		packet
	m	(Ladn;)V	a	handleMerchantOffers
		p	1		packet
	m	(Lado;)V	a	handleMoveEntity
		p	1		packet
	m	(Ladp;)V	a	handleMoveVehicle
		p	1		packet
	m	(Ladq;)V	a	handleOpenBook
		p	1		packet
	m	(Ladr;)V	a	handleOpenScreen
		p	1		packet
	m	(Lads;)V	a	handleOpenSignEditor
		p	1		packet
	m	(Ladt;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Ladu;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Ladv;)V	a	handlePlayerChat
		p	1		packet
	m	(Ladw;)V	a	handlePlayerCombatEnd
		p	1		packet
	m	(Ladx;)V	a	handlePlayerCombatEnter
		p	1		packet
	m	(Lady;)V	a	handlePlayerCombatKill
		p	1		packet
	m	(Ladz;)V	a	handlePlayerInfoRemove
		p	1		packet
	m	(Laea;)V	a	handlePlayerInfoUpdate
		p	1		packet
	m	(Laeb;)V	a	handleLookAt
		p	1		packet
	m	(Laec;)V	a	handleMovePlayer
		p	1		packet
	m	(Laed;)V	a	handleProjectilePowerPacket
		p	1		packet
	m	(Laee;)V	a	handleAddOrRemoveRecipes
		p	1		packet
	m	(Laef;)V	a	handleRemoveEntities
		p	1		packet
	m	(Laeg;)V	a	handleRemoveMobEffect
		p	1		packet
	m	(Laeh;)V	a	handleResetScore
		p	1		packet
	m	(Laei;)V	a	handleRespawn
		p	1		packet
	m	(Laej;)V	a	handleRotateMob
		p	1		packet
	m	(Laek;)V	a	handleChunkBlocksUpdate
		p	1		packet
	m	(Lael;)V	a	handleSelectAdvancementsTab
		p	1		packet
	m	(Laem;)V	a	handleServerData
		p	1		packet
	m	(Laen;)V	a	setActionBarText
		p	1		packet
	m	(Laeo;)V	a	handleSetBorderCenter
		p	1		packet
	m	(Laep;)V	a	handleSetBorderLerpSize
		p	1		packet
	m	(Laeq;)V	a	handleSetBorderSize
		p	1		packet
	m	(Laer;)V	a	handleSetBorderWarningDelay
		p	1		packet
	m	(Laes;)V	a	handleSetBorderWarningDistance
		p	1		packet
	m	(Laet;)V	a	handleSetCamera
		p	1		packet
	m	(Laeu;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Laev;)V	a	handleSetChunkCacheCenter
		p	1		packet
	m	(Laew;)V	a	handleSetChunkCacheRadius
		p	1		packet
	m	(Laex;)V	a	handleSetSpawn
		p	1		packet
	m	(Laey;)V	a	handleSetDisplayObjective
		p	1		packet
	m	(Laez;)V	a	handleSetEntityData
		p	1		packet
	m	(Lafa;)V	a	handleEntityLinkPacket
		p	1		packet
	m	(Lafb;)V	a	handleSetEntityMotion
		p	1		packet
	m	(Lafc;)V	a	handleSetEquipment
		p	1		packet
	m	(Lafd;)V	a	handleSetExperience
		p	1		packet
	m	(Lafe;)V	a	handleSetHealth
		p	1		packet
	m	(Laff;)V	a	handleAddObjective
		p	1		packet
	m	(Lafg;)V	a	handleSetEntityPassengersPacket
		p	1		packet
	m	(Lafh;)V	a	handleSetPlayerTeamPacket
		p	1		packet
	m	(Lafi;)V	a	handleSetScore
		p	1		packet
	m	(Lafj;)V	a	handleSetSimulationDistance
		p	1		packet
	m	(Lafk;)V	a	setSubtitleText
		p	1		packet
	m	(Lafl;)V	a	handleSetTime
		p	1		packet
	m	(Lafm;)V	a	setTitleText
		p	1		packet
	m	(Lafn;)V	a	setTitlesAnimation
		p	1		packet
	m	(Lafo;)V	a	handleSoundEntityEvent
		p	1		packet
	m	(Lafp;)V	a	handleSoundEvent
		p	1		packet
	m	(Lafq;)V	a	handleConfigurationStart
		p	1		packet
	m	(Lafr;)V	a	handleStopSoundEvent
		p	1		packet
	m	(Lafs;)V	a	handleSystemChat
		p	1		packet
	m	(Laft;)V	a	handleTabListCustomisation
		p	1		packet
	m	(Lafu;)V	a	handleTagQueryPacket
		p	1		packet
	m	(Lafv;)V	a	handleTakeItemEntity
		p	1		packet
	m	(Lafw;)V	a	handleTeleportEntity
		p	1		packet
	m	(Lafx;)V	a	handleTickingState
		p	1		packet
	m	(Lafy;)V	a	handleTickingStep
		p	1		packet
	m	(Lafz;)V	a	handleUpdateAdvancementsPacket
		p	1		packet
	m	(Laga;)V	a	handleUpdateAttributes
		p	1		packet
	m	(Lagb;)V	a	handleUpdateMobEffect
		p	1		packet
	m	(Lagc;)V	a	handleUpdateRecipes
		p	1		packet
	m	()Lvu;	b	protocol
c	abv	net/minecraft/network/protocol/game/PacketPlayOutSpawnEntity
	m	(ILjava/util/UUID;DDDFFLbsx;ILexc;D)V	<init>	<init>
		p	1		entityId
		p	2		uuid
		p	3		x
		p	5		y
		p	7		z
		p	9		pitch
		p	10		yaw
		p	11		entityType
		p	12		entityData
		p	13		velocity
		p	14		headYaw
	m	(Lbsr;ILjd;)V	<init>	<init>
		p	1		entity
		p	2		entityData
		p	3		pos
	m	(Lbsr;Laqt;)V	<init>	<init>
		p	1		entity
		p	2		entityTrackerEntry
	m	(Lbsr;Laqt;I)V	<init>	<init>
		p	1		entity
		p	2		entityTrackerEntry
		p	3		entityData
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getId
	m	()Ljava/util/UUID;	e	getUUID
	m	()Lbsx;	f	getType
	m	()D	g	getX
	m	()D	h	getY
	m	()D	i	getZ
	m	()D	j	getXa
	m	()D	k	getYa
	m	()D	l	getZa
	m	()F	m	getXRot
	m	()F	n	getYRot
	m	()F	o	getYHeadRot
	m	()I	p	getData
	f	Lyx;	a	STREAM_CODEC
	f	D	b	MAGICAL_QUANTIZATION
	f	D	c	LIMIT
	f	I	d	id
	f	Ljava/util/UUID;	e	uuid
	f	Lbsx;	f	type
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	I	j	xa
	f	I	k	ya
	f	I	l	za
	f	B	m	xRot
	f	B	n	yRot
	f	B	o	yHeadRot
	f	I	p	data
c	abw	net/minecraft/network/protocol/game/PacketPlayOutSpawnEntityExperienceOrb
	m	(Lbtc;Laqt;)V	<init>	<init>
		p	1		orb
		p	2		entry
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()I	h	getValue
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	I	f	value
c	abx	net/minecraft/network/protocol/game/PacketPlayOutAnimation
	m	(Lbsr;I)V	<init>	<init>
		p	1		entity
		p	2		animationId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()I	e	getAction
	f	Lyx;	a	STREAM_CODEC
	f	I	b	SWING_MAIN_HAND
	f	I	c	WAKE_UP
	f	I	d	SWING_OFF_HAND
	f	I	e	CRITICAL_HIT
	f	I	f	MAGIC_CRITICAL_HIT
	f	I	g	id
	f	I	h	action
c	aby	net/minecraft/network/protocol/game/PacketPlayOutStatistic
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	stats
	f	Lyx;	a	STREAM_CODEC
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	stats
	f	Lyx;	c	STAT_VALUES_STREAM_CODEC
c	abz	net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	sequence
	f	Lyx;	a	STREAM_CODEC
	f	I	b	sequence
c	aca	net/minecraft/network/protocol/game/PacketPlayOutBlockBreakAnimation
	m	(ILjd;I)V	<init>	<init>
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Ljd;	e	getPos
	m	()I	f	getProgress
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	Ljd;	c	pos
	f	I	d	progress
c	acb	net/minecraft/network/protocol/game/PacketPlayOutTileEntityData
	m	(Ljd;Ldqj;Lub;)V	<init>	<init>
		p	1		pos
		p	2		blockEntityType
		p	3		nbt
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldqh;)Lacb;	a	create
		p	0		blockEntity
	m	(Ldqh;Ljava/util/function/BiFunction;)Lacb;	a	create
		p	0		blockEntity
		p	1		nbtGetter
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Ldqj;	e	getType
	m	()Lub;	f	getTag
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	Ldqj;	c	type
	f	Lub;	d	tag
c	acc	net/minecraft/network/protocol/game/PacketPlayOutBlockAction
	m	(Ljd;Ldfy;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljd;	b	getPos
	m	()I	e	getB0
	m	()I	f	getB1
	m	()Ldfy;	g	getBlock
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	I	c	b0
	f	I	d	b1
	f	Ldfy;	e	block
c	acd	net/minecraft/network/protocol/game/PacketPlayOutBlockChange
	m	(Ldcc;Ljd;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ldtc;	b	getBlockState
	m	()Ljd;	e	getPos
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	Ldtc;	c	blockState
c	ace	net/minecraft/network/protocol/game/PacketPlayOutBoss
	m	(Ljava/util/UUID;Lace$c;)V	<init>	<init>
		p	1		uuid
		p	2		action
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lace$b;)V	a	dispatch
		p	1		consumer
	m	(Lbqh;)Lace;	a	createAddPacket
		p	0		bar
	m	(Ljava/util/UUID;)Lace;	a	createRemovePacket
		p	0		uuid
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	(ZZZ)I	a	encodeProperties
		p	0		darkenSky
		p	1		dragonMusic
		p	2		thickenFog
	m	(Lbqh;)Lace;	b	createUpdateProgressPacket
		p	0		bar
	m	(Lbqh;)Lace;	c	createUpdateNamePacket
		p	0		bar
	m	(Lbqh;)Lace;	d	createUpdateStylePacket
		p	0		bar
	m	(Lbqh;)Lace;	e	createUpdatePropertiesPacket
		p	0		bar
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_DARKEN
	f	I	c	FLAG_MUSIC
	f	I	d	FLAG_FOG
	f	Ljava/util/UUID;	e	id
	f	Lace$c;	f	operation
	f	Lace$c;	g	REMOVE_OPERATION
c	ace$1	net/minecraft/network/protocol/game/PacketPlayOutBoss$1
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
c	ace$a	net/minecraft/network/protocol/game/PacketPlayOutBoss$a
	m	(Lbqh;)V	<init>	<init>
		p	1		bar
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
	f	Lwz;	a	name
	f	F	b	progress
	f	Lbqh$a;	c	color
	f	Lbqh$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
c	ace$b	net/minecraft/network/protocol/game/PacketPlayOutBoss$b
	m	(Ljava/util/UUID;)V	a	remove
		p	1		uuid
	m	(Ljava/util/UUID;F)V	a	updateProgress
		p	1		uuid
		p	2		percent
	m	(Ljava/util/UUID;Lbqh$a;Lbqh$b;)V	a	updateStyle
		p	1		id
		p	2		color
		p	3		style
	m	(Ljava/util/UUID;Lwz;)V	a	updateName
		p	1		uuid
		p	2		name
	m	(Ljava/util/UUID;Lwz;FLbqh$a;Lbqh$b;ZZZ)V	a	add
		p	1		uuid
		p	2		name
		p	3		percent
		p	4		color
		p	5		style
		p	6		darkenSky
		p	7		dragonMusic
		p	8		thickenFog
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
		p	1		uuid
		p	2		darkenSky
		p	3		dragonMusic
		p	4		thickenFog
c	ace$c	net/minecraft/network/protocol/game/PacketPlayOutBoss$Action
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
c	ace$d	net/minecraft/network/protocol/game/PacketPlayOutBoss$d
	m	(Ljava/lang/String;ILyy;)V	<init>	<init>
		p	3		parser
	m	()[Lace$d;	a	$values
	m	(Lwk;)Lace$c;	a	lambda$static$0
		p	0		buf
	f	Lace$d;	a	ADD
	f	Lace$d;	b	REMOVE
	f	Lace$d;	c	UPDATE_PROGRESS
	f	Lace$d;	d	UPDATE_NAME
	f	Lace$d;	e	UPDATE_STYLE
	f	Lace$d;	f	UPDATE_PROPERTIES
	f	Lyy;	g	reader
	f	[Lace$d;	h	$VALUES
c	ace$e	net/minecraft/network/protocol/game/PacketPlayOutBoss$e
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	(Lwz;)V	<init>	<init>
		p	1		name
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Lwz;	b	name
	f	Lwz;	a	name
c	ace$f	net/minecraft/network/protocol/game/PacketPlayOutBoss$f
	m	(F)V	<init>	<init>
		p	1		percent
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
	m	()F	b	progress
	f	F	a	progress
c	ace$g	net/minecraft/network/protocol/game/PacketPlayOutBoss$g
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	(ZZZ)V	<init>	<init>
		p	1		darkenSky
		p	2		dragonMusic
		p	3		thickenFog
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
c	ace$h	net/minecraft/network/protocol/game/PacketPlayOutBoss$h
	m	(Lbqh$a;Lbqh$b;)V	<init>	<init>
		p	1		color
		p	2		style
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lace$d;	a	getType
	m	(Ljava/util/UUID;Lace$b;)V	a	dispatch
		p	1		uuid
		p	2		consumer
	m	(Lwk;)V	a	write
		p	1		buf
	f	Lbqh$a;	a	color
	f	Lbqh$b;	b	overlay
c	acf	net/minecraft/network/protocol/game/ClientboundBundleDelimiterPacket
	m	()Lzi;	a	type
c	acg	net/minecraft/network/protocol/game/ClientboundBundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
		p	1		packets
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
c	ach	net/minecraft/network/protocol/game/PacketPlayOutServerDifficulty
	m	(Lbqo;Z)V	<init>	<init>
		p	1		difficulty
		p	2		difficultyLocked
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isLocked
	m	()Lbqo;	e	getDifficulty
	f	Lyx;	a	STREAM_CODEC
	f	Lbqo;	b	difficulty
	f	Z	c	locked
c	aci	net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	batchSize
	f	Lyx;	a	STREAM_CODEC
	f	I	b	batchSize
c	acj	net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lacj;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	ack	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ljava/util/List;)Lack;	a	forChunks
		p	0		chunks
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lack$a;)V	a	lambda$write$0
		p	0		bufx
		p	1		data
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	chunkBiomeData
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	chunkBiomeData
	f	I	c	TWO_MEGABYTES
c	ack$a	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$a
	m	(Ldvi;)V	<init>	<init>
		p	1		chunk
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lvw;	a	getReadBuffer
	m	(Ldvi;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Ldvi;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	()Ldcd;	b	pos
	m	()[B	c	buffer
	m	()Lio/netty/buffer/ByteBuf;	d	getWriteBuffer
	f	Ldcd;	a	pos
	f	[B	b	buffer
c	acl	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		reset
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	shouldResetTimes
	f	Lyx;	a	STREAM_CODEC
	f	Z	b	resetTimes
c	acm	net/minecraft/network/protocol/game/PacketPlayOutTabComplete
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
		p	1		completionId
		p	2		suggestions
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lcom/mojang/brigadier/context/StringRange;Lacm$a;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$toSuggestions$1
		p	1		suggestion
	m	(Lcom/mojang/brigadier/suggestion/Suggestion;)Lacm$a;	a	lambda$new$0
		p	0		suggestion
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	b	toSuggestions
	m	()I	e	id
	m	()I	f	start
	m	()I	g	length
	m	()Ljava/util/List;	h	suggestions
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	I	c	start
	f	I	d	length
	f	Ljava/util/List;	e	suggestions
c	acm$a	net/minecraft/network/protocol/game/PacketPlayOutTabComplete$a
	m	()Ljava/lang/String;	a	text
	m	()Ljava/util/Optional;	b	tooltip
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	text
	f	Ljava/util/Optional;	c	tooltip
c	acn	net/minecraft/network/protocol/game/PacketPlayOutCommands
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)V	<init>	<init>
		p	1		rootNode
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lacn$b;	a	createEntry
		p	0		node
		p	1		nodes
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
		p	0		commandTree
	m	(Lep;)Lcom/mojang/brigadier/tree/RootCommandNode;	a	getRoot
		p	1		commandRegistryAccess
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List;	a	createEntries
		p	0		nodes
	m	(Ljava/util/List;)V	a	validateEntries
		p	0		nodeDatas
	m	(Ljava/util/List;Ljava/util/function/BiPredicate;)V	a	validateEntries
		p	0		nodeDatas
		p	1		validator
	m	(Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z	a	lambda$validateEntries$1
		p	0		index
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;B)Lacn$e;	a	read
		p	0		buf
		p	1		flags
	m	(Lvw;Lacn$b;)V	a	lambda$write$0
		p	0		buf2
		p	1		node
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)Lacn$b;	b	readNode
		p	0		buf
	f	Lyx;	a	STREAM_CODEC
	f	B	b	MASK_TYPE
	f	B	c	FLAG_EXECUTABLE
	f	B	d	FLAG_REDIRECT
	f	B	e	FLAG_CUSTOM_SUGGESTIONS
	f	B	f	TYPE_ROOT
	f	B	g	TYPE_LITERAL
	f	B	h	TYPE_ARGUMENT
	f	I	i	rootIndex
	f	Ljava/util/List;	j	entries
c	acn$a	net/minecraft/network/protocol/game/PacketPlayOutCommands$a
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)V	<init>	<init>
		p	1		node
	m	(Ljava/lang/String;Lio$a;Lakr;)V	<init>	<init>
		p	1		name
		p	2		properties
		p	3		id
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lakr;	a	getSuggestionId
		p	0		provider
	m	(Lep;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lio$a;)V	a	serializeCap
		p	0		buf
		p	1		properties
	m	(Lvw;Lio;Lio$a;)V	a	serializeCap
		p	0		buf
		p	1		serializer
		p	2		properties
	f	Ljava/lang/String;	a	id
	f	Lio$a;	b	argumentType
	f	Lakr;	c	suggestionId
c	acn$b	net/minecraft/network/protocol/game/PacketPlayOutCommands$b
	m	(Lacn$e;II[I)V	<init>	<init>
		p	1		suggestableNode
		p	2		flags
		p	3		redirectNodeIndex
		p	4		childNodeIndices
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	a	canBuild
		p	1		indices
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	b	canResolve
		p	1		indices
	f	Lacn$e;	a	stub
	f	I	b	flags
	f	I	c	redirect
	f	[I	d	children
c	acn$c	net/minecraft/network/protocol/game/PacketPlayOutCommands$c
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		literal
	m	(Lep;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lvw;)V	a	write
		p	1		buf
	f	Ljava/lang/String;	a	id
c	acn$d	net/minecraft/network/protocol/game/PacketPlayOutCommands$d
	m	(Lep;Ljava/util/List;)V	<init>	<init>
		p	1		commandRegistryAccess
		p	2		nodeDatas
	m	(I)Lcom/mojang/brigadier/tree/CommandNode;	a	resolve
		p	1		index
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$resolve$0
		p	0		context
	f	Lep;	a	context
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	nodes
c	acn$e	net/minecraft/network/protocol/game/PacketPlayOutCommands$e
	m	(Lep;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
		p	1		commandRegistryAccess
	m	(Lvw;)V	a	write
		p	1		buf
c	aco	net/minecraft/network/protocol/game/PacketPlayOutCloseWindow
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
c	acp	net/minecraft/network/protocol/game/PacketPlayOutWindowItems
	m	(IILjv;Lcuq;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		contents
		p	4		cursorStack
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getContainerId
	m	()Ljava/util/List;	e	getItems
	m	()Lcuq;	f	getCarriedItem
	m	()I	g	getStateId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	stateId
	f	Ljava/util/List;	d	items
	f	Lcuq;	e	carriedItem
c	acq	net/minecraft/network/protocol/game/PacketPlayOutWindowData
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		propertyId
		p	3		value
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	e	getId
	m	()I	f	getValue
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	id
	f	I	d	value
c	acr	net/minecraft/network/protocol/game/PacketPlayOutSetSlot
	m	(IIILcuq;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		stack
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getContainerId
	m	()I	e	getSlot
	m	()Lcuq;	f	getItem
	m	()I	g	getStateId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	CARRIED_ITEM
	f	I	c	PLAYER_INVENTORY
	f	I	d	containerId
	f	I	e	stateId
	f	I	f	slot
	f	Lcuq;	g	itemStack
c	acs	net/minecraft/network/protocol/game/PacketPlayOutSetCooldown
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lcul;	b	item
	m	()I	e	duration
	f	Lyx;	a	STREAM_CODEC
	f	Lcul;	b	item
	f	I	c	duration
c	act	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lact$a;	b	action
	m	()Ljava/util/List;	e	entries
	f	Lyx;	a	STREAM_CODEC
	f	Lact$a;	b	action
	f	Ljava/util/List;	c	entries
c	act$a	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	m	()[Lact$a;	a	$values
	f	Lact$a;	a	ADD
	f	Lact$a;	b	REMOVE
	f	Lact$a;	c	SET
	f	[Lact$a;	d	$VALUES
c	acu	net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	m	(Lbsr;Lbrk;)V	<init>	<init>
		p	1		entity
		p	2		damageSource
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbrk;	a	getSource
		p	1		world
	m	(Lvw;)I	a	readOptionalEntityId
		p	0		buf
	m	(Lvw;I)V	a	writeOptionalEntityId
		p	0		buf
		p	1		value
	m	(Lvw;Lexc;)V	a	lambda$write$1
		p	0		bufx
		p	1		pos
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	entityId
	m	(Lvw;)Lexc;	b	lambda$new$0
		p	0		pos
	m	()Ljm;	e	sourceType
	m	()I	f	sourceCauseId
	m	()I	g	sourceDirectId
	m	()Ljava/util/Optional;	h	sourcePosition
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	Ljm;	c	sourceType
	f	I	d	sourceCauseId
	f	I	e	sourceDirectId
	f	Ljava/util/Optional;	f	sourcePosition
c	acv	net/minecraft/network/protocol/game/ClientboundDebugSamplePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()[J	b	sample
	m	()Lbls;	e	debugSampleType
	f	Lyx;	a	STREAM_CODEC
	f	[J	b	sample
	f	Lbls;	c	debugSampleType
c	acw	net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lxl$a;	b	messageSignature
	f	Lyx;	a	STREAM_CODEC
	f	Lxl$a;	b	messageSignature
c	acx	net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	message
	m	()Z	c	isSkippable
	m	()Lwv$a;	e	chatType
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	message
	f	Lwv$a;	c	chatType
c	acy	net/minecraft/network/protocol/game/PacketPlayOutEntityStatus
	m	(Lbsr;B)V	<init>	<init>
		p	1		entity
		p	2		status
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbsr;	a	getEntity
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()B	b	getEventId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	B	c	eventId
c	acz	net/minecraft/network/protocol/game/PacketPlayOutExplosion
	m	(DDDFLjava/util/List;Lexc;Ldco$a;Llk;Llk;Ljm;)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		radius
		p	8		affectedBlocks
		p	9		playerVelocity
		p	10		destructionType
		p	11		particle
		p	12		emitterParticle
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(IIILvw;)Ljd;	a	lambda$new$0
		p	3		buf2
	m	(IIILvw;Ljd;)V	a	lambda$write$1
		p	3		buf2
		p	4		pos
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()F	b	getKnockbackX
	m	()F	e	getKnockbackY
	m	()F	f	getKnockbackZ
	m	()D	g	getX
	m	()D	h	getY
	m	()D	i	getZ
	m	()F	j	getPower
	m	()Ljava/util/List;	k	getToBlow
	m	()Ldco$a;	l	getBlockInteraction
	m	()Llk;	m	getSmallExplosionParticles
	m	()Llk;	n	getLargeExplosionParticles
	m	()Ljm;	o	getExplosionSound
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	power
	f	Ljava/util/List;	f	toBlow
	f	F	g	knockbackX
	f	F	h	knockbackY
	f	F	i	knockbackZ
	f	Llk;	j	smallExplosionParticles
	f	Llk;	k	largeExplosionParticles
	f	Ldco$a;	l	blockInteraction
	f	Ljm;	m	explosionSound
c	ada	net/minecraft/network/protocol/game/PacketPlayOutUnloadChunk
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ldcd;	b	pos
	f	Lyx;	a	STREAM_CODEC
	f	Ldcd;	b	pos
c	adb	net/minecraft/network/protocol/game/PacketPlayOutGameStateChange
	m	(Ladb$a;F)V	<init>	<init>
		p	1		reason
		p	2		value
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ladb$a;	b	getEvent
	m	()F	e	getParam
	f	Lyx;	a	STREAM_CODEC
	f	Ladb$a;	b	NO_RESPAWN_BLOCK_AVAILABLE
	f	Ladb$a;	c	START_RAINING
	f	Ladb$a;	d	STOP_RAINING
	f	Ladb$a;	e	CHANGE_GAME_MODE
	f	Ladb$a;	f	WIN_GAME
	f	Ladb$a;	g	DEMO_EVENT
	f	Ladb$a;	h	ARROW_HIT_PLAYER
	f	Ladb$a;	i	RAIN_LEVEL_CHANGE
	f	Ladb$a;	j	THUNDER_LEVEL_CHANGE
	f	Ladb$a;	k	PUFFER_FISH_STING
	f	Ladb$a;	l	GUARDIAN_ELDER_EFFECT
	f	Ladb$a;	m	IMMEDIATE_RESPAWN
	f	Ladb$a;	n	LIMITED_CRAFTING
	f	Ladb$a;	o	LEVEL_CHUNKS_LOAD_START
	f	I	p	DEMO_PARAM_INTRO
	f	I	q	DEMO_PARAM_HINT_1
	f	I	r	DEMO_PARAM_HINT_2
	f	I	s	DEMO_PARAM_HINT_3
	f	I	t	DEMO_PARAM_HINT_4
	f	Ladb$a;	u	event
	f	F	v	param
c	adb$a	net/minecraft/network/protocol/game/PacketPlayOutGameStateChange$a
	m	(I)V	<init>	<init>
		p	1		id
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
c	adc	net/minecraft/network/protocol/game/PacketPlayOutOpenWindowHorse
	m	(III)V	<init>	<init>
		p	1		syncId
		p	2		slotColumnCount
		p	3		horseId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()I	e	getInventoryColumns
	m	()I	f	getEntityId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	inventoryColumns
	f	I	d	entityId
c	add	net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	m	(Lbtn;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	id
	m	()F	e	yaw
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	F	c	yaw
c	ade	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getNewCenterX
	m	()D	e	getNewCenterZ
	m	()D	f	getNewSize
	m	()D	g	getOldSize
	m	()J	h	getLerpTime
	m	()I	i	getNewAbsoluteMaxSize
	m	()I	j	getWarningTime
	m	()I	k	getWarningBlocks
	f	Lyx;	a	STREAM_CODEC
	f	D	b	newCenterX
	f	D	c	newCenterZ
	f	D	d	oldSize
	f	D	e	newSize
	f	J	f	lerpTime
	f	I	g	newAbsoluteMaxSize
	f	I	h	warningBlocks
	f	I	i	warningTime
c	adf	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	m	(Ldvi;)V	<init>	<init>
		p	1		chunk
	m	(Lwk;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		z
	m	()Lvw;	a	getReadBuffer
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
		p	1		x
		p	2		z
	m	(IILadf$b;)V	a	lambda$getBlockEntitiesTagsConsumer$0
		p	3		visitor
	m	(Ladf$b;II)V	a	getBlockEntitiesTags
		p	1		consumer
		p	2		x
		p	3		z
	m	(Ldvi;)I	a	calculateChunkSize
		p	0		chunk
	m	(Lvw;Ldvi;)V	a	extractChunkData
		p	0		buf
		p	1		chunk
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Lub;	b	getHeightmaps
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	f	I	a	TWO_MEGABYTES
	f	Lub;	b	heightmaps
	f	[B	c	buffer
	f	Ljava/util/List;	d	blockEntitiesData
c	adf$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$a
	m	(IILdqj;Lub;)V	<init>	<init>
		p	1		localXz
		p	2		y
		p	3		type
		p	4		nbt
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	(Ldqh;)Ladf$a;	a	create
		p	0		blockEntity
	m	(Lwk;)V	a	write
		p	1		buf
	f	Lyx;	a	STREAM_CODEC
	f	Lyx;	b	LIST_STREAM_CODEC
	f	I	c	packedXZ
	f	I	d	y
	f	Ldqj;	e	type
	f	Lub;	f	tag
c	adf$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$b
	m	(Ljd;Ldqj;Lub;)V	accept	accept
		p	1		pos
		p	2		type
		p	3		nbt
c	adg	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	m	(Ldvi;Leot;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		chunk
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getX
	m	()I	e	getZ
	m	()Ladf;	f	getChunkData
	m	()Ladk;	g	getLightData
	f	Lyx;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
	f	Ladf;	d	chunkData
	f	Ladk;	e	lightData
c	adh	net/minecraft/network/protocol/game/PacketPlayOutWorldEvent
	m	(ILjd;IZ)V	<init>	<init>
		p	1		eventId
		p	2		pos
		p	3		data
		p	4		global
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isGlobalEvent
	m	()I	e	getType
	m	()I	f	getData
	m	()Ljd;	g	getPos
	f	Lyx;	a	STREAM_CODEC
	f	I	b	type
	f	Ljd;	c	pos
	f	I	d	data
	f	Z	e	globalEvent
c	adi	net/minecraft/network/protocol/game/PacketPlayOutWorldParticles
	m	(Llk;ZDDDFFFFI)V	<init>	<init>
		p	1		parameters
		p	2		longDistance
		p	3		x
		p	5		y
		p	7		z
		p	9		offsetX
		p	10		offsetY
		p	11		offsetZ
		p	12		speed
		p	13		count
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Z	b	isOverrideLimiter
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()F	h	getXDist
	m	()F	i	getYDist
	m	()F	j	getZDist
	m	()F	k	getMaxSpeed
	m	()I	l	getCount
	m	()Llk;	m	getParticle
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	xDist
	f	F	f	yDist
	f	F	g	zDist
	f	F	h	maxSpeed
	f	I	i	count
	f	Z	j	overrideLimiter
	f	Llk;	k	particle
c	adj	net/minecraft/network/protocol/game/PacketPlayOutLightUpdate
	m	(Ldcd;Leot;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		chunkPos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	e	getZ
	m	()Ladk;	f	getLightData
	f	Lyx;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
	f	Ladk;	d	lightData
c	adk	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	m	(Ldcd;Leot;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
		p	1		pos
		p	2		lightProvider
		p	3		skyBits
		p	4		blockBits
	m	(Lvw;II)V	<init>	<init>
		p	1		buf
		p	2		x
		p	3		y
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	(Ldcd;Leot;Lddf;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
		p	1		pos
		p	2		lightProvider
		p	3		type
		p	4		y
		p	5		initialized
		p	6		uninitialized
		p	7		nibbles
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	()Ljava/util/List;	c	getSkyUpdates
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	f	Lyx;	a	DATA_LAYER_STREAM_CODEC
	f	Ljava/util/BitSet;	b	skyYMask
	f	Ljava/util/BitSet;	c	blockYMask
	f	Ljava/util/BitSet;	d	emptySkyYMask
	f	Ljava/util/BitSet;	e	emptyBlockYMask
	f	Ljava/util/List;	f	skyUpdates
	f	Ljava/util/List;	g	blockUpdates
c	adl	net/minecraft/network/protocol/game/PacketPlayOutLogin
	m	(IZLjava/util/Set;IIIZZZLagd;Z)V	<init>	<init>
		p	1		playerEntityId
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)Lakq;	a	lambda$new$0
		p	0		b
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	playerId
	m	()Z	e	hardcore
	m	()Ljava/util/Set;	f	levels
	m	()I	g	maxPlayers
	m	()I	h	chunkRadius
	m	()I	i	simulationDistance
	m	()Z	j	reducedDebugInfo
	m	()Z	k	showDeathScreen
	m	()Z	l	doLimitedCrafting
	m	()Lagd;	m	commonPlayerSpawnInfo
	m	()Z	n	enforcesSecureChat
	f	Lyx;	a	STREAM_CODEC
	f	I	b	playerId
	f	Z	c	hardcore
	f	Ljava/util/Set;	d	levels
	f	I	e	maxPlayers
	f	I	f	chunkRadius
	f	I	g	simulationDistance
	f	Z	h	reducedDebugInfo
	f	Z	i	showDeathScreen
	f	Z	j	doLimitedCrafting
	f	Lagd;	k	commonPlayerSpawnInfo
	f	Z	l	enforcesSecureChat
c	adm	net/minecraft/network/protocol/game/PacketPlayOutMap
	m	(Leqr;BZLjava/util/Collection;Leqt$b;)V	<init>	<init>
		p	1		mapId
		p	2		scale
		p	3		locked
		p	4		decorations
		p	5		updateData
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Leqt;)V	a	applyToMap
		p	1		mapState
	m	(Leqt;Leqt$b;)V	a	lambda$applyToMap$0
		p	1		updateData
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Leqr;	b	mapId
	m	()B	e	scale
	m	()Z	f	locked
	m	()Ljava/util/Optional;	g	decorations
	m	()Ljava/util/Optional;	h	colorPatch
	f	Lyx;	a	STREAM_CODEC
	f	Leqr;	b	mapId
	f	B	c	scale
	f	Z	d	locked
	f	Ljava/util/Optional;	e	decorations
	f	Ljava/util/Optional;	f	colorPatch
c	adn	net/minecraft/network/protocol/game/PacketPlayOutOpenWindowMerchant
	m	(ILdbv;IIZZ)V	<init>	<init>
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getContainerId
	m	()Ldbv;	e	getOffers
	m	()I	f	getVillagerLevel
	m	()I	g	getVillagerXp
	m	()Z	h	showProgress
	m	()Z	i	canRestock
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	Ldbv;	c	offers
	f	I	d	villagerLevel
	f	I	e	villagerXp
	f	Z	f	showProgress
	f	Z	g	canRestock
c	ado	net/minecraft/network/protocol/game/PacketPlayOutEntity
	m	(ISSSBBZZZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
		p	8		rotate
		p	9		positionChanged
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbsr;	a	getEntity
		p	1		world
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()S	b	getXa
	m	()S	e	getYa
	m	()S	f	getZa
	m	()B	g	getyRot
	m	()B	h	getxRot
	m	()Z	i	hasRotation
	m	()Z	j	hasPosition
	m	()Z	k	isOnGround
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
c	ado$a	net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMove
	m	(ISSSZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lado$a;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	j	STREAM_CODEC
c	ado$b	net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutRelEntityMoveLook
	m	(ISSSBBZ)V	<init>	<init>
		p	1		entityId
		p	2		deltaX
		p	3		deltaY
		p	4		deltaZ
		p	5		yaw
		p	6		pitch
		p	7		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lado$b;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	j	STREAM_CODEC
c	ado$c	net/minecraft/network/protocol/game/PacketPlayOutEntity$PacketPlayOutEntityLook
	m	(IBBZ)V	<init>	<init>
		p	1		entityId
		p	2		yaw
		p	3		pitch
		p	4		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lado$c;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	j	STREAM_CODEC
c	adp	net/minecraft/network/protocol/game/PacketPlayOutVehicleMove
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getYRot
	m	()F	h	getXRot
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	adq	net/minecraft/network/protocol/game/PacketPlayOutOpenBook
	m	(Lbqq;)V	<init>	<init>
		p	1		hand
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbqq;	b	getHand
	f	Lyx;	a	STREAM_CODEC
	f	Lbqq;	b	hand
c	adr	net/minecraft/network/protocol/game/PacketPlayOutOpenWindow
	m	(ILcrc;Lwz;)V	<init>	<init>
		p	1		syncId
		p	2		screenHandlerId
		p	3		name
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Lcrc;	e	getType
	m	()Lwz;	f	getTitle
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	Lcrc;	c	type
	f	Lwz;	d	title
c	ads	net/minecraft/network/protocol/game/PacketPlayOutOpenSignEditor
	m	(Ljd;Z)V	<init>	<init>
		p	1		pos
		p	2		front
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Z	e	isFrontText
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	Z	c	isFrontText
c	adt	net/minecraft/network/protocol/game/PacketPlayOutAutoRecipe
	m	(ILczb;)V	<init>	<init>
		p	1		syncId
		p	2		recipe
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	getRecipe
	m	()I	e	getContainerId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	Lakr;	c	recipe
c	adu	net/minecraft/network/protocol/game/PacketPlayOutAbilities
	m	(Lcmu;)V	<init>	<init>
		p	1		abilities
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isInvulnerable
	m	()Z	e	isFlying
	m	()Z	f	canFly
	m	()Z	g	canInstabuild
	m	()F	h	getFlyingSpeed
	m	()F	i	getWalkingSpeed
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_INVULNERABLE
	f	I	c	FLAG_FLYING
	f	I	d	FLAG_CAN_FLY
	f	I	e	FLAG_INSTABUILD
	f	Z	f	invulnerable
	f	Z	g	isFlying
	f	Z	h	canFly
	f	Z	i	instabuild
	f	F	j	flyingSpeed
	f	F	k	walkingSpeed
c	adv	net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljava/util/UUID;	b	sender
	m	()Z	c	isSkippable
	m	()I	e	index
	m	()Lxl;	f	signature
	m	()Lxs$a;	g	body
	m	()Lwz;	h	unsignedContent
	m	()Lxd;	i	filterMask
	m	()Lwv$a;	j	chatType
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/UUID;	b	sender
	f	I	c	index
	f	Lxl;	d	signature
	f	Lxs$a;	e	body
	f	Lwz;	f	unsignedContent
	f	Lxd;	g	filterMask
	f	Lwv$a;	h	chatType
c	adw	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	m	(I)V	<init>	<init>
		p	1		timeSinceLastAttack
	m	(Lbrh;)V	<init>	<init>
		p	1		damageTracker
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lyx;	a	STREAM_CODEC
	f	I	b	duration
c	adx	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Ladx;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	ady	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	playerId
	m	()Z	c	isSkippable
	m	()Lwz;	e	message
	f	Lyx;	a	STREAM_CODEC
	f	I	b	playerId
	f	Lwz;	c	message
c	adz	net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	profileIds
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	profileIds
c	aea	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	m	(Laea$a;Laqv;)V	<init>	<init>
		p	1		action
		p	2		player
	m	(Ljava/util/EnumSet;Ljava/util/Collection;)V	<init>	<init>
		p	1		actions
		p	2		players
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ljava/util/Collection;)Laea;	a	createPlayerInitializing
		p	0		players
	m	(Lvw;)Laea$b;	a	lambda$new$0
		p	1		buf2
	m	(Lvw;Laea$b;)V	a	lambda$write$1
		p	1		buf2
		p	2		entry
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljava/util/EnumSet;	b	actions
	m	()Ljava/util/List;	e	entries
	m	()Ljava/util/List;	f	newEntries
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/EnumSet;	b	actions
	f	Ljava/util/List;	c	entries
c	aea$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$a
	m	(Ljava/lang/String;ILaea$a$a;Laea$a$b;)V	<init>	<init>
		p	3		reader
		p	4		writer
	m	()[Laea$a;	a	$values
	m	(Laea$c;Lwk;)V	a	lambda$static$10
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	a	lambda$static$11
		p	0		buf
		p	1		entry
	m	(Laea$c;Lwk;)V	b	lambda$static$8
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	b	lambda$static$9
		p	0		buf
		p	1		entry
	m	(Laea$c;Lwk;)V	c	lambda$static$6
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	c	lambda$static$7
		p	0		buf
		p	1		entry
	m	(Laea$c;Lwk;)V	d	lambda$static$4
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	d	lambda$static$5
		p	0		buf
		p	1		entry
	m	(Laea$c;Lwk;)V	e	lambda$static$2
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	e	lambda$static$3
		p	0		buf
		p	1		entry
	m	(Laea$c;Lwk;)V	f	lambda$static$0
		p	0		serialized
		p	1		buf
	m	(Lwk;Laea$b;)V	f	lambda$static$1
		p	0		buf
		p	1		entry
	f	Laea$a;	a	ADD_PLAYER
	f	Laea$a;	b	INITIALIZE_CHAT
	f	Laea$a;	c	UPDATE_GAME_MODE
	f	Laea$a;	d	UPDATE_LISTED
	f	Laea$a;	e	UPDATE_LATENCY
	f	Laea$a;	f	UPDATE_DISPLAY_NAME
	f	Laea$a$a;	g	reader
	f	Laea$a$b;	h	writer
	f	[Laea$a;	i	$VALUES
c	aea$a$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$a$a
	m	(Laea$c;Lwk;)V	read	read
		p	1		serialized
		p	2		buf
c	aea$a$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$a$b
	m	(Lwk;Laea$b;)V	write	write
		p	1		buf
		p	2		entry
c	aea$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$b
	m	(Laqv;)V	<init>	<init>
		p	1		player
	m	()Ljava/util/UUID;	a	profileId
	m	()Lcom/mojang/authlib/GameProfile;	b	profile
	m	()Z	c	listed
	m	()I	d	latency
	m	()Ldct;	e	gameMode
	m	()Lwz;	f	displayName
	m	()Lxq$a;	g	chatSession
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Ldct;	e	gameMode
	f	Lwz;	f	displayName
	f	Lxq$a;	g	chatSession
c	aea$c	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$c
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		profileId
	m	()Laea$b;	a	build
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Ldct;	e	gameMode
	f	Lwz;	f	displayName
	f	Lxq$a;	g	chatSession
c	aeb	net/minecraft/network/protocol/game/PacketPlayOutLookAt
	m	(Lff$a;DDD)V	<init>	<init>
		p	1		selfAnchor
		p	2		targetX
		p	4		targetY
		p	6		targetZ
	m	(Lff$a;Lbsr;Lff$a;)V	<init>	<init>
		p	1		selfAnchor
		p	2		entity
		p	3		targetAnchor
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lexc;	a	getPosition
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lff$a;	b	getFromAnchor
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	entity
	f	Lff$a;	f	fromAnchor
	f	Lff$a;	g	toAnchor
	f	Z	h	atEntity
c	aec	net/minecraft/network/protocol/game/PacketPlayOutPosition
	m	(DDDFFLjava/util/Set;I)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
		p	10		teleportId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getYRot
	m	()F	h	getXRot
	m	()I	i	getId
	m	()Ljava/util/Set;	j	getRelativeArguments
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
	f	Ljava/util/Set;	g	relativeArguments
	f	I	h	id
c	aed	net/minecraft/network/protocol/game/ClientboundProjectilePowerPacket
	m	(ID)V	<init>	<init>
		p	1		entityId
		p	2		accelerationPower
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	e	getAccelerationPower
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	D	c	accelerationPower
c	aee	net/minecraft/network/protocol/game/PacketPlayOutRecipes
	m	(Laee$a;Ljava/util/Collection;Ljava/util/Collection;Lavt;)V	<init>	<init>
		p	1		action
		p	2		recipeIdsToChange
		p	3		recipeIdsToInit
		p	4		options
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getRecipes
	m	()Ljava/util/List;	e	getHighlights
	m	()Lavt;	f	getBookSettings
	m	()Laee$a;	g	getState
	f	Lyx;	a	STREAM_CODEC
	f	Laee$a;	b	state
	f	Ljava/util/List;	c	recipes
	f	Ljava/util/List;	d	toHighlight
	f	Lavt;	e	bookSettings
c	aee$a	net/minecraft/network/protocol/game/PacketPlayOutRecipes$Action
	m	()[Laee$a;	a	$values
	f	Laee$a;	a	INIT
	f	Laee$a;	b	ADD
	f	Laee$a;	c	REMOVE
	f	[Laee$a;	d	$VALUES
c	aef	net/minecraft/network/protocol/game/PacketPlayOutEntityDestroy
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
		p	1		entityIds
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	([I)V	<init>	<init>
		p	1		entityIds
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getEntityIds
	f	Lyx;	a	STREAM_CODEC
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	entityIds
c	aeg	net/minecraft/network/protocol/game/PacketPlayOutRemoveEntityEffect
	m	(ILjm;)V	<init>	<init>
		p	1		entityId
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbsr;	a	getEntity
		p	1		world
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	entityId
	m	()Ljm;	e	effect
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	Ljm;	c	effect
c	aeh	net/minecraft/network/protocol/game/ClientboundResetScorePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	owner
	m	()Ljava/lang/String;	e	objectiveName
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	owner
	f	Ljava/lang/String;	c	objectiveName
c	aei	net/minecraft/network/protocol/game/PacketPlayOutRespawn
	m	()Lzi;	a	type
	m	(B)Z	a	shouldKeep
		p	1		flag
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
	m	()Lagd;	b	commonPlayerSpawnInfo
	m	()B	e	dataToKeep
	f	Lyx;	a	STREAM_CODEC
	f	B	b	KEEP_ATTRIBUTE_MODIFIERS
	f	B	c	KEEP_ENTITY_DATA
	f	B	d	KEEP_ALL_DATA
	f	Lagd;	e	commonPlayerSpawnInfo
	f	B	f	dataToKeep
c	aej	net/minecraft/network/protocol/game/PacketPlayOutEntityHeadRotation
	m	(Lbsr;B)V	<init>	<init>
		p	1		entity
		p	2		headYaw
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbsr;	a	getEntity
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()B	b	getYHeadRot
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	B	c	yHeadRot
c	aek	net/minecraft/network/protocol/game/PacketPlayOutMultiBlockChange
	m	(Lkf;Lit/unimi/dsi/fastutil/shorts/ShortSet;Ldvj;)V	<init>	<init>
		p	1		sectionPos
		p	2		positions
		p	3		section
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
		p	1		visitor
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lyx;	a	STREAM_CODEC
	f	I	b	POS_IN_SECTION_BITS
	f	Lkf;	c	sectionPos
	f	[S	d	positions
	f	[Ldtc;	e	states
c	ael	net/minecraft/network/protocol/game/PacketPlayOutSelectAdvancementTab
	m	(Lakr;)V	<init>	<init>
		p	1		tabId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	getTab
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	tab
c	aem	net/minecraft/network/protocol/game/ClientboundServerDataPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	motd
	m	()Ljava/util/Optional;	e	iconBytes
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	motd
	f	Ljava/util/Optional;	c	iconBytes
c	aen	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	text
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	text
c	aeo	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getNewCenterZ
	m	()D	e	getNewCenterX
	f	Lyx;	a	STREAM_CODEC
	f	D	b	newCenterX
	f	D	c	newCenterZ
c	aep	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getOldSize
	m	()D	e	getNewSize
	m	()J	f	getLerpTime
	f	Lyx;	a	STREAM_CODEC
	f	D	b	oldSize
	f	D	c	newSize
	f	J	d	lerpTime
c	aeq	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getSize
	f	Lyx;	a	STREAM_CODEC
	f	D	b	size
c	aer	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getWarningDelay
	f	Lyx;	a	STREAM_CODEC
	f	I	b	warningDelay
c	aes	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getWarningBlocks
	f	Lyx;	a	STREAM_CODEC
	f	I	b	warningBlocks
c	aet	net/minecraft/network/protocol/game/PacketPlayOutCamera
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ldcw;)Lbsr;	a	getEntity
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lyx;	a	STREAM_CODEC
	f	I	b	cameraId
c	aeu	net/minecraft/network/protocol/game/PacketPlayOutHeldItemSlot
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	Lyx;	a	STREAM_CODEC
	f	I	b	slot
c	aev	net/minecraft/network/protocol/game/PacketPlayOutViewCentre
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getX
	m	()I	e	getZ
	f	Lyx;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
c	aew	net/minecraft/network/protocol/game/PacketPlayOutViewDistance
	m	(I)V	<init>	<init>
		p	1		distance
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getRadius
	f	Lyx;	a	STREAM_CODEC
	f	I	b	radius
c	aex	net/minecraft/network/protocol/game/PacketPlayOutSpawnPosition
	m	(Ljd;F)V	<init>	<init>
		p	1		pos
		p	2		angle
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()F	e	getAngle
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	F	c	angle
c	aey	net/minecraft/network/protocol/game/PacketPlayOutScoreboardDisplayObjective
	m	(Lexx;Lexy;)V	<init>	<init>
		p	1		slot
		p	2		objective
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lexx;	b	getSlot
	m	()Ljava/lang/String;	e	getObjectiveName
	f	Lyx;	a	STREAM_CODEC
	f	Lexx;	b	slot
	f	Ljava/lang/String;	c	objectiveName
c	aez	net/minecraft/network/protocol/game/PacketPlayOutEntityMetadata
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		id
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Ljava/util/List;Lwk;)V	a	pack
		p	0		trackedValues
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)Ljava/util/List;	a	unpack
		p	0		buf
	m	()I	b	id
	m	(Lwk;)V	b	write
		p	1		buf
	m	()Ljava/util/List;	e	packedItems
	f	Lyx;	a	STREAM_CODEC
	f	I	b	EOF_MARKER
	f	I	c	id
	f	Ljava/util/List;	d	packedItems
c	afa	net/minecraft/network/protocol/game/PacketPlayOutAttachEntity
	m	(Lbsr;Lbsr;)V	<init>	<init>
		p	1		attachedEntity
		p	2		holdingEntity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getSourceId
	m	()I	e	getDestId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	sourceId
	f	I	c	destId
c	afb	net/minecraft/network/protocol/game/PacketPlayOutEntityVelocity
	m	(ILexc;)V	<init>	<init>
		p	1		entityId
		p	2		velocity
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	e	getXa
	m	()D	f	getYa
	m	()D	g	getZa
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	I	c	xa
	f	I	d	ya
	f	I	e	za
c	afc	net/minecraft/network/protocol/game/PacketPlayOutEntityEquipment
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		entityId
		p	2		equipmentList
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getEntity
	m	()Ljava/util/List;	e	getSlots
	f	Lyx;	a	STREAM_CODEC
	f	B	b	CONTINUE_MASK
	f	I	c	entity
	f	Ljava/util/List;	d	slots
c	afd	net/minecraft/network/protocol/game/PacketPlayOutExperience
	m	(FII)V	<init>	<init>
		p	1		barProgress
		p	2		experienceLevel
		p	3		experience
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()F	b	getExperienceProgress
	m	()I	e	getTotalExperience
	m	()I	f	getExperienceLevel
	f	Lyx;	a	STREAM_CODEC
	f	F	b	experienceProgress
	f	I	c	totalExperience
	f	I	d	experienceLevel
c	afe	net/minecraft/network/protocol/game/PacketPlayOutUpdateHealth
	m	(FIF)V	<init>	<init>
		p	1		health
		p	2		food
		p	3		saturation
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()F	b	getHealth
	m	()I	e	getFood
	m	()F	f	getSaturation
	f	Lyx;	a	STREAM_CODEC
	f	F	b	health
	f	I	c	food
	f	F	d	saturation
c	aff	net/minecraft/network/protocol/game/PacketPlayOutScoreboardObjective
	m	(Lexy;I)V	<init>	<init>
		p	1		objective
		p	2		mode
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	getObjectiveName
	m	()Lwz;	e	getDisplayName
	m	()I	f	getMethod
	m	()Leyj$a;	g	getRenderType
	m	()Ljava/util/Optional;	h	getNumberFormat
	f	Lyx;	a	STREAM_CODEC
	f	I	b	METHOD_ADD
	f	I	c	METHOD_REMOVE
	f	I	d	METHOD_CHANGE
	f	Ljava/lang/String;	e	objectiveName
	f	Lwz;	f	displayName
	f	Leyj$a;	g	renderType
	f	Ljava/util/Optional;	h	numberFormat
	f	I	i	method
c	afg	net/minecraft/network/protocol/game/PacketPlayOutMount
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()[I	b	getPassengers
	m	()I	e	getVehicle
	f	Lyx;	a	STREAM_CODEC
	f	I	b	vehicle
	f	[I	c	passengers
c	afh	net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam
	m	(Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V	<init>	<init>
		p	1		teamName
		p	2		packetType
		p	3		team
		p	4		playerNames
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(I)Z	a	shouldHavePlayerList
		p	0		packetType
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Leyb;)Lafh;	a	createRemovePacket
		p	0		team
	m	(Leyb;Ljava/lang/String;Lafh$a;)Lafh;	a	createPlayerPacket
		p	0		team
		p	1		playerName
		p	2		operation
	m	(Leyb;Z)Lafh;	a	createAddOrModifyPacket
		p	0		team
		p	1		updatePlayers
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Lafh$a;	b	getPlayerAction
	m	(I)Z	b	shouldHaveParameters
		p	0		packetType
	m	()Lafh$a;	e	getTeamAction
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Ljava/util/Optional;	h	getParameters
	m	()Ljava/lang/IllegalStateException;	i	lambda$write$0
	f	Lyx;	a	STREAM_CODEC
	f	I	b	METHOD_ADD
	f	I	c	METHOD_REMOVE
	f	I	d	METHOD_CHANGE
	f	I	e	METHOD_JOIN
	f	I	f	METHOD_LEAVE
	f	I	g	MAX_VISIBILITY_LENGTH
	f	I	h	MAX_COLLISION_LENGTH
	f	I	i	method
	f	Ljava/lang/String;	j	name
	f	Ljava/util/Collection;	k	players
	f	Ljava/util/Optional;	l	parameters
c	afh$a	net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam$a
	m	()[Lafh$a;	a	$values
	f	Lafh$a;	a	ADD
	f	Lafh$a;	b	REMOVE
	f	[Lafh$a;	c	$VALUES
c	afh$b	net/minecraft/network/protocol/game/PacketPlayOutScoreboardTeam$b
	m	(Leyb;)V	<init>	<init>
		p	1		team
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lwz;	a	getDisplayName
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getOptions
	m	()Ln;	c	getColor
	m	()Ljava/lang/String;	d	getNametagVisibility
	m	()Ljava/lang/String;	e	getCollisionRule
	m	()Lwz;	f	getPlayerPrefix
	m	()Lwz;	g	getPlayerSuffix
	f	Lwz;	a	displayName
	f	Lwz;	b	playerPrefix
	f	Lwz;	c	playerSuffix
	f	Ljava/lang/String;	d	nametagVisibility
	f	Ljava/lang/String;	e	collisionRule
	f	Ln;	f	color
	f	I	g	options
c	afi	net/minecraft/network/protocol/game/PacketPlayOutScoreboardScore
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	owner
	m	()Ljava/lang/String;	e	objectiveName
	m	()I	f	score
	m	()Ljava/util/Optional;	g	display
	m	()Ljava/util/Optional;	h	numberFormat
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	owner
	f	Ljava/lang/String;	c	objectiveName
	f	I	d	score
	f	Ljava/util/Optional;	e	display
	f	Ljava/util/Optional;	f	numberFormat
c	afj	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	simulationDistance
	f	Lyx;	a	STREAM_CODEC
	f	I	b	simulationDistance
c	afk	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	text
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	text
c	afl	net/minecraft/network/protocol/game/PacketPlayOutUpdateTime
	m	(JJZ)V	<init>	<init>
		p	1		time
		p	3		timeOfDay
		p	5		doDaylightCycle
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()J	b	getGameTime
	m	()J	e	getDayTime
	f	Lyx;	a	STREAM_CODEC
	f	J	b	gameTime
	f	J	c	dayTime
c	afm	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	text
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	text
c	afn	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	m	(III)V	<init>	<init>
		p	1		fadeInTicks
		p	2		stayTicks
		p	3		fadeOutTicks
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getFadeIn
	m	()I	e	getStay
	m	()I	f	getFadeOut
	f	Lyx;	a	STREAM_CODEC
	f	I	b	fadeIn
	f	I	c	stay
	f	I	d	fadeOut
c	afo	net/minecraft/network/protocol/game/PacketPlayOutEntitySound
	m	(Ljm;Lavq;Lbsr;FFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		entity
		p	4		volume
		p	5		pitch
		p	6		seed
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljm;	b	getSound
	m	()Lavq;	e	getSource
	m	()I	f	getId
	m	()F	g	getVolume
	m	()F	h	getPitch
	m	()J	i	getSeed
	f	Lyx;	a	STREAM_CODEC
	f	Ljm;	b	sound
	f	Lavq;	c	source
	f	I	d	id
	f	F	e	volume
	f	F	f	pitch
	f	J	g	seed
c	afp	net/minecraft/network/protocol/game/PacketPlayOutNamedSoundEffect
	m	(Ljm;Lavq;DDDFFJ)V	<init>	<init>
		p	1		sound
		p	2		category
		p	3		x
		p	5		y
		p	7		z
		p	9		volume
		p	10		pitch
		p	11		seed
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljm;	b	getSound
	m	()Lavq;	e	getSource
	m	()D	f	getX
	m	()D	g	getY
	m	()D	h	getZ
	m	()F	i	getVolume
	m	()F	j	getPitch
	m	()J	k	getSeed
	f	Lyx;	a	STREAM_CODEC
	f	F	b	LOCATION_ACCURACY
	f	Ljm;	c	sound
	f	Lavq;	d	source
	f	I	e	x
	f	I	f	y
	f	I	g	z
	f	F	h	volume
	f	F	i	pitch
	f	J	j	seed
c	afq	net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	d	isTerminal
	f	Lafq;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	afr	net/minecraft/network/protocol/game/PacketPlayOutStopSound
	m	(Lakr;Lavq;)V	<init>	<init>
		p	1		soundId
		p	2		category
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	getName
	m	()Lavq;	e	getSource
	f	Lyx;	a	STREAM_CODEC
	f	I	b	HAS_SOURCE
	f	I	c	HAS_SOUND
	f	Lakr;	d	name
	f	Lavq;	e	source
c	afs	net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	content
	m	()Z	c	isSkippable
	m	()Z	e	overlay
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	content
	f	Z	c	overlay
c	aft	net/minecraft/network/protocol/game/PacketPlayOutPlayerListHeaderFooter
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	header
	m	()Lwz;	e	footer
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	header
	f	Lwz;	c	footer
c	afu	net/minecraft/network/protocol/game/PacketPlayOutNBTQuery
	m	(ILub;)V	<init>	<init>
		p	1		transactionId
		p	2		nbt
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()Z	c	isSkippable
	m	()Lub;	e	getTag
	f	Lyx;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Lub;	c	tag
c	afv	net/minecraft/network/protocol/game/PacketPlayOutCollect
	m	(III)V	<init>	<init>
		p	1		entityId
		p	2		collectorId
		p	3		stackAmount
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getItemId
	m	()I	e	getPlayerId
	m	()I	f	getAmount
	f	Lyx;	a	STREAM_CODEC
	f	I	b	itemId
	f	I	c	playerId
	f	I	d	amount
c	afw	net/minecraft/network/protocol/game/PacketPlayOutEntityTeleport
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()D	e	getX
	m	()D	f	getY
	m	()D	g	getZ
	m	()B	h	getyRot
	m	()B	i	getxRot
	m	()Z	j	isOnGround
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	D	c	x
	f	D	d	y
	f	D	e	z
	f	B	f	yRot
	f	B	g	xRot
	f	Z	h	onGround
c	afx	net/minecraft/network/protocol/game/ClientboundTickingStatePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lbrc;)Lafx;	a	from
		p	0		tickManager
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()F	b	tickRate
	m	()Z	e	isFrozen
	f	Lyx;	a	STREAM_CODEC
	f	F	b	tickRate
	f	Z	c	isFrozen
c	afy	net/minecraft/network/protocol/game/ClientboundTickingStepPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lbrc;)Lafy;	a	from
		p	0		tickManager
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	tickSteps
	f	Lyx;	a	STREAM_CODEC
	f	I	b	tickSteps
c	afz	net/minecraft/network/protocol/game/PacketPlayOutAdvancements
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;)V	<init>	<init>
		p	1		clearCurrent
		p	2		toEarn
		p	3		toRemove
		p	4		toSetProgress
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lvw;Lai;)V	a	lambda$write$0
		p	0		buf2
		p	1		progress
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Ljava/util/List;	b	getAdded
	m	()Ljava/util/Set;	e	getRemoved
	m	()Ljava/util/Map;	f	getProgress
	m	()Z	g	shouldReset
	f	Lyx;	a	STREAM_CODEC
	f	Z	b	reset
	f	Ljava/util/List;	c	added
	f	Ljava/util/Set;	d	removed
	f	Ljava/util/Map;	e	progress
c	aga	net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes
	m	(ILjava/util/Collection;)V	<init>	<init>
		p	1		entityId
		p	2		attributes
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		entityId
		p	2		attributes
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getEntityId
	m	()Ljava/util/List;	e	getValues
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	Ljava/util/List;	c	attributes
c	aga$a	net/minecraft/network/protocol/game/PacketPlayOutUpdateAttributes$AttributeSnapshot
	m	(Ljm;DLjava/util/Collection;)V	<init>	<init>
		p	2		baseValue
		p	4		modifiers
	m	()Ljm;	a	attribute
	m	()D	b	base
	m	()Ljava/util/Collection;	c	modifiers
	f	Lyx;	a	MODIFIER_STREAM_CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljm;	c	attribute
	f	D	d	base
	f	Ljava/util/Collection;	e	modifiers
c	agb	net/minecraft/network/protocol/game/PacketPlayOutEntityEffect
	m	(ILbrz;Z)V	<init>	<init>
		p	1		entityId
		p	2		effect
		p	3		keepFading
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getEntityId
	m	()Ljm;	e	getEffect
	m	()I	f	getEffectAmplifier
	m	()I	g	getEffectDurationTicks
	m	()Z	h	isEffectVisible
	m	()Z	i	isEffectAmbient
	m	()Z	j	effectShowsIcon
	m	()Z	k	shouldBlend
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_AMBIENT
	f	I	c	FLAG_VISIBLE
	f	I	d	FLAG_SHOW_ICON
	f	I	e	FLAG_BLEND
	f	I	f	entityId
	f	Ljm;	g	effect
	f	I	h	effectAmplifier
	f	I	i	effectDurationTicks
	f	B	j	flags
c	agc	net/minecraft/network/protocol/game/PacketPlayOutRecipeUpdate
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		recipes
	m	()Lzi;	a	type
	m	(Labu;)V	a	handle
		p	1		listener
	m	(Lagc;)Ljava/util/List;	a	lambda$static$0
		p	0		packet
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/List;	b	getRecipes
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/List;	b	recipes
c	agd	net/minecraft/network/protocol/game/CommonPlayerSpawnInfo
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Ljm;	a	dimensionType
	m	(Lwk;)V	a	write
		p	1		buf
	m	()Lakq;	b	dimension
	m	()J	c	seed
	m	()Ldct;	d	gameType
	m	()Ldct;	e	previousGameType
	m	()Z	f	isDebug
	m	()Z	g	isFlat
	m	()Ljava/util/Optional;	h	lastDeathLocation
	m	()I	i	portalCooldown
	f	Ljm;	a	dimensionType
	f	Lakq;	b	dimension
	f	J	c	seed
	f	Ldct;	d	gameType
	f	Ldct;	e	previousGameType
	f	Z	f	isDebug
	f	Z	g	isFlat
	f	Ljava/util/Optional;	h	lastDeathLocation
	f	I	i	portalCooldown
c	age	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	m	(Layw;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
		p	0		random
		p	1		options
	m	(Lbsr;)Ljava/lang/String;	a	getEntityName
		p	0		entity
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
		p	0		uuid
	m	(Ljava/util/UUID;)Layw;	b	getRandom
		p	0		uuid
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
c	agf	net/minecraft/network/protocol/game/PacketDebug
	m	(Lakq;)Ljava/lang/String;	a	lambda$sendPoiAddedPacket$2
	m	(Laqu;)V	a	sendGameTestClearPacket
		p	0		world
	m	(Laqu;Laaj;)V	a	sendPacketToAllPlayers
		p	0		world
		p	1		payload
	m	(Laqu;Lcet;)V	a	lambda$sendPoiPacketsForChunk$1
		p	0		world
		p	1		poi
	m	(Laqu;Ldcd;)V	a	sendPoiPacketsForChunk
		p	0		world
		p	1		pos
	m	(Laqu;Lexc;Lakq;)V	a	lambda$sendGameEventInfo$7
	m	(Laqu;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
		p	0		world
		p	1		object
	m	(Laqu;Ljava/util/Collection;)V	a	sendRaids
		p	0		server
		p	1		raids
	m	(Laqu;Ljd;)V	a	sendPoiAddedPacket
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;Ljava/lang/String;II)V	a	sendGameTestAddMarker
		p	0		world
		p	1		pos
		p	2		message
		p	3		color
		p	4		duration
	m	(Lbtn;)V	a	sendEntityBrain
		p	0		living
	m	(Lbtn;J)Ljava/util/List;	a	getMemoryDescriptions
		p	0		entity
		p	1		currentTime
	m	(Lcff;)V	a	sendBeeInfo
		p	0		bee
	m	(Lckz;)V	a	sendBreezeInfo
		p	0		breeze
	m	(Ldcw;Lbtp;Lcan;)V	a	sendGoalSelector
		p	0		world
		p	1		mob
		p	2		goalSelector
	m	(Ldcw;Lbtp;Leps;F)V	a	sendPathFindingPacket
		p	0		world
		p	1		mob
		p	2		path
		p	3		nodeReachProximity
	m	(Ldcw;Ldyb;)V	a	sendGameEventListenerInfo
		p	0		world
		p	1		eventListener
	m	(Ldcw;Ljd;)V	a	sendNeighborsUpdatePacket
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Ldqe;)V	a	sendHiveInfo
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljm;Lexc;)V	a	sendGameEventInfo
		p	0		world
		p	1		event
		p	2		pos
	m	(Ldds;Lejz;)V	a	sendStructurePacket
		p	0		world
		p	1		structureStart
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$sendEntityBrain$4
	m	(Ljava/util/List;Lcca;)V	a	lambda$sendGoalSelector$3
		p	1		goal
	m	(Ljava/util/List;Ljava/lang/String;Lccp;Ljava/lang/Integer;)V	a	lambda$sendEntityBrain$5
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$sendEntityBrain$6
	m	(Ljm;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	(Laqu;Ljd;)V	b	sendPoiRemovedPacket
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;)V	c	sendPoiTicketCountPacket
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;)V	d	sendVillageSectionsPacket
		p	0		world
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
c	agg	net/minecraft/network/protocol/game/GamePacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	A	CLIENTBOUND_DEBUG_SAMPLE
	f	Lzi;	B	CLIENTBOUND_DELETE_CHAT
	f	Lzi;	C	CLIENTBOUND_DISGUISED_CHAT
	f	Lzi;	D	CLIENTBOUND_ENTITY_EVENT
	f	Lzi;	E	CLIENTBOUND_EXPLODE
	f	Lzi;	F	CLIENTBOUND_FORGET_LEVEL_CHUNK
	f	Lzi;	G	CLIENTBOUND_GAME_EVENT
	f	Lzi;	H	CLIENTBOUND_HORSE_SCREEN_OPEN
	f	Lzi;	I	CLIENTBOUND_HURT_ANIMATION
	f	Lzi;	J	CLIENTBOUND_INITIALIZE_BORDER
	f	Lzi;	K	CLIENTBOUND_LEVEL_CHUNK_WITH_LIGHT
	f	Lzi;	L	CLIENTBOUND_LEVEL_EVENT
	f	Lzi;	M	CLIENTBOUND_LEVEL_PARTICLES
	f	Lzi;	N	CLIENTBOUND_LIGHT_UPDATE
	f	Lzi;	O	CLIENTBOUND_LOGIN
	f	Lzi;	P	CLIENTBOUND_MAP_ITEM_DATA
	f	Lzi;	Q	CLIENTBOUND_MERCHANT_OFFERS
	f	Lzi;	R	CLIENTBOUND_MOVE_ENTITY_POS
	f	Lzi;	S	CLIENTBOUND_MOVE_ENTITY_POS_ROT
	f	Lzi;	T	CLIENTBOUND_MOVE_ENTITY_ROT
	f	Lzi;	U	CLIENTBOUND_MOVE_VEHICLE
	f	Lzi;	V	CLIENTBOUND_OPEN_BOOK
	f	Lzi;	W	CLIENTBOUND_OPEN_SCREEN
	f	Lzi;	X	CLIENTBOUND_OPEN_SIGN_EDITOR
	f	Lzi;	Y	CLIENTBOUND_PLACE_GHOST_RECIPE
	f	Lzi;	Z	CLIENTBOUND_PLAYER_ABILITIES
	f	Lzi;	aA	CLIENTBOUND_SET_DEFAULT_SPAWN_POSITION
	f	Lzi;	aB	CLIENTBOUND_SET_DISPLAY_OBJECTIVE
	f	Lzi;	aC	CLIENTBOUND_SET_ENTITY_DATA
	f	Lzi;	aD	CLIENTBOUND_SET_ENTITY_LINK
	f	Lzi;	aE	CLIENTBOUND_SET_ENTITY_MOTION
	f	Lzi;	aF	CLIENTBOUND_SET_EQUIPMENT
	f	Lzi;	aG	CLIENTBOUND_SET_EXPERIENCE
	f	Lzi;	aH	CLIENTBOUND_SET_HEALTH
	f	Lzi;	aI	CLIENTBOUND_SET_OBJECTIVE
	f	Lzi;	aJ	CLIENTBOUND_SET_PASSENGERS
	f	Lzi;	aK	CLIENTBOUND_SET_PLAYER_TEAM
	f	Lzi;	aL	CLIENTBOUND_SET_SCORE
	f	Lzi;	a	CLIENTBOUND_BUNDLE
	f	Lzi;	aM	CLIENTBOUND_SET_SIMULATION_DISTANCE
	f	Lzi;	aN	CLIENTBOUND_SET_SUBTITLE_TEXT
	f	Lzi;	aO	CLIENTBOUND_SET_TIME
	f	Lzi;	aP	CLIENTBOUND_SET_TITLE_TEXT
	f	Lzi;	aQ	CLIENTBOUND_SET_TITLES_ANIMATION
	f	Lzi;	aR	CLIENTBOUND_SOUND_ENTITY
	f	Lzi;	aS	CLIENTBOUND_SOUND
	f	Lzi;	aT	CLIENTBOUND_START_CONFIGURATION
	f	Lzi;	aU	CLIENTBOUND_STOP_SOUND
	f	Lzi;	aV	CLIENTBOUND_SYSTEM_CHAT
	f	Lzi;	aW	CLIENTBOUND_TAB_LIST
	f	Lzi;	aX	CLIENTBOUND_TAG_QUERY
	f	Lzi;	aY	CLIENTBOUND_TAKE_ITEM_ENTITY
	f	Lzi;	aZ	CLIENTBOUND_TELEPORT_ENTITY
	f	Lzi;	aa	CLIENTBOUND_PLAYER_CHAT
	f	Lzi;	ab	CLIENTBOUND_PLAYER_COMBAT_END
	f	Lzi;	ac	CLIENTBOUND_PLAYER_COMBAT_ENTER
	f	Lzi;	ad	CLIENTBOUND_PLAYER_COMBAT_KILL
	f	Lzi;	ae	CLIENTBOUND_PLAYER_INFO_REMOVE
	f	Lzi;	af	CLIENTBOUND_PLAYER_INFO_UPDATE
	f	Lzi;	ag	CLIENTBOUND_PLAYER_LOOK_AT
	f	Lzi;	ah	CLIENTBOUND_PLAYER_POSITION
	f	Lzi;	ai	CLIENTBOUND_RECIPE
	f	Lzi;	aj	CLIENTBOUND_REMOVE_ENTITIES
	f	Lzi;	ak	CLIENTBOUND_REMOVE_MOB_EFFECT
	f	Lzi;	al	CLIENTBOUND_RESPAWN
	f	Lzi;	am	CLIENTBOUND_ROTATE_HEAD
	f	Lzi;	an	CLIENTBOUND_SECTION_BLOCKS_UPDATE
	f	Lzi;	ao	CLIENTBOUND_SELECT_ADVANCEMENTS_TAB
	f	Lzi;	ap	CLIENTBOUND_SERVER_DATA
	f	Lzi;	aq	CLIENTBOUND_SET_ACTION_BAR_TEXT
	f	Lzi;	ar	CLIENTBOUND_SET_BORDER_CENTER
	f	Lzi;	as	CLIENTBOUND_SET_BORDER_LERP_SIZE
	f	Lzi;	at	CLIENTBOUND_SET_BORDER_SIZE
	f	Lzi;	au	CLIENTBOUND_SET_BORDER_WARNING_DELAY
	f	Lzi;	av	CLIENTBOUND_SET_BORDER_WARNING_DISTANCE
	f	Lzi;	aw	CLIENTBOUND_SET_CAMERA
	f	Lzi;	ax	CLIENTBOUND_SET_CARRIED_ITEM
	f	Lzi;	ay	CLIENTBOUND_SET_CHUNK_CACHE_CENTER
	f	Lzi;	az	CLIENTBOUND_SET_CHUNK_CACHE_RADIUS
	f	Lzi;	bA	SERVERBOUND_LOCK_DIFFICULTY
	f	Lzi;	bB	SERVERBOUND_MOVE_PLAYER_POS
	f	Lzi;	bC	SERVERBOUND_MOVE_PLAYER_POS_ROT
	f	Lzi;	bD	SERVERBOUND_MOVE_PLAYER_ROT
	f	Lzi;	bE	SERVERBOUND_MOVE_PLAYER_STATUS_ONLY
	f	Lzi;	bF	SERVERBOUND_MOVE_VEHICLE
	f	Lzi;	bG	SERVERBOUND_PADDLE_BOAT
	f	Lzi;	bH	SERVERBOUND_PICK_ITEM
	f	Lzi;	bI	SERVERBOUND_PLACE_RECIPE
	f	Lzi;	bJ	SERVERBOUND_PLAYER_ABILITIES
	f	Lzi;	bK	SERVERBOUND_PLAYER_ACTION
	f	Lzi;	bL	SERVERBOUND_PLAYER_COMMAND
	f	Lzi;	b	CLIENTBOUND_BUNDLE_DELIMITER
	f	Lzi;	bM	SERVERBOUND_PLAYER_INPUT
	f	Lzi;	bN	SERVERBOUND_RECIPE_BOOK_CHANGE_SETTINGS
	f	Lzi;	bO	SERVERBOUND_RECIPE_BOOK_SEEN_RECIPE
	f	Lzi;	bP	SERVERBOUND_RENAME_ITEM
	f	Lzi;	bQ	SERVERBOUND_SEEN_ADVANCEMENTS
	f	Lzi;	bR	SERVERBOUND_SELECT_TRADE
	f	Lzi;	bS	SERVERBOUND_SET_BEACON
	f	Lzi;	bT	SERVERBOUND_SET_CARRIED_ITEM
	f	Lzi;	bU	SERVERBOUND_SET_COMMAND_BLOCK
	f	Lzi;	bV	SERVERBOUND_SET_COMMAND_MINECART
	f	Lzi;	bW	SERVERBOUND_SET_CREATIVE_MODE_SLOT
	f	Lzi;	bX	SERVERBOUND_SET_JIGSAW_BLOCK
	f	Lzi;	bY	SERVERBOUND_SET_STRUCTURE_BLOCK
	f	Lzi;	bZ	SERVERBOUND_SIGN_UPDATE
	f	Lzi;	ba	CLIENTBOUND_UPDATE_ADVANCEMENTS
	f	Lzi;	bb	CLIENTBOUND_UPDATE_ATTRIBUTES
	f	Lzi;	bc	CLIENTBOUND_UPDATE_MOB_EFFECT
	f	Lzi;	bd	CLIENTBOUND_UPDATE_RECIPES
	f	Lzi;	be	CLIENTBOUND_PROJECTILE_POWER
	f	Lzi;	bf	SERVERBOUND_ACCEPT_TELEPORTATION
	f	Lzi;	bg	SERVERBOUND_BLOCK_ENTITY_TAG_QUERY
	f	Lzi;	bh	SERVERBOUND_CHANGE_DIFFICULTY
	f	Lzi;	bi	SERVERBOUND_CHAT_ACK
	f	Lzi;	bj	SERVERBOUND_CHAT_COMMAND
	f	Lzi;	bk	SERVERBOUND_CHAT_COMMAND_SIGNED
	f	Lzi;	bl	SERVERBOUND_CHAT
	f	Lzi;	bm	SERVERBOUND_CHAT_SESSION_UPDATE
	f	Lzi;	bn	SERVERBOUND_CHUNK_BATCH_RECEIVED
	f	Lzi;	bo	SERVERBOUND_CLIENT_COMMAND
	f	Lzi;	bp	SERVERBOUND_COMMAND_SUGGESTION
	f	Lzi;	bq	SERVERBOUND_CONFIGURATION_ACKNOWLEDGED
	f	Lzi;	br	SERVERBOUND_CONTAINER_BUTTON_CLICK
	f	Lzi;	bs	SERVERBOUND_CONTAINER_CLICK
	f	Lzi;	bt	SERVERBOUND_CONTAINER_CLOSE
	f	Lzi;	bu	SERVERBOUND_CONTAINER_SLOT_STATE_CHANGED
	f	Lzi;	bv	SERVERBOUND_DEBUG_SAMPLE_SUBSCRIPTION
	f	Lzi;	bw	SERVERBOUND_EDIT_BOOK
	f	Lzi;	bx	SERVERBOUND_ENTITY_TAG_QUERY
	f	Lzi;	by	SERVERBOUND_INTERACT
	f	Lzi;	bz	SERVERBOUND_JIGSAW_GENERATE
	f	Lzi;	c	CLIENTBOUND_ADD_ENTITY
	f	Lzi;	ca	SERVERBOUND_SWING
	f	Lzi;	cb	SERVERBOUND_TELEPORT_TO_ENTITY
	f	Lzi;	cc	SERVERBOUND_USE_ITEM_ON
	f	Lzi;	cd	SERVERBOUND_USE_ITEM
	f	Lzi;	ce	CLIENTBOUND_RESET_SCORE
	f	Lzi;	cf	CLIENTBOUND_TICKING_STATE
	f	Lzi;	cg	CLIENTBOUND_TICKING_STEP
	f	Lzi;	d	CLIENTBOUND_ADD_EXPERIENCE_ORB
	f	Lzi;	e	CLIENTBOUND_ANIMATE
	f	Lzi;	f	CLIENTBOUND_AWARD_STATS
	f	Lzi;	g	CLIENTBOUND_BLOCK_CHANGED_ACK
	f	Lzi;	h	CLIENTBOUND_BLOCK_DESTRUCTION
	f	Lzi;	i	CLIENTBOUND_BLOCK_ENTITY_DATA
	f	Lzi;	j	CLIENTBOUND_BLOCK_EVENT
	f	Lzi;	k	CLIENTBOUND_BLOCK_UPDATE
	f	Lzi;	l	CLIENTBOUND_BOSS_EVENT
	f	Lzi;	m	CLIENTBOUND_CHANGE_DIFFICULTY
	f	Lzi;	n	CLIENTBOUND_CHUNK_BATCH_FINISHED
	f	Lzi;	o	CLIENTBOUND_CHUNK_BATCH_START
	f	Lzi;	p	CLIENTBOUND_CHUNKS_BIOMES
	f	Lzi;	q	CLIENTBOUND_CLEAR_TITLES
	f	Lzi;	r	CLIENTBOUND_COMMAND_SUGGESTIONS
	f	Lzi;	s	CLIENTBOUND_COMMANDS
	f	Lzi;	t	CLIENTBOUND_CONTAINER_CLOSE
	f	Lzi;	u	CLIENTBOUND_CONTAINER_SET_CONTENT
	f	Lzi;	v	CLIENTBOUND_CONTAINER_SET_DATA
	f	Lzi;	w	CLIENTBOUND_CONTAINER_SET_SLOT
	f	Lzi;	x	CLIENTBOUND_COOLDOWN
	f	Lzi;	y	CLIENTBOUND_CUSTOM_CHAT_COMPLETIONS
	f	Lzi;	z	CLIENTBOUND_DAMAGE_EVENT
c	agh	net/minecraft/network/protocol/game/GameProtocols
	m	(Lzl;)V	a	lambda$static$1
		p	0		builder
	m	(Lzl;)V	b	lambda$static$0
		p	0		builder
	f	Lwh$a;	a	SERVERBOUND_TEMPLATE
	f	Lwh$a;	b	CLIENTBOUND_TEMPLATE
c	agi	net/minecraft/network/protocol/game/PacketListenerPlayIn
	m	(Lagk;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lagl;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lagm;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lagn;)V	a	handleChatAck
		p	1		packet
	m	(Lago;)V	a	handleChatCommand
		p	1		packet
	m	(Lagp;)V	a	handleSignedChatCommand
		p	1		packet
	m	(Lagq;)V	a	handleChat
		p	1		packet
	m	(Lagr;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Lags;)V	a	handleChunkBatchReceived
		p	1		packet
	m	(Lagt;)V	a	handleClientCommand
		p	1		packet
	m	(Lagu;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Lagv;)V	a	handleConfigurationAcknowledged
		p	1		packet
	m	(Lagw;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Lagx;)V	a	handleContainerClick
		p	1		packet
	m	(Lagy;)V	a	handleContainerClose
		p	1		packet
	m	(Lagz;)V	a	handleContainerSlotStateChanged
		p	1		packet
	m	(Laha;)V	a	handleDebugSampleSubscription
		p	1		packet
	m	(Lahb;)V	a	handleEditBook
		p	1		packet
	m	(Lahc;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Lahd;)V	a	handleInteract
		p	1		packet
	m	(Lahe;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Lahf;)V	a	handleLockDifficulty
		p	1		packet
	m	(Lahg;)V	a	handleMovePlayer
		p	1		packet
	m	(Lahh;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lahi;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lahj;)V	a	handlePickItem
		p	1		packet
	m	(Lahk;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lahl;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lahm;)V	a	handlePlayerAction
		p	1		packet
	m	(Lahn;)V	a	handlePlayerCommand
		p	1		packet
	m	(Laho;)V	a	handlePlayerInput
		p	1		packet
	m	(Lahp;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Lahq;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lahr;)V	a	handleRenameItem
		p	1		packet
	m	(Lahs;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Laht;)V	a	handleSelectTrade
		p	1		packet
	m	(Lahu;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lahv;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lahw;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lahx;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lahy;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lahz;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Laia;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Laib;)V	a	handleSignUpdate
		p	1		packet
	m	(Laic;)V	a	handleAnimate
		p	1		packet
	m	(Laid;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Laie;)V	a	handleUseItemOn
		p	1		packet
	m	(Laif;)V	a	handleUseItem
		p	1		packet
	m	()Lvu;	b	protocol
c	agj	net/minecraft/network/protocol/game/ServerPacketListener
	m	(Lzg;Ljava/lang/Exception;)V	a	onPacketError
		p	1		packet
		p	2		exception
	f	Lorg/slf4j/Logger;	a	LOGGER
c	agk	net/minecraft/network/protocol/game/PacketPlayInTeleportAccept
	m	(I)V	<init>	<init>
		p	1		teleportId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
c	agl	net/minecraft/network/protocol/game/PacketPlayInTileNBTQuery
	m	(ILjd;)V	<init>	<init>
		p	1		transactionId
		p	2		pos
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()Ljd;	e	getPos
	f	Lyx;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Ljd;	c	pos
c	agm	net/minecraft/network/protocol/game/PacketPlayInDifficultyChange
	m	(Lbqo;)V	<init>	<init>
		p	1		difficulty
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbqo;	b	getDifficulty
	f	Lyx;	a	STREAM_CODEC
	f	Lbqo;	b	difficulty
c	agn	net/minecraft/network/protocol/game/ServerboundChatAckPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	offset
	f	Lyx;	a	STREAM_CODEC
	f	I	b	offset
c	ago	net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	command
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	command
c	agp	net/minecraft/network/protocol/game/ServerboundChatCommandSignedPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	command
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	()Lfa;	g	argumentSignatures
	m	()Lxg$b;	h	lastSeenMessages
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	command
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Lfa;	e	argumentSignatures
	f	Lxg$b;	f	lastSeenMessages
c	agq	net/minecraft/network/protocol/game/PacketPlayInChat
	m	(Ljava/lang/String;Ljava/time/Instant;JLxl;Lxg$b;)V	<init>	<init>
		p	2		timestamp
		p	3		salt
		p	5		signature
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	message
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	()Lxl;	g	signature
	m	()Lxg$b;	h	lastSeenMessages
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	message
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Lxl;	e	signature
	f	Lxg$b;	f	lastSeenMessages
c	agr	net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lxq$a;	b	chatSession
	f	Lyx;	a	STREAM_CODEC
	f	Lxq$a;	b	chatSession
c	ags	net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()F	b	desiredChunksPerTick
	f	Lyx;	a	STREAM_CODEC
	f	F	b	desiredChunksPerTick
c	agt	net/minecraft/network/protocol/game/PacketPlayInClientCommand
	m	(Lagt$a;)V	<init>	<init>
		p	1		mode
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lagt$a;	b	getAction
	f	Lyx;	a	STREAM_CODEC
	f	Lagt$a;	b	action
c	agt$a	net/minecraft/network/protocol/game/PacketPlayInClientCommand$EnumClientCommand
	m	()[Lagt$a;	a	$values
	f	Lagt$a;	a	PERFORM_RESPAWN
	f	Lagt$a;	b	REQUEST_STATS
	f	[Lagt$a;	c	$VALUES
c	agu	net/minecraft/network/protocol/game/PacketPlayInTabComplete
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		completionId
		p	2		partialCommand
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Ljava/lang/String;	e	getCommand
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	Ljava/lang/String;	c	command
c	agv	net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	d	isTerminal
	f	Lagv;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	agw	net/minecraft/network/protocol/game/PacketPlayInEnchantItem
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	containerId
	m	()I	e	buttonId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	buttonId
c	agx	net/minecraft/network/protocol/game/PacketPlayInWindowClick
	m	(IIIILcqe;Lcuq;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;)V	<init>	<init>
		p	1		syncId
		p	2		revision
		p	3		slot
		p	4		button
		p	5		actionType
		p	6		stack
		p	7		modifiedStacks
	m	(Lwk;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lwk;)V	a	write
		p	1		buf
	m	()I	b	getContainerId
	m	()I	e	getSlotNum
	m	()I	f	getButtonNum
	m	()Lcuq;	g	getCarriedItem
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	getChangedSlots
	m	()Lcqe;	i	getClickType
	m	()I	j	getStateId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	MAX_SLOT_COUNT
	f	Lyx;	c	SLOTS_STREAM_CODEC
	f	I	d	containerId
	f	I	e	stateId
	f	I	f	slotNum
	f	I	g	buttonNum
	f	Lcqe;	h	clickType
	f	Lcuq;	i	carriedItem
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	j	changedSlots
c	agy	net/minecraft/network/protocol/game/PacketPlayInCloseWindow
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
c	agz	net/minecraft/network/protocol/game/ServerboundContainerSlotStateChangedPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	slotId
	m	()I	e	containerId
	m	()Z	f	newState
	f	Lyx;	a	STREAM_CODEC
	f	I	b	slotId
	f	I	c	containerId
	f	Z	d	newState
c	aha	net/minecraft/network/protocol/game/ServerboundDebugSampleSubscriptionPacket
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbls;	b	sampleType
	f	Lyx;	a	STREAM_CODEC
	f	Lbls;	b	sampleType
c	ahb	net/minecraft/network/protocol/game/PacketPlayInBEdit
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	slot
	m	()Ljava/util/List;	e	pages
	m	()Ljava/util/Optional;	f	title
	f	I	a	MAX_BYTES_PER_CHAR
	f	Lyx;	b	STREAM_CODEC
	f	I	c	slot
	f	Ljava/util/List;	d	pages
	f	Ljava/util/Optional;	e	title
	f	I	f	TITLE_MAX_CHARS
	f	I	g	PAGE_MAX_CHARS
	f	I	h	MAX_PAGES_COUNT
c	ahc	net/minecraft/network/protocol/game/PacketPlayInEntityNBTQuery
	m	(II)V	<init>	<init>
		p	1		transactionId
		p	2		entityId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getTransactionId
	m	()I	e	getEntityId
	f	Lyx;	a	STREAM_CODEC
	f	I	b	transactionId
	f	I	c	entityId
c	ahd	net/minecraft/network/protocol/game/PacketPlayInUseEntity
	m	(IZLahd$a;)V	<init>	<init>
		p	1		entityId
		p	2		playerSneaking
		p	3		type
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lahd$c;)V	a	dispatch
		p	1		handler
	m	(Laqu;)Lbsr;	a	getTarget
		p	1		world
	m	(Lbsr;Z)Lahd;	a	createAttackPacket
		p	0		entity
		p	1		playerSneaking
	m	(Lbsr;ZLbqq;)Lahd;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
	m	(Lbsr;ZLbqq;Lexc;)Lahd;	a	createInteractionPacket
		p	0		entity
		p	1		playerSneaking
		p	2		hand
		p	3		pos
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isUsingSecondaryAction
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entityId
	f	Lahd$a;	c	action
	f	Z	d	usingSecondaryAction
	f	Lahd$a;	e	ATTACK_ACTION
c	ahd$1	net/minecraft/network/protocol/game/PacketPlayInUseEntity$1
	m	()Lahd$b;	a	getType
	m	(Lahd$c;)V	a	dispatch
		p	1		handler
	m	(Lvw;)V	a	write
		p	1		buf
c	ahd$a	net/minecraft/network/protocol/game/PacketPlayInUseEntity$EnumEntityUseAction
	m	()Lahd$b;	a	getType
	m	(Lahd$c;)V	a	dispatch
		p	1		handler
	m	(Lvw;)V	a	write
		p	1		buf
c	ahd$b	net/minecraft/network/protocol/game/PacketPlayInUseEntity$b
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
		p	3		handlerGetter
	m	()[Lahd$b;	a	$values
	m	(Lvw;)Lahd$a;	a	lambda$static$0
		p	0		buf
	f	Lahd$b;	a	INTERACT
	f	Lahd$b;	b	ATTACK
	f	Lahd$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Lahd$b;	e	$VALUES
c	ahd$c	net/minecraft/network/protocol/game/PacketPlayInUseEntity$c
	m	()V	a	onAttack
	m	(Lbqq;)V	a	onInteraction
		p	1		hand
	m	(Lbqq;Lexc;)V	a	onInteraction
		p	1		hand
		p	2		pos
c	ahd$d	net/minecraft/network/protocol/game/PacketPlayInUseEntity$d
	m	(Lbqq;)V	<init>	<init>
		p	1		hand
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lahd$b;	a	getType
	m	(Lahd$c;)V	a	dispatch
		p	1		handler
	m	(Lvw;)V	a	write
		p	1		buf
	f	Lbqq;	a	hand
c	ahd$e	net/minecraft/network/protocol/game/PacketPlayInUseEntity$e
	m	(Lbqq;Lexc;)V	<init>	<init>
		p	1		hand
		p	2		pos
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lahd$b;	a	getType
	m	(Lahd$c;)V	a	dispatch
		p	1		handler
	m	(Lvw;)V	a	write
		p	1		buf
	f	Lbqq;	a	hand
	f	Lexc;	b	location
c	ahe	net/minecraft/network/protocol/game/PacketPlayInJigsawGenerate
	m	(Ljd;IZ)V	<init>	<init>
		p	1		pos
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()I	e	levels
	m	()Z	f	keepJigsaws
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	I	c	levels
	f	Z	d	keepJigsaws
c	ahf	net/minecraft/network/protocol/game/PacketPlayInDifficultyLock
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	(Z)V	<init>	<init>
		p	1		difficultyLocked
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isLocked
	f	Lyx;	a	STREAM_CODEC
	f	Z	b	locked
c	ahg	net/minecraft/network/protocol/game/PacketPlayInFlying
	m	(DDDFFZZZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
		p	10		changePosition
		p	11		changeLook
	m	()Lzi;	a	type
	m	(D)D	a	getX
		p	1		currentX
	m	(F)F	a	getYRot
		p	1		currentYaw
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isOnGround
	m	(D)D	b	getY
		p	1		currentY
	m	(F)F	b	getXRot
		p	1		currentPitch
	m	(D)D	c	getZ
		p	1		currentZ
	m	()Z	e	hasPosition
	m	()Z	f	hasRotation
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	hasPos
	f	Z	h	hasRot
c	ahg$a	net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPosition
	m	(DDDZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lahg$a;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	i	STREAM_CODEC
c	ahg$b	net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInPositionLook
	m	(DDDFFZ)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lahg$b;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	i	STREAM_CODEC
c	ahg$c	net/minecraft/network/protocol/game/PacketPlayInFlying$PacketPlayInLook
	m	(FFZ)V	<init>	<init>
		p	1		yaw
		p	2		pitch
		p	3		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lahg$c;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	i	STREAM_CODEC
c	ahg$d	net/minecraft/network/protocol/game/PacketPlayInFlying$d
	m	(Z)V	<init>	<init>
		p	1		onGround
	m	()Lzi;	a	type
	m	(Lvw;)Lahg$d;	a	read
		p	0		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	(Lvw;)V	b	write
		p	1		buf
	f	Lyx;	i	STREAM_CODEC
c	ahh	net/minecraft/network/protocol/game/PacketPlayInVehicleMove
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()D	b	getX
	m	()D	e	getY
	m	()D	f	getZ
	m	()F	g	getYRot
	m	()F	h	getXRot
	f	Lyx;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	ahi	net/minecraft/network/protocol/game/PacketPlayInBoatMove
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	(ZZ)V	<init>	<init>
		p	1		leftPaddling
		p	2		rightPaddling
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	getLeft
	m	()Z	e	getRight
	f	Lyx;	a	STREAM_CODEC
	f	Z	b	left
	f	Z	c	right
c	ahj	net/minecraft/network/protocol/game/PacketPlayInPickItem
	m	(I)V	<init>	<init>
		p	1		slot
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	Lyx;	a	STREAM_CODEC
	f	I	b	slot
c	ahk	net/minecraft/network/protocol/game/PacketPlayInAutoRecipe
	m	(ILczb;Z)V	<init>	<init>
		p	1		syncId
		p	2		recipe
		p	3		craftAll
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getContainerId
	m	()Lakr;	e	getRecipe
	m	()Z	f	isShiftDown
	f	Lyx;	a	STREAM_CODEC
	f	I	b	containerId
	f	Lakr;	c	recipe
	f	Z	d	shiftDown
c	ahl	net/minecraft/network/protocol/game/PacketPlayInAbilities
	m	(Lcmu;)V	<init>	<init>
		p	1		abilities
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	b	isFlying
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_FLYING
	f	Z	c	isFlying
c	ahm	net/minecraft/network/protocol/game/PacketPlayInBlockDig
	m	(Lahm$a;Ljd;Lji;)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
	m	(Lahm$a;Ljd;Lji;I)V	<init>	<init>
		p	1		action
		p	2		pos
		p	3		direction
		p	4		sequence
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Lji;	e	getDirection
	m	()Lahm$a;	f	getAction
	m	()I	g	getSequence
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	Lji;	c	direction
	f	Lahm$a;	d	action
	f	I	e	sequence
c	ahm$a	net/minecraft/network/protocol/game/PacketPlayInBlockDig$EnumPlayerDigType
	m	()[Lahm$a;	a	$values
	f	Lahm$a;	a	START_DESTROY_BLOCK
	f	Lahm$a;	b	ABORT_DESTROY_BLOCK
	f	Lahm$a;	c	STOP_DESTROY_BLOCK
	f	Lahm$a;	d	DROP_ALL_ITEMS
	f	Lahm$a;	e	DROP_ITEM
	f	Lahm$a;	f	RELEASE_USE_ITEM
	f	Lahm$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Lahm$a;	h	$VALUES
c	ahn	net/minecraft/network/protocol/game/PacketPlayInEntityAction
	m	(Lbsr;Lahn$a;)V	<init>	<init>
		p	1		entity
		p	2		mode
	m	(Lbsr;Lahn$a;I)V	<init>	<init>
		p	1		entity
		p	2		mode
		p	3		mountJumpHeight
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getId
	m	()Lahn$a;	e	getAction
	m	()I	f	getData
	f	Lyx;	a	STREAM_CODEC
	f	I	b	id
	f	Lahn$a;	c	action
	f	I	d	data
c	ahn$a	net/minecraft/network/protocol/game/PacketPlayInEntityAction$EnumPlayerAction
	m	()[Lahn$a;	a	$values
	f	Lahn$a;	a	PRESS_SHIFT_KEY
	f	Lahn$a;	b	RELEASE_SHIFT_KEY
	f	Lahn$a;	c	STOP_SLEEPING
	f	Lahn$a;	d	START_SPRINTING
	f	Lahn$a;	e	STOP_SPRINTING
	f	Lahn$a;	f	START_RIDING_JUMP
	f	Lahn$a;	g	STOP_RIDING_JUMP
	f	Lahn$a;	h	OPEN_INVENTORY
	f	Lahn$a;	i	START_FALL_FLYING
	f	[Lahn$a;	j	$VALUES
c	aho	net/minecraft/network/protocol/game/PacketPlayInSteerVehicle
	m	(FFZZ)V	<init>	<init>
		p	1		sideways
		p	2		forward
		p	3		jumping
		p	4		sneaking
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()F	b	getXxa
	m	()F	e	getZza
	m	()Z	f	isJumping
	m	()Z	g	isShiftKeyDown
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_JUMPING
	f	I	c	FLAG_SHIFT_KEY_DOWN
	f	F	d	xxa
	f	F	e	zza
	f	Z	f	isJumping
	f	Z	g	isShiftKeyDown
c	ahp	net/minecraft/network/protocol/game/PacketPlayInRecipeSettings
	m	(Lcrj;ZZ)V	<init>	<init>
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lcrj;	b	getBookType
	m	()Z	e	isOpen
	m	()Z	f	isFiltering
	f	Lyx;	a	STREAM_CODEC
	f	Lcrj;	b	bookType
	f	Z	c	isOpen
	f	Z	d	isFiltering
c	ahq	net/minecraft/network/protocol/game/PacketPlayInRecipeDisplayed
	m	(Lczb;)V	<init>	<init>
		p	1		recipe
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lakr;	b	getRecipe
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	recipe
c	ahr	net/minecraft/network/protocol/game/PacketPlayInItemName
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getName
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	name
c	ahs	net/minecraft/network/protocol/game/PacketPlayInAdvancements
	m	(Lahs$a;Lakr;)V	<init>	<init>
		p	1		action
		p	2		tab
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lag;)Lahs;	a	openedTab
		p	0		advancement
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lahs;	b	closedScreen
	m	()Lahs$a;	e	getAction
	m	()Lakr;	f	getTab
	f	Lyx;	a	STREAM_CODEC
	f	Lahs$a;	b	action
	f	Lakr;	c	tab
c	ahs$a	net/minecraft/network/protocol/game/PacketPlayInAdvancements$Status
	m	()[Lahs$a;	a	$values
	f	Lahs$a;	a	OPENED_TAB
	f	Lahs$a;	b	CLOSED_SCREEN
	f	[Lahs$a;	c	$VALUES
c	aht	net/minecraft/network/protocol/game/PacketPlayInTrSel
	m	(I)V	<init>	<init>
		p	1		tradeId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getItem
	f	Lyx;	a	STREAM_CODEC
	f	I	b	item
c	ahu	net/minecraft/network/protocol/game/PacketPlayInBeacon
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		primaryEffectId
		p	2		secondaryEffectId
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/util/Optional;	b	primary
	m	()Ljava/util/Optional;	e	secondary
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/Optional;	b	primary
	f	Ljava/util/Optional;	c	secondary
c	ahv	net/minecraft/network/protocol/game/PacketPlayInHeldItemSlot
	m	(I)V	<init>	<init>
		p	1		selectedSlot
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getSlot
	f	Lyx;	a	STREAM_CODEC
	f	I	b	slot
c	ahw	net/minecraft/network/protocol/game/PacketPlayInSetCommandBlock
	m	(Ljd;Ljava/lang/String;Ldqr$a;ZZZ)V	<init>	<init>
		p	1		pos
		p	2		command
		p	3		type
		p	4		trackOutput
		p	5		conditional
		p	6		alwaysActive
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Ljava/lang/String;	e	getCommand
	m	()Z	f	isTrackOutput
	m	()Z	g	isConditional
	m	()Z	h	isAutomatic
	m	()Ldqr$a;	i	getMode
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_TRACK_OUTPUT
	f	I	c	FLAG_CONDITIONAL
	f	I	d	FLAG_AUTOMATIC
	f	Ljd;	e	pos
	f	Ljava/lang/String;	f	command
	f	Z	g	trackOutput
	f	Z	h	conditional
	f	Z	i	automatic
	f	Ldqr$a;	j	mode
c	ahx	net/minecraft/network/protocol/game/PacketPlayInSetCommandMinecart
	m	(ILjava/lang/String;Z)V	<init>	<init>
		p	1		entityId
		p	2		command
		p	3		trackOutput
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Ldcw;)Ldbx;	a	getCommandBlock
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	e	isTrackOutput
	f	Lyx;	a	STREAM_CODEC
	f	I	b	entity
	f	Ljava/lang/String;	c	command
	f	Z	d	trackOutput
c	ahy	net/minecraft/network/protocol/game/PacketPlayInSetCreativeSlot
	m	(ILcuq;)V	<init>	<init>
		p	1		slot
		p	2		stack
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()S	b	slotNum
	m	()Lcuq;	e	itemStack
	f	Lyx;	a	STREAM_CODEC
	f	S	b	slotNum
	f	Lcuq;	c	itemStack
c	ahz	net/minecraft/network/protocol/game/PacketPlayInSetJigsaw
	m	(Ljd;Lakr;Lakr;Lakr;Ljava/lang/String;Ldri$a;II)V	<init>	<init>
		p	1		pos
		p	2		name
		p	3		target
		p	4		pool
		p	5		finalState
		p	6		jointType
		p	7		selectionPriority
		p	8		placementPriority
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Lakr;	e	getName
	m	()Lakr;	f	getTarget
	m	()Lakr;	g	getPool
	m	()Ljava/lang/String;	h	getFinalState
	m	()Ldri$a;	i	getJoint
	m	()I	j	getSelectionPriority
	m	()I	k	getPlacementPriority
	f	Lyx;	a	STREAM_CODEC
	f	Ljd;	b	pos
	f	Lakr;	c	name
	f	Lakr;	d	target
	f	Lakr;	e	pool
	f	Ljava/lang/String;	f	finalState
	f	Ldri$a;	g	joint
	f	I	h	selectionPriority
	f	I	i	placementPriority
c	aia	net/minecraft/network/protocol/game/PacketPlayInStruct
	m	(Ljd;Ldrx$a;Ldum;Ljava/lang/String;Ljd;Lkh;Ldkv;Ldmm;Ljava/lang/String;ZZZFJ)V	<init>	<init>
		p	1		pos
		p	2		action
		p	3		mode
		p	4		templateName
		p	5		offset
		p	6		size
		p	7		mirror
		p	8		rotation
		p	9		metadata
		p	10		ignoreEntities
		p	11		showAir
		p	12		showBoundingBox
		p	13		integrity
		p	14		seed
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Ldrx$a;	e	getUpdateType
	m	()Ldum;	f	getMode
	m	()Ljava/lang/String;	g	getName
	m	()Ljd;	h	getOffset
	m	()Lkh;	i	getSize
	m	()Ldkv;	j	getMirror
	m	()Ldmm;	k	getRotation
	m	()Ljava/lang/String;	l	getData
	m	()Z	m	isIgnoreEntities
	m	()Z	n	isShowAir
	m	()Z	o	isShowBoundingBox
	m	()F	p	getIntegrity
	m	()J	q	getSeed
	f	Lyx;	a	STREAM_CODEC
	f	I	b	FLAG_IGNORE_ENTITIES
	f	I	c	FLAG_SHOW_AIR
	f	I	d	FLAG_SHOW_BOUNDING_BOX
	f	Ljd;	e	pos
	f	Ldrx$a;	f	updateType
	f	Ldum;	g	mode
	f	Ljava/lang/String;	h	name
	f	Ljd;	i	offset
	f	Lkh;	j	size
	f	Ldkv;	k	mirror
	f	Ldmm;	l	rotation
	f	Ljava/lang/String;	m	data
	f	Z	n	ignoreEntities
	f	Z	o	showAir
	f	Z	p	showBoundingBox
	f	F	q	integrity
	f	J	r	seed
c	aib	net/minecraft/network/protocol/game/PacketPlayInUpdateSign
	m	(Ljd;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		pos
		p	2		front
		p	3		line1
		p	4		line2
		p	5		line3
		p	6		line4
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljd;	b	getPos
	m	()Z	e	isFrontText
	m	()[Ljava/lang/String;	f	getLines
	f	Lyx;	a	STREAM_CODEC
	f	I	b	MAX_STRING_LENGTH
	f	Ljd;	c	pos
	f	[Ljava/lang/String;	d	lines
	f	Z	e	isFrontText
c	aic	net/minecraft/network/protocol/game/PacketPlayInArmAnimation
	m	(Lbqq;)V	<init>	<init>
		p	1		hand
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbqq;	b	getHand
	f	Lyx;	a	STREAM_CODEC
	f	Lbqq;	b	hand
c	aid	net/minecraft/network/protocol/game/PacketPlayInSpectate
	m	(Ljava/util/UUID;)V	<init>	<init>
		p	1		targetUuid
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Laqu;)Lbsr;	a	getEntity
		p	1		world
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/util/UUID;	b	uuid
c	aie	net/minecraft/network/protocol/game/PacketPlayInUseItem
	m	(Lbqq;Lewy;I)V	<init>	<init>
		p	1		hand
		p	2		blockHitResult
		p	3		sequence
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbqq;	b	getHand
	m	()Lewy;	e	getHitResult
	m	()I	f	getSequence
	f	Lyx;	a	STREAM_CODEC
	f	Lewy;	b	blockHit
	f	Lbqq;	c	hand
	f	I	d	sequence
c	aif	net/minecraft/network/protocol/game/PacketPlayInBlockPlace
	m	(Lbqq;IFF)V	<init>	<init>
		p	1		hand
		p	2		sequence
		p	3		yaw
		p	4		pitch
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lagi;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lbqq;	b	getHand
	m	()I	e	getSequence
	m	()F	f	getYRot
	m	()F	g	getXRot
	f	Lyx;	a	STREAM_CODEC
	f	Lbqq;	b	hand
	f	I	c	sequence
	f	F	d	yRot
	f	F	e	xRot
c	aig	net/minecraft/network/protocol/game/VecDeltaCodec
	m	()Lexc;	a	getBase
	m	(D)J	a	encode
		p	0		value
	m	(J)D	a	decode
		p	0		value
	m	(JJJ)Lexc;	a	decode
		p	1		x
		p	3		y
		p	5		z
	m	(Lexc;)J	a	encodeX
		p	1		pos
	m	(Lexc;)J	b	encodeY
		p	1		pos
	m	(Lexc;)J	c	encodeZ
		p	1		pos
	m	(Lexc;)Lexc;	d	delta
		p	1		pos
	m	(Lexc;)V	e	setBase
		p	1		pos
	f	D	a	TRUNCATION_STEPS
	f	Lexc;	b	base
c	aii	net/minecraft/network/protocol/handshake/ClientIntent
	m	()I	a	id
	m	(I)Laii;	a	byId
		p	0		id
	m	()[Laii;	b	$values
	f	Laii;	a	STATUS
	f	Laii;	b	LOGIN
	f	Laii;	c	TRANSFER
	f	I	d	STATUS_ID
	f	I	e	LOGIN_ID
	f	I	f	TRANSFER_ID
	f	[Laii;	g	$VALUES
c	aij	net/minecraft/network/protocol/handshake/PacketHandshakingInSetProtocol
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laim;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	protocolVersion
	m	()Z	d	isTerminal
	m	()Ljava/lang/String;	e	hostName
	m	()I	f	port
	m	()Laii;	g	intention
	f	Lyx;	a	STREAM_CODEC
	f	I	b	protocolVersion
	f	Ljava/lang/String;	c	hostName
	f	I	d	port
	f	Laii;	e	intention
	f	I	f	MAX_HOST_LENGTH
c	aik	net/minecraft/network/protocol/handshake/HandshakePacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createServerbound
		p	0		id
	f	Lzi;	a	CLIENT_INTENTION
c	ail	net/minecraft/network/protocol/handshake/HandshakeProtocols
	m	(Lzl;)V	a	lambda$static$0
		p	0		builder
	f	Lwh$a;	a	SERVERBOUND_TEMPLATE
	f	Lwh;	b	SERVERBOUND
c	aim	net/minecraft/network/protocol/handshake/PacketHandshakingInListener
	m	(Laij;)V	a	handleIntention
		p	1		packet
	m	()Lvu;	b	protocol
c	aio	net/minecraft/network/protocol/login/PacketLoginOutListener
	m	(Laip;)V	a	handleCustomQuery
		p	1		packet
	m	(Laiq;)V	a	handleGameProfile
		p	1		packet
	m	(Lair;)V	a	handleHello
		p	1		packet
	m	(Lais;)V	a	handleCompression
		p	1		packet
	m	(Lait;)V	a	handleDisconnect
		p	1		packet
	m	()Lvu;	b	protocol
c	aip	net/minecraft/network/protocol/login/PacketLoginOutCustomPayload
	m	(ILajc;)V	<init>	<init>
		p	1		queryId
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laio;)V	a	handle
		p	1		listener
	m	(Lakr;Lvw;)Lajc;	a	readPayload
		p	0		id
		p	1		buf
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	transactionId
	m	(Lakr;Lvw;)Laje;	b	readUnknownPayload
		p	0		id
		p	1		buf
	m	()Lajc;	e	payload
	f	Lyx;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Lajc;	c	payload
	f	I	d	MAX_PAYLOAD_SIZE
c	aiq	net/minecraft/network/protocol/login/PacketLoginOutSuccess
	m	()Lzi;	a	type
	m	(Laio;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lcom/mojang/authlib/GameProfile;	b	gameProfile
	m	()Z	d	isTerminal
	m	()Z	e	strictErrorHandling
	f	Lyx;	a	STREAM_CODEC
	f	Lcom/mojang/authlib/GameProfile;	b	gameProfile
	f	Z	c	strictErrorHandling
c	air	net/minecraft/network/protocol/login/PacketLoginOutEncryptionBegin
	m	(Ljava/lang/String;[B[BZ)V	<init>	<init>
		p	1		serverId
		p	2		publicKey
		p	3		nonce
		p	4		needsAuthentication
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laio;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	e	getPublicKey
	m	()[B	f	getChallenge
	m	()Z	g	shouldAuthenticate
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	serverId
	f	[B	c	publicKey
	f	[B	d	challenge
	f	Z	e	shouldAuthenticate
c	ais	net/minecraft/network/protocol/login/PacketLoginOutSetCompression
	m	(I)V	<init>	<init>
		p	1		compressionThreshold
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laio;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	getCompressionThreshold
	f	Lyx;	a	STREAM_CODEC
	f	I	b	compressionThreshold
c	ait	net/minecraft/network/protocol/login/PacketLoginOutDisconnect
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	(Lwz;)V	<init>	<init>
		p	1		reason
	m	()Lzi;	a	type
	m	(Laio;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lwz;	b	getReason
	f	Lyx;	a	STREAM_CODEC
	f	Lwz;	b	reason
c	aiu	net/minecraft/network/protocol/login/LoginPacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_CUSTOM_QUERY
	f	Lzi;	b	CLIENTBOUND_GAME_PROFILE
	f	Lzi;	c	CLIENTBOUND_HELLO
	f	Lzi;	d	CLIENTBOUND_LOGIN_COMPRESSION
	f	Lzi;	e	CLIENTBOUND_LOGIN_DISCONNECT
	f	Lzi;	f	SERVERBOUND_CUSTOM_QUERY_ANSWER
	f	Lzi;	g	SERVERBOUND_HELLO
	f	Lzi;	h	SERVERBOUND_KEY
	f	Lzi;	i	SERVERBOUND_LOGIN_ACKNOWLEDGED
c	aiv	net/minecraft/network/protocol/login/LoginProtocols
	m	(Lzl;)V	a	lambda$static$1
		p	0		builder
	m	(Lzl;)V	b	lambda$static$0
		p	0		builder
	f	Lwh$a;	a	SERVERBOUND_TEMPLATE
	f	Lwh;	b	SERVERBOUND
	f	Lwh$a;	c	CLIENTBOUND_TEMPLATE
	f	Lwh;	d	CLIENTBOUND
c	aiw	net/minecraft/network/protocol/login/PacketLoginInListener
	m	(Laix;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Laiy;)V	a	handleHello
		p	1		packet
	m	(Laiz;)V	a	handleKey
		p	1		packet
	m	(Laja;)V	a	handleLoginAcknowledgement
		p	1		packet
	m	()Lvu;	b	protocol
c	aix	net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket
	m	()Lzi;	a	type
	m	(ILvw;)Lajb;	a	readPayload
		p	0		queryId
		p	1		buf
	m	(Laiw;)V	a	handle
		p	1		listener
	m	(Lvw;)Laix;	a	read
		p	0		buf
	m	(Lvw;Lajb;)V	a	lambda$write$0
		p	0		buf
		p	1		response
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()I	b	transactionId
	m	(Lvw;)Lajb;	b	readUnknownPayload
		p	0		buf
	m	(Lvw;)V	c	write
		p	1		buf
	m	()Lajb;	e	payload
	f	Lyx;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Lajb;	c	payload
	f	I	d	MAX_PAYLOAD_SIZE
c	aiy	net/minecraft/network/protocol/login/PacketLoginInStart
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laiw;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Ljava/lang/String;	b	name
	m	()Ljava/util/UUID;	e	profileId
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	name
	f	Ljava/util/UUID;	c	profileId
c	aiz	net/minecraft/network/protocol/login/PacketLoginInEncryptionBegin
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
		p	1		secretKey
		p	2		publicKey
		p	3		nonce
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laiw;)V	a	handle
		p	1		listener
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
		p	1		privateKey
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	([BLjava/security/PrivateKey;)Z	a	isChallengeValid
		p	1		nonce
		p	2		privateKey
	f	Lyx;	a	STREAM_CODEC
	f	[B	b	keybytes
	f	[B	c	encryptedChallenge
c	aja	net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket
	m	()Lzi;	a	type
	m	(Laiw;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Z	d	isTerminal
	f	Laja;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	ajb	net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload
	m	(Lvw;)V	a	write
		p	1		buf
c	ajc	net/minecraft/network/protocol/login/custom/CustomQueryPayload
	m	()Lakr;	a	id
	m	(Lvw;)V	a	write
		p	1		buf
c	ajd	net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload
	m	(Lvw;)V	a	write
		p	1		buf
	f	Lajd;	a	INSTANCE
c	aje	net/minecraft/network/protocol/login/custom/DiscardedQueryPayload
	m	()Lakr;	a	id
	m	(Lvw;)V	a	write
		p	1		buf
	f	Lakr;	a	id
c	aji	net/minecraft/network/protocol/ping/ClientPongPacketListener
	m	(Lajj;)V	a	handlePongResponse
		p	1		packet
c	ajj	net/minecraft/network/protocol/ping/ClientboundPongResponsePacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Laji;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()J	b	time
	f	Lyx;	a	STREAM_CODEC
	f	J	b	time
c	ajk	net/minecraft/network/protocol/ping/PingPacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_PONG_RESPONSE
	f	Lzi;	b	SERVERBOUND_PING_REQUEST
c	ajl	net/minecraft/network/protocol/ping/ServerPingPacketListener
	m	(Lajm;)V	a	handlePingRequest
		p	1		packet
c	ajm	net/minecraft/network/protocol/ping/ServerboundPingRequestPacket
	m	(J)V	<init>	<init>
		p	1		startTime
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lajl;)V	a	handle
		p	1		listener
	m	(Lio/netty/buffer/ByteBuf;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()J	b	getTime
	f	Lyx;	a	STREAM_CODEC
	f	J	b	time
c	ajo	net/minecraft/network/protocol/status/PacketStatusOutListener
	m	(Lajp;)V	a	handleStatusResponse
		p	1		packet
	m	()Lvu;	b	protocol
c	ajp	net/minecraft/network/protocol/status/PacketStatusOutServerInfo
	m	(Lajq;)V	<init>	<init>
		p	1		metadata
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Lzi;	a	type
	m	(Lajo;)V	a	handle
		p	1		listener
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lwf;)V	a	handle
		p	1		listener
	m	()Lajq;	b	status
	f	Lyx;	a	STREAM_CODEC
	f	Lajq;	b	status
c	ajq	net/minecraft/network/protocol/status/ServerPing
	m	()Lwz;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	players
	m	()Ljava/util/Optional;	c	version
	m	()Ljava/util/Optional;	d	favicon
	m	()Z	e	enforcesSecureChat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lwz;	b	description
	f	Ljava/util/Optional;	c	players
	f	Ljava/util/Optional;	d	version
	f	Ljava/util/Optional;	e	favicon
	f	Z	f	enforcesSecureChat
c	ajq$a	net/minecraft/network/protocol/status/ServerPing$a
	m	()[B	a	iconBytes
	m	(Lajq$a;)Ljava/lang/String;	a	lambda$static$3
		p	0		iconBytes
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		uri
	m	()Ljava/lang/String;	b	lambda$static$1
	m	()Ljava/lang/String;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	[B	b	iconBytes
	f	Ljava/lang/String;	c	PREFIX
c	ajq$b	net/minecraft/network/protocol/status/ServerPing$ServerPingPlayerSample
	m	(IILjava/util/List;)V	<init>	<init>
		p	1		max
		p	2		online
	m	()I	a	max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	online
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Ljava/util/List;	c	sample
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	max
	f	I	c	online
	f	Ljava/util/List;	d	sample
	f	Lcom/mojang/serialization/Codec;	e	PROFILE_CODEC
c	ajq$c	net/minecraft/network/protocol/status/ServerPing$ServerData
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		gameVersion
		p	2		protocolVersion
	m	()Lajq$c;	a	current
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	name
	m	()I	c	protocol
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
	f	I	c	protocol
c	ajr	net/minecraft/network/protocol/status/PacketStatusInListener
	m	(Lajs;)V	a	handleStatusRequest
		p	1		packet
	m	()Lvu;	b	protocol
c	ajs	net/minecraft/network/protocol/status/PacketStatusInStart
	m	()Lzi;	a	type
	m	(Lajr;)V	a	handle
		p	1		listener
	m	(Lwf;)V	a	handle
		p	1		listener
	f	Lajs;	a	INSTANCE
	f	Lyx;	b	STREAM_CODEC
c	ajt	net/minecraft/network/protocol/status/StatusPacketTypes
	m	(Ljava/lang/String;)Lzi;	a	createClientbound
		p	0		id
	m	(Ljava/lang/String;)Lzi;	b	createServerbound
		p	0		id
	f	Lzi;	a	CLIENTBOUND_STATUS_RESPONSE
	f	Lzi;	b	SERVERBOUND_STATUS_REQUEST
c	aju	net/minecraft/network/protocol/status/StatusProtocols
	m	(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	lambda$static$1
		p	0		buf
	m	(Lzl;)V	a	lambda$static$2
		p	0		builder
	m	(Lzl;)V	b	lambda$static$0
		p	0		builder
	f	Lwh$a;	a	SERVERBOUND_TEMPLATE
	f	Lwh;	b	SERVERBOUND
	f	Lwh$a;	c	CLIENTBOUND_TEMPLATE
	f	Lwh;	d	CLIENTBOUND
c	ajw	net/minecraft/network/syncher/DataWatcherObject
	m	(ILajx;)V	<init>	<init>
		p	1		id
		p	2		dataType
	m	()I	a	id
	m	()Lajx;	b	serializer
	f	I	a	id
	f	Lajx;	b	serializer
c	ajx	net/minecraft/network/syncher/DataWatcherSerializer
	m	(I)Lajw;	a	createAccessor
		p	1		id
	m	(Lyx;)Lajx;	a	forValueType
		p	0		codec
	m	(Lyx;)Lyx;	b	lambda$forValueType$0
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
		p	1		value
c	ajx$a	net/minecraft/network/syncher/DataWatcherSerializer$a
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
		p	1		value
c	ajy	net/minecraft/network/syncher/DataWatcherRegistry
	m	(I)Lajx;	a	getSerializer
		p	0		id
	m	(Lajx;)V	a	registerSerializer
		p	0		handler
	m	(Lajx;)I	b	getSerializedId
		p	0		handler
	f	Lajx;	A	PAINTING_VARIANT
	f	Lajx;	B	ARMADILLO_STATE
	f	Lajx;	C	SNIFFER_STATE
	f	Lajx;	D	VECTOR3
	f	Lajx;	E	QUATERNION
	f	Laxk;	F	SERIALIZERS
	f	Lyx;	G	OPTIONAL_BLOCK_STATE_CODEC
	f	Lyx;	H	OPTIONAL_UNSIGNED_INT_CODEC
	f	Lajx;	a	BYTE
	f	Lajx;	b	INT
	f	Lajx;	c	LONG
	f	Lajx;	d	FLOAT
	f	Lajx;	e	STRING
	f	Lajx;	f	COMPONENT
	f	Lajx;	g	OPTIONAL_COMPONENT
	f	Lajx;	h	ITEM_STACK
	f	Lajx;	i	BLOCK_STATE
	f	Lajx;	j	OPTIONAL_BLOCK_STATE
	f	Lajx;	k	BOOLEAN
	f	Lajx;	l	PARTICLE
	f	Lajx;	m	PARTICLES
	f	Lajx;	n	ROTATIONS
	f	Lajx;	o	BLOCK_POS
	f	Lajx;	p	OPTIONAL_BLOCK_POS
	f	Lajx;	q	DIRECTION
	f	Lajx;	r	OPTIONAL_UUID
	f	Lajx;	s	OPTIONAL_GLOBAL_POS
	f	Lajx;	t	COMPOUND_TAG
	f	Lajx;	u	VILLAGER_DATA
	f	Lajx;	v	OPTIONAL_UNSIGNED_INT
	f	Lajx;	w	POSE
	f	Lajx;	x	CAT_VARIANT
	f	Lajx;	y	WOLF_VARIANT
	f	Lajx;	z	FROG_VARIANT
c	ajy$1	net/minecraft/network/syncher/DataWatcherRegistry$1
	m	(Lcuq;)Lcuq;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
		p	1		value
c	ajy$2	net/minecraft/network/syncher/DataWatcherRegistry$2
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	ajy$3	net/minecraft/network/syncher/DataWatcherRegistry$3
	m	(Lub;)Lub;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
		p	1		value
c	ajy$4	net/minecraft/network/syncher/DataWatcherRegistry$4
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/OptionalInt;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/OptionalInt;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	ajz	net/minecraft/network/syncher/SyncedDataHolder
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
		p	1		entries
c	aka	net/minecraft/network/syncher/DataWatcher
	m	(Lajz;[Laka$b;)V	<init>	<init>
		p	1		trackedEntity
		p	2		entries
	m	()Z	a	isDirty
	m	(Lajw;)Ljava/lang/Object;	a	get
		p	1		data
	m	(Lajw;Ljava/lang/Object;)V	a	set
		p	1		key
		p	2		value
	m	(Lajw;Ljava/lang/Object;Z)V	a	set
		p	1		key
		p	2		value
		p	3		force
	m	(Laka$b;Laka$c;)V	a	assignValue
		p	1		to
		p	2		from
	m	(Ljava/lang/Class;Lajx;)Lajw;	a	defineId
		p	0		entityClass
		p	1		dataHandler
	m	(Ljava/util/List;)V	a	assignValues
		p	1		entries
	m	()Ljava/util/List;	b	packDirty
	m	(Lajw;)Laka$b;	b	getItem
		p	1		key
	m	()Ljava/util/List;	c	getNonDefaultValues
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_ID_VALUE
	f	Laxg;	c	ID_REGISTRY
	f	Lajz;	d	entity
	f	[Laka$b;	e	itemsById
	f	Z	f	isDirty
c	aka$a	net/minecraft/network/syncher/DataWatcher$a
	m	(Lajz;)V	<init>	<init>
		p	1		entity
	m	()Laka;	a	build
	m	(Lajw;Ljava/lang/Object;)Laka$a;	a	define
		p	1		data
		p	2		value
	f	Lajz;	a	entity
	f	[Laka$b;	b	itemsById
c	aka$b	net/minecraft/network/syncher/DataWatcher$Item
	m	(Lajw;Ljava/lang/Object;)V	<init>	<init>
		p	1		data
		p	2		value
	m	()Lajw;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
		p	1		value
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	()Z	d	isSetToDefault
	m	()Laka$c;	e	value
	f	Lajw;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Ljava/lang/Object;	c	initialValue
	f	Z	d	dirty
c	aka$c	net/minecraft/network/syncher/DataWatcher$c
	m	()I	a	id
	m	(Lajw;Ljava/lang/Object;)Laka$c;	a	create
		p	0		data
		p	1		value
	m	(Lwk;)V	a	write
		p	1		buf
	m	(Lwk;I)Laka$c;	a	read
		p	0		buf
		p	1		id
	m	(Lwk;ILajx;)Laka$c;	a	read
		p	0		buf
		p	1		id
		p	2		handler
	m	()Lajx;	b	serializer
	m	()Ljava/lang/Object;	c	value
	f	I	a	id
	f	Lajx;	b	serializer
	f	Ljava/lang/Object;	c	value
c	ake	net/minecraft/recipebook/AutoRecipeAbstract
	m	(IIILczb;Ljava/util/Iterator;I)V	a	placeRecipe
		p	1		gridWidth
		p	2		gridHeight
		p	3		gridOutputSlot
		p	4		recipe
		p	5		inputs
		p	6		amount
	m	(Ljava/lang/Object;IIII)V	a	addItemToSlot
		p	1		input
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
c	akf	net/minecraft/recipebook/AutoRecipe
	m	(Lcri;)V	<init>	<init>
		p	1		handler
	m	()V	a	clearGrid
	m	(Laqv;Lczb;Z)V	a	recipeClicked
		p	1		entity
		p	2		recipe
		p	3		craftAll
	m	(Lcrq;Lcuq;I)I	a	moveItemToGrid
		p	1		slot
		p	2		stack
	m	(Lczb;Z)V	a	handleRecipeClicked
		p	1		recipe
		p	2		craftAll
	m	(Ljava/lang/Integer;IIII)V	a	addItemToSlot
		p	1		input
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
	m	(Ljava/lang/Object;IIII)V	a	addItemToSlot
		p	1		input
		p	2		slot
		p	3		amount
		p	4		gridX
		p	5		gridY
	m	(ZIZ)I	a	getStackSize
		p	1		craftAll
		p	2		limit
		p	3		recipeInCraftingSlots
	m	()Z	b	testClearGrid
	m	()I	c	getAmountOfFreeSlotsInInventory
	f	Lcnb;	a	stackedContents
	f	Lcmw;	b	inventory
	f	Lcri;	c	menu
	f	I	d	ITEM_NOT_FOUND
c	akh	net/minecraft/references/Blocks
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	f	Lakq;	a	PUMPKIN
	f	Lakq;	b	PUMPKIN_STEM
	f	Lakq;	c	ATTACHED_PUMPKIN_STEM
	f	Lakq;	d	MELON
	f	Lakq;	e	MELON_STEM
	f	Lakq;	f	ATTACHED_MELON_STEM
c	aki	net/minecraft/references/Items
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	f	Lakq;	a	PUMPKIN_SEEDS
	f	Lakq;	b	MELON_SEEDS
c	akj	net/minecraft/resources/DynamicOpsWrapper
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
		p	1		delegate
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
c	akk	net/minecraft/resources/FileToIdConverter
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		directoryName
		p	2		fileExtension
	m	(Lakr;)Lakr;	a	idToFile
		p	1		id
	m	(Laue;)Ljava/util/Map;	a	listMatchingResources
		p	1		resourceManager
	m	(Ljava/lang/String;)Lakk;	a	json
		p	0		directoryName
	m	(Lakr;)Lakr;	b	fileToId
		p	1		path
	m	(Laue;)Ljava/util/Map;	b	listMatchingResourceStacks
		p	1		resourceManager
	m	(Lakr;)Z	c	lambda$listMatchingResourceStacks$1
		p	1		path
	m	(Lakr;)Z	d	lambda$listMatchingResources$0
		p	1		path
	f	Ljava/lang/String;	a	prefix
	f	Ljava/lang/String;	b	extension
c	akl	net/minecraft/resources/HolderSetCodec
	m	(Lakq;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registry
		p	2		entryCodec
		p	3		alwaysSerializeAsList
	m	(Lakq;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
		p	0		registryRef
		p	1		entryCodec
		p	2		alwaysSerializeAsList
	m	(Lawu;)Lcom/mojang/serialization/DataResult;	a	lambda$lookupTag$8
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$homogenousList$1
		p	0		either
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$11
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Ljq;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$5
		p	1		entries
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
		p	0		entryCodec
		p	1		alwaysSerializeAsList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
		p	1		ops
		p	2		input
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$4
		p	0		entries
	m	(Ljm;)Ljava/lang/String;	a	lambda$decodeWithoutRegistry$10
	m	(Ljn;Lawu;)Lcom/mojang/serialization/DataResult;	a	lookupTag
		p	0		registry
		p	1		tag
	m	(Ljn;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$6
		p	1		pair
	m	(Ljq;)Ljava/lang/String;	a	lambda$encode$9
	m	(Ljq;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lawu;)Ljava/lang/String;	b	lambda$lookupTag$7
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	b	lambda$homogenousList$2
		p	0		entries
	m	(Ljn;Lawu;)Lcom/mojang/serialization/DataResult;	b	lambda$decode$3
		p	1		tag
	m	(Ljq;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
		p	1		entryList
		p	2		ops
		p	3		prefix
	m	(Ljava/util/List;)Ljava/util/List;	c	lambda$homogenousList$0
		p	0		entries
	f	Lakq;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
c	akm	net/minecraft/resources/RegistryDataLoader
	m	(Lakm$b;Lakp$c;Lakm$a;)V	a	lambda$load$5
		p	2		loader
	m	(Lakm$b;Lka;Ljava/util/List;)Lka$b;	a	load
		p	0		loadable
		p	1		baseRegistryManager
		p	2		entries
	m	(Laue;Lakm$a;Lakp$c;)V	a	lambda$load$2
		p	1		loader
		p	2		infoGetter
	m	(Laue;Lakp$c;Lki;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadContentsFromManager
		p	0		resourceManager
		p	1		infoGetter
		p	2		registry
		p	3		elementDecoder
		p	4		errors
	m	(Laue;Lka;Ljava/util/List;)Lka$b;	a	load
		p	0		resourceManager
		p	1		registryManager
		p	2		entries
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	a	lambda$logErrors$12
		p	1		entry
	m	(Ljava/lang/Boolean;)Lcom/mojang/serialization/Lifecycle;	a	lambda$static$0
		p	0		vanilla
	m	(Ljava/util/Map$Entry;)Lakr;	a	lambda$logErrors$10
		p	0		entry
	m	(Ljava/util/Map;)V	a	logErrors
		p	0		exceptions
	m	(Ljava/util/Map;Lakm$a;)V	a	lambda$createContext$8
		p	1		loader
	m	(Ljava/util/Map;Lakm$c;)Lakm$a;	a	lambda$load$4
		p	1		entry
	m	(Ljava/util/Map;Lauh;Lakm$a;Lakp$c;)V	a	lambda$load$3
		p	2		loader
		p	3		infoGetter
	m	(Ljava/util/Map;Lauh;Lakp$c;Lki;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadContentsFromNetwork
		p	0		data
		p	1		factory
		p	2		infoGetter
		p	3		registry
		p	4		decoder
		p	5		loadingErrors
	m	(Ljava/util/Map;Lauh;Lka;Ljava/util/List;)Lka$b;	a	load
		p	0		data
		p	1		factory
		p	2		registryManager
		p	3		entries
	m	(Ljava/util/Map;Lka$d;)V	a	lambda$createContext$7
		p	1		entry
	m	(Ljava/util/Optional;)Ljy;	a	lambda$static$1
		p	0		knownPacks
	m	(Ljz;)Lakp$b;	a	createInfoForContextRegistry
		p	0		registry
	m	(Lka;Ljava/util/List;)Lakp$c;	a	createContext
		p	0		baseRegistryManager
		p	1		additionalRegistries
	m	(Lki;)Lakp$b;	a	createInfoForNewRegistry
		p	0		registry
	m	(Lki;Lcom/mojang/serialization/Decoder;Lakp;Lakq;Lauc;Ljy;)V	a	loadElementFromResource
		p	0		registry
		p	1		decoder
		p	2		ops
		p	3		key
		p	4		resource
		p	5		entryInfo
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	b	lambda$logErrors$11
		p	1		elementEntry
	m	(Ljava/util/Map$Entry;)Lakr;	b	lambda$logErrors$9
		p	0		entry
	m	(Ljava/util/Map;Lakm$a;)V	b	lambda$load$6
		p	1		loader
	f	Ljava/util/List;	a	WORLDGEN_REGISTRIES
	f	Ljava/util/List;	b	DIMENSION_REGISTRIES
	f	Ljava/util/List;	c	SYNCHRONIZED_REGISTRIES
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljy;	e	NETWORK_REGISTRATION_INFO
	f	Ljava/util/function/Function;	f	REGISTRATION_INFO_CACHE
c	akm$1	net/minecraft/resources/RegistryDataLoader$1
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Ljava/util/Map;	a	val$result
c	akm$a	net/minecraft/resources/RegistryDataLoader$a
	m	()Lakm$c;	a	data
	m	(Laue;Lakp$c;)V	a	loadFromResources
		p	1		resourceManager
		p	2		infoGetter
	m	(Ljava/util/Map;Lauh;Lakp$c;)V	a	loadFromNetwork
		p	1		data
		p	2		factory
		p	3		infoGetter
	m	()Lki;	b	registry
	m	()Ljava/util/Map;	c	loadingErrors
	f	Lakm$c;	a	data
	f	Lki;	b	registry
	f	Ljava/util/Map;	c	loadingErrors
c	akm$b	net/minecraft/resources/RegistryDataLoader$b
	m	(Lakm$a;Lakp$c;)V	apply	apply
		p	1		loader
		p	2		infoGetter
c	akm$c	net/minecraft/resources/RegistryDataLoader$c
	m	()Lakq;	a	key
	m	(Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lakm$a;	a	create
		p	1		lifecycle
		p	2		errors
	m	(Ljava/util/function/BiConsumer;)V	a	runWithArguments
		p	1		callback
	m	()Lcom/mojang/serialization/Codec;	b	elementCodec
	m	()Z	c	requiredNonEmpty
	f	Lakq;	a	key
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	requiredNonEmpty
c	akn	net/minecraft/resources/RegistryFileCodec
	m	(Lakq;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
		p	1		registryRef
		p	2		elementCodec
		p	3		allowInlineDefinitions
	m	()Ljava/lang/String;	a	lambda$decode$4
	m	(Lakq;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$7
	m	(Lakq;Lcom/mojang/serialization/Codec;)Lakn;	a	create
		p	0		registryRef
		p	1		elementCodec
	m	(Lakq;Lcom/mojang/serialization/Codec;Z)Lakn;	a	create
		p	0		registryRef
		p	1		elementCodec
		p	2		allowInlineDefinitions
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$9
		p	0		pair
	m	(Lcom/mojang/datafixers/util/Pair;Ljm$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lakq;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		key
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$2
		p	3		value
	m	(Ljm;)Ljava/lang/String;	a	lambda$encode$0
	m	(Ljm;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	b	lambda$decode$3
	m	(Lakq;)Ljava/lang/String;	b	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$5
		p	0		pair
	f	Lakq;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
c	ako	net/minecraft/resources/RegistryFixedCodec
	m	(Lakq;)V	<init>	<init>
		p	1		registry
	m	()Ljava/lang/String;	a	lambda$decode$9
	m	(Lakq;)Lako;	a	create
		p	0		registry
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;Ljm$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$7
		p	1		value
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lakq;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
		p	2		registryKey
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
		p	1		value
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$8
		p	2		pair
	m	(Ljm;)Ljava/lang/String;	a	lambda$encode$0
	m	(Ljm;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	b	lambda$encode$4
	m	(Lakr;)Ljava/lang/String;	b	lambda$decode$5
	m	()Ljava/lang/String;	c	lambda$encode$2
	f	Lakq;	a	registryKey
c	akp	net/minecraft/resources/RegistryOps
	m	(Lcom/mojang/serialization/DynamicOps;Lakp$c;)V	<init>	<init>
		p	1		delegate
		p	2		registryInfoGetter
	m	()Ljava/lang/String;	a	lambda$retrieveElement$9
	m	(Lakp$b;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$0
		p	0		info
	m	(Lakq;)Ljava/util/Optional;	a	owner
		p	1		registryRef
	m	(Lakq;Lakp$b;)Ljava/util/Optional;	a	lambda$retrieveElement$6
		p	1		info
	m	(Lakq;Lakq;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveElement$10
		p	2		ops
	m	(Lakq;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$4
		p	1		ops
	m	(Lcom/mojang/serialization/Dynamic;Ljo$a;)Lcom/mojang/serialization/Dynamic;	a	injectRegistryContext
		p	0		dynamic
		p	1		registryLookup
	m	(Lcom/mojang/serialization/DynamicOps;)Lakp;	a	withParent
		p	1		delegate
	m	(Lcom/mojang/serialization/DynamicOps;Lakp$c;)Lakp;	a	create
		p	0		delegate
		p	1		registryInfoGetter
	m	(Lcom/mojang/serialization/DynamicOps;Ljo$a;)Lakp;	a	create
		p	0		delegate
		p	1		wrapperLookup
	m	(Ljava/lang/Object;)Ljm$c;	a	lambda$retrieveElement$11
		p	0		object
	m	()Ljava/lang/String;	b	lambda$retrieveGetter$3
	m	(Lakq;)Ljava/util/Optional;	b	getter
		p	1		registryRef
	m	(Ljava/lang/Object;)Ljn;	b	lambda$retrieveGetter$5
		p	0		object
	m	(Lakq;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	retrieveGetter
		p	0		registryRef
	m	(Lakq;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	retrieveElement
		p	0		key
	m	(Lakq;)Lcom/mojang/serialization/DataResult;	e	lambda$retrieveElement$8
	m	(Lakq;)Ljava/lang/String;	f	lambda$retrieveElement$7
	m	(Lakq;)Lcom/mojang/serialization/DataResult;	g	lambda$retrieveGetter$2
	m	(Lakq;)Ljava/lang/String;	h	lambda$retrieveGetter$1
	f	Lakp$c;	b	lookupProvider
c	akp$a	net/minecraft/resources/RegistryOps$a
	m	(Ljo$a;)V	<init>	<init>
		p	1		registriesLookup
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lakq;)Ljava/util/Optional;	b	createLookup
		p	1		registryRef
	f	Ljo$a;	a	lookupProvider
	f	Ljava/util/Map;	b	lookups
c	akp$b	net/minecraft/resources/RegistryOps$b
	m	()Ljp;	a	owner
	m	(Ljo$b;)Lakp$b;	a	fromRegistryLookup
		p	0		wrapper
	m	()Ljn;	b	getter
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	f	Ljp;	a	owner
	f	Ljn;	b	getter
	f	Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
c	akp$c	net/minecraft/resources/RegistryOps$c
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
c	akq	net/minecraft/resources/ResourceKey
	m	(Lakr;Lakr;)V	<init>	<init>
		p	1		registry
		p	2		value
	m	()Lakr;	a	location
	m	(Lakq$a;)Lakq;	a	lambda$create$2
		p	0		pair
	m	(Lakq;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Lakq;Lakr;)Lakq;	a	create
		p	0		registry
		p	1		value
	m	(Lakr;)Lakq;	a	createRegistryKey
		p	0		registry
	m	(Lakr;Lakr;)Lakq;	a	create
		p	0		registry
		p	1		value
	m	()Lakr;	b	registry
	m	(Lakq;)Lyx;	b	streamCodec
		p	0		registry
	m	(Lakq;Lakr;)Lakq;	b	lambda$streamCodec$1
		p	1		id
	m	()Lakq;	c	registryKey
	m	(Lakq;)Z	c	isFor
		p	1		registry
	m	(Lakq;Lakr;)Lakq;	c	lambda$codec$0
		p	1		id
	m	(Lakq;)Ljava/util/Optional;	d	cast
		p	1		registryRef
	f	Ljava/util/concurrent/ConcurrentMap;	a	VALUES
	f	Lakr;	b	registryName
	f	Lakr;	c	location
c	akq$a	net/minecraft/resources/ResourceKey$a
	m	()Lakr;	a	registry
	m	()Lakr;	b	location
	f	Lakr;	a	registry
	f	Lakr;	b	location
c	akr	net/minecraft/resources/MinecraftKey
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	()Ljava/lang/String;	a	getPath
	m	(C)Z	a	isAllowedInResourceLocation
		p	0		c
	m	(Lakr;)I	a	compareTo
	m	(Lcom/mojang/brigadier/StringReader;)Lakr;	a	read
		p	0		reader
	m	(Ljava/lang/String;)Lakr;	a	parse
		p	0		id
	m	(Ljava/lang/String;C)Lakr;	a	bySeparator
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Laa;)Ljava/lang/String;	a	lambda$read$0
	m	(Ljava/lang/String;Ljava/lang/String;)Lakr;	a	fromNamespaceAndPath
		p	0		namespace
		p	1		path
	m	(Ljava/util/function/UnaryOperator;)Lakr;	a	withPath
		p	1		pathFunction
	m	()Ljava/lang/String;	b	getNamespace
	m	(C)Z	b	validPathChar
		p	0		character
	m	(Lcom/mojang/brigadier/StringReader;)Lakr;	b	readNonEmpty
		p	0		reader
	m	(Ljava/lang/String;)Lakr;	b	withDefaultNamespace
		p	0		path
	m	(Ljava/lang/String;C)Lakr;	b	tryBySeparator
		p	0		id
		p	1		delimiter
	m	(Ljava/lang/String;Ljava/lang/String;)Lakr;	b	tryBuild
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	c	toDebugFileName
	m	(C)Z	c	validNamespaceChar
		p	0		character
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	c	readGreedy
		p	0		reader
	m	(Ljava/lang/String;)Lakr;	c	tryParse
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	c	toLanguageKey
		p	1		prefix
		p	2		suffix
	m	()Ljava/lang/String;	d	toLanguageKey
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	read
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;)Lakr;	d	createUntrusted
		p	0		namespace
		p	1		path
	m	()Ljava/lang/String;	e	toShortLanguageKey
	m	(Ljava/lang/String;)Lakr;	e	withPath
		p	1		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	e	assertValidNamespace
		p	0		namespace
		p	1		path
	m	(Ljava/lang/String;)Lakr;	f	withPrefix
		p	1		prefix
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	f	assertValidPath
		p	0		namespace
		p	1		path
	m	(Ljava/lang/String;)Lakr;	g	withSuffix
		p	1		suffix
	m	(Ljava/lang/String;)Ljava/lang/String;	h	toLanguageKey
		p	1		prefix
	m	(Ljava/lang/String;)Z	i	isValidPath
		p	0		path
	m	(Ljava/lang/String;)Z	j	isValidNamespace
		p	0		namespace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_INVALID
	f	C	d	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	e	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	f	REALMS_NAMESPACE
	f	Z	g	$assertionsDisabled
	f	Ljava/lang/String;	h	namespace
	f	Ljava/lang/String;	i	path
c	akr$a	net/minecraft/resources/MinecraftKey$a
	m	(Lakr;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;	a	serialize
	m	(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lakr;	a	deserialize
c	akt	net/minecraft/server/DispenserRegistry
	m	()V	a	bootStrap
	m	(Lakr;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
		p	0		stat
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
		p	0		registry
		p	1		keyExtractor
		p	2		translationKeys
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
		p	0		str
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
		p	0		translations
	m	(Ljava/util/function/Function;Ltw;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
		p	3		object
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
		p	0		callerGetter
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/lang/String;)V	b	lambda$validate$3
		p	0		key
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
		p	0		callerGetter
	m	()V	c	validate
	m	()V	d	wrapStreams
	m	()Ljava/lang/String;	e	lambda$validate$2
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Ljava/util/concurrent/atomic/AtomicLong;	b	bootstrapDuration
	f	Z	c	isBootstrapped
	f	Lorg/slf4j/Logger;	d	LOGGER
c	akt$1	net/minecraft/server/DispenserRegistry$1
	m	(Ldcs$e;Ldcs$f;)V	a	visit
		p	1		key
		p	2		type
	f	Ltw;	a	val$language
	f	Ljava/util/Set;	b	val$missing
c	aku	aku
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
	m	(Ljava/lang/Exception;)Laku;	a	forException
		p	0		cause
	m	(Ljava/lang/String;)V	a	prependJsonKey
		p	1		key
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
		p	1		fileName
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
c	aku$a	aku$a
	m	()Ljava/lang/String;	a	getFilename
	m	(Ljava/lang/String;)V	a	addJsonKey
		p	1		key
	m	()Ljava/lang/String;	b	getJsonKeys
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
c	akv	net/minecraft/server/ServerCommand
	m	(Ljava/lang/String;Let;)V	<init>	<init>
		p	1		command
		p	2		commandSource
	f	Ljava/lang/String;	a	msg
	f	Let;	b	source
c	akw	net/minecraft/server/DebugOutputStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Lorg/slf4j/Logger;	b	LOGGER
c	akx	net/minecraft/server/EULA
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		eulaFile
	m	()Z	a	hasAgreedToEULA
	m	()Z	b	readFile
	m	()V	c	saveDefaults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
c	aky	net/minecraft/server/RedirectStream
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
		p	1		name
		p	2		out
	m	(Ljava/lang/String;)V	a	logLine
		p	1		message
	f	Ljava/lang/String;	a	name
	f	Lorg/slf4j/Logger;	b	LOGGER
c	akz	net/minecraft/server/AdvancementDataPlayer
	m	(Lcom/mojang/datafixers/DataFixer;Laur;Lale;Ljava/nio/file/Path;Laqv;)V	<init>	<init>
		p	1		dataFixer
		p	2		playerManager
		p	3		advancementLoader
		p	4		filePath
		p	5		owner
	m	()V	a	stopListening
	m	(Lag;)V	a	setSelectedTab
		p	1		advancement
	m	(Lag;Lai;)V	a	startProgress
		p	1		advancement
		p	2		progress
	m	(Lag;Las;)V	a	lambda$award$2
		p	2		display
	m	(Lag;Ljava/lang/String;)Z	a	award
		p	1		advancement
		p	2		criterionName
	m	(Lag;Ljava/lang/String;Lao;)V	a	registerListener
		p	1		advancement
		p	2		id
		p	3		criterion
	m	(Lah;)Z	a	lambda$updateTreeVisibility$3
		p	1		advancement
	m	(Lah;Ljava/util/Set;Ljava/util/Set;)V	a	updateTreeVisibility
		p	1		root
		p	2		added
		p	3		removed
	m	(Lale;)V	a	reload
		p	1		advancementLoader
	m	(Lale;Lakr;Lai;)V	a	lambda$applyFrom$0
		p	2		id
		p	3		progress
	m	(Lale;Lakz$a;)V	a	applyFrom
		p	1		loader
		p	2		progressMap
	m	(Laqv;)V	a	setPlayer
		p	1		owner
	m	(Ljava/util/Map;Lag;Lai;)V	a	lambda$asData$1
		p	1		entry
		p	2		progress
	m	(Ljava/util/Set;Ljava/util/Set;Lah;Z)V	a	lambda$updateTreeVisibility$4
		p	3		advancement
		p	4		displayed
	m	()V	b	save
	m	(Lag;)Lai;	b	getOrStartProgress
		p	1		advancement
	m	(Lag;Ljava/lang/String;)Z	b	revoke
		p	1		advancement
		p	2		criterionName
	m	(Lag;Ljava/lang/String;Lao;)V	b	removeListener
		p	1		advancement
		p	2		id
		p	3		criterion
	m	(Lale;)V	b	registerListeners
		p	1		advancementLoader
	m	(Laqv;)V	b	flushDirty
		p	1		player
	m	()Lakz$a;	c	asData
	m	(Lag;)V	c	markForVisibilityUpdate
		p	1		advancement
	m	(Lale;)V	c	checkForAutomaticTriggers
		p	1		advancementLoader
	m	(Lag;)V	d	registerListeners
		p	1		advancement
	m	(Lale;)V	d	load
		p	1		advancementLoader
	m	(Lag;)V	e	unregisterListeners
		p	1		advancement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Laur;	c	playerList
	f	Ljava/nio/file/Path;	d	playerSavePath
	f	Lal;	e	tree
	f	Ljava/util/Map;	f	progress
	f	Ljava/util/Set;	g	visible
	f	Ljava/util/Set;	h	progressChanged
	f	Ljava/util/Set;	i	rootsToUpdate
	f	Laqv;	j	player
	f	Lag;	k	lastSelectedTab
	f	Z	l	isFirstPacket
	f	Lcom/mojang/serialization/Codec;	m	codec
c	akz$a	net/minecraft/server/AdvancementDataPlayer$a
	m	()Ljava/util/Map;	a	map
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
		p	1		consumer
	m	(Ljava/util/function/BiConsumer;Ljava/util/Map$Entry;)V	a	lambda$forEach$0
		p	1		entry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	map
c	ala	net/minecraft/server/RegistryLayer
	m	()Ljt;	a	createRegistryAccess
	m	()[Lala;	b	$values
	f	Lala;	a	STATIC
	f	Lala;	b	WORLDGEN
	f	Lala;	c	DIMENSIONS
	f	Lala;	d	RELOADABLE
	f	Ljava/util/List;	e	VALUES
	f	Lka$b;	f	STATIC_ACCESS
	f	[Lala;	g	$VALUES
c	alb	net/minecraft/server/ReloadableServerRegistries
	m	(Lakp;Laue;Ljava/util/concurrent/Executor;Lert;)Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$0
		p	3		type
	m	(Lert;Lakp;Laue;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleElementParse
		p	0		type
		p	1		ops
		p	2		resourceManager
		p	3		prepareExecutor
	m	(Lert;Lakp;Lki;Lakr;Lcom/google/gson/JsonElement;)V	a	lambda$scheduleElementParse$3
		p	3		id
		p	4		json
	m	(Lert;Laue;Lakp;)Lki;	a	lambda$scheduleElementParse$4
	m	(Lert;Lerx;Ljm$c;)V	a	lambda$validateRegistry$7
		p	2		entry
	m	(Lerx;Lert;Lka;)V	a	validateRegistry
		p	0		reporter
		p	1		lootDataType
		p	2		registryManager
	m	(Lerx;Lka$b;Lert;)V	a	lambda$apply$5
		p	2		lootDataType
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	lambda$apply$6
		p	0		path
		p	1		message
	m	(Ljt;Laue;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	0		dynamicRegistries
		p	1		resourceManager
		p	2		prepareExecutor
	m	(Ljt;Ljava/util/List;)Ljt;	a	apply
		p	0		dynamicRegistries
		p	1		registries
	m	(Lki;Lert;Lakr;Ljava/lang/Object;)V	a	lambda$scheduleElementParse$2
		p	3		value
	m	(Ljt;Ljava/util/List;)Ljt;	b	createUpdatedRegistries
		p	0		dynamicRegistries
		p	1		registries
	m	(Ljt;Ljava/util/List;)Ljt;	c	lambda$reload$1
		p	1		registries
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljy;	c	DEFAULT_REGISTRATION_INFO
c	alb$a	net/minecraft/server/ReloadableServerRegistries$a
	m	(Lka;)V	<init>	<init>
		p	1		registryManager
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	f	Lka;	a	registryAccess
c	alb$b	net/minecraft/server/ReloadableServerRegistries$b
	m	(Lka$b;)V	<init>	<init>
		p	1		registryManager
	m	()Lka$b;	a	get
	m	(Lakq;)Ljava/util/Collection;	a	getKeys
		p	1		registryRef
	m	(Lakq;Ljo$b;)Ljava/util/Optional;	a	lambda$getLootTable$2
		p	1		registryEntryLookup
	m	(Ljm$c;)Lakr;	a	lambda$getKeys$0
		p	0		entry
	m	(Ljz;)Ljava/util/stream/Stream;	a	lambda$getKeys$1
		p	0		registry
	m	()Ljn$a;	b	lookup
	m	(Lakq;)Lerw;	b	getLootTable
		p	1		key
	f	Lka$b;	a	registries
c	alc	net/minecraft/server/DataPackResources
	m	(Lka$b;Lcpl;Leu$a;I)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
	m	()Lalf;	a	getFunctionLibrary
	m	(Lakq;Ljava/util/Map$Entry;)Lawu;	a	lambda$updateRegistryTags$4
		p	1		entry
	m	(Lalc;Ljava/lang/Object;)Lalc;	a	lambda$loadResources$1
		p	1		void_
	m	(Lalc;Ljava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$loadResources$0
		p	1		void_
		p	2		throwable
	m	(Laue;Ljt;Lcpl;Leu$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
		p	0		manager
		p	1		dynamicRegistries
		p	2		enabledFeatures
		p	3		environment
		p	4		functionPermissionLevel
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Laww$a;)V	a	lambda$updateRegistryTags$3
		p	1		tags
	m	(Lcpl;Leu$a;ILaue;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljt;)Ljava/util/concurrent/CompletionStage;	a	lambda$loadResources$2
		p	6		reloadedDynamicRegistries
	m	(Ljava/util/Map$Entry;)Ljava/util/List;	a	lambda$updateRegistryTags$5
		p	0		entry
	m	(Lka;Laww$a;)V	a	updateRegistryTags
		p	0		dynamicRegistryManager
		p	1		tags
	m	()Lalb$b;	b	fullRegistries
	m	()Lczd;	c	getRecipeManager
	m	()Leu;	d	getCommands
	m	()Lale;	e	getAdvancements
	m	()Ljava/util/List;	f	listeners
	m	()V	g	updateRegistryTags
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Lalb$b;	c	fullRegistryHolder
	f	Lalc$a;	d	registryLookup
	f	Leu;	e	commands
	f	Lczd;	f	recipes
	f	Laww;	g	tagManager
	f	Lale;	h	advancements
	f	Lalf;	i	functionLibrary
c	alc$a	net/minecraft/server/DataPackResources$a
	m	(Lka;)V	<init>	<init>
		p	1		dynamicRegistryManager
	m	()Ljava/util/stream/Stream;	a	listRegistries
	m	(Lakq;)Ljava/util/Optional;	a	lookup
		p	1		registryRef
	m	(Lalc$b;)V	a	missingTagAccessPolicy
		p	1		entryListCreationPolicy
	m	(Ljo$b;Ljo$b;)Ljo$b;	a	createDispatchedLookup
		p	1		readOnlyWrapper
		p	2		tagCreatingWrapper
	m	(Ljz;)Ljo$b;	a	lambda$lookup$0
		p	1		registry
	f	Lka;	a	registryAccess
	f	Lalc$b;	b	missingTagAccessPolicy
c	alc$a$1	net/minecraft/server/DataPackResources$a$1
	m	()Ljo$b;	a	parent
	f	Ljo$b;	a	val$originalLookup
	f	Ljo$b;	b	val$originalTagAddingLookup
	f	Lalc$a;	c	this$0
c	alc$b	net/minecraft/server/DataPackResources$b
	m	()[Lalc$b;	a	$values
	f	Lalc$b;	a	CREATE_NEW
	f	Lalc$b;	b	FAIL
	f	[Lalc$b;	c	$VALUES
c	ald	net/minecraft/server/CancelledPacketHandleException
	f	Lald;	a	RUNNING_ON_DIFFERENT_THREAD
c	ale	net/minecraft/server/AdvancementDataWorld
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	()Lal;	a	tree
	m	(Lakp;Lcom/google/common/collect/ImmutableMap$Builder;Lakr;Lcom/google/gson/JsonElement;)V	a	lambda$apply$0
		p	3		id
		p	4		json
	m	(Lakr;)Lag;	a	get
		p	1		id
	m	(Lakr;Laf;)V	a	validate
		p	1		id
		p	2		advancement
	m	(Lakr;Ljava/lang/String;)V	a	lambda$validate$1
	m	(Ljava/lang/Object;Laue;Lbnf;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Laue;Lbnf;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	()Ljava/util/Collection;	b	getAllAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/util/Map;	c	advancements
	f	Lal;	d	tree
	f	Ljo$a;	e	registries
c	alf	net/minecraft/server/CustomFunctionManager
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
		p	1		level
		p	2		commandDispatcher
	m	()Ljava/util/Map;	a	getFunctions
	m	(Lakr;)Ljava/util/Optional;	a	getFunction
		p	1		id
	m	(Lakr;Lcom/google/common/collect/ImmutableMap$Builder;Lig;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$5
		p	2		function
		p	3		ex
	m	(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Lauc;)Ljava/util/List;	a	readLines
		p	0		resource
	m	(Laue;)Ljava/util/Map;	a	lambda$reload$1
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lakr;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$6
		p	1		id
		p	2		functionFuture
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$7
		p	1		intermediate
	m	(Ljava/util/Map$Entry;Lakr;Let;)Lig;	a	lambda$reload$2
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$3
		p	1		unused
		p	2		ex
	m	(Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$4
		p	2		functions
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(Lakr;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Laue;)Ljava/util/Map;	b	lambda$reload$0
	f	Lakq;	a	TYPE_KEY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lakk;	c	LISTER
	f	Ljava/util/Map;	d	functions
	f	Lawv;	e	tagsLoader
	f	Ljava/util/Map;	f	tags
	f	I	g	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	h	dispatcher
c	alg	net/minecraft/server/CustomFunctionData
	m	(Lnet/minecraft/server/MinecraftServer;Lalf;)V	<init>	<init>
		p	1		server
		p	2		loader
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lakr;)Ljava/util/Optional;	a	get
		p	1		id
	m	(Lalf;)V	a	replaceLibrary
		p	1		loader
	m	(Lig;)Ljava/lang/String;	a	lambda$execute$0
	m	(Lig;Let;)V	a	execute
		p	1		function
		p	2		source
	m	(Lii;Let;Lhs;)V	a	lambda$execute$1
		p	2		context
	m	(Ljava/util/Collection;Lakr;)V	a	executeTagFunctions
		p	1		functions
		p	2		label
	m	()V	b	tick
	m	(Lakr;)Ljava/util/Collection;	b	getTag
		p	1		id
	m	(Lalf;)V	b	postReload
		p	1		loader
	m	()Let;	c	getGameLoopSender
	m	()Ljava/lang/Iterable;	d	getFunctionNames
	m	()Ljava/lang/Iterable;	e	getTagNames
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lakr;	b	TICK_FUNCTION_TAG
	f	Lakr;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ljava/util/List;	e	ticking
	f	Z	f	postReload
	f	Lalf;	g	library
c	alh	net/minecraft/server/ServerInfo
	m	()Ljava/lang/String;	L	getServerVersion
	m	()I	M	getPlayerCount
	m	()I	N	getMaxPlayers
	m	()Ljava/lang/String;	af	getMotd
c	ali	net/minecraft/server/IMinecraftServer
	m	()[Ljava/lang/String;	O	getPlayerNames
	m	()Lapo;	a	getProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	h	getServerName
	m	()Ljava/lang/String;	s	getLevelIdName
	m	()Ljava/lang/String;	u	getPluginNames
c	alj	net/minecraft/server/ServerLinks
	m	()Z	a	isEmpty
	m	(Lalj$a;)Lalj$c;	a	lambda$untrust$3
		p	0		entry
	m	(Lalj$b;)Ljava/util/Optional;	a	findKnownType
		p	1		known
	m	(Lalj$b;Lalj$a;)Z	a	lambda$findKnownType$2
		p	1		entry
	m	(Lalj$b;Lalj$b;)Ljava/lang/Boolean;	a	lambda$findKnownType$0
		p	1		type
	m	(Lwz;)Ljava/lang/Boolean;	a	lambda$findKnownType$1
		p	0		text
	m	()Ljava/util/List;	b	untrust
	m	()Ljava/util/List;	c	entries
	f	Lalj;	a	EMPTY
	f	Lyx;	b	TYPE_STREAM_CODEC
	f	Lyx;	c	UNTRUSTED_LINKS_STREAM_CODEC
	f	Ljava/util/List;	d	entries
c	alj$a	net/minecraft/server/ServerLinks$Entry
	m	()Lwz;	a	displayName
	m	(Lalj$b;Ljava/net/URI;)Lalj$a;	a	knownType
		p	0		known
		p	1		link
	m	(Lwz;)Lwz;	a	lambda$displayName$0
		p	0		text
	m	(Lwz;Ljava/net/URI;)Lalj$a;	a	custom
		p	0		name
		p	1		link
	m	()Lcom/mojang/datafixers/util/Either;	b	type
	m	()Ljava/net/URI;	c	link
	f	Lcom/mojang/datafixers/util/Either;	a	type
	f	Ljava/net/URI;	b	link
c	alj$b	net/minecraft/server/ServerLinks$KnownLinkType
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()Lwz;	a	displayName
	m	(Lalj$b;)I	a	lambda$static$1
		p	0		known
	m	(Ljava/net/URI;)Lalj$a;	a	create
		p	1		link
	m	()[Lalj$b;	b	$values
	m	(Lalj$b;)I	b	lambda$static$0
		p	0		known
	f	Lalj$b;	a	BUG_REPORT
	f	Lalj$b;	b	COMMUNITY_GUIDELINES
	f	Lalj$b;	c	SUPPORT
	f	Lalj$b;	d	STATUS
	f	Lalj$b;	e	FEEDBACK
	f	Lalj$b;	f	COMMUNITY
	f	Lalj$b;	g	WEBSITE
	f	Lalj$b;	h	FORUMS
	f	Lalj$b;	i	NEWS
	f	Lalj$b;	j	ANNOUNCEMENTS
	f	Lyx;	k	STREAM_CODEC
	f	Ljava/util/function/IntFunction;	l	BY_ID
	f	I	m	id
	f	Ljava/lang/String;	n	name
	f	[Lalj$b;	o	$VALUES
c	alj$c	net/minecraft/server/ServerLinks$UntrustedEntry
	m	()Lcom/mojang/datafixers/util/Either;	a	type
	m	()Ljava/lang/String;	b	link
	f	Lyx;	a	STREAM_CODEC
	f	Lcom/mojang/datafixers/util/Either;	b	type
	f	Ljava/lang/String;	c	link
c	alk	net/minecraft/server/ScoreboardServer
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	setDirty
	m	(Lexx;Lexy;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Lexy;)V	a	onObjectiveAdded
		p	1		objective
	m	(Leyb;)V	a	onTeamAdded
		p	1		team
	m	(Leyf;)V	a	onPlayerRemoved
		p	1		scoreHolder
	m	(Leyf;Lexy;)V	a	onScoreLockChanged
		p	1		scoreHolder
		p	2		objective
	m	(Leyf;Lexy;Leyd;)V	a	onScoreChanged
		p	1		scoreHolder
		p	2		objective
		p	3		score
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
		p	1		listener
	m	(Ljava/lang/String;Leyb;)Z	a	addPlayerToTeam
		p	1		scoreHolderName
		p	2		team
	m	(Lub;Ljo$a;)Leyh;	a	createData
		p	1		nbt
		p	2		registryLookup
	m	()Leql$a;	b	dataFactory
	m	(Lexy;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leyb;)V	b	onTeamChanged
		p	1		team
	m	(Leyf;Lexy;)V	b	onPlayerScoreRemoved
		p	1		scoreHolder
		p	2		objective
	m	(Ljava/lang/String;Leyb;)V	b	removePlayerFromTeam
		p	1		scoreHolderName
		p	2		team
	m	(Lexy;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leyb;)V	c	onTeamRemoved
		p	1		team
	m	(Lexy;)Ljava/util/List;	d	getStartTrackingPackets
		p	1		objective
	m	(Lexy;)V	e	startTrackingObjective
		p	1		objective
	m	(Lexy;)Ljava/util/List;	f	getStopTrackingPackets
		p	1		objective
	m	(Lexy;)V	g	stopTrackingObjective
		p	1		objective
	m	()Leyh;	h	createData
	m	(Lexy;)I	h	getObjectiveDisplaySlotCount
		p	1		objective
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljava/util/Set;	c	trackedObjectives
	f	Ljava/util/List;	d	dirtyListeners
c	alk$a	net/minecraft/server/ScoreboardServer$Action
	m	()[Lalk$a;	a	$values
	f	Lalk$a;	a	CHANGE
	f	Lalk$a;	b	REMOVE
	f	[Lalk$a;	c	$VALUES
c	all	net/minecraft/server/ServerTickRateManager
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Z	a	isSprinting
	m	(F)V	a	setTickRate
		p	1		tickRate
	m	(I)Z	a	stepGameIfPaused
		p	1		ticks
	m	(ILjava/lang/String;)Lwz;	a	lambda$finishTickSprint$0
	m	(Laqv;)V	a	updateJoiningPlayer
		p	1		player
	m	(Z)V	a	setFrozen
		p	1		frozen
	m	()Z	b	stopStepping
	m	(I)Z	b	requestGameToSprint
		p	1		ticks
	m	()Z	c	stopSprinting
	m	()Z	d	checkShouldSprintThisTick
	m	()V	e	endTickWork
	m	()V	n	updateStateToClients
	m	()V	o	updateStepTicks
	m	()V	p	finishTickSprint
	f	J	g	remainingSprintTicks
	f	J	h	sprintTickStartTime
	f	J	i	sprintTimeSpend
	f	J	j	scheduledCurrentSprintTicks
	f	Z	k	previousIsFrozen
	f	Lnet/minecraft/server/MinecraftServer;	l	server
c	alm	net/minecraft/server/Services
	m	()Lazb;	a	profileKeySignatureValidator
	m	(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lalm;	a	create
		p	0		authenticationService
		p	1		rootDirectory
	m	()Z	b	canValidateProfileKeys
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	m	()Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	d	servicesKeySet
	m	()Lcom/mojang/authlib/GameProfileRepository;	e	profileRepository
	m	()Laun;	f	profileCache
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	f	Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	b	servicesKeySet
	f	Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	f	Laun;	d	profileCache
	f	Ljava/lang/String;	e	USERID_CACHE_FILE
c	aln	net/minecraft/server/TickTask
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		creationTicks
		p	2		runnable
	m	()I	a	getTick
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
c	alo	net/minecraft/server/WorldLoader
	m	(Lalo$c;Lalo$f;Lalo$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
		p	0		serverConfig
		p	1		loadContextSupplier
		p	2		saveApplierFactory
		p	3		prepareExecutor
		p	4		applyExecutor
	m	(Lalo$e;Latu;Ljt;Lalo$b;Lalc;)Ljava/lang/Object;	a	lambda$load$1
		p	4		dataPackContents
	m	(Latu;Lalc;Ljava/lang/Throwable;)V	a	lambda$load$0
		p	1		dataPackContents
		p	2		throwable
	m	(Laue;Ljt;Lala;Ljava/util/List;)Lka$b;	a	loadLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	m	(Laue;Ljt;Lala;Ljava/util/List;)Ljt;	b	loadAndReplaceLayer
		p	0		resourceManager
		p	1		combinedDynamicRegistries
		p	2		type
		p	3		entries
	f	Lorg/slf4j/Logger;	a	LOGGER
c	alo$a	net/minecraft/server/WorldLoader$a
	m	()Laue;	a	resources
	m	()Lddr;	b	dataConfiguration
	m	()Lka$b;	c	datapackWorldgen
	m	()Lka$b;	d	datapackDimensions
	f	Laue;	a	resources
	f	Lddr;	b	dataConfiguration
	f	Lka$b;	c	datapackWorldgen
	f	Lka$b;	d	datapackDimensions
c	alo$b	net/minecraft/server/WorldLoader$b
	m	()Ljava/lang/Object;	a	cookie
	m	()Lka$b;	b	finalDimensions
	f	Ljava/lang/Object;	a	cookie
	f	Lka$b;	b	finalDimensions
c	alo$c	net/minecraft/server/WorldLoader$c
	m	()Lalo$d;	a	packConfig
	m	()Leu$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
	f	Lalo$d;	a	packConfig
	f	Leu$a;	b	commandSelection
	f	I	c	functionCompilationLevel
c	alo$d	net/minecraft/server/WorldLoader$d
	m	()Lcom/mojang/datafixers/util/Pair;	a	createResourceManager
	m	()Latp;	b	packRepository
	m	()Lddr;	c	initialDataConfig
	m	()Z	d	safeMode
	m	()Z	e	initMode
	f	Latp;	a	packRepository
	f	Lddr;	b	initialDataConfig
	f	Z	c	safeMode
	f	Z	d	initMode
c	alo$e	net/minecraft/server/WorldLoader$e
	m	(Latu;Lalc;Ljt;Ljava/lang/Object;)Ljava/lang/Object;	create	create
		p	1		resourceManager
		p	2		dataPackContents
		p	3		combinedDynamicRegistries
		p	4		loadContext
c	alo$f	net/minecraft/server/WorldLoader$f
	m	(Lalo$a;)Lalo$b;	get	get
		p	1		context
c	alp	net/minecraft/server/WorldStem
	m	()Latu;	a	resourceManager
	m	()Lalc;	b	dataPackResources
	m	()Ljt;	c	registries
	m	()Lerl;	d	worldData
	f	Latu;	a	resourceManager
	f	Lalc;	b	dataPackResources
	f	Ljt;	c	registries
	f	Lerl;	d	worldData
c	alq	net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	m	(Laf;Z)Lalq$b;	a	evaluateVisibilityRule
		p	0		advancement
		p	1		force
	m	(Lah;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lalq$a;)Z	a	evaluateVisibility
		p	0		advancement
		p	1		statuses
		p	2		donePredicate
		p	3		consumer
	m	(Lah;Ljava/util/function/Predicate;Lalq$a;)V	a	evaluateVisibility
		p	0		advancement
		p	1		donePredicate
		p	2		consumer
	m	(Lit/unimi/dsi/fastutil/Stack;)Z	a	evaluateVisiblityForUnfinishedNode
		p	0		statuses
	f	I	a	VISIBILITY_DEPTH
c	alq$a	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$a
	m	(Lah;Z)V	accept	accept
		p	1		advancement
		p	2		shouldDisplay
c	alq$b	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$b
	m	()[Lalq$b;	a	$values
	f	Lalq$b;	a	SHOW
	f	Lalq$b;	b	HIDE
	f	Lalq$b;	c	NO_CHANGE
	f	[Lalq$b;	d	$VALUES
c	als	net/minecraft/server/bossevents/BossBattleCustom
	m	(Lakr;Lwz;)V	<init>	<init>
		p	1		id
		p	2		displayName
	m	()Lakr;	a	getTextId
	m	(I)V	a	setValue
		p	1		value
	m	(Laqv;)V	a	addPlayer
		p	1		player
	m	(Ljava/util/Collection;)Z	a	setPlayers
		p	1		players
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
		p	1		uuid
	m	(Ljo$a;)Lub;	a	save
	m	(Lub;Lakr;Ljo$a;)Lals;	a	load
		p	0		nbt
		p	1		id
	m	(Lxw;)Lxw;	a	lambda$getDisplayName$0
		p	1		style
	m	()V	b	removeAllPlayers
	m	(I)V	b	setMax
		p	1		maxValue
	m	(Laqv;)V	b	removePlayer
		p	1		player
	m	()I	c	getValue
	m	(Laqv;)V	c	onPlayerConnect
		p	1		player
	m	()I	d	getMax
	m	(Laqv;)V	d	onPlayerDisconnect
		p	1		player
	m	()Lwz;	e	getDisplayName
	f	Lakr;	h	id
	f	Ljava/util/Set;	i	players
	f	I	j	value
	f	I	k	max
c	alt	net/minecraft/server/bossevents/BossBattleCustomData
	m	()Ljava/util/Collection;	a	getIds
	m	(Lakr;)Lals;	a	get
		p	1		id
	m	(Lakr;Lwz;)Lals;	a	create
		p	1		id
		p	2		displayName
	m	(Lals;)V	a	remove
		p	1		bossBar
	m	(Laqv;)V	a	onPlayerConnect
		p	1		player
	m	(Ljo$a;)Lub;	a	save
	m	(Lub;Ljo$a;)V	a	load
		p	1		nbt
	m	()Ljava/util/Collection;	b	getEvents
	m	(Laqv;)V	b	onPlayerDisconnect
		p	1		player
	f	Ljava/util/Map;	a	events
c	alv	alv
	m	(Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		minecraftServer
	m	()V	a	start
	m	(Lalv$a;)V	a	lambda$handleTeleport$0
		p	1		pos
	m	(Ljava/lang/String;)V	a	handleMessage
		p	1		message
	m	(Ljava/util/Scanner;)V	a	handleTeleport
		p	1		scanner
	m	()V	b	stop
	m	(Ljava/lang/String;)V	b	executeCommand
		p	1		command
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
		p	1		scanner
	m	()V	c	run
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
c	alv$a	alv$a
	m	(Lakq;Lexc;Lexb;)V	<init>	<init>
		p	1		dimension
		p	2		pos
		p	3		rot
	m	()Lakq;	a	level
	m	()Lexc;	b	pos
	m	()Lexb;	c	rot
	f	Lakq;	a	level
	f	Lexc;	b	pos
	f	Lexb;	c	rot
c	alw	alw
	m	(Ljava/lang/String;ILaur;I)V	<init>	<init>
		p	1		ip
		p	2		port
		p	3		playerManager
		p	4		interval
	m	()V	a	start
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	b	stop
	m	()V	c	runSender
	m	()V	d	runAcceptor
	m	()Lalw$a;	e	getPlayerPosition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Laur;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
c	alw$a	alw$a
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Ljava/lang/String;	g	format
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
c	aly	net/minecraft/server/commands/CommandAdvancement
	m	(Lah;Ljava/util/List;)V	a	addChildren
		p	0		parent
		p	1		childList
	m	(Laly$a;Ljava/lang/String;Lag;Ljava/util/Collection;)Lwz;	a	lambda$performCriterion$23
	m	(Laly$a;Ljava/util/Collection;Ljava/util/Collection;)Lwz;	a	lambda$perform$21
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lag;Laly$b;)Ljava/util/List;	a	getAdvancements
		p	0		context
		p	1		advancement
		p	2		selection
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$12
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$3
		p	0		source
	m	(Let;Ljava/util/Collection;Laly$a;Lag;Ljava/lang/String;)I	a	performCriterion
		p	0		source
		p	1		targets
		p	2		operation
		p	3		advancement
		p	4		criterion
	m	(Let;Ljava/util/Collection;Laly$a;Ljava/util/Collection;)I	a	perform
		p	0		source
		p	1		targets
		p	2		operation
		p	3		selection
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		message
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		advancement
		p	1		criterion
	m	(Laly$a;Ljava/lang/String;Lag;Ljava/util/Collection;)Lwz;	b	lambda$performCriterion$22
	m	(Laly$a;Ljava/util/Collection;Ljava/util/Collection;)Lwz;	b	lambda$perform$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$5
		p	0		context
		p	1		builder
	m	(Laly$a;Ljava/util/Collection;Ljava/util/Collection;)Lwz;	c	lambda$perform$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$2
		p	0		context
		p	1		builder
	m	(Laly$a;Ljava/util/Collection;Ljava/util/Collection;)Lwz;	d	lambda$perform$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NO_ACTION_PERFORMED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_CRITERION_NOT_FOUND
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_ADVANCEMENTS
c	aly$a	net/minecraft/server/commands/CommandAdvancement$Action
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getKey
	m	(Laqv;Lag;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laqv;Lag;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
	m	(Laqv;Ljava/lang/Iterable;)I	a	perform
		p	1		player
		p	2		advancements
	m	()[Laly$a;	b	$values
	f	Laly$a;	a	GRANT
	f	Laly$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Laly$a;	d	$VALUES
c	aly$a$1	net/minecraft/server/commands/CommandAdvancement$Action$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Laqv;Lag;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laqv;Lag;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aly$a$2	net/minecraft/server/commands/CommandAdvancement$Action$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Laqv;Lag;)Z	a	perform
		p	1		player
		p	2		advancement
	m	(Laqv;Lag;Ljava/lang/String;)Z	a	performCriterion
		p	1		player
		p	2		advancement
		p	3		criterion
c	aly$b	net/minecraft/server/commands/CommandAdvancement$Filter
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		before
		p	4		after
	m	()[Laly$b;	a	$values
	f	Laly$b;	a	ONLY
	f	Laly$b;	b	THROUGH
	f	Laly$b;	c	FROM
	f	Laly$b;	d	UNTIL
	f	Laly$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Laly$b;	h	$VALUES
c	alz	net/minecraft/server/commands/CommandAttribute
	m	(Lakr;Ljm;Lbsr;)Lwz;	a	lambda$removeModifier$21
	m	(Lakr;Ljm;Lbsr;D)Lwz;	a	lambda$getAttributeModifier$18
	m	(Lbsr;)Lbtn;	a	getLivingEntity
		p	0		entity
	m	(Lbsr;Ljm;)Lbus;	a	getAttributeInstance
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
		p	0		context
	m	(Let;)Z	a	lambda$register$4
		p	0		source
	m	(Let;Lbsr;Ljm;D)I	a	getAttributeValue
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Let;Lbsr;Ljm;Lakr;)I	a	removeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		id
	m	(Let;Lbsr;Ljm;Lakr;D)I	a	getAttributeModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		id
		p	4		multiplier
	m	(Let;Lbsr;Ljm;Lakr;DLbuu$a;)I	a	addModifier
		p	0		source
		p	1		target
		p	2		attribute
		p	3		id
		p	4		value
		p	6		operation
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		entityName
		p	1		attributeName
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Ljm;)Lwz;	a	getAttributeDescription
		p	0		attribute
	m	(Ljm;Lbsr;D)Lwz;	a	lambda$setAttributeBase$19
	m	(Lakr;Ljm;Lbsr;)Lwz;	b	lambda$addModifier$20
	m	(Lbsr;Ljm;)Lbtn;	b	getEntityWithAttribute
		p	0		entity
		p	1		attribute
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
		p	0		context
	m	(Let;Lbsr;Ljm;D)I	b	getAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		multiplier
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		entityName
		p	1		attributeName
		p	2		uuid
	m	(Ljm;Lbsr;D)Lwz;	b	lambda$getAttributeBase$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
		p	0		context
	m	(Let;Lbsr;Ljm;D)I	c	setAttributeBase
		p	0		source
		p	1		target
		p	2		attribute
		p	3		value
	m	(Ljm;Lbsr;D)Lwz;	c	lambda$getAttributeValue$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
c	ama	net/minecraft/server/commands/CommandBanIp
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/lang/String;Lwz;)I	a	banIpOrName
		p	0		source
		p	1		target
		p	2		reason
	m	(Ljava/lang/String;Laup;)Lwz;	a	lambda$banIp$3
	m	(Ljava/util/List;)Lwz;	a	lambda$banIp$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Let;Ljava/lang/String;Lwz;)I	b	banIp
		p	0		source
		p	1		targetIp
		p	2		reason
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_BANNED
c	amb	net/minecraft/server/commands/CommandBanList
	m	()Lwz;	a	lambda$showList$4
	m	(Laum;)Lwz;	a	lambda$showList$6
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	showList
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Lwz;	a	lambda$showList$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	amc	net/minecraft/server/commands/CommandBan
	m	(Lcom/mojang/authlib/GameProfile;Lauz;)Lwz;	a	lambda$banPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;Lwz;)I	a	banPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
c	amd	net/minecraft/server/commands/CommandBossBar
	m	()Lwz;	a	lambda$listBars$44
	m	(Lals;)Lwz;	a	lambda$removeBar$47
	m	(Lals;I)Lwz;	a	lambda$setMax$38
	m	(Lals;Ljava/util/Collection;)Lwz;	a	lambda$setPlayers$43
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lals;	a	getBossBar
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
		p	0		context
		p	1		builder
	m	(Let;)I	a	listBars
		p	0		source
	m	(Let;Lakr;Lwz;)I	a	createBar
		p	0		source
		p	1		name
		p	2		displayName
	m	(Let;Lals;)I	a	getValue
		p	0		source
		p	1		bossBar
	m	(Let;Lals;I)I	a	setValue
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Let;Lals;Lbqh$a;)I	a	setColor
		p	0		source
		p	1		bossBar
		p	2		color
	m	(Let;Lals;Lbqh$b;)I	a	setStyle
		p	0		source
		p	1		bossBar
		p	2		style
	m	(Let;Lals;Ljava/util/Collection;)I	a	setPlayers
		p	0		source
		p	1		bossBar
		p	2		players
	m	(Let;Lals;Lwz;)I	a	setName
		p	0		source
		p	1		bossBar
		p	2		name
	m	(Let;Lals;Z)I	a	setVisible
		p	0		source
		p	1		bossBar
		p	2		visible
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		name
	m	(Ljava/util/Collection;)Lwz;	a	lambda$listBars$45
	m	(Lals;)Lwz;	b	lambda$createBar$46
	m	(Lals;I)Lwz;	b	lambda$setValue$37
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$28
		p	0		context
	m	(Let;)Z	b	lambda$register$3
		p	0		source
	m	(Let;Lals;)I	b	getMax
		p	0		source
		p	1		bossBar
	m	(Let;Lals;I)I	b	setMax
		p	0		source
		p	1		bossBar
		p	2		value
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		name
	m	(Lals;)Lwz;	c	lambda$setPlayers$42
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$27
		p	0		context
	m	(Let;Lals;)I	c	getVisible
		p	0		source
		p	1		bossBar
	m	(Lals;)Lwz;	d	lambda$setName$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$26
		p	0		context
	m	(Let;Lals;)I	d	getPlayers
		p	0		source
		p	1		bossBar
	m	(Lals;)Lwz;	e	lambda$setStyle$40
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$25
		p	0		context
	m	(Let;Lals;)I	e	removeBar
		p	0		source
		p	1		bossBar
	m	(Lals;)Lwz;	f	lambda$setColor$39
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$24
		p	0		context
	m	(Lals;)Lwz;	g	lambda$setVisible$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$23
		p	0		context
	m	(Lals;)Lwz;	h	lambda$setVisible$35
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$22
		p	0		context
	m	(Lals;)Lwz;	i	lambda$getPlayers$34
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$21
		p	0		context
	m	(Lals;)Lwz;	j	lambda$getPlayers$33
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$20
		p	0		context
	m	(Lals;)Lwz;	k	lambda$getVisible$32
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$19
		p	0		context
	m	(Lals;)Lwz;	l	lambda$getVisible$31
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$18
		p	0		context
	m	(Lals;)Lwz;	m	lambda$getMax$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$17
		p	0		context
	m	(Lals;)Lwz;	n	lambda$getValue$29
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
c	ame	ame
	m	()Lwz;	a	lambda$stop$8
	m	(I)Lwz;	a	lambda$lead$9
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Let;)I	a	stop
		p	0		source
	m	(Let;Ljava/lang/String;I)I	a	lead
		p	0		source
		p	1		ip
		p	2		port
	m	(Ljava/lang/String;I)Lwz;	a	lambda$follow$10
	m	()Lwz;	b	lambda$stop$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Let;)Z	b	alreadyRunning
		p	0		source
	m	(Let;Ljava/lang/String;I)I	b	follow
		p	0		source
		p	1		ip
		p	2		port
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
		p	0		context
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	d	DEFAULT_BIND_ADDRESS
	f	I	e	DEFAULT_PORT
	f	I	f	BROADCAST_INTERVAL_MS
	f	Lalw;	g	chaseServer
	f	Lalv;	h	chaseClient
c	amf	net/minecraft/server/commands/CommandClear
	m	(ILjava/util/Collection;)Lwz;	a	lambda$clearInventory$12
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Lcuq;)Z	a	lambda$register$5
		p	0		stack
	m	(Let;)Z	a	lambda$register$2
		p	0		source
	m	(Let;Ljava/util/Collection;Ljava/util/function/Predicate;)I	a	clearUnlimited
		p	0		source
		p	1		targets
		p	2		item
	m	(Let;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
		p	0		source
		p	1		targets
		p	2		item
		p	3		maxCount
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		playerCount
	m	(ILjava/util/Collection;)Lwz;	b	lambda$clearInventory$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Lcuq;)Z	b	lambda$register$3
		p	0		stack
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		playerName
	m	(ILjava/util/Collection;)Lwz;	c	lambda$clearInventory$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(ILjava/util/Collection;)Lwz;	d	lambda$clearInventory$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
c	amg	net/minecraft/server/commands/CommandClone
	m	(I)Lwz;	a	lambda$clone$23
	m	(Lamg$c;Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapWithCloneMode
		p	0		beginPosGetter
		p	1		endPosGetter
		p	2		destinationPosGetter
		p	3		filterGetter
		p	4		builder
	m	(Lamg$c;Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$wrapWithCloneMode$22
		p	4		context
	m	(Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$destinationAndModeSuffix$19
		p	3		context
	m	(Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)Lamg$d;	a	lambda$destinationAndModeSuffix$9
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$destinationAndModeSuffix$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Laqu;Ljava/lang/String;)Lamg$d;	a	getLoadedDimensionAndPosition
		p	0		context
		p	1		world
		p	2		name
	m	(Ldtg;)Z	a	lambda$destinationAndModeSuffix$14
		p	0		pos
	m	(Lep;Lamg$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	beginEndDestinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		worldGetter
	m	(Lep;Lamg$c;Lamg$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	destinationAndModeSuffix
		p	0		commandRegistryAccess
		p	1		sourceWorldGetter
		p	2		targetWorldGetter
	m	(Let;)Z	a	lambda$register$2
		p	0		source
	m	(Let;Lamg$d;Lamg$d;Lamg$d;Ljava/util/function/Predicate;Lamg$e;)I	a	clone
		p	0		source
		p	1		begin
		p	2		end
		p	3		destination
		p	4		filter
		p	5		mode
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lamg$c;Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$wrapWithCloneMode$21
		p	4		context
	m	(Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$destinationAndModeSuffix$17
		p	3		context
	m	(Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)Lamg$d;	b	lambda$destinationAndModeSuffix$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	b	lambda$destinationAndModeSuffix$16
		p	0		context
	m	(Ldtg;)Z	b	lambda$destinationAndModeSuffix$12
	m	(Lamg$c;Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$wrapWithCloneMode$20
		p	4		context
	m	(Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$destinationAndModeSuffix$15
		p	3		context
	m	(Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)Lamg$d;	c	lambda$destinationAndModeSuffix$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	c	lambda$destinationAndModeSuffix$13
		p	0		context
	m	(Ldtg;)Z	c	lambda$destinationAndModeSuffix$10
		p	0		pos
	m	(Lamg$c;Lamg$c;Lamg$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$destinationAndModeSuffix$11
		p	3		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laqu;	d	lambda$beginEndDestinationAndModeSuffix$6
		p	0		context
	m	(Ldtg;)Z	d	lambda$static$1
		p	0		pos
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laqu;	e	lambda$beginEndDestinationAndModeSuffix$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laqu;	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laqu;	g	lambda$register$3
		p	0		context
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_FAILED
c	amg$a	net/minecraft/server/commands/CommandClone$a
	m	()Lub;	a	tag
	m	()Lkm;	b	components
	f	Lub;	a	tag
	f	Lkm;	b	components
c	amg$b	net/minecraft/server/commands/CommandClone$CommandCloneStoredTileEntity
	m	(Ljd;Ldtc;Lamg$a;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ljd;	a	pos
	m	()Ldtc;	b	state
	m	()Lamg$a;	c	blockEntityInfo
	f	Ljd;	a	pos
	f	Ldtc;	b	state
	f	Lamg$a;	c	blockEntityInfo
c	amg$c	net/minecraft/server/commands/CommandClone$c
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
		p	1		value
c	amg$d	net/minecraft/server/commands/CommandClone$d
	m	()Laqu;	a	dimension
	m	()Ljd;	b	position
	f	Laqu;	a	dimension
	f	Ljd;	b	position
c	amg$e	net/minecraft/server/commands/CommandClone$Mode
	m	(Ljava/lang/String;IZ)V	<init>	<init>
		p	3		allowsOverlap
	m	()Z	a	canOverlap
	m	()[Lamg$e;	b	$values
	f	Lamg$e;	a	FORCE
	f	Lamg$e;	b	MOVE
	f	Lamg$e;	c	NORMAL
	f	Z	d	canOverlap
	f	[Lamg$e;	e	$VALUES
c	amh	net/minecraft/server/commands/DamageCommand
	m	(FLbsr;)Lwz;	a	lambda$damage$6
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Lbsr;FLbrk;)I	a	damage
		p	0		source
		p	1		target
		p	2		amount
		p	3		damageSource
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVULNERABLE
c	ami	net/minecraft/server/commands/CommandDatapack
	m	()Lwz;	a	lambda$listEnabledPacks$29
	m	(Latm;)Lwz;	a	lambda$listEnabledPacks$30
		p	0		profile
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$8
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Latm;	a	getPack
		p	0		context
		p	1		name
		p	2		enable
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Latm;)V	a	lambda$register$14
		p	1		profiles
		p	2		profile
	m	(Lcpl;Latm;)Z	a	lambda$static$6
		p	1		profile
	m	(Let;)I	a	listPacks
		p	0		source
	m	(Let;Latm;)I	a	disablePack
		p	0		source
		p	1		container
	m	(Let;Latm;Lami$a;)I	a	enablePack
		p	0		source
		p	1		container
		p	2		packAdder
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		name
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		name
		p	1		flags
	m	(Ljava/util/Collection;)Lwz;	a	lambda$listEnabledPacks$31
	m	(Ljava/util/Collection;Lcpl;Latm;)Z	a	lambda$listAvailablePacks$25
		p	2		profile
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$7
		p	1		name
	m	(Ljava/util/List;)Lwz;	a	lambda$listAvailablePacks$28
	m	(Ljava/util/List;Latm;)V	a	lambda$register$17
		p	0		profiles
		p	1		profile
	m	()Lwz;	b	lambda$listAvailablePacks$26
	m	(Latm;)Lwz;	b	lambda$listAvailablePacks$27
		p	0		profile
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$5
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Latm;)V	b	lambda$register$12
		p	1		profiles
		p	2		profile
	m	(Let;)I	b	listAvailablePacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		name
	m	(Ljava/util/List;Latm;)V	b	lambda$register$10
		p	0		profiles
		p	1		profile
	m	(Latm;)Lwz;	c	lambda$disablePack$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$20
		p	0		context
	m	(Let;)I	c	listEnabledPacks
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		name
	m	(Latm;)Lwz;	d	lambda$enablePack$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$19
		p	0		context
	m	(Let;)Z	d	lambda$register$9
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		name
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$11
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_CANNOT_DISABLE_FEATURE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_PACK_FEATURES_NOT_ENABLED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	UNSELECTED_PACKS
c	ami$a	net/minecraft/server/commands/CommandDatapack$a
	m	(Ljava/util/List;Latm;)V	apply	apply
		p	1		profiles
		p	2		profile
c	amj	net/minecraft/server/commands/CommandDeop
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	deopPlayers
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Lwz;	a	lambda$deopPlayers$3
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
c	amk	net/minecraft/server/commands/CommandDebug
	m	()Lwz;	a	lambda$start$4
	m	(DLbne;D)Lwz;	a	lambda$stop$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)I	a	start
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Let;)I	b	stop
		p	0		source
	m	(Let;)Z	c	lambda$register$3
		p	0		source
	m	(Let;)Z	d	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_RECURSIVE_TRACES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_RETURN_RUN
c	amk$a	net/minecraft/server/commands/CommandDebug$a
	m	(ILjava/util/Collection;Ljava/lang/String;)Lwz;	a	lambda$runGuarded$1
	m	(Let;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	runGuarded
	m	(Ljava/util/Collection;Let;ILjava/lang/String;Lhs;Lhu;)V	a	lambda$runGuarded$2
		p	4		context
		p	5		frame
	m	(ILjava/util/Collection;Ljava/lang/String;)Lwz;	b	lambda$runGuarded$0
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	b	runGuarded
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
c	amk$a$1	net/minecraft/server/commands/CommandDebug$a$1
	m	(Lamk$a;Lii;Leq;ZLjava/io/PrintWriter;Lig;)V	<init>	<init>
		p	2		function
		p	3		returnValueConsumer
		p	4		propagateReturn
	m	(Let;Lhs;Lhu;)V	a	execute
	m	(Lev;Lhs;Lhu;)V	a	execute
	m	(Ljava/lang/Object;Lhs;Lhu;)V	execute	execute
		p	1		source
		p	2		context
		p	3		frame
	f	Ljava/io/PrintWriter;	a	val$output
	f	Lig;	b	val$function
c	amk$b	net/minecraft/server/commands/CommandDebug$b
	m	(Ljava/io/PrintWriter;)V	<init>	<init>
		p	1		writer
	m	()Z	M_	shouldInformAdmins
	m	(I)V	a	indentAndSave
		p	1		width
	m	(ILakr;I)V	a	onCall
		p	1		depth
		p	2		function
		p	3		size
	m	(ILjava/lang/String;)V	a	onCommand
		p	1		depth
		p	2		command
	m	(ILjava/lang/String;I)V	a	onReturn
		p	1		depth
		p	2		command
		p	3		result
	m	(Ljava/lang/String;)V	a	onError
		p	1		message
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(I)V	b	printIndent
		p	1		width
	m	()V	e	newLine
	m	()Z	k_	acceptsSuccess
	m	()Z	l_	alwaysAccepts
	m	()Z	w_	acceptsFailure
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
c	aml	net/minecraft/server/commands/DebugConfigCommand
	m	(Lcom/mojang/authlib/GameProfile;)Lwz;	a	lambda$config$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		suggestionsBuilder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Laqv;)I	a	config
		p	0		source
		p	1		player
	m	(Let;Ljava/util/UUID;)I	a	unconfig
		p	0		source
		p	1		uuid
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/lang/Iterable;	a	getUuidsInConfig
		p	0		server
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
c	amm	net/minecraft/server/commands/DebugMobSpawningCommand
	m	(Lbtq;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Lbtq;Ljd;)I	a	spawnMobs
		p	0		source
		p	1		group
		p	2		pos
c	amn	net/minecraft/server/commands/DebugPathCommand
	m	()Lwz;	a	lambda$fillBlocks$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljd;)I	a	fillBlocks
		p	0		source
		p	1		pos
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
c	amo	net/minecraft/server/commands/CommandGamemodeDefault
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ldct;)Lwz;	a	lambda$setMode$2
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ldct;)I	a	setMode
		p	0		source
		p	1		defaultGameMode
c	amp	net/minecraft/server/commands/CommandDifficulty
	m	(Lbqo;)Lwz;	a	lambda$setDifficulty$5
	m	(Lbqo;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Let;)Z	a	lambda$register$2
		p	0		source
	m	(Let;Lbqo;)I	a	setDifficulty
		p	0		source
		p	1		difficulty
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		difficulty
	m	(Lbqo;)Lwz;	b	lambda$register$3
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
c	amq	net/minecraft/server/commands/CommandEffect
	m	(Lbrx;Ljava/util/Collection;)Lwz;	a	lambda$clearEffect$16
	m	(Lbrx;Ljava/util/Collection;I)Lwz;	a	lambda$giveEffect$12
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	clearEffects
		p	0		source
		p	1		targets
	m	(Let;Ljava/util/Collection;Ljm;)I	a	clearEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
	m	(Let;Ljava/util/Collection;Ljm;Ljava/lang/Integer;IZ)I	a	giveEffect
		p	0		source
		p	1		targets
		p	2		statusEffect
		p	3		seconds
		p	4		amplifier
		p	5		showParticles
	m	(Ljava/util/Collection;)Lwz;	a	lambda$clearEffects$14
	m	(Lbrx;Ljava/util/Collection;)Lwz;	b	lambda$clearEffect$15
	m	(Lbrx;Ljava/util/Collection;I)Lwz;	b	lambda$giveEffect$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	b	lambda$clearEffects$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
c	amr	net/minecraft/server/commands/CommandMe
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lxp;)V	a	lambda$register$0
		p	1		message
c	ams	net/minecraft/server/commands/CommandEnchant
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Let;)Z	a	lambda$register$4
		p	0		source
	m	(Let;Ljava/util/Collection;Ljm;I)I	a	enchant
		p	0		source
		p	1		targets
		p	2		enchantment
		p	3		level
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		itemName
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		level
		p	1		maxLevel
	m	(Ljm;ILjava/util/Collection;)Lwz;	a	lambda$enchant$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Ljm;ILjava/util/Collection;)Lwz;	b	lambda$enchant$7
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
		p	0		entityName
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
c	amt	net/minecraft/server/commands/CommandExecute
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	A	lambda$register$6
		p	0		context
	m	()Lwz;	a	lambda$checkUnlessRegions$74
	m	(I)Lwz;	a	lambda$createNumericConditionalHandler$63
	m	(II)Z	a	lambda$addConditionals$50
		p	0		targetScore
		p	1		sourceScore
	m	(Lamt$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$66
		p	1		context
	m	(Lapg;Lfl$g;)I	a	checkMatchingData
		p	0		object
		p	1		path
	m	(Lapg;ZLfl$g;Ljava/util/function/IntFunction;ZI)V	a	lambda$storeData$37
		p	4		successful
		p	5		returnValue
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$61
		p	1		context
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	a	lambda$wrapStores$33
		p	2		context
	m	(Laqu;Ljd;)Z	a	isChunkLoaded
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;Ljd;Ljd;Z)Ljava/util/OptionalInt;	a	checkRegions
		p	0		world
		p	1		start
		p	2		end
		p	3		destination
		p	4		masked
	m	(Lbsr;)Ljava/util/stream/Stream;	a	lambda$createRelationOperations$87
		p	0		entity
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$59
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	a	lambda$wrapStores$32
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Lamt$e;)Z	a	checkScore
		p	0		context
		p	1		predicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$3
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ldh$d;)Z	a	checkScore
		p	0		context
		p	1		range
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
		p	0		context
		p	1		masked
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
		p	0		context
		p	1		positive
		p	2		value
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLamt$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		condition
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
		p	0		root
		p	1		builder
		p	2		positive
		p	3		masked
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRelationOperations
		p	0		node
		p	1		builder
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLep;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
		p	0		root
		p	1		argumentBuilder
		p	2		positive
		p	3		commandRegistryAccess
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLaph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$62
		p	3		builder
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Laph$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$34
		p	3		builderx
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
		p	0		node
		p	1		builder
		p	2		requestResult
	m	(Let;)Z	a	lambda$register$5
		p	0		source
	m	(Let;Lals;ZZ)Let;	a	storeValue
		p	0		source
		p	1		bossBar
		p	2		storeInValue
		p	3		requestResult
	m	(Let;Lapg;Lfl$g;Ljava/util/function/IntFunction;Z)Let;	a	storeData
		p	0		source
		p	1		object
		p	2		path
		p	3		nbtSetter
		p	4		requestResult
	m	(Let;Lbsr;)Ljava/util/List;	a	lambda$expandOneToOneEntityRelation$76
		p	1		entity
	m	(Let;Ljava/util/Collection;Lexy;Z)Let;	a	storeValue
		p	0		source
		p	1		targets
		p	2		objective
		p	3		requestResult
	m	(Let;Ljd;Lcrr;Ljava/util/function/Predicate;)I	a	countItems
		p	0		source
		p	1		pos
		p	2		slotRange
		p	3		predicate
	m	(Let;Ljm$c;)Let;	a	spawnEntityAndRedirect
		p	0		source
		p	1		entityType
	m	(Let;Ljm;)Z	a	checkCustomPredicate
		p	0		source
		p	1		lootCondition
	m	(Lev;Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/IntPredicate;Lcom/mojang/brigadier/context/ContextChain;Lub;Lht;Lamt$a;Lhn;)V	a	scheduleFunctionConditionsAndTest
		p	0		baseSource
		p	1		sources
		p	2		functionSourceGetter
		p	3		predicate
		p	4		contextChain
		p	5		args
		p	6		control
		p	7		functionNamesGetter
		p	8		flags
	m	(Ljava/lang/Iterable;Lcrr;Ljava/util/function/Predicate;)I	a	countItems
		p	0		entities
		p	1		slotRange
		p	2		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		count
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		function
		p	1		message
	m	(Ljava/util/Collection;Leyg;Lexy;ZZI)V	a	lambda$storeValue$35
		p	4		successful
		p	5		returnValue
	m	(Ljava/util/List;Lev;Lht;)V	a	lambda$scheduleFunctionConditionsAndTest$89
		p	2		newControl
	m	(Ljava/util/OptionalInt;)Lwz;	a	lambda$checkIfRegions$73
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	a	expandOneToOneEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$expandOneToManyEntityRelation$79
		p	1		context
	m	(Ljava/util/function/IntPredicate;Ljava/util/List;Lev;ZI)V	a	lambda$scheduleFunctionConditionsAndTest$88
		p	3		successful
		p	4		returnValue
	m	(ZLamt$b;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
		p	0		positive
		p	1		condition
	m	(ZLamt$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$69
		p	2		context
	m	(ZLaph$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$60
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$72
		p	1		context
	m	(ZZLals;ZI)V	a	lambda$storeValue$36
		p	3		successful
		p	4		returnValue
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$70
		p	2		context
	m	()Lwz;	b	lambda$addConditional$68
	m	(II)Z	b	lambda$addConditionals$48
		p	0		targetScore
		p	1		sourceScore
	m	(Lamt$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$64
		p	1		context
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	b	lambda$wrapStores$31
		p	2		context
	m	(Lbsr;)Ljava/util/Optional;	b	lambda$createRelationOperations$86
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$57
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	b	lambda$wrapStores$30
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
		p	0		context
		p	1		masked
	m	(Let;)Z	b	lambda$register$4
		p	0		source
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	b	expandOneToManyEntityRelation
		p	0		function
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$expandOneToOneEntityRelation$77
		p	1		context
	m	(ZLamt$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$67
		p	2		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$71
		p	1		context
	m	()Lwz;	c	lambda$createNumericConditionalHandler$65
	m	(II)Z	c	lambda$addConditionals$46
		p	0		targetScore
		p	1		sourceScore
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	c	lambda$wrapStores$29
		p	2		context
	m	(Lbsr;)Ljava/util/Optional;	c	lambda$createRelationOperations$85
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$55
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	c	lambda$wrapStores$28
		p	1		result
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
		p	0		context
		p	1		masked
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$58
	m	(II)Z	d	lambda$addConditionals$44
		p	0		targetScore
		p	1		sourceScore
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	d	lambda$wrapStores$27
		p	2		context
	m	(Lbsr;)Ljava/util/Optional;	d	lambda$createRelationOperations$84
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$addConditionals$54
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	d	lambda$wrapStores$26
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	d	lambda$addConditionals$56
	m	(II)Z	e	lambda$addConditionals$42
		p	0		targetScore
		p	1		sourceScore
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	e	lambda$wrapStores$25
		p	2		context
	m	(Lbsr;)Ljava/util/Optional;	e	lambda$createRelationOperations$83
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$52
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	e	lambda$wrapStores$24
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	e	lambda$addConditionals$53
		p	1		context
	m	(Laph$c;ZLcom/mojang/brigadier/context/CommandContext;)Let;	f	lambda$wrapStores$23
		p	2		context
	m	(Lbsr;)Ljava/util/Optional;	f	lambda$createRelationOperations$82
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$51
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Luy;	f	lambda$wrapStores$22
		p	1		result
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Let;	f	lambda$wrapStores$21
		p	1		context
	m	(Lbsr;)Ljava/util/Optional;	g	lambda$createRelationOperations$81
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$49
		p	0		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Let;	g	lambda$wrapStores$20
		p	1		context
	m	(Lbsr;)Ljava/util/Optional;	h	lambda$createRelationOperations$80
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$47
		p	0		context
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Let;	h	lambda$wrapStores$19
		p	1		context
	m	(Lbsr;)Z	i	lambda$expandOneToManyEntityRelation$78
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$45
		p	0		context
	m	(Lbsr;)Z	j	lambda$expandOneToOneEntityRelation$75
		p	0		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	j	lambda$addConditionals$43
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	k	lambda$addConditionals$41
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	l	lambda$addConditionals$40
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	m	lambda$addConditionals$39
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	n	lambda$addConditionals$38
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	o	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	p	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	q	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	r	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	s	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	t	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	u	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	v	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	w	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	x	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Let;	y	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	z	lambda$register$7
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_FUNCTION_CONDITION_INSTANTATION_FAILURE
	f	I	b	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_CONDITIONAL_FAILED_COUNT
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_PREDICATE
c	amt$a	net/minecraft/server/commands/CommandExecute$a
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/lang/Object;	get	get
		p	1		context
c	amt$b	net/minecraft/server/commands/CommandExecute$b
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
		p	1		context
c	amt$c	net/minecraft/server/commands/CommandExecute$c
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
		p	1		context
c	amt$d	net/minecraft/server/commands/CommandExecute$d
	m	(Z)V	<init>	<init>
		p	1		success
	m	(I)Z	a	lambda$new$1
		p	0		result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$apply$2
		p	0		context
	m	(Let;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	apply
		p	1		baseSource
		p	2		sources
		p	3		contextChain
		p	4		flags
		p	5		control
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	apply
		p	1		baseSource
		p	2		sources
		p	3		contextChain
		p	4		flags
		p	5		control
	m	(I)Z	b	lambda$new$0
		p	0		result
	f	Ljava/util/function/IntPredicate;	a	check
c	amt$e	net/minecraft/server/commands/CommandExecute$e
	m	(II)Z	test	test
		p	1		targetScore
		p	2		sourceScore
c	amu	net/minecraft/server/commands/CommandXp
	m	(Lamu$a;ILjava/util/Collection;)Lwz;	a	lambda$setExperience$14
	m	(Lamu$a;Laqv;I)Lwz;	a	lambda$queryExperience$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Let;)Z	a	lambda$register$9
		p	0		source
	m	(Let;Laqv;Lamu$a;)I	a	queryExperience
		p	0		source
		p	1		player
		p	2		component
	m	(Let;Ljava/util/Collection;ILamu$a;)I	a	addExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lamu$a;ILjava/util/Collection;)Lwz;	b	lambda$setExperience$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Let;)Z	b	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;ILamu$a;)I	b	setExperience
		p	0		source
		p	1		targets
		p	2		amount
		p	3		component
	m	(Lamu$a;ILjava/util/Collection;)Lwz;	c	lambda$addExperience$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lamu$a;ILjava/util/Collection;)Lwz;	d	lambda$addExperience$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
c	amu$a	net/minecraft/server/commands/CommandXp$Unit
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	3		name
		p	4		adder
		p	5		setter
		p	6		getter
	m	()[Lamu$a;	a	$values
	m	(Laqv;)I	a	lambda$static$3
		p	0		player
	m	(Laqv;Ljava/lang/Integer;)Z	a	lambda$static$2
		p	0		player
		p	1		level
	m	(Laqv;)I	b	lambda$static$1
		p	0		player
	m	(Laqv;Ljava/lang/Integer;)Z	b	lambda$static$0
		p	0		player
		p	1		xp
	f	Lamu$a;	a	POINTS
	f	Lamu$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Lamu$a;	g	$VALUES
c	amv	net/minecraft/server/commands/FillBiomeCommand
	m	(I)I	a	quantize
		p	0		coordinate
	m	(Laqu;Ljd;Ljd;Ljm;)Lcom/mojang/datafixers/util/Either;	a	fill
		p	0		world
		p	1		from
		p	2		to
		p	3		biome
	m	(Laqu;Ljd;Ljd;Ljm;Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lcom/mojang/datafixers/util/Either;	a	fill
		p	0		world
		p	1		from
		p	2		to
		p	3		biome
		p	4		filter
		p	5		feedbackConsumer
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lduy;Lejj;Ljava/util/function/Predicate;Lorg/apache/commons/lang3/mutable/MutableInt;Ljm;IIILdef$f;)Ljm;	a	lambda$makeResolver$5
		p	5		x
		p	6		y
		p	7		z
		p	8		noise
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Ljava/util/function/Supplier;)V	a	lambda$fill$9
		p	1		feedbackSupplier
	m	(Let;Ljd;Ljd;Ljm$c;Ljava/util/function/Predicate;)I	a	fill
		p	0		source
		p	1		from
		p	2		to
		p	3		biome
		p	4		filter
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maximum
		p	1		specified
	m	(Ljava/util/function/Supplier;)V	a	lambda$fill$7
		p	0		feedbackSupplier
	m	(Ljd;)Ljd;	a	quantize
		p	0		pos
	m	(Ljm;)Z	a	lambda$fill$6
		p	0		biomex
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lduy;Lejj;Ljm;Ljava/util/function/Predicate;)Lddz;	a	makeResolver
		p	0		counter
		p	1		chunk
		p	2		box
		p	3		biome
		p	4		filter
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lejj;)Lwz;	a	lambda$fill$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ljm;)Z	b	lambda$register$2
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_VOLUME_TOO_LARGE
c	amw	net/minecraft/server/commands/CommandFill
	m	(I)Lwz;	a	lambda$fillBlocks$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldtg;)Z	a	lambda$register$5
		p	0		pos
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Lejj;Lgk;Lamw$a;Ljava/util/function/Predicate;)I	a	fillBlocks
		p	0		source
		p	1		range
		p	2		block
		p	3		mode
		p	4		filter
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_AREA_TOO_LARGE
	f	Lgk;	b	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_FAILED
c	amw$a	net/minecraft/server/commands/CommandFill$Mode
	m	(Ljava/lang/String;ILaoh$a;)V	<init>	<init>
		p	3		filter
	m	()[Lamw$a;	a	$values
	m	(Lejj;Ljd;Lgk;Laqu;)Lgk;	a	lambda$static$3
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Lejj;Ljd;Lgk;Laqu;)Lgk;	b	lambda$static$2
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Lejj;Ljd;Lgk;Laqu;)Lgk;	c	lambda$static$1
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	m	(Lejj;Ljd;Lgk;Laqu;)Lgk;	d	lambda$static$0
		p	0		range
		p	1		pos
		p	2		block
		p	3		world
	f	Lamw$a;	a	REPLACE
	f	Lamw$a;	b	OUTLINE
	f	Lamw$a;	c	HOLLOW
	f	Lamw$a;	d	DESTROY
	f	Laoh$a;	e	filter
	f	[Lamw$a;	f	$VALUES
c	amx	net/minecraft/server/commands/CommandForceload
	m	(ILakq;Ljava/lang/String;)Lwz;	a	lambda$listForceLoad$12
	m	(Lakq;)Lwz;	a	lambda$removeAll$14
	m	(Lakq;Ljava/lang/String;)Lwz;	a	lambda$listForceLoad$11
	m	(Laqu;J)V	a	lambda$removeAll$13
		p	1		chunkPos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Ldcd;Lakq;)Lwz;	a	lambda$queryForceLoad$10
	m	(Let;)I	a	listForceLoad
		p	0		source
	m	(Let;Laqi;)I	a	queryForceLoad
		p	0		source
		p	1		pos
	m	(Let;Laqi;Laqi;Z)I	a	changeForceLoad
		p	0		source
		p	1		from
		p	2		to
		p	3		forceLoaded
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		chunkPos
		p	1		registryKey
	m	(ZILakq;Ldcd;Ldcd;)Lwz;	a	lambda$changeForceLoad$16
	m	(ZLdcd;Lakq;)Lwz;	a	lambda$changeForceLoad$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Let;)I	b	removeAll
		p	0		source
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		maxCount
		p	1		count
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Let;)Z	c	lambda$register$2
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
c	amy	net/minecraft/server/commands/CommandFunction
	m	(Lamy$a;Leq;Lhs;Lhu;)V	a	lambda$queueFunctionsNoReturn$8
		p	2		context
		p	3		frame
	m	(Lamy$a;ZI)V	a	lambda$queueFunctionsNoReturn$7
		p	1		successful
		p	2		returnValue
	m	(Lamy$b;Lev;Lakr;Leq;ZI)V	a	lambda$decorateOutputIfNeeded$6
		p	4		successful
		p	5		returnValue
	m	(Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$4
		p	1		builder
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$3
		p	0		context
		p	1		builder
	m	(Let;)Let;	a	modifySenderForExecution
		p	0		source
	m	(Lev;Lamy$b;Lakr;Leq;)Leq;	a	decorateOutputIfNeeded
		p	0		flags
		p	1		resultConsumer
		p	2		id
		p	3		wrapped
	m	(Lfl$g;Lapg;)Lub;	a	getArgumentTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		argument
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		argument
		p	1		argument2
	m	(Ljava/util/Collection;Lub;Lev;Lev;Lht;Lamy$b;)V	a	queueFunctionsAsReturn
		p	0		functions
		p	1		args
		p	2		parentSource
		p	3		functionSource
		p	4		control
		p	5		resultConsumer
	m	(Ljava/util/Collection;Lub;Lev;Lev;Lht;Lamy$b;Lhn;)V	a	queueFunctions
		p	0		commandFunctions
		p	1		args
		p	2		parentSource
		p	3		functionSource
		p	4		control
		p	5		resultConsumer
		p	6		flags
	m	(Lub;Lht;Lcom/mojang/brigadier/CommandDispatcher;Lev;Lig;Lakr;Leq;Z)V	a	instantiateAndQueueFunctions
		p	0		args
		p	1		control
		p	2		dispatcher
		p	3		source
		p	4		function
		p	5		id
		p	6		returnValueConsumer
		p	7		propagateReturn
	m	(Let;)Z	b	lambda$register$5
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		argument
	m	(Ljava/util/Collection;Lub;Lev;Lev;Lht;Lamy$b;)V	b	queueFunctionsNoReturn
		p	0		functions
		p	1		args
		p	2		parentSource
		p	3		functionSource
		p	4		control
		p	5		resultConsumer
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_FUNCTION_INSTANTATION_FAILURE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_FUNCTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_ARGUMENT_NOT_COMPOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NO_FUNCTIONS
	f	Lamy$b;	e	FULL_CONTEXT_CALLBACKS
c	amy$1	net/minecraft/server/commands/CommandFunction$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lub;	a	arguments
		p	1		context
	f	Laph$c;	a	val$provider
c	amy$2	net/minecraft/server/commands/CommandFunction$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lub;	a	arguments
		p	1		context
	f	Laph$c;	a	val$provider
c	amy$3	net/minecraft/server/commands/CommandFunction$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lub;	a	arguments
		p	1		context
c	amy$4	net/minecraft/server/commands/CommandFunction$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lub;	a	arguments
		p	1		context
c	amy$5	net/minecraft/server/commands/CommandFunction$5
	m	(Lakr;I)Lwz;	a	lambda$signalResult$0
	m	(Let;Lakr;I)V	a	signalResult
		p	1		source
		p	2		id
		p	3		result
	m	(Ljava/lang/Object;Lakr;I)V	a	signalResult
		p	1		source
		p	2		id
		p	3		result
c	amy$a	net/minecraft/server/commands/CommandFunction$a
	m	(I)V	a	add
		p	1		returnValue
	f	Z	a	anyResult
	f	I	b	sum
c	amy$b	net/minecraft/server/commands/CommandFunction$b
	m	(Ljava/lang/Object;Lakr;I)V	a	signalResult
		p	1		source
		p	2		id
		p	3		result
c	amy$c	net/minecraft/server/commands/CommandFunction$c
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lub;	a	arguments
		p	1		context
	m	(Let;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	runGuarded
	m	(Ljava/util/Collection;)Lwz;	a	lambda$runGuarded$1
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	b	runGuarded
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
	m	(Ljava/util/Collection;)Lwz;	b	lambda$runGuarded$0
c	amz	net/minecraft/server/commands/CommandGamemode
	m	(Laqv;Lwz;)Lwz;	a	lambda$logGamemodeChange$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Ldct;)I	a	setMode
		p	0		context
		p	1		targets
		p	2		gameMode
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Laqv;Ldct;)V	a	logGamemodeChange
		p	0		source
		p	1		player
		p	2		gameMode
	m	(Lwz;)Lwz;	a	lambda$logGamemodeChange$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	f	I	a	PERMISSION_LEVEL
c	ana	net/minecraft/server/commands/CommandGamerule
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;Ldcs$e;)I	a	setRule
		p	0		context
		p	1		key
	m	(Ldcs$e;Ldcs$g;)Lwz;	a	lambda$queryRule$2
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ldcs$e;)I	a	queryRule
		p	0		source
		p	1		key
	m	(Ldcs$e;Ldcs$g;)Lwz;	b	lambda$setRule$1
c	ana$1	net/minecraft/server/commands/CommandGamerule$1
	m	(Ldcs$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
		p	1		context
	m	(Ldcs$e;Ldcs$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Ldcs$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
		p	1		context
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
c	anb	net/minecraft/server/commands/CommandGive
	m	(ILcuq;Ljava/util/Collection;)Lwz;	a	lambda$giveItem$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Lhd;Ljava/util/Collection;I)I	a	giveItem
		p	0		source
		p	1		item
		p	2		targets
		p	3		count
	m	(ILcuq;Ljava/util/Collection;)Lwz;	b	lambda$giveItem$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	I	a	MAX_ALLOWED_ITEMSTACKS
c	anc	net/minecraft/server/commands/CommandHelp
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)Lwz;	a	lambda$register$2
	m	(Ljava/lang/String;)Lwz;	a	lambda$register$0
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	and	net/minecraft/server/commands/ItemCommands
	m	(Lbsr;I)Lcuq;	a	getEntityItem
		p	0		entity
		p	1		slotId
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$6
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$7
		p	0		source
	m	(Let;Lbsr;ILjava/util/Collection;I)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Let;Lbsr;ILjava/util/Collection;ILjm;)I	a	entityToEntities
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		lootFunction
	m	(Let;Lbsr;ILjd;I)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Let;Lbsr;ILjd;ILjm;)I	a	entityToBlock
		p	0		source
		p	1		sourceEntity
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		lootFunction
	m	(Let;Ljava/util/Collection;ILcuq;)I	a	setEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		stack
	m	(Let;Ljava/util/Collection;ILjm;)I	a	modifyEntityItem
		p	0		source
		p	1		targets
		p	2		slot
		p	3		lootFunction
	m	(Let;Ljd;I)Lcuq;	a	getBlockItem
		p	0		source
		p	1		pos
		p	2		slotId
	m	(Let;Ljd;ILcuq;)I	a	setBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		stack
	m	(Let;Ljd;ILjava/util/Collection;I)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
	m	(Let;Ljd;ILjava/util/Collection;ILjm;)I	a	blockToEntities
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		targets
		p	4		slot
		p	5		lootFunction
	m	(Let;Ljd;ILjd;I)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
	m	(Let;Ljd;ILjd;ILjm;)I	a	blockToBlock
		p	0		source
		p	1		sourcePos
		p	2		sourceSlot
		p	3		pos
		p	4		slot
		p	5		lootFunction
	m	(Let;Ljd;ILjm;)I	a	modifyBlockItem
		p	0		source
		p	1		pos
		p	2		slot
		p	3		lootFunction
	m	(Let;Ljd;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lbqk;	a	getContainer
		p	0		source
		p	1		pos
		p	2		exception
	m	(Let;Ljm;Lcuq;)Lcuq;	a	applyModifier
		p	0		source
		p	1		lootFunction
		p	2		stack
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
		p	0		itemName
		p	1		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		x
		p	1		y
		p	2		z
	m	(Ljava/util/List;Lcuq;)Lwz;	a	lambda$setEntityItem$27
	m	(Ljava/util/Map$Entry;)Lwz;	a	lambda$modifyEntityItem$23
	m	(Ljava/util/Map;)Lwz;	a	lambda$modifyEntityItem$24
	m	(Ljd;Lcuq;)Lwz;	a	lambda$setBlockItem$25
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$20
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
		p	0		slot
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		x
		p	1		y
		p	2		z
	m	(Ljava/util/List;Lcuq;)Lwz;	b	lambda$setEntityItem$26
	m	(Ljd;Lcuq;)Lwz;	b	lambda$modifyBlockItem$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$19
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
		p	0		slot
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	g	SUGGEST_MODIFIER
c	ane	net/minecraft/server/commands/JfrCommand
	m	()Lwz;	a	lambda$startJfr$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)I	a	startJfr
		p	0		source
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		message
	m	(Ljava/nio/file/Path;Lxw;)Lxw;	a	lambda$stopJfr$5
		p	1		style
	m	(Lwz;)Lwz;	a	lambda$stopJfr$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Let;)I	b	stopJfr
		p	0		source
	m	(Let;)Z	c	lambda$register$1
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
c	anf	net/minecraft/server/commands/CommandKick
	m	(Laqv;Lwz;)Lwz;	a	lambda$kickPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;Lwz;)I	a	kickPlayers
		p	0		source
		p	1		targets
		p	2		reason
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_KICKING_OWNER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SINGLEPLAYER
c	ang	net/minecraft/server/commands/CommandKill
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	kill
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Lwz;	a	lambda$kill$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	b	lambda$kill$3
c	anh	net/minecraft/server/commands/CommandList
	m	(Laqv;)Lwz;	a	lambda$listPlayersWithUuids$2
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Let;)I	a	listPlayers
		p	0		source
	m	(Let;Ljava/util/function/Function;)I	a	format
		p	0		source
		p	1		nameProvider
	m	(Ljava/util/List;Laur;Lwz;)Lwz;	a	lambda$format$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
	m	(Let;)I	b	listPlayersWithUuids
		p	0		source
c	ani	net/minecraft/server/commands/CommandLocate
	m	(IIII)F	a	dist
		p	0		x1
		p	1		y1
		p	2		x2
		p	3		y2
	m	(Lakq;)Ljava/lang/String;	a	lambda$showLocateResult$13
		p	0		key
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Lcom/mojang/datafixers/util/Pair;Lawu;)Ljava/lang/String;	a	lambda$showLocateResult$14
		p	1		key
	m	(Let;)Z	a	lambda$register$4
		p	0		source
	m	(Let;Lfw$c;)I	a	locateBiome
		p	0		source
		p	1		predicate
	m	(Let;Lfw$c;Ljd;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		predicate
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Let;Lfx$c;)I	a	locateStructure
		p	0		source
		p	1		predicate
	m	(Let;Lfx$c;Ljd;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		structure
		p	2		currentPos
		p	3		result
		p	4		successMessage
		p	5		includeY
		p	6		timeTaken
	m	(Let;Ljd;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I	a	showLocateResult
		p	0		source
		p	1		currentPos
		p	2		result
		p	3		successMessage
		p	4		includeY
		p	5		entryString
		p	6		timeTaken
	m	(Lfw$c;Lcom/mojang/datafixers/util/Pair;Ljq$c;)Ljava/lang/String;	a	lambda$showLocateResult$12
		p	2		tag
	m	(Lfw$c;Ljm$c;)Ljava/lang/String;	a	lambda$showLocateResult$11
		p	1		entry
	m	(Lfx$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locateStructure$10
	m	(Lfx$c;Ljz;)Ljava/util/Optional;	a	getHolders
		p	0		predicate
		p	1		structureRegistry
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		id
	m	(Ljava/lang/String;Ljava/lang/String;Lwz;I)Lwz;	a	lambda$showLocateResult$16
	m	(Ljd;Ljava/lang/String;Lxw;)Lxw;	a	lambda$showLocateResult$15
		p	2		style
	m	(Ljm;)Ljq$a;	a	lambda$getHolders$8
		p	0		entry
	m	(Ljz;Lakq;)Ljava/util/Optional;	a	lambda$getHolders$9
		p	1		key
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Let;Lfw$c;)I	b	locatePoi
		p	0		source
		p	1		predicate
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		id
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		id
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_STRUCTURE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_STRUCTURE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_BIOME_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_POI_NOT_FOUND
	f	I	f	MAX_STRUCTURE_SEARCH_RADIUS
	f	I	g	MAX_BIOME_SEARCH_RADIUS
	f	I	h	BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	f	I	i	BIOME_SAMPLE_RESOLUTION_VERTICAL
	f	I	j	POI_SEARCH_RADIUS
c	anj	net/minecraft/server/commands/CommandLoot
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
		p	1		context
	m	(Laqu;Lexc;Lcuq;)V	a	lambda$dropInWorld$22
		p	2		stack
	m	(Lbqk;Lcuq;)Z	a	distributeToContainer
		p	0		inventory
		p	1		stack
	m	(Lbsr;Ljava/util/List;IILjava/util/List;)V	a	setSlots
		p	0		entity
		p	1		stacks
		p	2		slot
		p	3		stackCount
		p	4		addedStacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lanj$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
		p	0		rootArgument
		p	1		sourceConstructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbsr;Lanj$b;)I	a	dropKillLoot
		p	0		context
		p	1		entity
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	a	lambda$addTargets$21
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljd;Lcuq;Lanj$b;)I	a	dropBlockLoot
		p	0		context
		p	1		pos
		p	2		stack
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljm;Lanj$b;)I	a	dropChestLoot
		p	0		context
		p	1		lootTable
		p	2		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljm;Leru;Lanj$b;)I	a	drop
		p	0		context
		p	1		lootTable
		p	2		lootContextParameters
		p	3		constructor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljm;Ljd;Lcuq;Lanj$b;)I	a	dropFishingLoot
		p	0		context
		p	1		lootTable
		p	2		pos
		p	3		stack
		p	4		constructor
	m	(Lcuq;)Lwz;	a	lambda$callback$23
	m	(Lcuq;Lakq;)Lwz;	a	lambda$callback$25
	m	(Lcuq;Lcuq;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Lep;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lanj$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
		p	1		builder
		p	2		constructor
	m	(Let;)Z	a	lambda$register$3
		p	0		source
	m	(Let;Lakq;Ljava/util/List;)V	a	lambda$dropKillLoot$28
		p	2		stacks
	m	(Let;Lbsy;)Lcuq;	a	getSourceHandItem
		p	0		source
		p	1		slot
	m	(Let;Ldtc;Ljava/util/List;)V	a	lambda$dropBlockLoot$27
		p	2		stacks
	m	(Let;Lexc;Ljava/util/List;Lanj$a;)I	a	dropInWorld
		p	0		source
		p	1		pos
		p	2		stacks
		p	3		messageSender
	m	(Let;Ljava/util/List;)V	a	callback
		p	0		source
		p	1		stacks
	m	(Let;Ljava/util/List;Lakq;)V	a	callback
		p	0		source
		p	1		stacks
		p	2		lootTable
	m	(Let;Ljd;)Lbqk;	a	getContainer
		p	0		source
		p	1		pos
	m	(Let;Ljd;IILjava/util/List;Lanj$a;)I	a	blockReplace
		p	0		source
		p	1		targetPos
		p	2		slot
		p	3		stackCount
		p	4		stacks
		p	5		messageSender
	m	(Let;Ljd;Ljava/util/List;Lanj$a;)I	a	blockDistribute
		p	0		source
		p	1		targetPos
		p	2		stacks
		p	3		messageSender
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		entityName
	m	(Ljava/util/Collection;IILjava/util/List;Lanj$a;)I	a	entityReplace
		p	0		targets
		p	1		slot
		p	2		stackCount
		p	3		stacks
		p	4		messageSender
	m	(Ljava/util/Collection;Ljava/util/List;Lanj$a;)I	a	playerGive
		p	0		players
		p	1		stacks
		p	2		messageSender
	m	(Ljava/util/List;)Lwz;	a	lambda$callback$24
	m	(Ljava/util/List;Lakq;)Lwz;	a	lambda$callback$26
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	b	lambda$addTargets$20
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Let;Ljava/util/List;)V	b	lambda$drop$29
		p	1		stacks
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		entityName
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	c	lambda$addTargets$19
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	d	lambda$addTargets$18
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$9
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	e	lambda$addTargets$17
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	f	lambda$addTargets$16
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$7
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	g	lambda$addTargets$15
		p	0		context
		p	1		stacks
		p	2		messageSender
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$6
		p	1		context
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$5
		p	1		context
	m	(Lanj$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$4
		p	1		context
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_LOOT_TABLE
c	anj$a	net/minecraft/server/commands/CommandLoot$a
	m	(Ljava/util/List;)V	accept	accept
		p	1		items
c	anj$b	net/minecraft/server/commands/CommandLoot$b
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lanj$a;)I	accept	accept
		p	1		context
		p	2		items
		p	3		messageSender
c	anj$c	net/minecraft/server/commands/CommandLoot$c
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lanj$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
		p	1		builder
		p	2		target
c	ank	net/minecraft/server/commands/CommandTell
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lxp;)V	a	lambda$register$0
		p	2		message
	m	(Let;Ljava/util/Collection;Lxp;)V	a	sendMessage
		p	0		source
		p	1		targets
		p	2		message
c	anl	net/minecraft/server/commands/CommandOp
	m	(Laqv;)Ljava/lang/String;	a	lambda$register$2
		p	0		player
	m	(Laur;Laqv;)Z	a	lambda$register$1
		p	1		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	opPlayers
		p	0		source
		p	1		targets
	m	(Ljava/util/Collection;)Lwz;	a	lambda$opPlayers$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
c	anm	net/minecraft/server/commands/CommandPardon
	m	(Lcom/mojang/authlib/GameProfile;)Lwz;	a	lambda$pardonPlayers$3
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	pardonPlayers
		p	0		source
		p	1		targets
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
c	ann	net/minecraft/server/commands/CommandPardonIP
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/lang/String;)I	a	unban
		p	0		source
		p	1		target
	m	(Ljava/lang/String;)Lwz;	a	lambda$unban$3
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
c	ano	net/minecraft/server/commands/CommandParticle
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Llk;Lexc;Lexc;FIZLjava/util/Collection;)I	a	sendParticles
		p	0		source
		p	1		parameters
		p	2		pos
		p	3		delta
		p	4		speed
		p	5		count
		p	6		force
		p	7		viewers
	m	(Llk;)Lwz;	a	lambda$sendParticles$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	anp	net/minecraft/server/commands/PerfCommand
	m	()Lwz;	a	lambda$startProfilingDedicatedServer$5
	m	(DI)Lwz;	a	lambda$whenStopped$7
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)I	a	startProfilingDedicatedServer
		p	0		source
	m	(Let;Lbne;)V	a	whenStopped
		p	0		source
		p	1		result
	m	(Let;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
		p	0		source
		p	1		tempProfilingDirectory
		p	2		server
	m	(Let;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$4
		p	2		dumpDirectory
	m	(Ljava/lang/String;)Lwz;	a	lambda$saveResults$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Let;)I	b	stopProfilingDedicatedServer
		p	0		source
	m	(Let;Lbne;)V	b	lambda$startProfilingDedicatedServer$3
		p	1		result
	m	(Let;)Z	c	lambda$register$0
		p	0		source
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
c	anq	net/minecraft/server/commands/PlaceCommand
	m	(Lakr;Ljd;)Lwz;	a	lambda$placeTemplate$20
	m	(Laqu;Ldcd;)Z	a	lambda$checkLoaded$21
		p	1		pos
	m	(Laqu;Ldcd;Ldcd;)V	a	checkLoaded
		p	0		world
		p	1		pos1
		p	2		pos2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Lejz;Laqu;Lduz;Ldcd;)V	a	lambda$placeStructure$18
		p	3		chunkPos
	m	(Let;)Z	a	lambda$register$2
		p	0		source
	m	(Let;Lakr;Ljd;Ldmm;Ldkv;FI)I	a	placeTemplate
		p	0		source
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		mirror
		p	5		integrity
		p	6		seed
	m	(Let;Ljm$c;Ljd;)I	a	placeFeature
		p	0		source
		p	1		feature
		p	2		pos
	m	(Let;Ljm;Lakr;ILjd;)I	a	placeJigsaw
		p	0		source
		p	1		structurePool
		p	2		id
		p	3		maxDepth
		p	4		pos
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		id
	m	(Ljava/lang/String;Ljd;)Lwz;	a	lambda$placeStructure$19
	m	(Ljd;)Lwz;	a	lambda$placeJigsaw$16
	m	(Ljm;)Z	a	lambda$placeStructure$17
		p	0		biome
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$13
		p	0		context
	m	(Let;Ljm$c;Ljd;)I	b	placeStructure
		p	0		source
		p	1		structure
		p	2		pos
	m	(Ljava/lang/String;Ljd;)Lwz;	b	lambda$placeFeature$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FEATURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_JIGSAW_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_STRUCTURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_TEMPLATE_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEMPLATE_FAILED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_TEMPLATES
c	anr	net/minecraft/server/commands/CommandPlaySound
	m	(Lakr;Ljava/util/Collection;)Lwz;	a	lambda$playSound$9
	m	(Laqv;)Ljava/util/Collection;	a	getCallingPlayerAsCollection
		p	0		player
	m	(Lavq;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
		p	0		category
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$7
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
		p	0		context
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Ljava/util/Collection;Lakr;Lavq;Lexc;FFF)I	a	playSound
		p	0		source
		p	1		targets
		p	2		sound
		p	3		category
		p	4		pos
		p	5		volume
		p	6		pitch
		p	7		minVolume
	m	(Lakr;Ljava/util/Collection;)Lwz;	b	lambda$playSound$8
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$6
		p	1		context
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$5
		p	1		context
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$4
		p	1		context
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$3
		p	1		context
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$source$2
		p	1		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
c	ans	net/minecraft/server/commands/CommandPublish
	m	(I)Lxn;	a	getSuccessMessage
		p	0		port
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;IZLdct;)I	a	publish
		p	0		source
		p	1		port
		p	2		allowCommands
		p	3		gameMode
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		port
	m	(I)Lwz;	b	lambda$publish$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
c	ant	net/minecraft/server/commands/RaidCommand
	m	()Lwz;	a	lambda$stop$11
	m	(II)Lwz;	a	lambda$setRaidOmenLevel$8
	m	(Laqv;)Lcoi;	a	getRaid
		p	0		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
		p	0		context
	m	(Let;)I	a	glow
		p	0		source
	m	(Let;I)I	a	setRaidOmenLevel
		p	0		source
		p	1		level
	m	(Let;Lwz;)I	a	playSound
		p	0		source
		p	1		type
	m	(Ljava/lang/StringBuilder;)Lwz;	a	lambda$check$13
	m	()Lwz;	b	lambda$start$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
		p	0		context
	m	(Let;)I	b	spawnLeader
		p	0		source
	m	(Let;I)I	b	start
		p	0		source
		p	1		level
	m	(Ljava/lang/StringBuilder;)Lwz;	b	lambda$check$12
	m	()Lwz;	c	lambda$spawnLeader$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
		p	0		context
	m	(Let;)I	c	stop
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
		p	0		context
	m	(Let;)I	d	check
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
		p	0		context
	m	(Let;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
		p	0		context
c	anu	net/minecraft/server/commands/RandomCommand
	m	(I)Lwz;	a	lambda$resetAllSequencesAndSetNewDefaults$17
	m	(Lakr;)Lwz;	a	lambda$resetSequence$15
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestRandomSequence
		p	0		context
		p	1		suggestionsBuilder
	m	(Let;)I	a	resetAllSequences
		p	0		source
	m	(Let;IZZ)I	a	resetAllSequencesAndSetNewDefaults
		p	0		source
		p	1		salt
		p	2		includeWorldSeed
		p	3		includeSequenceId
	m	(Let;Lakr;)I	a	resetSequence
		p	0		source
		p	1		sequenceId
	m	(Let;Lakr;IZZ)I	a	resetSequence
		p	0		source
		p	1		sequenceId
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Let;Ldh$d;Lakr;Z)I	a	randomSample
		p	0		source
		p	1		range
		p	2		sequenceId
		p	3		roll
	m	(Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	drawRandomValueTree
		p	0		argumentName
		p	1		roll
	m	(Ljava/util/List;Lakr;Lbqx;)V	a	lambda$suggestRandomSequence$12
		p	1		id
		p	2		sequence
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$drawRandomValueTree$11
		p	1		context
	m	(I)Lwz;	b	lambda$resetAllSequences$16
	m	(Lakr;)Lwz;	b	lambda$resetSequence$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Let;)Z	b	lambda$drawRandomValueTree$10
		p	0		source
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$drawRandomValueTree$9
		p	1		context
	m	(I)Lwz;	c	lambda$randomSample$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Let;)Z	c	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_RANGE_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_RANGE_TOO_SMALL
c	anv	net/minecraft/server/commands/CommandRecipe
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lwz;	a	lambda$takeRecipes$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Let;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
		p	0		source
		p	1		targets
		p	2		recipes
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lwz;	b	lambda$takeRecipes$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lwz;	c	lambda$giveRecipes$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lwz;	d	lambda$giveRecipes$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
c	anw	net/minecraft/server/commands/CommandReload
	m	()Lwz;	a	lambda$register$2
	m	(Latp;Lerl;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
		p	0		dataPackManager
		p	1		saveProperties
		p	2		enabledDataPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
		p	1		throwable
	m	(Ljava/util/Collection;Let;)V	a	reloadPacks
		p	0		dataPacks
		p	1		source
	f	Lorg/slf4j/Logger;	a	LOGGER
c	anx	net/minecraft/server/commands/ReturnCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lev;)Z	a	lambda$register$0
		p	0		source
c	anx$a	net/minecraft/server/commands/ReturnCommand$a
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
c	anx$b	net/minecraft/server/commands/ReturnCommand$b
	m	(Lev;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	apply
		p	1		baseSource
		p	2		sources
		p	3		contextChain
		p	4		flags
		p	5		control
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	apply
		p	1		baseSource
		p	2		sources
		p	3		contextChain
		p	4		flags
		p	5		control
c	anx$c	net/minecraft/server/commands/ReturnCommand$c
	m	(Lev;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhn;Lht;)V	a	run
		p	1		source
		p	2		contextChain
		p	3		flags
		p	4		control
c	any	net/minecraft/server/commands/RideCommand
	m	(Lbsr;Lbsr;)Lwz;	a	lambda$dismount$8
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Let;)Z	a	lambda$register$3
		p	0		source
	m	(Let;Lbsr;)I	a	dismount
		p	0		source
		p	1		rider
	m	(Let;Lbsr;Lbsr;)I	a	mount
		p	0		source
		p	1		rider
		p	2		vehicle
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		entity
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		rider
		p	1		vehicle
	m	(Lbsr;Lbsr;)Lwz;	b	lambda$mount$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
		p	0		rider
		p	1		vehicle
	m	(Lbsr;Lbsr;)Z	c	lambda$mount$6
		p	1		passenger
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_ALREADY_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_MOUNT_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MOUNTING_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_MOUNTING_LOOP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_WRONG_DIMENSION
c	anz	net/minecraft/server/commands/CommandSaveAll
	m	()Lwz;	a	lambda$saveAll$4
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Z)I	a	saveAll
		p	0		source
		p	1		flush
	m	()Lwz;	b	lambda$saveAll$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	aoa	net/minecraft/server/commands/CommandSaveOff
	m	()Lwz;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
c	aob	net/minecraft/server/commands/CommandSaveOn
	m	()Lwz;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
c	aoc	net/minecraft/server/commands/CommandSay
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lxp;)V	a	lambda$register$1
		p	1		message
	m	(Let;)Z	a	lambda$register$0
		p	0		source
c	aod	net/minecraft/server/commands/CommandSchedule
	m	(ILjava/lang/String;)Lwz;	a	lambda$remove$11
	m	(Lakr;IJ)Lwz;	a	lambda$schedule$9
	m	(Lakr;ZLewp;JLet;ILig;)V	a	lambda$schedule$8
		p	7		function2
	m	(Lakr;ZLewp;JLet;ILjava/util/Collection;)V	a	lambda$schedule$10
		p	7		functions
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$2
		p	0		source
	m	(Let;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
		p	0		source
		p	1		function
		p	2		time
		p	3		replace
	m	(Let;Ljava/lang/String;)I	a	remove
		p	0		source
		p	1		eventName
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		eventName
	m	(Lakr;IJ)Lwz;	b	lambda$schedule$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUGGEST_SCHEDULE
c	aoe	net/minecraft/server/commands/CommandScoreboard
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(ILexy;Ljava/util/Collection;)Lwz;	a	lambda$removeScore$52
	m	(ILexy;Ljava/util/Collection;I)Lwz;	a	lambda$removeScore$51
	m	(Laoe$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addNumberFormats$28
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$24
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$19
		p	0		context
		p	1		builder
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyp;)I	a	lambda$register$23
	m	(Lep;Lcom/mojang/brigadier/builder/ArgumentBuilder;Laoe$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addNumberFormats
		p	0		registryAccess
		p	1		argumentBuilder
		p	2		executor
	m	(Let;)I	a	listTrackedPlayers
		p	0		source
	m	(Let;Lexx;)I	a	clearDisplaySlot
		p	0		source
		p	1		slot
	m	(Let;Lexx;Lexy;)I	a	setDisplaySlot
		p	0		source
		p	1		slot
		p	2		objective
	m	(Let;Lexy;)I	a	removeObjective
		p	0		source
		p	1		objective
	m	(Let;Lexy;Leyj$a;)I	a	setRenderType
		p	0		source
		p	1		objective
		p	2		type
	m	(Let;Lexy;Lwz;)I	a	setDisplayName
		p	0		source
		p	1		objective
		p	2		displayName
	m	(Let;Lexy;Lyp;)I	a	setObjectiveFormat
		p	0		source
		p	1		objective
		p	2		format
	m	(Let;Lexy;Z)I	a	setDisplayAutoUpdate
		p	0		source
		p	1		objective
		p	2		enable
	m	(Let;Leyf;)I	a	listTrackedPlayerScores
		p	0		source
		p	1		scoreHolder
	m	(Let;Leyf;Lexy;)I	a	getScore
		p	0		source
		p	1		scoreHolder
		p	2		objective
	m	(Let;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)V	a	lambda$listTrackedPlayerScores$58
	m	(Let;Ljava/lang/String;Leyj;Lwz;)I	a	addObjective
		p	0		source
		p	1		objective
		p	2		criteria
		p	3		displayName
	m	(Let;Ljava/util/Collection;)I	a	resetScores
		p	0		source
		p	1		targets
	m	(Let;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
		p	0		source
		p	1		targets
		p	2		builder
	m	(Let;Ljava/util/Collection;Lexy;)I	a	enableTrigger
		p	0		source
		p	1		targets
		p	2		objective
	m	(Let;Ljava/util/Collection;Lexy;I)I	a	setScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Let;Ljava/util/Collection;Lexy;Lfp$a;Ljava/util/Collection;Lexy;)I	a	performOperation
		p	0		source
		p	1		targets
		p	2		targetObjective
		p	3		operation
		p	4		sources
		p	5		sourceObjectives
	m	(Let;Ljava/util/Collection;Lexy;Lwz;)I	a	setScoreDisplay
		p	0		source
		p	1		targets
		p	2		objective
		p	3		displayName
	m	(Let;Ljava/util/Collection;Lexy;Lyp;)I	a	setScoreNumberFormat
		p	0		source
		p	1		targets
		p	2		objective
		p	3		numberFormat
	m	(Lexx;)Lwz;	a	lambda$clearDisplaySlot$59
	m	(Lexx;Lexy;)Lwz;	a	lambda$setDisplaySlot$60
	m	(Lexy;)Lwz;	a	lambda$addObjective$68
	m	(Lexy;Ljava/util/Collection;)Lwz;	a	lambda$resetScore$38
	m	(Lexy;Ljava/util/Collection;I)Lwz;	a	lambda$setScore$40
	m	(Leyf;)Lwz;	a	lambda$listTrackedPlayerScores$55
	m	(Leyf;Leyc;Lexy;)Lwz;	a	lambda$getScore$30
	m	(Leyf;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lwz;	a	lambda$listTrackedPlayerScores$56
	m	(Leyj$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$29
		p	1		context
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lwz;	a	lambda$listTrackedPlayerScores$57
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		objective
		p	1		target
	m	(Ljava/util/Collection;)Lwz;	a	getFirstTargetName
		p	0		targets
	m	(Ljava/util/Collection;Lexy;)Lwz;	a	lambda$setScoreNumberFormat$48
	m	(Lwz;Ljava/util/Collection;Lexy;)Lwz;	a	lambda$setScoreDisplay$44
	m	()Lwz;	b	lambda$listObjectives$69
	m	(ILexy;Ljava/util/Collection;)Lwz;	b	lambda$addScore$50
	m	(ILexy;Ljava/util/Collection;I)Lwz;	b	lambda$addScore$49
	m	(Laoe$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addNumberFormats$27
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyp;)I	b	lambda$register$7
	m	(Let;)I	b	listObjectives
		p	0		source
	m	(Let;Ljava/util/Collection;Lexy;)I	b	resetScore
		p	0		source
		p	1		targets
		p	2		objective
	m	(Let;Ljava/util/Collection;Lexy;I)I	b	addScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lexy;)Lwz;	b	lambda$removeObjective$67
	m	(Lexy;Ljava/util/Collection;)Lwz;	b	lambda$resetScore$37
	m	(Lexy;Ljava/util/Collection;I)Lwz;	b	lambda$setScore$39
	m	(Ljava/util/Collection;)Lwz;	b	lambda$listObjectives$70
	m	(Ljava/util/Collection;Lexy;)Lwz;	b	lambda$setScoreNumberFormat$47
	m	(Lwz;Ljava/util/Collection;Lexy;)Lwz;	b	lambda$setScoreDisplay$43
	m	()Lwz;	c	lambda$listTrackedPlayers$53
	m	(Laoe$a;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$addNumberFormats$26
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$21
	m	(Let;)Z	c	lambda$register$1
		p	0		source
	m	(Let;Ljava/util/Collection;Lexy;I)I	c	removeScore
		p	0		source
		p	1		targets
		p	2		objective
		p	3		score
	m	(Lexy;)Lwz;	c	lambda$setRenderType$66
	m	(Lexy;Ljava/util/Collection;)Lwz;	c	lambda$enableTrigger$34
	m	(Lexy;Ljava/util/Collection;I)Lwz;	c	lambda$performOperation$31
	m	(Ljava/util/Collection;)Lwz;	c	lambda$listTrackedPlayers$54
	m	(Ljava/util/Collection;Lexy;)Lwz;	c	lambda$setScoreNumberFormat$46
	m	(Laoe$a;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$addNumberFormats$25
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$20
		p	0		context
	m	(Lexy;)Lwz;	d	lambda$setObjectiveFormat$65
	m	(Lexy;Ljava/util/Collection;)Lwz;	d	lambda$enableTrigger$33
	m	(Ljava/util/Collection;)Lwz;	d	lambda$resetScores$36
	m	(Ljava/util/Collection;Lexy;)Lwz;	d	lambda$setScoreNumberFormat$45
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$18
		p	0		context
	m	(Lexy;)Lwz;	e	lambda$setObjectiveFormat$64
	m	(Lexy;Ljava/util/Collection;)Lwz;	e	lambda$performOperation$32
	m	(Ljava/util/Collection;)Lwz;	e	lambda$resetScores$35
	m	(Ljava/util/Collection;Lexy;)Lwz;	e	lambda$setScoreDisplay$42
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$17
		p	0		context
	m	(Lexy;)Lwz;	f	lambda$setDisplayAutoUpdate$63
	m	(Ljava/util/Collection;Lexy;)Lwz;	f	lambda$setScoreDisplay$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$16
		p	0		context
	m	(Lexy;)Lwz;	g	lambda$setDisplayAutoUpdate$62
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$15
		p	0		context
	m	(Lexy;)Lwz;	h	lambda$setDisplayName$61
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
c	aoe$a	net/minecraft/server/commands/CommandScoreboard$a
	m	(Lcom/mojang/brigadier/context/CommandContext;Lyp;)I	run	run
		p	1		context
		p	2		numberFormat
c	aof	net/minecraft/server/commands/CommandSeed
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
		p	0		dispatcher
		p	1		dedicated
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Lwz;)Lwz;	a	lambda$register$1
	m	(ZLet;)Z	a	lambda$register$0
		p	1		source
c	aog	net/minecraft/server/commands/ServerPackCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)I	a	pushPack
		p	0		source
		p	1		url
		p	2		uuid
		p	3		hash
	m	(Let;Ljava/util/UUID;)I	a	popPack
		p	0		source
		p	1		uuid
	m	(Let;Lzg;)V	a	sendToAllConnections
		p	0		source
		p	1		packet
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	lambda$pushPack$6
	m	(Lzg;Lvt;)V	a	lambda$sendToAllConnections$5
		p	1		connection
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
c	aoh	net/minecraft/server/commands/CommandSetBlock
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		commandRegistryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Ldtg;)Z	a	lambda$register$3
		p	0		pos
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljd;Lgk;Laoh$b;Ljava/util/function/Predicate;)I	a	setBlock
		p	0		source
		p	1		pos
		p	2		block
		p	3		mode
		p	4		condition
	m	(Ljd;)Lwz;	a	lambda$setBlock$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
c	aoh$a	net/minecraft/server/commands/CommandSetBlock$Filter
	m	(Lejj;Ljd;Lgk;Laqu;)Lgk;	filter	filter
		p	1		box
		p	2		pos
		p	3		block
		p	4		world
c	aoh$b	net/minecraft/server/commands/CommandSetBlock$Mode
	m	()[Laoh$b;	a	$values
	f	Laoh$b;	a	REPLACE
	f	Laoh$b;	b	DESTROY
	f	[Laoh$b;	c	$VALUES
c	aoi	net/minecraft/server/commands/CommandIdleTimeout
	m	(I)Lwz;	a	lambda$setIdleTimeout$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;I)I	a	setIdleTimeout
		p	0		source
		p	1		minutes
c	aoj	net/minecraft/server/commands/CommandSpawnpoint
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;Ljd;F)I	a	setSpawn
		p	0		source
		p	1		targets
		p	2		pos
		p	3		angle
	m	(Ljd;FLjava/lang/String;Ljava/util/Collection;)Lwz;	a	lambda$setSpawn$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Ljd;FLjava/lang/String;Ljava/util/Collection;)Lwz;	b	lambda$setSpawn$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
		p	0		context
c	aok	net/minecraft/server/commands/CommandSetWorldSpawn
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljd;F)I	a	setSpawn
		p	0		source
		p	1		pos
		p	2		angle
	m	(Ljd;F)Lwz;	a	lambda$setSpawn$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
c	aol	net/minecraft/server/commands/SpawnArmorTrimsCommand
	m	()Lwz;	a	lambda$spawnArmorTrims$7
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Lcmx;)I	a	spawnArmorTrims
		p	0		source
		p	1		player
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljv;Ljz;Ljz;Lcxa;Lcwy;)V	a	lambda$spawnArmorTrims$5
		p	4		material
	m	(Ljz;Lcwy;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$4
		p	1		material
	m	(Ljz;Lcxa;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$3
		p	1		pattern
	m	(Ljz;Ljv;Ljz;Lcxa;)V	a	lambda$spawnArmorTrims$6
		p	3		pattern
	f	Ljava/util/Map;	a	MATERIAL_AND_SLOT_TO_ITEM
	f	Ljava/util/List;	b	VANILLA_TRIM_PATTERNS
	f	Ljava/util/List;	c	VANILLA_TRIM_MATERIALS
	f	Ljava/util/function/ToIntFunction;	d	TRIM_PATTERN_ORDER
	f	Ljava/util/function/ToIntFunction;	e	TRIM_MATERIAL_ORDER
c	aom	net/minecraft/server/commands/CommandSpectate
	m	()Lwz;	a	lambda$spectate$6
	m	(Lbsr;)Lwz;	a	lambda$spectate$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Let;)Z	a	lambda$register$1
		p	0		source
	m	(Let;Lbsr;Laqv;)I	a	spectate
		p	0		source
		p	1		entity
		p	2		player
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
		p	0		playerName
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
c	aon	net/minecraft/server/commands/CommandSpreadPlayers
	m	(Layw;IDDDD)[Laon$a;	a	createInitialPositions
		p	0		random
		p	1		count
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
		p	0		context
	m	(Let;)Z	a	lambda$register$3
		p	0		source
	m	(Let;Lexb;FFIZLjava/util/Collection;)I	a	spreadPlayers
		p	0		source
		p	1		center
		p	2		spreadDistance
		p	3		maxRange
		p	4		maxY
		p	5		respectTeams
		p	6		players
	m	(Lexb;DLaqu;Layw;DDDDI[Laon$a;Z)V	a	spreadPositions
		p	0		center
		p	1		spreadDistance
		p	3		world
		p	4		random
		p	5		minX
		p	7		minZ
		p	9		maxX
		p	11		maxZ
		p	13		maxY
		p	14		piles
		p	15		respectTeams
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
		p	0		maxY
		p	1		worldBottomY
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
		p	0		entities
	m	(Ljava/util/Collection;Laqu;[Laon$a;IZ)D	a	setPlayerPositions
		p	0		entities
		p	1		world
		p	2		piles
		p	3		maxY
		p	4		respectTeams
	m	(Z[Laon$a;Lexb;D)Lwz;	a	lambda$spreadPlayers$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
		p	0		context
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
		p	0		pilesCount
		p	1		x
		p	2		z
		p	3		maxSpreadDistance
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
c	aon$a	net/minecraft/server/commands/CommandSpreadPlayers$a
	m	()V	a	normalize
	m	(DDDD)Z	a	clamp
		p	1		minX
		p	3		minZ
		p	5		maxX
		p	7		maxZ
	m	(Laon$a;)D	a	dist
		p	1		other
	m	(Layw;DDDD)V	a	randomize
		p	1		random
		p	2		minX
		p	4		minZ
		p	6		maxX
		p	8		maxZ
	m	(Ldcc;I)I	a	getSpawnY
		p	1		blockView
		p	2		maxY
	m	()D	b	getLength
	m	(Laon$a;)V	b	moveAway
		p	1		other
	m	(Ldcc;I)Z	b	isSafe
		p	1		world
		p	2		maxY
	f	D	a	x
	f	D	b	z
c	aoo	net/minecraft/server/commands/CommandStop
	m	()Lwz;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
c	aop	net/minecraft/server/commands/CommandStopSound
	m	()Lwz;	a	lambda$stopSound$8
	m	(Lakr;)Lwz;	a	lambda$stopSound$7
	m	(Lakr;Lavq;)Lwz;	a	lambda$stopSound$5
	m	(Lavq;)Lwz;	a	lambda$stopSound$6
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Let;)Z	a	lambda$register$4
		p	0		source
	m	(Let;Ljava/util/Collection;Lavq;Lakr;)I	a	stopSound
		p	0		source
		p	1		targets
		p	2		category
		p	3		sound
	m	(Lavq;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
		p	0		context
c	aoq	net/minecraft/server/commands/CommandSummon
	m	(Lbsr;)Lwz;	a	lambda$spawnEntity$5
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljm$c;Lexc;Lub;Z)Lbsr;	a	createEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lexc;Lbsr;)Lbsr;	a	lambda$createEntity$4
		p	1		entity
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Let;Ljm$c;Lexc;Lub;Z)I	b	spawnEntity
		p	0		source
		p	1		entityType
		p	2		pos
		p	3		nbt
		p	4		initialize
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
c	aor	net/minecraft/server/commands/CommandTag
	m	(Lbsr;)Lwz;	a	lambda$listTags$9
	m	(Lbsr;Ljava/util/Set;)Lwz;	a	lambda$listTags$10
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
		p	0		context
		p	1		builder
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	listTags
		p	0		source
		p	1		targets
	m	(Let;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	a	lambda$removeTag$8
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
		p	0		entities
	m	(Ljava/util/Collection;Ljava/util/Set;)Lwz;	a	lambda$listTags$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
		p	0		context
	m	(Let;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
		p	0		source
		p	1		targets
		p	2		tag
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	b	lambda$removeTag$7
	m	(Ljava/util/Collection;)Lwz;	b	lambda$listTags$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	c	lambda$addTag$6
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	d	lambda$addTag$5
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
c	aos	net/minecraft/server/commands/CommandTeam
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$1
		p	0		context
	m	()Lwz;	a	lambda$listTeams$44
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
		p	0		context
	m	(Let;)I	a	listTeams
		p	0		source
	m	(Let;Leyb;)I	a	emptyTeam
		p	0		source
		p	1		team
	m	(Let;Leyb;Leyi$a;)I	a	setCollision
		p	0		source
		p	1		team
		p	2		collisionRule
	m	(Let;Leyb;Leyi$b;)I	a	setNametagVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Let;Leyb;Ljava/util/Collection;)I	a	joinTeam
		p	0		source
		p	1		team
		p	2		members
	m	(Let;Leyb;Ln;)I	a	setColor
		p	0		source
		p	1		team
		p	2		color
	m	(Let;Leyb;Lwz;)I	a	setDisplayName
		p	0		source
		p	1		team
		p	2		displayName
	m	(Let;Leyb;Z)I	a	setFriendlySight
		p	0		source
		p	1		team
		p	2		allowed
	m	(Let;Ljava/lang/String;)I	a	createTeam
		p	0		source
		p	1		team
	m	(Let;Ljava/lang/String;Lwz;)I	a	createTeam
		p	0		source
		p	1		team
		p	2		displayName
	m	(Let;Ljava/util/Collection;)I	a	leaveTeam
		p	0		source
		p	1		members
	m	(Leyb;)Lwz;	a	lambda$listMembers$42
	m	(Leyb;Leyi$a;)Lwz;	a	lambda$setCollision$34
	m	(Leyb;Leyi$b;)Lwz;	a	lambda$setDeathMessageVisibility$33
	m	(Leyb;Ljava/util/Collection;)Lwz;	a	lambda$listMembers$43
	m	(Leyb;Ln;)Lwz;	a	lambda$setColor$38
	m	(Ljava/util/Collection;)Lwz;	a	getFirstMemberName
		p	0		members
	m	(Ljava/util/Collection;Leyb;)Lwz;	a	lambda$emptyTeam$39
	m	(Lwz;)Lwz;	a	lambda$setSuffix$47
	m	(ZLeyb;)Lwz;	a	lambda$setFriendlyFire$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
		p	0		context
	m	(Let;)Z	b	lambda$register$0
		p	0		source
	m	(Let;Leyb;)I	b	deleteTeam
		p	0		source
		p	1		team
	m	(Let;Leyb;Leyi$b;)I	b	setDeathMessageVisibility
		p	0		source
		p	1		team
		p	2		visibility
	m	(Let;Leyb;Lwz;)I	b	setPrefix
		p	0		source
		p	1		team
		p	2		prefix
	m	(Let;Leyb;Z)I	b	setFriendlyFire
		p	0		source
		p	1		team
		p	2		allowed
	m	(Leyb;)Lwz;	b	lambda$createTeam$41
	m	(Leyb;Leyi$b;)Lwz;	b	lambda$setNametagVisibility$32
	m	(Ljava/util/Collection;)Lwz;	b	lambda$listTeams$45
	m	(Ljava/util/Collection;Leyb;)Lwz;	b	lambda$joinTeam$31
	m	(Lwz;)Lwz;	b	lambda$setPrefix$46
	m	(ZLeyb;)Lwz;	b	lambda$setFriendlySight$35
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
		p	0		context
	m	(Let;Leyb;)I	c	listMembers
		p	0		source
		p	1		team
	m	(Let;Leyb;Lwz;)I	c	setSuffix
		p	0		source
		p	1		team
		p	2		suffix
	m	(Leyb;)Lwz;	c	lambda$deleteTeam$40
	m	(Ljava/util/Collection;)Lwz;	c	lambda$leaveTeam$29
	m	(Ljava/util/Collection;Leyb;)Lwz;	c	lambda$joinTeam$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
		p	0		context
	m	(Leyb;)Lwz;	d	lambda$setDisplayName$37
	m	(Ljava/util/Collection;)Lwz;	d	lambda$leaveTeam$28
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$21
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$20
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$19
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$18
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$17
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$16
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$15
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$14
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$13
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$2
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
c	aot	net/minecraft/server/commands/CommandTeamMsg
	m	(Lbsr;Leyb;Laqv;)Z	a	lambda$register$0
		p	2		player
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;Lbsr;Leyb;Ljava/util/List;Lxp;)V	a	sendMessage
		p	0		source
		p	1		entity
		p	2		team
		p	3		recipients
		p	4		message
	m	(Let;Lbsr;Leyb;Ljava/util/List;Lxp;)V	b	lambda$register$1
		p	4		message
	f	Lxw;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
c	aou	net/minecraft/server/commands/CommandTeleport
	m	(D)Ljava/lang/String;	a	formatDouble
		p	0		d
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
		p	0		context
	m	(Let;)Z	a	lambda$register$9
		p	0		source
	m	(Let;Lbsr;Laqu;DDDLjava/util/Set;FFLaou$a;)V	a	performTeleport
		p	0		source
		p	1		target
		p	2		world
		p	3		x
		p	5		y
		p	7		z
		p	9		movementFlags
		p	10		yaw
		p	11		pitch
		p	12		facingLocation
	m	(Let;Ljava/util/Collection;Laqu;Lgr;Lgr;Laou$a;)I	a	teleportToPos
		p	0		source
		p	1		targets
		p	2		world
		p	3		location
		p	4		rotation
		p	5		facingLocation
	m	(Let;Ljava/util/Collection;Lbsr;)I	a	teleportToEntity
		p	0		source
		p	1		targets
		p	2		destination
	m	(Ljava/util/Collection;Lbsr;)Lwz;	a	lambda$teleportToEntity$11
	m	(Ljava/util/Collection;Lexc;)Lwz;	a	lambda$teleportToPos$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
		p	0		context
	m	(Let;)Z	b	lambda$register$0
		p	0		source
	m	(Ljava/util/Collection;Lbsr;)Lwz;	b	lambda$teleportToEntity$10
	m	(Ljava/util/Collection;Lexc;)Lwz;	b	lambda$teleportToPos$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
c	aou$a	net/minecraft/server/commands/CommandTeleport$a
	m	(Let;Lbsr;)V	perform	perform
		p	1		source
		p	2		entity
c	aou$b	net/minecraft/server/commands/CommandTeleport$b
	m	()Lbsr;	a	entity
	m	()Lff$a;	b	anchor
	m	(Let;Lbsr;)V	perform	perform
		p	1		source
		p	2		entity
	f	Lbsr;	a	entity
	f	Lff$a;	b	anchor
c	aou$c	net/minecraft/server/commands/CommandTeleport$c
	m	()Lexc;	a	position
	m	(Let;Lbsr;)V	perform	perform
		p	1		source
		p	2		entity
	f	Lexc;	a	position
c	aov	net/minecraft/server/commands/CommandTellRaw
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
c	aow	net/minecraft/server/commands/TickCommand
	m	()Lwz;	a	lambda$stopSprinting$27
	m	(I)Lwz;	a	lambda$step$25
	m	(J)Ljava/lang/String;	a	nanosToMilisString
		p	0		nanos
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$12
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$9
		p	0		context
		p	1		suggestionsBuilder
	m	(Let;)I	a	tickQuery
		p	0		source
	m	(Let;F)I	a	setTickingRate
		p	0		source
		p	1		rate
	m	(Let;I)I	a	sprint
		p	0		source
		p	1		ticks
	m	(Let;Z)I	a	setFreeze
		p	0		source
		p	1		frozen
	m	(Ljava/lang/String;)Lwz;	a	lambda$setTickingRate$13
	m	(Ljava/lang/String;Ljava/lang/String;)Lwz;	a	lambda$tickQuery$15
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lwz;	a	lambda$tickQuery$19
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[J)Lwz;	a	lambda$tickQuery$20
	m	()Lwz;	b	lambda$stopStepping$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$11
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
		p	0		context
		p	1		suggestionsBuilder
	m	(Let;)I	b	stopStepping
		p	0		source
	m	(Let;I)I	b	step
		p	0		source
		p	1		steps
	m	()Lwz;	c	lambda$setFreeze$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$register$2
		p	0		context
		p	1		suggestionsBuilder
	m	(Let;)I	c	stopSprinting
		p	0		source
	m	()Lwz;	d	lambda$setFreeze$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$8
		p	0		context
	m	(Let;)Z	d	lambda$register$0
		p	0		source
	m	()Lwz;	e	lambda$sprint$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$7
		p	0		context
	m	()Lwz;	f	lambda$sprint$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	()Lwz;	g	lambda$tickQuery$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	()Lwz;	h	lambda$tickQuery$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	()Lwz;	i	lambda$tickQuery$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
		p	0		context
	m	()Lwz;	j	lambda$tickQuery$14
	f	F	a	MAX_TICKRATE
	f	Ljava/lang/String;	b	DEFAULT_TICKRATE
c	aox	net/minecraft/server/commands/CommandTime
	m	(I)Lwz;	a	lambda$addTime$12
	m	(Laqu;)I	a	getDayTime
		p	0		world
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;I)I	a	setTime
		p	0		source
		p	1		time
	m	(I)Lwz;	b	lambda$setTime$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
		p	0		context
	m	(Let;I)I	b	addTime
		p	0		source
		p	1		time
	m	(I)Lwz;	c	lambda$queryTime$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Let;I)I	c	queryTime
		p	0		source
		p	1		time
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
		p	0		context
c	aoy	net/minecraft/server/commands/CommandTitle
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lep;)V	a	register
		p	0		dispatcher
		p	1		registryAccess
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	clearTitle
		p	0		source
		p	1		targets
	m	(Let;Ljava/util/Collection;III)I	a	setTimes
		p	0		source
		p	1		targets
		p	2		fadeIn
		p	3		stay
		p	4		fadeOut
	m	(Let;Ljava/util/Collection;Lwz;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
		p	0		source
		p	1		targets
		p	2		title
		p	3		titleType
		p	4		constructor
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	a	lambda$showTitle$12
	m	(Ljava/util/Collection;)Lwz;	a	lambda$setTimes$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Let;Ljava/util/Collection;)I	b	resetTitle
		p	0		source
		p	1		targets
	m	(Ljava/lang/String;Ljava/util/Collection;)Lwz;	b	lambda$showTitle$11
	m	(Ljava/util/Collection;)Lwz;	b	lambda$setTimes$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	c	lambda$resetTitle$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	d	lambda$resetTitle$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	e	lambda$clearTitle$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	f	lambda$clearTitle$7
c	aoz	net/minecraft/server/commands/TransferCommand
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/lang/String;ILjava/util/Collection;)I	a	transfer
		p	0		source
		p	1		host
		p	2		port
		p	3		players
	m	(Ljava/util/Collection;Ljava/lang/String;I)Lwz;	a	lambda$transfer$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Ljava/util/Collection;Ljava/lang/String;I)Lwz;	b	lambda$transfer$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_PLAYERS
c	apa	net/minecraft/server/commands/CommandTrigger
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
		p	0		context
		p	1		builder
	m	(Let;Laqv;Lexy;)I	a	simpleTrigger
		p	0		source
		p	1		player
		p	2		objective
	m	(Let;Laqv;Lexy;I)I	a	addValue
		p	0		source
		p	1		player
		p	2		objective
		p	3		amount
	m	(Let;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
		p	0		source
		p	1		builder
	m	(Lexy;)Lwz;	a	lambda$simpleTrigger$6
	m	(Lexy;I)Lwz;	a	lambda$setValue$5
	m	(Leyg;Leyf;Lexy;)Leye;	a	getScore
		p	0		scoreboard
		p	1		scoreHolder
		p	2		objective
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
		p	0		context
	m	(Let;Laqv;Lexy;I)I	b	setValue
		p	0		source
		p	1		player
		p	2		objective
		p	3		value
	m	(Lexy;I)Lwz;	b	lambda$addValue$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
c	apb	net/minecraft/server/commands/WardenSpawnTrackerCommand
	m	(ILcmd;)V	a	lambda$setWarningLevel$3
		p	1		warningManager
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	resetTracker
		p	0		source
		p	1		players
	m	(Let;Ljava/util/Collection;I)I	a	setWarningLevel
		p	0		source
		p	1		players
		p	2		warningCount
	m	(Ljava/util/Collection;)Lwz;	a	lambda$resetTracker$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
		p	0		context
	m	(Ljava/util/Collection;)Lwz;	b	lambda$resetTracker$6
	m	(Ljava/util/Collection;)Lwz;	c	lambda$setWarningLevel$5
	m	(Ljava/util/Collection;)Lwz;	d	lambda$setWarningLevel$4
c	apc	net/minecraft/server/commands/CommandWeather
	m	()Lwz;	a	lambda$setThunder$9
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
		p	0		context
	m	(Let;)Z	a	lambda$register$0
		p	0		source
	m	(Let;I)I	a	setClear
		p	0		source
		p	1		duration
	m	(Let;ILbpw;)I	a	getDuration
		p	0		source
		p	1		duration
		p	2		provider
	m	()Lwz;	b	lambda$setRain$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
		p	0		context
	m	(Let;I)I	b	setRain
		p	0		source
		p	1		duration
	m	()Lwz;	c	lambda$setClear$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
		p	0		context
	m	(Let;I)I	c	setThunder
		p	0		source
		p	1		duration
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	I	a	DEFAULT_TIME
c	apd	net/minecraft/server/commands/CommandWhitelist
	m	()Lwz;	a	lambda$showList$16
	m	(Laqv;)Ljava/lang/String;	a	lambda$register$5
		p	0		player
	m	(Laur;Laqv;)Z	a	lambda$register$4
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Lwz;	a	lambda$removePlayers$13
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
		p	0		context
		p	1		builder
	m	(Let;)I	a	reload
		p	0		source
	m	(Let;Ljava/util/Collection;)I	a	addPlayers
		p	0		source
		p	1		targets
	m	([Ljava/lang/String;)Lwz;	a	lambda$showList$17
	m	()Lwz;	b	lambda$disableWhitelist$15
	m	(Lcom/mojang/authlib/GameProfile;)Lwz;	b	lambda$addPlayers$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$6
		p	0		context
		p	1		builder
	m	(Let;)I	b	enableWhitelist
		p	0		source
	m	(Let;Ljava/util/Collection;)I	b	removePlayers
		p	0		source
		p	1		targets
	m	()Lwz;	c	lambda$enableWhitelist$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
		p	0		context
	m	(Let;)I	c	disableWhitelist
		p	0		source
	m	()Lwz;	d	lambda$reload$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
		p	0		context
	m	(Let;)I	d	showList
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
		p	0		context
	m	(Let;)Z	e	lambda$register$0
		p	0		source
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
c	ape	net/minecraft/server/commands/CommandWorldBorder
	m	(D)Lwz;	a	lambda$setSize$19
	m	(DJ)Lwz;	a	lambda$setSize$18
	m	(F)Lwz;	a	lambda$setDamageAmount$12
	m	(I)Lwz;	a	lambda$setWarningDistance$14
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$10
		p	0		context
	m	(Let;)I	a	getSize
		p	0		source
	m	(Let;DJ)I	a	setSize
		p	0		source
		p	1		distance
		p	3		time
	m	(Let;F)I	a	setDamageBuffer
		p	0		source
		p	1		distance
	m	(Let;I)I	a	setWarningTime
		p	0		source
		p	1		time
	m	(Let;Lexb;)I	a	setCenter
		p	0		source
		p	1		pos
	m	(Lexb;)Lwz;	a	lambda$setCenter$16
	m	(D)Lwz;	b	lambda$getSize$15
	m	(DJ)Lwz;	b	lambda$setSize$17
	m	(F)Lwz;	b	lambda$setDamageBuffer$11
	m	(I)Lwz;	b	lambda$setWarningTime$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$9
		p	0		context
	m	(Let;)Z	b	lambda$register$0
		p	0		source
	m	(Let;F)I	b	setDamageAmount
		p	0		source
		p	1		damagePerBlock
	m	(Let;I)I	b	setWarningDistance
		p	0		source
		p	1		distance
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$8
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$4
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$3
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$2
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$1
		p	0		context
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
c	apf	net/minecraft/server/commands/data/CommandDataAccessorTile
	m	(Ldqh;Ljd;)V	<init>	<init>
		p	1		blockEntity
		p	2		pos
	m	()Lub;	a	getData
	m	(Lfl$g;DI)Lwz;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laph$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lub;)V	a	setData
		p	1		nbt
	m	(Luy;)Lwz;	a	getPrintSuccess
		p	1		element
	m	()Lwz;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_A_BLOCK_ENTITY
	f	Ldqh;	c	entity
	f	Ljd;	d	pos
c	apf$1	net/minecraft/server/commands/data/CommandDataAccessorTile$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lapg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$argPrefix
c	apg	net/minecraft/server/commands/data/CommandDataAccessor
	m	()Lub;	a	getData
	m	(Lfl$g;DI)Lwz;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Lub;)V	a	setData
		p	1		nbt
	m	(Luy;)Lwz;	a	getPrintSuccess
		p	1		element
	m	()Lwz;	b	getModifiedSuccess
c	aph	net/minecraft/server/commands/data/CommandData
	m	(II)I	a	getOffset
		p	0		index
		p	1		length
	m	(Lapg;)Lwz;	a	lambda$mergeData$44
	m	(Lapg;Lfl$g;DI)Lwz;	a	lambda$getNumeric$42
	m	(Lapg;Lub;)Lwz;	a	lambda$getData$43
	m	(Lapg;Luy;)Lwz;	a	lambda$getData$41
	m	(Laph$c;Laph$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$37
		p	1		modifier
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$34
		p	3		builderx
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$33
		p	3		context
	m	(Laph$c;Laph$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$36
		p	2		context
	m	(Laph$c;Laph$c;Laph$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$35
		p	2		operation
	m	(Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$15
		p	1		builder
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
		p	1		context
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
		p	0		dispatcher
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laph$b;)V	a	lambda$register$21
		p	0		builder
		p	1		modifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Laph$c;)Ljava/util/List;	a	getSingletonSource
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Laph$c;Laph$a;Ljava/util/List;)I	a	manipulateData
		p	0		context
		p	1		objectType
		p	2		modifier
		p	3		elements
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$32
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	a	lambda$register$20
		p	0		context
		p	1		element
		p	2		path
		p	3		elements
	m	(Let;)Z	a	lambda$register$7
		p	0		source
	m	(Let;Lapg;)I	a	getData
		p	0		source
		p	1		object
	m	(Let;Lapg;Lfl$g;)I	a	removeData
		p	0		source
		p	1		object
		p	2		path
	m	(Let;Lapg;Lfl$g;D)I	a	getNumeric
		p	0		source
		p	1		object
		p	2		path
		p	3		scale
	m	(Let;Lapg;Lub;)I	a	mergeData
		p	0		source
		p	1		object
		p	2		nbt
	m	(Lfl$g;Lapg;)Luy;	a	getSingleTag
		p	0		path
		p	1		object
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
		p	0		nbt
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
		p	0		startIndex
		p	1		endIndex
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$28
		p	0		value
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	substring
		p	0		string
		p	1		startIndex
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	validatedSubstring
		p	0		string
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/util/List;Laph$d;)Ljava/util/List;	a	stringifyTagList
		p	0		list
		p	1		processor
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
		p	0		subArgumentAdder
	m	(Ljava/util/function/BiConsumer;Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$38
		p	2		builder
	m	(Ljava/util/function/Function;)Laph$c;	a	lambda$static$6
		p	0		factory
	m	(Luy;)Ljava/lang/String;	a	getAsText
		p	0		nbt
	m	(Lapg;)Lwz;	b	lambda$removeData$40
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$24
		p	3		builderx
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$31
		p	3		context
	m	(Laph$c;Laph$c;Laph$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$25
		p	2		operation
	m	(Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$13
		p	1		builder
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$12
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Laph$c;)Ljava/util/List;	b	resolveSourcePath
		p	0		context
		p	1		objectType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$30
		p	1		value
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	b	lambda$register$19
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Let;Lapg;Lfl$g;)I	b	getData
		p	0		source
		p	1		object
		p	2		path
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
		p	0		nbt
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$26
		p	0		value
	m	(Ljava/lang/String;II)Ljava/lang/String;	b	substring
		p	0		string
		p	1		startIndex
		p	2		endIndex
	m	(Ljava/util/function/Function;)Laph$c;	b	lambda$static$5
		p	0		factory
	m	(Lapg;)Lwz;	c	lambda$manipulateData$39
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$decorateModification$29
		p	3		context
	m	(Laph$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$9
		p	1		builder
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$11
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	c	lambda$register$18
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
		p	0		path
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$decorateModification$27
		p	3		context
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$10
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	d	lambda$register$17
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
		p	0		path
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$decorateModification$23
		p	3		context
	m	(Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$8
		p	1		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	e	lambda$register$16
		p	0		context
		p	1		sourceNbt
		p	2		path
		p	3		elements
	m	(Laph$c;Laph$a;Laph$c;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$decorateModification$22
		p	3		context
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	j	ERROR_INVALID_SUBSTRING
c	aph$a	net/minecraft/server/commands/data/CommandData$a
	m	(Lcom/mojang/brigadier/context/CommandContext;Lub;Lfl$g;Ljava/util/List;)I	modify	modify
		p	1		context
		p	2		sourceNbt
		p	3		path
		p	4		elements
c	aph$b	net/minecraft/server/commands/data/CommandData$b
	m	(Laph$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
		p	1		modifier
c	aph$c	net/minecraft/server/commands/data/CommandData$c
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lapg;	a	access
		p	1		context
c	aph$d	net/minecraft/server/commands/data/CommandData$d
	m	(Ljava/lang/String;)Ljava/lang/String;	process	process
		p	1		string
c	api	net/minecraft/server/commands/data/CommandDataAccessorEntity
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	()Lub;	a	getData
	m	(Lfl$g;DI)Lwz;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laph$c;	a	lambda$static$0
		p	0		argumentName
	m	(Lub;)V	a	setData
		p	1		nbt
	m	(Luy;)Lwz;	a	getPrintSuccess
		p	1		element
	m	()Lwz;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PLAYERS
	f	Lbsr;	c	entity
c	api$1	net/minecraft/server/commands/data/CommandDataAccessorEntity$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lapg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	apj	net/minecraft/server/commands/data/CommandDataStorage
	m	(Leqw;Lakr;)V	<init>	<init>
		p	1		storage
		p	2		id
	m	()Lub;	a	getData
	m	(Lcom/mojang/brigadier/context/CommandContext;)Leqw;	a	getGlobalTags
		p	0		context
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
		p	0		context
		p	1		builder
	m	(Lfl$g;DI)Lwz;	a	getPrintSuccess
		p	1		path
		p	2		scale
		p	4		result
	m	(Ljava/lang/String;)Laph$c;	a	lambda$static$1
		p	0		argumentName
	m	(Lub;)V	a	setData
		p	1		nbt
	m	(Luy;)Lwz;	a	getPrintSuccess
		p	1		element
	m	()Lwz;	b	getModifiedSuccess
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Leqw;	c	storage
	f	Lakr;	d	id
c	apj$1	net/minecraft/server/commands/data/CommandDataStorage$1
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
		p	1		argument
		p	2		argumentAdder
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lapg;	a	access
		p	1		context
	f	Ljava/lang/String;	a	val$arg
c	apm	net/minecraft/server/dedicated/DedicatedPlayerList
	m	(Lapn;Ljt;Leri;)V	<init>	<init>
		p	1		server
		p	2		tracker
		p	3		saveHandler
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	()V	a	reloadWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	()Lapn;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	f	Lorg/slf4j/Logger;	h	LOGGER
c	apn	net/minecraft/server/dedicated/DedicatedServer
	m	(Ljava/lang/Thread;Lerf$c;Latp;Lalp;Lapp;Lcom/mojang/datafixers/DataFixer;Lalm;Lare;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		propertiesLoader
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()Z	M_	shouldInformAdmins
	m	()Z	V	isSpawningMonsters
	m	()Ljava/util/Optional;	X	getServerResourcePack
	m	()Lapo;	a	getProperties
	m	(ILapo;)Lapo;	a	lambda$setPlayerIdleTimeout$2
		p	2		serverPropertiesHandler
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lapo;)Ljava/util/Optional;	a	parseBugReportLink
		p	0		propertiesHandler
	m	(Lapp;)Lalj;	a	createServerLinks
		p	0		propertiesLoader
	m	(Laqu;Ljd;Lcmx;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Laqv;)Larz;	a	createTextFilterForPlayer
		p	1		player
	m	(Laqv;Lbls;)V	a	subscribeToDebugSample
		p	1		player
		p	2		type
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ldcw;)Z	a	isLevelEnabled
		p	1		world
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
		p	1		command
	m	(Ljava/lang/String;Let;)V	a	handleConsoleInput
		p	1		command
		p	2		commandSource
	m	(Ljava/net/URI;)Lalj;	a	lambda$createServerLinks$5
		p	0		uri
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(ZLapo;)Lapo;	a	lambda$storeUsingWhiteList$4
		p	2		serverPropertiesHandler
	m	()I	aA	getCompressionThreshold
	m	()Z	aB	enforceSecureProfile
	m	()V	aU	endMetricsRecordingTick
	m	()Z	aZ	forceSynchronousWrites
	m	()Z	ab	isSpawningAnimals
	m	()Z	ac	areNpcsEnabled
	m	()Laur;	ah	getPlayerList
	m	()Z	ak	hasGui
	m	()I	am	getSpawnProtectionRadius
	m	()Z	an	repliesToStatus
	m	()Z	ao	hidesOnlinePlayers
	m	()I	ax	getAbsoluteMaxWorldSize
	m	()Ljava/lang/String;	b	getServerIp
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	()V	bD	waitForRetry
	m	()Ljava/lang/String;	bE	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bF	lambda$fillServerSystemReport$0
	m	()Ldct;	bf	getForcedGameType
	m	()I	bl	getMaxChainedNeighborUpdates
	m	()Z	bn	logIPs
	m	()Z	bo	acceptsTransfers
	m	()Lalj;	bq	serverLinks
	m	()V	br	handleConsoleInputs
	m	()Lapm;	bs	getPlayerList
	m	()V	bt	showGui
	m	()Z	bu	convertOldUsers
	m	()J	bv	getMaxTickLength
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	(Ljava/util/function/BooleanSupplier;)V	c	tickChildren
		p	1		shouldKeepTicking
	m	()I	d	getServerPort
	m	()Z	e	initServer
	m	(Ljava/lang/String;)V	e	lambda$runCommand$3
	m	()Lblu;	f	getTickTimeLogger
	m	()Z	g	isTickTimeLoggingEnabled
	m	()Ljava/lang/String;	h	getServerName
	m	()V	i	onServerExit
	m	(Z)V	i	storeUsingWhiteList
		p	1		useWhitelist
	m	()Z	j	isHardcore
	m	()I	k	getOperatorUserPermissionLevel
	m	()I	l	getFunctionCompilationLevel
	m	()Z	m	shouldRconBroadcast
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	p	isEpollEnabled
	m	()Z	q	isCommandBlockEnabled
	m	()Z	r	isPublished
	m	()Ljava/lang/String;	s	getLevelIdName
	m	()V	t	forceDifficulty
	m	()Ljava/lang/String;	u	getPluginNames
	m	()V	v	stopServer
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	I	l	CONVERSION_RETRY_DELAY_MS
	f	I	m	CONVERSION_RETRIES
	f	Ljava/util/List;	n	consoleInput
	f	Lavi;	o	queryThreadGs4
	f	Lavf;	p	rconConsoleSource
	f	Lavk;	q	rconThread
	f	Lapp;	r	settings
	f	Lapt;	s	gui
	f	Lasa;	t	textFilterClient
	f	Lblt;	u	tickTimeLogger
	f	Lblq;	v	debugSampleSubscriptionTracker
	f	Lalj;	w	serverLinks
c	apn$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Lapn;	a	this$0
c	apo	net/minecraft/server/dedicated/DedicatedServerProperties
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
		p	0		percentage
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;	a	getServerPackInfo
		p	0		id
		p	1		url
		p	2		sha1
		p	3		hash
		p	4		required
		p	5		prompt
	m	(Ljava/nio/file/Path;)Lapo;	a	fromFile
		p	0		path
	m	(Lka;)Ldzt;	a	createDimensions
		p	1		dynamicRegistry
	m	(Lka;Ljava/util/Properties;)Lapo;	a	reload
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
		p	0		maxWorldSize
	m	(Ljava/lang/String;Ljava/lang/String;)Ldck;	b	getDatapackConfig
		p	0		enabled
		p	1		disabled
	m	(Lka;Ljava/util/Properties;)Lapr;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/String;)Lwz;	c	parseResourcePackPrompt
		p	0		prompt
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$3
		p	0		type
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	e	lambda$new$2
		p	0		generatorSettings
	f	I	A	spawnProtection
	f	I	B	opPermissionLevel
	f	I	C	functionPermissionLevel
	f	J	D	maxTickTime
	f	I	E	maxChainedNeighborUpdates
	f	I	F	rateLimitPacketsPerSecond
	f	I	G	viewDistance
	f	I	H	simulationDistance
	f	I	I	maxPlayers
	f	I	J	networkCompressionThreshold
	f	Z	K	broadcastRconToOps
	f	Z	L	broadcastConsoleToOps
	f	I	M	maxWorldSize
	f	Z	N	syncChunkWrites
	f	Ljava/lang/String;	O	regionFileComression
	f	Z	P	enableJmxMonitoring
	f	Z	Q	enableStatus
	f	Z	R	hideOnlinePlayers
	f	I	S	entityBroadcastRangePercentage
	f	Ljava/lang/String;	T	textFilteringConfig
	f	Ljava/util/Optional;	U	serverResourcePackInfo
	f	Ldck;	V	initialDataPackConfiguration
	f	Lapr$a;	W	playerIdleTimeout
	f	Lapr$a;	X	whiteList
	f	Z	Y	enforceSecureProfile
	f	Z	Z	logIPs
	f	Z	a	onlineMode
	f	Ldzw;	aa	worldOptions
	f	Z	ab	acceptsTransfers
	f	Lorg/slf4j/Logger;	ad	LOGGER
	f	Ljava/util/regex/Pattern;	ae	SHA1
	f	Lcom/google/common/base/Splitter;	af	COMMA_SPLITTER
	f	Lapo$a;	ag	worldDimensionData
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	spawnAnimals
	f	Z	e	spawnNpcs
	f	Z	f	pvp
	f	Z	g	allowFlight
	f	Ljava/lang/String;	h	motd
	f	Ljava/lang/String;	i	bugReportLink
	f	Z	j	forceGameMode
	f	Z	k	enforceWhitelist
	f	Lbqo;	l	difficulty
	f	Ldct;	m	gamemode
	f	Ljava/lang/String;	n	levelName
	f	I	o	serverPort
	f	Ljava/lang/Boolean;	p	announcePlayerAchievements
	f	Z	q	enableQuery
	f	I	r	queryPort
	f	Z	s	enableRcon
	f	I	t	rconPort
	f	Ljava/lang/String;	u	rconPassword
	f	Z	v	hardcore
	f	Z	w	allowNether
	f	Z	x	spawnMonsters
	f	Z	y	useNativeTransport
	f	Z	z	enableCommandBlock
c	apo$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	m	()Lcom/google/gson/JsonObject;	a	generatorSettings
	m	(Lakr;)Lakq;	a	lambda$create$2
		p	0		levelTypeId
	m	(Ljm$c;)Ljm$c;	a	lambda$create$4
	m	(Ljz;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lka;)Ldzt;	a	create
		p	1		dynamicRegistryManager
	m	()Ljava/lang/String;	b	levelType
	m	()Ljava/util/Optional;	c	lambda$create$3
	m	()Ljava/lang/IllegalStateException;	d	lambda$create$1
	f	Lcom/google/gson/JsonObject;	a	generatorSettings
	f	Ljava/lang/String;	b	levelType
	f	Ljava/util/Map;	c	LEGACY_PRESET_NAMES
c	app	net/minecraft/server/dedicated/DedicatedServerSettings
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	()Lapo;	a	getProperties
	m	(Ljava/util/function/UnaryOperator;)Lapp;	a	update
		p	1		applier
	m	()V	b	forceSave
	f	Ljava/nio/file/Path;	a	source
	f	Lapo;	b	properties
c	apq	net/minecraft/server/dedicated/ThreadWatchdog
	m	(Lapn;)V	<init>	<init>
		p	1		server
	m	()V	a	exit
	m	(Laqu;)Ljava/lang/String;	a	lambda$run$1
		p	0		world
	m	()Ljava/lang/String;	b	lambda$run$2
	m	()Ljava/lang/String;	c	lambda$run$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Lapn;	d	server
	f	J	e	maxTickTimeNanos
c	apq$1	net/minecraft/server/dedicated/ThreadWatchdog$1
c	apr	net/minecraft/server/dedicated/PropertyManager
	m	(Ljava/util/Properties;)V	<init>	<init>
		p	1		properties
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
		p	1		key
	m	(Ljava/lang/String;I)I	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;J)J	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
		p	1		key
		p	2		stringifier
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
		p	1		key
		p	2		parser
		p	3		parsedTransformer
		p	4		stringifier
		p	5		fallback
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
		p	1		key
		p	2		transformer
		p	3		fallback
	m	(Ljava/lang/String;Z)Z	a	get
		p	1		key
		p	2		fallback
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
		p	0		parser
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
		p	1		string
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
		p	2		value
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
		p	0		intParser
		p	1		fallbackParser
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
		p	1		key
	m	(Ljava/lang/String;I)Lapr$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lapr$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		fallback
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lapr$a;	b	getMutable
		p	1		key
		p	2		parser
		p	3		stringifier
		p	4		fallback
	m	(Ljava/lang/String;Z)Lapr$a;	b	getMutable
		p	1		key
		p	2		fallback
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
		p	0		path
	m	(Lka;Ljava/util/Properties;)Lapr;	b	reload
		p	1		registryManager
		p	2		properties
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
		p	1		key
	m	(Ljava/nio/file/Path;)V	c	store
		p	1		path
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Properties;	ac	properties
c	apr$a	net/minecraft/server/dedicated/PropertyManager$EditableProperty
	m	(Lapr;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
		p	2		key
		p	3		value
		p	4		stringifier
	m	(Lka;Ljava/lang/Object;)Lapr;	a	update
		p	1		registryManager
		p	2		value
	f	Lapr;	a	this$0
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
c	apt	net/minecraft/server/gui/ServerGUI
	m	(Lapn;)V	<init>	<init>
		p	1		server
	m	()V	a	start
	m	(Lapn;)Lapt;	a	showFrameFor
		p	0		server
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
		p	1		task
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
		p	1		textArea
		p	2		scrollPane
		p	3		message
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
		p	2		event
	m	()V	b	close
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	f	runFinalizers
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Lapn;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
c	apt$1	net/minecraft/server/gui/ServerGUI$1
	f	Lapt;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Lapn;	c	val$server
c	apt$2	net/minecraft/server/gui/ServerGUI$2
c	apu	net/minecraft/server/gui/PlayerListBox
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	tick
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
c	apv	net/minecraft/server/gui/GuiStatsComponent
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
		p	1		event
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	()V	b	tick
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
c	apx	apx
	m	(ILjd;)V	<init>	<init>
		p	1		breakingEntityId
		p	2		pos
	m	()I	a	getId
	m	(I)V	a	setProgress
		p	1		stage
	m	(Lapx;)I	a	compareTo
	m	()Ljd;	b	getPos
	m	(I)V	b	updateTick
		p	1		lastUpdateTick
	m	()I	c	getProgress
	m	()I	d	getUpdatedRenderTick
	f	I	a	id
	f	Ljd;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
c	apy	net/minecraft/server/level/ChunkGenerationTask
	m	(Laqm;Ldvz;Ldcd;Lazi;)V	<init>	<init>
		p	1		chunkLoadingManager
		p	2		targetStatus
		p	3		pos
		p	4		chunks
	m	()Ljava/util/concurrent/CompletableFuture;	a	runUntilWait
	m	(Laqm;II)Laqn;	a	lambda$create$0
		p	1		x
		p	2		z
	m	(Laqm;Ldvz;Ldcd;)Lapy;	a	create
		p	0		chunkLoadingManager
		p	1		targetStatus
		p	2		pos
	m	(Ldvz;Z)V	a	scheduleLayer
		p	1		targetStatus
		p	2		allowGeneration
	m	(Ldvz;ZLaqn;)Z	a	scheduleChunkInLayer
		p	1		targetStatus
		p	2		allowGeneration
		p	3		chunkHolder
	m	()V	b	markForCancellation
	m	(Ldvz;Z)I	b	getRadiusForLayer
		p	1		status
		p	2		generate
	m	()Laqn;	c	getCenter
	m	()V	d	scheduleNextLayer
	m	()V	e	releaseClaim
	m	()Z	f	canLoadWithoutGeneration
	m	()Ljava/util/concurrent/CompletableFuture;	g	waitForScheduledLayer
	f	Ldvz;	a	targetStatus
	f	Laqm;	b	chunkMap
	f	Ldcd;	c	pos
	f	Ldvz;	d	scheduledStatus
	f	Z	e	markedForCancellation
	f	Ljava/util/List;	f	scheduledLayer
	f	Lazi;	g	cache
	f	Z	h	needsGeneration
c	apz	net/minecraft/server/level/PlayerChunk
	m	(Ldcd;ILdcy;Leot;Lapz$a;Lapz$b;)V	<init>	<init>
		p	1		pos
		p	2		level
		p	3		world
		p	4		lightingProvider
		p	5		levelUpdateListener
		p	6		playersWatchingChunkProvider
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	(I)V	a	setTicketLevel
		p	1		level
	m	(Laqb;Laql;)V	a	demoteFullChunk
		p	1		chunkLoadingManager
		p	2		target
	m	(Laqb;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Laql;)V	a	scheduleFullChunkPromotion
		p	1		chunkLoadingManager
		p	2		chunkFuture
		p	3		executor
		p	4		target
	m	(Laqb;Ljava/util/concurrent/Executor;)V	a	updateFutures
		p	1		chunkLoadingManager
		p	2		executor
	m	(Lddf;I)V	a	sectionLightChanged
		p	1		lightType
		p	2		y
	m	(Ldvi;)V	a	broadcastChanges
		p	1		chunk
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$addSaveDependency$1
		p	1		thenResult
	m	(Ljava/util/List;Ldcw;Ljd;)V	a	broadcastBlockEntity
		p	1		players
		p	2		world
		p	3		pos
	m	(Ljava/util/List;Ldcw;Ljd;Ldtc;)V	a	broadcastBlockEntityIfNeeded
		p	1		players
		p	2		world
		p	3		pos
		p	4		state
	m	(Ljava/util/List;Lzg;)V	a	broadcast
		p	1		players
		p	2		packet
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	addSendDependency
		p	1		postProcessingFuture
	m	(Ljava/util/concurrent/CompletableFuture;Laqc;)V	a	lambda$scheduleFullChunkPromotion$6
		p	1		optionalChunk
	m	(Ljava/util/concurrent/CompletableFuture;Ldvi;)V	a	lambda$scheduleFullChunkPromotion$5
		p	1		chunk
	m	(Ljd;)V	a	blockChanged
		p	1		pos
	m	(Lzg;Laqv;)V	a	lambda$broadcast$3
		p	1		player
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	(I)V	b	setQueueLevel
		p	1		level
	m	(Laqb;Laql;)V	b	lambda$scheduleFullChunkPromotion$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	b	lambda$addSendDependency$0
	m	(Ljava/util/List;Ldcw;Ljd;Ldtc;)V	b	lambda$broadcastChanges$2
		p	3		pos
		p	4		state
	m	(Ljava/util/concurrent/CompletableFuture;)V	b	addSaveDependency
		p	1		savingFuture
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	()Ldvi;	d	getTickingChunk
	m	()Ldvi;	e	getChunkToSend
	m	()Ljava/util/concurrent/CompletableFuture;	f	getSendSyncFuture
	m	()Ljava/util/concurrent/CompletableFuture;	g	getSaveSyncFuture
	m	()Z	h	isReadyForSaving
	m	()I	i	getTicketLevel
	m	()I	j	getQueueLevel
	m	()Z	k	wasAccessibleSinceLastSave
	m	()V	l	refreshAccessibility
	f	Laqc;	a	UNLOADED_LEVEL_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ldcy;	f	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	g	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	h	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	i	entityTickingChunkFuture
	f	I	j	oldTicketLevel
	f	I	k	ticketLevel
	f	I	l	queueLevel
	f	Z	m	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	n	changedBlocksPerSection
	f	Ljava/util/BitSet;	o	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	p	skyChangedLightSectionFilter
	f	Leot;	q	lightEngine
	f	Lapz$a;	r	onLevelChange
	f	Lapz$b;	s	playerProvider
	f	Z	t	wasAccessibleSinceLastSave
	f	Ljava/util/concurrent/CompletableFuture;	u	pendingFullStateConfirmation
	f	Ljava/util/concurrent/CompletableFuture;	v	sendSync
	f	Ljava/util/concurrent/CompletableFuture;	w	saveSync
c	apz$a	net/minecraft/server/level/PlayerChunk$a
	m	(Ldcd;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
c	apz$b	net/minecraft/server/level/PlayerChunk$b
	m	(Ldcd;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
c	aqa	net/minecraft/server/level/ChunkLevel
	m	(I)Ldvz;	a	generationStatus
		p	0		level
	m	(ILdvz;)Ldvz;	a	getStatusAroundFullChunk
		p	0		additionalLevel
		p	1		emptyStatus
	m	(Laql;)I	a	byStatus
		p	0		type
	m	(Ldvz;)I	a	byStatus
		p	0		status
	m	(I)Ldvz;	b	getStatusAroundFullChunk
		p	0		level
	m	(I)Laql;	c	fullStatus
		p	0		level
	m	(I)Z	d	isEntityTicking
		p	0		level
	m	(I)Z	e	isBlockTicking
		p	0		level
	m	(I)Z	f	isLoaded
		p	0		level
	f	I	a	RADIUS_AROUND_FULL_CHUNK
	f	I	b	MAX_LEVEL
	f	I	c	FULL_CHUNK_LEVEL
	f	I	d	BLOCK_TICKING_LEVEL
	f	I	e	ENTITY_TICKING_LEVEL
	f	Ldwc;	f	FULL_CHUNK_STEP
c	aqa$1	net/minecraft/server/level/ChunkLevel$1
	f	[I	a	$SwitchMap$net$minecraft$server$level$FullChunkStatus
c	aqb	net/minecraft/server/level/PlayerChunkMap
	m	(Laqu;Lerf$c;Lcom/mojang/datafixers/DataFixer;Lenu;Ljava/util/concurrent/Executor;Lbph;Ldvl;Lduz;Lard;Ldxf;Ljava/util/function/Supplier;IZ)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		executor
		p	6		mainThreadExecutor
		p	7		chunkProvider
		p	8		chunkGenerator
		p	9		worldGenerationProgressListener
		p	10		chunkStatusChangeListener
		p	11		persistentStateManagerFactory
		p	12		viewDistance
		p	13		dsync
	m	()Lduz;	a	generator
	m	(I)V	a	setServerViewDistance
		p	1		watchDistance
	m	(J)Lapz;	a	getUpdatingChunkIfPresent
		p	1		pos
	m	(JILapz;I)Lapz;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLapz;)V	a	scheduleUnload
		p	1		pos
		p	3		holder
	m	(Lapy;)V	a	runGenerationTask
		p	1		chunkLoader
	m	(Lapz;)Ljava/util/concurrent/CompletableFuture;	a	prepareEntityTickingChunk
		p	1		holder
	m	(Lapz;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
		p	1		centerChunk
		p	2		margin
		p	3		distanceToStatus
	m	(Lapz;J)V	a	lambda$scheduleUnload$12
	m	(Lapz;Laqc;)Laqc;	a	lambda$prepareTickingChunk$28
		p	2		optionalChunk
	m	(Lapz;Ldvi;)V	a	lambda$prepareTickingChunk$27
		p	2		chunk
	m	(Lapz;Ljava/lang/Runnable;)V	a	lambda$prepareAccessibleChunk$32
		p	2		task
	m	(Lapz;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$13
		p	1		void_
		p	2		throwable
	m	(Laqc;)Laqc;	a	lambda$prepareAccessibleChunk$31
		p	0		optionalChunks
	m	(Laqc;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$prepareTickingChunk$29
		p	1		chunk
		p	2		throwable
	m	(Laqn;)V	a	releaseGeneration
		p	1		chunkHolder
	m	(Laqn;Ldwc;Lazi;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
		p	1		chunkHolder
		p	2		step
		p	3		chunks
	m	(Laqv;)V	a	move
		p	1		player
	m	(Laqv;II)Z	a	isChunkTracked
		p	1		player
		p	2		chunkX
		p	3		chunkZ
	m	(Laqv;Laqg;)V	a	applyChunkTrackingView
		p	1		player
		p	2		chunkFilter
	m	(Laqv;Ldcd;)V	a	markChunkPendingToSend
		p	1		player
		p	2		pos
	m	(Laqv;Ldvi;)V	a	markChunkPendingToSend
		p	0		player
		p	1		chunk
	m	(Laqv;Ljava/util/List;)V	a	lambda$resendBiomesForChunks$42
		p	0		player
		p	1		chunksx
	m	(Laqv;Z)V	a	updatePlayerStatus
		p	1		player
		p	2		added
	m	(Lbsr;)V	a	addEntity
		p	1		entity
	m	(Lbsr;Lzg;)V	a	broadcast
		p	1		entity
		p	2		packet
	m	(Ldcd;)Ljava/lang/String;	a	getChunkDebugData
		p	1		chunkPos
	m	(Ldcd;I)V	a	waitForLightBeforeSending
		p	1		centerPos
		p	2		radius
	m	(Ldcd;Laql;)V	a	onFullChunkStatusChange
		p	1		chunkPos
		p	2		levelType
	m	(Ldcd;Lbsr;)D	a	euclideanDistanceSquared
		p	0		pos
		p	1		entity
	m	(Ldcd;Ldwd;)B	a	markPosition
		p	1		pos
		p	2		type
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$save$33
		p	2		throwable
	m	(Ldcd;Ljava/util/Optional;)Lduy;	a	lambda$scheduleChunkLoad$16
		p	2		nbt
	m	(Ldcd;Z)Ljava/util/List;	a	getPlayers
		p	1		chunkPos
		p	2		onlyOnWatchDistanceEdge
	m	(Lduy;)Z	a	save
		p	1		chunk
	m	(Ldvi;)V	a	onChunkReadyToSend
		p	1		chunk
	m	(Ldvi;Ljava/lang/Object;)V	a	lambda$prepareTickingChunk$26
		p	2		v
	m	(Ldvz;Ldcd;)Lapy;	a	scheduleGenerationTask
		p	1		requestedStatus
		p	2		pos
	m	(Ldwc;)Ljava/lang/String;	a	lambda$applyStep$18
	m	(Ljava/io/Writer;)V	a	dumpChunks
		p	1		writer
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Lz;	a	debugFuturesAndCreateReportedException
		p	1		exception
		p	2		details
	m	(Ljava/lang/StringBuilder;Lapz;)V	a	lambda$debugFuturesAndCreateReportedException$4
		p	1		chunkHolder
	m	(Ljava/lang/StringBuilder;Lapz;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$3
		p	2		pair
	m	(Ljava/lang/Throwable;Ldcd;)Lduy;	a	handleChunkLoadFailure
		p	1		throwable
		p	2		chunkPos
	m	(Ljava/util/List;)V	a	resendBiomesForChunks
		p	1		chunks
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$readChunk$38
		p	1		nbt
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
		p	0		future
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Lo;)V	a	lambda$applyStep$19
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lduy;)V	a	lambda$saveAllChunks$10
		p	1		chunk
	m	(Z)V	a	saveAllChunks
		p	1		flush
	m	()Ldva;	b	generatorState
	m	(I)Ldvz;	b	lambda$prepareTickingChunk$22
		p	0		distance
	m	(J)Lapz;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Lapy;)V	b	lambda$runGenerationTask$21
	m	(Lapz;)Ljava/util/concurrent/CompletableFuture;	b	prepareTickingChunk
		p	1		holder
	m	(Lapz;Ljava/lang/Runnable;)V	b	lambda$prepareTickingChunk$25
		p	2		task
	m	(Laqc;)Laqc;	b	lambda$prepareTickingChunk$24
		p	0		optionalChunks
	m	(Laqv;)I	b	getPlayerViewDistance
		p	1		player
	m	(Laqv;II)Z	b	isChunkOnTrackedBorder
		p	1		player
		p	2		chunkX
		p	3		chunkZ
	m	(Laqv;Ldcd;)V	b	dropChunk
		p	0		player
		p	1		pos
	m	(Lbsr;)V	b	removeEntity
		p	1		entity
	m	(Lbsr;Lzg;)V	b	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Ldcd;)Z	b	anyPlayerCloseEnoughForSpawning
		p	1		pos
	m	(Ldcd;Ljava/lang/Throwable;)Lduy;	b	lambda$scheduleChunkLoad$17
		p	2		throwable
	m	(Ldcd;Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$scheduleChunkLoad$15
		p	1		nbt
	m	(Ldcd;Lub;)Z	b	lambda$scheduleChunkLoad$14
		p	1		nbt2
	m	(Lduy;)Ljava/util/Optional;	b	lambda$dumpChunks$34
		p	0		chunk
	m	(Ldvi;)Ljava/lang/Integer;	b	lambda$dumpChunks$37
		p	0		chunk
	m	(Ljava/util/List;)Ldvi;	b	lambda$prepareAccessibleChunk$30
		p	0		chunks
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
		p	1		shouldKeepTicking
	m	(Lub;)Z	b	isChunkDataValid
		p	0		nbt
	m	()Ldzm;	c	randomState
	m	(I)Ldvz;	c	lambda$prepareEntityTickingChunk$5
		p	0		distance
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
		p	1		pos
	m	(Lapy;)V	c	lambda$runGenerationTask$20
	m	(Lapz;)Ljava/util/concurrent/CompletableFuture;	c	prepareAccessibleChunk
		p	1		holder
	m	(Laqc;)Laqc;	c	lambda$prepareEntityTickingChunk$7
		p	0		chunk
	m	(Laqv;)Z	c	skipPlayer
		p	1		player
	m	(Laqv;Ldcd;)Z	c	playerIsCloseEnoughForSpawning
		p	1		player
		p	2		pos
	m	(Ldcd;)Ljava/util/List;	c	getPlayersCloseForSpawning
		p	1		pos
	m	(Lduy;)Z	c	lambda$saveAllChunks$9
		p	0		chunk
	m	(Ldvi;)Ljava/lang/Integer;	c	lambda$dumpChunks$36
		p	0		chunk
	m	(Ljava/util/List;)Ldvi;	c	lambda$prepareTickingChunk$23
		p	0		cs
	m	(Lub;)Lub;	c	upgradeChunkTag
		p	1		nbt
	m	()Laqx;	d	getLightEngine
	m	(J)Laqn;	d	acquireGeneration
		p	1		pos
	m	(Lapz;)Z	d	saveChunkIfNeeded
		p	1		chunkHolder
	m	(Laqc;)Laqc;	d	lambda$getChunkRangeFuture$1
	m	(Laqv;)V	d	updatePlayerPos
		p	1		player
	m	(Laqv;Ldcd;)V	d	lambda$applyChunkTrackingView$40
		p	1		chunkPos
	m	(Ldvi;)Ljava/lang/Integer;	d	lambda$dumpChunks$35
		p	0		chunk
	m	(Ljava/util/List;)Ldvi;	d	lambda$prepareEntityTickingChunk$6
		p	0		chunks
	m	()Z	e	hasWork
	m	(J)Ldvi;	e	getChunkToSend
		p	1		pos
	m	(Lapz;)Lduy;	e	lambda$saveAllChunks$8
		p	1		holder
	m	(Laqv;)V	e	updateChunkTracking
		p	1		player
	m	(Laqv;Ldcd;)V	e	lambda$applyChunkTrackingView$39
		p	2		chunkPos
	m	(Ljava/util/List;)Laqc;	e	lambda$getChunkRangeFuture$2
	m	()Z	f	promoteChunkMap
	m	(J)I	f	lambda$getChunkQueueLevel$0
	m	(Laqv;)Ljava/util/List;	f	lambda$resendBiomesForChunks$41
		p	0		player
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	f	scheduleChunkLoad
		p	1		pos
	m	()V	g	runGenerationTasks
	m	(Ldcd;)Lduy;	g	createEmptyChunk
		p	1		chunkPos
	m	()I	h	getTickingGenerated
	m	(Ldcd;)V	h	markPositionReplaceable
		p	1		pos
	m	()I	i	size
	m	(Ldcd;)Z	i	isExistingChunkFull
		p	1		pos
	m	()Laqk;	j	getDistanceManager
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	j	readChunk
		p	1		chunkPos
	m	()Ljava/lang/Iterable;	k	getChunks
	m	(Ldcd;)V	k	lambda$waitForLightBeforeSending$43
		p	1		pos
	m	()V	l	tick
	m	()Lces;	m	getPoiManager
	m	()Ljava/lang/String;	n	getStorageName
	m	()Z	r	lambda$saveAllChunks$11
	f	Z	A	modified
	f	Laqe;	B	queueSorter
	f	Lbpj;	C	worldgenMailbox
	f	Lbpj;	D	mainThreadMailbox
	f	Lard;	E	progressListener
	f	Ldxf;	F	chunkStatusListener
	f	Laqb$a;	G	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	H	tickingGenerated
	f	Ljava/lang/String;	I	storageName
	f	Laqo;	J	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	K	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	L	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	M	chunkSaveCooldowns
	f	Ljava/util/Queue;	N	unloadQueue
	f	I	O	serverViewDistance
	f	Ldwe;	P	worldGenContext
	f	I	a	MIN_VIEW_DISTANCE
	f	I	b	MAX_VIEW_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	Laqc;	f	UNLOADED_CHUNK_LIST_RESULT
	f	Ljava/util/concurrent/CompletableFuture;	g	UNLOADED_CHUNK_LIST_FUTURE
	f	B	h	CHUNK_TYPE_REPLACEABLE
	f	B	i	CHUNK_TYPE_UNKNOWN
	f	B	j	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	I	l	CHUNK_SAVED_PER_TICK
	f	I	m	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	n	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	o	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	p	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	q	pendingUnloads
	f	Ljava/util/List;	r	pendingGenerationTasks
	f	Laqu;	s	level
	f	Laqx;	t	lightEngine
	f	Lbph;	u	mainThreadExecutor
	f	Ldzm;	v	randomState
	f	Ldva;	w	chunkGeneratorState
	f	Ljava/util/function/Supplier;	x	overworldDataStorage
	f	Lces;	y	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	z	toDrop
c	aqb$a	net/minecraft/server/level/PlayerChunkMap$a
	m	(Laqb;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	2		workerExecutor
		p	3		mainThreadExecutor
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILapz;I)Lapz;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(J)Lapz;	b	getChunk
		p	1		pos
	f	Laqb;	a	this$0
c	aqb$b	net/minecraft/server/level/PlayerChunkMap$EntityTracker
	m	(Laqb;Lbsr;IIZ)V	<init>	<init>
		p	2		entity
		p	3		maxDistance
		p	4		tickInterval
		p	5		alwaysUpdateVelocity
	m	()V	a	broadcastRemoved
	m	(I)I	a	scaledRange
		p	1		initialDistance
	m	(Laqv;)V	a	removePlayer
		p	1		player
	m	(Ljava/util/List;)V	a	updatePlayers
		p	1		players
	m	(Lzg;)V	a	broadcast
		p	1		packet
	m	()I	b	getEffectiveRange
	m	(Laqv;)V	b	updatePlayer
		p	1		player
	m	(Lzg;)V	b	broadcastAndSend
		p	1		packet
	f	Laqb;	a	this$0
	f	Laqt;	b	serverEntity
	f	Lbsr;	c	entity
	f	I	d	range
	f	Lkf;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
c	aqc	net/minecraft/server/level/ChunkResult
	m	()Z	a	isSuccess
	m	(Laqc;Ljava/lang/Object;)Ljava/lang/Object;	a	orElse
		p	0		optionalChunk
		p	1		other
	m	(Ljava/lang/Object;)Laqc;	a	of
		p	0		chunk
	m	(Ljava/lang/String;)Laqc;	a	error
		p	0		error
	m	(Ljava/util/function/Consumer;)Laqc;	a	ifSuccess
		p	1		callback
	m	(Ljava/util/function/Function;)Laqc;	a	map
		p	1		mapper
	m	(Ljava/util/function/Supplier;)Laqc;	a	error
		p	0		error
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
		p	1		other
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$error$0
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
		p	1		exceptionSupplier
c	aqc$a	net/minecraft/server/level/ChunkResult$a
	m	()Z	a	isSuccess
	m	(Ljava/util/function/Consumer;)Laqc;	a	ifSuccess
		p	1		callback
	m	(Ljava/util/function/Function;)Laqc;	a	map
		p	1		mapper
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
		p	1		other
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
		p	1		exceptionSupplier
	m	()Ljava/util/function/Supplier;	c	error
	f	Ljava/util/function/Supplier;	a	error
c	aqc$b	net/minecraft/server/level/ChunkResult$b
	m	()Z	a	isSuccess
	m	(Ljava/util/function/Consumer;)Laqc;	a	ifSuccess
		p	1		callback
	m	(Ljava/util/function/Function;)Laqc;	a	map
		p	1		mapper
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
		p	1		other
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
		p	1		exceptionSupplier
	m	()Ljava/lang/Object;	c	value
	f	Ljava/lang/Object;	a	value
c	aqd	net/minecraft/server/level/ChunkTaskQueue
	m	(Ljava/lang/String;I)V	<init>	<init>
		p	1		name
		p	2		maxSize
	m	()Ljava/util/stream/Stream;	a	pop
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	(ILdcd;I)V	a	resortChunkTasks
		p	1		fromLevel
		p	2		pos
		p	3		toLevel
	m	(J)Ljava/lang/Runnable;	a	acquire
		p	1		pos
	m	(JLjava/util/Optional;)Lcom/mojang/datafixers/util/Either;	a	lambda$pop$6
	m	(JZ)V	a	release
		p	1		pos
		p	3		removeElement
	m	(Ljava/util/Optional;)Z	a	lambda$release$3
	m	(Ljava/util/Optional;JI)V	a	submit
		p	1		element
		p	2		pos
		p	4		level
	m	()Z	b	hasWork
	m	(J)Lcom/mojang/datafixers/util/Either;	b	lambda$pop$5
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	c	getAcquired
	m	(J)V	c	lambda$acquire$4
	m	(J)Ljava/util/List;	d	lambda$submit$2
	m	(J)Ljava/util/List;	e	lambda$resortChunkTasks$1
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	taskQueue
	f	I	c	firstQueue
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	acquired
	f	I	f	maxTasks
c	aqe	net/minecraft/server/level/ChunkTaskQueueSorter
	m	(Ljava/util/List;Ljava/util/concurrent/Executor;I)V	<init>	<init>
		p	1		actors
		p	2		executor
		p	3		maxQueues
	m	()Z	a	hasWork
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$15
	m	(ILbpj;)Laqd;	a	lambda$new$0
		p	1		actor
	m	(ILdcd;ILaqd;)V	a	lambda$onLevelChange$9
		p	3		queue
	m	(Laqd;Lbpj;)V	a	pollTask
		p	1		queue
		p	2		actor
	m	(Laqd;Lbpj;Ljava/lang/Void;)V	a	lambda$pollTask$16
	m	(Laqn;Ljava/lang/Runnable;)Laqe$a;	a	message
		p	0		holder
		p	1		task
	m	(Laqn;Ljava/util/function/Function;)Laqe$a;	a	message
		p	0		holder
		p	1		taskFunction
	m	(Lbpj;)Lbpj;	a	getReleaseProcessor
		p	1		executor
	m	(Lbpj;JLjava/lang/Runnable;Z)V	a	release
		p	1		actor
		p	2		chunkPos
		p	4		callback
		p	5		clearTask
	m	(Lbpj;JZLjava/lang/Runnable;)V	a	lambda$release$11
	m	(Lbpj;Laqe$b;)V	a	lambda$getReleaseProcessor$6
		p	2		message
	m	(Lbpj;Lbpj;)Lbpm$b;	a	lambda$getReleaseProcessor$8
		p	2		yield
	m	(Lbpj;Lbpj;Z)V	a	lambda$getProcessor$4
	m	(Lbpj;Lcom/mojang/datafixers/util/Either;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$14
		p	1		executeOrAddBlocking
	m	(Lbpj;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V	a	submit
		p	1		actor
		p	2		task
		p	3		chunkPos
		p	5		lastLevelUpdatedToProvider
		p	6		addBlocker
	m	(Lbpj;Ljava/util/function/IntSupplier;JLjava/util/function/Function;Z)V	a	lambda$submit$12
	m	(Lbpj;Z)Lbpj;	a	getProcessor
		p	1		executor
		p	2		addBlocker
	m	(Lbpj;ZLaqe$a;)V	a	lambda$getProcessor$3
		p	3		task
	m	(Lbpj;ZLbpj;)Lbpm$b;	a	lambda$getProcessor$5
		p	3		yield
	m	(Ljava/lang/Long;)Ljava/lang/String;	a	lambda$getDebugStatus$18
		p	0		pos
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$pollTask$13
		p	0		addBlocking
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Laqe$a;	a	message
		p	0		task
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/lang/Runnable;JZ)Laqe$b;	a	release
		p	0		task
		p	1		pos
		p	3		removeTask
	m	(Ljava/lang/Runnable;Lbpj;)Ljava/lang/Runnable;	a	lambda$message$2
		p	1		yield
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getDebugStatus$19
		p	0		entry
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Laqe$a;	a	message
		p	0		taskFunction
		p	1		pos
		p	3		lastLevelUpdatedToProvider
	m	(Ljava/util/function/IntSupplier;Ldcd;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$10
	m	()Ljava/lang/String;	b	getDebugStatus
	m	(Laqd;Lbpj;)V	b	lambda$pollTask$17
	m	(Lbpj;)Laqd;	b	getQueue
		p	1		actor
	m	(Lbpj;Lbpj;)V	b	lambda$getReleaseProcessor$7
	m	(Ljava/lang/Runnable;Lbpj;)V	b	lambda$message$1
	m	(Ldcd;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
		p	1		pos
		p	2		levelGetter
		p	3		targetLevel
		p	4		levelSetter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	queues
	f	Ljava/util/Set;	c	sleeping
	f	Lbpk;	d	mailbox
c	aqe$a	net/minecraft/server/level/ChunkTaskQueueSorter$a
	m	(Ljava/util/function/Function;JLjava/util/function/IntSupplier;)V	<init>	<init>
		p	1		taskFunction
		p	2		pos
		p	4		lastLevelUpdatedToProvider
	f	Ljava/util/function/Function;	a	task
	f	J	b	pos
	f	Ljava/util/function/IntSupplier;	c	level
c	aqe$b	net/minecraft/server/level/ChunkTaskQueueSorter$b
	m	(Ljava/lang/Runnable;JZ)V	<init>	<init>
		p	1		callback
		p	2		pos
		p	4		removeTask
	f	Ljava/lang/Runnable;	a	task
	f	J	b	pos
	f	Z	c	clearQueue
c	aqf	net/minecraft/server/level/ChunkMap
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(J)Z	a	isSource
		p	1		id
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		chunkPos
		p	3		distance
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	aqg	net/minecraft/server/level/ChunkTrackingView
	m	(II)Z	a	contains
		p	1		x
		p	2		z
	m	(IIIII)Z	a	isInViewDistance
		p	0		centerX
		p	1		centerZ
		p	2		viewDistance
		p	3		x
		p	4		z
	m	(IIIIIZ)Z	a	isWithinDistance
		p	0		centerX
		p	1		centerZ
		p	2		viewDistance
		p	3		x
		p	4		z
		p	5		includeEdge
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Laqg;Laqg;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	difference
		p	0		oldFilter
		p	1		newFilter
		p	2		newlyIncluded
		p	3		justRemoved
	m	(Ldcd;)Z	a	contains
		p	1		pos
	m	(Ldcd;I)Laqg;	a	of
		p	0		center
		p	1		viewDistance
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
	m	(II)Z	b	isInViewDistance
		p	1		x
		p	2		z
	f	Laqg;	a	EMPTY
c	aqg$1	net/minecraft/server/level/ChunkTrackingView$1
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
c	aqg$a	net/minecraft/server/level/ChunkTrackingView$a
	m	()Ldcd;	a	center
	m	(IIZ)Z	a	contains
		p	1		x
		p	2		z
		p	3		includeEdge
	m	(Laqg$a;)Z	a	squareIntersects
		p	1		o
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		consumer
	m	()I	b	viewDistance
	m	()I	c	minX
	m	()I	d	minZ
	m	()I	e	maxX
	m	()I	f	maxZ
	f	Ldcd;	b	center
	f	I	c	viewDistance
c	aqh	net/minecraft/server/level/ClientInformation
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Laqh;	a	createDefault
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/lang/String;	b	language
	m	()I	c	viewDistance
	m	()Lcmv;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Lbtg;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	f	I	a	MAX_LANGUAGE_LENGTH
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lcmv;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Lbtg;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
c	aqi	net/minecraft/server/level/BlockPosition2D
	m	()Ldcd;	a	toChunkPos
	m	(II)J	a	asLong
		p	0		x
		p	1		z
	m	(J)I	a	getX
		p	0		packed
	m	()J	b	toLong
	m	(J)I	b	getZ
		p	0		packed
	m	()I	c	x
	m	()I	d	z
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
c	aqj	net/minecraft/server/level/DemoPlayerInteractManager
	m	(Laqv;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Laqv;Ldcw;Lcuq;Lbqq;)Lbqr;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Laqv;Ldcw;Lcuq;Lbqq;Lewy;)Lbqr;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Ljd;Lahm$a;Lji;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	()V	f	outputDemoReminder
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
c	aqk	net/minecraft/server/level/ChunkMapDistance
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		workerExecutor
		p	2		mainThreadExecutor
	m	()V	a	purgeStaleTickets
	m	(I)V	a	updatePlayerTickets
		p	1		viewDistance
	m	(J)Z	a	isChunkToRemove
		p	1		pos
	m	(JILapz;I)Lapz;	a	updateChunkScheduling
		p	1		pos
		p	3		level
		p	4		holder
	m	(JLaqc;)V	a	lambda$runAllUpdates$5
		p	3		optionalChunk
	m	(JLaqy;)V	a	addTicket
		p	1		position
		p	3		ticket
	m	(Laqb;)Z	a	runAllUpdates
		p	1		chunkLoadingManager
	m	(Laqb;Lapz;)V	a	lambda$runAllUpdates$1
		p	2		holder
	m	(Laqy;)Z	a	lambda$runAllUpdates$2
		p	0		ticket
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lazg;)I	a	getTicketLevelAt
		p	0		tickets
	m	(Ldcd;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Ljava/lang/String;)V	a	dumpTickets
		p	1		path
	m	(Lkf;Laqv;)V	a	addPlayer
		p	1		pos
		p	2		player
	m	()I	b	getNaturalSpawnChunkCount
	m	(I)V	b	updateSimulationDistance
		p	1		simulationDistance
	m	(J)Lapz;	b	getChunk
		p	1		pos
	m	(JLaqy;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laqb;Lapz;)V	b	lambda$runAllUpdates$0
		p	1		holder
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lkf;Laqv;)V	b	removePlayer
		p	1		pos
		p	2		player
	m	()Ljava/lang/String;	c	getDebugStatus
	m	(J)Z	c	inEntityTickingRange
		p	1		chunkPos
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	c	addRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()Lara;	d	tickingTracker
	m	(J)Z	d	inBlockTickingRange
		p	1		chunkPos
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	d	removeRegionTicket
		p	1		type
		p	2		pos
		p	3		radius
		p	4		argument
	m	()V	e	removeTicketsOnClosing
	m	(J)Ljava/lang/String;	e	getTicketDebugString
		p	1		pos
	m	()Z	f	hasTickets
	m	(J)Z	f	hasPlayersNearby
		p	1		chunkPos
	m	()I	g	getPlayerTicketLevel
	m	(J)Lazg;	g	getTickets
		p	1		position
	m	()V	h	lambda$runAllUpdates$3
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	h	lambda$addPlayer$7
		p	0		sectionPos
	m	(J)Lazg;	i	lambda$getTickets$6
		p	0		pos
	m	(J)V	j	lambda$runAllUpdates$4
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	PLAYER_TICKET_LEVEL
	f	I	c	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	playersPerChunk
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	e	tickets
	f	Laqk$a;	f	ticketTracker
	f	Laqk$b;	g	naturalSpawnChunkCounter
	f	Lara;	h	tickingTicketsTracker
	f	Laqk$c;	i	playerTicketManager
	f	Ljava/util/Set;	j	chunksToUpdateFutures
	f	Laqe;	k	ticketThrottler
	f	Lbpj;	l	ticketThrottlerInput
	f	Lbpj;	m	ticketThrottlerReleaser
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	n	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	o	mainThreadExecutor
	f	J	p	ticketTickCounter
	f	I	q	simulationDistance
c	aqk$a	net/minecraft/server/level/ChunkMapDistance$a
	m	(I)I	a	runDistanceUpdates
		p	1		distance
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Laqk;	a	this$0
	f	I	b	MAX_LEVEL
c	aqk$b	net/minecraft/server/level/ChunkMapDistance$b
	m	(Laqk;I)V	<init>	<init>
		p	2		maxDistance
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(Ljava/lang/String;)V	a	dumpChunks
		p	1		path
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Z	d	havePlayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Laqk;	c	this$0
c	aqk$c	net/minecraft/server/level/ChunkMapDistance$c
	m	(Laqk;I)V	<init>	<init>
		p	1		maxDistance
	m	()V	a	runAllUpdates
	m	(I)V	a	updateViewDistance
		p	1		watchDistance
	m	(JII)V	a	onLevelChange
		p	1		pos
		p	3		oldDistance
		p	4		distance
	m	(JIZZ)V	a	onLevelChange
		p	1		pos
		p	3		distance
		p	4		oldWithinViewDistance
		p	5		withinViewDistance
	m	(JLaqy;)V	a	lambda$onLevelChange$5
	m	(JI)V	b	lambda$runAllUpdates$7
		p	3		level
	m	(JLaqy;)V	b	lambda$onLevelChange$4
	m	(I)Z	c	haveTicketFor
		p	1		distance
	m	(JLaqy;)V	c	lambda$onLevelChange$2
	m	()V	d	lambda$onLevelChange$0
	m	(I)I	d	lambda$onLevelChange$3
	m	(J)I	d	lambda$runAllUpdates$6
	m	(JLaqy;)V	d	lambda$onLevelChange$1
	f	Laqk;	d	this$0
	f	I	g	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	h	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	i	toUpdate
c	aql	net/minecraft/server/level/FullChunkStatus
	m	()[Laql;	a	$values
	m	(Laql;)Z	a	isOrAfter
		p	1		levelType
	f	Laql;	a	INACCESSIBLE
	f	Laql;	b	FULL
	f	Laql;	c	BLOCK_TICKING
	f	Laql;	d	ENTITY_TICKING
	f	[Laql;	e	$VALUES
c	aqm	net/minecraft/server/level/GeneratingChunkMap
	m	(Laqn;)V	a	releaseGeneration
		p	1		chunkHolder
	m	(Laqn;Ldwc;Lazi;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
		p	1		chunkHolder
		p	2		step
		p	3		chunks
	m	(Ldvz;Ldcd;)Lapy;	a	scheduleGenerationTask
		p	1		requestedStatus
		p	2		pos
	m	(J)Laqn;	d	acquireGeneration
		p	1		pos
	m	()V	g	runGenerationTasks
c	aqn	net/minecraft/server/level/GenerationChunkHolder
	m	(Ldcd;)V	<init>	<init>
		p	1		pos
	m	(ILjava/util/concurrent/CompletableFuture;)V	a	failAndClearPendingFuture
		p	1		statusIndex
		p	2		previousFuture
	m	(Lapy;)V	a	removeTask
		p	1		loader
	m	(Laqb;)V	a	updateHighestAllowedStatus
		p	1		chunkLoadingManager
	m	(Laqb;Ldvz;)V	a	rescheduleChunkTask
		p	1		chunkLoadingManager
		p	2		requestedStatus
	m	(Ldvh;)V	a	replaceProtoChunk
		p	1		chunk
	m	(Ldvz;)Lduy;	a	getChunkIfPresentUnchecked
		p	1		requestedStatus
	m	(Ldvz;Laqb;)Ljava/util/concurrent/CompletableFuture;	a	scheduleChunkGenerationTask
		p	1		requestedStatus
		p	2		chunkLoadingManager
	m	(Ldvz;Lduy;)V	a	completeFuture
		p	1		status
		p	2		chunk
	m	(Ldvz;Ldvz;)V	a	failAndClearPendingFuturesBetween
		p	1		from
		p	2		to
	m	(Ldwc;Laqm;Lazi;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
		p	1		step
		p	2		chunkLoadingManager
		p	3		chunks
	m	(Ldwc;Lduy;Ljava/lang/Throwable;)Laqc;	a	lambda$applyStep$0
		p	2		chunk
		p	3		throwable
	m	(Ldvz;)Lduy;	b	getChunkIfPresent
		p	1		requestedStatus
	m	(Ldvz;)Ljava/util/concurrent/CompletableFuture;	c	getOrCreateFuture
		p	1		status
	m	(Ldvz;)Ldvz;	d	findHighestStatusWithPendingFuture
		p	1		checkUpperBound
	m	(Ldvz;)Z	e	acquireStatusBump
		p	1		nextStatus
	m	(Ldvz;)Z	f	isStatusDisallowed
		p	1		status
	m	()I	i	getTicketLevel
	m	()I	j	getQueueLevel
	m	()V	m	increaseGenerationRefCount
	m	()V	n	decreaseGenerationRefCount
	m	()I	o	getGenerationRefCount
	m	()Lduy;	p	getLatestChunk
	m	()Ldvz;	q	getPersistedStatus
	m	()Ldcd;	r	getPos
	m	()Laql;	s	getFullStatus
	m	()Ljava/util/List;	t	getAllFutures
	m	()Ldvz;	u	getLatestStatus
	f	Ljava/util/List;	a	CHUNK_STATUSES
	f	Laqc;	b	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	c	UNLOADED_CHUNK_FUTURE
	f	Ldcd;	d	pos
	f	Laqc;	e	NOT_DONE_YET
	f	Ldvz;	f	highestAllowedStatus
	f	Ljava/util/concurrent/atomic/AtomicReference;	g	startedWork
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	h	futures
	f	Ljava/util/concurrent/atomic/AtomicReference;	i	task
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	generationRefCount
c	aqo	net/minecraft/server/level/PlayerMap
	m	()Ljava/util/Set;	a	getAllPlayers
	m	(Laqv;)V	a	removePlayer
		p	1		player
	m	(Laqv;Z)V	a	addPlayer
		p	1		player
		p	2		inactive
	m	(Laqv;)V	b	ignorePlayer
		p	1		player
	m	(Laqv;)V	c	unIgnorePlayer
		p	1		player
	m	(Laqv;)Z	d	ignoredOrUnknown
		p	1		player
	m	(Laqv;)Z	e	ignored
		p	1		player
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
c	aqp	net/minecraft/server/level/WorldProviderNormal
	m	(Laqu;II)Ljd;	a	getOverworldRespawnPos
		p	0		world
		p	1		x
		p	2		z
	m	(Laqu;Ldcd;)Ljd;	a	getSpawnPosInChunk
		p	0		world
		p	1		chunkPos
c	aqq	net/minecraft/server/level/LightEngineGraphSection
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JIZ)V	b	update
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
c	aqr	net/minecraft/server/level/BossBattleServer
	m	(Lwz;Lbqh$a;Lbqh$b;)V	<init>	<init>
		p	1		displayName
		p	2		color
		p	3		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Laqv;)V	a	addPlayer
		p	1		player
	m	(Lbqh$a;)V	a	setColor
		p	1		color
	m	(Lbqh$b;)V	a	setOverlay
		p	1		style
	m	(Ljava/util/function/Function;)V	a	broadcast
		p	1		bossBarToPacketFunction
	m	(Lwz;)V	a	setName
		p	1		name
	m	(Z)Lbqh;	a	setDarkenScreen
		p	1		darkenSky
	m	()V	b	removeAllPlayers
	m	(Laqv;)V	b	removePlayer
		p	1		player
	m	(Z)Lbqh;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbqh;	c	setCreateWorldFog
		p	1		thickenFog
	m	(Z)V	d	setVisible
		p	1		visible
	m	()Z	f	isVisible
	m	()Ljava/util/Collection;	g	getPlayers
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
c	aqs	net/minecraft/server/level/ChunkProviderServer
	m	(Laqu;Lerf$c;Lcom/mojang/datafixers/DataFixer;Lenu;Ljava/util/concurrent/Executor;Lduz;IIZLard;Ldxf;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		world
		p	2		session
		p	3		dataFixer
		p	4		structureTemplateManager
		p	5		workerExecutor
		p	6		chunkGenerator
		p	7		viewDistance
		p	8		simulationDistance
		p	9		dsync
		p	10		worldGenerationProgressListener
		p	11		chunkStatusChangeListener
		p	12		persistentStateManagerFactory
	m	()Laqx;	a	getLightEngine
	m	(I)V	a	setViewDistance
		p	1		watchDistance
	m	(II)Ldvi;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdvz;Z)Lduy;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(J)Z	a	isPositionTicking
		p	1		pos
	m	(JLduy;Ldvz;)V	a	storeInCache
		p	1		pos
		p	3		chunk
		p	4		status
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
		p	1		pos
		p	3		chunkConsumer
	m	(Lapz;I)Z	a	chunkAbsent
		p	1		holder
		p	2		maxLevel
	m	(Laqs$a;)V	a	lambda$tickChunks$3
		p	0		chunk
	m	(Laqv;)V	a	move
		p	1		player
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	a	addRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbsr;)V	a	removeEntity
		p	1		entity
	m	(Lbsr;Lzg;)V	a	broadcastAndSend
		p	1		entity
		p	2		packet
	m	(Ldcd;)Ljava/lang/String;	a	getChunkDebugData
		p	1		pos
	m	(Ldcd;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Lddf;Lkf;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$2
		p	0		future
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(Ljd;)V	a	blockChanged
		p	1		pos
	m	(Lkf;Lddf;)V	a	lambda$onLightUpdate$4
	m	(Z)V	a	save
		p	1		flush
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()I	b	getTickingGenerated
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(IILdvz;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(J)Lapz;	b	getVisibleChunkIfPresent
		p	1		pos
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	b	removeRegionTicket
		p	1		ticketType
		p	2		pos
		p	3		radius
		p	4		argument
	m	(Lbsr;)V	b	addEntity
		p	1		entity
	m	(Lbsr;Lzg;)V	b	broadcast
		p	1		entity
		p	2		packet
	m	()Ldcw;	c	getLevel
	m	(II)Ldvk;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	(IILdvz;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	()Z	d	pollTask
	m	(IILdvz;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$1
	m	()Ljava/lang/String;	e	gatherStats
	m	(IILdvz;Z)Lduy;	e	lambda$getChunk$0
	m	()I	f	getPendingTasksCount
	m	()Lduz;	g	getGenerator
	m	()Ldva;	h	getGeneratorState
	m	()Ldzm;	i	randomState
	m	()I	j	getLoadedChunksCount
	m	()Leqz;	k	getDataStorage
	m	()Lces;	l	getPoiManager
	m	()Ldwh;	m	chunkScanner
	m	()Lddh$d;	n	getLastSpawnState
	m	()V	o	removeTicketsOnClosing
	m	()Leot;	p	getLightEngine
	m	()Ldcc;	q	getLevel
	m	()V	r	clearCache
	m	()Z	s	runDistanceManagerUpdates
	m	()V	t	tickChunks
	f	Laqb;	a	chunkMap
	f	Ljava/util/List;	b	CHUNK_STATUSES
	f	Laqk;	c	distanceManager
	f	Laqu;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Laqx;	f	lightEngine
	f	Laqs$b;	g	mainThreadProcessor
	f	Leqz;	h	dataStorage
	f	J	i	lastInhabitedUpdate
	f	Z	j	spawnEnemies
	f	Z	k	spawnFriendlies
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Ldvz;	n	lastChunkStatus
	f	[Lduy;	o	lastChunk
	f	Lddh$d;	p	lastSpawnState
c	aqs$a	net/minecraft/server/level/ChunkProviderServer$a
	m	()Ldvi;	a	chunk
	m	()Lapz;	b	holder
	f	Ldvi;	a	chunk
	f	Lapz;	b	holder
c	aqs$b	net/minecraft/server/level/ChunkProviderServer$b
	m	(Laqs;Ldcw;)V	<init>	<init>
		p	2		world
	m	()Z	B	pollTask
	m	(Ljava/util/function/BooleanSupplier;)Z	a	lambda$managedBlock$0
	m	()Z	ay	scheduleExecutables
	m	()Ljava/lang/Thread;	az	getRunningThread
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
		p	1		stopCondition
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	f	Laqs;	a	this$0
c	aqt	net/minecraft/server/level/EntityTrackerEntry
	m	(Laqu;Lbsr;IZLjava/util/function/Consumer;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		tickInterval
		p	4		alwaysUpdateVelocity
		p	5		receiver
	m	()V	a	sendChanges
	m	(Laqv;)V	a	removePairing
		p	1		player
	m	(Laqv;Ljava/util/function/Consumer;)V	a	sendPairingData
		p	1		player
		p	2		sender
	m	(Lbsr;)V	a	lambda$sendChanges$0
		p	0		passenger
	m	(Ljava/util/List;Lbsr;)Z	a	lambda$removedPassengers$1
		p	1		passenger
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream;	a	removedPassengers
		p	0		passengers
		p	1		lastPassengers
	m	(Lzg;)V	a	broadcastAndSend
		p	1		packet
	m	()Lexc;	b	getPositionBase
	m	(Laqv;)V	b	addPairing
		p	1		player
	m	()Lexc;	c	getLastSentMovement
	m	()F	d	getLastSentXRot
	m	()F	e	getLastSentYRot
	m	()F	f	getLastSentYHeadRot
	m	()V	g	sendDirtyEntityData
	f	I	a	FORCED_POS_UPDATE_PERIOD
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	TOLERANCE_LEVEL_ROTATION
	f	D	d	TOLERANCE_LEVEL_POSITION
	f	I	e	FORCED_TELEPORT_PERIOD
	f	Laqu;	f	level
	f	Lbsr;	g	entity
	f	I	h	updateInterval
	f	Z	i	trackDelta
	f	Ljava/util/function/Consumer;	j	broadcast
	f	Laig;	k	positionCodec
	f	I	l	lastSentYRot
	f	I	m	lastSentXRot
	f	I	n	lastSentYHeadRot
	f	Lexc;	o	lastSentMovement
	f	I	p	tickCount
	f	I	q	teleportDelay
	f	Ljava/util/List;	r	lastPassengers
	f	Z	s	wasRiding
	f	Z	t	wasOnGround
	f	Ljava/util/List;	u	trackedDataValues
c	aqu	net/minecraft/server/level/WorldServer
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lerf$c;Lerk;Lakq;Ldwz;Lard;ZJLjava/util/List;ZLbqy;)V	<init>	<init>
		p	1		server
		p	2		workerExecutor
		p	3		session
		p	4		properties
		p	5		worldKey
		p	6		dimensionOptions
		p	7		worldGenerationProgressListener
		p	8		debugWorld
		p	9		seed
		p	11		spawners
		p	12		shouldTickTime
		p	13		randomSequencesState
	m	()Ljava/lang/Iterable;	A	getAllEntities
	m	()Z	B	isFlat
	m	()J	C	getSeed
	m	()Ldxb;	D	getDragonFight
	m	()Laqu;	E	getLevel
	m	(Ljd;)Ljava/util/Optional;	E	findLightningRod
		p	1		pos
	m	()Ljava/lang/String;	F	getWatchdogStats
	m	(Ljd;)V	F	lambda$onBlockStateChange$11
	m	()Ldxp;	G	getEntities
	m	(Ljd;)Ljd;	G	lambda$findLightningRod$6
		p	0		innerPos
	m	()Lepw;	H	getPathTypeCache
	m	(Ljd;)Z	H	lambda$findLightningRod$5
		p	1		innerPos
	m	()Ljava/lang/String;	I	gatherChunkSourceStats
	m	()Lcpl;	J	enabledFeatures
	m	()Lcwt;	K	potionBrewing
	m	()Lbqy;	L	getRandomSequences
	m	()Leyg;	M	getScoreboard
	m	()Ldvc;	N	getChunkSource
	m	()Leyp;	O	getFluidTicks
	m	()Leyp;	P	getBlockTicks
	m	()Lddq;	a	structureManager
	m	(I)Lbsr;	a	getEntity
		p	1		id
	m	(III)Ljm;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIZ)Z	a	setChunkForced
		p	1		x
		p	2		z
		p	3		forced
	m	(IIZZ)V	a	setWeatherParameters
		p	1		clearDuration
		p	2		rainDuration
		p	3		raining
		p	4		thundering
	m	(ILjd;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lakr;)Layw;	a	getRandomSequence
		p	1		id
	m	(Laqv;)V	a	addNewPlayer
		p	1		player
	m	(Laqv;Lbsr$c;)V	a	removePlayerImmediately
		p	1		player
		p	2		reason
	m	(Laqv;Llk;ZDDDIDDDD)Z	a	sendParticles
		p	1		viewer
		p	2		particle
		p	3		force
		p	4		x
		p	6		y
		p	8		z
		p	10		count
		p	11		deltaX
		p	13		deltaY
		p	15		deltaZ
		p	17		speed
	m	(Laqv;ZDDDLzg;)Z	a	sendParticles
		p	1		player
		p	2		force
		p	3		x
		p	5		y
		p	7		z
		p	9		packet
	m	(Lawu;Ljd;IZ)Ljd;	a	findNearestMapStructure
		p	1		structureTag
		p	2		pos
		p	3		radius
		p	4		skipReferencedStructures
	m	(Layv;ZZ)V	a	save
		p	1		progressListener
		p	2		flush
		p	3		savingDisabled
	m	(Lbrc;Lbnf;Lbsr;)V	a	lambda$tick$2
		p	3		entity
	m	(Lbsr;)V	a	tickNonPassenger
		p	1		entity
	m	(Lbsr;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbsr;Lbrk;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;Llk;Llk;Ljm;)Ldco;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
		p	13		particle
		p	14		emitterParticle
		p	15		soundEvent
	m	(Lbsr;Lbsr;)V	a	tickPassenger
		p	1		vehicle
		p	2		passenger
	m	(Lbtn;)Z	a	lambda$findLightningTargetAround$7
		p	1		entity
	m	(Lcep;Lbsr;Lbud;)V	a	onReputationEvent
		p	1		interaction
		p	2		entity
		p	3		observer
	m	(Lcmx;DDDLjm;Lavq;FFJ)V	a	playSeededSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcmx;ILjd;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcmx;Lbsr;Ljm;Lavq;FFJ)V	a	playSeededSound
		p	1		source
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lcmx;Ljd;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Ldcb;)Z	a	doBlockEvent
		p	1		event
	m	(Ldcd;)Z	a	isNaturalSpawningAllowed
		p	1		pos
	m	(Ldtc;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Lduy;)V	a	onStructureStartsAvailable
		p	1		chunk
	m	(Ldvi;)V	a	unload
		p	1		chunk
	m	(Ldvi;I)V	a	tickChunk
		p	1		chunk
		p	2		randomTickSpeed
	m	(Ldxb;)V	a	setDragonFight
		p	1		enderDragonFight
	m	(Ldxn;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		predicate
	m	(Ldxn;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
	m	(Ldxn;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		predicate
		p	3		result
		p	4		limit
	m	(Lejj;)V	a	clearBlockEvents
		p	1		box
	m	(Lejj;Ldcb;)Z	a	lambda$clearBlockEvents$15
		p	1		event
	m	(Leqr;)Leqt;	a	getMapData
		p	1		id
	m	(Leqr;Leqt;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$17
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
		p	1		writer
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
		p	0		writer
		p	1		entities
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
		p	0		items
		p	1		classifier
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
		p	1		path
	m	(Ljava/util/UUID;)Lbsr;	a	getEntity
		p	1		uuid
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		predicate
	m	(Ljava/util/function/Predicate;I)Ljava/util/List;	a	getPlayers
		p	1		predicate
		p	2		limit
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILbsr;)Laxa$a;	a	lambda$getEntities$10
		p	3		entity
	m	(Ljava/util/function/Predicate;Ljd;III)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		predicate
		p	2		pos
		p	3		radius
		p	4		horizontalBlockCheckInterval
		p	5		verticalBlockCheckInterval
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	(Ljd;)V	a	tickPrecipitation
		p	1		pos
	m	(Ljd;F)V	a	setDefaultSpawnPos
		p	1		pos
		p	2		angle
	m	(Ljd;I)Z	a	isCloseToVillage
		p	1		pos
		p	2		maxDistance
	m	(Ljd;Ldfy;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Ljd;Ldfy;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Ljd;Ldfy;Ljd;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Ljd;Ldfy;Lji;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Ljd;Ldtc;Ldtc;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Ljd;Ldtc;Ldtc;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Ljd;Lepd;)V	a	tickFluid
		p	1		pos
		p	2		fluid
	m	(Ljd;Ljm;)V	a	lambda$onBlockStateChange$14
		p	2		newPoiType
	m	(Lji;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Ljm;)Z	a	lambda$findLightningRod$4
		p	0		poiType
	m	(Ljm;Lexc;Ldxz$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Lkf;)Z	a	isVillage
		p	1		sectionPos
	m	(Llk;DDDIDDDD)I	a	sendParticles
		p	1		particle
		p	2		x
		p	4		y
		p	6		z
		p	8		count
		p	9		deltaX
		p	11		deltaY
		p	13		deltaZ
		p	15		speed
	m	(Lnet/minecraft/server/MinecraftServer;)Leqz;	a	lambda$new$0
	m	(Lo;)Lp;	a	fillReportDetails
		p	1		report
	m	(ZZ)V	a	tickCustomSpawners
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	()V	as	wakeUpAllPlayers
	m	()V	at	announceSleepStatus
	m	()V	au	advanceWeatherCycle
	m	()V	av	saveLevelData
	m	()V	aw	runBlockEvents
	m	()Ljava/lang/String;	ax	lambda$fillReportDetails$19
	m	()V	b	tickTime
	m	(I)Lbsr;	b	getEntityOrPart
		p	1		id
	m	(ILjd;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Laqv;)V	b	addRespawnedPlayer
		p	1		player
	m	(Lbsr;)Z	b	addFreshEntity
		p	1		entity
	m	(Lduy;)V	b	lambda$onStructureStartsAvailable$18
	m	(Ldvi;)V	b	startTickingChunk
		p	1		chunk
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	(Ljd;)Ljd;	b	findLightningTargetAround
		p	1		pos
	m	(Ljd;Ldfy;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(Ljd;Ljm;)V	b	lambda$onBlockStateChange$13
	m	(Lkf;)I	b	sectionsToVillage
		p	1		pos
	m	()Z	c	isHandlingTick
	m	(J)Z	c	areEntitiesLoaded
		p	1		chunkPos
	m	(Laqv;)V	c	addPlayer
		p	1		player
	m	(Lbsr;)Z	c	addWithUUID
		p	1		entity
	m	(Ljd;)Z	c	isVillage
		p	1		pos
	m	(Ljd;Ljm;)V	c	lambda$onBlockStateChange$12
		p	2		oldPoiType
	m	()Z	d	canSleepThroughNights
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
		p	1		chunkPos
	m	(Laqv;)V	d	lambda$wakeUpAllPlayers$3
		p	0		player
	m	(Lbsr;)V	d	addDuringTeleport
		p	1		entity
	m	(Ljd;)Lcoi;	d	getRaidAt
		p	1		pos
	m	(Ljd;Ldfy;)V	d	tickBlock
		p	1		pos
		p	2		block
	m	()V	e	updateSleepingPlayerList
	m	(J)Lbqy;	e	lambda$new$1
	m	(Lbsr;)Z	e	tryAddFreshEntityWithPassengers
		p	1		entity
	m	(Ljd;)Z	e	isRaided
		p	1		pos
	m	()Lalk;	f	getScoreboard
	m	(Ljd;)Z	f	isPositionEntityTicking
		p	1		pos
	m	()V	g	resetWeatherCycle
	m	(Ljd;)Z	g	isNaturalSpawningAllowed
		p	1		pos
	m	()V	h	resetEmptyTime
	m	()Ljava/util/List;	i	getDragons
	m	(Lbsr;)Z	i	shouldDiscardEntity
		p	1		entity
	m	()Laqv;	j	getRandomPlayer
	m	(Lbsr;)Z	j	addEntity
		p	1		entity
	m	()I	k	getLogicalHeight
	m	(Lbsr;)Ljava/lang/String;	k	lambda$getWatchdogStats$16
		p	0		entity
	m	()Laqs;	l	getChunkSource
	m	(Lbsr;)Ljava/lang/String;	l	lambda$tickPassenger$9
	m	()Leyq;	m	getBlockTicks
	m	(Lbsr;)Ljava/lang/String;	m	lambda$tickNonPassenger$8
	m	()Leyq;	n	getFluidTicks
	m	()Lnet/minecraft/server/MinecraftServer;	o	getServer
	m	()Leqd;	p	getPortalForcer
	m	()Lenu;	q	getStructureManager
	m	()Lczd;	r	getRecipeManager
	m	()Lbrc;	s	tickRateManager
	m	()Z	t	noSave
	m	()Leqz;	u	getDataStorage
	m	()Leqr;	v	getFreeMapId
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	w	getForcedChunks
	m	()Ljava/util/List;	x	players
	m	()Lces;	y	getPoiManager
	m	()Lcok;	z	getRaids
	f	Lbpw;	D	THUNDER_DELAY
	f	Lorg/slf4j/Logger;	E	LOGGER
	f	I	F	EMPTY_TIME_NO_TICK
	f	I	G	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	H	players
	f	Laqs;	I	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	J	server
	f	Lerk;	K	serverLevelData
	f	I	L	lastSpawnChunkRadius
	f	Ldxm;	M	entityTickList
	f	Ldxr;	N	entityManager
	f	Ldya;	O	gameEventDispatcher
	f	Lauu;	P	sleepStatus
	f	I	Q	emptyTime
	f	Leqd;	R	portalForcer
	f	Leyq;	S	blockTicks
	f	Leyq;	T	fluidTicks
	f	Lepw;	U	pathTypesByPosCache
	f	Ljava/util/Set;	V	navigatingMobs
	f	Z	W	isUpdatingNavigations
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	X	blockEvents
	f	Ljava/util/List;	Y	blockEventsToReschedule
	f	Z	Z	handlingTick
	f	Ljd;	a	END_SPAWN_POINT
	f	Ljava/util/List;	aa	customSpawners
	f	Ldxb;	ab	dragonFight
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	ac	dragonParts
	f	Lddq;	ad	structureManager
	f	Lejs;	ae	structureCheck
	f	Z	af	tickTime
	f	Lbqy;	ag	randomSequences
	f	Lbpw;	b	RAIN_DELAY
	f	Lbpw;	c	RAIN_DURATION
	f	Lbpw;	d	THUNDER_DURATION
	f	Z	e	noSave
	f	Lcok;	f	raids
c	aqu$a	net/minecraft/server/level/WorldServer$a
	m	(Lbsr;)V	a	onCreated
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Lbsr;)V	b	onDestroyed
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Lbsr;)V	c	onTickingStart
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Lbsr;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Lbsr;)V	e	onTrackingStart
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Lbsr;)V	f	onTrackingEnd
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Lbsr;)V	g	onSectionChange
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
	f	Laqu;	a	this$0
c	aqv	net/minecraft/server/level/EntityPlayer
	m	(Lnet/minecraft/server/MinecraftServer;Laqu;Lcom/mojang/authlib/GameProfile;Laqh;)V	<init>	<init>
		p	1		server
		p	2		world
		p	3		profile
		p	4		clientOptions
	m	()Laqu;	A	serverLevel
	m	()Ljava/lang/String;	B	getIpAddress
	m	()Laqh;	C	clientInformation
	m	()Z	D	canChatInColor
	m	()Lcmv;	E	getChatVisibility
	m	()I	F	requestedViewDistance
	m	()I	G	getPermissionLevel
	m	()V	H	resetLastActionTime
	m	()Lavv;	I	getStats
	m	()Lavu;	J	getRecipeBook
	m	()V	K	updateInvisibilityStatus
	m	()Lbsr;	L	getCamera
	m	()V	L_	completeUsingItem
	m	()V	M	processPortalCooldown
	m	()J	N	getLastActionTime
	m	()Lwz;	O	getTabListDisplayName
	m	()Z	P	isChangingDimension
	m	()V	Q	hasChangedDimension
	m	()Lakz;	R	getAdvancements
	m	()Z	R_	isSpectator
	m	()Ljd;	S	getRespawnPosition
	m	()F	T	getRespawnAngle
	m	()Lakq;	U	getRespawnDimension
	m	()Z	V	isRespawnForced
	m	()Lkf;	W	getLastSectionPos
	m	()Laqg;	X	getChunkTrackingView
	m	()Larz;	Y	getTextFilter
	m	()Z	Z	isTextFilteringEnabled
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDZ)V	a	doCheckFallDamage
		p	1		xDifference
		p	3		yDifference
		p	5		zDifference
		p	7		onGround
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FFZZ)V	a	setPlayerInput
		p	1		sidewaysSpeed
		p	2		forwardSpeed
		p	3		jumping
		p	4		sneaking
	m	(I)V	a	setExperiencePoints
		p	1		points
	m	(ILdbv;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(ILeye;)V	a	lambda$awardStat$14
		p	1		score
	m	(Lajq;)V	a	sendServerStatus
		p	1		metadata
	m	(Lakq;Ljd;FZZ)V	a	setRespawnPosition
		p	1		dimension
		p	2		pos
		p	3		angle
		p	4		forced
		p	5		sendMessage
	m	(Laqg;)V	a	setChunkTrackingView
		p	1		chunkFilter
	m	(Laqh;)V	a	updateOptions
		p	1		clientOptions
	m	(Laqu;)V	a	setServerLevel
		p	1		world
	m	(Laqu;DDDFF)V	a	teleportTo
		p	1		targetWorld
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		pitch
	m	(Laqu;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Laqu;Ljd;)Ljd;	a	adjustSpawnLocation
		p	1		world
		p	2		basePos
	m	(Laqu;Ljd;FZZ)Ljava/util/Optional;	a	findRespawnAndUseSpawnBlock
		p	0		world
		p	1		pos
		p	2		spawnAngle
		p	3		spawnForced
		p	4		alive
	m	(Laqv;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Laqv;Z)V	a	restoreFrom
		p	1		oldPlayer
		p	2		alive
	m	(Lavo;Lavq;FF)V	a	playNotifySound
		p	1		sound
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lavw;)V	a	resetStat
		p	1		stat
	m	(Lavw;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lazs;)V	a	lambda$startSleepInBed$13
		p	1		unit
	m	(Lbqq;)V	a	swing
		p	1		hand
	m	(Lbqv;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrz;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbrz;Lbsr;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbrz;ZLbsr;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbsr;)V	a	onExplosionHit
		p	1		entity
	m	(Lbsr;FLbrk;)F	a	getEnchantedDamage
		p	1		target
		p	2		baseDamage
		p	3		damageSource
	m	(Lbsr;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbsr;ILbrk;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbsr;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbtp;)V	a	lambda$tellNeutralMobsThatIDied$9
		p	1		entity
	m	(Lchi;Lbqk;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lcjh;)V	a	onItemPickup
		p	1		item
	m	(Lckd;)Z	a	lambda$startSleepInBed$12
		p	1		entity
	m	(Lcmd;)V	a	lambda$readAdditionalSaveData$0
		p	1		sculkShriekerWarningManager
	m	(Lcmw;I)V	a	lambda$drop$17
		p	2		index
	m	(Lcmx;)Z	a	canHarmPlayer
		p	1		player
	m	(Lcpu;)V	a	initMenu
		p	1		screenHandler
	m	(Lcul;Lbsy;)V	a	onEquippedItemBroken
		p	1		item
		p	2		slot
	m	(Lcuq;)V	a	updateUsingItem
		p	1		stack
	m	(Lcuq;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcuq;Lbqq;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcuq;ZZ)Lcjh;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lczb;Ljava/util/List;)V	a	triggerRecipeCrafted
		p	1		recipe
		p	2		ingredients
	m	(Ldct;)Z	a	setGameMode
		p	1		gameMode
	m	(Ldcw;Ljd;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Ldqr;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Ldrs;Z)V	a	openTextEdit
		p	1		sign
		p	2		front
	m	(Ldtc;)V	a	onInsideBlock
		p	1		state
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Leyf;Leyf;[Leyj;)V	a	handleTeamKill
		p	1		targetScoreHolder
		p	2		aboutScoreHolder
		p	3		criterions
	m	(Leyj;I)V	a	updateScoreForCriteria
		p	1		criterion
		p	2		score
	m	(Lff$a;Lbsr;Lff$a;)V	a	lookAt
		p	1		anchorPoint
		p	2		targetEntity
		p	3		targetAnchor
	m	(Lff$a;Lexc;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Ljd;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Ljd;Lexc;)Laqv$a;	a	lambda$findRespawnAndUseSpawnBlock$11
		p	1		respawnPos
	m	(Ljd;Lji;)Z	a	bedInRange
		p	1		pos
		p	2		direction
	m	(Lkf;)V	a	setLastSectionPos
		p	1		section
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Ljava/lang/String;)Ldct;	a	readPlayerMode
		p	0		nbt
		p	1		key
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$4
		p	1		encoded
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(Lwz;Lxw;)Lxw;	a	lambda$die$6
		p	1		style
	m	(Lwz;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Lxo;ZLwv$a;)V	a	sendChatMessage
		p	1		message
		p	2		filterMaskEnabled
		p	3		params
	m	(Lxq;)V	a	setChatSession
		p	1		session
	m	(Z)Z	a	drop
		p	1		entireStack
	m	(ZLeqc$a;)Leqc;	a	findRespawnPositionAndUseSpawnBlock
		p	1		alive
		p	2		postDimensionTransition
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	()Z	aa	allowsListing
	m	()Ljava/util/Optional;	ab	getWardenSpawnTracker
	m	()Lxq;	ac	getChatSession
	m	()V	ad	stopRiding
	m	()V	ae	clearRaidOmenPosition
	m	()Ljd;	af	getRaidOmenPosition
	m	()Lexc;	ag	getKnownMovement
	m	(DDD)V	b	checkMovementStatistics
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(I)V	b	setExperienceLevels
		p	1		level
	m	(ILeye;)V	b	lambda$updateScoreForCriteria$5
		p	1		innerScore
	m	(Lakr;)Ljava/util/stream/Stream;	b	lambda$awardRecipesByKey$15
		p	1		recipe
	m	(Laqu;)Lagd;	b	createCommonSpawnInfo
		p	1		world
	m	(Laqu;Ljd;)V	b	onChangedBlock
		p	1		world
		p	2		pos
	m	(Laqv;)V	b	copyRespawnPosition
		p	1		player
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbsr;)V	b	crit
		p	1		target
	m	(Lbtp;)Z	b	lambda$tellNeutralMobsThatIDied$8
		p	0		entity
	m	(Ldct;)Ldct;	b	calculateGameModeForNewPlayer
		p	1		backupGameMode
	m	(Lexc;)V	b	setKnownMovement
		p	1		movement
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Ljava/util/List;)V	b	awardRecipesByKey
		p	1		recipes
	m	(Ljd;)V	b	startSleeping
		p	1		pos
	m	(Ljd;Lexc;)Laqv$a;	b	lambda$findRespawnAndUseSpawnBlock$10
		p	1		respawnPos
	m	(Ljd;Lji;)Z	b	bedBlocked
		p	1		pos
		p	2		direction
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	b	lambda$addAdditionalSaveData$3
		p	1		encoded
	m	(Lwz;Z)V	b	sendSystemMessage
		p	1		message
		p	2		overlay
	m	(Z)V	b	setSpawnExtraParticlesOnFall
		p	1		spawnExtraParticlesOnFall
	m	(DDD)V	c	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Laqu;)V	c	triggerDimensionChangeTriggers
		p	1		origin
	m	(Laqv;)Z	c	shouldFilterMessageTo
		p	1		player
	m	(Lbsr;)V	c	magicCrit
		p	1		target
	m	(Ljd;)V	c	setRaidOmenPosition
		p	1		startRaidPos
	m	(Lub;)V	c	loadGameTypes
		p	1		nbt
	m	(Lub;Luy;)V	c	lambda$addAdditionalSaveData$2
		p	1		encoded
	m	(Lwz;)Lzg;	c	lambda$sendSystemMessage$16
	m	(DDD)V	d	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lbsr;)V	d	setCamera
		p	1		entity
	m	(Lwz;)Lzg;	d	lambda$die$7
	m	(DDD)V	e	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(Lbsr;)V	e	attack
		p	1		target
	m	()Z	f	isCreative
	m	()V	f_	onEnterCombat
	m	()V	gD	updatePlayerAttributes
	m	()V	gE	tellNeutralMobsThatIDied
	m	()Z	gF	isPvpAllowed
	m	()V	gG	nextContainerCounter
	m	()Z	gH	acceptsChatMessages
	m	()V	g_	onLeaveCombat
	m	()V	h	initInventoryMenu
	m	(Ljd;)Z	i	isReachableBedBlock
		p	1		pos
	m	(Ljd;)V	j	lambda$readAdditionalSaveData$1
		p	1		startRaidPos
	m	()Lcum;	k	createItemCooldowns
	m	(Lub;)V	k	storeGameTypes
		p	1		nbt
	m	()V	l	tick
	m	()V	m	doTick
	m	()V	n	resetFallDistance
	m	()V	o	trackStartFallingPosition
	m	()V	p	trackEnteredOrExitedLavaOnVehicle
	m	()V	q	showEndCredits
	m	(DDD)V	q	checkRidingStatistics
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	r	pushEntities
	m	(DDD)Z	r	didNotMove
		p	0		deltaX
		p	2		deltaY
		p	4		deltaZ
	m	()V	s	closeContainer
	m	()V	t	doCloseContainer
	m	(I)I	t	getCoprime
		p	1		horizontalSpawnArea
	m	()V	u	rideTick
	m	()V	v	disconnect
	m	()Z	w	hasDisconnected
	m	()V	x	resetSentInfo
	m	(Z)Z	x	acceptsSystemMessages
		p	1		overlay
	m	()V	z	onUpdateAbilities
	f	D	b	INTERACTION_DISTANCE_VERIFICATION_BUFFER
	f	I	cA	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cB	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	I	cD	FLY_STAT_RECORDING_SPEED
	f	Lbuu;	cE	CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER
	f	Lbuu;	cF	CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER
	f	Lakz;	cG	advancements
	f	Lavv;	cH	stats
	f	F	cI	lastRecordedHealthAndAbsorption
	f	I	cJ	lastRecordedFoodLevel
	f	I	cK	lastRecordedAirLevel
	f	I	cL	lastRecordedArmor
	f	Laru;	c	connection
	f	I	cM	lastRecordedLevel
	f	I	cN	lastRecordedExperience
	f	F	cO	lastSentHealth
	f	I	cP	lastSentFood
	f	Z	cQ	lastFoodSaturationZero
	f	I	cR	lastSentExp
	f	I	cS	spawnInvulnerableTime
	f	Lcmv;	cT	chatVisibility
	f	Z	cU	canChatColor
	f	J	cV	lastActionTime
	f	Lbsr;	cW	camera
	f	Z	cX	isChangingDimension
	f	Lavu;	cY	recipeBook
	f	Lexc;	cZ	levitationStartPos
	f	Lorg/slf4j/Logger;	cz	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	I	da	levitationStartTime
	f	Z	db	disconnected
	f	I	dc	requestedViewDistance
	f	Ljava/lang/String;	dd	language
	f	Lexc;	de	startingToFallPosition
	f	Lexc;	df	enteredNetherPosition
	f	Lexc;	dg	enteredLavaOnVehiclePosition
	f	Lkf;	dh	lastSectionPos
	f	Laqg;	di	chunkTrackingView
	f	Lakq;	dj	respawnDimension
	f	Ljd;	dk	respawnPosition
	f	Z	dl	respawnForced
	f	F	dm	respawnAngle
	f	Larz;	dn	textFilter
	f	Z	do	textFilteringEnabled
	f	Z	dp	allowsListing
	f	Z	dq	spawnExtraParticlesOnFall
	f	Lcmd;	dr	wardenSpawnTracker
	f	Ljd;	ds	raidOmenPosition
	f	Lexc;	dt	lastKnownClientMovement
	f	Lcqi;	du	containerSynchronizer
	f	Lcqh;	dv	containerListener
	f	Lxq;	dw	chatSession
	f	I	dx	containerCounter
	f	Laqw;	e	gameMode
	f	Z	f	seenCredits
	f	Ljava/lang/Object;	g	object
	f	Z	h	wonGame
c	aqv$1	net/minecraft/server/level/EntityPlayer$1
	m	(Lcpu;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcpu;ILcuq;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcpu;Lcuq;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcpu;Ljv;Lcuq;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
	m	(Lcpu;II)V	b	broadcastDataValue
		p	1		handler
		p	2		property
		p	3		value
	f	Laqv;	a	this$0
c	aqv$2	net/minecraft/server/level/EntityPlayer$2
	m	(Lcpu;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcpu;ILcuq;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
	f	Laqv;	a	this$0
c	aqv$a	net/minecraft/server/level/EntityPlayer$RespawnPosAngle
	m	()Lexc;	a	position
	m	(Lexc;Ljd;)Laqv$a;	a	of
		p	0		respawnPos
		p	1		currentPos
	m	()F	b	yaw
	m	(Lexc;Ljd;)F	b	calculateLookAtYaw
		p	0		respawnPos
		p	1		currentPos
	f	Lexc;	a	position
	f	F	b	yaw
c	aqw	net/minecraft/server/level/PlayerInteractManager
	m	(Laqv;)V	<init>	<init>
		p	1		player
	m	()V	a	tick
	m	(Laqu;)V	a	setLevel
		p	1		world
	m	(Laqv;Ldcw;Lcuq;Lbqq;)Lbqr;	a	useItem
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
	m	(Laqv;Ldcw;Lcuq;Lbqq;Lewy;)Lbqr;	a	useItemOn
		p	1		player
		p	2		world
		p	3		stack
		p	4		hand
		p	5		hitResult
	m	(Lcul;)V	a	lambda$handleBlockBreakAction$0
	m	(Ldct;)Z	a	changeGameModeForPlayer
		p	1		gameMode
	m	(Ldct;Ldct;)V	a	setGameModeForPlayer
		p	1		gameMode
		p	2		previousGameMode
	m	(Ldtc;Ljd;I)F	a	incrementDestroyProgress
		p	1		state
		p	2		pos
		p	3		failedStartMiningTime
	m	(Ljd;)Z	a	destroyBlock
		p	1		pos
	m	(Ljd;ILjava/lang/String;)V	a	destroyAndAck
		p	1		pos
		p	2		sequence
		p	3		reason
	m	(Ljd;Lahm$a;Lji;II)V	a	handleBlockBreakAction
		p	1		pos
		p	2		action
		p	3		direction
		p	4		worldHeight
		p	5		sequence
	m	(Ljd;ZILjava/lang/String;)V	a	debugLogging
		p	1		pos
		p	2		success
		p	3		sequence
		p	4		reason
	m	()Ldct;	b	getGameModeForPlayer
	m	()Ldct;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldct;	b	gameModeForPlayer
	f	Laqu;	c	level
	f	Laqv;	d	player
	f	Ldct;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Ljd;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Ljd;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
c	aqx	net/minecraft/server/level/LightEngineThreaded
	m	(Ldvl;Laqb;ZLbpk;Lbpj;)V	<init>	<init>
		p	1		chunkProvider
		p	2		chunkLoadingManager
		p	3		hasBlockLight
		p	4		processor
		p	5		executor
	m	()I	a	runLightUpdates
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	waitForPendingTasks
		p	1		x
		p	2		z
	m	(IILaqx$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		stage
		p	4		task
	m	(IILjava/lang/Runnable;)V	a	lambda$waitForPendingTasks$29
		p	3		callback
	m	(IILjava/util/function/IntSupplier;Laqx$a;Ljava/lang/Runnable;)V	a	addTask
		p	1		x
		p	2		z
		p	3		completedLevelSupplier
		p	4		stage
		p	5		task
	m	(Laqx$a;Ljava/lang/Runnable;)V	a	lambda$addTask$15
	m	(Ldcd;)V	a	updateChunkStatus
		p	1		pos
	m	(Ldcd;Ljava/lang/Runnable;)V	a	lambda$lightChunk$26
		p	2		task
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Ldcd;ZLduy;)Lduy;	a	lambda$initializeLight$21
	m	(Lddf;Lkf;Ldvd;)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
	m	(Lduy;)Lduy;	a	lambda$lightChunk$25
	m	(Lduy;Ldcd;)V	a	lambda$initializeLight$19
	m	(Lduy;Z)Ljava/util/concurrent/CompletableFuture;	a	initializeLight
		p	1		chunk
	m	(Ljd;)V	a	checkBlock
		p	1		pos
	m	(Lkf;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(ZLdcd;)V	a	lambda$lightChunk$23
	m	()V	b	tryScheduleUpdate
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Ldcd;Ljava/lang/Runnable;)V	b	lambda$initializeLight$22
		p	2		task
	m	(Ldcd;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lddf;Lkf;Ldvd;)V	b	lambda$queueSectionData$13
	m	(Lduy;Z)Ljava/util/concurrent/CompletableFuture;	b	lightChunk
		p	1		chunk
		p	2		excludeBlocks
	m	(Ljd;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Lkf;)Ljava/lang/String;	b	lambda$queueSectionData$14
	m	(Lkf;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Ldcd;)Ljava/lang/String;	c	lambda$initializeLight$20
	m	(Ldcd;Z)Ljava/lang/String;	c	lambda$lightChunk$24
	m	(Ljd;)V	c	lambda$checkBlock$0
	m	(Lkf;Z)V	c	lambda$updateSectionStatus$6
	m	(Ldcd;)Ljava/lang/String;	d	lambda$retainData$18
	m	(Ldcd;Z)V	d	lambda$retainData$17
	m	(Ldcd;)Ljava/lang/String;	e	lambda$propagateLightSources$9
	m	(Ldcd;Z)Ljava/lang/String;	e	lambda$setLightEnabled$11
	m	()V	f	runUpdate
	m	(Ldcd;)V	f	lambda$propagateLightSources$8
	m	(Ldcd;Z)V	f	lambda$setLightEnabled$10
	m	()V	g	lambda$waitForPendingTasks$28
	m	(Ldcd;)Ljava/lang/String;	g	lambda$updateChunkStatus$4
	m	()V	h	lambda$tryScheduleUpdate$27
	m	(Ldcd;)V	h	lambda$updateChunkStatus$3
	m	()I	i	lambda$retainData$16
	m	()I	j	lambda$queueSectionData$12
	m	()I	k	lambda$updateSectionStatus$5
	m	()I	l	lambda$updateChunkStatus$2
	f	I	a	DEFAULT_BATCH_SIZE
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lbpk;	e	taskMailbox
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	f	lightTasks
	f	Laqb;	g	chunkMap
	f	Lbpj;	h	sorterMailbox
	f	I	i	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	j	scheduled
c	aqx$a	net/minecraft/server/level/LightEngineThreaded$Update
	m	()[Laqx$a;	a	$values
	f	Laqx$a;	a	PRE_UPDATE
	f	Laqx$a;	b	POST_UPDATE
	f	[Laqx$a;	c	$VALUES
c	aqy	net/minecraft/server/level/Ticket
	m	(Laqz;ILjava/lang/Object;)V	<init>	<init>
		p	1		type
		p	2		level
		p	3		argument
	m	()Laqz;	a	getType
	m	(J)V	a	setCreatedTick
		p	1		tickCreated
	m	(Laqy;)I	a	compareTo
	m	()I	b	getTicketLevel
	m	(J)Z	b	timedOut
		p	1		currentTick
	f	Laqz;	a	type
	f	I	b	ticketLevel
	f	Ljava/lang/Object;	c	key
	f	J	d	createdTick
c	aqz	net/minecraft/server/level/TicketType
	m	(Ljava/lang/String;Ljava/util/Comparator;J)V	<init>	<init>
		p	1		name
		p	2		argumentComparator
		p	3		expiryTicks
	m	()Ljava/util/Comparator;	a	getComparator
	m	(Lazs;Lazs;)I	a	lambda$static$1
		p	0		a
		p	1		b
	m	(Ljava/lang/String;Ljava/util/Comparator;)Laqz;	a	create
		p	0		name
		p	1		argumentComparator
	m	(Ljava/lang/String;Ljava/util/Comparator;I)Laqz;	a	create
		p	0		name
		p	1		argumentComparator
		p	2		expiryTicks
	m	()J	b	timeout
	m	(Lazs;Lazs;)I	b	lambda$static$0
		p	0		a
		p	1		b
	f	Laqz;	a	START
	f	Laqz;	b	DRAGON
	f	Laqz;	c	PLAYER
	f	Laqz;	d	FORCED
	f	Laqz;	e	PORTAL
	f	Laqz;	f	POST_TELEPORT
	f	Laqz;	g	UNKNOWN
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Comparator;	i	comparator
	f	J	j	timeout
c	ara	net/minecraft/server/level/TickingTracker
	m	()V	a	runAllUpdates
	m	(I)V	a	replacePlayerTicketsLevel
		p	1		level
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JLaqy;)V	a	addTicket
		p	1		pos
		p	3		ticket
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	a	addTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(Lazg;)I	a	getTicketLevelAt
		p	1		ticket
	m	(Ldcd;)I	a	getLevel
		p	1		pos
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(JLaqy;)V	b	removeTicket
		p	1		pos
		p	3		ticket
	m	(Laqz;Ldcd;ILjava/lang/Object;)V	b	removeTicket
		p	1		type
		p	2		pos
		p	3		level
		p	4		argument
	m	(J)I	c	getLevel
		p	1		id
	m	(J)Ljava/lang/String;	d	getTicketDebugString
		p	1		pos
	m	(J)Lazg;	g	getTickets
		p	1		pos
	m	(J)Lazg;	h	lambda$getTickets$0
		p	0		p
	f	I	a	MAX_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	chunks
	f	I	c	INITIAL_TICKET_LIST_CAPACITY
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	d	tickets
c	arb	net/minecraft/server/level/RegionLimitedWorldAccess
	m	(Laqu;Lazi;Ldwc;Lduy;)V	<init>	<init>
		p	1		world
		p	2		chunks
		p	3		generationStep
		p	4		centerPos
	m	()Lerb;	A_	getLevelData
	m	()I	B_	getSkyDarken
	m	()J	C	getSeed
	m	()Ldut;	C_	getWorldBorder
	m	()Ldwy;	D_	dimensionType
	m	()Laqu;	E	getLevel
	m	()Layw;	E_	getRandom
	m	()Lddy;	F_	getBiomeManager
	m	()J	G_	nextSubTickCount
	m	()Lka;	H_	registryAccess
	m	()I	I_	getMinBuildHeight
	m	()Lcpl;	J	enabledFeatures
	m	()I	J_	getHeight
	m	()Ldvc;	N	getChunkSource
	m	()Leyp;	O	getFluidTicks
	m	()Leyp;	P	getBlockTicks
	m	()Ldcd;	a	getCenter
	m	(DDDDLjava/util/function/Predicate;)Lcmx;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(II)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Ljm;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IILdvz;Z)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Laqn;)Ljava/lang/String;	a	lambda$getChunk$3
	m	(Lbsr;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lcmx;ILjd;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcmx;Ljd;Lavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Ldcd;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Ldvz;)Ljava/lang/String;	a	lambda$getChunk$4
	m	(Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldyy$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Ljd;Ldtc;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Ljd;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Ljd;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Ljd;ZLbsr;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lji;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Ljm;Lexc;Ldxz$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Llk;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Lbsr;)Z	b	addFreshEntity
		p	1		entity
	m	(Ljd;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(Ljd;)Lbqp;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(Ljd;)V	f	markPosForPostprocessing
		p	1		pos
	m	(Ljd;)Z	f_	ensureCanWrite
		p	1		pos
	m	(Ljd;)Leyw;	g	lambda$new$1
		p	1		pos
	m	(Ljd;)Leyw;	k	lambda$new$0
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	o	getServer
	m	()Ljava/lang/String;	p	lambda$getChunk$2
	m	()Ljava/util/List;	x	players
	m	()Z	x_	isClientSide
	m	()Leot;	y_	getLightEngine
	m	()I	z_	getSeaLevel
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lazi;	b	cache
	f	Lduy;	c	center
	f	Laqu;	d	level
	f	J	e	seed
	f	Lerb;	f	levelData
	f	Layw;	g	random
	f	Ldwy;	h	dimensionType
	f	Leyy;	i	blockTicks
	f	Leyy;	j	fluidTicks
	f	Lddy;	k	biomeManager
	f	Ldwc;	l	generatingStep
	f	Ljava/util/function/Supplier;	m	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	n	subTickCount
	f	Lakr;	o	WORLDGEN_REGION_RANDOM
c	ard	net/minecraft/server/level/progress/WorldLoadListener
	m	()V	a	start
	m	(I)I	a	calculateDiameter
		p	0		spawnChunkRadius
	m	(Ldcd;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Ldcd;Ldvz;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
c	are	net/minecraft/server/level/progress/WorldLoadListenerFactory
	m	(I)Lard;	create	create
		p	1		radius
c	arf	net/minecraft/server/level/progress/WorldLoadListenerLogger
	m	(I)V	<init>	<init>
		p	1		radius
	m	()V	a	start
	m	(Ldcd;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Ldcd;Ldvz;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(I)Larf;	b	createFromGameruleRadius
		p	0		spawnChunkRadius
	m	()Larf;	c	createCompleted
	m	(I)Larf;	c	create
		p	0		spawnChunkRadius
	m	()I	d	getProgress
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
c	arg	arg
	m	(Lard;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		progressListener
		p	2		executor
	m	()V	a	start
	m	(Lard;Ljava/util/concurrent/Executor;)Larg;	a	createStarted
		p	0		progressListener
		p	1		executor
	m	(Ldcd;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Ldcd;Ldvz;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(Ldcd;)V	b	lambda$updateSpawnPos$0
	m	(Ldcd;Ldvz;)V	b	lambda$onStatusChange$1
	f	Lard;	a	delegate
	f	Lbpk;	b	mailbox
	f	Z	c	started
c	arh	arh
	m	(Larf;III)V	<init>	<init>
		p	1		progressLogger
		p	2		centerSize
		p	3		radius
		p	4		size
	m	()V	a	start
	m	(II)Ldvz;	a	getStatus
		p	1		x
		p	2		z
	m	(Ldcd;)V	a	updateSpawnPos
		p	1		spawnPos
	m	(Ldcd;Ldvz;)V	a	onStatusChange
		p	1		pos
		p	2		status
	m	()V	b	stop
	m	(I)Larh;	b	createFromGameruleRadius
		p	0		spawnChunkRadius
	m	()Larh;	c	createCompleted
	m	(I)Larh;	c	create
		p	0		spawnChunkRadius
	m	()I	d	getFullDiameter
	m	()I	e	getDiameter
	m	()I	f	getProgress
	f	Larf;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Ldcd;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
c	arj	net/minecraft/server/network/CommonListenerCookie
	m	()Lcom/mojang/authlib/GameProfile;	a	gameProfile
	m	(Lcom/mojang/authlib/GameProfile;Z)Larj;	a	createInitial
		p	0		profile
	m	()I	b	latency
	m	()Laqh;	c	clientInformation
	m	()Z	d	transferred
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
	f	I	b	latency
	f	Laqh;	c	clientInformation
	f	Z	d	transferred
c	ark	net/minecraft/server/network/ConfigurationTask
	m	()Lark$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
c	ark$a	net/minecraft/server/network/ConfigurationTask$a
	m	()Ljava/lang/String;	a	id
	f	Ljava/lang/String;	a	id
c	arl	net/minecraft/server/network/Filterable
	m	()Ljava/lang/Object;	a	raw
	m	(Larm;)Larl;	a	from
		p	0		message
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		baseCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Ljava/lang/Object;)Larl;	a	passThrough
		p	0		raw
	m	(Ljava/util/function/Function;)Larl;	a	map
		p	1		mapper
	m	(Lyx;)Lyx;	a	streamCodec
		p	0		basePacketCodec
	m	(Z)Ljava/lang/Object;	a	get
		p	1		shouldFilter
	m	()Ljava/util/Optional;	b	filtered
	m	(Ljava/util/function/Function;)Ljava/util/Optional;	b	resolve
		p	1		resolver
	f	Ljava/lang/Object;	a	raw
	f	Ljava/util/Optional;	b	filtered
c	arm	net/minecraft/server/network/FilteredText
	m	()Ljava/lang/String;	a	filtered
	m	(Ljava/lang/String;)Larm;	a	passThrough
		p	0		raw
	m	()Ljava/lang/String;	b	filteredOrEmpty
	m	(Ljava/lang/String;)Larm;	b	fullyFiltered
		p	0		raw
	m	()Z	c	isFiltered
	m	()Ljava/lang/String;	d	raw
	m	()Lxd;	e	mask
	f	Larm;	a	EMPTY
	f	Ljava/lang/String;	b	raw
	f	Lxd;	c	mask
c	arn	net/minecraft/server/network/LegacyProtocolUtils
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	a	readLegacyString
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	writeLegacyString
		p	0		buf
		p	1		string
	f	I	a	CUSTOM_PAYLOAD_PACKET_ID
	f	Ljava/lang/String;	b	CUSTOM_PAYLOAD_PACKET_PING_CHANNEL
	f	I	c	GET_INFO_PACKET_ID
	f	I	d	GET_INFO_PACKET_VERSION_1
	f	I	e	DISCONNECT_PACKET_ID
	f	I	f	FAKE_PROTOCOL_VERSION
c	aro	net/minecraft/server/network/LegacyPingHandler
	m	(Lalh;)V	<init>	<init>
		p	1		server
	m	(Lalh;)Ljava/lang/String;	a	createVersion0Response
		p	0		server
	m	(Lio/netty/buffer/ByteBuf;)Z	a	readCustomPayloadPacket
		p	0		buf
	m	(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createLegacyDisconnectPacket
		p	0		allocator
		p	1		string
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
		p	0		context
		p	1		buf
	m	(Lalh;)Ljava/lang/String;	b	createVersion1Response
		p	0		server
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lalh;	b	server
c	arp	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	(Laij;)V	a	handleIntention
		p	1		packet
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	()Z	c	isAcceptingMessages
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lvt;	c	connection
c	arq	net/minecraft/server/network/PlayerChunkSender
	m	(Z)V	<init>	<init>
		p	1		local
	m	(F)V	a	onChunkBatchReceivedByClient
		p	1		desiredBatchSize
	m	(J)Z	a	isPending
		p	1		chunkPos
	m	(Laqb;Ldcd;)Ljava/util/List;	a	collectChunksToSend
		p	1		chunkLoadingManager
		p	2		playerPos
	m	(Laqv;)V	a	sendNextChunks
		p	1		player
	m	(Laqv;Ldcd;)V	a	dropChunk
		p	1		player
		p	2		pos
	m	(Laru;Laqu;Ldvi;)V	a	sendChunk
		p	0		handler
		p	1		world
		p	2		chunk
	m	(Ldcd;Ldvi;)I	a	lambda$collectChunksToSend$0
		p	1		chunk
	m	(Ldvi;)V	a	markChunkPendingToSend
		p	1		chunk
	f	F	a	MIN_CHUNKS_PER_TICK
	f	F	b	MAX_CHUNKS_PER_TICK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	F	d	START_CHUNKS_PER_TICK
	f	I	e	MAX_UNACKNOWLEDGED_BATCHES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	pendingChunks
	f	Z	g	memoryConnection
	f	F	h	desiredChunksPerTick
	f	F	i	batchQuota
	f	I	j	unacknowledgedBatches
	f	I	k	maxUnacknowledgedBatches
c	arr	net/minecraft/server/network/ServerCommonPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;Larj;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		clientData
	m	(J)Z	a	checkIfClosed
		p	1		time
	m	(Laab;)V	a	handleCustomPayload
		p	1		packet
	m	(Laac;)V	a	handleKeepAlive
		p	1		packet
	m	(Laad;)V	a	handlePong
		p	1		packet
	m	(Laae;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Labs;)V	a	handleCookieResponse
		p	1		packet
	m	(Laqh;)Larj;	a	createCookie
		p	1		syncedOptions
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	(Lwz;)V	a	disconnect
		p	1		reason
	m	(Lzg;Lwg;)V	a	send
		p	1		packet
		p	2		callbacks
	m	(Lvv;)V	b	disconnect
		p	1		disconnectionInfo
	m	(Lzg;)V	b	send
		p	1		packet
	m	(Lvv;)V	c	lambda$disconnect$1
	m	(Lzg;)Ljava/lang/String;	c	lambda$send$0
	m	()V	e	keepConnectionAlive
	m	()V	f	suspendFlushing
	m	()V	g	resumeFlushing
	m	()Z	h	isSingleplayerOwner
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	()Lcom/mojang/authlib/GameProfile;	j	getOwner
	m	()I	k	latency
	m	()V	l	close
	f	I	b	LATENCY_CHECK_INTERVAL
	f	Lwz;	c	DISCONNECT_UNEXPECTED_QUERY
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Lvt;	e	connection
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	I	g	CLOSED_LISTENER_TIMEOUT
	f	Lwz;	h	TIMEOUT_DISCONNECTION_MESSAGE
	f	Z	i	transferred
	f	J	j	keepAliveTime
	f	Z	k	keepAlivePending
	f	J	l	keepAliveChallenge
	f	J	m	closedListenerTime
	f	Z	n	closed
	f	I	o	latency
	f	Z	p	suspendFlushingOnServerThread
c	ars	net/minecraft/server/network/ServerConfigurationPacketListenerImpl
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;Larj;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		clientData
	m	(Laaa;)V	a	handleClientInformation
		p	1		packet
	m	(Laae;)V	a	handleResourcePackResponse
		p	1		packet
	m	(Labl;)V	a	handleConfigurationFinished
		p	1		packet
	m	(Labm;)V	a	handleSelectKnownPacks
		p	1		packet
	m	(Lark$a;)V	a	finishCurrentTask
		p	1		key
	m	(Lasq;)Ljava/util/stream/Stream;	a	lambda$startConfiguration$0
		p	0		pack
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	a	lambda$addOptionalTasks$1
		p	1		properties
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	()Z	c	isAcceptingMessages
	m	()V	d	tick
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	()V	l	startConfiguration
	m	()V	m	returnToWorld
	m	()V	n	addOptionalTasks
	m	()V	o	startNextTask
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lwz;	g	DISCONNECT_REASON_INVALID_DATA
	f	Lcom/mojang/authlib/GameProfile;	h	gameProfile
	f	Ljava/util/Queue;	i	configurationTasks
	f	Lark;	j	currentTask
	f	Laqh;	k	clientInformation
	f	Lasd;	l	synchronizeRegistriesTask
c	art	net/minecraft/server/network/ServerConnection
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
		p	1		address
		p	2		port
	m	(Lvt;Lwz;)V	a	lambda$tick$2
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	f	Ljava/util/function/Supplier;	a	SERVER_EVENT_GROUP
	f	Ljava/util/function/Supplier;	b	SERVER_EPOLL_EVENT_GROUP
	f	Z	c	running
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
c	art$1	net/minecraft/server/network/ServerConnection$1
	f	Lart;	a	this$0
c	art$2	net/minecraft/server/network/ServerConnection$2
	f	Lart;	a	this$0
c	art$a	net/minecraft/server/network/ServerConnection$LatencySimulator
	m	(II)V	<init>	<init>
		p	1		baseDelay
		p	2		extraDelay
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
		p	1		ctx
		p	2		msg
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
		p	1		timeout
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
c	art$a$a	net/minecraft/server/network/ServerConnection$LatencySimulator$DelayedMessage
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	<init>	<init>
		p	1		context
		p	2		message
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
c	aru	net/minecraft/server/network/PlayerConnection
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;Laqv;Larj;)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		player
		p	4		clientData
	m	(D)D	a	clampHorizontal
		p	0		d
	m	(DDDFF)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFLjava/util/Set;)V	a	teleport
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		flags
	m	(I)V	a	ackBlockChangesUpTo
		p	1		sequence
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$3
		p	2		texts
	m	(Laaa;)V	a	handleClientInformation
		p	1		packet
	m	(Laab;)V	a	handleCustomPayload
		p	1		packet
	m	(Lagk;)V	a	handleAcceptTeleportPacket
		p	1		packet
	m	(Lagl;)V	a	handleBlockEntityTagQuery
		p	1		packet
	m	(Lagm;)V	a	handleChangeDifficulty
		p	1		packet
	m	(Lagn;)V	a	handleChatAck
		p	1		packet
	m	(Lago;)V	a	handleChatCommand
		p	1		packet
	m	(Lagp;)V	a	handleSignedChatCommand
		p	1		packet
	m	(Lagp;Ljava/util/Optional;)V	a	lambda$handleSignedChatCommand$8
	m	(Lagp;Lxg;)V	a	performSignedChatCommand
		p	1		packet
		p	2		lastSeenMessages
	m	(Lagp;Lxr;Lxg;)Ljava/util/Map;	a	collectSignedArguments
		p	1		packet
		p	2		arguments
		p	3		lastSeenMessages
	m	(Lagq;)V	a	handleChat
		p	1		packet
	m	(Lagq;Ljava/util/Optional;)V	a	lambda$handleChat$6
	m	(Lagq;Lxg;)Lxp;	a	getSignedMessage
		p	1		packet
		p	2		lastSeenMessages
	m	(Lagr;)V	a	handleChatSessionUpdate
		p	1		packet
	m	(Lags;)V	a	handleChunkBatchReceived
		p	1		packet
	m	(Lagt;)V	a	handleClientCommand
		p	1		packet
	m	(Lagu;)V	a	handleCustomCommandSuggestions
		p	1		packet
	m	(Lagu;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$1
		p	2		suggestions
	m	(Lagv;)V	a	handleConfigurationAcknowledged
		p	1		packet
	m	(Lagw;)V	a	handleContainerButtonClick
		p	1		packet
	m	(Lagx;)V	a	handleContainerClick
		p	1		packet
	m	(Lagy;)V	a	handleContainerClose
		p	1		packet
	m	(Lagz;)V	a	handleContainerSlotStateChanged
		p	1		packet
	m	(Laha;)V	a	handleDebugSampleSubscription
		p	1		packet
	m	(Lahb;)V	a	handleEditBook
		p	1		packet
	m	(Lahc;)V	a	handleEntityTagQuery
		p	1		packet
	m	(Lahd;)V	a	handleInteract
		p	1		packet
	m	(Lahe;)V	a	handleJigsawGenerate
		p	1		packet
	m	(Lahf;)V	a	handleLockDifficulty
		p	1		packet
	m	(Lahg;)V	a	handleMovePlayer
		p	1		packet
	m	(Lahh;)V	a	handleMoveVehicle
		p	1		packet
	m	(Lahi;)V	a	handlePaddleBoat
		p	1		packet
	m	(Lahj;)V	a	handlePickItem
		p	1		packet
	m	(Lahk;)V	a	handlePlaceRecipe
		p	1		packet
	m	(Lahk;Lczb;)V	a	lambda$handlePlaceRecipe$10
		p	2		recipe
	m	(Lahl;)V	a	handlePlayerAbilities
		p	1		packet
	m	(Lahm;)V	a	handlePlayerAction
		p	1		packet
	m	(Lahn;)V	a	handlePlayerCommand
		p	1		packet
	m	(Laho;)V	a	handlePlayerInput
		p	1		packet
	m	(Lahp;)V	a	handleRecipeBookChangeSettingsPacket
		p	1		packet
	m	(Lahq;)V	a	handleRecipeBookSeenRecipePacket
		p	1		packet
	m	(Lahr;)V	a	handleRenameItem
		p	1		packet
	m	(Lahs;)V	a	handleSeenAdvancements
		p	1		packet
	m	(Laht;)V	a	handleSelectTrade
		p	1		packet
	m	(Lahu;)V	a	handleSetBeaconPacket
		p	1		packet
	m	(Lahv;)V	a	handleSetCarriedItem
		p	1		packet
	m	(Lahw;)V	a	handleSetCommandBlock
		p	1		packet
	m	(Lahx;)V	a	handleSetCommandMinecart
		p	1		packet
	m	(Lahy;)V	a	handleSetCreativeModeSlot
		p	1		packet
	m	(Lahz;)V	a	handleSetJigsawBlock
		p	1		packet
	m	(Laia;)V	a	handleSetStructureBlock
		p	1		packet
	m	(Laib;)V	a	handleSignUpdate
		p	1		packet
	m	(Laib;Ljava/util/List;)V	a	updateSignText
		p	1		packet
		p	2		signText
	m	(Laic;)V	a	handleAnimate
		p	1		packet
	m	(Laid;)V	a	handleTeleportToEntityPacket
		p	1		packet
	m	(Laie;)V	a	handleUseItemOn
		p	1		packet
	m	(Laif;)V	a	handleUseItem
		p	1		packet
	m	(Lajm;)V	a	handlePingRequest
		p	1		packet
	m	(Laqv;Lcuq;)Z	a	wasBlockPlacementAttempt
		p	0		player
		p	1		stack
	m	(Larm;)Larl;	a	filterableFromOutgoing
		p	1		message
	m	(Larm;Ljava/util/List;I)V	a	signBook
		p	1		title
		p	2		pages
		p	3		slotId
	m	(Lbsr;)I	a	getMaximumFlyingTicks
		p	1		vehicle
	m	(Ldcz;Lewx;DDD)Z	a	isPlayerCollidingWithAnythingNew
		p	1		world
		p	2		box
		p	3		newX
		p	5		newY
		p	7		newZ
	m	(Ler;Let;)Let;	a	lambda$performSignedChatCommand$9
		p	2		source
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$filterTextPacket$0
		p	1		filtered
	m	(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
		p	2		filterer
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		text
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	tryHandleChat
		p	1		message
		p	2		callback
	m	(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lxt$a;	a	createSignedArgumentMismatchException
		p	0		command
		p	1		actual
		p	2		expected
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
		p	1		texts
	m	(Ljava/util/List;I)V	a	updateBookContents
		p	1		pages
		p	2		slotId
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	(Lwz;Lwv$a;)V	a	sendDisguisedChatMessage
		p	1		message
		p	2		params
	m	(Lxg$b;)Ljava/util/Optional;	a	unpackAndApplyLastSeen
		p	1		acknowledgment
	m	(Lxp;)V	a	addPendingMessage
		p	1		message
	m	(Lxp;Lwv$a;)V	a	sendPlayerChatMessage
		p	1		message
		p	2		params
	m	(Lxp;Lwz;Larm;)V	a	lambda$handleChat$5
		p	3		filtered
	m	(Lxq;)V	a	resetPlayerChatState
		p	1		session
	m	(Lxt$a;)V	a	handleMessageDecodeFailure
		p	1		exception
	m	(Lzg;)Z	a	shouldHandleMessage
		p	1		packet
	m	(D)D	b	clampVertical
		p	0		d
	m	(DDDFF)Z	b	containsInvalidValues
		p	0		x
		p	2		y
		p	4		z
		p	6		yaw
		p	7		pitch
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$2
		p	2		texts
	m	(Lago;)V	b	lambda$handleChatCommand$7
	m	(Laib;Ljava/util/List;)V	b	lambda$handleSignUpdate$11
		p	2		texts
	m	(Larm;)Larl;	b	lambda$signBook$4
		p	1		page
	m	(Lbsr;)Z	b	noBlocksAround
		p	1		entity
	m	(Ljava/lang/String;)V	b	performUnsignedChatCommand
		p	1		command
	m	(Ljava/util/List;)Ljava/util/Map;	b	collectUnsignedArguments
		p	1		arguments
	m	(Lxp;)V	b	broadcastChatMessage
		p	1		message
	m	(Lxq;)V	b	lambda$resetPlayerChatState$12
	m	()Z	c	isAcceptingMessages
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults;	c	parseCommand
		p	1		command
	m	()V	d	tick
	m	(Ljava/lang/String;)Z	d	isChatMessageIllegal
		p	0		message
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	()V	l	resetPosition
	m	()Ljava/net/SocketAddress;	m	getRemoteAddress
	m	()V	n	switchToConfig
	m	()Laqv;	o	getPlayer
	m	()Z	p	updateAwaitingTeleport
	m	()V	q	removePlayerFromWorld
	m	()V	r	detectRateSpam
	f	D	A	vehicleFirstGoodY
	f	D	B	vehicleFirstGoodZ
	f	D	C	vehicleLastGoodX
	f	D	D	vehicleLastGoodY
	f	D	E	vehicleLastGoodZ
	f	Lexc;	F	awaitingPositionFromClient
	f	I	G	awaitingTeleport
	f	I	H	awaitingTeleportTime
	f	Z	I	clientIsFloating
	f	I	J	aboveGroundTickCount
	f	Z	K	clientVehicleIsFloating
	f	I	L	aboveGroundVehicleTickCount
	f	I	M	receivedMovePacketCount
	f	I	N	knownMovePacketCount
	f	Lxq;	O	chatSession
	f	Lxt$b;	P	signedMessageDecoder
	f	Lxi;	Q	lastSeenMessages
	f	Lxm;	R	messageSignatureCache
	f	Layc;	S	chatMessageChain
	f	Z	T	waitingForSwitchToConfig
	f	Laqv;	f	player
	f	Larq;	g	chunkSender
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	I	i	NO_BLOCK_UPDATES_TO_ACK
	f	I	j	TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	f	I	k	MAXIMUM_FLYING_TICKS
	f	Lwz;	l	CHAT_VALIDATION_FAILED
	f	Lwz;	m	INVALID_COMMAND_SIGNATURE
	f	I	n	MAX_COMMAND_SUGGESTIONS
	f	I	o	tickCount
	f	I	p	ackBlockChangesUpTo
	f	I	q	chatSpamTickCount
	f	I	r	dropSpamTickCount
	f	D	s	firstGoodX
	f	D	t	firstGoodY
	f	D	u	firstGoodZ
	f	D	v	lastGoodX
	f	D	w	lastGoodY
	f	D	x	lastGoodZ
	f	Lbsr;	y	lastVehicle
	f	D	z	vehicleFirstGoodX
c	aru$1	net/minecraft/server/network/PlayerConnection$1
	m	()V	a	onAttack
	m	(Lbqq;)V	a	onInteraction
		p	1		hand
	m	(Lbqq;Laru$a;)V	a	performInteraction
		p	1		hand
		p	2		action
	m	(Lbqq;Lexc;)V	a	onInteraction
		p	1		hand
		p	2		pos
	m	(Lexc;Laqv;Lbsr;Lbqq;)Lbqr;	a	lambda$onInteraction$0
		p	1		player
		p	2		entity
		p	3		handx
	f	Laqu;	a	val$level
	f	Lbsr;	b	val$target
	f	Laru;	c	this$0
c	aru$2	net/minecraft/server/network/PlayerConnection$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
c	aru$a	net/minecraft/server/network/PlayerConnection$a
	m	(Laqv;Lbsr;Lbqq;)Lbqr;	run	run
		p	1		player
		p	2		entity
		p	3		hand
c	arv	net/minecraft/server/network/HandshakeListener
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;)V	<init>	<init>
		p	1		server
		p	2		connection
	m	(Laij;)V	a	handleIntention
		p	1		packet
	m	(Laij;Z)V	a	beginLogin
		p	1		packet
		p	2		transfer
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	()Z	c	isAcceptingMessages
	f	Lwz;	b	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Lvt;	d	connection
c	arv$1	net/minecraft/server/network/HandshakeListener$1
	f	[I	a	$SwitchMap$net$minecraft$network$protocol$handshake$ClientIntent
c	arw	net/minecraft/server/network/LoginListener
	m	(Lnet/minecraft/server/MinecraftServer;Lvt;Z)V	<init>	<init>
		p	1		server
		p	2		connection
		p	3		transferred
	m	(Labs;)V	a	handleCookieResponse
		p	1		packet
	m	(Laix;)V	a	handleCustomQueryPacket
		p	1		packet
	m	(Laiy;)V	a	handleHello
		p	1		packet
	m	(Laiz;)V	a	handleKey
		p	1		packet
	m	(Laja;)V	a	handleLoginAcknowledgement
		p	1		packet
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isPlayerAlreadyInWorld
		p	1		profile
	m	(Lo;Lp;)V	a	fillListenerSpecificCrashDetails
		p	1		report
		p	2		section
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	(Lwz;)V	a	disconnect
		p	1		reason
	m	(Lcom/mojang/authlib/GameProfile;)V	b	startClientVerification
		p	1		profile
	m	()Z	c	isAcceptingMessages
	m	(Lcom/mojang/authlib/GameProfile;)V	c	verifyLoginAndFinishConnectionSetup
		p	1		profile
	m	()V	d	tick
	m	(Lcom/mojang/authlib/GameProfile;)V	d	finishLoginAndWaitForClient
		p	1		profile
	m	()Ljava/lang/String;	e	getUserName
	m	()Ljava/lang/String;	f	lambda$fillListenerSpecificCrashDetails$1
	m	()V	g	lambda$verifyLoginAndFinishConnectionSetup$0
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_LOGIN
	f	[B	e	challenge
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lvt;	g	connection
	f	Larw$a;	h	state
	f	I	i	tick
	f	Ljava/lang/String;	j	requestedUsername
	f	Lcom/mojang/authlib/GameProfile;	k	authenticatedProfile
	f	Ljava/lang/String;	l	serverId
	f	Z	m	transferred
c	arw$1	net/minecraft/server/network/LoginListener$1
	m	()Ljava/net/InetAddress;	a	getAddress
	f	Ljava/lang/String;	a	val$digest
	f	Larw;	b	this$0
c	arw$a	net/minecraft/server/network/LoginListener$EnumProtocolState
	m	()[Larw$a;	a	$values
	f	Larw$a;	a	HELLO
	f	Larw$a;	b	KEY
	f	Larw$a;	c	AUTHENTICATING
	f	Larw$a;	d	NEGOTIATING
	f	Larw$a;	e	VERIFYING
	f	Larw$a;	f	WAITING_FOR_DUPE_DISCONNECT
	f	Larw$a;	g	PROTOCOL_SWITCHING
	f	Larw$a;	h	ACCEPTED
	f	[Larw$a;	i	$VALUES
c	arx	net/minecraft/server/network/ServerPlayerConnection
	m	(Lzg;)V	b	send
		p	1		packet
	m	()Laqv;	o	getPlayer
c	ary	net/minecraft/server/network/PacketStatusListener
	m	(Lajq;Lvt;)V	<init>	<init>
		p	1		metadata
		p	2		connection
	m	(Lajm;)V	a	handlePingRequest
		p	1		packet
	m	(Lajs;)V	a	handleStatusRequest
		p	1		packet
	m	(Lvv;)V	a	onDisconnect
		p	1		info
	m	()Z	c	isAcceptingMessages
	f	Lwz;	b	DISCONNECT_REASON
	f	Lajq;	c	status
	f	Lvt;	d	connection
	f	Z	e	hasRequestedStatus
c	arz	net/minecraft/server/network/ITextFilter
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	f	Larz;	a	DUMMY
c	arz$1	net/minecraft/server/network/ITextFilter$1
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
c	asa	net/minecraft/server/network/TextFilter
	m	(Ljava/net/URL;Lasa$c;Ljava/net/URL;Lasa$b;Ljava/net/URL;Lasa$b;Ljava/lang/String;Lasa$a;I)V	<init>	<init>
		p	1		chatEndpoint
		p	2		messageEncoder
		p	3		joinEndpoint
		p	4		joinEncoder
		p	5		leaveEndpoint
		p	6		leaveEncoder
		p	7		apiKey
		p	8		ignorer
		p	9		parallelism
	m	(ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$2
		p	3		profile
		p	4		message
	m	(Lasa$b;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V	a	lambda$processJoinOrLeave$4
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getEndpointFromConfig
		p	0		json
		p	1		key
		p	2		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	a	processRequestResponse
		p	1		payload
		p	2		endpoint
	m	(Lcom/mojang/authlib/GameProfile;)Larz;	a	createContext
		p	1		gameProfile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lasa$a;)Larm;	a	lambda$requestMessageProcessing$5
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lasa$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
		p	1		gameProfile
		p	2		message
		p	3		ignorer
		p	4		executor
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lasa$b;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
		p	1		gameProfile
		p	2		endpoint
		p	3		profileEncoder
		p	4		executor
	m	(Ljava/io/InputStream;)V	a	drainStream
		p	1		inputStream
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Lasa;	a	createFromConfig
		p	0		config
	m	(Ljava/lang/String;Lcom/google/gson/JsonArray;Lasa$a;)Lxd;	a	parseMask
		p	1		message
		p	2		mask
		p	3		ignorer
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$1
		p	2		profile
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createFromConfig$3
		p	3		profile
		p	4		message
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
		p	0		root
		p	1		endpoints
		p	2		key
		p	3		fallback
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
		p	1		payload
		p	2		endpoint
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	c	makeRequest
		p	1		payload
		p	2		endpoint
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/lang/String;	d	DEFAULT_ENDPOINT
	f	Ljava/net/URL;	e	chatEndpoint
	f	Lasa$c;	f	chatEncoder
	f	Ljava/net/URL;	g	joinEndpoint
	f	Lasa$b;	h	joinEncoder
	f	Ljava/net/URL;	i	leaveEndpoint
	f	Lasa$b;	j	leaveEncoder
	f	Ljava/lang/String;	k	authKey
	f	Lasa$a;	l	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	m	workerPool
c	asa$a	net/minecraft/server/network/TextFilter$a
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
		p	1		hashes
		p	2		hashesSize
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
		p	0		hashes
		p	1		hashesSize
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
		p	0		hashes
		p	1		hashesSize
	m	(I)Lasa$a;	ignoreOverThreshold	ignoreOverThreshold
		p	0		hashesToDrop
	m	(I)Lasa$a;	select	select
		p	0		hashesToDrop
	m	(Ljava/lang/String;I)Z	shouldIgnore	shouldIgnore
		p	1		hashes
		p	2		hashesSize
	f	Lasa$a;	a	NEVER_IGNORE
	f	Lasa$a;	b	IGNORE_FULLY_FILTERED
c	asa$b	net/minecraft/server/network/TextFilter$b
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
c	asa$c	net/minecraft/server/network/TextFilter$c
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	encode	encode
		p	1		gameProfile
		p	2		message
c	asa$d	net/minecraft/server/network/TextFilter$d
	m	(Lasa;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	2		gameProfile
	m	()V	a	join
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
		p	1		text
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
		p	0		throwable
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
		p	1		texts
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
		p	1		text
	f	Lasa;	b	this$0
	f	Lcom/mojang/authlib/GameProfile;	c	profile
	f	Ljava/util/concurrent/Executor;	d	streamExecutor
c	asa$e	net/minecraft/server/network/TextFilter$e
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	asb	net/minecraft/server/network/config/JoinWorldTask
	m	()Lark$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
	f	Lark$a;	a	TYPE
c	asc	net/minecraft/server/network/config/ServerResourcePackConfigurationTask
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	<init>	<init>
		p	1		packProperties
	m	()Lark$a;	a	type
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
	f	Lark$a;	a	TYPE
	f	Lnet/minecraft/server/MinecraftServer$b;	b	info
c	asd	net/minecraft/server/network/config/SynchronizeRegistriesTask
	m	(Ljava/util/List;Ljt;)V	<init>	<init>
		p	1		knownPacks
		p	2		registries
	m	()Lark$a;	a	type
	m	(Ljava/util/List;Ljava/util/function/Consumer;)V	a	handleResponse
		p	1		clientKnownPacks
		p	2		sender
	m	(Ljava/util/function/Consumer;)V	a	start
		p	1		sender
	m	(Ljava/util/function/Consumer;Lakq;Ljava/util/List;)V	a	lambda$sendRegistries$0
		p	1		key
		p	2		entries
	m	(Ljava/util/function/Consumer;Ljava/util/Set;)V	a	sendRegistries
		p	1		sender
		p	2		commonKnownPacks
	f	Lark$a;	a	TYPE
	f	Ljava/util/List;	b	requestedPacks
	f	Ljt;	c	registries
c	ash	net/minecraft/server/packs/ResourcePackAbstract
	m	(Lasp;)V	<init>	<init>
		p	1		info
	m	()Lasp;	a	location
	m	(Latd;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Latd;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
		p	0		metaReader
		p	1		inputStream
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lasp;	d	location
c	asi	net/minecraft/server/packs/BuiltInMetadata
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		values
	m	()Lasi;	a	of
	m	(Latd;)Ljava/lang/Object;	a	get
		p	1		reader
	m	(Latd;Ljava/lang/Object;)Lasi;	a	of
		p	0		reader
		p	1		value
	m	(Latd;Ljava/lang/Object;Latd;Ljava/lang/Object;)Lasi;	a	of
		p	0		reader
		p	1		value
		p	2		reader2
		p	3		value2
	f	Lasi;	a	EMPTY
	f	Ljava/util/Map;	b	values
c	asj	net/minecraft/server/packs/CompositePackResources
	m	(Lasq;Ljava/util/List;)V	<init>	<init>
		p	1		base
		p	2		overlays
	m	()Lasp;	a	location
	m	(Lass;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lass;Lakr;)Latw;	a	getResource
		p	1		type
		p	2		id
	m	(Lass;Ljava/lang/String;Ljava/lang/String;Lasq$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Latd;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	([Ljava/lang/String;)Latw;	a	getRootResource
		p	1		segments
	f	Lasq;	c	primaryPackResources
	f	Ljava/util/List;	d	packResourcesStack
c	ask	ask
	m	(Ljava/nio/file/Path;)Ljava/util/List;	a	listFilesWithModificationTimes
		p	0		directory
	m	(Ljava/nio/file/Path;I)V	a	vacuumCacheDir
		p	0		directory
		p	1		maxRetained
	m	(Ljava/util/List;)Ljava/util/List;	a	prioritizeFilesInDirs
		p	0		files
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ask$1	ask$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$cacheDir
	f	Ljava/util/List;	b	val$unsortedFiles
c	ask$a	ask$a
	m	()Ljava/nio/file/Path;	a	path
	m	()I	b	removalPriority
	f	Ljava/util/Comparator;	a	HIGHEST_PRIORITY_FIRST
	f	Ljava/nio/file/Path;	b	path
	f	I	c	removalPriority
c	ask$b	ask$b
	m	()Ljava/nio/file/Path;	a	path
	m	()Ljava/nio/file/attribute/FileTime;	b	modifiedTime
	f	Ljava/util/Comparator;	a	NEWEST_FIRST
	f	Ljava/nio/file/Path;	b	path
	f	Ljava/nio/file/attribute/FileTime;	c	modifiedTime
c	asl	asl
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		directory
	m	(Lasl$a;Lasl$b;Ljava/util/UUID;Lasl$c;)V	a	lambda$runDownload$0
		p	3		id
		p	4		entry
	m	(Lasl$a;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	downloadBatch
		p	1		config
		p	2		entries
	m	(Ljava/nio/file/Path;)Lcom/mojang/datafixers/util/Either;	a	getFileInfo
		p	1		path
	m	(Lasl$a;Ljava/util/Map;)Lasl$b;	b	runDownload
		p	1		config
		p	2		entries
	m	(Lasl$a;Ljava/util/Map;)Lasl$b;	c	lambda$downloadBatch$1
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_KEPT_PACKS
	f	Ljava/nio/file/Path;	c	cacheDir
	f	Lbly;	d	eventLog
	f	Lbpk;	e	tasks
c	asl$a	asl$a
	m	()Lcom/google/common/hash/HashFunction;	a	hashFunction
	m	()I	b	maxSize
	m	()Ljava/util/Map;	c	headers
	m	()Ljava/net/Proxy;	d	proxy
	m	()Layf$a;	e	listener
	f	Lcom/google/common/hash/HashFunction;	a	hashFunction
	f	I	b	maxSize
	f	Ljava/util/Map;	c	headers
	f	Ljava/net/Proxy;	d	proxy
	f	Layf$a;	e	listener
c	asl$b	asl$b
	m	()Ljava/util/Map;	a	downloaded
	m	()Ljava/util/Set;	b	failed
	f	Ljava/util/Map;	a	downloaded
	f	Ljava/util/Set;	b	failed
c	asl$c	asl$c
	m	()Ljava/net/URL;	a	url
	m	()Lcom/google/common/hash/HashCode;	b	hash
	f	Ljava/net/URL;	a	url
	f	Lcom/google/common/hash/HashCode;	b	hash
c	asl$d	asl$d
	m	()Ljava/lang/String;	a	name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()J	b	size
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	name
	f	J	c	size
c	asl$e	asl$e
	m	()Ljava/util/UUID;	a	id
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	url
	m	()Ljava/time/Instant;	c	time
	m	()Ljava/util/Optional;	d	hash
	m	()Lcom/mojang/datafixers/util/Either;	e	errorOrFileInfo
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/UUID;	b	id
	f	Ljava/lang/String;	c	url
	f	Ljava/time/Instant;	d	time
	f	Ljava/util/Optional;	e	hash
	f	Lcom/mojang/datafixers/util/Either;	f	errorOrFileInfo
c	asm	net/minecraft/server/packs/FeatureFlagsMetadataSection
	m	()Lcpl;	a	flags
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	f	Late;	a	TYPE
	f	Lcpl;	b	flags
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	asn	net/minecraft/server/packs/ResourcePackFile
	m	(Lasp;Lasn$b;Ljava/lang/String;)V	<init>	<init>
		p	1		info
		p	2		zipFile
		p	3		overlay
	m	(Lass;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lass;Lakr;)Latw;	a	getResource
		p	1		type
		p	2		id
	m	(Lass;Ljava/lang/String;Ljava/lang/String;Lasq$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;)Ljava/lang/String;	a	addPrefix
		p	1		path
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	extractNamespace
		p	0		prefix
		p	1		entryName
	m	([Ljava/lang/String;)Latw;	a	getRootResource
		p	1		segments
	m	(Lass;Lakr;)Ljava/lang/String;	b	getPathFromLocation
		p	0		type
		p	1		id
	m	(Ljava/lang/String;)Latw;	b	getResource
		p	1		path
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lasn$b;	d	zipFileAccess
	f	Ljava/lang/String;	e	prefix
c	asn$a	net/minecraft/server/packs/ResourcePackFile$a
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	(Lasp;)Lasq;	a	openPrimary
		p	1		info
	m	(Lasp;Latm$a;)Lasq;	a	openFull
		p	1		info
		p	2		metadata
	f	Ljava/io/File;	a	content
c	asn$b	net/minecraft/server/packs/ResourcePackFile$b
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()Ljava/util/zip/ZipFile;	a	getOrCreateZipFile
	f	Ljava/io/File;	a	file
	f	Ljava/util/zip/ZipFile;	b	zipFile
	f	Z	c	failedToLoad
c	aso	net/minecraft/server/packs/OverlayMetadataSection
	m	()Ljava/util/List;	a	overlays
	m	(I)Ljava/util/List;	a	overlaysForVersion
		p	1		packFormat
	m	(ILaso$a;)Z	a	lambda$overlaysForVersion$2
		p	1		overlay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	validateOverlayDir
		p	0		directoryName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$validateOverlayDir$0
	f	Late;	a	TYPE
	f	Ljava/util/List;	b	overlays
	f	Ljava/util/regex/Pattern;	c	DIR_VALIDATOR
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	aso$a	net/minecraft/server/packs/OverlayMetadataSection$a
	m	()Layg;	a	format
	m	(I)Z	a	isApplicable
		p	1		packFormat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	overlay
	f	Layg;	a	format
	f	Ljava/lang/String;	b	overlay
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	asp	net/minecraft/server/packs/PackLocationInfo
	m	()Ljava/lang/String;	a	id
	m	(ZLwz;)Lwz;	a	createChatLink
		p	1		enabled
		p	2		description
	m	(ZLwz;Lxw;)Lxw;	a	lambda$createChatLink$0
		p	3		style
	m	()Lwz;	b	title
	m	()Latq;	c	source
	m	()Ljava/util/Optional;	d	knownPackInfo
	f	Ljava/lang/String;	a	id
	f	Lwz;	b	title
	f	Latq;	c	source
	f	Ljava/util/Optional;	d	knownPackInfo
c	asq	net/minecraft/server/packs/IResourcePack
	m	()Lasp;	a	location
	m	(Lass;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lass;Lakr;)Latw;	a	getResource
		p	1		type
		p	2		id
	m	(Lass;Ljava/lang/String;Ljava/lang/String;Lasq$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Latd;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	([Ljava/lang/String;)Latw;	a	getRootResource
		p	1		segments
	m	()Ljava/lang/String;	b	packId
	m	()Ljava/util/Optional;	c	knownPackInfo
	f	Ljava/lang/String;	a	METADATA_EXTENSION
	f	Ljava/lang/String;	b	PACK_META
c	asq$a	net/minecraft/server/packs/IResourcePack$a
c	asr	net/minecraft/server/packs/PackSelectionConfig
	m	()Z	a	required
	m	()Latm$b;	b	defaultPosition
	m	()Z	c	fixedPosition
	f	Z	a	required
	f	Latm$b;	b	defaultPosition
	f	Z	c	fixedPosition
c	ass	net/minecraft/server/packs/EnumResourcePackType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		directory
	m	()Ljava/lang/String;	a	getDirectory
	m	()[Lass;	b	$values
	f	Lass;	a	CLIENT_RESOURCES
	f	Lass;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	[Lass;	d	$VALUES
c	ast	net/minecraft/server/packs/PathPackResources
	m	(Lasp;Ljava/nio/file/Path;)V	<init>	<init>
		p	1		info
		p	2		root
	m	(Lakr;Lcom/mojang/serialization/DataResult$Error;)Latw;	a	lambda$getResource$1
	m	(Lakr;Ljava/nio/file/Path;)Latw;	a	getResource
		p	0		id
		p	1		path
	m	(Lass;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lass;Lakr;)Latw;	a	getResource
		p	1		type
		p	2		id
	m	(Lass;Ljava/lang/String;Lasq$a;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		prefixSegments
	m	(Lass;Ljava/lang/String;Ljava/lang/String;Lasq$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$listResources$3
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lasq$a;)V	a	listPath
		p	0		namespace
		p	1		path
		p	2		prefixSegments
		p	3		consumer
	m	(Ljava/nio/file/Path;)Z	a	validatePath
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Lasq$a;Ljava/nio/file/Path;)V	a	lambda$listPath$5
		p	3		foundPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$listPath$4
		p	0		path2
		p	1		attributes
	m	(Ljava/nio/file/Path;Ljava/util/List;)Latw;	a	lambda$getResource$0
		p	1		segments
	m	([Ljava/lang/String;)Latw;	a	getRootResource
		p	1		segments
	m	(Ljava/nio/file/Path;)Latw;	b	returnFileIfExists
		p	0		path
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Joiner;	d	PATH_JOINER
	f	Ljava/nio/file/Path;	e	root
c	ast$a	net/minecraft/server/packs/PathPackResources$a
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		path
	m	(Lasp;)Lasq;	a	openPrimary
		p	1		info
	m	(Lasp;Latm$a;)Lasq;	a	openFull
		p	1		info
		p	2		metadata
	f	Ljava/nio/file/Path;	a	content
c	asu	net/minecraft/server/packs/ResourcePackVanilla
	m	(Lasp;Lasi;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
		p	1		info
		p	2		metadata
		p	3		namespaces
		p	4		rootPaths
		p	5		namespacePaths
	m	()Lasp;	a	location
	m	(Lakr;)Ljava/util/Optional;	a	lambda$asProvider$7
		p	1		id
	m	(Lakr;Lass;Ljava/util/List;)Latw;	a	lambda$getResource$4
		p	3		segments
	m	(Lakr;Lass;Ljava/util/function/Consumer;Ljava/util/List;)V	a	lambda$listRawPaths$0
		p	4		segments
	m	(Lakr;Lcom/mojang/serialization/DataResult$Error;)Latw;	a	lambda$getResource$5
	m	(Lasq$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V	a	getResources
		p	0		consumer
		p	1		namespace
		p	2		root
		p	3		prefixSegments
	m	(Lass;)Ljava/util/Set;	a	getNamespaces
		p	1		type
	m	(Lass;Lakr;)Latw;	a	getResource
		p	1		type
		p	2		id
	m	(Lass;Lakr;Ljava/util/function/Consumer;)V	a	listRawPaths
		p	1		type
		p	2		path
		p	3		consumer
	m	(Lass;Lasq$a;Ljava/lang/String;Ljava/util/List;)V	a	lambda$listResources$2
		p	4		segments
	m	(Lass;Ljava/lang/String;Ljava/lang/String;Lasq$a;)V	a	listResources
		p	1		type
		p	2		namespace
		p	3		prefix
		p	4		consumer
	m	(Latd;)Ljava/lang/Object;	a	getMetadataSection
		p	1		metaReader
	m	(Latw;)Lauc;	a	lambda$asProvider$6
		p	1		stream
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$listResources$3
	m	([Ljava/lang/String;)Latw;	a	getRootResource
		p	1		segments
	m	(Lakr;Lcom/mojang/serialization/DataResult$Error;)V	b	lambda$listRawPaths$1
	m	()Lauh;	d	asProvider
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lasp;	d	location
	f	Lasi;	e	metadata
	f	Ljava/util/Set;	f	namespaces
	f	Ljava/util/List;	g	rootPaths
	f	Ljava/util/Map;	h	pathsForType
c	asv	net/minecraft/server/packs/VanillaPackResourcesBuilder
	m	()Lasv;	a	pushJarResources
	m	(Lasi;)Lasv;	a	setMetadata
		p	1		metadataMap
	m	(Lasp;)Lasu;	a	build
		p	1		info
	m	(Lass;)Ljava/util/Set;	a	lambda$pushPathForType$2
		p	0		type2
	m	(Lass;Ljava/lang/Class;)Lasv;	a	pushClasspathResources
		p	1		type
		p	2		clazz
	m	(Lass;Ljava/nio/file/Path;)Lasv;	a	pushAssetPath
		p	1		type
		p	2		path
	m	(Lasv;)V	a	lambda$static$0
		p	0		builder
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
		p	0		uri
	m	(Ljava/nio/file/Path;)Lasv;	a	pushUniversalPath
		p	1		root
	m	(Ljava/util/Collection;)Ljava/util/List;	a	copyAndReverse
		p	0		paths
	m	([Ljava/lang/String;)Lasv;	a	exposeNamespace
		p	1		namespaces
	m	()Lasv;	b	applyDevelopmentConfig
	m	(Lass;Ljava/nio/file/Path;)V	b	pushPathForType
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)Z	b	validateDirPath
		p	1		path
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$static$1
	m	(Lass;Ljava/nio/file/Path;)V	c	lambda$pushJarResources$3
		p	1		type
		p	2		path
	m	(Ljava/nio/file/Path;)V	c	pushRootPath
		p	1		path
	f	Ljava/util/function/Consumer;	a	developmentConfig
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	ROOT_DIR_BY_TYPE
	f	Ljava/util/Set;	d	rootPaths
	f	Ljava/util/Map;	e	pathsForType
	f	Lasi;	f	metadata
	f	Ljava/util/Set;	g	namespaces
c	asw	net/minecraft/server/packs/linkfs/DummyFileAttributes
	f	Ljava/nio/file/attribute/FileTime;	a	EPOCH
c	asx	net/minecraft/server/packs/linkfs/LinkFSFileStore
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	name
c	asy	net/minecraft/server/packs/linkfs/LinkFSPath
	m	(Lata;Ljava/lang/String;Lasy;Latb;)V	<init>	<init>
		p	1		fileSystem
		p	2		name
		p	3		parent
		p	4		file
	m	()Lata;	a	getFileSystem
	m	(I)Lasy;	a	getName
	m	(II)Lasy;	a	subpath
	m	(Lasy;Ljava/lang/String;)Lasy;	a	createRelativePath
		p	1		path
		p	2		name
	m	(Latb;)Z	a	isRelativeOrMissing
		p	0		file
	m	(Ljava/lang/String;)Lasy;	a	resolveName
		p	1		name
	m	(Ljava/nio/file/Path;)Lasy;	a	resolve
	m	(Ljava/util/List;)Lasy;	a	resolve
		p	1		paths
	m	([Ljava/nio/file/LinkOption;)Lasy;	a	toRealPath
	m	()Lasy;	b	getRoot
	m	(Ljava/nio/file/Path;)Lasy;	b	relativize
	m	()Lasy;	c	getFileName
	m	(Ljava/nio/file/Path;)Lasy;	c	toLinkPath
		p	1		path
	m	()Lasy;	d	getParent
	m	()Lasy;	e	normalize
	m	()Lasy;	f	toAbsolutePath
	m	()Z	g	exists
	m	()Ljava/nio/file/Path;	h	getTargetPath
	m	()Latb$a;	i	getDirectoryContents
	m	()Ljava/nio/file/attribute/BasicFileAttributeView;	j	getBasicAttributeView
	m	()Ljava/nio/file/attribute/BasicFileAttributes;	k	getBasicAttributes
	m	()Ljava/util/List;	l	pathToRoot
	m	()Z	m	hasRealContents
	m	()Ljava/lang/String;	n	pathToString
	f	Ljava/nio/file/attribute/BasicFileAttributes;	a	DIRECTORY_ATTRIBUTES
	f	Ljava/nio/file/attribute/BasicFileAttributes;	b	FILE_ATTRIBUTES
	f	Ljava/util/Comparator;	c	PATH_COMPARATOR
	f	Ljava/lang/String;	d	name
	f	Lata;	e	fileSystem
	f	Lasy;	f	parent
	f	Ljava/util/List;	g	pathToRoot
	f	Ljava/lang/String;	h	pathString
	f	Latb;	i	pathContents
c	asy$1	net/minecraft/server/packs/linkfs/LinkFSPath$1
c	asy$2	net/minecraft/server/packs/linkfs/LinkFSPath$2
c	asy$3	net/minecraft/server/packs/linkfs/LinkFSPath$3
	f	Lasy;	a	this$0
c	asz	net/minecraft/server/packs/linkfs/LinkFSProvider
	m	(Ljava/nio/file/Path;)Lasy;	a	toLinkPath
		p	0		path
	f	Ljava/lang/String;	a	SCHEME
c	asz$1	net/minecraft/server/packs/linkfs/LinkFSProvider$1
	m	(Lasy;)Ljava/nio/file/Path;	a	lambda$iterator$1
		p	0		child
	m	(Ljava/nio/file/DirectoryStream$Filter;Lasy;)Z	a	lambda$iterator$0
		p	1		child
	f	Latb$a;	a	val$directoryContents
	f	Ljava/nio/file/DirectoryStream$Filter;	b	val$filter
c	asz$2	net/minecraft/server/packs/linkfs/LinkFSProvider$2
	f	[I	a	$SwitchMap$java$nio$file$AccessMode
c	ata	net/minecraft/server/packs/linkfs/LinkFileSystem
	m	(Ljava/lang/String;Lata$b;)V	<init>	<init>
		p	1		name
		p	2		root
	m	()Ljava/nio/file/FileStore;	a	store
	m	(Lata$b;Lata;Ljava/lang/String;Lasy;)Lasy;	a	buildPath
		p	0		root
		p	1		fileSystem
		p	2		name
		p	3		parent
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lata;Lasy;Ljava/lang/String;Lata$b;)V	a	lambda$buildPath$1
		p	3		directoryName
		p	4		directory
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lata;Lasy;Ljava/lang/String;Ljava/nio/file/Path;)V	a	lambda$buildPath$0
		p	3		fileName
		p	4		path
	m	()Lasy;	b	rootPath
	m	()Lata$a;	c	builder
	f	Ljava/lang/String;	a	PATH_SEPARATOR
	f	Ljava/util/Set;	b	VIEWS
	f	Lcom/google/common/base/Splitter;	c	PATH_SPLITTER
	f	Ljava/nio/file/FileStore;	d	store
	f	Ljava/nio/file/spi/FileSystemProvider;	e	provider
	f	Lasy;	f	root
c	ata$a	net/minecraft/server/packs/linkfs/LinkFileSystem$a
	m	(Ljava/lang/String;)Ljava/nio/file/FileSystem;	a	build
		p	1		name
	m	(Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lata$a;	a	put
		p	1		directories
		p	2		name
		p	3		path
	m	(Ljava/util/List;Ljava/nio/file/Path;)Lata$a;	a	put
		p	1		directories
		p	2		path
	m	(Ljava/lang/String;)Lata$b;	b	lambda$put$0
		p	0		directory
	f	Lata$b;	a	root
c	ata$b	net/minecraft/server/packs/linkfs/LinkFileSystem$b
	m	()Ljava/util/Map;	a	children
	m	()Ljava/util/Map;	b	files
	f	Ljava/util/Map;	a	children
	f	Ljava/util/Map;	b	files
c	atb	net/minecraft/server/packs/linkfs/PathContents
	f	Latb;	a	MISSING
	f	Latb;	b	RELATIVE
c	atb$1	net/minecraft/server/packs/linkfs/PathContents$1
c	atb$2	net/minecraft/server/packs/linkfs/PathContents$2
c	atb$a	net/minecraft/server/packs/linkfs/PathContents$a
	m	()Ljava/util/Map;	a	children
	f	Ljava/util/Map;	c	children
c	atb$b	net/minecraft/server/packs/linkfs/PathContents$b
	m	()Ljava/nio/file/Path;	a	contents
	f	Ljava/nio/file/Path;	c	contents
c	atd	net/minecraft/server/packs/metadata/ResourcePackMetaParser
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
c	ate	net/minecraft/server/packs/metadata/MetadataSectionType
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Late;	a	fromCodec
		p	0		key
		p	1		codec
c	ate$1	net/minecraft/server/packs/metadata/MetadataSectionType$1
	m	()Ljava/lang/String;	a	getMetadataSectionName
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/Object;	a	fromJson
		p	1		json
	m	(Ljava/lang/Object;)Lcom/google/gson/JsonObject;	a	toJson
		p	1		metadata
	f	Ljava/lang/String;	a	val$name
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	atf	net/minecraft/server/packs/metadata/pack/ResourcePackInfo
	m	(Lwz;ILjava/util/Optional;)V	<init>	<init>
		p	1		description
		p	2		format
	m	()Lwz;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	packFormat
	m	()Ljava/util/Optional;	c	supportedFormats
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Late;	b	TYPE
	f	Lwz;	c	description
	f	I	d	packFormat
	f	Ljava/util/Optional;	e	supportedFormats
c	atj	net/minecraft/server/packs/repository/BuiltInPackSource
	m	(Lass;Lasu;Lakr;Lews;)V	<init>	<init>
		p	1		type
		p	2		resourcePack
		p	3		id
		p	4		symlinkFinder
	m	()Lasu;	a	getVanillaPack
	m	(Lasq;)Latm;	a	createVanillaPack
		p	1		pack
	m	(Latm$c;Ljava/lang/String;)Latm;	a	lambda$discoverPacksInPath$2
		p	2		id
	m	(Ljava/lang/String;)Lwz;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Latm$c;Lwz;)Latm;	a	createBuiltinPack
		p	1		fileName
		p	2		packFactory
		p	3		displayName
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	pathToId
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V	a	discoverPacksInPath
		p	1		namespacedPath
		p	2		consumer
	m	(Ljava/util/function/BiConsumer;)V	a	populatePackList
		p	1		consumer
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;)V	a	lambda$populatePackList$1
		p	2		namespacedPath
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;Latm$c;)V	a	lambda$discoverPacksInPath$3
		p	2		profilePath
		p	3		factory
	m	(Ljava/util/function/Consumer;)V	a	listBundledPacks
		p	1		consumer
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;)V	a	lambda$listBundledPacks$0
		p	1		id
		p	2		packFactory
	m	(Lasq;)Latm$c;	b	fixedResources
		p	0		pack
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
		p	1		profileAdder
	f	Ljava/lang/String;	a	VANILLA_ID
	f	Latl;	b	CORE_PACK_INFO
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lass;	d	packType
	f	Lasu;	e	vanillaPack
	f	Lakr;	f	packDir
	f	Lews;	g	validator
c	atj$1	net/minecraft/server/packs/repository/BuiltInPackSource$1
	m	(Lasp;)Lasq;	a	openPrimary
		p	1		info
	m	(Lasp;Latm$a;)Lasq;	a	openFull
		p	1		info
		p	2		metadata
	f	Lasq;	a	val$instance
c	atk	net/minecraft/server/packs/repository/ResourcePackSourceFolder
	m	(Ljava/nio/file/Path;Lass;Latq;Lews;)V	<init>	<init>
		p	1		packsDir
		p	2		type
		p	3		source
		p	4		symlinkFinder
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	nameFromPath
		p	0		path
	m	(Ljava/nio/file/Path;Lews;Ljava/util/function/BiConsumer;)V	a	discoverPacks
		p	0		path
		p	1		symlinkFinder
		p	2		callback
	m	(Ljava/util/function/Consumer;Ljava/nio/file/Path;Latm$c;)V	a	lambda$loadPacks$0
		p	2		path
		p	3		packFactory
	m	(Ljava/nio/file/Path;)Lasp;	b	createDiscoveredFilePackInfo
		p	1		path
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
		p	1		profileAdder
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lasr;	b	DISCOVERED_PACK_SELECTION_CONFIG
	f	Ljava/nio/file/Path;	c	folder
	f	Lass;	d	packType
	f	Latq;	e	packSource
	f	Lews;	f	validator
c	atk$a	net/minecraft/server/packs/repository/ResourcePackSourceFolder$a
	m	(Lews;)V	<init>	<init>
		p	1		symlinkFinder
	m	(Ljava/nio/file/Path;)Latm$c;	a	createZipPack
	m	(Ljava/nio/file/Path;)Latm$c;	b	createDirectoryPack
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
		p	1		path
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
		p	1		path
c	atl	net/minecraft/server/packs/repository/KnownPack
	m	()Z	a	isVanilla
	m	(Ljava/lang/String;)Latl;	a	vanilla
		p	0		path
	m	()Ljava/lang/String;	b	namespace
	m	()Ljava/lang/String;	c	id
	m	()Ljava/lang/String;	d	version
	f	Lyx;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	VANILLA_NAMESPACE
	f	Ljava/lang/String;	c	namespace
	f	Ljava/lang/String;	d	id
	f	Ljava/lang/String;	e	version
c	atm	net/minecraft/server/packs/repository/ResourcePackLoader
	m	(Lasp;Latm$c;Latm$a;Lasr;)V	<init>	<init>
		p	1		info
		p	2		packFactory
		p	3		metaData
		p	4		position
	m	()Lasp;	a	location
	m	(Lasp;Latm$c;I)Latm$a;	a	readPackMetadata
		p	0		info
		p	1		packFactory
		p	2		currentPackFormat
	m	(Lasp;Latm$c;Lass;Lasr;)Latm;	a	readMetaAndCreate
		p	0		info
		p	1		packFactory
		p	2		type
		p	3		position
	m	(Ljava/lang/String;Latf;)Layg;	a	getDeclaredPackVersions
		p	0		packId
		p	1		metadata
	m	(Z)Lwz;	a	getChatLink
		p	1		enabled
	m	()Lwz;	b	getTitle
	m	()Lwz;	c	getDescription
	m	()Latn;	d	getCompatibility
	m	()Lcpl;	e	getRequestedFeatures
	m	()Lasq;	f	open
	m	()Ljava/lang/String;	g	getId
	m	()Lasr;	h	selectionConfig
	m	()Z	i	isRequired
	m	()Z	j	isFixedPosition
	m	()Latm$b;	k	getDefaultPosition
	m	()Latq;	l	getPackSource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lasp;	b	location
	f	Latm$c;	c	resources
	f	Latm$a;	d	metadata
	f	Lasr;	e	selectionConfig
c	atm$a	net/minecraft/server/packs/repository/ResourcePackLoader$a
	m	()Lwz;	a	description
	m	()Latn;	b	compatibility
	m	()Lcpl;	c	requestedFeatures
	m	()Ljava/util/List;	d	overlays
	f	Lwz;	a	description
	f	Latn;	b	compatibility
	f	Lcpl;	c	requestedFeatures
	f	Ljava/util/List;	d	overlays
c	atm$b	net/minecraft/server/packs/repository/ResourcePackLoader$Position
	m	()Latm$b;	a	opposite
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
		p	1		items
		p	2		item
		p	3		profileGetter
		p	4		listInverted
	m	()[Latm$b;	b	$values
	f	Latm$b;	a	TOP
	f	Latm$b;	b	BOTTOM
	f	[Latm$b;	c	$VALUES
c	atm$c	net/minecraft/server/packs/repository/ResourcePackLoader$c
	m	(Lasp;)Lasq;	a	openPrimary
		p	1		info
	m	(Lasp;Latm$a;)Lasq;	a	openFull
		p	1		info
		p	2		metadata
c	atn	net/minecraft/server/packs/repository/EnumResourcePackVersion
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		translationSuffix
	m	()Z	a	isCompatible
	m	(Layg;I)Latn;	a	forVersion
		p	0		range
		p	1		current
	m	()Lwz;	b	getDescription
	m	()Lwz;	c	getConfirmation
	m	()[Latn;	d	$values
	f	Latn;	a	TOO_OLD
	f	Latn;	b	TOO_NEW
	f	Latn;	c	COMPATIBLE
	f	Lwz;	d	description
	f	Lwz;	e	confirmation
	f	[Latn;	f	$VALUES
c	ato	net/minecraft/server/packs/repository/PackDetector
	m	(Lews;)V	<init>	<init>
		p	1		symlinkFinder
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/Object;	a	detectPackResources
		p	1		path
		p	2		foundSymlinks
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
		p	1		path
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
		p	1		path
	f	Lews;	a	validator
c	atp	net/minecraft/server/packs/repository/ResourcePackRepository
	m	([Latr;)V	<init>	<init>
		p	1		providers
	m	()V	a	reload
	m	(Latm;)Ljava/lang/String;	a	lambda$displayPackList$0
		p	0		profile
	m	(Ljava/lang/String;)Z	a	addPack
		p	1		profile
	m	(Ljava/util/Collection;)Ljava/lang/String;	a	displayPackList
		p	0		profiles
	m	(Ljava/util/Map;Latm;)V	a	lambda$discoverAvailable$1
		p	1		profile
	m	()Ljava/util/Collection;	b	getAvailableIds
	m	(Ljava/lang/String;)Z	b	removePack
		p	1		profile
	m	(Ljava/util/Collection;)V	b	setSelected
		p	1		enabled
	m	()Ljava/util/Collection;	c	getAvailablePacks
	m	(Ljava/lang/String;)Latm;	c	getPack
		p	1		id
	m	(Ljava/util/Collection;)Ljava/util/List;	c	rebuildSelected
		p	1		enabledNames
	m	()Ljava/util/Collection;	d	getSelectedIds
	m	(Ljava/lang/String;)Z	d	isAvailable
		p	1		id
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	d	getAvailablePacks
		p	1		ids
	m	()Lcpl;	e	getRequestedFeatureFlags
	m	()Ljava/util/Collection;	f	getSelectedPacks
	m	()Ljava/util/List;	g	openAllSelected
	m	()Ljava/util/Map;	h	discoverAvailable
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
c	atq	net/minecraft/server/packs/repository/PackSource
	m	()Z	a	shouldAddAutomatically
	m	(Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	decorateWithSource
		p	0		translationKey
	m	(Ljava/util/function/UnaryOperator;Z)Latq;	a	create
		p	0		sourceTextSupplier
		p	1		canBeEnabledLater
	m	(Lwz;)Lwz;	a	decorate
		p	1		packDisplayName
	m	(Lwz;Lwz;)Lwz;	a	lambda$decorateWithSource$0
		p	1		name
	f	Ljava/util/function/UnaryOperator;	a	NO_DECORATION
	f	Latq;	b	DEFAULT
	f	Latq;	c	BUILT_IN
	f	Latq;	d	FEATURE
	f	Latq;	e	WORLD
	f	Latq;	f	SERVER
c	atq$1	net/minecraft/server/packs/repository/PackSource$1
	m	()Z	a	shouldAddAutomatically
	m	(Lwz;)Lwz;	a	decorate
		p	1		packDisplayName
	f	Ljava/util/function/UnaryOperator;	g	val$decorator
	f	Z	h	val$addAutomatically
c	atr	net/minecraft/server/packs/repository/ResourcePackSource
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
		p	1		profileAdder
c	ats	net/minecraft/server/packs/repository/ResourcePackSourceVanilla
	m	(Lews;)V	<init>	<init>
		p	1		symlinkFinder
	m	(Lasq;)Latm;	a	createVanillaPack
		p	1		pack
	m	(Lerf$c;)Latp;	a	createPackRepository
		p	0		session
	m	(Ljava/lang/String;)Lwz;	a	getPackTitle
		p	1		id
	m	(Ljava/lang/String;Latm$c;Lwz;)Latm;	a	createBuiltinPack
		p	1		fileName
		p	2		packFactory
		p	3		displayName
	m	(Ljava/lang/String;Lwz;)Lasp;	a	createBuiltInPackLocation
		p	0		id
		p	1		title
	m	(Ljava/nio/file/Path;)Z	a	lambda$createVanillaTrustedRepository$0
		p	0		path
	m	(Ljava/nio/file/Path;Lews;)Latp;	a	createPackRepository
		p	0		dataPacksPath
		p	1		symlinkFinder
	m	()Lasu;	b	createVanillaPackSource
	m	()Latp;	c	createVanillaTrustedRepository
	f	Latf;	c	VERSION_METADATA_SECTION
	f	Lasm;	d	FEATURE_FLAGS_METADATA_SECTION
	f	Lasi;	e	BUILT_IN_METADATA
	f	Lasp;	f	VANILLA_PACK_INFO
	f	Lasr;	g	VANILLA_SELECTION_CONFIG
	f	Lasr;	h	FEATURE_SELECTION_CONFIG
	f	Lakr;	i	PACKS_DIR
c	atu	net/minecraft/server/packs/resources/IReloadableResourceManager
c	atv	net/minecraft/server/packs/resources/ResourceManagerFallback
	m	(Lass;Ljava/lang/String;)V	<init>	<init>
		p	1		type
		p	2		namespace
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lakr;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lakr;I)Latw;	a	createStackMetadataFinder
		p	1		id
		p	2		index
	m	(Lakr;Lasq;Latw;)Latw;	a	wrapForDebug
		p	0		id
		p	1		pack
		p	2		supplier
	m	(Lasq;)V	a	push
		p	1		pack
	m	(Lasq;Lakr;)Laug;	a	lambda$getResourceStack$1
	m	(Lasq;Lakr;Latw;Latw;)Lauc;	a	createResource
		p	0		pack
		p	1		id
		p	2		supplier
		p	3		metadataSupplier
	m	(Lasq;Ljava/util/function/Predicate;)V	a	push
		p	1		pack
		p	2		filter
	m	(Latv$d;)Lasq;	a	lambda$listPacks$7
		p	0		pack
	m	(Latv$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V	a	listPackResources
		p	1		pack
		p	2		startingPath
		p	3		allowedPathPredicate
		p	4		idToEntryList
	m	(Latv$d;Ljava/util/Map;)V	a	applyPackFiltersToExistingResources
		p	0		pack
		p	1		idToEntryList
	m	(Latw;)Latw;	a	convertToMetadata
		p	0		supplier
	m	(Latw;Lakr;Lasq;)Ljava/io/InputStream;	a	lambda$wrapForDebug$0
	m	(Ljava/lang/String;Lasq;Ljava/util/function/Predicate;)V	a	pushInternal
		p	1		id
		p	2		underlyingPack
		p	3		filter
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)V	a	pushFilterOnly
		p	1		id
		p	2		filter
	m	(Ljava/util/Map;Ljava/util/Map;Lakr;Latv$a;)V	a	lambda$listResources$3
		p	2		id
		p	3		result
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lasq;ILjava/util/Map;Lakr;Latw;)V	a	lambda$listResources$2
		p	5		id
		p	6		supplier
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lasq;Lakr;Latw;)V	a	lambda$listPackResources$6
		p	3		id
		p	4		supplier
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Lakr;)Z	b	isMetadata
		p	0		id
	m	(Lakr;I)Laug;	b	lambda$createStackMetadataFinder$4
	m	(Latw;)Laug;	b	parseMetadata
		p	0		supplier
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Lakr;)Lakr;	c	getResourceLocationFromMetadata
		p	0		id
	m	(Latw;)Laug;	c	lambda$convertToMetadata$5
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Lakr;)Lakr;	d	getMetadataLocation
		p	0		id
	m	(Lakr;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Ljava/util/List;	a	fallbacks
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lass;	d	type
	f	Ljava/lang/String;	e	namespace
c	atv$a	net/minecraft/server/packs/resources/ResourceManagerFallback$a
	m	()Lasq;	a	packResources
	m	()Latw;	b	resource
	m	()I	c	packIndex
	f	Lasq;	a	packResources
	f	Latw;	b	resource
	f	I	c	packIndex
c	atv$b	net/minecraft/server/packs/resources/ResourceManagerFallback$b
	m	(Lakr;)V	<init>	<init>
		p	1		id
	m	()Lakr;	a	fileLocation
	m	()Lakr;	b	metadataLocation
	m	()Ljava/util/List;	c	fileSources
	m	()Ljava/util/Map;	d	metaSources
	f	Lakr;	a	fileLocation
	f	Lakr;	b	metadataLocation
	f	Ljava/util/List;	c	fileSources
	f	Ljava/util/Map;	d	metaSources
c	atv$c	net/minecraft/server/packs/resources/ResourceManagerFallback$c
	m	(Ljava/io/InputStream;Lakr;Ljava/lang/String;)V	<init>	<init>
		p	1		parent
		p	2		id
		p	3		packId
	m	(Ljava/lang/Exception;Lakr;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/function/Supplier;	a	message
	f	Z	b	closed
c	atv$d	net/minecraft/server/packs/resources/ResourceManagerFallback$d
	m	()Ljava/lang/String;	a	name
	m	(Lakr;)Z	a	isFiltered
		p	1		id
	m	(Ljava/util/Collection;)V	a	filterAll
		p	1		ids
	m	()Lasq;	b	resources
	m	()Ljava/util/function/Predicate;	c	filter
	f	Ljava/lang/String;	a	name
	f	Lasq;	b	resources
	f	Ljava/util/function/Predicate;	c	filter
c	atv$e	net/minecraft/server/packs/resources/ResourceManagerFallback$e
	m	()Lasq;	a	source
	m	()Latw;	b	resource
	f	Lasq;	a	source
	f	Latw;	b	resource
c	atw	net/minecraft/server/packs/resources/IoSupplier
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	a	lambda$create$0
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;	a	lambda$create$1
	m	(Ljava/nio/file/Path;)Latw;	create	create
		p	0		path
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Latw;	create	create
		p	0		zipFile
		p	1		zipEntry
c	atx	net/minecraft/server/packs/resources/ResourceManager
	m	(Lass;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		packs
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lakr;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Lasq;)Laud;	a	getPackFilterSection
		p	1		pack
	m	(Lass;Lasq;)Ljava/util/stream/Stream;	a	lambda$new$0
		p	1		pack
	m	(Laud;Lakr;)Z	a	lambda$new$1
		p	1		id
	m	(Ljava/lang/String;)V	a	checkTrailingDirectoryPath
		p	0		startingPath
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Lakr;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	c	namespacedManagers
	f	Ljava/util/List;	d	packs
c	aty	net/minecraft/server/packs/resources/IReloadListener
	m	(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	()Ljava/lang/String;	c	getName
c	aty$a	net/minecraft/server/packs/resources/IReloadListener$a
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
c	atz	net/minecraft/server/packs/resources/ReloadableProfiled
	m	(Laue;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		manager
		p	2		reloaders
		p	3		prepareExecutor
		p	4		applyExecutor
		p	5		initialStage
	m	(Laty;Lbmy;Lbmy;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Latz$a;	a	lambda$new$6
		p	5		dummy
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$new$4
	m	(Ljava/util/List;)Ljava/util/List;	a	finish
		p	1		summaries
	m	(Ljava/util/concurrent/Executor;Laty$a;Laue;Laty;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$new$7
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$new$5
		p	2		application
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;)V	b	lambda$new$2
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	b	lambda$new$3
		p	2		preparation
	m	()I	e	lambda$new$1
	m	()I	f	lambda$new$0
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Stopwatch;	d	total
c	atz$a	net/minecraft/server/packs/resources/ReloadableProfiled$a
	m	(Ljava/lang/String;Lbne;Lbne;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
		p	1		name
		p	2		prepareProfile
		p	3		applyProfile
		p	4		prepareTimeMs
		p	5		applyTimeMs
	f	Ljava/lang/String;	a	name
	f	Lbne;	b	preparationResult
	f	Lbne;	c	reloadResult
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadNanos
c	aua	net/minecraft/server/packs/resources/IReloadable
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	aub	aub
	m	(Lass;)V	<init>	<init>
		p	1		type
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lakr;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	(Laty;)V	a	registerReloadListener
		p	1		reloader
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Laua;	a	createReload
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		initialStage
		p	4		packs
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Lakr;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Latu;	c	resources
	f	Ljava/util/List;	d	listeners
	f	Lass;	e	type
c	auc	net/minecraft/server/packs/resources/IResource
	m	(Lasq;Latw;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
	m	(Lasq;Latw;Latw;)V	<init>	<init>
		p	1		pack
		p	2		inputSupplier
		p	3		metadataSupplier
	m	()Lasq;	a	source
	m	()Ljava/lang/String;	b	sourcePackId
	m	()Ljava/util/Optional;	c	knownPackInfo
	m	()Ljava/io/InputStream;	d	open
	m	()Ljava/io/BufferedReader;	e	openAsReader
	m	()Laug;	f	metadata
	f	Lasq;	a	source
	f	Latw;	b	streamSupplier
	f	Latw;	c	metadataSupplier
	f	Laug;	d	cachedMetadata
c	aud	net/minecraft/server/packs/resources/ResourceFilterSection
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	(Laud;)Ljava/util/List;	a	lambda$static$0
		p	0		filter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/lang/String;)Z	a	isNamespaceFiltered
		p	1		namespace
	m	(Ljava/lang/String;Layx;)Z	a	lambda$isPathFiltered$3
		p	1		block
	m	(Ljava/lang/String;)Z	b	isPathFiltered
		p	1		namespace
	m	(Ljava/lang/String;Layx;)Z	b	lambda$isNamespaceFiltered$2
		p	1		block
	f	Late;	a	TYPE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	blockList
c	aue	net/minecraft/server/packs/resources/IResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lakr;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
c	aue$a	net/minecraft/server/packs/resources/IResourceManager$Empty
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lakr;)Ljava/util/List;	a	getResourceStack
		p	1		id
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
		p	1		startingPath
		p	2		allowedPathPredicate
	m	()[Laue$a;	c	$values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
		p	1		startingPath
		p	2		allowedPathPredicate
	m	(Lakr;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	f	Laue$a;	a	INSTANCE
	f	[Laue$a;	c	$VALUES
c	auf	auf
	m	(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Laue;)V	a	onResourceManagerReload
		p	1		manager
	m	(Lbnf;Laue;)V	a	lambda$reload$0
c	aug	net/minecraft/server/packs/resources/ResourceMetadata
	m	()Laug;	a	lambda$static$0
	m	(Latd;)Ljava/util/Optional;	a	getSection
		p	1		reader
	m	(Laug$a;Latd;)V	a	copySection
		p	1		builder
		p	2		reader
	m	(Laug$a;Latd;Ljava/lang/Object;)V	a	lambda$copySection$1
		p	2		value
	m	(Ljava/io/InputStream;)Laug;	a	fromJsonStream
		p	0		stream
	m	(Ljava/util/Collection;)Laug;	a	copySections
		p	1		readers
	f	Laug;	a	EMPTY
	f	Latw;	b	EMPTY_SUPPLIER
c	aug$1	net/minecraft/server/packs/resources/ResourceMetadata$1
	m	(Latd;)Ljava/util/Optional;	a	getSection
		p	1		reader
c	aug$2	net/minecraft/server/packs/resources/ResourceMetadata$2
	m	(Latd;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/gson/JsonObject;	c	val$metadata
c	aug$a	net/minecraft/server/packs/resources/ResourceMetadata$a
	m	()Laug;	a	build
	m	(Latd;Ljava/lang/Object;)Laug$a;	a	put
		p	1		reader
		p	2		value
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	map
c	aug$a$1	net/minecraft/server/packs/resources/ResourceMetadata$a$1
	m	(Latd;)Ljava/util/Optional;	a	getSection
		p	1		reader
	f	Lcom/google/common/collect/ImmutableMap;	c	val$map
c	auh	net/minecraft/server/packs/resources/ResourceProvider
	m	(Ljava/util/Map;Lakr;)Ljava/util/Optional;	a	lambda$fromMap$2
		p	1		id
	m	(Lakr;)Ljava/io/FileNotFoundException;	b	lambda$getResourceOrThrow$1
	m	(Lakr;)Ljava/util/Optional;	c	lambda$static$0
		p	0		id
	m	(Ljava/util/Map;)Lauh;	fromMap	fromMap
		p	0		map
	m	(Lakr;)Ljava/util/Optional;	getResource	getResource
		p	1		id
	m	(Lakr;)Lauc;	getResourceOrThrow	getResourceOrThrow
		p	1		id
	m	(Lakr;)Ljava/io/InputStream;	open	open
		p	1		id
	m	(Lakr;)Ljava/io/BufferedReader;	openAsReader	openAsReader
		p	1		id
	f	Lauh;	b	EMPTY
c	aui	net/minecraft/server/packs/resources/ResourceDataJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;)V	<init>	<init>
		p	1		gson
		p	2		dataType
	m	(Laue;Lbnf;)Ljava/util/Map;	a	prepare
	m	(Laue;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V	a	scanDirectory
		p	0		manager
		p	1		dataType
		p	2		gson
		p	3		results
	m	(Laue;Lbnf;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	gson
	f	Ljava/lang/String;	c	directory
c	auj	net/minecraft/server/packs/resources/ResourceDataAbstract
	m	(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Laue;Lbnf;)Ljava/lang/Object;	a	lambda$reload$0
	m	(Laue;Lbnf;Ljava/lang/Object;)V	a	lambda$reload$1
		p	3		prepared
	m	(Ljava/lang/Object;Laue;Lbnf;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Laue;Lbnf;)Ljava/lang/Object;	b	prepare
		p	1		manager
		p	2		profiler
c	auk	net/minecraft/server/packs/resources/Reloadable
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Laue;Ljava/util/List;Lauk$a;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
		p	1		prepareExecutor
		p	2		applyExecutor
		p	3		manager
		p	4		reloaders
		p	5		factory
		p	6		initialStage
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	(Laue;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lauk;	a	of
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
	m	(Laue;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Laua;	a	create
		p	0		manager
		p	1		reloaders
		p	2		prepareExecutor
		p	3		applyExecutor
		p	4		initialStage
		p	5		profiled
	m	(Ljava/lang/Runnable;)V	a	lambda$new$3
	m	(Ljava/util/concurrent/Executor;Laty$a;Laue;Laty;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$0
		p	1		synchronizer
		p	2		resourceManager
		p	3		reloader
		p	4		prepare
		p	5		apply
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$new$4
		p	2		application
	m	()F	b	getActualProgress
	m	(Ljava/lang/Runnable;)V	b	lambda$new$1
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$new$2
		p	2		preparation
	f	Ljava/util/concurrent/CompletableFuture;	a	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	b	allDone
	f	I	c	PREPARATION_PROGRESS_WEIGHT
	f	I	d	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	e	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	I	h	startedReloads
	f	I	i	finishedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedTaskCounter
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	doneTaskCounter
c	auk$1	net/minecraft/server/packs/resources/Reloadable$1
	m	(Laty;)V	a	lambda$wait$0
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	wait
		p	1		preparedObject
	m	(Ljava/lang/Object;Lazs;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Laty;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousTask
	f	Lauk;	d	this$0
c	auk$a	net/minecraft/server/packs/resources/Reloadable$a
	m	(Laty$a;Laue;Laty;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
		p	1		synchronizer
		p	2		manager
		p	3		reloader
		p	4		prepareExecutor
		p	5		applyExecutor
c	aum	net/minecraft/server/players/ExpirableListEntry
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		key
		p	2		json
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		key
		p	2		creationDate
		p	3		source
		p	4		expiryDate
		p	5		reason
	m	()Ljava/util/Date;	a	getCreated
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Lwz;	e	getDisplayName
	m	()Z	f	hasExpired
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
c	aun	net/minecraft/server/players/UserCache
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
		p	1		profileRepository
		p	2		cacheFile
	m	()V	a	clearExecutor
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
		p	1		limit
	m	(Laun$a;)V	a	safeAdd
		p	1		entry
	m	(Laun$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
		p	0		entry
		p	1		dateFormat
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Laun$a;)V	a	lambda$save$3
		p	2		entry
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
		p	0		json
		p	1		dateFormat
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
		p	0		repository
		p	1		name
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$1
		p	2		profile
		p	3		throwable
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$2
		p	2		json
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
		p	1		uuid
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
		p	1		executor
	m	(Z)V	a	setUsesAuthentication
		p	0		value
	m	()Ljava/util/List;	b	load
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	getAsync
		p	1		username
	m	()V	c	save
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	createUnknownProfile
		p	0		name
	m	()Z	d	usesAuthentication
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$getAsync$0
	m	()J	e	getNextOperation
	m	()Ljava/text/DateFormat;	f	createDateFormat
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
c	aun$1	net/minecraft/server/players/UserCache$1
	f	Ljava/util/concurrent/atomic/AtomicReference;	a	val$result
c	aun$a	net/minecraft/server/players/UserCache$UserCacheEntry
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
		p	1		profile
		p	2		expirationDate
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	(J)V	a	setLastAccess
		p	1		lastAccessed
	m	()Ljava/util/Date;	b	getExpirationDate
	m	()J	c	getLastAccess
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
c	auo	net/minecraft/server/players/IpBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	(Lcom/google/gson/JsonObject;)Lauv;	a	createEntry
		p	1		json
	m	(Ljava/lang/String;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
		p	1		ip
	m	(Ljava/net/SocketAddress;)Laup;	b	get
		p	1		address
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
		p	1		address
c	aup	net/minecraft/server/players/IpBanEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		ip
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		ip
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
		p	0		json
	m	()Lwz;	e	getDisplayName
c	auq	net/minecraft/server/players/NameReferencingFileConverter
	m	()Z	a	areOldUserlistsRemoved
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Lapn;)Z	a	convertPlayers
		p	0		minecraftServer
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
		p	0		directory
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
		p	0		file
		p	1		valueMap
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
		p	0		playerName
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
		p	0		dateString
		p	1		fallback
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
		p	0		server
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
		p	0		server
		p	1		bannedPlayers
		p	2		callback
	m	(Ljava/io/File;)V	b	renameOldFile
		p	0		file
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
		p	0		server
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
		p	0		server
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	f	Lorg/slf4j/Logger;	e	LOGGER
c	auq$1	net/minecraft/server/players/NameReferencingFileConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Lauy;	c	val$bans
c	auq$2	net/minecraft/server/players/NameReferencingFileConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Laus;	b	val$opsList
c	auq$3	net/minecraft/server/players/NameReferencingFileConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Lava;	b	val$whitelist
c	auq$4	net/minecraft/server/players/NameReferencingFileConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
c	auq$5	net/minecraft/server/players/NameReferencingFileConverter$5
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
		p	1		playerDataFolder
		p	2		fileName
		p	3		uuid
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFileNameForProfile
	f	Lapn;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
c	auq$a	net/minecraft/server/players/NameReferencingFileConverter$FileConversionException
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
		p	1		message
		p	2		cause
c	aur	net/minecraft/server/players/PlayerList
	m	(Lnet/minecraft/server/MinecraftServer;Ljt;Leri;I)V	<init>	<init>
		p	1		server
		p	2		registryManager
		p	3		saveHandler
		p	4		maxPlayers
	m	()V	a	reloadWhiteList
	m	(I)V	a	setViewDistance
		p	1		viewDistance
	m	(Lalk;Laqv;)V	a	updateEntireScoreboard
		p	1		scoreboard
		p	2		player
	m	(Laqu;)V	a	addWorldborderListener
		p	1		world
	m	(Laqu;Lbsr;)Lbsr;	a	lambda$placeNewPlayer$1
		p	1		vehicle
	m	(Laqv;)Ljava/util/Optional;	a	load
		p	1		player
	m	(Laqv;I)V	a	sendPlayerPermissionLevel
		p	1		player
		p	2		permissionLevel
	m	(Laqv;Laqu;)V	a	sendLevelInfo
		p	1		player
		p	2		world
	m	(Laqv;ZLbsr$c;)Laqv;	a	respawn
		p	1		player
		p	2		alive
		p	3		removalReason
	m	(Lbsr;)V	a	lambda$remove$2
		p	0		entity
	m	(Lbtn;Laru;)V	a	sendActiveEffects
		p	1		entity
		p	2		networkHandler
	m	(Lcmx;)Lavv;	a	getPlayerStats
		p	1		player
	m	(Lcmx;DDDDLakq;Lzg;)V	a	broadcast
		p	1		player
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
		p	10		worldKey
		p	11		packet
	m	(Lcmx;Lwz;)V	a	broadcastSystemToTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Laqh;)Laqv;	a	getPlayerForLogin
		p	1		profile
		p	2		syncedOptions
	m	(Ljava/lang/String;)Laqv;	a	getPlayerByName
		p	1		name
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lwz;	a	canPlayerLogin
		p	1		address
		p	2		profile
	m	(Ljava/util/UUID;)Laqv;	a	getPlayer
		p	1		uuid
	m	(Lub;)Ljava/util/Optional;	a	lambda$placeNewPlayer$0
		p	0		nbt
	m	(Lvt;Laqv;Larj;)V	a	placeNewPlayer
		p	1		connection
		p	2		player
		p	3		clientData
	m	(Lwz;Laqv;)Lwz;	a	lambda$broadcastSystemMessage$3
		p	1		player
	m	(Lwz;Ljava/util/function/Function;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		playerMessageFactory
		p	3		overlay
	m	(Lwz;Z)V	a	broadcastSystemMessage
		p	1		message
		p	2		overlay
	m	(Lxp;)Z	a	verifyChatTrusted
		p	1		message
	m	(Lxp;Laqv;Lwv$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		sender
		p	3		params
	m	(Lxp;Let;Lwv$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		source
		p	3		params
	m	(Lxp;Ljava/util/function/Predicate;Laqv;Lwv$a;)V	a	broadcastChatMessage
		p	1		message
		p	2		shouldSendFiltered
		p	3		sender
		p	4		params
	m	(Lzg;)V	a	broadcastAll
		p	1		packet
	m	(Lzg;Lakq;)V	a	broadcastAll
		p	1		packet
		p	2		dimension
	m	(Z)V	a	setUsingWhiteList
		p	1		whitelistEnabled
	m	(I)V	b	setSimulationDistance
		p	1		simulationDistance
	m	(Laqv;)V	b	save
		p	1		player
	m	(Lcmx;Lwz;)V	b	broadcastSystemToAllExceptTeam
		p	1		source
		p	2		message
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
		p	1		profile
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
		p	1		ip
	m	(Z)V	b	setAllowCommandsForAllPlayers
		p	1		cheatsAllowed
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	(Laqv;)V	c	remove
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
		p	1		profile
	m	()V	d	tick
	m	(Laqv;)V	d	sendActivePlayerEffects
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
		p	1		profile
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	(Laqv;)V	e	sendPlayerPermissionLevel
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	disconnectAllPlayersWithProfile
		p	1		profile
	m	()Lauy;	f	getBans
	m	(Laqv;)V	f	sendAllPlayerInfo
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	isOp
		p	1		profile
	m	()Lauo;	g	getIpBans
	m	(Laqv;)Lakz;	g	getPlayerAdvancements
		p	1		player
	m	()V	h	saveAll
	m	()Lava;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Laus;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lub;	r	getSingleplayerData
	m	()V	s	removeAll
	m	()Ljava/util/List;	t	getPlayers
	m	()V	u	reloadResources
	m	()Z	v	isAllowCommandsForAllPlayers
	f	I	A	sendAllPlayerInfoIn
	f	Ljava/io/File;	a	USERBANLIST_FILE
	f	Ljava/io/File;	b	IPBANLIST_FILE
	f	Ljava/io/File;	c	OPLIST_FILE
	f	Ljava/io/File;	d	WHITELIST_FILE
	f	Lwz;	e	CHAT_FILTERED_FULL
	f	Lwz;	f	DUPLICATE_LOGIN_DISCONNECT_MESSAGE
	f	I	g	maxPlayers
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	I	i	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	j	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	k	server
	f	Ljava/util/List;	l	players
	f	Ljava/util/Map;	m	playersByUUID
	f	Lauy;	n	bans
	f	Lauo;	o	ipBans
	f	Laus;	p	ops
	f	Lava;	q	whitelist
	f	Ljava/util/Map;	r	stats
	f	Ljava/util/Map;	s	advancements
	f	Leri;	t	playerIo
	f	Z	u	doWhiteList
	f	Ljt;	v	registries
	f	I	w	viewDistance
	f	I	x	simulationDistance
	f	Z	y	allowCommandsForAllPlayers
	f	Z	z	ALLOW_LOGOUTIVATOR
c	aur$1	net/minecraft/server/players/PlayerList$1
	m	(Ldut;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldut;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldut;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldut;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldut;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldut;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldut;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Laur;	a	this$0
c	aus	net/minecraft/server/players/OpList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lauv;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	aut	net/minecraft/server/players/OpListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
		p	1		profile
		p	2		permissionLevel
		p	3		bypassPlayerLimit
	m	()I	a	getLevel
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
c	auu	net/minecraft/server/players/SleepStatus
	m	()V	a	removeAllSleepers
	m	(I)Z	a	areEnoughSleeping
		p	1		percentage
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
		p	1		percentage
		p	2		players
	m	(Ljava/util/List;)Z	a	update
		p	1		players
	m	()I	b	amountSleeping
	m	(I)I	b	sleepersNeeded
		p	1		percentage
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
c	auv	net/minecraft/server/players/JsonListEntry
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		key
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	()Z	f	hasExpired
	m	()Ljava/lang/Object;	g	getUser
	f	Ljava/lang/Object;	a	user
c	auw	net/minecraft/server/players/JsonList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lauv;)V	a	add
		p	1		entry
	m	(Lcom/google/gson/JsonObject;)Lauv;	a	createEntry
		p	1		json
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	()Ljava/io/File;	b	getFile
	m	(Lauv;)V	b	remove
		p	1		entry
	m	(Ljava/lang/Object;)Lauv;	b	get
		p	1		key
	m	()Z	c	isEmpty
	m	(Lauv;)Lcom/google/gson/JsonObject;	c	lambda$save$0
		p	0		entry
	m	(Ljava/lang/Object;)V	c	remove
		p	1		key
	m	()Ljava/util/Collection;	d	getEntries
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	e	save
	m	()V	f	load
	m	()V	g	removeExpired
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
c	auy	net/minecraft/server/players/GameProfileBanList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lauv;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	auz	net/minecraft/server/players/GameProfileBanEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
		p	1		profile
		p	2		created
		p	3		source
		p	4		expiry
		p	5		reason
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
	m	()Lwz;	e	getDisplayName
c	ava	net/minecraft/server/players/WhiteList
	m	(Ljava/io/File;)V	<init>	<init>
		p	1		file
	m	()[Ljava/lang/String;	a	getUserList
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
	m	(Lcom/google/gson/JsonObject;)Lauv;	a	createEntry
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
		p	1		profile
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
		p	1		profile
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
c	avb	net/minecraft/server/players/WhiteListEntry
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
		p	1		json
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		profile
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
		p	1		json
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
		p	0		json
c	avd	net/minecraft/server/rcon/RemoteStatusReply
	m	(I)V	<init>	<init>
		p	1		size
	m	()[B	a	toByteArray
	m	(F)V	a	writeFloat
		p	1		value
	m	(I)V	a	write
		p	1		value
	m	(Ljava/lang/String;)V	a	writeString
		p	1		value
	m	(S)V	a	writeShort
		p	1		value
	m	([B)V	a	writeBytes
		p	1		values
	m	()V	b	reset
	m	(I)V	b	writeInt
		p	1		value
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
c	ave	net/minecraft/server/rcon/StatusChallengeUtils
	m	(B)Ljava/lang/String;	a	toHexString
		p	0		b
	m	([BI)I	a	intFromByteArray
		p	0		buf
		p	1		start
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
		p	0		buf
	m	([BII)I	b	intFromByteArray
		p	0		buf
		p	1		start
		p	2		limit
	m	([BII)I	c	intFromNetworkByteArray
		p	0		buf
		p	1		start
		p	2		limit
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
c	avf	net/minecraft/server/rcon/RemoteControlCommandListener
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()Z	M_	shouldInformAdmins
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Let;	g	createCommandSourceStack
	m	()Z	k_	acceptsSuccess
	m	()Z	w_	acceptsFailure
	f	Ljava/lang/String;	b	RCON
	f	Lwz;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
c	avh	net/minecraft/server/rcon/thread/RemoteConnectionThread
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		description
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
c	avi	net/minecraft/server/rcon/thread/RemoteStatusListener
	m	(Lali;I)V	<init>	<init>
		p	1		server
		p	2		queryPort
	m	()Z	a	start
	m	(JLavi$a;)Z	a	lambda$pruneChallenges$0
		p	2		query
	m	(Lali;)Lavi;	a	create
		p	0		server
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
		p	1		e
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
		p	1		packet
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
		p	1		address
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
		p	1		buf
		p	2		packet
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
		p	1		packet
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
		p	1		packet
	m	()V	d	pruneChallenges
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
		p	1		packet
	m	()Z	e	initSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Lavd;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Lali;	v	serverInterface
c	avi$a	net/minecraft/server/rcon/thread/RemoteStatusListener$RemoteStatusChallenge
	m	(Ljava/net/DatagramPacket;)V	<init>	<init>
		p	1		packet
	m	()I	a	getChallenge
	m	(J)Ljava/lang/Boolean;	a	before
		p	1		lastQueryTime
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
c	avj	net/minecraft/server/rcon/thread/RemoteControlSession
	m	(Lali;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
		p	1		server
		p	2		password
		p	3		socket
	m	(IILjava/lang/String;)V	a	send
		p	1		sessionToken
		p	2		responseType
		p	3		message
	m	(ILjava/lang/String;)V	a	sendCmdResponse
		p	1		sessionToken
		p	2		message
	m	()V	b	stop
	m	()V	d	sendAuthFailure
	m	()V	e	closeSocket
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Lali;	n	serverInterface
c	avk	net/minecraft/server/rcon/thread/RemoteControlListener
	m	(Lali;Ljava/net/ServerSocket;Ljava/lang/String;)V	<init>	<init>
		p	1		server
		p	2		listener
		p	3		password
	m	(Lali;)Lavk;	a	create
		p	0		server
	m	(Lavj;)Z	a	lambda$clearClients$0
		p	0		client
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
		p	1		socket
	m	()V	b	stop
	m	()V	d	clearClients
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Lali;	h	serverInterface
c	avm	net/minecraft/sounds/Music
	m	(Ljm;IIZ)V	<init>	<init>
		p	1		sound
		p	2		minDelay
		p	3		maxDelay
		p	4		replaceCurrentMusic
	m	()Ljm;	a	getEvent
	m	(Lavm;)Ljava/lang/Boolean;	a	lambda$static$3
		p	0		sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMinDelay
	m	(Lavm;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getMaxDelay
	m	(Lavm;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()Z	d	replaceCurrentMusic
	m	(Lavm;)Ljm;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
c	avn	net/minecraft/sounds/Musics
	m	(Ljm;)Lavm;	a	createGameMusic
		p	0		sound
	f	Lavm;	a	MENU
	f	Lavm;	b	CREATIVE
	f	Lavm;	c	CREDITS
	f	Lavm;	d	END_BOSS
	f	Lavm;	e	END
	f	Lavm;	f	UNDER_WATER
	f	Lavm;	g	GAME
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
c	avo	net/minecraft/sounds/SoundEffect
	m	(Lakr;FZ)V	<init>	<init>
		p	1		id
		p	2		distanceToTravel
		p	3		useStaticDistance
	m	()Lakr;	a	getLocation
	m	(F)F	a	getRange
		p	1		volume
	m	(Lakr;)Lavo;	a	createVariableRangeEvent
		p	0		id
	m	(Lakr;F)Lavo;	a	createFixedRangeEvent
		p	0		id
		p	1		distanceToTravel
	m	(Lakr;Ljava/lang/Float;)Lavo;	a	lambda$create$1
	m	(Lakr;Ljava/util/Optional;)Lavo;	a	create
		p	0		id
		p	1		distanceToTravel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	fixedRange
	m	(Lakr;)Lavo;	b	lambda$create$2
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	DIRECT_STREAM_CODEC
	f	Lyx;	d	STREAM_CODEC
	f	F	e	DEFAULT_RANGE
	f	Lakr;	f	location
	f	F	g	range
	f	Z	h	newSystem
c	avp	net/minecraft/sounds/SoundEffects
	m	()Lcom/google/common/collect/ImmutableList;	a	registerGoatHornSoundVariants
	m	(I)Ljm$c;	a	lambda$registerGoatHornSoundVariants$0
		p	0		variant
	m	(Lakr;)Lavo;	a	register
		p	0		id
	m	(Lakr;Lakr;)Lavo;	a	register
		p	0		id
		p	1		soundId
	m	(Lakr;Lakr;F)Ljm;	a	register
		p	0		id
		p	1		soundId
		p	2		distanceToTravel
	m	(Ljava/lang/String;)Lavo;	a	register
		p	0		id
	m	(Lakr;)Ljm$c;	b	registerForHolder
		p	0		id
	m	(Lakr;Lakr;)Ljm$c;	b	registerForHolder
		p	0		id
		p	1		soundId
	m	(Ljava/lang/String;)Ljm$c;	b	registerForHolder
		p	0		id
	f	Lavo;	AA	VAULT_ACTIVATE
	f	Lavo;	AB	VAULT_AMBIENT
	f	Lavo;	AC	VAULT_BREAK
	f	Lavo;	AD	VAULT_CLOSE_SHUTTER
	f	Lavo;	AE	VAULT_DEACTIVATE
	f	Lavo;	AF	VAULT_EJECT_ITEM
	f	Lavo;	AG	VAULT_REJECT_REWARDED_PLAYER
	f	Lavo;	AH	VAULT_FALL
	f	Lavo;	AI	VAULT_HIT
	f	Lavo;	AJ	VAULT_INSERT_ITEM
	f	Lavo;	AK	VAULT_INSERT_ITEM_FAIL
	f	Lavo;	AL	VAULT_OPEN_SHUTTER
	f	Lavo;	A	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Lavo;	AM	VAULT_PLACE
	f	Lavo;	AN	VAULT_STEP
	f	Lavo;	AO	VEX_AMBIENT
	f	Lavo;	AP	VEX_CHARGE
	f	Lavo;	AQ	VEX_DEATH
	f	Lavo;	AR	VEX_HURT
	f	Lavo;	AS	VILLAGER_AMBIENT
	f	Lavo;	AT	VILLAGER_CELEBRATE
	f	Lavo;	AU	VILLAGER_DEATH
	f	Lavo;	AV	VILLAGER_HURT
	f	Lavo;	AW	VILLAGER_NO
	f	Lavo;	AX	VILLAGER_TRADE
	f	Lavo;	AY	VILLAGER_YES
	f	Lavo;	AZ	VILLAGER_WORK_ARMORER
	f	Lavo;	Aa	POLISHED_TUFF_BREAK
	f	Lavo;	Ab	POLISHED_TUFF_FALL
	f	Lavo;	Ac	POLISHED_TUFF_HIT
	f	Lavo;	Ad	POLISHED_TUFF_PLACE
	f	Lavo;	Ae	POLISHED_TUFF_STEP
	f	Lavo;	Af	TURTLE_AMBIENT_LAND
	f	Lavo;	Ag	TURTLE_DEATH
	f	Lavo;	Ah	TURTLE_DEATH_BABY
	f	Lavo;	Ai	TURTLE_EGG_BREAK
	f	Lavo;	Aj	TURTLE_EGG_CRACK
	f	Lavo;	Ak	TURTLE_EGG_HATCH
	f	Lavo;	Al	TURTLE_HURT
	f	Lavo;	Am	TURTLE_HURT_BABY
	f	Lavo;	An	TURTLE_LAY_EGG
	f	Lavo;	Ao	TURTLE_SHAMBLE
	f	Lavo;	Ap	TURTLE_SHAMBLE_BABY
	f	Lavo;	Aq	TURTLE_SWIM
	f	Ljm$c;	Ar	UI_BUTTON_CLICK
	f	Lavo;	As	UI_LOOM_SELECT_PATTERN
	f	Lavo;	At	UI_LOOM_TAKE_RESULT
	f	Lavo;	Au	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Lavo;	Av	UI_STONECUTTER_TAKE_RESULT
	f	Lavo;	Aw	UI_STONECUTTER_SELECT_RECIPE
	f	Lavo;	Ax	UI_TOAST_CHALLENGE_COMPLETE
	f	Lavo;	Ay	UI_TOAST_IN
	f	Lavo;	Az	UI_TOAST_OUT
	f	Lavo;	BA	WANDERING_TRADER_DRINK_POTION
	f	Lavo;	BB	WANDERING_TRADER_HURT
	f	Lavo;	BC	WANDERING_TRADER_NO
	f	Lavo;	BD	WANDERING_TRADER_REAPPEARED
	f	Lavo;	BE	WANDERING_TRADER_TRADE
	f	Lavo;	BF	WANDERING_TRADER_YES
	f	Lavo;	BG	WARDEN_AGITATED
	f	Lavo;	BH	WARDEN_AMBIENT
	f	Lavo;	BI	WARDEN_ANGRY
	f	Lavo;	BJ	WARDEN_ATTACK_IMPACT
	f	Lavo;	BK	WARDEN_DEATH
	f	Lavo;	BL	WARDEN_DIG
	f	Lavo;	B	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Lavo;	BM	WARDEN_EMERGE
	f	Lavo;	BN	WARDEN_HEARTBEAT
	f	Lavo;	BO	WARDEN_HURT
	f	Lavo;	BP	WARDEN_LISTENING
	f	Lavo;	BQ	WARDEN_LISTENING_ANGRY
	f	Lavo;	BR	WARDEN_NEARBY_CLOSE
	f	Lavo;	BS	WARDEN_NEARBY_CLOSER
	f	Lavo;	BT	WARDEN_NEARBY_CLOSEST
	f	Lavo;	BU	WARDEN_ROAR
	f	Lavo;	BV	WARDEN_SNIFF
	f	Lavo;	BW	WARDEN_SONIC_BOOM
	f	Lavo;	BX	WARDEN_SONIC_CHARGE
	f	Lavo;	BY	WARDEN_STEP
	f	Lavo;	BZ	WARDEN_TENDRIL_CLICKS
	f	Lavo;	Ba	VILLAGER_WORK_BUTCHER
	f	Lavo;	Bb	VILLAGER_WORK_CARTOGRAPHER
	f	Lavo;	Bc	VILLAGER_WORK_CLERIC
	f	Lavo;	Bd	VILLAGER_WORK_FARMER
	f	Lavo;	Be	VILLAGER_WORK_FISHERMAN
	f	Lavo;	Bf	VILLAGER_WORK_FLETCHER
	f	Lavo;	Bg	VILLAGER_WORK_LEATHERWORKER
	f	Lavo;	Bh	VILLAGER_WORK_LIBRARIAN
	f	Lavo;	Bi	VILLAGER_WORK_MASON
	f	Lavo;	Bj	VILLAGER_WORK_SHEPHERD
	f	Lavo;	Bk	VILLAGER_WORK_TOOLSMITH
	f	Lavo;	Bl	VILLAGER_WORK_WEAPONSMITH
	f	Lavo;	Bm	VINDICATOR_AMBIENT
	f	Lavo;	Bn	VINDICATOR_CELEBRATE
	f	Lavo;	Bo	VINDICATOR_DEATH
	f	Lavo;	Bp	VINDICATOR_HURT
	f	Lavo;	Bq	VINE_BREAK
	f	Lavo;	Br	VINE_FALL
	f	Lavo;	Bs	VINE_HIT
	f	Lavo;	Bt	VINE_PLACE
	f	Lavo;	Bu	VINE_STEP
	f	Lavo;	Bv	LILY_PAD_PLACE
	f	Lavo;	Bw	WANDERING_TRADER_AMBIENT
	f	Lavo;	Bx	WANDERING_TRADER_DEATH
	f	Lavo;	By	WANDERING_TRADER_DISAPPEARED
	f	Lavo;	Bz	WANDERING_TRADER_DRINK_MILK
	f	Lavo;	CA	WITHER_DEATH
	f	Lavo;	CB	WITHER_HURT
	f	Lavo;	CC	WITHER_SHOOT
	f	Lavo;	CD	WITHER_SKELETON_AMBIENT
	f	Lavo;	CE	WITHER_SKELETON_DEATH
	f	Lavo;	CF	WITHER_SKELETON_HURT
	f	Lavo;	CG	WITHER_SKELETON_STEP
	f	Lavo;	CH	WITHER_SPAWN
	f	Lavo;	CI	WOLF_ARMOR_BREAK
	f	Lavo;	CJ	WOLF_ARMOR_CRACK
	f	Lavo;	CK	WOLF_ARMOR_DAMAGE
	f	Lavo;	CL	WOLF_ARMOR_REPAIR
	f	Lavo;	C	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Lavo;	CM	WOLF_AMBIENT
	f	Lavo;	CN	WOLF_DEATH
	f	Lavo;	CO	WOLF_GROWL
	f	Lavo;	CP	WOLF_HOWL
	f	Lavo;	CQ	WOLF_HURT
	f	Lavo;	CR	WOLF_PANT
	f	Lavo;	CS	WOLF_SHAKE
	f	Lavo;	CT	WOLF_STEP
	f	Lavo;	CU	WOLF_WHINE
	f	Lavo;	CV	WOODEN_DOOR_CLOSE
	f	Lavo;	CW	WOODEN_DOOR_OPEN
	f	Lavo;	CX	WOODEN_TRAPDOOR_CLOSE
	f	Lavo;	CY	WOODEN_TRAPDOOR_OPEN
	f	Lavo;	CZ	WOODEN_BUTTON_CLICK_OFF
	f	Lavo;	Ca	WAXED_HANGING_SIGN_INTERACT_FAIL
	f	Lavo;	Cb	WAXED_SIGN_INTERACT_FAIL
	f	Lavo;	Cc	WATER_AMBIENT
	f	Lavo;	Cd	WEATHER_RAIN
	f	Lavo;	Ce	WEATHER_RAIN_ABOVE
	f	Lavo;	Cf	WET_GRASS_BREAK
	f	Lavo;	Cg	WET_GRASS_FALL
	f	Lavo;	Ch	WET_GRASS_HIT
	f	Lavo;	Ci	WET_GRASS_PLACE
	f	Lavo;	Cj	WET_GRASS_STEP
	f	Lavo;	Ck	WET_SPONGE_BREAK
	f	Lavo;	Cl	WET_SPONGE_DRIES
	f	Lavo;	Cm	WET_SPONGE_FALL
	f	Lavo;	Cn	WET_SPONGE_HIT
	f	Lavo;	Co	WET_SPONGE_PLACE
	f	Lavo;	Cp	WET_SPONGE_STEP
	f	Ljm$c;	Cq	WIND_CHARGE_BURST
	f	Lavo;	Cr	WIND_CHARGE_THROW
	f	Lavo;	Cs	WITCH_AMBIENT
	f	Lavo;	Ct	WITCH_CELEBRATE
	f	Lavo;	Cu	WITCH_DEATH
	f	Lavo;	Cv	WITCH_DRINK
	f	Lavo;	Cw	WITCH_HURT
	f	Lavo;	Cx	WITCH_THROW
	f	Lavo;	Cy	WITHER_AMBIENT
	f	Lavo;	Cz	WITHER_BREAK_BLOCK
	f	Lavo;	DA	ZOMBIE_HORSE_AMBIENT
	f	Lavo;	DB	ZOMBIE_HORSE_DEATH
	f	Lavo;	DC	ZOMBIE_HORSE_HURT
	f	Lavo;	DD	ZOMBIE_HURT
	f	Lavo;	DE	ZOMBIE_INFECT
	f	Lavo;	DF	ZOMBIFIED_PIGLIN_AMBIENT
	f	Lavo;	DG	ZOMBIFIED_PIGLIN_ANGRY
	f	Lavo;	DH	ZOMBIFIED_PIGLIN_DEATH
	f	Lavo;	DI	ZOMBIFIED_PIGLIN_HURT
	f	Lavo;	DJ	ZOMBIE_STEP
	f	Lavo;	DK	ZOMBIE_VILLAGER_AMBIENT
	f	Lavo;	DL	ZOMBIE_VILLAGER_CONVERTED
	f	Lavo;	D	AMETHYST_BLOCK_BREAK
	f	Lavo;	DM	ZOMBIE_VILLAGER_CURE
	f	Lavo;	DN	ZOMBIE_VILLAGER_DEATH
	f	Lavo;	DO	ZOMBIE_VILLAGER_HURT
	f	Lavo;	DP	ZOMBIE_VILLAGER_STEP
	f	Lavo;	DQ	APPLY_EFFECT_BAD_OMEN
	f	Lavo;	DR	APPLY_EFFECT_TRIAL_OMEN
	f	Lavo;	DS	APPLY_EFFECT_RAID_OMEN
	f	Lavo;	Da	WOODEN_BUTTON_CLICK_ON
	f	Lavo;	Db	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	Dc	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	Dd	WOOD_BREAK
	f	Lavo;	De	WOOD_FALL
	f	Lavo;	Df	WOOD_HIT
	f	Lavo;	Dg	WOOD_PLACE
	f	Lavo;	Dh	WOOD_STEP
	f	Lavo;	Di	WOOL_BREAK
	f	Lavo;	Dj	WOOL_FALL
	f	Lavo;	Dk	WOOL_HIT
	f	Lavo;	Dl	WOOL_PLACE
	f	Lavo;	Dm	WOOL_STEP
	f	Lavo;	Dn	ZOGLIN_AMBIENT
	f	Lavo;	Do	ZOGLIN_ANGRY
	f	Lavo;	Dp	ZOGLIN_ATTACK
	f	Lavo;	Dq	ZOGLIN_DEATH
	f	Lavo;	Dr	ZOGLIN_HURT
	f	Lavo;	Ds	ZOGLIN_STEP
	f	Lavo;	Dt	ZOMBIE_AMBIENT
	f	Lavo;	Du	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Lavo;	Dv	ZOMBIE_ATTACK_IRON_DOOR
	f	Lavo;	Dw	ZOMBIE_BREAK_WOODEN_DOOR
	f	Lavo;	Dx	ZOMBIE_CONVERTED_TO_DROWNED
	f	Lavo;	Dy	ZOMBIE_DEATH
	f	Lavo;	Dz	ZOMBIE_DESTROY_EGG
	f	Lavo;	E	AMETHYST_BLOCK_CHIME
	f	Lavo;	F	AMETHYST_BLOCK_FALL
	f	Lavo;	G	AMETHYST_BLOCK_HIT
	f	Lavo;	H	AMETHYST_BLOCK_PLACE
	f	Lavo;	I	AMETHYST_BLOCK_RESONATE
	f	Lavo;	J	AMETHYST_BLOCK_STEP
	f	Lavo;	K	AMETHYST_CLUSTER_BREAK
	f	Lavo;	L	AMETHYST_CLUSTER_FALL
	f	Lavo;	M	AMETHYST_CLUSTER_HIT
	f	Lavo;	N	AMETHYST_CLUSTER_PLACE
	f	Lavo;	O	AMETHYST_CLUSTER_STEP
	f	Lavo;	P	ANCIENT_DEBRIS_BREAK
	f	Lavo;	Q	ANCIENT_DEBRIS_STEP
	f	Lavo;	R	ANCIENT_DEBRIS_PLACE
	f	Lavo;	S	ANCIENT_DEBRIS_HIT
	f	Lavo;	T	ANCIENT_DEBRIS_FALL
	f	Lavo;	U	ANVIL_BREAK
	f	Lavo;	V	ANVIL_DESTROY
	f	Lavo;	W	ANVIL_FALL
	f	Lavo;	X	ANVIL_HIT
	f	Lavo;	Y	ANVIL_LAND
	f	Lavo;	Z	ANVIL_PLACE
	f	Lavo;	aA	ARMOR_STAND_BREAK
	f	Lavo;	aB	ARMOR_STAND_FALL
	f	Lavo;	aC	ARMOR_STAND_HIT
	f	Lavo;	aD	ARMOR_STAND_PLACE
	f	Lavo;	aE	ARROW_HIT
	f	Lavo;	aF	ARROW_HIT_PLAYER
	f	Lavo;	aG	ARROW_SHOOT
	f	Lavo;	aH	AXE_STRIP
	f	Lavo;	aI	AXE_SCRAPE
	f	Lavo;	aJ	AXE_WAX_OFF
	f	Lavo;	aK	AXOLOTL_ATTACK
	f	Lavo;	aL	AXOLOTL_DEATH
	f	Lavo;	a	ALLAY_AMBIENT_WITH_ITEM
	f	Lavo;	aM	AXOLOTL_HURT
	f	Lavo;	aN	AXOLOTL_IDLE_AIR
	f	Lavo;	aO	AXOLOTL_IDLE_WATER
	f	Lavo;	aP	AXOLOTL_SPLASH
	f	Lavo;	aQ	AXOLOTL_SWIM
	f	Lavo;	aR	AZALEA_BREAK
	f	Lavo;	aS	AZALEA_FALL
	f	Lavo;	aT	AZALEA_HIT
	f	Lavo;	aU	AZALEA_PLACE
	f	Lavo;	aV	AZALEA_STEP
	f	Lavo;	aW	AZALEA_LEAVES_BREAK
	f	Lavo;	aX	AZALEA_LEAVES_FALL
	f	Lavo;	aY	AZALEA_LEAVES_HIT
	f	Lavo;	aZ	AZALEA_LEAVES_PLACE
	f	Lavo;	aa	ANVIL_STEP
	f	Lavo;	ab	ANVIL_USE
	f	Lavo;	ac	ARMADILLO_EAT
	f	Lavo;	ad	ARMADILLO_HURT
	f	Lavo;	ae	ARMADILLO_HURT_REDUCED
	f	Lavo;	af	ARMADILLO_AMBIENT
	f	Lavo;	ag	ARMADILLO_STEP
	f	Lavo;	ah	ARMADILLO_DEATH
	f	Lavo;	ai	ARMADILLO_ROLL
	f	Lavo;	aj	ARMADILLO_LAND
	f	Lavo;	ak	ARMADILLO_SCUTE_DROP
	f	Lavo;	al	ARMADILLO_UNROLL_FINISH
	f	Lavo;	am	ARMADILLO_PEEK
	f	Lavo;	an	ARMADILLO_UNROLL_START
	f	Lavo;	ao	ARMADILLO_BRUSH
	f	Ljm;	ap	ARMOR_EQUIP_CHAIN
	f	Ljm;	aq	ARMOR_EQUIP_DIAMOND
	f	Ljm;	ar	ARMOR_EQUIP_ELYTRA
	f	Ljm;	as	ARMOR_EQUIP_GENERIC
	f	Ljm;	at	ARMOR_EQUIP_GOLD
	f	Ljm;	au	ARMOR_EQUIP_IRON
	f	Ljm;	av	ARMOR_EQUIP_LEATHER
	f	Ljm;	aw	ARMOR_EQUIP_NETHERITE
	f	Ljm;	ax	ARMOR_EQUIP_TURTLE
	f	Ljm;	ay	ARMOR_EQUIP_WOLF
	f	Lavo;	az	ARMOR_UNEQUIP_WOLF
	f	Lavo;	bA	BASALT_BREAK
	f	Lavo;	bB	BASALT_STEP
	f	Lavo;	bC	BASALT_PLACE
	f	Lavo;	bD	BASALT_HIT
	f	Lavo;	bE	BASALT_FALL
	f	Lavo;	bF	BAT_AMBIENT
	f	Lavo;	bG	BAT_DEATH
	f	Lavo;	bH	BAT_HURT
	f	Lavo;	bI	BAT_LOOP
	f	Lavo;	bJ	BAT_TAKEOFF
	f	Lavo;	bK	BEACON_ACTIVATE
	f	Lavo;	bL	BEACON_AMBIENT
	f	Lavo;	b	ALLAY_AMBIENT_WITHOUT_ITEM
	f	Lavo;	bM	BEACON_DEACTIVATE
	f	Lavo;	bN	BEACON_POWER_SELECT
	f	Lavo;	bO	BEE_DEATH
	f	Lavo;	bP	BEE_HURT
	f	Lavo;	bQ	BEE_LOOP_AGGRESSIVE
	f	Lavo;	bR	BEE_LOOP
	f	Lavo;	bS	BEE_STING
	f	Lavo;	bT	BEE_POLLINATE
	f	Lavo;	bU	BEEHIVE_DRIP
	f	Lavo;	bV	BEEHIVE_ENTER
	f	Lavo;	bW	BEEHIVE_EXIT
	f	Lavo;	bX	BEEHIVE_SHEAR
	f	Lavo;	bY	BEEHIVE_WORK
	f	Lavo;	bZ	BELL_BLOCK
	f	Lavo;	ba	AZALEA_LEAVES_STEP
	f	Lavo;	bb	BAMBOO_BREAK
	f	Lavo;	bc	BAMBOO_FALL
	f	Lavo;	bd	BAMBOO_HIT
	f	Lavo;	be	BAMBOO_PLACE
	f	Lavo;	bf	BAMBOO_STEP
	f	Lavo;	bg	BAMBOO_SAPLING_BREAK
	f	Lavo;	bh	BAMBOO_SAPLING_HIT
	f	Lavo;	bi	BAMBOO_SAPLING_PLACE
	f	Lavo;	bj	BAMBOO_WOOD_BREAK
	f	Lavo;	bk	BAMBOO_WOOD_FALL
	f	Lavo;	bl	BAMBOO_WOOD_HIT
	f	Lavo;	bm	BAMBOO_WOOD_PLACE
	f	Lavo;	bn	BAMBOO_WOOD_STEP
	f	Lavo;	bo	BAMBOO_WOOD_DOOR_CLOSE
	f	Lavo;	bp	BAMBOO_WOOD_DOOR_OPEN
	f	Lavo;	bq	BAMBOO_WOOD_TRAPDOOR_CLOSE
	f	Lavo;	br	BAMBOO_WOOD_TRAPDOOR_OPEN
	f	Lavo;	bs	BAMBOO_WOOD_BUTTON_CLICK_OFF
	f	Lavo;	bt	BAMBOO_WOOD_BUTTON_CLICK_ON
	f	Lavo;	bu	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	bv	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	bw	BAMBOO_WOOD_FENCE_GATE_CLOSE
	f	Lavo;	bx	BAMBOO_WOOD_FENCE_GATE_OPEN
	f	Lavo;	by	BARREL_CLOSE
	f	Lavo;	bz	BARREL_OPEN
	f	Lavo;	cA	BLASTFURNACE_FIRE_CRACKLE
	f	Lavo;	cB	BOTTLE_EMPTY
	f	Lavo;	cC	BOTTLE_FILL
	f	Lavo;	cD	BOTTLE_FILL_DRAGONBREATH
	f	Lavo;	cE	BREEZE_CHARGE
	f	Lavo;	cF	BREEZE_DEFLECT
	f	Lavo;	cG	BREEZE_INHALE
	f	Lavo;	cH	BREEZE_IDLE_GROUND
	f	Lavo;	cI	BREEZE_IDLE_AIR
	f	Lavo;	cJ	BREEZE_SHOOT
	f	Lavo;	cK	BREEZE_JUMP
	f	Lavo;	cL	BREEZE_LAND
	f	Lavo;	c	ALLAY_DEATH
	f	Lavo;	cM	BREEZE_SLIDE
	f	Lavo;	cN	BREEZE_DEATH
	f	Lavo;	cO	BREEZE_HURT
	f	Lavo;	cP	BREEZE_WHIRL
	f	Ljm$c;	cQ	BREEZE_WIND_CHARGE_BURST
	f	Lavo;	cR	BREWING_STAND_BREW
	f	Lavo;	cS	BRUSH_GENERIC
	f	Lavo;	cT	BRUSH_SAND
	f	Lavo;	cU	BRUSH_GRAVEL
	f	Lavo;	cV	BRUSH_SAND_COMPLETED
	f	Lavo;	cW	BRUSH_GRAVEL_COMPLETED
	f	Lavo;	cX	BUBBLE_COLUMN_BUBBLE_POP
	f	Lavo;	cY	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Lavo;	cZ	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Lavo;	ca	BELL_RESONATE
	f	Lavo;	cb	BIG_DRIPLEAF_BREAK
	f	Lavo;	cc	BIG_DRIPLEAF_FALL
	f	Lavo;	cd	BIG_DRIPLEAF_HIT
	f	Lavo;	ce	BIG_DRIPLEAF_PLACE
	f	Lavo;	cf	BIG_DRIPLEAF_STEP
	f	Lavo;	cg	BLAZE_AMBIENT
	f	Lavo;	ch	BLAZE_BURN
	f	Lavo;	ci	BLAZE_DEATH
	f	Lavo;	cj	BLAZE_HURT
	f	Lavo;	ck	BLAZE_SHOOT
	f	Lavo;	cl	BOAT_PADDLE_LAND
	f	Lavo;	cm	BOAT_PADDLE_WATER
	f	Lavo;	cn	BOGGED_AMBIENT
	f	Lavo;	co	BOGGED_DEATH
	f	Lavo;	cp	BOGGED_HURT
	f	Lavo;	cq	BOGGED_SHEAR
	f	Lavo;	cr	BOGGED_STEP
	f	Lavo;	cs	BONE_BLOCK_BREAK
	f	Lavo;	ct	BONE_BLOCK_FALL
	f	Lavo;	cu	BONE_BLOCK_HIT
	f	Lavo;	cv	BONE_BLOCK_PLACE
	f	Lavo;	cw	BONE_BLOCK_STEP
	f	Lavo;	cx	BONE_MEAL_USE
	f	Lavo;	cy	BOOK_PAGE_TURN
	f	Lavo;	cz	BOOK_PUT
	f	Lavo;	dA	CAMEL_DEATH
	f	Lavo;	dB	CAMEL_EAT
	f	Lavo;	dC	CAMEL_HURT
	f	Lavo;	dD	CAMEL_SADDLE
	f	Lavo;	dE	CAMEL_SIT
	f	Lavo;	dF	CAMEL_STAND
	f	Lavo;	dG	CAMEL_STEP
	f	Lavo;	dH	CAMEL_STEP_SAND
	f	Lavo;	dI	CAMPFIRE_CRACKLE
	f	Lavo;	dJ	CANDLE_AMBIENT
	f	Lavo;	dK	CANDLE_BREAK
	f	Lavo;	dL	CANDLE_EXTINGUISH
	f	Lavo;	d	ALLAY_HURT
	f	Lavo;	dM	CANDLE_FALL
	f	Lavo;	dN	CANDLE_HIT
	f	Lavo;	dO	CANDLE_PLACE
	f	Lavo;	dP	CANDLE_STEP
	f	Lavo;	dQ	CAT_AMBIENT
	f	Lavo;	dR	CAT_STRAY_AMBIENT
	f	Lavo;	dS	CAT_DEATH
	f	Lavo;	dT	CAT_EAT
	f	Lavo;	dU	CAT_HISS
	f	Lavo;	dV	CAT_BEG_FOR_FOOD
	f	Lavo;	dW	CAT_HURT
	f	Lavo;	dX	CAT_PURR
	f	Lavo;	dY	CAT_PURREOW
	f	Lavo;	dZ	CAVE_VINES_BREAK
	f	Lavo;	da	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Lavo;	db	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Lavo;	dc	BUCKET_EMPTY
	f	Lavo;	dd	BUCKET_EMPTY_AXOLOTL
	f	Lavo;	de	BUCKET_EMPTY_FISH
	f	Lavo;	df	BUCKET_EMPTY_LAVA
	f	Lavo;	dg	BUCKET_EMPTY_POWDER_SNOW
	f	Lavo;	dh	BUCKET_EMPTY_TADPOLE
	f	Lavo;	di	BUCKET_FILL
	f	Lavo;	dj	BUCKET_FILL_AXOLOTL
	f	Lavo;	dk	BUCKET_FILL_FISH
	f	Lavo;	dl	BUCKET_FILL_LAVA
	f	Lavo;	dm	BUCKET_FILL_POWDER_SNOW
	f	Lavo;	dn	BUCKET_FILL_TADPOLE
	f	Lavo;	do	BUNDLE_DROP_CONTENTS
	f	Lavo;	dp	BUNDLE_INSERT
	f	Lavo;	dq	BUNDLE_REMOVE_ONE
	f	Lavo;	dr	CAKE_ADD_CANDLE
	f	Lavo;	ds	CALCITE_BREAK
	f	Lavo;	dt	CALCITE_STEP
	f	Lavo;	du	CALCITE_PLACE
	f	Lavo;	dv	CALCITE_HIT
	f	Lavo;	dw	CALCITE_FALL
	f	Lavo;	dx	CAMEL_AMBIENT
	f	Lavo;	dy	CAMEL_DASH
	f	Lavo;	dz	CAMEL_DASH_READY
	f	Lavo;	eA	CHERRY_WOOD_HANGING_SIGN_BREAK
	f	Lavo;	eB	CHERRY_WOOD_HANGING_SIGN_FALL
	f	Lavo;	eC	CHERRY_WOOD_HANGING_SIGN_HIT
	f	Lavo;	eD	CHERRY_WOOD_HANGING_SIGN_PLACE
	f	Lavo;	eE	CHERRY_WOOD_DOOR_CLOSE
	f	Lavo;	eF	CHERRY_WOOD_DOOR_OPEN
	f	Lavo;	eG	CHERRY_WOOD_TRAPDOOR_CLOSE
	f	Lavo;	eH	CHERRY_WOOD_TRAPDOOR_OPEN
	f	Lavo;	eI	CHERRY_WOOD_BUTTON_CLICK_OFF
	f	Lavo;	eJ	CHERRY_WOOD_BUTTON_CLICK_ON
	f	Lavo;	eK	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	eL	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	e	ALLAY_ITEM_GIVEN
	f	Lavo;	eM	CHERRY_WOOD_FENCE_GATE_CLOSE
	f	Lavo;	eN	CHERRY_WOOD_FENCE_GATE_OPEN
	f	Lavo;	eO	CHEST_CLOSE
	f	Lavo;	eP	CHEST_LOCKED
	f	Lavo;	eQ	CHEST_OPEN
	f	Lavo;	eR	CHICKEN_AMBIENT
	f	Lavo;	eS	CHICKEN_DEATH
	f	Lavo;	eT	CHICKEN_EGG
	f	Lavo;	eU	CHICKEN_HURT
	f	Lavo;	eV	CHICKEN_STEP
	f	Lavo;	eW	CHISELED_BOOKSHELF_BREAK
	f	Lavo;	eX	CHISELED_BOOKSHELF_FALL
	f	Lavo;	eY	CHISELED_BOOKSHELF_HIT
	f	Lavo;	eZ	CHISELED_BOOKSHELF_INSERT
	f	Lavo;	ea	CAVE_VINES_FALL
	f	Lavo;	eb	CAVE_VINES_HIT
	f	Lavo;	ec	CAVE_VINES_PLACE
	f	Lavo;	ed	CAVE_VINES_STEP
	f	Lavo;	ee	CAVE_VINES_PICK_BERRIES
	f	Lavo;	ef	CHAIN_BREAK
	f	Lavo;	eg	CHAIN_FALL
	f	Lavo;	eh	CHAIN_HIT
	f	Lavo;	ei	CHAIN_PLACE
	f	Lavo;	ej	CHAIN_STEP
	f	Lavo;	ek	CHERRY_WOOD_BREAK
	f	Lavo;	el	CHERRY_WOOD_FALL
	f	Lavo;	em	CHERRY_WOOD_HIT
	f	Lavo;	en	CHERRY_WOOD_PLACE
	f	Lavo;	eo	CHERRY_WOOD_STEP
	f	Lavo;	ep	CHERRY_SAPLING_BREAK
	f	Lavo;	eq	CHERRY_SAPLING_FALL
	f	Lavo;	er	CHERRY_SAPLING_HIT
	f	Lavo;	es	CHERRY_SAPLING_PLACE
	f	Lavo;	et	CHERRY_SAPLING_STEP
	f	Lavo;	eu	CHERRY_LEAVES_BREAK
	f	Lavo;	ev	CHERRY_LEAVES_FALL
	f	Lavo;	ew	CHERRY_LEAVES_HIT
	f	Lavo;	ex	CHERRY_LEAVES_PLACE
	f	Lavo;	ey	CHERRY_LEAVES_STEP
	f	Lavo;	ez	CHERRY_WOOD_HANGING_SIGN_STEP
	f	Lavo;	fA	CONDUIT_DEACTIVATE
	f	Lavo;	fB	COPPER_BULB_BREAK
	f	Lavo;	fC	COPPER_BULB_STEP
	f	Lavo;	fD	COPPER_BULB_PLACE
	f	Lavo;	fE	COPPER_BULB_HIT
	f	Lavo;	fF	COPPER_BULB_FALL
	f	Lavo;	fG	COPPER_BULB_TURN_ON
	f	Lavo;	fH	COPPER_BULB_TURN_OFF
	f	Lavo;	fI	COPPER_BREAK
	f	Lavo;	fJ	COPPER_STEP
	f	Lavo;	fK	COPPER_PLACE
	f	Lavo;	fL	COPPER_HIT
	f	Lavo;	f	ALLAY_ITEM_TAKEN
	f	Lavo;	fM	COPPER_FALL
	f	Lavo;	fN	COPPER_DOOR_CLOSE
	f	Lavo;	fO	COPPER_DOOR_OPEN
	f	Lavo;	fP	COPPER_GRATE_BREAK
	f	Lavo;	fQ	COPPER_GRATE_STEP
	f	Lavo;	fR	COPPER_GRATE_PLACE
	f	Lavo;	fS	COPPER_GRATE_HIT
	f	Lavo;	fT	COPPER_GRATE_FALL
	f	Lavo;	fU	COPPER_TRAPDOOR_CLOSE
	f	Lavo;	fV	COPPER_TRAPDOOR_OPEN
	f	Lavo;	fW	CORAL_BLOCK_BREAK
	f	Lavo;	fX	CORAL_BLOCK_FALL
	f	Lavo;	fY	CORAL_BLOCK_HIT
	f	Lavo;	fZ	CORAL_BLOCK_PLACE
	f	Lavo;	fa	CHISELED_BOOKSHELF_INSERT_ENCHANTED
	f	Lavo;	fb	CHISELED_BOOKSHELF_STEP
	f	Lavo;	fc	CHISELED_BOOKSHELF_PICKUP
	f	Lavo;	fd	CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	f	Lavo;	fe	CHISELED_BOOKSHELF_PLACE
	f	Lavo;	ff	CHORUS_FLOWER_DEATH
	f	Lavo;	fg	CHORUS_FLOWER_GROW
	f	Lavo;	fh	CHORUS_FRUIT_TELEPORT
	f	Lavo;	fi	COBWEB_BREAK
	f	Lavo;	fj	COBWEB_STEP
	f	Lavo;	fk	COBWEB_PLACE
	f	Lavo;	fl	COBWEB_HIT
	f	Lavo;	fm	COBWEB_FALL
	f	Lavo;	fn	COD_AMBIENT
	f	Lavo;	fo	COD_DEATH
	f	Lavo;	fp	COD_FLOP
	f	Lavo;	fq	COD_HURT
	f	Lavo;	fr	COMPARATOR_CLICK
	f	Lavo;	fs	COMPOSTER_EMPTY
	f	Lavo;	ft	COMPOSTER_FILL
	f	Lavo;	fu	COMPOSTER_FILL_SUCCESS
	f	Lavo;	fv	COMPOSTER_READY
	f	Lavo;	fw	CONDUIT_ACTIVATE
	f	Lavo;	fx	CONDUIT_AMBIENT
	f	Lavo;	fy	CONDUIT_AMBIENT_SHORT
	f	Lavo;	fz	CONDUIT_ATTACK_TARGET
	f	Lavo;	gA	DECORATED_POT_STEP
	f	Lavo;	gB	DECORATED_POT_PLACE
	f	Lavo;	gC	DECORATED_POT_SHATTER
	f	Lavo;	gD	DEEPSLATE_BRICKS_BREAK
	f	Lavo;	gE	DEEPSLATE_BRICKS_FALL
	f	Lavo;	gF	DEEPSLATE_BRICKS_HIT
	f	Lavo;	gG	DEEPSLATE_BRICKS_PLACE
	f	Lavo;	gH	DEEPSLATE_BRICKS_STEP
	f	Lavo;	gI	DEEPSLATE_BREAK
	f	Lavo;	gJ	DEEPSLATE_FALL
	f	Lavo;	gK	DEEPSLATE_HIT
	f	Lavo;	gL	DEEPSLATE_PLACE
	f	Lavo;	g	ALLAY_THROW
	f	Lavo;	gM	DEEPSLATE_STEP
	f	Lavo;	gN	DEEPSLATE_TILES_BREAK
	f	Lavo;	gO	DEEPSLATE_TILES_FALL
	f	Lavo;	gP	DEEPSLATE_TILES_HIT
	f	Lavo;	gQ	DEEPSLATE_TILES_PLACE
	f	Lavo;	gR	DEEPSLATE_TILES_STEP
	f	Lavo;	gS	DISPENSER_DISPENSE
	f	Lavo;	gT	DISPENSER_FAIL
	f	Lavo;	gU	DISPENSER_LAUNCH
	f	Lavo;	gV	DOLPHIN_AMBIENT
	f	Lavo;	gW	DOLPHIN_AMBIENT_WATER
	f	Lavo;	gX	DOLPHIN_ATTACK
	f	Lavo;	gY	DOLPHIN_DEATH
	f	Lavo;	gZ	DOLPHIN_EAT
	f	Lavo;	ga	CORAL_BLOCK_STEP
	f	Lavo;	gb	COW_AMBIENT
	f	Lavo;	gc	COW_DEATH
	f	Lavo;	gd	COW_HURT
	f	Lavo;	ge	COW_MILK
	f	Lavo;	gf	COW_STEP
	f	Lavo;	gg	CRAFTER_CRAFT
	f	Lavo;	gh	CRAFTER_FAIL
	f	Lavo;	gi	CREEPER_DEATH
	f	Lavo;	gj	CREEPER_HURT
	f	Lavo;	gk	CREEPER_PRIMED
	f	Lavo;	gl	CROP_BREAK
	f	Lavo;	gm	CROP_PLANTED
	f	Lavo;	gn	CROSSBOW_HIT
	f	Ljm;	go	CROSSBOW_LOADING_END
	f	Ljm;	gp	CROSSBOW_LOADING_MIDDLE
	f	Ljm;	gq	CROSSBOW_LOADING_START
	f	Ljm;	gr	CROSSBOW_QUICK_CHARGE_1
	f	Ljm;	gs	CROSSBOW_QUICK_CHARGE_2
	f	Ljm;	gt	CROSSBOW_QUICK_CHARGE_3
	f	Lavo;	gu	CROSSBOW_SHOOT
	f	Lavo;	gv	DECORATED_POT_BREAK
	f	Lavo;	gw	DECORATED_POT_FALL
	f	Lavo;	gx	DECORATED_POT_HIT
	f	Lavo;	gy	DECORATED_POT_INSERT
	f	Lavo;	gz	DECORATED_POT_INSERT_FAIL
	f	Lavo;	hA	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Lavo;	hB	BIG_DRIPLEAF_TILT_DOWN
	f	Lavo;	hC	BIG_DRIPLEAF_TILT_UP
	f	Lavo;	hD	DROWNED_AMBIENT
	f	Lavo;	hE	DROWNED_AMBIENT_WATER
	f	Lavo;	hF	DROWNED_DEATH
	f	Lavo;	hG	DROWNED_DEATH_WATER
	f	Lavo;	hH	DROWNED_HURT
	f	Lavo;	hI	DROWNED_HURT_WATER
	f	Lavo;	hJ	DROWNED_SHOOT
	f	Lavo;	hK	DROWNED_STEP
	f	Lavo;	hL	DROWNED_SWIM
	f	Ljm$c;	h	AMBIENT_CAVE
	f	Lavo;	hM	DYE_USE
	f	Lavo;	hN	EGG_THROW
	f	Lavo;	hO	ELDER_GUARDIAN_AMBIENT
	f	Lavo;	hP	ELDER_GUARDIAN_AMBIENT_LAND
	f	Lavo;	hQ	ELDER_GUARDIAN_CURSE
	f	Lavo;	hR	ELDER_GUARDIAN_DEATH
	f	Lavo;	hS	ELDER_GUARDIAN_DEATH_LAND
	f	Lavo;	hT	ELDER_GUARDIAN_FLOP
	f	Lavo;	hU	ELDER_GUARDIAN_HURT
	f	Lavo;	hV	ELDER_GUARDIAN_HURT_LAND
	f	Lavo;	hW	ELYTRA_FLYING
	f	Lavo;	hX	ENCHANTMENT_TABLE_USE
	f	Lavo;	hY	ENDER_CHEST_CLOSE
	f	Lavo;	hZ	ENDER_CHEST_OPEN
	f	Lavo;	ha	DOLPHIN_HURT
	f	Lavo;	hb	DOLPHIN_JUMP
	f	Lavo;	hc	DOLPHIN_PLAY
	f	Lavo;	hd	DOLPHIN_SPLASH
	f	Lavo;	he	DOLPHIN_SWIM
	f	Lavo;	hf	DONKEY_AMBIENT
	f	Lavo;	hg	DONKEY_ANGRY
	f	Lavo;	hh	DONKEY_CHEST
	f	Lavo;	hi	DONKEY_DEATH
	f	Lavo;	hj	DONKEY_EAT
	f	Lavo;	hk	DONKEY_HURT
	f	Lavo;	hl	DONKEY_JUMP
	f	Lavo;	hm	DRIPSTONE_BLOCK_BREAK
	f	Lavo;	hn	DRIPSTONE_BLOCK_STEP
	f	Lavo;	ho	DRIPSTONE_BLOCK_PLACE
	f	Lavo;	hp	DRIPSTONE_BLOCK_HIT
	f	Lavo;	hq	DRIPSTONE_BLOCK_FALL
	f	Lavo;	hr	POINTED_DRIPSTONE_BREAK
	f	Lavo;	hs	POINTED_DRIPSTONE_STEP
	f	Lavo;	ht	POINTED_DRIPSTONE_PLACE
	f	Lavo;	hu	POINTED_DRIPSTONE_HIT
	f	Lavo;	hv	POINTED_DRIPSTONE_FALL
	f	Lavo;	hw	POINTED_DRIPSTONE_LAND
	f	Lavo;	hx	POINTED_DRIPSTONE_DRIP_LAVA
	f	Lavo;	hy	POINTED_DRIPSTONE_DRIP_WATER
	f	Lavo;	hz	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Lavo;	iA	EVOKER_DEATH
	f	Lavo;	iB	EVOKER_FANGS_ATTACK
	f	Lavo;	iC	EVOKER_HURT
	f	Lavo;	iD	EVOKER_PREPARE_ATTACK
	f	Lavo;	iE	EVOKER_PREPARE_SUMMON
	f	Lavo;	iF	EVOKER_PREPARE_WOLOLO
	f	Lavo;	iG	EXPERIENCE_BOTTLE_THROW
	f	Lavo;	iH	EXPERIENCE_ORB_PICKUP
	f	Lavo;	iI	FENCE_GATE_CLOSE
	f	Lavo;	iJ	FENCE_GATE_OPEN
	f	Lavo;	iK	FIRECHARGE_USE
	f	Lavo;	iL	FIREWORK_ROCKET_BLAST
	f	Ljm$c;	i	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Lavo;	iM	FIREWORK_ROCKET_BLAST_FAR
	f	Lavo;	iN	FIREWORK_ROCKET_LARGE_BLAST
	f	Lavo;	iO	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Lavo;	iP	FIREWORK_ROCKET_LAUNCH
	f	Lavo;	iQ	FIREWORK_ROCKET_SHOOT
	f	Lavo;	iR	FIREWORK_ROCKET_TWINKLE
	f	Lavo;	iS	FIREWORK_ROCKET_TWINKLE_FAR
	f	Lavo;	iT	FIRE_AMBIENT
	f	Lavo;	iU	FIRE_EXTINGUISH
	f	Lavo;	iV	FISH_SWIM
	f	Lavo;	iW	FISHING_BOBBER_RETRIEVE
	f	Lavo;	iX	FISHING_BOBBER_SPLASH
	f	Lavo;	iY	FISHING_BOBBER_THROW
	f	Lavo;	iZ	FLINTANDSTEEL_USE
	f	Lavo;	ia	ENDER_DRAGON_AMBIENT
	f	Lavo;	ib	ENDER_DRAGON_DEATH
	f	Lavo;	ic	DRAGON_FIREBALL_EXPLODE
	f	Lavo;	id	ENDER_DRAGON_FLAP
	f	Lavo;	ie	ENDER_DRAGON_GROWL
	f	Lavo;	if	ENDER_DRAGON_HURT
	f	Lavo;	ig	ENDER_DRAGON_SHOOT
	f	Lavo;	ih	ENDER_EYE_DEATH
	f	Lavo;	ii	ENDER_EYE_LAUNCH
	f	Lavo;	ij	ENDERMAN_AMBIENT
	f	Lavo;	ik	ENDERMAN_DEATH
	f	Lavo;	il	ENDERMAN_HURT
	f	Lavo;	im	ENDERMAN_SCREAM
	f	Lavo;	in	ENDERMAN_STARE
	f	Lavo;	io	ENDERMAN_TELEPORT
	f	Lavo;	ip	ENDERMITE_AMBIENT
	f	Lavo;	iq	ENDERMITE_DEATH
	f	Lavo;	ir	ENDERMITE_HURT
	f	Lavo;	is	ENDERMITE_STEP
	f	Lavo;	it	ENDER_PEARL_THROW
	f	Lavo;	iu	END_GATEWAY_SPAWN
	f	Lavo;	iv	END_PORTAL_FRAME_FILL
	f	Lavo;	iw	END_PORTAL_SPAWN
	f	Lavo;	ix	EVOKER_AMBIENT
	f	Lavo;	iy	EVOKER_CAST_SPELL
	f	Lavo;	iz	EVOKER_CELEBRATE
	f	Lavo;	jA	FROGLIGHT_BREAK
	f	Lavo;	jB	FROGLIGHT_FALL
	f	Lavo;	jC	FROGLIGHT_HIT
	f	Lavo;	jD	FROGLIGHT_PLACE
	f	Lavo;	jE	FROGLIGHT_STEP
	f	Lavo;	jF	FROGSPAWNSTEP
	f	Lavo;	jG	FROGSPAWN_BREAK
	f	Lavo;	jH	FROGSPAWN_FALL
	f	Lavo;	jI	FROGSPAWN_HATCH
	f	Lavo;	jJ	FROGSPAWN_HIT
	f	Lavo;	jK	FROGSPAWN_PLACE
	f	Lavo;	jL	FROG_AMBIENT
	f	Ljm$c;	j	AMBIENT_BASALT_DELTAS_LOOP
	f	Lavo;	jM	FROG_DEATH
	f	Lavo;	jN	FROG_EAT
	f	Lavo;	jO	FROG_HURT
	f	Lavo;	jP	FROG_LAY_SPAWN
	f	Lavo;	jQ	FROG_LONG_JUMP
	f	Lavo;	jR	FROG_STEP
	f	Lavo;	jS	FROG_TONGUE
	f	Lavo;	jT	ROOTS_BREAK
	f	Lavo;	jU	ROOTS_STEP
	f	Lavo;	jV	ROOTS_PLACE
	f	Lavo;	jW	ROOTS_HIT
	f	Lavo;	jX	ROOTS_FALL
	f	Lavo;	jY	FURNACE_FIRE_CRACKLE
	f	Lavo;	jZ	GENERIC_BIG_FALL
	f	Lavo;	ja	FLOWERING_AZALEA_BREAK
	f	Lavo;	jb	FLOWERING_AZALEA_FALL
	f	Lavo;	jc	FLOWERING_AZALEA_HIT
	f	Lavo;	jd	FLOWERING_AZALEA_PLACE
	f	Lavo;	je	FLOWERING_AZALEA_STEP
	f	Lavo;	jf	FOX_AGGRO
	f	Lavo;	jg	FOX_AMBIENT
	f	Lavo;	jh	FOX_BITE
	f	Lavo;	ji	FOX_DEATH
	f	Lavo;	jj	FOX_EAT
	f	Lavo;	jk	FOX_HURT
	f	Lavo;	jl	FOX_SCREECH
	f	Lavo;	jm	FOX_SLEEP
	f	Lavo;	jn	FOX_SNIFF
	f	Lavo;	jo	FOX_SPIT
	f	Lavo;	jp	FOX_TELEPORT
	f	Lavo;	jq	SUSPICIOUS_SAND_BREAK
	f	Lavo;	jr	SUSPICIOUS_SAND_STEP
	f	Lavo;	js	SUSPICIOUS_SAND_PLACE
	f	Lavo;	jt	SUSPICIOUS_SAND_HIT
	f	Lavo;	ju	SUSPICIOUS_SAND_FALL
	f	Lavo;	jv	SUSPICIOUS_GRAVEL_BREAK
	f	Lavo;	jw	SUSPICIOUS_GRAVEL_STEP
	f	Lavo;	jx	SUSPICIOUS_GRAVEL_PLACE
	f	Lavo;	jy	SUSPICIOUS_GRAVEL_HIT
	f	Lavo;	jz	SUSPICIOUS_GRAVEL_FALL
	f	Lavo;	kA	GLOW_INK_SAC_USE
	f	Lavo;	kB	GLOW_ITEM_FRAME_ADD_ITEM
	f	Lavo;	kC	GLOW_ITEM_FRAME_BREAK
	f	Lavo;	kD	GLOW_ITEM_FRAME_PLACE
	f	Lavo;	kE	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Lavo;	kF	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Lavo;	kG	GLOW_SQUID_AMBIENT
	f	Lavo;	kH	GLOW_SQUID_DEATH
	f	Lavo;	kI	GLOW_SQUID_HURT
	f	Lavo;	kJ	GLOW_SQUID_SQUIRT
	f	Lavo;	kK	GOAT_AMBIENT
	f	Lavo;	kL	GOAT_DEATH
	f	Ljm$c;	k	AMBIENT_BASALT_DELTAS_MOOD
	f	Lavo;	kM	GOAT_EAT
	f	Lavo;	kN	GOAT_HURT
	f	Lavo;	kO	GOAT_LONG_JUMP
	f	Lavo;	kP	GOAT_MILK
	f	Lavo;	kQ	GOAT_PREPARE_RAM
	f	Lavo;	kR	GOAT_RAM_IMPACT
	f	Lavo;	kS	GOAT_HORN_BREAK
	f	Lavo;	kT	GOAT_HORN_PLAY
	f	Lavo;	kU	GOAT_SCREAMING_AMBIENT
	f	Lavo;	kV	GOAT_SCREAMING_DEATH
	f	Lavo;	kW	GOAT_SCREAMING_EAT
	f	Lavo;	kX	GOAT_SCREAMING_HURT
	f	Lavo;	kY	GOAT_SCREAMING_LONG_JUMP
	f	Lavo;	kZ	GOAT_SCREAMING_MILK
	f	Lavo;	ka	GENERIC_BURN
	f	Lavo;	kb	GENERIC_DEATH
	f	Lavo;	kc	GENERIC_DRINK
	f	Lavo;	kd	GENERIC_EAT
	f	Ljm$c;	ke	GENERIC_EXPLODE
	f	Lavo;	kf	GENERIC_EXTINGUISH_FIRE
	f	Lavo;	kg	GENERIC_HURT
	f	Lavo;	kh	GENERIC_SMALL_FALL
	f	Lavo;	ki	GENERIC_SPLASH
	f	Lavo;	kj	GENERIC_SWIM
	f	Lavo;	kk	GHAST_AMBIENT
	f	Lavo;	kl	GHAST_DEATH
	f	Lavo;	km	GHAST_HURT
	f	Lavo;	kn	GHAST_SCREAM
	f	Lavo;	ko	GHAST_SHOOT
	f	Lavo;	kp	GHAST_WARN
	f	Lavo;	kq	GILDED_BLACKSTONE_BREAK
	f	Lavo;	kr	GILDED_BLACKSTONE_FALL
	f	Lavo;	ks	GILDED_BLACKSTONE_HIT
	f	Lavo;	kt	GILDED_BLACKSTONE_PLACE
	f	Lavo;	ku	GILDED_BLACKSTONE_STEP
	f	Lavo;	kv	GLASS_BREAK
	f	Lavo;	kw	GLASS_FALL
	f	Lavo;	kx	GLASS_HIT
	f	Lavo;	ky	GLASS_PLACE
	f	Lavo;	kz	GLASS_STEP
	f	Lavo;	lA	HANGING_ROOTS_HIT
	f	Lavo;	lB	HANGING_ROOTS_PLACE
	f	Lavo;	lC	HANGING_ROOTS_STEP
	f	Lavo;	lD	HANGING_SIGN_STEP
	f	Lavo;	lE	HANGING_SIGN_BREAK
	f	Lavo;	lF	HANGING_SIGN_FALL
	f	Lavo;	lG	HANGING_SIGN_HIT
	f	Lavo;	lH	HANGING_SIGN_PLACE
	f	Lavo;	lI	HEAVY_CORE_BREAK
	f	Lavo;	lJ	HEAVY_CORE_FALL
	f	Lavo;	lK	HEAVY_CORE_HIT
	f	Lavo;	lL	HEAVY_CORE_PLACE
	f	Ljm$c;	l	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Lavo;	lM	HEAVY_CORE_STEP
	f	Lavo;	lN	NETHER_WOOD_HANGING_SIGN_STEP
	f	Lavo;	lO	NETHER_WOOD_HANGING_SIGN_BREAK
	f	Lavo;	lP	NETHER_WOOD_HANGING_SIGN_FALL
	f	Lavo;	lQ	NETHER_WOOD_HANGING_SIGN_HIT
	f	Lavo;	lR	NETHER_WOOD_HANGING_SIGN_PLACE
	f	Lavo;	lS	BAMBOO_WOOD_HANGING_SIGN_STEP
	f	Lavo;	lT	BAMBOO_WOOD_HANGING_SIGN_BREAK
	f	Lavo;	lU	BAMBOO_WOOD_HANGING_SIGN_FALL
	f	Lavo;	lV	BAMBOO_WOOD_HANGING_SIGN_HIT
	f	Lavo;	lW	BAMBOO_WOOD_HANGING_SIGN_PLACE
	f	Lavo;	lX	TRIAL_SPAWNER_BREAK
	f	Lavo;	lY	TRIAL_SPAWNER_STEP
	f	Lavo;	lZ	TRIAL_SPAWNER_PLACE
	f	Lavo;	la	GOAT_SCREAMING_PREPARE_RAM
	f	Lavo;	lb	GOAT_SCREAMING_RAM_IMPACT
	f	Lavo;	lc	GOAT_SCREAMING_HORN_BREAK
	f	Lavo;	ld	GOAT_STEP
	f	Lavo;	le	GRASS_BREAK
	f	Lavo;	lf	GRASS_FALL
	f	Lavo;	lg	GRASS_HIT
	f	Lavo;	lh	GRASS_PLACE
	f	Lavo;	li	GRASS_STEP
	f	Lavo;	lj	GRAVEL_BREAK
	f	Lavo;	lk	GRAVEL_FALL
	f	Lavo;	ll	GRAVEL_HIT
	f	Lavo;	lm	GRAVEL_PLACE
	f	Lavo;	ln	GRAVEL_STEP
	f	Lavo;	lo	GRINDSTONE_USE
	f	Lavo;	lp	GROWING_PLANT_CROP
	f	Lavo;	lq	GUARDIAN_AMBIENT
	f	Lavo;	lr	GUARDIAN_AMBIENT_LAND
	f	Lavo;	ls	GUARDIAN_ATTACK
	f	Lavo;	lt	GUARDIAN_DEATH
	f	Lavo;	lu	GUARDIAN_DEATH_LAND
	f	Lavo;	lv	GUARDIAN_FLOP
	f	Lavo;	lw	GUARDIAN_HURT
	f	Lavo;	lx	GUARDIAN_HURT_LAND
	f	Lavo;	ly	HANGING_ROOTS_BREAK
	f	Lavo;	lz	HANGING_ROOTS_FALL
	f	Lavo;	mA	HONEY_BLOCK_SLIDE
	f	Lavo;	mB	HONEY_BLOCK_STEP
	f	Lavo;	mC	HONEYCOMB_WAX_ON
	f	Lavo;	mD	HONEY_DRINK
	f	I	mE	GOAT_HORN_VARIANT_COUNT
	f	Lcom/google/common/collect/ImmutableList;	mF	GOAT_HORN_SOUND_VARIANTS
	f	Lavo;	mG	HORSE_AMBIENT
	f	Lavo;	mH	HORSE_ANGRY
	f	Lavo;	mI	HORSE_ARMOR
	f	Lavo;	mJ	HORSE_BREATHE
	f	Lavo;	mK	HORSE_DEATH
	f	Lavo;	mL	HORSE_EAT
	f	Ljm$c;	m	AMBIENT_CRIMSON_FOREST_LOOP
	f	Lavo;	mM	HORSE_GALLOP
	f	Lavo;	mN	HORSE_HURT
	f	Lavo;	mO	HORSE_JUMP
	f	Lavo;	mP	HORSE_LAND
	f	Lavo;	mQ	HORSE_SADDLE
	f	Lavo;	mR	HORSE_STEP
	f	Lavo;	mS	HORSE_STEP_WOOD
	f	Lavo;	mT	HOSTILE_BIG_FALL
	f	Lavo;	mU	HOSTILE_DEATH
	f	Lavo;	mV	HOSTILE_HURT
	f	Lavo;	mW	HOSTILE_SMALL_FALL
	f	Lavo;	mX	HOSTILE_SPLASH
	f	Lavo;	mY	HOSTILE_SWIM
	f	Lavo;	mZ	HUSK_AMBIENT
	f	Lavo;	ma	TRIAL_SPAWNER_HIT
	f	Lavo;	mb	TRIAL_SPAWNER_FALL
	f	Lavo;	mc	TRIAL_SPAWNER_SPAWN_MOB
	f	Lavo;	md	TRIAL_SPAWNER_ABOUT_TO_SPAWN_ITEM
	f	Lavo;	me	TRIAL_SPAWNER_SPAWN_ITEM
	f	Lavo;	mf	TRIAL_SPAWNER_SPAWN_ITEM_BEGIN
	f	Lavo;	mg	TRIAL_SPAWNER_DETECT_PLAYER
	f	Lavo;	mh	TRIAL_SPAWNER_OMINOUS_ACTIVATE
	f	Lavo;	mi	TRIAL_SPAWNER_AMBIENT
	f	Lavo;	mj	TRIAL_SPAWNER_AMBIENT_OMINOUS
	f	Lavo;	mk	TRIAL_SPAWNER_OPEN_SHUTTER
	f	Lavo;	ml	TRIAL_SPAWNER_CLOSE_SHUTTER
	f	Lavo;	mm	TRIAL_SPAWNER_EJECT_ITEM
	f	Lavo;	mn	HOE_TILL
	f	Lavo;	mo	HOGLIN_AMBIENT
	f	Lavo;	mp	HOGLIN_ANGRY
	f	Lavo;	mq	HOGLIN_ATTACK
	f	Lavo;	mr	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lavo;	ms	HOGLIN_DEATH
	f	Lavo;	mt	HOGLIN_HURT
	f	Lavo;	mu	HOGLIN_RETREAT
	f	Lavo;	mv	HOGLIN_STEP
	f	Lavo;	mw	HONEY_BLOCK_BREAK
	f	Lavo;	mx	HONEY_BLOCK_FALL
	f	Lavo;	my	HONEY_BLOCK_HIT
	f	Lavo;	mz	HONEY_BLOCK_PLACE
	f	Lavo;	nA	ITEM_FRAME_ROTATE_ITEM
	f	Lavo;	nB	ITEM_BREAK
	f	Lavo;	nC	ITEM_PICKUP
	f	Lavo;	nD	LADDER_BREAK
	f	Lavo;	nE	LADDER_FALL
	f	Lavo;	nF	LADDER_HIT
	f	Lavo;	nG	LADDER_PLACE
	f	Lavo;	nH	LADDER_STEP
	f	Lavo;	nI	LANTERN_BREAK
	f	Lavo;	nJ	LANTERN_FALL
	f	Lavo;	nK	LANTERN_HIT
	f	Lavo;	nL	LANTERN_PLACE
	f	Ljm$c;	n	AMBIENT_CRIMSON_FOREST_MOOD
	f	Lavo;	nM	LANTERN_STEP
	f	Lavo;	nN	LARGE_AMETHYST_BUD_BREAK
	f	Lavo;	nO	LARGE_AMETHYST_BUD_PLACE
	f	Lavo;	nP	LAVA_AMBIENT
	f	Lavo;	nQ	LAVA_EXTINGUISH
	f	Lavo;	nR	LAVA_POP
	f	Lavo;	nS	LEASH_KNOT_BREAK
	f	Lavo;	nT	LEASH_KNOT_PLACE
	f	Lavo;	nU	LEVER_CLICK
	f	Lavo;	nV	LIGHTNING_BOLT_IMPACT
	f	Lavo;	nW	LIGHTNING_BOLT_THUNDER
	f	Lavo;	nX	LINGERING_POTION_THROW
	f	Lavo;	nY	LLAMA_AMBIENT
	f	Lavo;	nZ	LLAMA_ANGRY
	f	Lavo;	na	HUSK_CONVERTED_TO_ZOMBIE
	f	Lavo;	nb	HUSK_DEATH
	f	Lavo;	nc	HUSK_HURT
	f	Lavo;	nd	HUSK_STEP
	f	Lavo;	ne	ILLUSIONER_AMBIENT
	f	Lavo;	nf	ILLUSIONER_CAST_SPELL
	f	Lavo;	ng	ILLUSIONER_DEATH
	f	Lavo;	nh	ILLUSIONER_HURT
	f	Lavo;	ni	ILLUSIONER_MIRROR_MOVE
	f	Lavo;	nj	ILLUSIONER_PREPARE_BLINDNESS
	f	Lavo;	nk	ILLUSIONER_PREPARE_MIRROR
	f	Lavo;	nl	INK_SAC_USE
	f	Lavo;	nm	IRON_DOOR_CLOSE
	f	Lavo;	nn	IRON_DOOR_OPEN
	f	Lavo;	no	IRON_GOLEM_ATTACK
	f	Lavo;	np	IRON_GOLEM_DAMAGE
	f	Lavo;	nq	IRON_GOLEM_DEATH
	f	Lavo;	nr	IRON_GOLEM_HURT
	f	Lavo;	ns	IRON_GOLEM_REPAIR
	f	Lavo;	nt	IRON_GOLEM_STEP
	f	Lavo;	nu	IRON_TRAPDOOR_CLOSE
	f	Lavo;	nv	IRON_TRAPDOOR_OPEN
	f	Lavo;	nw	ITEM_FRAME_ADD_ITEM
	f	Lavo;	nx	ITEM_FRAME_BREAK
	f	Lavo;	ny	ITEM_FRAME_PLACE
	f	Lavo;	nz	ITEM_FRAME_REMOVE_ITEM
	f	Lavo;	oA	MANGROVE_ROOTS_PLACE
	f	Lavo;	oB	MANGROVE_ROOTS_STEP
	f	Lavo;	oC	MEDIUM_AMETHYST_BUD_BREAK
	f	Lavo;	oD	MEDIUM_AMETHYST_BUD_PLACE
	f	Lavo;	oE	METAL_BREAK
	f	Lavo;	oF	METAL_FALL
	f	Lavo;	oG	METAL_HIT
	f	Lavo;	oH	METAL_PLACE
	f	Lavo;	oI	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	oJ	METAL_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	oK	METAL_STEP
	f	Lavo;	oL	MINECART_INSIDE_UNDERWATER
	f	Ljm$c;	o	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Lavo;	oM	MINECART_INSIDE
	f	Lavo;	oN	MINECART_RIDING
	f	Lavo;	oO	MOOSHROOM_CONVERT
	f	Lavo;	oP	MOOSHROOM_EAT
	f	Lavo;	oQ	MOOSHROOM_MILK
	f	Lavo;	oR	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Lavo;	oS	MOOSHROOM_SHEAR
	f	Lavo;	oT	MOSS_CARPET_BREAK
	f	Lavo;	oU	MOSS_CARPET_FALL
	f	Lavo;	oV	MOSS_CARPET_HIT
	f	Lavo;	oW	MOSS_CARPET_PLACE
	f	Lavo;	oX	MOSS_CARPET_STEP
	f	Lavo;	oY	PINK_PETALS_BREAK
	f	Lavo;	oZ	PINK_PETALS_FALL
	f	Lavo;	oa	LLAMA_CHEST
	f	Lavo;	ob	LLAMA_DEATH
	f	Lavo;	oc	LLAMA_EAT
	f	Lavo;	od	LLAMA_HURT
	f	Lavo;	oe	LLAMA_SPIT
	f	Lavo;	of	LLAMA_STEP
	f	Ljm;	og	LLAMA_SWAG
	f	Lavo;	oh	MAGMA_CUBE_DEATH_SMALL
	f	Lavo;	oi	LODESTONE_BREAK
	f	Lavo;	oj	LODESTONE_STEP
	f	Lavo;	ok	LODESTONE_PLACE
	f	Lavo;	ol	LODESTONE_HIT
	f	Lavo;	om	LODESTONE_FALL
	f	Lavo;	on	LODESTONE_COMPASS_LOCK
	f	Lavo;	oo	MACE_SMASH_AIR
	f	Lavo;	op	MACE_SMASH_GROUND
	f	Lavo;	oq	MACE_SMASH_GROUND_HEAVY
	f	Lavo;	or	MAGMA_CUBE_DEATH
	f	Lavo;	os	MAGMA_CUBE_HURT
	f	Lavo;	ot	MAGMA_CUBE_HURT_SMALL
	f	Lavo;	ou	MAGMA_CUBE_JUMP
	f	Lavo;	ov	MAGMA_CUBE_SQUISH
	f	Lavo;	ow	MAGMA_CUBE_SQUISH_SMALL
	f	Lavo;	ox	MANGROVE_ROOTS_BREAK
	f	Lavo;	oy	MANGROVE_ROOTS_FALL
	f	Lavo;	oz	MANGROVE_ROOTS_HIT
	f	Lavo;	pA	MULE_DEATH
	f	Lavo;	pB	MULE_EAT
	f	Lavo;	pC	MULE_HURT
	f	Lavo;	pD	MULE_JUMP
	f	Ljm$c;	pE	MUSIC_CREATIVE
	f	Ljm$c;	pF	MUSIC_CREDITS
	f	Ljm$c;	pG	MUSIC_DISC_5
	f	Ljm$c;	pH	MUSIC_DISC_11
	f	Ljm$c;	pI	MUSIC_DISC_13
	f	Ljm$c;	pJ	MUSIC_DISC_BLOCKS
	f	Ljm$c;	pK	MUSIC_DISC_CAT
	f	Ljm$c;	pL	MUSIC_DISC_CHIRP
	f	Ljm$c;	p	AMBIENT_NETHER_WASTES_LOOP
	f	Ljm$c;	pM	MUSIC_DISC_FAR
	f	Ljm$c;	pN	MUSIC_DISC_MALL
	f	Ljm$c;	pO	MUSIC_DISC_MELLOHI
	f	Ljm$c;	pP	MUSIC_DISC_PIGSTEP
	f	Ljm$c;	pQ	MUSIC_DISC_STAL
	f	Ljm$c;	pR	MUSIC_DISC_STRAD
	f	Ljm$c;	pS	MUSIC_DISC_WAIT
	f	Ljm$c;	pT	MUSIC_DISC_WARD
	f	Ljm$c;	pU	MUSIC_DISC_OTHERSIDE
	f	Ljm$c;	pV	MUSIC_DISC_RELIC
	f	Ljm$c;	pW	MUSIC_DISC_CREATOR
	f	Ljm$c;	pX	MUSIC_DISC_CREATOR_MUSIC_BOX
	f	Ljm$c;	pY	MUSIC_DISC_PRECIPICE
	f	Ljm$c;	pZ	MUSIC_DRAGON
	f	Lavo;	pa	PINK_PETALS_HIT
	f	Lavo;	pb	PINK_PETALS_PLACE
	f	Lavo;	pc	PINK_PETALS_STEP
	f	Lavo;	pd	MOSS_BREAK
	f	Lavo;	pe	MOSS_FALL
	f	Lavo;	pf	MOSS_HIT
	f	Lavo;	pg	MOSS_PLACE
	f	Lavo;	ph	MOSS_STEP
	f	Lavo;	pi	MUD_BREAK
	f	Lavo;	pj	MUD_FALL
	f	Lavo;	pk	MUD_HIT
	f	Lavo;	pl	MUD_PLACE
	f	Lavo;	pm	MUD_STEP
	f	Lavo;	pn	MUD_BRICKS_BREAK
	f	Lavo;	po	MUD_BRICKS_FALL
	f	Lavo;	pp	MUD_BRICKS_HIT
	f	Lavo;	pq	MUD_BRICKS_PLACE
	f	Lavo;	pr	MUD_BRICKS_STEP
	f	Lavo;	ps	MUDDY_MANGROVE_ROOTS_BREAK
	f	Lavo;	pt	MUDDY_MANGROVE_ROOTS_FALL
	f	Lavo;	pu	MUDDY_MANGROVE_ROOTS_HIT
	f	Lavo;	pv	MUDDY_MANGROVE_ROOTS_PLACE
	f	Lavo;	pw	MUDDY_MANGROVE_ROOTS_STEP
	f	Lavo;	px	MULE_AMBIENT
	f	Lavo;	py	MULE_ANGRY
	f	Lavo;	pz	MULE_CHEST
	f	Ljm$c;	qA	MUSIC_BIOME_BAMBOO_JUNGLE
	f	Ljm$c;	qB	MUSIC_UNDER_WATER
	f	Lavo;	qC	NETHER_BRICKS_BREAK
	f	Lavo;	qD	NETHER_BRICKS_STEP
	f	Lavo;	qE	NETHER_BRICKS_PLACE
	f	Lavo;	qF	NETHER_BRICKS_HIT
	f	Lavo;	qG	NETHER_BRICKS_FALL
	f	Lavo;	qH	NETHER_WART_BREAK
	f	Lavo;	qI	NETHER_WART_PLANTED
	f	Lavo;	qJ	NETHER_WOOD_BREAK
	f	Lavo;	qK	NETHER_WOOD_FALL
	f	Lavo;	qL	NETHER_WOOD_HIT
	f	Ljm$c;	q	AMBIENT_NETHER_WASTES_MOOD
	f	Lavo;	qM	NETHER_WOOD_PLACE
	f	Lavo;	qN	NETHER_WOOD_STEP
	f	Lavo;	qO	NETHER_WOOD_DOOR_CLOSE
	f	Lavo;	qP	NETHER_WOOD_DOOR_OPEN
	f	Lavo;	qQ	NETHER_WOOD_TRAPDOOR_CLOSE
	f	Lavo;	qR	NETHER_WOOD_TRAPDOOR_OPEN
	f	Lavo;	qS	NETHER_WOOD_BUTTON_CLICK_OFF
	f	Lavo;	qT	NETHER_WOOD_BUTTON_CLICK_ON
	f	Lavo;	qU	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	qV	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	qW	NETHER_WOOD_FENCE_GATE_CLOSE
	f	Lavo;	qX	NETHER_WOOD_FENCE_GATE_OPEN
	f	Lavo;	qY	EMPTY
	f	Lavo;	qZ	PACKED_MUD_BREAK
	f	Ljm$c;	qa	MUSIC_END
	f	Ljm$c;	qb	MUSIC_GAME
	f	Ljm$c;	qc	MUSIC_MENU
	f	Ljm$c;	qd	MUSIC_BIOME_BASALT_DELTAS
	f	Ljm$c;	qe	MUSIC_BIOME_CRIMSON_FOREST
	f	Ljm$c;	qf	MUSIC_BIOME_DEEP_DARK
	f	Ljm$c;	qg	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Ljm$c;	qh	MUSIC_BIOME_GROVE
	f	Ljm$c;	qi	MUSIC_BIOME_JAGGED_PEAKS
	f	Ljm$c;	qj	MUSIC_BIOME_LUSH_CAVES
	f	Ljm$c;	qk	MUSIC_BIOME_SWAMP
	f	Ljm$c;	ql	MUSIC_BIOME_FOREST
	f	Ljm$c;	qm	MUSIC_BIOME_OLD_GROWTH_TAIGA
	f	Ljm$c;	qn	MUSIC_BIOME_MEADOW
	f	Ljm$c;	qo	MUSIC_BIOME_CHERRY_GROVE
	f	Ljm$c;	qp	MUSIC_BIOME_NETHER_WASTES
	f	Ljm$c;	qq	MUSIC_BIOME_FROZEN_PEAKS
	f	Ljm$c;	qr	MUSIC_BIOME_SNOWY_SLOPES
	f	Ljm$c;	qs	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Ljm$c;	qt	MUSIC_BIOME_STONY_PEAKS
	f	Ljm$c;	qu	MUSIC_BIOME_WARPED_FOREST
	f	Ljm$c;	qv	MUSIC_BIOME_FLOWER_FOREST
	f	Ljm$c;	qw	MUSIC_BIOME_DESERT
	f	Ljm$c;	qx	MUSIC_BIOME_BADLANDS
	f	Ljm$c;	qy	MUSIC_BIOME_JUNGLE
	f	Ljm$c;	qz	MUSIC_BIOME_SPARSE_JUNGLE
	f	Lavo;	rA	WEEPING_VINES_PLACE
	f	Lavo;	rB	WEEPING_VINES_HIT
	f	Lavo;	rC	WEEPING_VINES_FALL
	f	Lavo;	rD	WART_BLOCK_BREAK
	f	Lavo;	rE	WART_BLOCK_STEP
	f	Lavo;	rF	WART_BLOCK_PLACE
	f	Lavo;	rG	WART_BLOCK_HIT
	f	Lavo;	rH	WART_BLOCK_FALL
	f	Lavo;	rI	NETHERITE_BLOCK_BREAK
	f	Lavo;	rJ	NETHERITE_BLOCK_STEP
	f	Lavo;	rK	NETHERITE_BLOCK_PLACE
	f	Lavo;	rL	NETHERITE_BLOCK_HIT
	f	Ljm$c;	r	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Lavo;	rM	NETHERITE_BLOCK_FALL
	f	Lavo;	rN	NETHERRACK_BREAK
	f	Lavo;	rO	NETHERRACK_STEP
	f	Lavo;	rP	NETHERRACK_PLACE
	f	Lavo;	rQ	NETHERRACK_HIT
	f	Lavo;	rR	NETHERRACK_FALL
	f	Ljm$c;	rS	NOTE_BLOCK_BASEDRUM
	f	Ljm$c;	rT	NOTE_BLOCK_BASS
	f	Ljm$c;	rU	NOTE_BLOCK_BELL
	f	Ljm$c;	rV	NOTE_BLOCK_CHIME
	f	Ljm$c;	rW	NOTE_BLOCK_FLUTE
	f	Ljm$c;	rX	NOTE_BLOCK_GUITAR
	f	Ljm$c;	rY	NOTE_BLOCK_HARP
	f	Ljm$c;	rZ	NOTE_BLOCK_HAT
	f	Lavo;	ra	PACKED_MUD_FALL
	f	Lavo;	rb	PACKED_MUD_HIT
	f	Lavo;	rc	PACKED_MUD_PLACE
	f	Lavo;	rd	PACKED_MUD_STEP
	f	Lavo;	re	STEM_BREAK
	f	Lavo;	rf	STEM_STEP
	f	Lavo;	rg	STEM_PLACE
	f	Lavo;	rh	STEM_HIT
	f	Lavo;	ri	STEM_FALL
	f	Lavo;	rj	NYLIUM_BREAK
	f	Lavo;	rk	NYLIUM_STEP
	f	Lavo;	rl	NYLIUM_PLACE
	f	Lavo;	rm	NYLIUM_HIT
	f	Lavo;	rn	NYLIUM_FALL
	f	Lavo;	ro	NETHER_SPROUTS_BREAK
	f	Lavo;	rp	NETHER_SPROUTS_STEP
	f	Lavo;	rq	NETHER_SPROUTS_PLACE
	f	Lavo;	rr	NETHER_SPROUTS_HIT
	f	Lavo;	rs	NETHER_SPROUTS_FALL
	f	Lavo;	rt	FUNGUS_BREAK
	f	Lavo;	ru	FUNGUS_STEP
	f	Lavo;	rv	FUNGUS_PLACE
	f	Lavo;	rw	FUNGUS_HIT
	f	Lavo;	rx	FUNGUS_FALL
	f	Lavo;	ry	WEEPING_VINES_BREAK
	f	Lavo;	rz	WEEPING_VINES_STEP
	f	Lavo;	sA	PANDA_CANT_BREED
	f	Lavo;	sB	PANDA_AGGRESSIVE_AMBIENT
	f	Lavo;	sC	PANDA_WORRIED_AMBIENT
	f	Lavo;	sD	PANDA_HURT
	f	Lavo;	sE	PANDA_BITE
	f	Lavo;	sF	PARROT_AMBIENT
	f	Lavo;	sG	PARROT_DEATH
	f	Lavo;	sH	PARROT_EAT
	f	Lavo;	sI	PARROT_FLY
	f	Lavo;	sJ	PARROT_HURT
	f	Lavo;	sK	PARROT_IMITATE_BLAZE
	f	Lavo;	sL	PARROT_IMITATE_BOGGED
	f	Ljm$c;	s	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Lavo;	sM	PARROT_IMITATE_BREEZE
	f	Lavo;	sN	PARROT_IMITATE_CREEPER
	f	Lavo;	sO	PARROT_IMITATE_DROWNED
	f	Lavo;	sP	PARROT_IMITATE_ELDER_GUARDIAN
	f	Lavo;	sQ	PARROT_IMITATE_ENDER_DRAGON
	f	Lavo;	sR	PARROT_IMITATE_ENDERMITE
	f	Lavo;	sS	PARROT_IMITATE_EVOKER
	f	Lavo;	sT	PARROT_IMITATE_GHAST
	f	Lavo;	sU	PARROT_IMITATE_GUARDIAN
	f	Lavo;	sV	PARROT_IMITATE_HOGLIN
	f	Lavo;	sW	PARROT_IMITATE_HUSK
	f	Lavo;	sX	PARROT_IMITATE_ILLUSIONER
	f	Lavo;	sY	PARROT_IMITATE_MAGMA_CUBE
	f	Lavo;	sZ	PARROT_IMITATE_PHANTOM
	f	Ljm$c;	sa	NOTE_BLOCK_PLING
	f	Ljm$c;	sb	NOTE_BLOCK_SNARE
	f	Ljm$c;	sc	NOTE_BLOCK_XYLOPHONE
	f	Ljm$c;	sd	NOTE_BLOCK_IRON_XYLOPHONE
	f	Ljm$c;	se	NOTE_BLOCK_COW_BELL
	f	Ljm$c;	sf	NOTE_BLOCK_DIDGERIDOO
	f	Ljm$c;	sg	NOTE_BLOCK_BIT
	f	Ljm$c;	sh	NOTE_BLOCK_BANJO
	f	Ljm$c;	si	NOTE_BLOCK_IMITATE_ZOMBIE
	f	Ljm$c;	sj	NOTE_BLOCK_IMITATE_SKELETON
	f	Ljm$c;	sk	NOTE_BLOCK_IMITATE_CREEPER
	f	Ljm$c;	sl	NOTE_BLOCK_IMITATE_ENDER_DRAGON
	f	Ljm$c;	sm	NOTE_BLOCK_IMITATE_WITHER_SKELETON
	f	Ljm$c;	sn	NOTE_BLOCK_IMITATE_PIGLIN
	f	Lavo;	so	OCELOT_HURT
	f	Lavo;	sp	OCELOT_AMBIENT
	f	Lavo;	sq	OCELOT_DEATH
	f	Lavo;	sr	OMINOUS_BOTTLE_DISPOSE
	f	Lavo;	ss	PAINTING_BREAK
	f	Lavo;	st	PAINTING_PLACE
	f	Lavo;	su	PANDA_PRE_SNEEZE
	f	Lavo;	sv	PANDA_SNEEZE
	f	Lavo;	sw	PANDA_AMBIENT
	f	Lavo;	sx	PANDA_DEATH
	f	Lavo;	sy	PANDA_EAT
	f	Lavo;	sz	PANDA_STEP
	f	Lavo;	tA	PIG_AMBIENT
	f	Lavo;	tB	PIG_DEATH
	f	Lavo;	tC	PIG_HURT
	f	Lavo;	tD	PIG_SADDLE
	f	Lavo;	tE	PIG_STEP
	f	Lavo;	tF	PIGLIN_ADMIRING_ITEM
	f	Lavo;	tG	PIGLIN_AMBIENT
	f	Lavo;	tH	PIGLIN_ANGRY
	f	Lavo;	tI	PIGLIN_CELEBRATE
	f	Lavo;	tJ	PIGLIN_DEATH
	f	Lavo;	tK	PIGLIN_JEALOUS
	f	Lavo;	tL	PIGLIN_HURT
	f	Ljm$c;	t	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Lavo;	tM	PIGLIN_RETREAT
	f	Lavo;	tN	PIGLIN_STEP
	f	Lavo;	tO	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Lavo;	tP	PIGLIN_BRUTE_AMBIENT
	f	Lavo;	tQ	PIGLIN_BRUTE_ANGRY
	f	Lavo;	tR	PIGLIN_BRUTE_DEATH
	f	Lavo;	tS	PIGLIN_BRUTE_HURT
	f	Lavo;	tT	PIGLIN_BRUTE_STEP
	f	Lavo;	tU	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Lavo;	tV	PILLAGER_AMBIENT
	f	Lavo;	tW	PILLAGER_CELEBRATE
	f	Lavo;	tX	PILLAGER_DEATH
	f	Lavo;	tY	PILLAGER_HURT
	f	Lavo;	tZ	PISTON_CONTRACT
	f	Lavo;	ta	PARROT_IMITATE_PIGLIN
	f	Lavo;	tb	PARROT_IMITATE_PIGLIN_BRUTE
	f	Lavo;	tc	PARROT_IMITATE_PILLAGER
	f	Lavo;	td	PARROT_IMITATE_RAVAGER
	f	Lavo;	te	PARROT_IMITATE_SHULKER
	f	Lavo;	tf	PARROT_IMITATE_SILVERFISH
	f	Lavo;	tg	PARROT_IMITATE_SKELETON
	f	Lavo;	th	PARROT_IMITATE_SLIME
	f	Lavo;	ti	PARROT_IMITATE_SPIDER
	f	Lavo;	tj	PARROT_IMITATE_STRAY
	f	Lavo;	tk	PARROT_IMITATE_VEX
	f	Lavo;	tl	PARROT_IMITATE_VINDICATOR
	f	Lavo;	tm	PARROT_IMITATE_WARDEN
	f	Lavo;	tn	PARROT_IMITATE_WITCH
	f	Lavo;	to	PARROT_IMITATE_WITHER
	f	Lavo;	tp	PARROT_IMITATE_WITHER_SKELETON
	f	Lavo;	tq	PARROT_IMITATE_ZOGLIN
	f	Lavo;	tr	PARROT_IMITATE_ZOMBIE
	f	Lavo;	ts	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Lavo;	tt	PARROT_STEP
	f	Lavo;	tu	PHANTOM_AMBIENT
	f	Lavo;	tv	PHANTOM_BITE
	f	Lavo;	tw	PHANTOM_DEATH
	f	Lavo;	tx	PHANTOM_FLAP
	f	Lavo;	ty	PHANTOM_HURT
	f	Lavo;	tz	PHANTOM_SWOOP
	f	Lavo;	uA	POLAR_BEAR_STEP
	f	Lavo;	uB	POLAR_BEAR_WARNING
	f	Lavo;	uC	POLISHED_DEEPSLATE_BREAK
	f	Lavo;	uD	POLISHED_DEEPSLATE_FALL
	f	Lavo;	uE	POLISHED_DEEPSLATE_HIT
	f	Lavo;	uF	POLISHED_DEEPSLATE_PLACE
	f	Lavo;	uG	POLISHED_DEEPSLATE_STEP
	f	Lavo;	uH	PORTAL_AMBIENT
	f	Lavo;	uI	PORTAL_TRAVEL
	f	Lavo;	uJ	PORTAL_TRIGGER
	f	Lavo;	uK	POWDER_SNOW_BREAK
	f	Lavo;	uL	POWDER_SNOW_FALL
	f	Ljm$c;	u	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Lavo;	uM	POWDER_SNOW_HIT
	f	Lavo;	uN	POWDER_SNOW_PLACE
	f	Lavo;	uO	POWDER_SNOW_STEP
	f	Lavo;	uP	PUFFER_FISH_AMBIENT
	f	Lavo;	uQ	PUFFER_FISH_BLOW_OUT
	f	Lavo;	uR	PUFFER_FISH_BLOW_UP
	f	Lavo;	uS	PUFFER_FISH_DEATH
	f	Lavo;	uT	PUFFER_FISH_FLOP
	f	Lavo;	uU	PUFFER_FISH_HURT
	f	Lavo;	uV	PUFFER_FISH_STING
	f	Lavo;	uW	PUMPKIN_CARVE
	f	Lavo;	uX	RABBIT_AMBIENT
	f	Lavo;	uY	RABBIT_ATTACK
	f	Lavo;	uZ	RABBIT_DEATH
	f	Lavo;	ua	PISTON_EXTEND
	f	Lavo;	ub	PLAYER_ATTACK_CRIT
	f	Lavo;	uc	PLAYER_ATTACK_KNOCKBACK
	f	Lavo;	ud	PLAYER_ATTACK_NODAMAGE
	f	Lavo;	ue	PLAYER_ATTACK_STRONG
	f	Lavo;	uf	PLAYER_ATTACK_SWEEP
	f	Lavo;	ug	PLAYER_ATTACK_WEAK
	f	Lavo;	uh	PLAYER_BIG_FALL
	f	Lavo;	ui	PLAYER_BREATH
	f	Lavo;	uj	PLAYER_BURP
	f	Lavo;	uk	PLAYER_DEATH
	f	Lavo;	ul	PLAYER_HURT
	f	Lavo;	um	PLAYER_HURT_DROWN
	f	Lavo;	un	PLAYER_HURT_FREEZE
	f	Lavo;	uo	PLAYER_HURT_ON_FIRE
	f	Lavo;	up	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Lavo;	uq	PLAYER_LEVELUP
	f	Lavo;	ur	PLAYER_SMALL_FALL
	f	Lavo;	us	PLAYER_SPLASH
	f	Lavo;	ut	PLAYER_SPLASH_HIGH_SPEED
	f	Lavo;	uu	PLAYER_SWIM
	f	Lavo;	uv	PLAYER_TELEPORT
	f	Lavo;	uw	POLAR_BEAR_AMBIENT
	f	Lavo;	ux	POLAR_BEAR_AMBIENT_BABY
	f	Lavo;	uy	POLAR_BEAR_DEATH
	f	Lavo;	uz	POLAR_BEAR_HURT
	f	Lavo;	vA	ROOTED_DIRT_BREAK
	f	Lavo;	vB	ROOTED_DIRT_FALL
	f	Lavo;	vC	ROOTED_DIRT_HIT
	f	Lavo;	vD	ROOTED_DIRT_PLACE
	f	Lavo;	vE	ROOTED_DIRT_STEP
	f	Lavo;	vF	SALMON_AMBIENT
	f	Lavo;	vG	SALMON_DEATH
	f	Lavo;	vH	SALMON_FLOP
	f	Lavo;	vI	SALMON_HURT
	f	Lavo;	vJ	SAND_BREAK
	f	Lavo;	vK	SAND_FALL
	f	Lavo;	vL	SAND_HIT
	f	Ljm$c;	v	AMBIENT_WARPED_FOREST_LOOP
	f	Lavo;	vM	SAND_PLACE
	f	Lavo;	vN	SAND_STEP
	f	Lavo;	vO	SCAFFOLDING_BREAK
	f	Lavo;	vP	SCAFFOLDING_FALL
	f	Lavo;	vQ	SCAFFOLDING_HIT
	f	Lavo;	vR	SCAFFOLDING_PLACE
	f	Lavo;	vS	SCAFFOLDING_STEP
	f	Lavo;	vT	SCULK_BLOCK_SPREAD
	f	Lavo;	vU	SCULK_BLOCK_CHARGE
	f	Lavo;	vV	SCULK_BLOCK_BREAK
	f	Lavo;	vW	SCULK_BLOCK_FALL
	f	Lavo;	vX	SCULK_BLOCK_HIT
	f	Lavo;	vY	SCULK_BLOCK_PLACE
	f	Lavo;	vZ	SCULK_BLOCK_STEP
	f	Lavo;	va	RABBIT_HURT
	f	Lavo;	vb	RABBIT_JUMP
	f	Ljm$c;	vc	RAID_HORN
	f	Lavo;	vd	RAVAGER_AMBIENT
	f	Lavo;	ve	RAVAGER_ATTACK
	f	Lavo;	vf	RAVAGER_CELEBRATE
	f	Lavo;	vg	RAVAGER_DEATH
	f	Lavo;	vh	RAVAGER_HURT
	f	Lavo;	vi	RAVAGER_STEP
	f	Lavo;	vj	RAVAGER_STUNNED
	f	Lavo;	vk	RAVAGER_ROAR
	f	Lavo;	vl	NETHER_GOLD_ORE_BREAK
	f	Lavo;	vm	NETHER_GOLD_ORE_FALL
	f	Lavo;	vn	NETHER_GOLD_ORE_HIT
	f	Lavo;	vo	NETHER_GOLD_ORE_PLACE
	f	Lavo;	vp	NETHER_GOLD_ORE_STEP
	f	Lavo;	vq	NETHER_ORE_BREAK
	f	Lavo;	vr	NETHER_ORE_FALL
	f	Lavo;	vs	NETHER_ORE_HIT
	f	Lavo;	vt	NETHER_ORE_PLACE
	f	Lavo;	vu	NETHER_ORE_STEP
	f	Lavo;	vv	REDSTONE_TORCH_BURNOUT
	f	Lavo;	vw	RESPAWN_ANCHOR_AMBIENT
	f	Lavo;	vx	RESPAWN_ANCHOR_CHARGE
	f	Ljm$c;	vy	RESPAWN_ANCHOR_DEPLETE
	f	Lavo;	vz	RESPAWN_ANCHOR_SET_SPAWN
	f	Lavo;	wA	SHEEP_HURT
	f	Lavo;	wB	SHEEP_SHEAR
	f	Lavo;	wC	SHEEP_STEP
	f	Lavo;	wD	SHIELD_BLOCK
	f	Lavo;	wE	SHIELD_BREAK
	f	Lavo;	wF	SHROOMLIGHT_BREAK
	f	Lavo;	wG	SHROOMLIGHT_STEP
	f	Lavo;	wH	SHROOMLIGHT_PLACE
	f	Lavo;	wI	SHROOMLIGHT_HIT
	f	Lavo;	wJ	SHROOMLIGHT_FALL
	f	Lavo;	wK	SHOVEL_FLATTEN
	f	Lavo;	wL	SHULKER_AMBIENT
	f	Ljm$c;	w	AMBIENT_WARPED_FOREST_MOOD
	f	Lavo;	wM	SHULKER_BOX_CLOSE
	f	Lavo;	wN	SHULKER_BOX_OPEN
	f	Lavo;	wO	SHULKER_BULLET_HIT
	f	Lavo;	wP	SHULKER_BULLET_HURT
	f	Lavo;	wQ	SHULKER_CLOSE
	f	Lavo;	wR	SHULKER_DEATH
	f	Lavo;	wS	SHULKER_HURT
	f	Lavo;	wT	SHULKER_HURT_CLOSED
	f	Lavo;	wU	SHULKER_OPEN
	f	Lavo;	wV	SHULKER_SHOOT
	f	Lavo;	wW	SHULKER_TELEPORT
	f	Lavo;	wX	SILVERFISH_AMBIENT
	f	Lavo;	wY	SILVERFISH_DEATH
	f	Lavo;	wZ	SILVERFISH_HURT
	f	Lavo;	wa	SCULK_CATALYST_BLOOM
	f	Lavo;	wb	SCULK_CATALYST_BREAK
	f	Lavo;	wc	SCULK_CATALYST_FALL
	f	Lavo;	wd	SCULK_CATALYST_HIT
	f	Lavo;	we	SCULK_CATALYST_PLACE
	f	Lavo;	wf	SCULK_CATALYST_STEP
	f	Lavo;	wg	SCULK_CLICKING
	f	Lavo;	wh	SCULK_CLICKING_STOP
	f	Lavo;	wi	SCULK_SENSOR_BREAK
	f	Lavo;	wj	SCULK_SENSOR_FALL
	f	Lavo;	wk	SCULK_SENSOR_HIT
	f	Lavo;	wl	SCULK_SENSOR_PLACE
	f	Lavo;	wm	SCULK_SENSOR_STEP
	f	Lavo;	wn	SCULK_SHRIEKER_BREAK
	f	Lavo;	wo	SCULK_SHRIEKER_FALL
	f	Lavo;	wp	SCULK_SHRIEKER_HIT
	f	Lavo;	wq	SCULK_SHRIEKER_PLACE
	f	Lavo;	wr	SCULK_SHRIEKER_SHRIEK
	f	Lavo;	ws	SCULK_SHRIEKER_STEP
	f	Lavo;	wt	SCULK_VEIN_BREAK
	f	Lavo;	wu	SCULK_VEIN_FALL
	f	Lavo;	wv	SCULK_VEIN_HIT
	f	Lavo;	ww	SCULK_VEIN_PLACE
	f	Lavo;	wx	SCULK_VEIN_STEP
	f	Lavo;	wy	SHEEP_AMBIENT
	f	Lavo;	wz	SHEEP_DEATH
	f	Lavo;	xA	SMALL_AMETHYST_BUD_PLACE
	f	Lavo;	xB	SMALL_DRIPLEAF_BREAK
	f	Lavo;	xC	SMALL_DRIPLEAF_FALL
	f	Lavo;	xD	SMALL_DRIPLEAF_HIT
	f	Lavo;	xE	SMALL_DRIPLEAF_PLACE
	f	Lavo;	xF	SMALL_DRIPLEAF_STEP
	f	Lavo;	xG	SOUL_SAND_BREAK
	f	Lavo;	xH	SOUL_SAND_STEP
	f	Lavo;	xI	SOUL_SAND_PLACE
	f	Lavo;	xJ	SOUL_SAND_HIT
	f	Lavo;	xK	SOUL_SAND_FALL
	f	Lavo;	xL	SOUL_SOIL_BREAK
	f	Lavo;	x	AMBIENT_UNDERWATER_ENTER
	f	Lavo;	xM	SOUL_SOIL_STEP
	f	Lavo;	xN	SOUL_SOIL_PLACE
	f	Lavo;	xO	SOUL_SOIL_HIT
	f	Lavo;	xP	SOUL_SOIL_FALL
	f	Ljm$c;	xQ	SOUL_ESCAPE
	f	Lavo;	xR	SPORE_BLOSSOM_BREAK
	f	Lavo;	xS	SPORE_BLOSSOM_FALL
	f	Lavo;	xT	SPORE_BLOSSOM_HIT
	f	Lavo;	xU	SPORE_BLOSSOM_PLACE
	f	Lavo;	xV	SPORE_BLOSSOM_STEP
	f	Lavo;	xW	STRIDER_AMBIENT
	f	Lavo;	xX	STRIDER_HAPPY
	f	Lavo;	xY	STRIDER_RETREAT
	f	Lavo;	xZ	STRIDER_DEATH
	f	Lavo;	xa	SILVERFISH_STEP
	f	Lavo;	xb	SKELETON_AMBIENT
	f	Lavo;	xc	SKELETON_CONVERTED_TO_STRAY
	f	Lavo;	xd	SKELETON_DEATH
	f	Lavo;	xe	SKELETON_HORSE_AMBIENT
	f	Lavo;	xf	SKELETON_HORSE_DEATH
	f	Lavo;	xg	SKELETON_HORSE_HURT
	f	Lavo;	xh	SKELETON_HORSE_SWIM
	f	Lavo;	xi	SKELETON_HORSE_AMBIENT_WATER
	f	Lavo;	xj	SKELETON_HORSE_GALLOP_WATER
	f	Lavo;	xk	SKELETON_HORSE_JUMP_WATER
	f	Lavo;	xl	SKELETON_HORSE_STEP_WATER
	f	Lavo;	xm	SKELETON_HURT
	f	Lavo;	xn	SKELETON_SHOOT
	f	Lavo;	xo	SKELETON_STEP
	f	Lavo;	xp	SLIME_ATTACK
	f	Lavo;	xq	SLIME_DEATH
	f	Lavo;	xr	SLIME_HURT
	f	Lavo;	xs	SLIME_JUMP
	f	Lavo;	xt	SLIME_SQUISH
	f	Lavo;	xu	SLIME_BLOCK_BREAK
	f	Lavo;	xv	SLIME_BLOCK_FALL
	f	Lavo;	xw	SLIME_BLOCK_HIT
	f	Lavo;	xx	SLIME_BLOCK_PLACE
	f	Lavo;	xy	SLIME_BLOCK_STEP
	f	Lavo;	xz	SMALL_AMETHYST_BUD_BREAK
	f	Lavo;	yA	SNOWBALL_THROW
	f	Lavo;	yB	SNOW_BREAK
	f	Lavo;	yC	SNOW_FALL
	f	Lavo;	yD	SNOW_GOLEM_AMBIENT
	f	Lavo;	yE	SNOW_GOLEM_DEATH
	f	Lavo;	yF	SNOW_GOLEM_HURT
	f	Lavo;	yG	SNOW_GOLEM_SHOOT
	f	Lavo;	yH	SNOW_GOLEM_SHEAR
	f	Lavo;	yI	SNOW_HIT
	f	Lavo;	yJ	SNOW_PLACE
	f	Lavo;	yK	SNOW_STEP
	f	Lavo;	yL	SPIDER_AMBIENT
	f	Lavo;	y	AMBIENT_UNDERWATER_EXIT
	f	Lavo;	yM	SPIDER_DEATH
	f	Lavo;	yN	SPIDER_HURT
	f	Lavo;	yO	SPIDER_STEP
	f	Lavo;	yP	SPLASH_POTION_BREAK
	f	Lavo;	yQ	SPLASH_POTION_THROW
	f	Lavo;	yR	SPONGE_BREAK
	f	Lavo;	yS	SPONGE_FALL
	f	Lavo;	yT	SPONGE_HIT
	f	Lavo;	yU	SPONGE_PLACE
	f	Lavo;	yV	SPONGE_STEP
	f	Lavo;	yW	SPONGE_ABSORB
	f	Lavo;	yX	SPYGLASS_USE
	f	Lavo;	yY	SPYGLASS_STOP_USING
	f	Lavo;	yZ	SQUID_AMBIENT
	f	Lavo;	ya	STRIDER_HURT
	f	Lavo;	yb	STRIDER_STEP
	f	Lavo;	yc	STRIDER_STEP_LAVA
	f	Lavo;	yd	STRIDER_EAT
	f	Lavo;	ye	STRIDER_SADDLE
	f	Lavo;	yf	SLIME_DEATH_SMALL
	f	Lavo;	yg	SLIME_HURT_SMALL
	f	Lavo;	yh	SLIME_JUMP_SMALL
	f	Lavo;	yi	SLIME_SQUISH_SMALL
	f	Lavo;	yj	SMITHING_TABLE_USE
	f	Lavo;	yk	SMOKER_SMOKE
	f	Lavo;	yl	SNIFFER_STEP
	f	Lavo;	ym	SNIFFER_EAT
	f	Lavo;	yn	SNIFFER_IDLE
	f	Lavo;	yo	SNIFFER_HURT
	f	Lavo;	yp	SNIFFER_DEATH
	f	Lavo;	yq	SNIFFER_DROP_SEED
	f	Lavo;	yr	SNIFFER_SCENTING
	f	Lavo;	ys	SNIFFER_SNIFFING
	f	Lavo;	yt	SNIFFER_SEARCHING
	f	Lavo;	yu	SNIFFER_DIGGING
	f	Lavo;	yv	SNIFFER_DIGGING_STOP
	f	Lavo;	yw	SNIFFER_HAPPY
	f	Lavo;	yx	SNIFFER_EGG_PLOP
	f	Lavo;	yy	SNIFFER_EGG_CRACK
	f	Lavo;	yz	SNIFFER_EGG_HATCH
	f	Lavo;	zA	TRIDENT_HIT
	f	Lavo;	zB	TRIDENT_HIT_GROUND
	f	Lavo;	zC	TRIDENT_RETURN
	f	Ljm;	zD	TRIDENT_RIPTIDE_1
	f	Ljm;	zE	TRIDENT_RIPTIDE_2
	f	Ljm;	zF	TRIDENT_RIPTIDE_3
	f	Ljm;	zG	TRIDENT_THROW
	f	Ljm;	zH	TRIDENT_THUNDER
	f	Lavo;	zI	TRIPWIRE_ATTACH
	f	Lavo;	zJ	TRIPWIRE_CLICK_OFF
	f	Lavo;	zK	TRIPWIRE_CLICK_ON
	f	Lavo;	zL	TRIPWIRE_DETACH
	f	Lavo;	z	AMBIENT_UNDERWATER_LOOP
	f	Lavo;	zM	TROPICAL_FISH_AMBIENT
	f	Lavo;	zN	TROPICAL_FISH_DEATH
	f	Lavo;	zO	TROPICAL_FISH_FLOP
	f	Lavo;	zP	TROPICAL_FISH_HURT
	f	Lavo;	zQ	TUFF_BREAK
	f	Lavo;	zR	TUFF_STEP
	f	Lavo;	zS	TUFF_PLACE
	f	Lavo;	zT	TUFF_HIT
	f	Lavo;	zU	TUFF_FALL
	f	Lavo;	zV	TUFF_BRICKS_BREAK
	f	Lavo;	zW	TUFF_BRICKS_FALL
	f	Lavo;	zX	TUFF_BRICKS_HIT
	f	Lavo;	zY	TUFF_BRICKS_PLACE
	f	Lavo;	zZ	TUFF_BRICKS_STEP
	f	Lavo;	za	SQUID_DEATH
	f	Lavo;	zb	SQUID_HURT
	f	Lavo;	zc	SQUID_SQUIRT
	f	Lavo;	zd	STONE_BREAK
	f	Lavo;	ze	STONE_BUTTON_CLICK_OFF
	f	Lavo;	zf	STONE_BUTTON_CLICK_ON
	f	Lavo;	zg	STONE_FALL
	f	Lavo;	zh	STONE_HIT
	f	Lavo;	zi	STONE_PLACE
	f	Lavo;	zj	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Lavo;	zk	STONE_PRESSURE_PLATE_CLICK_ON
	f	Lavo;	zl	STONE_STEP
	f	Lavo;	zm	STRAY_AMBIENT
	f	Lavo;	zn	STRAY_DEATH
	f	Lavo;	zo	STRAY_HURT
	f	Lavo;	zp	STRAY_STEP
	f	Lavo;	zq	SWEET_BERRY_BUSH_BREAK
	f	Lavo;	zr	SWEET_BERRY_BUSH_PLACE
	f	Lavo;	zs	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Lavo;	zt	TADPOLE_DEATH
	f	Lavo;	zu	TADPOLE_FLOP
	f	Lavo;	zv	TADPOLE_GROW_UP
	f	Lavo;	zw	TADPOLE_HURT
	f	Lavo;	zx	THORNS_HIT
	f	Lavo;	zy	TNT_PRIMED
	f	Lavo;	zz	TOTEM_USE
c	avq	net/minecraft/sounds/SoundCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Lavq;	b	$values
	f	Lavq;	a	MASTER
	f	Lavq;	b	MUSIC
	f	Lavq;	c	RECORDS
	f	Lavq;	d	WEATHER
	f	Lavq;	e	BLOCKS
	f	Lavq;	f	HOSTILE
	f	Lavq;	g	NEUTRAL
	f	Lavq;	h	PLAYERS
	f	Lavq;	i	AMBIENT
	f	Lavq;	j	VOICE
	f	Ljava/lang/String;	k	name
	f	[Lavq;	l	$VALUES
c	avs	net/minecraft/stats/RecipeBook
	m	()Lavt;	a	getBookSettings
	m	(Lakr;)V	a	add
		p	1		id
	m	(Lavs;)V	a	copyOverData
		p	1		book
	m	(Lavt;)V	a	setBookSettings
		p	1		options
	m	(Lcri;)Z	a	isFiltering
		p	1		handler
	m	(Lcrj;)Z	a	isOpen
		p	1		category
	m	(Lcrj;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Lcrj;ZZ)V	a	setBookSetting
		p	1		category
		p	2		guiOpen
		p	3		filteringCraftable
	m	(Lczb;)V	a	add
		p	1		recipe
	m	(Lakr;)Z	b	contains
		p	1		id
	m	(Lcrj;)Z	b	isFiltering
		p	1		category
	m	(Lcrj;Z)V	b	setFiltering
		p	1		category
		p	2		filteringCraftable
	m	(Lczb;)Z	b	contains
		p	1		recipe
	m	(Lakr;)V	c	remove
		p	1		id
	m	(Lczb;)V	c	remove
		p	1		recipe
	m	(Lakr;)V	d	addHighlight
		p	1		id
	m	(Lczb;)Z	d	willHighlight
		p	1		recipe
	m	(Lczb;)V	e	removeHighlight
		p	1		recipe
	m	(Lczb;)V	f	addHighlight
		p	1		recipe
	f	Ljava/util/Set;	a	known
	f	Ljava/util/Set;	b	highlight
	f	Lavt;	c	bookSettings
c	avt	net/minecraft/stats/RecipeBookSettings
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		categoryOptions
	m	()Lavt;	a	copy
	m	(Lavt;)V	a	replaceFrom
		p	1		other
	m	(Lcrj;)Z	a	isOpen
		p	1		category
	m	(Lcrj;Z)V	a	setOpen
		p	1		category
		p	2		open
	m	(Ljava/util/EnumMap;)V	a	lambda$new$0
		p	0		categoryOptions
	m	(Lub;)Lavt;	a	read
		p	0		nbt
	m	(Lub;Lcrj;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$write$2
		p	2		category
		p	3		pair
	m	(Lub;Ljava/util/Map;Lcrj;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$read$1
		p	2		category
		p	3		pair
	m	(Lvw;)Lavt;	a	read
		p	0		buf
	m	(Lcrj;)Z	b	isFiltering
		p	1		category
	m	(Lcrj;Z)V	b	setFiltering
		p	1		category
		p	2		filtering
	m	(Lub;)V	b	write
		p	1		nbt
	m	(Lvw;)V	b	write
		p	1		buf
	f	Ljava/util/Map;	a	TAG_FIELDS
	f	Ljava/util/Map;	b	states
c	avt$a	net/minecraft/stats/RecipeBookSettings$a
	m	(ZZ)V	<init>	<init>
		p	1		guiOpen
		p	2		filteringCraftable
	m	()Lavt$a;	a	copy
	f	Z	a	open
	f	Z	b	filtering
c	avu	net/minecraft/stats/RecipeBookServer
	m	(Laee$a;Laqv;Ljava/util/List;)V	a	sendRecipes
		p	1		action
		p	2		player
		p	3		recipeIds
	m	(Laqv;)V	a	sendInitialRecipeBook
		p	1		player
	m	(Ljava/util/Collection;Laqv;)I	a	addRecipes
		p	1		recipes
		p	2		player
	m	(Lub;Lczd;)V	a	fromNbt
		p	1		nbt
		p	2		recipeManager
	m	(Luh;Ljava/util/function/Consumer;Lczd;)V	a	loadRecipes
		p	1		list
		p	2		handler
		p	3		recipeManager
	m	()Lub;	b	toNbt
	m	(Ljava/util/Collection;Laqv;)I	b	removeRecipes
		p	1		recipes
		p	2		player
	f	Ljava/lang/String;	c	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	d	LOGGER
c	avv	net/minecraft/stats/ServerStatisticManager
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
		p	1		server
		p	2		file
	m	()V	a	save
	m	(Laqv;)V	a	sendStats
		p	1		player
	m	(Lavy;)Lcom/google/gson/JsonObject;	a	lambda$toJson$4
		p	0		statType
	m	(Lavy;Ljava/lang/String;)Ljava/util/Optional;	a	getStat
		p	1		type
		p	2		id
	m	(Lcmx;Lavw;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcom/google/gson/JsonObject;)Lub;	a	fromJson
		p	0		json
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
		p	1		dataFixer
		p	2		json
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$3
	m	(Lub;Ljava/lang/String;Lavw;)V	a	lambda$parseLocal$0
		p	3		id
	m	(Lub;Ljava/lang/String;Lavy;)V	a	lambda$parseLocal$2
		p	3		statType
	m	()Ljava/lang/String;	b	toJson
	m	(Lavw;)Lakr;	b	getKey
		p	0		stat
	m	(Ljava/lang/String;)V	b	lambda$parseLocal$1
	m	()V	c	markAllDirty
	m	()Ljava/util/Set;	d	getDirty
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/io/File;	d	file
	f	Ljava/util/Set;	e	dirty
c	avw	net/minecraft/stats/Statistic
	m	(Lavy;Ljava/lang/Object;Lavx;)V	<init>	<init>
		p	1		type
		p	2		value
		p	3		formatter
	m	()Lavy;	a	getType
	m	(I)Ljava/lang/String;	a	format
		p	1		value
	m	(Lakr;)Ljava/lang/String;	a	locationToKey
		p	0		id
	m	(Lavy;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
		p	0		type
		p	1		value
	m	()Ljava/lang/Object;	b	getValue
	f	Lyx;	a	STREAM_CODEC
	f	Lavx;	o	formatter
	f	Ljava/lang/Object;	p	value
	f	Lavy;	q	type
c	avx	net/minecraft/stats/Counter
	m	(I)Ljava/lang/String;	a	lambda$static$3
		p	0		ticks
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
		p	0		decimalFormat
	m	(I)Ljava/lang/String;	b	lambda$static$2
		p	0		cm
	m	(I)Ljava/lang/String;	c	lambda$static$1
		p	0		i
	m	(I)Ljava/lang/String;	format	format
		p	1		value
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lavx;	b	DEFAULT
	f	Lavx;	c	DIVIDE_BY_TEN
	f	Lavx;	d	DISTANCE
	f	Lavx;	e	TIME
c	avy	net/minecraft/stats/StatisticWrapper
	m	(Ljz;Lwz;)V	<init>	<init>
		p	1		registry
		p	2		name
	m	()Lyx;	a	streamCodec
	m	(Lavx;Ljava/lang/Object;)Lavw;	a	lambda$get$0
		p	2		value
	m	(Ljava/lang/Object;)Z	a	contains
		p	1		key
	m	(Ljava/lang/Object;Lavx;)Lavw;	a	get
		p	1		key
		p	2		formatter
	m	()Ljz;	b	getRegistry
	m	(Ljava/lang/Object;)Lavw;	b	get
		p	1		key
	m	()Lwz;	c	getDisplayName
	f	Ljz;	a	registry
	f	Ljava/util/Map;	b	map
	f	Lwz;	c	displayName
	f	Lyx;	d	streamCodec
c	avz	net/minecraft/stats/StatisticList
	m	(Ljava/lang/String;Lavx;)Lakr;	a	makeCustomStat
		p	0		id
		p	1		formatter
	m	(Ljava/lang/String;Ljz;)Lavy;	a	makeRegistryStatType
		p	0		id
		p	1		registry
	f	Lakr;	A	HORSE_ONE_CM
	f	Lakr;	B	AVIATE_ONE_CM
	f	Lakr;	C	SWIM_ONE_CM
	f	Lakr;	D	STRIDER_ONE_CM
	f	Lakr;	E	JUMP
	f	Lakr;	F	DROP
	f	Lakr;	G	DAMAGE_DEALT
	f	Lakr;	H	DAMAGE_DEALT_ABSORBED
	f	Lakr;	I	DAMAGE_DEALT_RESISTED
	f	Lakr;	J	DAMAGE_TAKEN
	f	Lakr;	K	DAMAGE_BLOCKED_BY_SHIELD
	f	Lakr;	L	DAMAGE_ABSORBED
	f	Lakr;	M	DAMAGE_RESISTED
	f	Lakr;	N	DEATHS
	f	Lakr;	O	MOB_KILLS
	f	Lakr;	P	ANIMALS_BRED
	f	Lakr;	Q	PLAYER_KILLS
	f	Lakr;	R	FISH_CAUGHT
	f	Lakr;	S	TALKED_TO_VILLAGER
	f	Lakr;	T	TRADED_WITH_VILLAGER
	f	Lakr;	U	EAT_CAKE_SLICE
	f	Lakr;	V	FILL_CAULDRON
	f	Lakr;	W	USE_CAULDRON
	f	Lakr;	X	CLEAN_ARMOR
	f	Lakr;	Y	CLEAN_BANNER
	f	Lakr;	Z	CLEAN_SHULKER_BOX
	f	Lakr;	aA	RAID_TRIGGER
	f	Lakr;	aB	RAID_WIN
	f	Lakr;	aC	INTERACT_WITH_ANVIL
	f	Lakr;	aD	INTERACT_WITH_GRINDSTONE
	f	Lakr;	aE	TARGET_HIT
	f	Lakr;	aF	INTERACT_WITH_SMITHING_TABLE
	f	Lavy;	a	BLOCK_MINED
	f	Lakr;	aa	INTERACT_WITH_BREWINGSTAND
	f	Lakr;	ab	INTERACT_WITH_BEACON
	f	Lakr;	ac	INSPECT_DROPPER
	f	Lakr;	ad	INSPECT_HOPPER
	f	Lakr;	ae	INSPECT_DISPENSER
	f	Lakr;	af	PLAY_NOTEBLOCK
	f	Lakr;	ag	TUNE_NOTEBLOCK
	f	Lakr;	ah	POT_FLOWER
	f	Lakr;	ai	TRIGGER_TRAPPED_CHEST
	f	Lakr;	aj	OPEN_ENDERCHEST
	f	Lakr;	ak	ENCHANT_ITEM
	f	Lakr;	al	PLAY_RECORD
	f	Lakr;	am	INTERACT_WITH_FURNACE
	f	Lakr;	an	INTERACT_WITH_CRAFTING_TABLE
	f	Lakr;	ao	OPEN_CHEST
	f	Lakr;	ap	SLEEP_IN_BED
	f	Lakr;	aq	OPEN_SHULKER_BOX
	f	Lakr;	ar	OPEN_BARREL
	f	Lakr;	as	INTERACT_WITH_BLAST_FURNACE
	f	Lakr;	at	INTERACT_WITH_SMOKER
	f	Lakr;	au	INTERACT_WITH_LECTERN
	f	Lakr;	av	INTERACT_WITH_CAMPFIRE
	f	Lakr;	aw	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Lakr;	ax	INTERACT_WITH_LOOM
	f	Lakr;	ay	INTERACT_WITH_STONECUTTER
	f	Lakr;	az	BELL_RING
	f	Lavy;	b	ITEM_CRAFTED
	f	Lavy;	c	ITEM_USED
	f	Lavy;	d	ITEM_BROKEN
	f	Lavy;	e	ITEM_PICKED_UP
	f	Lavy;	f	ITEM_DROPPED
	f	Lavy;	g	ENTITY_KILLED
	f	Lavy;	h	ENTITY_KILLED_BY
	f	Lavy;	i	CUSTOM
	f	Lakr;	j	LEAVE_GAME
	f	Lakr;	k	PLAY_TIME
	f	Lakr;	l	TOTAL_WORLD_TIME
	f	Lakr;	m	TIME_SINCE_DEATH
	f	Lakr;	n	TIME_SINCE_REST
	f	Lakr;	o	CROUCH_TIME
	f	Lakr;	p	WALK_ONE_CM
	f	Lakr;	q	CROUCH_ONE_CM
	f	Lakr;	r	SPRINT_ONE_CM
	f	Lakr;	s	WALK_ON_WATER_ONE_CM
	f	Lakr;	t	FALL_ONE_CM
	f	Lakr;	u	CLIMB_ONE_CM
	f	Lakr;	v	FLY_ONE_CM
	f	Lakr;	w	WALK_UNDER_WATER_ONE_CM
	f	Lakr;	x	MINECART_ONE_CM
	f	Lakr;	y	BOAT_ONE_CM
	f	Lakr;	z	PIG_ONE_CM
c	awa	net/minecraft/stats/StatisticManager
	m	(Lavw;)I	a	getValue
		p	1		stat
	m	(Lavy;Ljava/lang/Object;)I	a	getValue
		p	1		type
		p	2		stat
	m	(Lcmx;Lavw;I)V	a	setValue
		p	1		player
		p	2		stat
		p	3		value
	m	(Lcmx;Lavw;I)V	b	increment
		p	1		player
		p	2		stat
		p	3		value
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
c	awc	net/minecraft/tags/BannerPatternTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	NO_ITEM_REQUIRED
	f	Lawu;	b	PATTERN_ITEM_FLOWER
	f	Lawu;	c	PATTERN_ITEM_CREEPER
	f	Lawu;	d	PATTERN_ITEM_SKULL
	f	Lawu;	e	PATTERN_ITEM_MOJANG
	f	Lawu;	f	PATTERN_ITEM_GLOBE
	f	Lawu;	g	PATTERN_ITEM_PIGLIN
	f	Lawu;	h	PATTERN_ITEM_FLOW
	f	Lawu;	i	PATTERN_ITEM_GUSTER
c	awd	net/minecraft/tags/BiomeTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	A	HAS_RUINED_PORTAL_JUNGLE
	f	Lawu;	B	HAS_RUINED_PORTAL_OCEAN
	f	Lawu;	C	HAS_RUINED_PORTAL_SWAMP
	f	Lawu;	D	HAS_RUINED_PORTAL_MOUNTAIN
	f	Lawu;	E	HAS_RUINED_PORTAL_STANDARD
	f	Lawu;	F	HAS_SHIPWRECK_BEACHED
	f	Lawu;	G	HAS_SHIPWRECK
	f	Lawu;	H	HAS_STRONGHOLD
	f	Lawu;	I	HAS_TRIAL_CHAMBERS
	f	Lawu;	J	HAS_SWAMP_HUT
	f	Lawu;	K	HAS_VILLAGE_DESERT
	f	Lawu;	L	HAS_VILLAGE_PLAINS
	f	Lawu;	M	HAS_VILLAGE_SAVANNA
	f	Lawu;	N	HAS_VILLAGE_SNOWY
	f	Lawu;	O	HAS_VILLAGE_TAIGA
	f	Lawu;	P	HAS_TRAIL_RUINS
	f	Lawu;	Q	HAS_WOODLAND_MANSION
	f	Lawu;	R	HAS_NETHER_FORTRESS
	f	Lawu;	S	HAS_NETHER_FOSSIL
	f	Lawu;	T	HAS_BASTION_REMNANT
	f	Lawu;	U	HAS_ANCIENT_CITY
	f	Lawu;	V	HAS_RUINED_PORTAL_NETHER
	f	Lawu;	W	HAS_END_CITY
	f	Lawu;	X	REQUIRED_OCEAN_MONUMENT_SURROUNDING
	f	Lawu;	Y	MINESHAFT_BLOCKING
	f	Lawu;	Z	PLAYS_UNDERWATER_MUSIC
	f	Lawu;	a	IS_DEEP_OCEAN
	f	Lawu;	aa	HAS_CLOSER_WATER_FOG
	f	Lawu;	ab	WATER_ON_MAP_OUTLINES
	f	Lawu;	ac	PRODUCES_CORALS_FROM_BONEMEAL
	f	Lawu;	ad	INCREASED_FIRE_BURNOUT
	f	Lawu;	ae	SNOW_GOLEM_MELTS
	f	Lawu;	af	WITHOUT_ZOMBIE_SIEGES
	f	Lawu;	ag	WITHOUT_PATROL_SPAWNS
	f	Lawu;	ah	WITHOUT_WANDERING_TRADER_SPAWNS
	f	Lawu;	ai	SPAWNS_COLD_VARIANT_FROGS
	f	Lawu;	aj	SPAWNS_WARM_VARIANT_FROGS
	f	Lawu;	ak	SPAWNS_GOLD_RABBITS
	f	Lawu;	al	SPAWNS_WHITE_RABBITS
	f	Lawu;	am	REDUCED_WATER_AMBIENT_SPAWNS
	f	Lawu;	an	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	f	Lawu;	ao	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	f	Lawu;	ap	MORE_FREQUENT_DROWNED_SPAWNS
	f	Lawu;	aq	ALLOWS_SURFACE_SLIME_SPAWNS
	f	Lawu;	ar	SPAWNS_SNOW_FOXES
	f	Lawu;	b	IS_OCEAN
	f	Lawu;	c	IS_BEACH
	f	Lawu;	d	IS_RIVER
	f	Lawu;	e	IS_MOUNTAIN
	f	Lawu;	f	IS_BADLANDS
	f	Lawu;	g	IS_HILL
	f	Lawu;	h	IS_TAIGA
	f	Lawu;	i	IS_JUNGLE
	f	Lawu;	j	IS_FOREST
	f	Lawu;	k	IS_SAVANNA
	f	Lawu;	l	IS_OVERWORLD
	f	Lawu;	m	IS_NETHER
	f	Lawu;	n	IS_END
	f	Lawu;	o	STRONGHOLD_BIASED_TO
	f	Lawu;	p	HAS_BURIED_TREASURE
	f	Lawu;	q	HAS_DESERT_PYRAMID
	f	Lawu;	r	HAS_IGLOO
	f	Lawu;	s	HAS_JUNGLE_TEMPLE
	f	Lawu;	t	HAS_MINESHAFT
	f	Lawu;	u	HAS_MINESHAFT_MESA
	f	Lawu;	v	HAS_OCEAN_MONUMENT
	f	Lawu;	w	HAS_OCEAN_RUIN_COLD
	f	Lawu;	x	HAS_OCEAN_RUIN_WARM
	f	Lawu;	y	HAS_PILLAGER_OUTPOST
	f	Lawu;	z	HAS_RUINED_PORTAL_DESERT
c	awe	net/minecraft/tags/TagsBlock
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	A	JUNGLE_LOGS
	f	Lawu;	B	SPRUCE_LOGS
	f	Lawu;	C	MANGROVE_LOGS
	f	Lawu;	D	CRIMSON_STEMS
	f	Lawu;	E	WARPED_STEMS
	f	Lawu;	F	BAMBOO_BLOCKS
	f	Lawu;	G	WART_BLOCKS
	f	Lawu;	H	BANNERS
	f	Lawu;	I	SAND
	f	Lawu;	J	SMELTS_TO_GLASS
	f	Lawu;	K	STAIRS
	f	Lawu;	L	SLABS
	f	Lawu;	M	WALLS
	f	Lawu;	N	ANVIL
	f	Lawu;	O	RAILS
	f	Lawu;	P	LEAVES
	f	Lawu;	Q	TRAPDOORS
	f	Lawu;	R	SMALL_FLOWERS
	f	Lawu;	S	BEDS
	f	Lawu;	T	FENCES
	f	Lawu;	U	TALL_FLOWERS
	f	Lawu;	V	FLOWERS
	f	Lawu;	W	PIGLIN_REPELLENTS
	f	Lawu;	X	GOLD_ORES
	f	Lawu;	Y	IRON_ORES
	f	Lawu;	Z	DIAMOND_ORES
	f	Lawu;	aA	WALL_HANGING_SIGNS
	f	Lawu;	aB	ALL_HANGING_SIGNS
	f	Lawu;	aC	ALL_SIGNS
	f	Lawu;	aD	DRAGON_IMMUNE
	f	Lawu;	aE	DRAGON_TRANSPARENT
	f	Lawu;	aF	WITHER_IMMUNE
	f	Lawu;	aG	WITHER_SUMMON_BASE_BLOCKS
	f	Lawu;	aH	BEEHIVES
	f	Lawu;	aI	CROPS
	f	Lawu;	aJ	BEE_GROWABLES
	f	Lawu;	aK	PORTALS
	f	Lawu;	aL	FIRE
	f	Lawu;	a	WOOL
	f	Lawu;	aM	NYLIUM
	f	Lawu;	aN	BEACON_BASE_BLOCKS
	f	Lawu;	aO	SOUL_SPEED_BLOCKS
	f	Lawu;	aP	WALL_POST_OVERRIDE
	f	Lawu;	aQ	CLIMBABLE
	f	Lawu;	aR	FALL_DAMAGE_RESETTING
	f	Lawu;	aS	SHULKER_BOXES
	f	Lawu;	aT	HOGLIN_REPELLENTS
	f	Lawu;	aU	SOUL_FIRE_BASE_BLOCKS
	f	Lawu;	aV	STRIDER_WARM_BLOCKS
	f	Lawu;	aW	CAMPFIRES
	f	Lawu;	aX	GUARDED_BY_PIGLINS
	f	Lawu;	aY	PREVENT_MOB_SPAWNING_INSIDE
	f	Lawu;	aZ	FENCE_GATES
	f	Lawu;	aa	REDSTONE_ORES
	f	Lawu;	ab	LAPIS_ORES
	f	Lawu;	ac	COAL_ORES
	f	Lawu;	ad	EMERALD_ORES
	f	Lawu;	ae	COPPER_ORES
	f	Lawu;	af	CANDLES
	f	Lawu;	ag	DIRT
	f	Lawu;	ah	TERRACOTTA
	f	Lawu;	ai	BADLANDS_TERRACOTTA
	f	Lawu;	aj	CONCRETE_POWDER
	f	Lawu;	ak	COMPLETES_FIND_TREE_TUTORIAL
	f	Lawu;	al	FLOWER_POTS
	f	Lawu;	am	ENDERMAN_HOLDABLE
	f	Lawu;	an	ICE
	f	Lawu;	ao	VALID_SPAWN
	f	Lawu;	ap	IMPERMEABLE
	f	Lawu;	aq	UNDERWATER_BONEMEALS
	f	Lawu;	ar	CORAL_BLOCKS
	f	Lawu;	as	WALL_CORALS
	f	Lawu;	at	CORAL_PLANTS
	f	Lawu;	au	CORALS
	f	Lawu;	av	BAMBOO_PLANTABLE_ON
	f	Lawu;	aw	STANDING_SIGNS
	f	Lawu;	ax	WALL_SIGNS
	f	Lawu;	ay	SIGNS
	f	Lawu;	az	CEILING_HANGING_SIGNS
	f	Lawu;	bA	SNOW
	f	Lawu;	bB	MINEABLE_WITH_AXE
	f	Lawu;	bC	MINEABLE_WITH_HOE
	f	Lawu;	bD	MINEABLE_WITH_PICKAXE
	f	Lawu;	bE	MINEABLE_WITH_SHOVEL
	f	Lawu;	bF	SWORD_EFFICIENT
	f	Lawu;	bG	NEEDS_DIAMOND_TOOL
	f	Lawu;	bH	NEEDS_IRON_TOOL
	f	Lawu;	bI	NEEDS_STONE_TOOL
	f	Lawu;	bJ	INCORRECT_FOR_NETHERITE_TOOL
	f	Lawu;	bK	INCORRECT_FOR_DIAMOND_TOOL
	f	Lawu;	bL	INCORRECT_FOR_IRON_TOOL
	f	Lawu;	b	PLANKS
	f	Lawu;	bM	INCORRECT_FOR_STONE_TOOL
	f	Lawu;	bN	INCORRECT_FOR_GOLD_TOOL
	f	Lawu;	bO	INCORRECT_FOR_WOODEN_TOOL
	f	Lawu;	bP	FEATURES_CANNOT_REPLACE
	f	Lawu;	bQ	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Lawu;	bR	GEODE_INVALID_BLOCKS
	f	Lawu;	bS	FROG_PREFER_JUMP_TO
	f	Lawu;	bT	SCULK_REPLACEABLE
	f	Lawu;	bU	SCULK_REPLACEABLE_WORLD_GEN
	f	Lawu;	bV	ANCIENT_CITY_REPLACEABLE
	f	Lawu;	bW	VIBRATION_RESONATORS
	f	Lawu;	bX	ANIMALS_SPAWNABLE_ON
	f	Lawu;	bY	ARMADILLO_SPAWNABLE_ON
	f	Lawu;	bZ	AXOLOTLS_SPAWNABLE_ON
	f	Lawu;	ba	UNSTABLE_BOTTOM_CENTER
	f	Lawu;	bb	MUSHROOM_GROW_BLOCK
	f	Lawu;	bc	INFINIBURN_OVERWORLD
	f	Lawu;	bd	INFINIBURN_NETHER
	f	Lawu;	be	INFINIBURN_END
	f	Lawu;	bf	BASE_STONE_OVERWORLD
	f	Lawu;	bg	STONE_ORE_REPLACEABLES
	f	Lawu;	bh	DEEPSLATE_ORE_REPLACEABLES
	f	Lawu;	bi	BASE_STONE_NETHER
	f	Lawu;	bj	OVERWORLD_CARVER_REPLACEABLES
	f	Lawu;	bk	NETHER_CARVER_REPLACEABLES
	f	Lawu;	bl	CANDLE_CAKES
	f	Lawu;	bm	CAULDRONS
	f	Lawu;	bn	CRYSTAL_SOUND_BLOCKS
	f	Lawu;	bo	INSIDE_STEP_SOUND_BLOCKS
	f	Lawu;	bp	COMBINATION_STEP_SOUND_BLOCKS
	f	Lawu;	bq	CAMEL_SAND_STEP_SOUND_BLOCKS
	f	Lawu;	br	OCCLUDES_VIBRATION_SIGNALS
	f	Lawu;	bs	DAMPENS_VIBRATIONS
	f	Lawu;	bt	DRIPSTONE_REPLACEABLE
	f	Lawu;	bu	CAVE_VINES
	f	Lawu;	bv	MOSS_REPLACEABLE
	f	Lawu;	bw	LUSH_GROUND_REPLACEABLE
	f	Lawu;	bx	AZALEA_ROOT_REPLACEABLE
	f	Lawu;	by	SMALL_DRIPLEAF_PLACEABLE
	f	Lawu;	bz	BIG_DRIPLEAF_PLACEABLE
	f	Lawu;	cA	DOES_NOT_BLOCK_HOPPERS
	f	Lawu;	cB	AIR
	f	Lawu;	c	STONE_BRICKS
	f	Lawu;	ca	GOATS_SPAWNABLE_ON
	f	Lawu;	cb	MOOSHROOMS_SPAWNABLE_ON
	f	Lawu;	cc	PARROTS_SPAWNABLE_ON
	f	Lawu;	cd	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	f	Lawu;	ce	RABBITS_SPAWNABLE_ON
	f	Lawu;	cf	FOXES_SPAWNABLE_ON
	f	Lawu;	cg	WOLVES_SPAWNABLE_ON
	f	Lawu;	ch	FROGS_SPAWNABLE_ON
	f	Lawu;	ci	AZALEA_GROWS_ON
	f	Lawu;	cj	CONVERTABLE_TO_MUD
	f	Lawu;	ck	MANGROVE_LOGS_CAN_GROW_THROUGH
	f	Lawu;	cl	MANGROVE_ROOTS_CAN_GROW_THROUGH
	f	Lawu;	cm	DEAD_BUSH_MAY_PLACE_ON
	f	Lawu;	cn	SNAPS_GOAT_HORN
	f	Lawu;	co	REPLACEABLE_BY_TREES
	f	Lawu;	cp	SNOW_LAYER_CANNOT_SURVIVE_ON
	f	Lawu;	cq	SNOW_LAYER_CAN_SURVIVE_ON
	f	Lawu;	cr	INVALID_SPAWN_INSIDE
	f	Lawu;	cs	SNIFFER_DIGGABLE_BLOCK
	f	Lawu;	ct	SNIFFER_EGG_HATCH_BOOST
	f	Lawu;	cu	TRAIL_RUINS_REPLACEABLE
	f	Lawu;	cv	REPLACEABLE
	f	Lawu;	cw	ENCHANTMENT_POWER_PROVIDER
	f	Lawu;	cx	ENCHANTMENT_POWER_TRANSMITTER
	f	Lawu;	cy	MAINTAINS_FARMLAND
	f	Lawu;	cz	BLOCKS_WIND_CHARGE_EXPLOSIONS
	f	Lawu;	d	WOODEN_BUTTONS
	f	Lawu;	e	STONE_BUTTONS
	f	Lawu;	f	BUTTONS
	f	Lawu;	g	WOOL_CARPETS
	f	Lawu;	h	WOODEN_DOORS
	f	Lawu;	i	MOB_INTERACTABLE_DOORS
	f	Lawu;	j	WOODEN_STAIRS
	f	Lawu;	k	WOODEN_SLABS
	f	Lawu;	l	WOODEN_FENCES
	f	Lawu;	m	PRESSURE_PLATES
	f	Lawu;	n	WOODEN_PRESSURE_PLATES
	f	Lawu;	o	STONE_PRESSURE_PLATES
	f	Lawu;	p	WOODEN_TRAPDOORS
	f	Lawu;	q	DOORS
	f	Lawu;	r	SAPLINGS
	f	Lawu;	s	LOGS_THAT_BURN
	f	Lawu;	t	OVERWORLD_NATURAL_LOGS
	f	Lawu;	u	LOGS
	f	Lawu;	v	DARK_OAK_LOGS
	f	Lawu;	w	OAK_LOGS
	f	Lawu;	x	BIRCH_LOGS
	f	Lawu;	y	ACACIA_LOGS
	f	Lawu;	z	CHERRY_LOGS
c	awf	net/minecraft/tags/CatVariantTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	DEFAULT_SPAWNS
	f	Lawu;	b	FULL_MOON_SPAWNS
c	awg	net/minecraft/tags/DamageTypeTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	A	ALWAYS_KILLS_ARMOR_STANDS
	f	Lawu;	B	CAN_BREAK_ARMOR_STAND
	f	Lawu;	C	BYPASSES_WOLF_ARMOR
	f	Lawu;	D	IS_PLAYER_ATTACK
	f	Lawu;	E	BURN_FROM_STEPPING
	f	Lawu;	F	PANIC_CAUSES
	f	Lawu;	G	PANIC_ENVIRONMENTAL_CAUSES
	f	Lawu;	a	DAMAGES_HELMET
	f	Lawu;	b	BYPASSES_ARMOR
	f	Lawu;	c	BYPASSES_SHIELD
	f	Lawu;	d	BYPASSES_INVULNERABILITY
	f	Lawu;	e	BYPASSES_COOLDOWN
	f	Lawu;	f	BYPASSES_EFFECTS
	f	Lawu;	g	BYPASSES_RESISTANCE
	f	Lawu;	h	BYPASSES_ENCHANTMENTS
	f	Lawu;	i	IS_FIRE
	f	Lawu;	j	IS_PROJECTILE
	f	Lawu;	k	WITCH_RESISTANT_TO
	f	Lawu;	l	IS_EXPLOSION
	f	Lawu;	m	IS_FALL
	f	Lawu;	n	IS_DROWNING
	f	Lawu;	o	IS_FREEZING
	f	Lawu;	p	IS_LIGHTNING
	f	Lawu;	q	NO_ANGER
	f	Lawu;	r	NO_IMPACT
	f	Lawu;	s	ALWAYS_MOST_SIGNIFICANT_FALL
	f	Lawu;	t	WITHER_IMMUNE_TO
	f	Lawu;	u	IGNITES_ARMOR_STANDS
	f	Lawu;	v	BURNS_ARMOR_STANDS
	f	Lawu;	w	AVOIDS_GUARDIAN_THORNS
	f	Lawu;	x	ALWAYS_TRIGGERS_SILVERFISH
	f	Lawu;	y	ALWAYS_HURTS_ENDER_DRAGONS
	f	Lawu;	z	NO_KNOCKBACK
c	awh	net/minecraft/tags/EnchantmentTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	A	TRADES_SNOW_COMMON
	f	Lawu;	B	TRADES_SWAMP_COMMON
	f	Lawu;	C	TRADES_TAIGA_COMMON
	f	Lawu;	D	TRADES_DESERT_SPECIAL
	f	Lawu;	E	TRADES_JUNGLE_SPECIAL
	f	Lawu;	F	TRADES_PLAINS_SPECIAL
	f	Lawu;	G	TRADES_SAVANNA_SPECIAL
	f	Lawu;	H	TRADES_SNOW_SPECIAL
	f	Lawu;	I	TRADES_SWAMP_SPECIAL
	f	Lawu;	J	TRADES_TAIGA_SPECIAL
	f	Lawu;	a	TOOLTIP_ORDER
	f	Lawu;	b	ARMOR_EXCLUSIVE
	f	Lawu;	c	BOOTS_EXCLUSIVE
	f	Lawu;	d	BOW_EXCLUSIVE
	f	Lawu;	e	CROSSBOW_EXCLUSIVE
	f	Lawu;	f	DAMAGE_EXCLUSIVE
	f	Lawu;	g	MINING_EXCLUSIVE
	f	Lawu;	h	RIPTIDE_EXCLUSIVE
	f	Lawu;	i	TRADEABLE
	f	Lawu;	j	DOUBLE_TRADE_PRICE
	f	Lawu;	k	IN_ENCHANTING_TABLE
	f	Lawu;	l	ON_MOB_SPAWN_EQUIPMENT
	f	Lawu;	m	ON_TRADED_EQUIPMENT
	f	Lawu;	n	ON_RANDOM_LOOT
	f	Lawu;	o	CURSE
	f	Lawu;	p	SMELTS_LOOT
	f	Lawu;	q	PREVENTS_BEE_SPAWNS_WHEN_MINING
	f	Lawu;	r	PREVENTS_DECORATED_POT_SHATTERING
	f	Lawu;	s	PREVENTS_ICE_MELTING
	f	Lawu;	t	PREVENTS_INFESTED_SPAWNS
	f	Lawu;	u	TREASURE
	f	Lawu;	v	NON_TREASURE
	f	Lawu;	w	TRADES_DESERT_COMMON
	f	Lawu;	x	TRADES_JUNGLE_COMMON
	f	Lawu;	y	TRADES_PLAINS_COMMON
	f	Lawu;	z	TRADES_SAVANNA_COMMON
c	awi	net/minecraft/tags/TagsEntity
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	A	NOT_SCARY_FOR_PUFFERFISH
	f	Lawu;	B	SENSITIVE_TO_IMPALING
	f	Lawu;	C	SENSITIVE_TO_BANE_OF_ARTHROPODS
	f	Lawu;	D	SENSITIVE_TO_SMITE
	f	Lawu;	E	NO_ANGER_FROM_WIND_CHARGE
	f	Lawu;	F	IMMUNE_TO_OOZING
	f	Lawu;	G	IMMUNE_TO_INFESTED
	f	Lawu;	H	REDIRECTABLE_PROJECTILE
	f	Lawu;	a	SKELETONS
	f	Lawu;	b	ZOMBIES
	f	Lawu;	c	RAIDERS
	f	Lawu;	d	UNDEAD
	f	Lawu;	e	BEEHIVE_INHABITORS
	f	Lawu;	f	ARROWS
	f	Lawu;	g	IMPACT_PROJECTILES
	f	Lawu;	h	POWDER_SNOW_WALKABLE_MOBS
	f	Lawu;	i	AXOLOTL_ALWAYS_HOSTILES
	f	Lawu;	j	AXOLOTL_HUNT_TARGETS
	f	Lawu;	k	FREEZE_IMMUNE_ENTITY_TYPES
	f	Lawu;	l	FREEZE_HURTS_EXTRA_TYPES
	f	Lawu;	m	CAN_BREATHE_UNDER_WATER
	f	Lawu;	n	FROG_FOOD
	f	Lawu;	o	FALL_DAMAGE_IMMUNE
	f	Lawu;	p	DISMOUNTS_UNDERWATER
	f	Lawu;	q	NON_CONTROLLING_RIDER
	f	Lawu;	r	DEFLECTS_PROJECTILES
	f	Lawu;	s	CAN_TURN_IN_BOATS
	f	Lawu;	t	ILLAGER
	f	Lawu;	u	AQUATIC
	f	Lawu;	v	ARTHROPOD
	f	Lawu;	w	IGNORES_POISON_AND_REGEN
	f	Lawu;	x	INVERTED_HEALING_AND_HARM
	f	Lawu;	y	WITHER_FRIENDS
	f	Lawu;	z	ILLAGER_FRIENDS
c	awj	awj
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	VISIBLE
c	awk	net/minecraft/tags/TagsFluid
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	WATER
	f	Lawu;	b	LAVA
c	awl	net/minecraft/tags/GameEventTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	VIBRATIONS
	f	Lawu;	b	WARDEN_CAN_LISTEN
	f	Lawu;	c	SHRIEKER_CAN_LISTEN
	f	Lawu;	d	IGNORE_VIBRATIONS_SNEAKING
	f	Lawu;	e	ALLAY_CAN_LISTEN
c	awm	net/minecraft/tags/InstrumentTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	REGULAR_GOAT_HORNS
	f	Lawu;	b	SCREAMING_GOAT_HORNS
	f	Lawu;	c	GOAT_HORNS
c	awn	net/minecraft/tags/TagsItem
	m	(Ljava/lang/String;)Lawu;	a	bind
		p	0		id
	f	Lawu;	A	CRIMSON_STEMS
	f	Lawu;	B	WARPED_STEMS
	f	Lawu;	C	BAMBOO_BLOCKS
	f	Lawu;	D	WART_BLOCKS
	f	Lawu;	E	BANNERS
	f	Lawu;	F	SAND
	f	Lawu;	G	SMELTS_TO_GLASS
	f	Lawu;	H	STAIRS
	f	Lawu;	I	SLABS
	f	Lawu;	J	WALLS
	f	Lawu;	K	ANVIL
	f	Lawu;	L	RAILS
	f	Lawu;	M	LEAVES
	f	Lawu;	N	TRAPDOORS
	f	Lawu;	O	SMALL_FLOWERS
	f	Lawu;	P	BEDS
	f	Lawu;	Q	FENCES
	f	Lawu;	R	TALL_FLOWERS
	f	Lawu;	S	FLOWERS
	f	Lawu;	T	PIGLIN_REPELLENTS
	f	Lawu;	U	PIGLIN_LOVED
	f	Lawu;	V	IGNORED_BY_PIGLIN_BABIES
	f	Lawu;	W	MEAT
	f	Lawu;	X	SNIFFER_FOOD
	f	Lawu;	Y	PIGLIN_FOOD
	f	Lawu;	Z	FOX_FOOD
	f	Lawu;	aA	IRON_ORES
	f	Lawu;	aB	DIAMOND_ORES
	f	Lawu;	aC	REDSTONE_ORES
	f	Lawu;	aD	LAPIS_ORES
	f	Lawu;	aE	COAL_ORES
	f	Lawu;	aF	EMERALD_ORES
	f	Lawu;	aG	COPPER_ORES
	f	Lawu;	aH	NON_FLAMMABLE_WOOD
	f	Lawu;	aI	SOUL_FIRE_BASE_BLOCKS
	f	Lawu;	aJ	CANDLES
	f	Lawu;	aK	DIRT
	f	Lawu;	aL	TERRACOTTA
	f	Lawu;	a	WOOL
	f	Lawu;	aM	COMPLETES_FIND_TREE_TUTORIAL
	f	Lawu;	aN	BOATS
	f	Lawu;	aO	CHEST_BOATS
	f	Lawu;	aP	FISHES
	f	Lawu;	aQ	SIGNS
	f	Lawu;	aR	CREEPER_DROP_MUSIC_DISCS
	f	Lawu;	aS	COALS
	f	Lawu;	aT	ARROWS
	f	Lawu;	aU	LECTERN_BOOKS
	f	Lawu;	aV	BOOKSHELF_BOOKS
	f	Lawu;	aW	BEACON_PAYMENT_ITEMS
	f	Lawu;	aX	STONE_TOOL_MATERIALS
	f	Lawu;	aY	STONE_CRAFTING_MATERIALS
	f	Lawu;	aZ	FREEZE_IMMUNE_WEARABLES
	f	Lawu;	aa	COW_FOOD
	f	Lawu;	ab	GOAT_FOOD
	f	Lawu;	ac	SHEEP_FOOD
	f	Lawu;	ad	WOLF_FOOD
	f	Lawu;	ae	CAT_FOOD
	f	Lawu;	af	HORSE_FOOD
	f	Lawu;	ag	HORSE_TEMPT_ITEMS
	f	Lawu;	ah	CAMEL_FOOD
	f	Lawu;	ai	ARMADILLO_FOOD
	f	Lawu;	aj	BEE_FOOD
	f	Lawu;	ak	CHICKEN_FOOD
	f	Lawu;	al	FROG_FOOD
	f	Lawu;	am	HOGLIN_FOOD
	f	Lawu;	an	LLAMA_FOOD
	f	Lawu;	ao	LLAMA_TEMPT_ITEMS
	f	Lawu;	ap	OCELOT_FOOD
	f	Lawu;	aq	PANDA_FOOD
	f	Lawu;	ar	PIG_FOOD
	f	Lawu;	as	RABBIT_FOOD
	f	Lawu;	at	STRIDER_FOOD
	f	Lawu;	au	STRIDER_TEMPT_ITEMS
	f	Lawu;	av	TURTLE_FOOD
	f	Lawu;	aw	PARROT_FOOD
	f	Lawu;	ax	PARROT_POISONOUS_FOOD
	f	Lawu;	ay	AXOLOTL_FOOD
	f	Lawu;	az	GOLD_ORES
	f	Lawu;	bA	CHEST_ARMOR_ENCHANTABLE
	f	Lawu;	bB	HEAD_ARMOR_ENCHANTABLE
	f	Lawu;	bC	ARMOR_ENCHANTABLE
	f	Lawu;	bD	SWORD_ENCHANTABLE
	f	Lawu;	bE	FIRE_ASPECT_ENCHANTABLE
	f	Lawu;	bF	SHARP_WEAPON_ENCHANTABLE
	f	Lawu;	bG	WEAPON_ENCHANTABLE
	f	Lawu;	bH	MINING_ENCHANTABLE
	f	Lawu;	bI	MINING_LOOT_ENCHANTABLE
	f	Lawu;	bJ	FISHING_ENCHANTABLE
	f	Lawu;	bK	TRIDENT_ENCHANTABLE
	f	Lawu;	bL	DURABILITY_ENCHANTABLE
	f	Lawu;	b	PLANKS
	f	Lawu;	bM	BOW_ENCHANTABLE
	f	Lawu;	bN	EQUIPPABLE_ENCHANTABLE
	f	Lawu;	bO	CROSSBOW_ENCHANTABLE
	f	Lawu;	bP	VANISHING_ENCHANTABLE
	f	Lawu;	bQ	MACE_ENCHANTABLE
	f	Lawu;	ba	DAMPENS_VIBRATIONS
	f	Lawu;	bb	CLUSTER_MAX_HARVESTABLES
	f	Lawu;	bc	COMPASSES
	f	Lawu;	bd	HANGING_SIGNS
	f	Lawu;	be	CREEPER_IGNITERS
	f	Lawu;	bf	NOTE_BLOCK_TOP_INSTRUMENTS
	f	Lawu;	bg	FOOT_ARMOR
	f	Lawu;	bh	LEG_ARMOR
	f	Lawu;	bi	CHEST_ARMOR
	f	Lawu;	bj	HEAD_ARMOR
	f	Lawu;	bk	SKULLS
	f	Lawu;	bl	TRIMMABLE_ARMOR
	f	Lawu;	bm	TRIM_MATERIALS
	f	Lawu;	bn	TRIM_TEMPLATES
	f	Lawu;	bo	DECORATED_POT_SHERDS
	f	Lawu;	bp	DECORATED_POT_INGREDIENTS
	f	Lawu;	bq	SWORDS
	f	Lawu;	br	AXES
	f	Lawu;	bs	HOES
	f	Lawu;	bt	PICKAXES
	f	Lawu;	bu	SHOVELS
	f	Lawu;	bv	BREAKS_DECORATED_POTS
	f	Lawu;	bw	VILLAGER_PLANTABLE_SEEDS
	f	Lawu;	bx	DYEABLE
	f	Lawu;	by	FOOT_ARMOR_ENCHANTABLE
	f	Lawu;	bz	LEG_ARMOR_ENCHANTABLE
	f	Lawu;	c	STONE_BRICKS
	f	Lawu;	d	WOODEN_BUTTONS
	f	Lawu;	e	STONE_BUTTONS
	f	Lawu;	f	BUTTONS
	f	Lawu;	g	WOOL_CARPETS
	f	Lawu;	h	WOODEN_DOORS
	f	Lawu;	i	WOODEN_STAIRS
	f	Lawu;	j	WOODEN_SLABS
	f	Lawu;	k	WOODEN_FENCES
	f	Lawu;	l	FENCE_GATES
	f	Lawu;	m	WOODEN_PRESSURE_PLATES
	f	Lawu;	n	WOODEN_TRAPDOORS
	f	Lawu;	o	DOORS
	f	Lawu;	p	SAPLINGS
	f	Lawu;	q	LOGS_THAT_BURN
	f	Lawu;	r	LOGS
	f	Lawu;	s	DARK_OAK_LOGS
	f	Lawu;	t	OAK_LOGS
	f	Lawu;	u	BIRCH_LOGS
	f	Lawu;	v	ACACIA_LOGS
	f	Lawu;	w	CHERRY_LOGS
	f	Lawu;	x	JUNGLE_LOGS
	f	Lawu;	y	SPRUCE_LOGS
	f	Lawu;	z	MANGROVE_LOGS
c	awo	net/minecraft/tags/PaintingVariantTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	PLACEABLE
c	awp	net/minecraft/tags/PoiTypeTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	ACQUIRABLE_JOB_SITE
	f	Lawu;	b	VILLAGE
	f	Lawu;	c	BEE_HOME
c	awq	net/minecraft/tags/StructureTags
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	EYE_OF_ENDER_LOCATED
	f	Lawu;	b	DOLPHIN_LOCATED
	f	Lawu;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Lawu;	d	ON_OCEAN_EXPLORER_MAPS
	f	Lawu;	e	ON_SAVANNA_VILLAGE_MAPS
	f	Lawu;	f	ON_DESERT_VILLAGE_MAPS
	f	Lawu;	g	ON_PLAINS_VILLAGE_MAPS
	f	Lawu;	h	ON_TAIGA_VILLAGE_MAPS
	f	Lawu;	i	ON_SNOWY_VILLAGE_MAPS
	f	Lawu;	j	ON_JUNGLE_EXPLORER_MAPS
	f	Lawu;	k	ON_SWAMP_EXPLORER_MAPS
	f	Lawu;	l	ON_TREASURE_MAPS
	f	Lawu;	m	ON_TRIAL_CHAMBERS_MAPS
	f	Lawu;	n	CATS_SPAWN_IN
	f	Lawu;	o	CATS_SPAWN_AS_BLACK
	f	Lawu;	p	VILLAGE
	f	Lawu;	q	MINESHAFT
	f	Lawu;	r	SHIPWRECK
	f	Lawu;	s	RUINED_PORTAL
	f	Lawu;	t	OCEAN_RUIN
c	awr	awr
	m	()Lawr;	a	create
	m	(Lakr;)Lawr;	a	addElement
		p	1		id
	m	(Laws;)Lawr;	a	add
		p	1		entry
	m	()Ljava/util/List;	b	build
	m	(Lakr;)Lawr;	b	addOptionalElement
		p	1		id
	m	(Lakr;)Lawr;	c	addTag
		p	1		id
	m	(Lakr;)Lawr;	d	addOptionalTag
		p	1		id
	f	Ljava/util/List;	a	entries
c	aws	net/minecraft/tags/TagEntry
	m	(Lakr;ZZ)V	<init>	<init>
		p	1		id
		p	2		tag
		p	3		required
	m	(Laxw$c;Z)V	<init>	<init>
		p	1		id
		p	2		required
	m	()Laxw$c;	a	elementOrTag
	m	(Lakr;)Laws;	a	element
		p	0		id
	m	(Laws$a;Ljava/util/function/Consumer;)Z	a	build
		p	1		valueGetter
		p	2		idConsumer
	m	(Laws;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
		p	0		entry
	m	(Laxw$c;)Laws;	a	lambda$static$2
		p	0		id
	m	(Lcom/mojang/datafixers/util/Either;)Laws;	a	lambda$static$4
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		idConsumer
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
		p	1		directEntryPredicate
		p	2		tagEntryPredicate
	m	(Lakr;)Laws;	b	optionalElement
		p	0		id
	m	(Laws;)Laws;	b	lambda$static$3
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		idConsumer
	m	(Lakr;)Laws;	c	tag
		p	0		id
	m	(Laws;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		entry
	m	(Lakr;)Laws;	d	optionalTag
		p	0		id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	FULL_CODEC
	f	Lakr;	c	id
	f	Z	d	tag
	f	Z	e	required
c	aws$a	net/minecraft/tags/TagEntry$a
	m	(Lakr;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Lakr;)Ljava/util/Collection;	b	tag
		p	1		id
c	awt	net/minecraft/tags/TagFile
	m	()Ljava/util/List;	a	entries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	replace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
c	awu	net/minecraft/tags/TagKey
	m	()Lakq;	a	registry
	m	(Lakq;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registry
	m	(Lakq;Lakr;)Lawu;	a	create
		p	0		registry
		p	1		id
	m	(Lakq;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$3
		p	1		string
	m	(Lawu;)Ljava/lang/String;	a	lambda$hashedCodec$4
		p	0		string
	m	()Lakr;	b	location
	m	(Lakq;)Lcom/mojang/serialization/Codec;	b	hashedCodec
		p	0		registry
	m	(Lakq;Lakr;)Lawu;	b	lambda$hashedCodec$1
		p	1		id
	m	()Ljava/lang/String;	c	lambda$hashedCodec$2
	m	(Lakq;)Z	c	isFor
		p	1		registryRef
	m	(Lakq;Lakr;)Lawu;	c	lambda$codec$0
		p	1		id
	m	(Lakq;)Ljava/util/Optional;	d	cast
		p	1		registryRef
	f	Lakq;	a	registry
	f	Lakr;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
c	awv	net/minecraft/tags/TagDataPack
	m	(Ljava/util/function/Function;Ljava/lang/String;)V	<init>	<init>
		p	1		registryGetter
		p	2		dataType
	m	(Lakr;)Ljava/util/List;	a	lambda$load$0
		p	0		id
	m	(Lakr;Ljava/util/Collection;)V	a	lambda$build$3
		p	1		missingReferences
	m	(Laue;)Ljava/util/Map;	a	load
		p	1		resourceManager
	m	(Laws$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	build
		p	1		valueGetter
		p	2		entries
	m	(Laws$a;Ljava/util/Map;Lakr;Lawv$b;)V	a	lambda$build$5
		p	3		id
		p	4		dependencies
	m	(Laxs;Lakr;Ljava/util/List;)V	a	lambda$build$2
		p	1		id
		p	2		entries
	m	(Ljava/util/List;Ljava/lang/String;Laws;)V	a	lambda$load$1
		p	2		entry
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
		p	1		tags
	m	(Ljava/util/Map;Lakr;Ljava/util/Collection;)V	a	lambda$build$4
		p	2		resolvedEntries
	m	(Laue;)Ljava/util/Map;	b	loadAndBuild
		p	1		manager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Function;	b	idToValue
	f	Ljava/lang/String;	c	directory
c	awv$1	net/minecraft/tags/TagDataPack$1
	m	(Lakr;)Ljava/lang/Object;	a	element
		p	1		id
	m	(Lakr;)Ljava/util/Collection;	b	tag
		p	1		id
	f	Ljava/util/Map;	a	val$newTags
	f	Lawv;	b	this$0
c	awv$a	net/minecraft/tags/TagDataPack$a
	m	(Laws;Ljava/lang/String;)V	<init>	<init>
		p	2		source
	m	()Laws;	a	entry
	m	()Ljava/lang/String;	b	source
	f	Laws;	a	entry
	f	Ljava/lang/String;	b	source
c	awv$b	net/minecraft/tags/TagDataPack$b
	m	()Ljava/util/List;	a	entries
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;Lawv$a;)V	a	lambda$visitOptionalDependencies$1
		p	1		entry
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;Lawv$a;)V	b	lambda$visitRequiredDependencies$0
		p	1		entry
	f	Ljava/util/List;	a	entries
c	aww	net/minecraft/tags/TagRegistry
	m	(Lka;)V	<init>	<init>
		p	1		registryManager
	m	()Ljava/util/List;	a	getResult
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$1
	m	(Lakq;Lawv;Laue;)Laww$a;	a	lambda$createLoader$3
	m	(Laty$a;Laue;Lbnf;Lbnf;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
		p	1		synchronizer
		p	2		manager
		p	3		prepareProfiler
		p	4		applyProfiler
		p	5		prepareExecutor
		p	6		applyExecutor
	m	(Laue;Ljava/util/concurrent/Executor;Lka$d;)Ljava/util/concurrent/CompletableFuture;	a	createLoader
		p	1		resourceManager
		p	2		prepareExecutor
		p	3		requirement
	m	(Ljava/util/List;Ljava/lang/Void;)V	a	lambda$reload$2
		p	2		void_
	m	(Laue;Ljava/util/concurrent/Executor;Lka$d;)Ljava/util/concurrent/CompletableFuture;	b	lambda$reload$0
		p	3		registry
	f	Lka;	a	registryAccess
	f	Ljava/util/List;	b	results
c	aww$a	net/minecraft/tags/TagRegistry$a
	m	()Lakq;	a	key
	m	()Ljava/util/Map;	b	tags
	f	Lakq;	a	key
	f	Ljava/util/Map;	b	tags
c	awx	net/minecraft/tags/TagNetworkSerialization
	m	(Lakq;Ljz;Lawx$a;Lawx$b;)V	a	deserializeTagsFromNetwork
		p	0		registryKey
		p	1		registry
		p	2		serialized
		p	3		loader
	m	(Lakq;Ljz;Lawx$b;Lakr;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
		p	3		tagId
		p	4		rawIds
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
		p	0		pair
	m	(Ljt;)Ljava/util/Map;	a	serializeTagsToNetwork
		p	0		dynamicRegistryManager
	m	(Ljz;)Lawx$a;	a	serializeToNetwork
		p	0		registry
	m	(Ljz;Ljava/util/Map;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$serializeToNetwork$2
		p	2		pair
	m	(Lka$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
		p	0		registry
c	awx$a	net/minecraft/tags/TagNetworkSerialization$a
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		contents
	m	()I	a	size
	m	(Ljz;)V	a	applyToRegistry
		p	1		registry
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;)Lawx$a;	b	read
		p	0		buf
	f	Ljava/util/Map;	a	tags
c	awx$b	net/minecraft/tags/TagNetworkSerialization$b
	m	(Lawu;Ljava/util/List;)V	accept	accept
		p	1		tag
		p	2		entries
c	awy	awy
	m	(Ljava/lang/String;)Lawu;	a	create
		p	0		id
	f	Lawu;	a	NORMAL
	f	Lawu;	b	EXTENDED
c	axa	net/minecraft/util/AbortableIterationConsumer
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Laxa$a;	a	lambda$forConsumer$0
		p	1		value
	m	(Ljava/lang/Object;)Laxa$a;	accept	accept
		p	1		value
	m	(Ljava/util/function/Consumer;)Laxa;	forConsumer	forConsumer
		p	0		consumer
c	axa$a	net/minecraft/util/AbortableIterationConsumer$a
	m	()Z	a	shouldAbort
	m	()[Laxa$a;	b	$values
	f	Laxa$a;	a	CONTINUE
	f	Laxa$a;	b	ABORT
	f	[Laxa$a;	c	$VALUES
c	axb	axb
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	capacity
	m	(I)I	a	getIndex
		p	1		index
	m	(II)V	a	verifyIndexInRange
		p	0		start
		p	1		end
	m	([Ljava/lang/Object;I)V	a	copyCount
		p	1		array
		p	2		size
	m	()Layk;	b	reversed
	m	(I)V	b	verifyIndexInRange
		p	1		index
	m	()V	c	grow
	m	(I)Ljava/lang/Object;	c	getInner
		p	1		index
	f	I	a	MIN_GROWTH
	f	[Ljava/lang/Object;	b	contents
	f	I	c	head
	f	I	d	size
c	axb$a	axb$a
	f	Laxb;	a	this$0
	f	I	b	index
c	axb$b	axb$b
	m	(Laxb;Laxb;)V	<init>	<init>
		p	2		original
	m	(I)I	a	reverseIndex
		p	1		index
	m	()Layk;	b	reversed
	f	Laxb;	a	this$0
	f	Laxb;	b	source
c	axc	net/minecraft/util/DataBits
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laxc;	d	copy
c	axd	net/minecraft/util/Brightness
	m	()I	a	pack
	m	(I)Laxd;	a	unpack
		p	0		packed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	block
	m	()I	c	sky
	f	Lcom/mojang/serialization/Codec;	a	LIGHT_VALUE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Laxd;	c	FULL_BRIGHT
	f	I	d	block
	f	I	e	sky
c	axe	net/minecraft/util/ByIdMap
	m	(I[Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$continuous$1
		p	3		index
	m	(Ljava/util/function/IntFunction;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$sparse$0
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	createMap
		p	0		valueToIdFunction
		p	1		values
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Laxe$a;)Ljava/util/function/IntFunction;	a	continuous
		p	0		valueToIdFunction
		p	1		values
		p	2		outOfBoundsHandling
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	sparse
		p	0		valueToIdFunction
		p	1		values
		p	2		fallback
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	a	lambda$continuous$3
		p	2		index
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object;	b	createSortedArray
		p	0		valueToIndexFunction
		p	1		values
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	b	lambda$continuous$2
		p	2		index
c	axe$a	net/minecraft/util/ByIdMap$a
	m	()[Laxe$a;	a	$values
	f	Laxe$a;	a	ZERO
	f	Laxe$a;	b	WRAP
	f	Laxe$a;	c	CLAMP
	f	[Laxe$a;	d	$VALUES
c	axf	net/minecraft/util/EntitySlice
	m	(Ljava/lang/Class;)V	<init>	<init>
		p	1		elementType
	m	()Ljava/util/List;	a	getAllInstances
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
		p	1		type
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
		p	1		typeClass
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
c	axg	net/minecraft/util/ClassTreeIdRegistry
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
	m	(Ljava/lang/Class;)I	a	getLastIdFor
		p	1		clazz
	m	(Ljava/lang/Class;)I	b	getCount
		p	1		clazz
	m	(Ljava/lang/Class;)I	c	define
		p	1		clazz
	f	I	a	NO_ID_VALUE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToLastIdCache
c	axh	net/minecraft/util/ColorRGBA
	m	()I	a	rgba
	m	(Ljava/lang/NumberFormatException;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		code
	m	()Ljava/lang/String;	b	formatValue
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	rgba
	f	Ljava/lang/String;	c	CUSTOM_COLOR_PREFIX
c	axi	axi
	f	I	a	WHITE
	f	I	b	BLACK
	f	I	c	GRAY
	f	I	d	LIGHT_GRAY
	f	I	e	LIGHTER_GRAY
	f	I	f	RED
	f	I	g	GREEN
	f	I	h	BLUE
	f	I	i	SOFT_RED
	f	I	j	YELLOW
	f	I	k	SOFT_YELLOW
c	axj	net/minecraft/util/CommonLinks
	m	(Ljava/lang/String;Ljava/util/UUID;)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		uuid
	m	(Ljava/lang/String;Ljava/util/UUID;Z)Ljava/lang/String;	a	extendRealms
		p	0		subscriptionId
		p	1		uuid
		p	2		trial
	f	Ljava/net/URI;	a	GDPR
	f	Ljava/net/URI;	b	EULA
	f	Ljava/net/URI;	c	PRIVACY_STATEMENT
	f	Ljava/net/URI;	d	ATTRIBUTION
	f	Ljava/net/URI;	e	LICENSES
	f	Ljava/net/URI;	f	BUY_MINECRAFT_JAVA
	f	Ljava/net/URI;	g	ACCOUNT_SETTINGS
	f	Ljava/net/URI;	h	SNAPSHOT_FEEDBACK
	f	Ljava/net/URI;	i	RELEASE_FEEDBACK
	f	Ljava/net/URI;	j	SNAPSHOT_BUGS_FEEDBACK
	f	Ljava/net/URI;	k	GENERAL_HELP
	f	Ljava/net/URI;	l	ACCESSIBILITY_HELP
	f	Ljava/net/URI;	m	REPORTING_HELP
	f	Ljava/net/URI;	n	SUSPENSION_HELP
	f	Ljava/net/URI;	o	BLOCKING_HELP
	f	Ljava/net/URI;	p	SYMLINK_HELP
	f	Ljava/net/URI;	q	START_REALMS_TRIAL
	f	Ljava/net/URI;	r	BUY_REALMS
	f	Ljava/net/URI;	s	REALMS_TERMS
	f	Ljava/net/URI;	t	REALMS_CONTENT_CREATION
c	axk	net/minecraft/util/RegistryID
	m	(I)V	<init>	<init>
		p	1		size
	m	([Ljava/lang/Object;[I[Ljava/lang/Object;II)V	<init>	<init>
		p	1		values
		p	2		ids
		p	3		idToValues
		p	4		nextId
		p	5		size
	m	()V	a	clear
	m	(I)Ljava/lang/Object;	a	byId
		p	1		index
	m	(Ljava/lang/Object;)I	a	getId
		p	1		value
	m	(Ljava/lang/Object;I)V	a	addMapping
		p	1		value
		p	2		id
	m	()Laxk;	b	copy
	m	(Ljava/lang/Object;)Z	b	contains
		p	1		value
	m	(Ljava/lang/Object;I)I	b	indexOf
		p	1		value
		p	2		id
	m	()I	c	size
	m	(I)Laxk;	c	create
		p	0		expectedSize
	m	()I	d	nextId
	m	(I)Z	d	contains
		p	1		index
	m	(Ljava/lang/Object;)I	d	add
		p	1		value
	m	(I)I	e	getValue
		p	1		index
	m	(Ljava/lang/Object;)I	e	hash
		p	1		value
	m	(I)V	f	grow
		p	1		newSize
	m	(I)I	g	findEmpty
		p	1		size
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
c	axl	net/minecraft/util/MinecraftEncryption
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
		p	0		opMode
		p	1		algorithm
		p	2		key
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
		p	0		opMode
		p	1		key
	m	(ILjava/security/Key;[B)[B	a	cipherData
		p	0		opMode
		p	1		key
		p	2		data
	m	(Ljava/lang/String;)Ljava/security/PrivateKey;	a	stringToPemRsaPrivateKey
		p	0		key
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Laxl$a;)Ljava/security/Key;	a	rsaStringToKey
		p	0		key
		p	1		prefix
		p	2		suffix
		p	3		decoder
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
		p	0		baseServerId
		p	1		publicKey
		p	2		secretKey
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
		p	0		key
		p	1		data
	m	(Ljava/security/PrivateKey;)Ljava/lang/String;	a	pemRsaPrivateKeyToString
		p	0		key
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
		p	0		privateKey
		p	1		encryptedSecretKey
	m	(Ljava/security/PublicKey;)Ljava/lang/String;	a	rsaPublicKeyToString
		p	0		key
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
		p	0		key
	m	([[B)[B	a	digestData
		p	0		bytes
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/lang/String;)Ljava/security/PublicKey;	b	stringToRsaPublicKey
		p	0		key
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
		p	0		key
		p	1		data
	m	([B)Ljava/security/PrivateKey;	b	byteToPrivateKey
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
		p	0		key
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$0
		p	0		key
	f	Ljava/lang/String;	a	SIGNING_ALGORITHM
	f	I	b	SIGNATURE_BYTES
	f	Ljava/lang/String;	c	RSA_PUBLIC_KEY_HEADER
	f	Ljava/lang/String;	d	MIME_LINE_SEPARATOR
	f	Ljava/util/Base64$Encoder;	e	MIME_ENCODER
	f	Lcom/mojang/serialization/Codec;	f	PUBLIC_KEY_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PRIVATE_KEY_CODEC
	f	Ljava/lang/String;	h	SYMMETRIC_ALGORITHM
	f	I	i	SYMMETRIC_BITS
	f	Ljava/lang/String;	j	ASYMMETRIC_ALGORITHM
	f	I	k	ASYMMETRIC_BITS
	f	Ljava/lang/String;	l	BYTE_ENCODING
	f	Ljava/lang/String;	m	HASH_ALGORITHM
	f	Ljava/lang/String;	n	PEM_RSA_PRIVATE_KEY_HEADER
	f	Ljava/lang/String;	o	PEM_RSA_PRIVATE_KEY_FOOTER
	f	Ljava/lang/String;	p	RSA_PUBLIC_KEY_FOOTER
c	axl$a	net/minecraft/util/MinecraftEncryption$a
	m	([B)Ljava/security/Key;	apply	apply
		p	1		key
c	axl$b	net/minecraft/util/MinecraftEncryption$b
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Z	a	isValid
	m	(Lvw;Laxl$b;)V	a	write
		p	0		buf
		p	1		signatureData
	m	()[B	b	saltAsBytes
	m	()J	c	salt
	m	()[B	d	signature
	f	Laxl$b;	a	EMPTY
	f	J	b	salt
	f	[B	c	signature
c	axl$c	net/minecraft/util/MinecraftEncryption$c
	m	()J	a	getLong
	f	Ljava/security/SecureRandom;	a	secureRandom
c	axm	net/minecraft/util/CryptographyException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
		p	1		throwable
c	axn	net/minecraft/util/CSVWriter
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
		p	1		writer
		p	2		columns
	m	()Laxn$a;	a	builder
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
		p	0		o
	m	(Ljava/util/stream/Stream;)V	a	writeLine
		p	1		columns
	m	([Ljava/lang/Object;)V	a	writeRow
		p	1		columns
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
c	axn$a	net/minecraft/util/CSVWriter$a
	m	(Ljava/io/Writer;)Laxn;	a	build
		p	1		writer
	m	(Ljava/lang/String;)Laxn$a;	a	addColumn
		p	1		name
	f	Ljava/util/List;	a	headers
c	axo	axo
	m	(Lexc;Laxo$a;)Lexc;	a	gaussianSampleVec3
		p	0		pos
		p	1		rgbFetcher
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
c	axo$a	axo$a
	m	(III)Lexc;	fetch	fetch
		p	1		x
		p	2		y
		p	3		z
c	axp	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(F)Laxp;	a	constant
		p	0		value
	m	(FLaxp;F)Laxp$a;	a	lambda$codec$0
		p	0		location
		p	1		value
		p	2		derivative
	m	(Laxp$d;)Laxp;	a	mapAll
		p	1		visitor
	m	(Laxp$e;)Ljava/lang/Record;	a	lambda$codec$6
		p	0		spline
	m	(Laxp$e;I)Laxp$a;	a	lambda$codec$2
		p	1		index
	m	(Laxp;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
		p	0		spline
	m	(Lazq;)Laxp$b;	a	builder
		p	0		locationFunction
	m	(Lazq;Lazq;)Laxp$b;	a	builder
		p	0		locationFunction
		p	1		amplifier
	m	(Lazq;Ljava/util/List;)Laxp$e;	a	lambda$codec$4
		p	0		locationFunction
		p	1		splines
	m	(Lcom/mojang/datafixers/util/Either;)Laxp;	a	lambda$codec$7
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		locationFunctionCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
		p	2		instance
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	m	(Laxp$e;)Ljava/util/List;	b	lambda$codec$3
		p	0		spline
c	axp$a	net/minecraft/util/CubicSpline$a
	m	()F	a	location
	m	()Laxp;	b	value
	m	()F	c	derivative
	f	F	a	location
	f	Laxp;	b	value
	f	F	c	derivative
c	axp$b	net/minecraft/util/CubicSpline$b
	m	(Lazq;)V	<init>	<init>
		p	1		locationFunction
	m	(Lazq;Lazq;)V	<init>	<init>
		p	1		locationFunction
		p	2		amplifier
	m	()Laxp;	a	build
	m	(FF)Laxp$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FFF)Laxp$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	m	(FLaxp;)Laxp$b;	a	addPoint
		p	1		location
		p	2		value
	m	(FLaxp;F)Laxp$b;	a	addPoint
		p	1		location
		p	2		value
		p	3		derivative
	f	Lazq;	a	coordinate
	f	Lazq;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
c	axp$c	net/minecraft/util/CubicSpline$c
	m	(F)V	<init>	<init>
		p	1		value
	m	()Ljava/lang/String;	a	parityString
	m	(Laxp$d;)Laxp;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()F	d	value
	f	F	b	value
c	axp$d	net/minecraft/util/CubicSpline$d
	m	(Ljava/lang/Object;)Ljava/lang/Object;	visit	visit
		p	1		value
c	axp$e	net/minecraft/util/CubicSpline$e
	m	()Ljava/lang/String;	a	parityString
	m	(D)Ljava/lang/String;	a	lambda$toString$2
		p	0		value
	m	(F[FF[FI)F	a	linearExtend
		p	0		point
		p	1		locations
		p	2		value
		p	3		derivatives
		p	4		i
	m	(F[FI)Z	a	lambda$findIntervalStart$0
	m	(Laxp$d;)Laxp;	a	mapAll
		p	1		visitor
	m	(Laxp$d;Laxp;)Laxp;	a	lambda$mapAll$3
		p	1		value
	m	(Lazq;[FLjava/util/List;[F)Laxp$e;	a	create
		p	0		locationFunction
		p	1		locations
		p	2		values
		p	3		derivatives
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	([F)Ljava/lang/String;	a	toString
		p	1		values
	m	([FF)I	a	findIntervalStart
		p	0		locations
		p	1		x
	m	([FI)D	a	lambda$toString$1
		p	1		index
	m	([FLjava/util/List;[F)V	a	validateSizes
		p	0		locations
		p	1		values
		p	2		derivatives
	m	()F	b	minValue
	m	()F	c	maxValue
	m	()Lazq;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	f	Lazq;	b	coordinate
	f	[F	c	locations
	f	Ljava/util/List;	d	values
	f	[F	e	derivatives
	f	F	f	minValue
	f	F	g	maxValue
c	axq	axq
	m	(I)V	<init>	<init>
		p	1		maxSize
	m	()Ljava/util/List;	a	dump
	m	(Ljava/lang/Object;)V	a	push
		p	1		value
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
c	axr	net/minecraft/util/DelegateDataOutput
	m	(Ljava/io/DataOutput;)V	<init>	<init>
		p	1		delegate
	f	Ljava/io/DataOutput;	a	parent
c	axs	net/minecraft/util/DependencySorter
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Laxs$a;)V	a	lambda$orderByDependencies$5
		p	1		key
		p	2		value
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	a	isCyclic
		p	0		dependencies
		p	1		key
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
		p	1		parentChild
		p	2		visited
		p	3		rootKey
		p	4		callback
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	a	lambda$orderByDependencies$6
		p	4		key
	m	(Ljava/lang/Object;Laxs$a;)Laxs;	a	addEntry
		p	1		key
		p	2		value
	m	(Ljava/util/function/BiConsumer;)V	a	orderByDependencies
		p	1		callback
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Laxs$a;)V	b	lambda$orderByDependencies$3
		p	1		key
		p	2		value
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	b	addDependencyIfNotCyclic
		p	0		dependencies
		p	1		key
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	b	lambda$visitDependenciesAndElement$0
		p	4		child
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	c	lambda$orderByDependencies$4
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	d	lambda$orderByDependencies$2
		p	2		dependency
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	e	lambda$isCyclic$1
		p	2		subdependency
	f	Ljava/util/Map;	a	contents
c	axs$a	net/minecraft/util/DependencySorter$a
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
		p	1		callback
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
		p	1		callback
c	axt	net/minecraft/util/SessionLock
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
		p	1		channel
		p	2		lock
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Laxt;	a	create
		p	0		path
	m	(Ljava/nio/file/Path;)Z	b	isLocked
		p	0		path
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
c	axt$a	net/minecraft/util/SessionLock$ExceptionWorldConflict
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		path
		p	2		message
	m	(Ljava/nio/file/Path;)Laxt$a;	a	alreadyLocked
		p	0		path
c	axu	net/minecraft/util/EncoderCache
	m	(I)V	<init>	<init>
		p	1		size
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrap
		p	1		codec
	f	Lcom/google/common/cache/LoadingCache;	a	cache
c	axu$1	net/minecraft/util/EncoderCache$1
	m	(Laxu$a;)Lcom/mojang/serialization/DataResult;	a	load
c	axu$2	net/minecraft/util/EncoderCache$2
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$encode$0
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	f	Laxu;	b	this$0
c	axu$a	net/minecraft/util/EncoderCache$a
	m	()Lcom/mojang/serialization/DataResult;	a	resolve
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	()Ljava/lang/Object;	c	value
	m	()Lcom/mojang/serialization/DynamicOps;	d	ops
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Ljava/lang/Object;	b	value
	f	Lcom/mojang/serialization/DynamicOps;	c	ops
c	axv	net/minecraft/util/ExceptionSuppressor
	m	()V	a	throwIfPresent
	m	(Ljava/lang/Throwable;)V	a	add
		p	1		throwable
	f	Ljava/lang/Throwable;	a	result
c	axw	net/minecraft/util/ExtraCodecs
	m	()Ljava/lang/String;	a	lambda$static$76
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinExclusiveWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$floatRangeMinExclusiveWithMessage$40
		p	3		value
	m	(II)Lcom/mojang/serialization/Codec;	a	intRange
		p	0		min
		p	1		max
	m	(IILjava/lang/Integer;)Ljava/lang/String;	a	lambda$intRange$38
		p	2		value
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
		p	0		min
		p	1		max
		p	2		messageFactory
	m	(IILjava/util/function/Function;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$intRangeWithMessage$35
		p	3		value
	m	(ILjava/util/Map;)Lcom/mojang/serialization/DataResult;	a	lambda$sizeLimitedMap$81
		p	1		map
	m	(Lakr;)Laxw$c;	a	lambda$static$56
		p	0		id
	m	(Lcom/mojang/authlib/GameProfile;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	lambda$static$74
		p	0		profile
		p	1		properties
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lcom/mojang/authlib/properties/Property;)V	a	lambda$static$73
		p	1		key
		p	2		property
	m	(Lcom/mojang/authlib/properties/Property;)Ljava/util/Optional;	a	lambda$static$62
		p	0		property
	m	(Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$69
		p	0		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/lang/String;Ljava/util/List;)V	a	lambda$static$65
		p	1		key
		p	2		values
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/List;)V	a	lambda$static$67
		p	1		properties
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/Map;)V	a	lambda$static$66
		p	1		map
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/authlib/properties/PropertyMap;	a	lambda$static$68
		p	0		either
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	nonEmptyList
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;I)Lcom/mojang/serialization/Codec;	a	sizeLimitedMap
		p	0		codec
		p	1		maxLength
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	orCompressed
		p	0		uncompressedCodec
		p	1		compressedCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$23
		p	3		instance
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
		p	0		codec
		p	1		leftFieldName
		p	2		rightFieldName
		p	3		combineFunction
		p	4		leftFunction
		p	5		rightFunction
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
		p	0		originalCodec
		p	1		lifecycleGetter
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
		p	0		originalCodec
		p	1		entryLifecycleGetter
		p	2		lifecycleGetter
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Codec;	a	converter
		p	0		ops
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	lambda$converter$0
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$converter$1
		p	1		object
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	asOptionalLong
		p	0		codec
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	orCompressed
		p	0		uncompressedCodec
		p	1		compressedCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$75
		p	0		instance
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$41
		p	0		v
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$37
		p	0		v
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
		p	0		object
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;	a	lambda$ensureHomogenous$46
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$83
		p	0		path
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	dispatchOptionalValue
		p	0		typeKey
		p	1		parametersKey
		p	2		typeCodec
		p	3		typeGetter
		p	4		parametersCodecGetter
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/authlib/properties/Property;	a	lambda$static$63
		p	0		key
		p	1		value
		p	2		signature
	m	(Ljava/lang/String;Ljava/util/regex/PatternSyntaxException;)Ljava/lang/String;	a	lambda$static$48
	m	(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;	a	temporalCodec
		p	0		formatter
	m	(Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$temporalCodec$50
		p	1		string
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$61
		p	0		set
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyList$43
		p	0		list
	m	(Ljava/util/Map;I)Ljava/lang/String;	a	lambda$sizeLimitedMap$80
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	a	lambda$static$58
		p	0		optional
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$59
		p	0		optionalLong
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$27
		p	1		either
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$24
		p	1		pair
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$26
		p	1		object
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$21
		p	1		list
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	retrieveContext
		p	0		retriever
	m	(Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String;	a	lambda$floatRangeMinExclusiveWithMessage$39
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$intRangeWithMessage$34
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$47
		p	1		collection
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$28
		p	2		pair
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$31
		p	1		rawId
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$33
		p	2		element
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
		p	0		elementToRawId
		p	1		rawIdToElement
		p	2		errorRawId
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$60
		p	0		stream
	m	(Ljq;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSet$45
		p	0		entryList
	m	(Lorg/joml/AxisAngle4f;)Lorg/joml/Vector3f;	a	lambda$static$12
		p	0		axisAngle
	m	(Lorg/joml/Matrix4f;)Ljava/util/List;	a	lambda$static$16
		p	0		matrix4f
	m	(Lorg/joml/Quaternionf;)Ljava/util/List;	a	lambda$static$10
		p	0		quaternion
	m	(Lorg/joml/Vector3f;)Ljava/util/List;	a	lambda$static$4
		p	0		vec3f
	m	(Lorg/joml/Vector4f;)Ljava/lang/Integer;	a	lambda$static$17
		p	0		vec4f
	m	([B)Ljava/lang/String;	a	lambda$static$53
		p	0		data
	m	()Ljava/lang/String;	b	lambda$static$51
	m	(Lakr;)Laxw$c;	b	lambda$static$55
		p	0		id
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyHolderSet
		p	0		originalCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Laxw$b;	b	strictUnboundedMap
		p	0		keyCodec
		p	1		elementCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$72
		p	0		instance
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$36
		p	0		v
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$idResolverCodec$32
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$82
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$static$15
		p	0		list
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$20
		p	1		listx
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	ensureHomogenous
		p	0		typeGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$25
		p	2		pair
	m	(Lorg/joml/AxisAngle4f;)Ljava/lang/Float;	b	lambda$static$11
		p	0		axisAngle
	m	(Lorg/joml/Vector4f;)Ljava/util/List;	b	lambda$static$7
		p	0		vec4f
	m	()Ljava/lang/String;	c	lambda$nonEmptyHolderSet$44
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	catchDecoderException
		p	0		codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$64
		p	0		instance
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$30
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$79
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Matrix4f;	c	lambda$static$14
		p	0		listx
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$22
		p	2		pair
	m	()Ljava/lang/String;	d	lambda$nonEmptyList$42
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	d	object2BooleanMap
		p	0		keyCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	d	lambda$static$13
		p	0		instance
	m	(Ljava/lang/Integer;)Ljava/lang/String;	d	lambda$idResolverCodec$29
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$static$78
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	d	lambda$static$9
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	e	optionalEmptyMap
		p	0		codec
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	e	lambda$static$19
		p	0		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	e	lambda$static$77
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Quaternionf;	e	lambda$static$8
	m	(Ljava/lang/Integer;)Ljava/lang/String;	f	lambda$static$18
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	f	lambda$static$71
		p	0		name
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	f	lambda$static$6
		p	0		list
	m	(Ljava/lang/String;)Ljava/lang/String;	g	lambda$static$70
	m	(Ljava/util/List;)Lorg/joml/Vector4f;	g	lambda$static$5
		p	0		listx
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	h	lambda$static$57
		p	0		tagEntry
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	h	lambda$static$3
		p	0		list
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	i	lambda$static$54
		p	0		string
	m	(Ljava/util/List;)Lorg/joml/Vector3f;	i	lambda$static$2
		p	0		listx
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	j	lambda$static$52
		p	0		encoded
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	k	lambda$static$49
		p	0		pattern
	f	Lcom/mojang/serialization/Codec;	A	RESOURCE_PATH_CODEC
	f	Lcom/mojang/serialization/Codec;	B	PROPERTY
	f	Lcom/mojang/serialization/MapCodec;	C	GAME_PROFILE_WITHOUT_PROPERTIES
	f	Lcom/mojang/serialization/Codec;	a	JSON
	f	Lcom/mojang/serialization/Codec;	b	JAVA
	f	Lcom/mojang/serialization/Codec;	c	VECTOR3F
	f	Lcom/mojang/serialization/Codec;	d	VECTOR4F
	f	Lcom/mojang/serialization/Codec;	e	QUATERNIONF_COMPONENTS
	f	Lcom/mojang/serialization/Codec;	f	AXISANGLE4F
	f	Lcom/mojang/serialization/Codec;	g	QUATERNIONF
	f	Lcom/mojang/serialization/Codec;	h	MATRIX4F
	f	Lcom/mojang/serialization/Codec;	i	ARGB_COLOR_CODEC
	f	Lcom/mojang/serialization/Codec;	j	UNSIGNED_BYTE
	f	Lcom/mojang/serialization/Codec;	k	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	l	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	m	POSITIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	n	PATTERN
	f	Lcom/mojang/serialization/Codec;	o	INSTANT_ISO8601
	f	Lcom/mojang/serialization/Codec;	p	BASE64_STRING
	f	Lcom/mojang/serialization/Codec;	q	ESCAPED_STRING
	f	Lcom/mojang/serialization/Codec;	r	TAG_OR_ELEMENT_ID
	f	Ljava/util/function/Function;	s	toOptionalLong
	f	Ljava/util/function/Function;	t	fromOptionalLong
	f	Lcom/mojang/serialization/Codec;	u	BIT_SET
	f	Lcom/mojang/serialization/Codec;	v	PROPERTY_MAP
	f	Lcom/mojang/serialization/Codec;	w	PLAYER_NAME
	f	Lcom/mojang/serialization/Codec;	x	GAME_PROFILE
	f	Lcom/mojang/serialization/Codec;	y	NON_EMPTY_STRING
	f	Lcom/mojang/serialization/Codec;	z	CODEPOINT
c	axw$1	net/minecraft/util/ExtraCodecs$1
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/String;	a	lambda$apply$0
	f	Ljava/lang/Object;	a	val$value
c	axw$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
c	axw$3	net/minecraft/util/ExtraCodecs$3
	f	Lcom/mojang/serialization/MapCodec;	a	val$compressed
	f	Lcom/mojang/serialization/MapCodec;	b	val$normal
c	axw$4	net/minecraft/util/ExtraCodecs$4
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
		p	2		pair
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
c	axw$5	net/minecraft/util/ExtraCodecs$5
	m	(Ljava/lang/Object;Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$decode$0
	f	Lcom/mojang/serialization/Codec;	a	val$codec
c	axw$6	net/minecraft/util/ExtraCodecs$6
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encode
		p	1		codec
		p	2		value
		p	3		ops
	m	(Lcom/mojang/serialization/MapLike;Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
		p	4		pair
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapLike;)Ljava/lang/String;	a	lambda$decode$0
	f	Ljava/lang/String;	a	val$typeKey
	f	Ljava/lang/String;	b	val$valueKey
	f	Lcom/mojang/serialization/Codec;	c	val$typeCodec
	f	Ljava/util/function/Function;	d	val$valueCodec
	f	Ljava/util/function/Function;	e	val$typeGetter
c	axw$7	net/minecraft/util/ExtraCodecs$7
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Z	a	isEmptyMap
		p	0		ops
		p	1		input
	m	(Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	f	Lcom/mojang/serialization/Codec;	a	val$codec
c	axw$a	net/minecraft/util/ExtraCodecs$a
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		retriever
	f	Ljava/util/function/Function;	a	val$getter
c	axw$b	net/minecraft/util/ExtraCodecs$b
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		keyCodec
		p	2		elementCodec
	m	()Ljava/lang/String;	a	lambda$decode$1
	m	(Lcom/mojang/serialization/DataResult;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decode$0
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$2
		p	2		map
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
		p	1		map
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	f	Lcom/mojang/serialization/Codec;	a	keyCodec
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
c	axw$c	net/minecraft/util/ExtraCodecs$c
	m	()Lakr;	a	id
	m	()Z	b	tag
	m	()Ljava/lang/String;	c	decoratedId
	f	Lakr;	a	id
	f	Z	b	tag
c	axx	net/minecraft/util/FastBufferedInputStream
	m	(Ljava/io/InputStream;)V	<init>	<init>
		p	1		stream
	m	(Ljava/io/InputStream;I)V	<init>	<init>
		p	1		stream
		p	2		size
	m	()I	a	bytesInBuffer
	m	()V	b	fill
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
c	axy	net/minecraft/util/ColorUtil
	m	(F)I	a	as8BitChannel
		p	0		value
c	axy$a	net/minecraft/util/ColorUtil$a
	m	(I)I	a	alpha
		p	0		abgr
	m	(II)I	a	color
		p	0		alpha
		p	1		bgr
	m	(IIII)I	a	color
		p	0		a
		p	1		b
		p	2		g
		p	3		r
	m	(I)I	b	red
		p	0		abgr
	m	(I)I	c	green
		p	0		abgr
	m	(I)I	d	blue
		p	0		abgr
	m	(I)I	e	transparent
		p	0		abgr
	m	(I)I	f	opaque
		p	0		abgr
	m	(I)I	g	fromArgb32
		p	0		argb
c	axy$b	net/minecraft/util/ColorUtil$b
	m	(FFFF)I	a	colorFromFloat
		p	0		a
		p	1		r
		p	2		g
		p	3		b
	m	(FII)I	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	alpha
		p	0		argb
	m	(II)I	a	multiply
		p	0		first
		p	1		second
	m	(III)I	a	color
		p	0		red
		p	1		green
		p	2		blue
	m	(IIII)I	a	color
		p	0		alpha
		p	1		red
		p	2		green
		p	3		blue
	m	(I)I	b	red
		p	0		argb
	m	(II)I	b	color
		p	0		alpha
		p	1		rgb
	m	(I)I	c	green
		p	0		argb
	m	(II)I	c	average
		p	0		a
		p	1		b
	m	(I)I	d	blue
		p	0		argb
	m	(I)I	e	opaque
		p	0		argb
c	axz	net/minecraft/util/FileZipper
	m	(Ljava/nio/file/Path;)V	<init>	<init>
		p	1		file
	m	(Ljava/nio/file/Path;)V	a	add
		p	1		source
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
		p	1		target
		p	2		source
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
		p	1		target
		p	2		content
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
		p	0		path
		p	1		attributes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
c	aya	net/minecraft/util/FormattedString
	m	(Laya;Laya;Layb;)Z	a	lambda$fromPair$7
		p	2		visitor
	m	(Layb;)Z	a	lambda$static$0
		p	0		visitor
	m	(Layb;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILxw;I)Z	a	lambda$decorateOutput$6
		p	2		charIndex
		p	3		style
		p	4		charPoint
	m	(Ljava/lang/String;Lxw;Layb;)Z	a	lambda$backward$4
		p	2		visitor
	m	(Ljava/lang/String;Lxw;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Layb;)Z	a	lambda$backward$5
		p	3		visitor
	m	(Ljava/util/List;Layb;)Z	a	lambda$fromList$8
		p	1		visitor
	m	(Lxw;ILayb;)Z	a	lambda$codepoint$1
		p	2		visitor
	m	(Layb;)Z	accept	accept
		p	1		visitor
	m	(Ljava/lang/String;Lxw;Layb;)Z	b	lambda$forward$2
		p	2		visitor
	m	(Ljava/lang/String;Lxw;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Layb;)Z	b	lambda$forward$3
		p	3		visitor
	m	(Ljava/lang/String;Lxw;)Laya;	backward	backward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Lxw;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laya;	backward	backward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(ILxw;)Laya;	codepoint	codepoint
		p	0		codePoint
		p	1		style
	m	(Laya;)Laya;	composite	composite
		p	0		text
	m	(Laya;Laya;)Laya;	composite	composite
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Laya;	composite	composite
		p	0		texts
	m	([Laya;)Laya;	composite	composite
		p	0		texts
	m	(Layb;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Layb;	decorateOutput	decorateOutput
		p	0		visitor
		p	1		codePointMapper
	m	(Ljava/lang/String;Lxw;)Laya;	forward	forward
		p	0		string
		p	1		style
	m	(Ljava/lang/String;Lxw;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Laya;	forward	forward
		p	0		string
		p	1		style
		p	2		codePointMapper
	m	(Ljava/util/List;)Laya;	fromList	fromList
		p	0		texts
	m	(Laya;Laya;)Laya;	fromPair	fromPair
		p	0		text1
		p	1		text2
	f	Laya;	a	EMPTY
c	ayb	net/minecraft/util/FormattedStringEmpty
	m	(ILxw;I)Z	accept	accept
		p	1		index
		p	2		style
		p	3		codePoint
c	ayc	net/minecraft/util/FutureChain
	m	(Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		executor
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$append$0
		p	0		a
		p	1		b
	m	(Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$append$2
		p	0		throwable
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)V	a	lambda$append$1
		p	2		object
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
		p	1		future
		p	2		callback
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	c	head
	f	Ljava/util/concurrent/Executor;	d	executor
	f	Z	e	closed
c	ayd	net/minecraft/util/Graph
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
		p	0		successors
		p	1		visited
		p	2		visiting
		p	3		reversedOrderConsumer
		p	4		now
c	aye	net/minecraft/util/ChatDeserializer
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		reader
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	a	fromNullableJson
		p	0		gson
		p	1		content
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	a	fromJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
		p	0		element
		p	1		name
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
		p	0		object
		p	1		element
		p	2		defaultByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
		p	0		object
		p	1		element
		p	2		defaultChar
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
		p	0		object
		p	1		element
		p	2		defaultDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
		p	0		object
		p	1		element
		p	2		defaultFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
		p	0		object
		p	1		element
		p	2		defaultInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
		p	0		object
		p	1		element
		p	2		defaultLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
		p	0		object
		p	1		name
		p	2		defaultArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		context
		p	3		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
		p	0		object
		p	1		element
		p	2		defaultObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
		p	0		object
		p	1		element
		p	2		defaultValue
		p	3		context
		p	4		type
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
		p	0		object
		p	1		element
		p	2		defaultStr
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
		p	0		object
		p	1		element
		p	2		defaultBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
		p	0		object
		p	1		element
		p	2		defaultBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljm;)Ljm;	a	getAsItem
		p	0		object
		p	1		key
		p	2		defaultValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
		p	0		object
		p	1		element
		p	2		defaultShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
		p	0		object
		p	1		element
		p	2		defaultBoolean
	m	(Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V	a	writeValue
		p	0		writer
		p	1		json
		p	2		comparator
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
	m	(Ljava/io/Reader;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		reader
		p	1		lenient
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	(Ljava/lang/String;Z)Lcom/google/gson/JsonObject;	a	parse
		p	0		content
		p	1		lenient
	m	(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection;	a	sortByKeyIfNeeded
		p	0		entries
		p	1		comparator
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		typeToken
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromJson
		p	0		gson
		p	1		reader
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object;	b	fromNullableJson
		p	0		gson
		p	1		content
		p	2		type
		p	3		lenient
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljm;	b	convertToItem
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
		p	0		object
		p	1		element
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		reader
	m	(Ljava/lang/String;)Lcom/google/gson/JsonArray;	b	parseArray
		p	0		content
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
		p	0		object
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
		p	0		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	e	toStableString
		p	0		json
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement;	h	getNonNull
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	i	getAsString
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljm;	j	getAsItem
		p	0		object
		p	1		key
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	k	getAsBoolean
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	l	getAsDouble
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	m	getAsFloat
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
		p	0		element
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	n	getAsLong
		p	0		object
		p	1		name
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	o	getAsInt
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	p	getAsByte
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	q	getAsCharacter
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	r	getAsBigDecimal
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	s	getAsBigInteger
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	t	getAsShort
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	u	getAsJsonObject
		p	0		object
		p	1		element
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	v	getAsJsonArray
		p	0		object
		p	1		element
	f	Lcom/google/gson/Gson;	a	GSON
c	ayf	net/minecraft/util/HttpUtilities
	m	()I	a	getAvailablePort
	m	(I)Z	a	isPortAvailable
		p	0		port
	m	(Lcom/google/common/hash/HashFunction;ILayf$a;Ljava/io/InputStream;Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	downloadAndHash
		p	0		hashFunction
		p	1		maxBytes
		p	2		listener
		p	3		stream
		p	4		path
	m	(Ljava/nio/file/Path;)V	a	updateModificationTime
		p	0		path
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Ljava/nio/file/Path;	a	cachedFilePath
		p	0		path
		p	1		hashCode
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;)Lcom/google/common/hash/HashCode;	a	hashFile
		p	0		path
		p	1		hashFunction
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;)Z	a	checkExistingFile
		p	0		path
		p	1		hashFunction
		p	2		hashCode
	m	(Ljava/nio/file/Path;Ljava/net/URL;Ljava/util/Map;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;ILjava/net/Proxy;Layf$a;)Ljava/nio/file/Path;	a	downloadFile
		p	0		path
		p	1		url
		p	2		headers
		p	3		hashFunction
		p	4		hashCode
		p	5		maxBytes
		p	6		proxy
		p	7		listener
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ayf$a	net/minecraft/util/HttpUtilities$a
	m	()V	a	requestStart
	m	(J)V	a	downloadedBytes
		p	1		writtenBytes
	m	(Ljava/util/OptionalLong;)V	a	downloadStart
		p	1		contentLength
	m	(Z)V	a	requestFinished
		p	1		success
c	ayg	net/minecraft/util/InclusiveRange
	m	(Ljava/lang/Comparable;)V	<init>	<init>
		p	1		value
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		minInclusive
		p	2		maxInclusive
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	(Layg;)Z	a	contains
		p	1		other
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		elementCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		minInclusive
		p	2		maxInclusive
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
		p	1		value
	m	(Ljava/lang/Comparable;Layg;)Ljava/lang/String;	a	lambda$codec$1
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		minInclusive
		p	1		maxInclusive
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Layg;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
		p	2		range
	m	()Ljava/lang/Comparable;	b	maxInclusive
	m	(Ljava/lang/Comparable;Layg;)Ljava/lang/String;	b	lambda$codec$0
	m	()Ljava/lang/String;	c	lambda$create$3
	f	Lcom/mojang/serialization/Codec;	a	INT
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
c	ayh	net/minecraft/util/KeyDispatchDataCodec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)Layh;	a	of
		p	0		mapCodec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	ayi	ayi
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		delegate
	m	()Ljava/lang/Object;	a	get
	f	Ljava/util/function/Supplier;	a	factory
c	ayj	net/minecraft/util/LinearCongruentialGenerator
	m	(JJ)J	a	next
		p	0		seed
		p	2		salt
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
c	ayk	ayk
	m	()Layk;	b	reversed
c	ayl	ayl
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	toLowercase
		p	1		o
c	ayl$1	ayl$1
	f	Ljava/util/Map;	a	val$lowercaseToConstant
	f	Layl;	b	this$0
c	aym	net/minecraft/util/MemoryReserve
	m	()V	a	allocate
	m	()V	b	release
	f	[B	a	reserve
c	ayn	net/minecraft/util/ModCheck
	m	()Z	a	shouldReportAsModified
	m	(Layn;)Layn;	a	merge
		p	1		brand
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Layn;	a	identify
		p	0		vanillaBrand
		p	1		brandSupplier
		p	2		environment
		p	3		clazz
	m	()Ljava/lang/String;	b	fullDescription
	m	()Layn$a;	c	confidence
	m	()Ljava/lang/String;	d	description
	f	Layn$a;	a	confidence
	f	Ljava/lang/String;	b	description
c	ayn$a	net/minecraft/util/ModCheck$a
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		description
		p	4		modded
	m	()[Layn$a;	a	$values
	f	Layn$a;	a	PROBABLY_NOT
	f	Layn$a;	b	VERY_LIKELY
	f	Layn$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Layn$a;	f	$VALUES
c	ayo	net/minecraft/util/MathHelper
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(D)I	a	floor
		p	0		value
	m	(DD)D	a	absMax
		p	0		a
		p	2		b
	m	(DDD)D	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(DDDDD)D	a	clampedMap
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(DDDDDD)D	a	lerp2
		p	0		deltaX
		p	2		deltaY
		p	4		x0y0
		p	6		x1y0
		p	8		x0y1
		p	10		x1y1
	m	(DDDDDDDDDDD)D	a	lerp3
		p	0		deltaX
		p	2		deltaY
		p	4		deltaZ
		p	6		x0y0z0
		p	8		x1y0z0
		p	10		x0y1z0
		p	12		x1y1z0
		p	14		x0y0z1
		p	16		x1y0z1
		p	18		x0y1z1
		p	20		x1y1z1
	m	(DI)I	a	quantize
		p	0		a
		p	2		b
	m	(F)F	a	sin
		p	0		value
	m	(FF)Z	a	equal
		p	0		a
		p	1		b
	m	(FFF)F	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(FFFFF)F	a	catmullrom
		p	0		delta
		p	1		p0
		p	2		p1
		p	3		p2
		p	4		p3
	m	(FFFI)I	a	hsvToArgb
		p	0		hue
		p	1		saturation
		p	2		value
		p	3		alpha
	m	(FII)I	a	lerpInt
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	a	abs
		p	0		value
	m	(II)I	a	floorDiv
		p	0		dividend
		p	1		divisor
	m	(III)I	a	clamp
		p	0		value
		p	1		min
		p	2		max
	m	(IIII)Ljava/util/stream/IntStream;	a	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
		p	3		steps
	m	(IIIII)I	a	lambda$outFromOrigin$2
		p	4		i
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
		p	0		min
		p	1		max
		p	2		predicate
	m	(J)J	a	square
		p	0		n
	m	(JJJ)J	a	clamp
		p	0		value
		p	2		min
		p	4		max
	m	(Layw;)Ljava/util/UUID;	a	createInsecureUUID
		p	0		random
	m	(Layw;DD)D	a	nextDouble
		p	0		random
		p	1		min
		p	3		max
	m	(Layw;FF)F	a	nextFloat
		p	0		random
		p	1		min
		p	2		max
	m	(Layw;II)I	a	nextInt
		p	0		random
		p	1		min
		p	2		max
	m	(Lexc;Lexc;Lewx;)Z	a	rayIntersectsAABB
		p	0		origin
		p	1		direction
		p	2		box
	m	(Ljava/lang/String;I)I	a	getInt
		p	0		string
		p	1		fallback
	m	(Lkh;)J	a	getSeed
		p	0		vec
	m	(Lorg/apache/commons/lang3/math/Fraction;I)I	a	mulAndTruncate
		p	0		fraction
		p	1		multiplier
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	rotationAroundAxis
		p	0		axis
		p	1		rotation
		p	2		result
	m	([F)V	a	lambda$static$0
		p	0		sineTable
	m	(D)J	b	lfloor
		p	0		value
	m	(DD)Z	b	equal
		p	0		a
		p	2		b
	m	(DDD)D	b	clampedLerp
		p	0		start
		p	2		end
		p	4		delta
	m	(DDDDD)D	b	map
		p	0		value
		p	2		oldStart
		p	4		oldEnd
		p	6		newStart
		p	8		newEnd
	m	(F)F	b	cos
		p	0		value
	m	(FF)F	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(FFF)F	b	clampedLerp
		p	0		start
		p	1		end
		p	2		delta
	m	(FFFFF)F	b	clampedMap
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(FII)I	b	lerpDiscrete
		p	0		delta
		p	1		start
		p	2		end
	m	(I)I	b	wrapDegrees
		p	0		degrees
	m	(II)I	b	positiveModulo
		p	0		dividend
		p	1		divisor
	m	(III)J	b	getSeed
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)Z	b	lambda$outFromOrigin$1
		p	3		i
	m	(Layw;FF)F	b	randomBetween
		p	0		random
		p	1		min
		p	2		max
	m	(Layw;II)I	b	randomBetweenInclusive
		p	0		random
		p	1		min
		p	2		max
	m	(D)I	c	ceil
		p	0		value
	m	(DD)D	c	positiveModulo
		p	0		dividend
		p	2		divisor
	m	(DDD)D	c	inverseLerp
		p	0		value
		p	2		start
		p	4		end
	m	(F)F	c	sqrt
		p	0		value
	m	(FF)F	c	degreesDifference
		p	0		start
		p	1		end
	m	(FFF)F	c	rotateIfNecessary
		p	0		value
		p	1		mean
		p	2		delta
	m	(FFFFF)F	c	map
		p	0		value
		p	1		oldStart
		p	2		oldEnd
		p	3		newStart
		p	4		newEnd
	m	(I)I	c	smallestEncompassingPowerOfTwo
		p	0		value
	m	(II)Z	c	isMultipleOf
		p	0		a
		p	1		b
	m	(III)Ljava/util/stream/IntStream;	c	outFromOrigin
		p	0		seed
		p	1		lowerBound
		p	2		upperBound
	m	(Layw;FF)F	c	normal
		p	0		random
		p	1		mean
		p	2		deviation
	m	(D)D	d	wrapDegrees
		p	0		degrees
	m	(DD)D	d	atan2
		p	0		y
		p	2		x
	m	(DDD)D	d	lerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)I	d	floor
		p	0		value
	m	(FF)F	d	degreesDifferenceAbs
		p	0		first
		p	1		second
	m	(FFF)F	d	approach
		p	0		from
		p	1		to
		p	2		step
	m	(I)Z	d	isPowerOfTwo
		p	0		value
	m	(II)I	d	roundToward
		p	0		value
		p	1		divisor
	m	(D)D	e	frac
		p	0		value
	m	(DD)D	e	lengthSquared
		p	0		a
		p	2		b
	m	(DDD)D	e	rotLerp
		p	0		delta
		p	2		start
		p	4		end
	m	(F)F	e	abs
		p	0		value
	m	(FF)F	e	triangleWave
		p	0		value
		p	1		maxDeviation
	m	(FFF)F	e	approachDegrees
		p	0		from
		p	1		to
		p	2		step
	m	(I)I	e	ceillog2
		p	0		value
	m	(II)I	e	positiveCeilDiv
		p	0		a
		p	1		b
	m	(D)D	f	invSqrt
		p	0		x
	m	(DD)D	f	length
		p	0		a
		p	2		b
	m	(DDD)D	f	lengthSquared
		p	0		a
		p	2		b
		p	4		c
	m	(F)I	f	ceil
		p	0		value
	m	(FFF)I	f	color
		p	0		r
		p	1		g
		p	2		b
	m	(I)I	f	log2
		p	0		value
	m	(D)D	g	fastInvSqrt
		p	0		x
	m	(DDD)D	g	length
		p	0		a
		p	2		b
		p	4		c
	m	(F)F	g	wrapDegrees
		p	0		degrees
	m	(FFF)F	g	inverseLerp
		p	0		value
		p	1		start
		p	2		end
	m	(I)I	g	murmurHash3Mixer
		p	0		value
	m	(D)D	h	smoothstep
		p	0		value
	m	(F)F	h	frac
		p	0		value
	m	(FFF)I	h	hsvToRgb
		p	0		hue
		p	1		saturation
		p	2		value
	m	(I)I	h	square
		p	0		n
	m	(D)D	i	smoothstepDerivative
		p	0		value
	m	(F)F	i	invSqrt
		p	0		x
	m	(FFF)F	i	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)I	j	sign
		p	0		value
	m	(F)F	j	fastInvCubeRoot
		p	0		x
	m	(FFF)F	j	rotLerp
		p	0		delta
		p	1		start
		p	2		end
	m	(D)D	k	square
		p	0		n
	m	(F)F	k	square
		p	0		n
	m	(FFF)F	k	lengthSquared
		p	0		a
		p	1		b
		p	2		c
	m	(D)D	l	wobble
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	Lorg/joml/Vector3f;	h	Y_AXIS
	f	Lorg/joml/Vector3f;	i	X_AXIS
	f	Lorg/joml/Vector3f;	j	Z_AXIS
	f	J	k	UUID_VERSION
	f	J	l	UUID_VERSION_TYPE_4
	f	J	m	UUID_VARIANT
	f	J	n	UUID_VARIANT_2
	f	F	o	SIN_SCALE
	f	[F	p	SIN
	f	Layw;	q	RANDOM
	f	[I	r	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	s	ONE_SIXTH
	f	I	t	FRAC_EXP
	f	I	u	LUT_SIZE
	f	D	v	FRAC_BIAS
	f	[D	w	ASIN_TAB
	f	[D	x	COS_TAB
c	ayp	net/minecraft/util/NativeModuleLister
	m	()Ljava/util/List;	a	listModules
	m	(Layp$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
		p	0		moduleName
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
		p	0		path
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
		p	0		key
		p	1		languageId
		p	2		codePage
	m	(Lp;)V	a	addCrashSection
		p	0		section
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
		p	0		indices
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Layp$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
		p	0		module
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
		p	0		pointer
		p	1		path
		p	2		lengthPointer
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
c	ayp$a	net/minecraft/util/NativeModuleLister$a
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
		p	1		path
		p	2		info
	m	(Layp$b;)Ljava/lang/String;	a	lambda$toString$0
		p	1		info
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
c	ayp$b	net/minecraft/util/NativeModuleLister$b
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		fileDescription
		p	2		fileVersion
		p	3		companyName
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
c	ayq	net/minecraft/util/NullOps
	m	()Lazs;	a	empty
	m	(B)Lazs;	a	createByte
	m	(D)Lazs;	a	createDouble
	m	(F)Lazs;	a	createFloat
	m	(I)Lazs;	a	createInt
	m	(J)Lazs;	a	createLong
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lazs;Lazs;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lazs;Lazs;Lazs;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lazs;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lazs;Ljava/lang/String;)Lazs;	a	remove
	m	(Lazs;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lazs;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lcom/mojang/serialization/DynamicOps;Lazs;)Ljava/lang/Object;	a	convertTo
	m	(Ljava/lang/Number;)Lazs;	a	createNumeric
	m	(Ljava/lang/String;)Lazs;	a	createString
	m	(Ljava/nio/ByteBuffer;)Lazs;	a	createByteList
	m	(Ljava/util/Map;)Lazs;	a	createMap
	m	(Ljava/util/stream/IntStream;)Lazs;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lazs;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lazs;	a	createMap
	m	(S)Lazs;	a	createShort
	m	(Z)Lazs;	a	createBoolean
	m	()Lazs;	b	emptyMap
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	b	getBooleanValue
	m	(Ljava/util/stream/Stream;)Lazs;	b	createList
	m	()Lazs;	c	emptyList
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	c	getStringValue
	m	()Ljava/lang/String;	d	lambda$getLongStream$10
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	d	getMapValues
	m	()Ljava/lang/String;	e	lambda$getIntStream$9
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	e	getMapEntries
	m	()Ljava/lang/String;	f	lambda$getByteBuffer$8
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	f	getMap
	m	()Ljava/lang/String;	g	lambda$getList$7
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	g	getStream
	m	()Ljava/lang/String;	h	lambda$getStream$6
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	h	getList
	m	()Ljava/lang/String;	i	lambda$getMap$5
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	i	getByteBuffer
	m	()Ljava/lang/String;	j	lambda$getMapEntries$4
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	j	getIntStream
	m	()Ljava/lang/String;	k	lambda$getMapValues$3
	m	(Lazs;)Lcom/mojang/serialization/DataResult;	k	getLongStream
	m	()Ljava/lang/String;	l	lambda$getStringValue$2
	m	()Ljava/lang/String;	m	lambda$getBooleanValue$1
	m	()Ljava/lang/String;	n	lambda$getNumberValue$0
	f	Layq;	a	INSTANCE
c	ayq$a	net/minecraft/util/NullOps$a
	m	()Lazs;	a	initBuilder
	m	(Lazs;Lazs;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Lazs;Lazs;Lazs;)Lazs;	a	append
c	ayr	net/minecraft/util/OptionEnum
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Lwz;	d	getCaption
c	ays	net/minecraft/util/ParticleUtils
	m	(Layw;)Lexc;	a	getRandomSpeedRanges
		p	0		random
	m	(Ldcw;)Lexc;	a	lambda$spawnParticlesOnBlockFaces$0
	m	(Ldcw;Ljd;Layw;Llk;)V	a	spawnParticleBelow
		p	0		world
		p	1		pos
		p	2		random
		p	3		effect
	m	(Ldcw;Ljd;Lji;Llk;Lexc;D)V	a	spawnParticleOnFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		effect
		p	4		velocity
		p	5		offsetMultiplier
	m	(Ldcw;Ljd;Llk;Lbpw;)V	a	spawnParticlesOnBlockFaces
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
	m	(Ldcw;Ljd;Llk;Lbpw;Lji;Ljava/util/function/Supplier;D)V	a	spawnParticlesOnBlockFace
		p	0		world
		p	1		pos
		p	2		effect
		p	3		count
		p	4		direction
		p	5		velocity
		p	6		offsetMultiplier
	m	(Ldcx;Ljd;I)V	a	spawnSmashAttackParticles
		p	0		world
		p	1		pos
		p	2		count
	m	(Ldcx;Ljd;IDDZLlk;)V	a	spawnParticles
		p	0		world
		p	1		pos
		p	2		count
		p	3		horizontalOffset
		p	5		verticalOffset
		p	7		force
		p	8		effect
	m	(Ldcx;Ljd;ILlk;)V	a	spawnParticleInBlock
		p	0		world
		p	1		pos
		p	2		count
		p	3		effect
	m	(Lji$a;Ldcw;Ljd;DLlk;Lbqc;)V	a	spawnParticlesAlongAxis
		p	0		axis
		p	1		world
		p	2		pos
		p	3		variance
		p	5		effect
		p	6		range
c	ayt	ayt
	m	()I	a	width
	m	(Ljava/io/InputStream;)Layt;	a	fromStream
		p	0		stream
	m	(Ljava/nio/ByteBuffer;)V	a	validateHeader
		p	0		buf
	m	([B)Layt;	a	fromBytes
		p	0		bytes
	m	()I	b	height
	f	I	a	width
	f	I	b	height
	f	J	c	PNG_HEADER
	f	I	d	IHDR_TYPE
	f	I	e	IHDR_SIZE
c	ayu	net/minecraft/util/ProblemReporter
	m	(Ljava/lang/String;)Layu;	a	forChild
		p	1		name
	m	(Ljava/lang/String;)V	b	report
		p	1		message
c	ayu$a	net/minecraft/util/ProblemReporter$a
	m	(Lcom/google/common/collect/Multimap;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		errors
		p	2		pathSupplier
	m	()Lcom/google/common/collect/Multimap;	a	get
	m	(Ljava/lang/String;)Layu;	a	forChild
		p	1		name
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getReport$2
	m	()Ljava/util/Optional;	b	getReport
	m	(Ljava/lang/String;)V	b	report
		p	1		message
	m	()Ljava/lang/String;	c	getPath
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$forChild$1
	m	()Ljava/lang/String;	d	lambda$new$0
	f	Lcom/google/common/collect/Multimap;	a	problems
	f	Ljava/util/function/Supplier;	b	path
	f	Ljava/lang/String;	c	pathCache
c	ayv	net/minecraft/util/IProgressUpdate
	m	()V	a	stop
	m	(I)V	a	progressStagePercentage
		p	1		percentage
	m	(Lwz;)V	a	progressStartNoAbort
		p	1		title
	m	(Lwz;)V	b	progressStart
		p	1		title
	m	(Lwz;)V	c	progressStage
		p	1		task
c	ayw	net/minecraft/util/RandomSource
	m	()Layw;	a	create
	m	(DD)D	a	triangle
		p	1		mode
		p	3		deviation
	m	(I)I	a	nextInt
		p	1		bound
	m	(II)I	a	nextIntBetweenInclusive
		p	1		min
		p	2		max
	m	(J)Layw;	a	create
		p	0		seed
	m	()Layw;	b	createThreadSafe
	m	(I)V	b	consumeCount
		p	1		count
	m	(II)I	b	nextInt
		p	1		min
		p	2		max
	m	(J)V	b	setSeed
		p	1		seed
	m	()Layw;	c	createNewThreadLocalInstance
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	D	a	GAUSSIAN_SPREAD_FACTOR
c	ayx	net/minecraft/util/ResourceLocationPattern
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		namespace
		p	2		path
	m	()Ljava/util/function/Predicate;	a	namespacePredicate
	m	(Lakr;)Z	a	lambda$new$5
		p	1		id
	m	(Layx;)Ljava/util/Optional;	a	lambda$static$1
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/lang/String;)Z	a	lambda$new$4
		p	0		path_
	m	()Ljava/util/function/Predicate;	b	pathPredicate
	m	(Layx;)Ljava/util/Optional;	b	lambda$static$0
		p	0		entry
	m	(Ljava/lang/String;)Z	b	lambda$new$3
		p	0		namespace_
	m	()Ljava/util/function/Predicate;	c	locationPredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	namespacePattern
	f	Ljava/util/function/Predicate;	c	namespacePredicate
	f	Ljava/util/Optional;	d	pathPattern
	f	Ljava/util/function/Predicate;	e	pathPredicate
	f	Ljava/util/function/Predicate;	f	locationPredicate
c	ayy	net/minecraft/util/SegmentedAnglePrecision
	m	(I)V	<init>	<init>
		p	1		precision
	m	()I	a	getMask
	m	(F)I	a	fromDegreesWithTurns
		p	1		degrees
	m	(I)F	a	toDegreesWithTurns
		p	1		rotation
	m	(II)Z	a	isSameAxis
		p	1		alpha
		p	2		beta
	m	(Lji;)I	a	fromDirection
		p	1		direction
	m	(F)I	b	fromDegrees
		p	1		degrees
	m	(I)F	b	toDegrees
		p	1		rotation
	m	(I)I	c	normalize
		p	1		rotationBits
	f	I	a	mask
	f	I	b	precision
	f	F	c	degreeToAngle
	f	F	d	angleToDegree
c	ayz	net/minecraft/util/SequencedPriorityIterator
	m	()V	a	switchCacheToNextHighestPrioQueue
	m	(I)Ljava/util/Deque;	a	lambda$add$0
		p	0		p
	m	(Ljava/lang/Object;I)V	a	add
		p	1		value
		p	2		priority
	f	I	a	MIN_PRIO
	f	Ljava/util/Deque;	b	highestPrioQueue
	f	I	c	highestPrio
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	queuesByPriority
c	aza	net/minecraft/util/SignatureUpdater
	m	(Laza$a;)V	update	update
		p	1		updater
c	aza$a	net/minecraft/util/SignatureUpdater$a
	m	([B)V	update	update
		p	1		data
c	azb	net/minecraft/util/SignatureValidator
	m	(Laza;[B)Z	a	lambda$static$0
		p	0		updatable
		p	1		signatureData
	m	(Laza;[BLcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Z	a	lambda$from$3
		p	2		keyInfo
	m	(Laza;[BLjava/security/Signature;)Z	a	verifySignature
		p	0		updatable
		p	1		signatureData
		p	2		signature
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lazb;	a	from
		p	0		servicesKeySet
		p	1		servicesKeyType
	m	(Ljava/lang/String;Ljava/security/PublicKey;Laza;[B)Z	a	lambda$from$2
		p	2		updatable
		p	3		signatureData
	m	(Ljava/security/PublicKey;Ljava/lang/String;)Lazb;	a	from
		p	0		publicKey
		p	1		algorithm
	m	(Ljava/util/Collection;Laza;[B)Z	a	lambda$from$4
		p	1		updatable
		p	2		signatureData
	m	([BLaza$a;)V	a	lambda$validate$1
		p	1		updater
	m	([B[B)Z	a	validate
		p	1		signedData
		p	2		signatureData
	m	(Laza;[B)Z	validate	validate
		p	1		updatable
		p	2		signatureData
	f	Lazb;	a	NO_VALIDATION
	f	Lorg/slf4j/Logger;	b	LOGGER
c	azc	net/minecraft/util/Signer
	m	(Ljava/lang/String;Ljava/security/PrivateKey;Laza;)[B	a	lambda$from$1
		p	2		updatable
	m	(Ljava/security/PrivateKey;Ljava/lang/String;)Lazc;	a	from
		p	0		privateKey
		p	1		algorithm
	m	([B)[B	a	sign
		p	1		data
	m	([BLaza$a;)V	a	lambda$sign$0
		p	1		updater
	m	(Laza;)[B	sign	sign
		p	1		updatable
	f	Lorg/slf4j/Logger;	a	LOGGER
c	azd	net/minecraft/util/SimpleBitStorage
	m	(II)V	<init>	<init>
		p	1		elementBits
		p	2		size
	m	(II[I)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	(II[J)V	<init>	<init>
		p	1		elementBits
		p	2		size
		p	3		data
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(I)I	b	cellIndex
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laxc;	d	copy
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
c	azd$a	net/minecraft/util/SimpleBitStorage$a
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	aze	net/minecraft/util/SingleKeyCache
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getValue
		p	1		input
	f	Ljava/util/function/Function;	a	computeValue
	f	Ljava/lang/Object;	b	cacheKey
	f	Ljava/lang/Object;	c	cachedValue
c	azf	azf
	m	()V	a	reset
	m	(DD)D	a	getNewDeltaValue
		p	1		original
		p	3		smoother
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
c	azg	net/minecraft/util/ArraySetSorted
	m	(ILjava/util/Comparator;)V	<init>	<init>
		p	1		initialCapacity
		p	2		comparator
	m	()Lazg;	a	create
	m	(I)Lazg;	a	create
		p	0		initialCapacity
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
		p	1		object
	m	(Ljava/lang/Object;I)V	a	addInternal
		p	1		object
		p	2		index
	m	(Ljava/util/Comparator;)Lazg;	a	create
		p	0		comparator
	m	(Ljava/util/Comparator;I)Lazg;	a	create
		p	0		comparator
		p	1		initialCapacity
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
		p	0		array
	m	()Ljava/lang/Object;	b	first
	m	(I)I	b	getInsertionPosition
		p	0		binarySearchResult
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
		p	1		object
	m	()Ljava/lang/Object;	c	last
	m	(I)V	c	grow
		p	1		minCapacity
	m	(Ljava/lang/Object;)I	c	findIndex
		p	1		object
	m	(I)V	d	removeInternal
		p	1		index
	m	(I)Ljava/lang/Object;	e	getInternal
		p	1		index
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
c	azg$a	net/minecraft/util/ArraySetSorted$a
	f	Lazg;	a	this$0
	f	I	b	index
	f	I	c	last
c	azh	net/minecraft/util/SpawnUtil
	m	(Laqu;ILjd$a;Lazh$a;)Z	a	moveToPossibleSpawnPosition
		p	0		world
		p	1		verticalRange
		p	2		pos
		p	3		requirements
	m	(Lbsx;Lbtr;Laqu;Ljd;IIILazh$a;)Ljava/util/Optional;	a	trySpawnMob
		p	0		entityType
		p	1		reason
		p	2		world
		p	3		pos
		p	4		tries
		p	5		horizontalRange
		p	6		verticalRange
		p	7		requirements
c	azh$a	net/minecraft/util/SpawnUtil$a
	m	(Laqu;Ljd;Ldtc;Ljd;Ldtc;)Z	a	lambda$static$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Laqu;Ljd;Ldtc;Ljd;Ldtc;)Z	b	lambda$static$0
		p	0		world
		p	1		pos
		p	2		state
		p	3		abovePos
		p	4		aboveState
	m	(Laqu;Ljd;Ldtc;Ljd;Ldtc;)Z	canSpawnOn	canSpawnOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		abovePos
		p	5		aboveState
	f	Lazh$a;	a	LEGACY_IRON_GOLEM
	f	Lazh$a;	b	ON_TOP_OF_COLLIDER
c	azi	net/minecraft/util/StaticCache2D
	m	(IIIILazi$a;)V	<init>	<init>
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
		p	5		getter
	m	(II)Ljava/lang/Object;	a	get
		p	1		x
		p	2		z
	m	(IIILazi$a;)Lazi;	a	create
		p	0		centerX
		p	1		centerZ
		p	2		radius
		p	3		getter
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		callback
	m	(II)Z	b	contains
		p	1		x
		p	2		z
	m	(II)I	c	getIndex
		p	1		x
		p	2		z
	f	I	a	minX
	f	I	b	minZ
	f	I	c	sizeX
	f	I	d	sizeZ
	f	[Ljava/lang/Object;	e	cache
c	azi$a	net/minecraft/util/StaticCache2D$a
	m	(II)Ljava/lang/Object;	get	get
		p	1		x
		p	2		z
c	azj	net/minecraft/util/StringDecomposer
	m	(Layb;Lxw;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
		p	1		stylex
		p	2		string
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
		p	0		text
	m	(Ljava/lang/String;ILxw;Layb;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		style
		p	3		visitor
	m	(Ljava/lang/String;ILxw;Lxw;Layb;)Z	a	iterateFormatted
		p	0		text
		p	1		startIndex
		p	2		startingStyle
		p	3		resetStyle
		p	4		visitor
	m	(Ljava/lang/String;Lxw;Layb;)Z	a	iterate
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILxw;I)Z	a	lambda$getPlainText$2
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Lxe;)Ljava/lang/String;	a	getPlainText
		p	0		text
	m	(Lxe;Lxw;Layb;)Z	a	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	m	(Lxw;Layb;IC)Z	a	feedChar
		p	0		style
		p	1		visitor
		p	2		index
		p	3		c
	m	(Ljava/lang/String;Lxw;Layb;)Z	b	iterateBackwards
		p	0		text
		p	1		style
		p	2		visitor
	m	(Ljava/lang/StringBuilder;ILxw;I)Z	b	lambda$filterBrokenSurrogates$1
		p	1		index
		p	2		style
		p	3		codePoint
	m	(Ljava/lang/String;Lxw;Layb;)Z	c	iterateFormatted
		p	0		text
		p	1		style
		p	2		visitor
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
c	azk	net/minecraft/util/INamable
	m	(Lazk;)Lazk;	a	lambda$createNameLookup$3
		p	0		value
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fromValues$1
		p	0		valueName
	m	(Ljava/util/Map;Ljava/lang/String;)Lazk;	a	lambda$createNameLookup$4
		p	1		name
	m	(Ljava/util/function/Function;Lazk;)Ljava/lang/String;	a	lambda$createNameLookup$2
		p	1		value
	m	(Ljava/util/function/Supplier;)Lazk$a;	a	fromEnum
		p	0		enumValues
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lazk$a;	a	fromEnumWithMapping
		p	0		enumValues
		p	1		valueNameTransformer
	m	([Lazk;)Lcom/mojang/serialization/Keyable;	a	keys
		p	0		values
	m	([Lazk;Ljava/util/function/Function;)Ljava/util/function/Function;	a	createNameLookup
		p	0		values
		p	1		valueNameTransformer
	m	([Lazk;Ljava/util/function/Function;Ljava/lang/String;)Lazk;	a	lambda$createNameLookup$5
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$fromEnum$0
		p	0		id
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	b	fromValues
		p	0		values
	m	()Ljava/lang/String;	c	getSerializedName
	f	I	W	PRE_BUILT_MAP_THRESHOLD
c	azk$1	net/minecraft/util/INamable$1
	f	[Lazk;	a	val$values
c	azk$a	net/minecraft/util/INamable$a
	m	([Ljava/lang/Enum;Ljava/util/function/Function;)V	<init>	<init>
		p	1		values
		p	2		idToIdentifiable
	m	(Ljava/lang/Object;)I	a	lambda$new$0
		p	0		enum_
	m	(Ljava/lang/String;)Ljava/lang/Enum;	a	byName
		p	1		id
	m	(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;	a	byName
		p	1		id
		p	2		fallback
	f	Ljava/util/function/Function;	a	resolver
c	azk$b	net/minecraft/util/INamable$b
	m	([Lazk;Ljava/util/function/Function;Ljava/util/function/ToIntFunction;)V	<init>	<init>
		p	1		values
		p	2		idToIdentifiable
		p	3		identifiableToOrdinal
	m	(Lazk;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	([Lazk;I)Lazk;	a	lambda$new$0
		p	1		ordinal
	f	Lcom/mojang/serialization/Codec;	a	codec
c	azl	net/minecraft/util/UtilColor
	m	(C)Z	a	isAllowedChatCharacter
		p	0		c
	m	(I)Z	a	isWhitespace
		p	0		c
	m	(IF)Ljava/lang/String;	a	formatTickDuration
		p	0		ticks
		p	1		tickRate
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
		p	0		text
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
		p	0		text
		p	1		maxLength
		p	2		addEllipsis
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	filterText
		p	0		string
		p	1		allowLinebreak
	m	(I)Z	b	lambda$isValidPlayerName$0
		p	0		c
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
		p	0		text
	m	(Ljava/lang/String;)I	c	lineCount
		p	0		text
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
		p	0		text
	m	(Ljava/lang/String;)Ljava/lang/String;	e	trimChatMessage
		p	0		text
	m	(Ljava/lang/String;)Z	f	isValidPlayerName
		p	0		name
	m	(Ljava/lang/String;)Ljava/lang/String;	g	filterText
		p	0		string
	m	(Ljava/lang/String;)Z	h	isBlank
		p	0		string
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
c	azm	net/minecraft/util/TaskChainer
	m	(Ljava/lang/Runnable;Ljava/lang/Object;)V	a	lambda$append$0
		p	1		current
	m	(Ljava/lang/Runnable;)V	append	append
		p	1		callback
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
		p	1		future
		p	2		callback
	m	(Ljava/util/concurrent/Executor;)Lazm;	immediate	immediate
		p	0		executor
	f	Lorg/slf4j/Logger;	a	LOGGER
c	azm$1	net/minecraft/util/TaskChainer$1
	m	(Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$append$0
		p	0		throwable
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
		p	1		future
		p	2		callback
	f	Ljava/util/concurrent/Executor;	b	val$executor
c	azn	net/minecraft/util/ThreadingDetector
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()V	a	checkAndLock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Lz;	a	makeThreadingException
		p	0		message
		p	1		thread
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
		p	0		thread
	m	()V	b	checkAndUnlock
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Lz;	f	fullException
c	azo	net/minecraft/util/TimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	azo$a	net/minecraft/util/TimeSource$a
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
		p	1		timeUnit
c	azp	net/minecraft/util/TimeRange
	m	(II)Lbqc;	a	rangeOfSeconds
		p	0		min
		p	1		max
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
	f	J	c	MILLISECONDS_PER_SECOND
	f	J	d	SECONDS_PER_HOUR
	f	I	e	SECONDS_PER_MINUTE
c	azq	net/minecraft/util/ToFloatFunction
	m	(F)F	a	lambda$static$0
		p	0		value
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lazq;	a	createUnlimited
		p	0		delegate
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	(Ljava/util/function/Function;)Lazq;	a	comap
		p	1		before
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lazq;	a	IDENTITY
c	azq$1	net/minecraft/util/ToFloatFunction$1
	m	(Ljava/lang/Float;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	b	val$function
c	azq$2	net/minecraft/util/ToFloatFunction$2
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lazq;	b	val$outer
	f	Ljava/util/function/Function;	c	val$function
c	azr	net/minecraft/util/Tuple
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		left
		p	2		right
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
		p	1		left
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
		p	1		right
c	azs	net/minecraft/util/Unit
	m	()[Lazs;	a	$values
	f	Lazs;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	[Lazs;	c	$VALUES
c	azt	net/minecraft/util/VisibleForDebug
c	azu	net/minecraft/util/ZeroBitStorage
	m	(I)V	<init>	<init>
		p	1		size
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)I	a	getAndSet
		p	1		index
		p	2		value
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
		p	1		action
	m	([I)V	a	unpack
		p	1		out
	m	()I	b	getSize
	m	(II)V	b	set
		p	1		index
		p	2		value
	m	()I	c	getBits
	m	()Laxc;	d	copy
	f	[J	a	RAW
	f	I	b	size
c	azv	net/minecraft/util/datafix/ComponentDataFixUtils
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	wrapLiteralStringAsComponent
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$wrapLiteralStringAsComponent$0
		p	1		string
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	createEmptyComponent
		p	0		ops
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	createPlainTextComponent
		p	0		ops
		p	1		string
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	extractTranslationString
		p	0		json
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	rewriteFromLenient
		p	0		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	createTranslatableComponent
		p	0		ops
		p	1		key
	m	(Ljava/lang/String;)Ljava/lang/String;	b	createTextComponentJson
		p	0		string
	f	Ljava/lang/String;	a	EMPTY_CONTENTS
c	azw	net/minecraft/util/datafix/DataFixTypes
	m	(Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	3		typeReference
	m	()I	a	currentVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	update
		p	1		dataFixer
		p	2		dynamic
		p	3		oldVersion
		p	4		newVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lub;I)Lub;	a	updateToCurrentVersion
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lub;II)Lub;	a	update
		p	1		dataFixer
		p	2		nbt
		p	3		oldVersion
		p	4		newVersion
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec;	a	wrapCodec
		p	1		baseCodec
		p	2		dataFixer
		p	3		currentDataVersion
	m	()[Lazw;	b	$values
	f	Lazw;	a	LEVEL
	f	Lazw;	b	PLAYER
	f	Lazw;	c	CHUNK
	f	Lazw;	d	HOTBAR
	f	Lazw;	e	OPTIONS
	f	Lazw;	f	STRUCTURE
	f	Lazw;	g	STATS
	f	Lazw;	h	SAVED_DATA_COMMAND_STORAGE
	f	Lazw;	i	SAVED_DATA_FORCED_CHUNKS
	f	Lazw;	j	SAVED_DATA_MAP_DATA
	f	Lazw;	k	SAVED_DATA_MAP_INDEX
	f	Lazw;	l	SAVED_DATA_RAIDS
	f	Lazw;	m	SAVED_DATA_RANDOM_SEQUENCES
	f	Lazw;	n	SAVED_DATA_SCOREBOARD
	f	Lazw;	o	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lazw;	p	ADVANCEMENTS
	f	Lazw;	q	POI_CHUNK
	f	Lazw;	r	WORLD_GEN_SETTINGS
	f	Lazw;	s	ENTITY_CHUNK
	f	Ljava/util/Set;	t	TYPES_FOR_LEVEL_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	type
	f	[Lazw;	v	$VALUES
c	azw$1	net/minecraft/util/datafix/DataFixTypes$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
		p	1		encoded
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	f	I	b	val$defaultVersion
	f	Lcom/mojang/datafixers/DataFixer;	c	val$dataFixer
	f	Lazw;	d	this$0
c	azx	net/minecraft/util/datafix/DataConverterRegistry
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	(Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$4
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
		p	0		builder
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$addFixers$5
		p	0		frogVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$7
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
		p	0		old
		p	1		current
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$10
		p	2		string
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamerNoNamespace
		p	0		replacements
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$9
		p	1		string
	m	(Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;	a	optimize
		p	0		requiredTypes
	m	()Lcom/mojang/datafixers/DataFixerBuilder$Result;	b	createFixerUpper
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	b	lambda$addFixers$3
		p	0		catVariants
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$2
		p	0		id
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	b	createRenamer
		p	0		replacements
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	b	lambda$createRenamerNoNamespace$8
		p	1		string
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$1
		p	0		id
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$6
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$addFixers$0
		p	0		id
	f	I	a	BLENDING_VERSION
	f	Ljava/util/function/BiFunction;	b	SAME
	f	Ljava/util/function/BiFunction;	c	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixerBuilder$Result;	d	DATA_FIXER
c	azx$1	net/minecraft/util/datafix/DataConverterRegistry$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
c	azx$2	net/minecraft/util/datafix/DataConverterRegistry$2
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
c	azy	net/minecraft/util/datafix/ExtraDataFixUtils
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	cast
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBlockPos
		p	0		dynamic
	m	([Ljava/util/function/Function;)Ljava/util/function/Function;	a	chainAllFilters
		p	0		fixes
	m	([Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$chainAllFilters$0
c	azz	net/minecraft/util/datafix/FixWolfHealth
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$4
		p	0		wolfDynamic
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	1		attributesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$3
		p	0		healthDynamic
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		attributeDynamic
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
		p	1		baseDynamic
	f	Ljava/lang/String;	a	WOLF_ID
	f	Ljava/lang/String;	b	WOLF_HEALTH
c	baa	net/minecraft/util/datafix/DataBitsPacked
	m	(II)V	<init>	<init>
		p	1		unitSize
		p	2		length
	m	(II[J)V	<init>	<init>
		p	1		unitSize
		p	2		length
		p	3		array
	m	()[J	a	getRaw
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	()I	b	getBits
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
c	bab	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
		p	1		typed
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		typed
		p	2		choiceName
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
		p	0		arrowData
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
		p	1		t
c	bac	net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$processSectionRecords$4
		p	2		dynamics
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	processSection
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	processSectionRecords
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$3
		p	1		sections
	f	Ljava/lang/String;	a	name
c	bad	net/minecraft/util/datafix/fixes/DataConverterUUIDBase
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
		p	1		typed
		p	2		name
		p	3		updater
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
		p	1		mostBits
		p	3		leastBits
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
		p	1		mostBitsKey
		p	2		leastBitsKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
c	bae	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		typeReference
		p	3		key
		p	4		value
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
c	baf	net/minecraft/util/datafix/fixes/DataConverterAddChoices
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		types
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		inputChoiceType
		p	2		outputChoiceType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	bag	net/minecraft/util/datafix/fixes/DataConverterAdvancement
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	f	Ljava/util/Map;	a	RENAMES
c	bah	net/minecraft/util/datafix/fixes/DataConverterAdvancementBase
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
c	bai	net/minecraft/util/datafix/fixes/AreaEffectCloudPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		areaEffectCloudDynamic
c	baj	net/minecraft/util/datafix/fixes/AttributeModifierIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixEntity
		p	0		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	convertModifierForEntity
		p	0		attributeDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAttribute$7
		p	1		modifiersDynamic
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixModifiers$2
		p	1		modifierDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixModifiersTypeWrapper
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
		p	0		uuidArray
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixItemStackComponents
		p	0		stackDataDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	fixModifiers
		p	0		dynamicStream
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixAttribute
		p	0		attributeDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$10
		p	0		remainder
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	d	lambda$fixAttribute$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixEntity$9
		p	0		attributesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackComponents$5
		p	0		attributeModifiersDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackComponents$4
		p	0		modifiersDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$convertModifierForEntity$3
		p	0		operationDynamic
	f	Ljava/util/Map;	a	ID_MAP
	f	Ljava/util/Map;	b	NAME_MAP
c	bak	net/minecraft/util/datafix/fixes/DataConverterAttributes
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		description
		p	3		renames
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
		p	1		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
		p	1		attributeNameDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$6
		p	1		attributes
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
		p	1		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$8
		p	1		entityDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$2
		p	1		attributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$7
		p	1		attributesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$5
		p	1		attributeDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$4
		p	1		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$3
		p	1		attributeModifiersDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$1
		p	1		attributeModifierDynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	renames
c	bal	net/minecraft/util/datafix/fixes/BannerEntityCustomNameToOverrideComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/OptionalDynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
	m	(Ljava/lang/String;)Z	a	lambda$fix$1
		p	0		name
c	bam	net/minecraft/util/datafix/fixes/BannerPatternFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(I)Ljava/lang/String;	a	fixColor
		p	0		color
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixLayer$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixLayer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixLayer$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$0
	f	Ljava/util/Map;	a	PATTERN_ID_MAP
c	ban	net/minecraft/util/datafix/fixes/DataConverterBedItem
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bao	net/minecraft/util/datafix/fixes/BeehiveFieldRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBeehive
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixBee
c	bap	net/minecraft/util/datafix/fixes/DataConverterBiome
	f	Ljava/util/Map;	a	BIOMES
c	baq	net/minecraft/util/datafix/fixes/DataConverterBitStorageAlign
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(II[J)[J	a	addPadding
		p	0		maxValue
		p	1		elementBits
		p	2		elements
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
		p	1		sectionDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		chunk
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
		p	0		levelSectionsFinder
		p	1		sectionFinder
		p	2		paletteFinder
		p	3		level
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
		p	2		levelSection
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
		p	1		section
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
		p	1		fixedLevel
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
		p	2		statesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
		p	1		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
		p	1		heightmapsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
		p	0		sectionDynamic
		p	1		statesDynamic
		p	2		maxValue
		p	3		elementBits
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
		p	0		palette
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
		p	1		heightmapDynamic
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
c	bar	net/minecraft/util/datafix/fixes/BlendingDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBlendingData
		p	0		dynamic
		p	1		height
		p	2		minY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	STATUSES_TO_SKIP_BLENDING
c	bas	net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		chunk
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		chunk
		p	1		context
c	bat	net/minecraft/util/datafix/fixes/DataConverterBannerColour
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		bannerDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
		p	0		patternsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
		p	0		patternDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
		p	0		colorDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
		p	0		baseDynamic
c	bau	net/minecraft/util/datafix/fixes/DataConverterPiston
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	bav	net/minecraft/util/datafix/fixes/DataConverterCustomNameTile
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	baw	net/minecraft/util/datafix/fixes/DataConverterTileEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
		p	0		oldName
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	bax	net/minecraft/util/datafix/fixes/DataConverterJukeBox
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
c	bay	net/minecraft/util/datafix/fixes/DataConverterBlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
c	baz	net/minecraft/util/datafix/fixes/BlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
		p	1		pair
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
		p	1		ops
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	nameChangeLookup
c	bba	net/minecraft/util/datafix/fixes/DataConverterShulkerBoxBlock
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bbb	net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		blockEntityId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/stream/Stream;	a	getLines
		p	0		signData
		p	1		prefix
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$0
		p	1		text
	m	(Ljava/util/List;Ljava/util/Optional;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$1
		p	1		message
		p	2		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixFrontTextTag
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	createDefaultText
		p	0		signData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	createEmptyLines
		p	0		signData
	f	Ljava/lang/String;	a	FILTERED_CORRECT
	f	Ljava/lang/String;	b	DEFAULT_COLOR
c	bbc	net/minecraft/util/datafix/fixes/DataConverterSignText
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	1		linesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateLine
		p	1		signDynamic
		p	2		lineName
c	bbd	net/minecraft/util/datafix/fixes/DataConverterBlockEntityUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
		p	1		ownerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
		p	1		skullDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
		p	1		conduitDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
		p	0		ownerDynamic
c	bbe	net/minecraft/util/datafix/fixes/DataConverterBlockName
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	bbf	net/minecraft/util/datafix/fixes/BlockPosFormatAndRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)Lcom/mojang/datafixers/TypeRewriteRule;	a	createEntityFixer
		p	1		typeReference
		p	2		id
		p	3		oldToNewKey
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/Map;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createEntityFixer$11
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$addEntityRules$9
	m	(Lcom/mojang/datafixers/Typed;Ljava/util/Map;)Lcom/mojang/datafixers/Typed;	a	fixFields
		p	2		oldToNewKey
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixMapSavedData
		p	1		dynamic
	m	(Ljava/util/List;)V	a	addEntityRules
		p	1		rules
	m	(Ljava/util/Map;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createEntityFixer$10
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFields$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addEntityRules$8
		p	0		entityDynamic
	m	(Ljava/util/List;)V	b	addBlockEntityRules
		p	1		rules
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$7
		p	0		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixMapSavedData$4
		p	0		banners
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixMapSavedData$3
		p	0		banner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixMapSavedData$2
		p	0		frames
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$fixMapSavedData$1
		p	0		frame
	f	Ljava/util/List;	a	PATROLLING_MOBS
c	bbg	net/minecraft/util/datafix/fixes/DataConverterBlockRename
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBlockState
		p	1		blockStateDynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	renameBlock
		p	1		oldName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	b	fixFlatBlockState
		p	1		flatBlockState
	f	Ljava/lang/String;	a	name
c	bbg$1	net/minecraft/util/datafix/fixes/DataConverterBlockRename$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	renameBlock
		p	1		oldName
	f	Ljava/util/function/Function;	a	val$renamer
c	bbh	net/minecraft/util/datafix/fixes/DataConverterFlattenData
	m	()V	a	bootstrap0
	m	(I)Ljava/lang/String;	a	upgradeBlock
		p	0		stateId
	m	(ILjava/lang/String;[Ljava/lang/String;)V	a	register
		p	0		oldIdAndMeta
		p	1		newStateStr
		p	2		oldStateStrings
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
		p	0		oldBlockName
	m	()V	b	bootstrap1
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
		p	0		stateId
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	parse
		p	0		stateStr
	m	()V	c	bootstrap2
	m	()V	d	bootstrap3
	m	()V	e	bootstrap4
	m	()V	f	bootstrap5
	m	()V	g	bootstrap6
	m	()V	h	bootstrap7
	m	()V	i	bootstrap8
	m	()V	j	bootstrap9
	m	()V	k	bootstrap10
	m	()V	l	bootstrap11
	m	()V	m	bootstrap12
	m	()V	n	bootstrap13
	m	()V	o	bootstrap14
	m	()V	p	bootstrap15
	m	()V	q	finalizeMaps
	f	Ljava/lang/String;	a	FILTER_ME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	[Lcom/mojang/serialization/Dynamic;	c	MAP
	f	[Lcom/mojang/serialization/Dynamic;	d	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	f	ID_BY_OLD_NAME
c	bbi	net/minecraft/util/datafix/fixes/DataConverterFlattenState
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bbj	net/minecraft/util/datafix/fixes/DataConverterCatType
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		catDynamic
c	bbk	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	0		cauldronDynamic
c	bbl	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	bbm	net/minecraft/util/datafix/fixes/ChestedHorsesInventoryZeroIndexingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$7
		p	3		entityTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$6
		p	2		specificEntityTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$5
		p	1		entityItemsTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;)Lcom/mojang/datafixers/TypeRewriteRule;	a	horseLikeInventoryIndexingFixer
		p	1		itemStackOpticFinder
		p	2		entityType
		p	3		entityId
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$horseLikeInventoryIndexingFixer$4
		p	0		itemStackEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$horseLikeInventoryIndexingFixer$1
		p	0		itemStackDynamic
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$horseLikeInventoryIndexingFixer$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$horseLikeInventoryIndexingFixer$0
		p	0		slotDynamic
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	c	lambda$horseLikeInventoryIndexingFixer$2
c	bbn	net/minecraft/util/datafix/fixes/DataConverterBedBlock
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		level
		p	2		blockEntities
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;IIIIJ)Ljava/util/Map;	a	lambda$cap$2
		p	4		blockData
		p	5		index
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Ljava/util/List;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)V	a	lambda$cap$4
c	bbo	net/minecraft/util/datafix/fixes/DataConverterLeavesBiome
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bbp	net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bbq	net/minecraft/util/datafix/fixes/ChunkDeleteLightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bbr	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	(I)I	a	ceillog2
		p	0		value
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$20
		p	3		mask
	m	(J)J	a	lambda$getFixedHeightmap$22
		p	0		entry
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
		p	5		chunk
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
		p	4		level
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
		p	0		upgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
		p	0		level
		p	1		sectionsPerChunk
		p	2		oldBottomSectionY
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
		p	0		palette
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
		p	0		level
		p	1		biomeGetter
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$23
		p	1		rawBiomeId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
		p	0		level
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
		p	1		level
		p	2		blocks
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
		p	0		level
		p	1		overworld
		p	3		heightAlreadyUpdated
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
		p	0		level
		p	1		overworld
		p	2		heightAlreadyUpdated
		p	3		atNoiseStatus
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$17
		p	1		key
		p	2		value
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$16
		p	3		index
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$18
		p	1		indicesMap
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$11
		p	1		status
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
		p	7		sections
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$8
		p	6		level2
	m	([II)I	a	getOldBiome
		p	0		is
		p	1		index
	m	([III)I	a	lambda$getBiomeContainers$13
		p	2		sectionY
	m	()Lbbu$a;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
		p	0		level
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	([II)I	b	lambda$getBiomeContainers$15
		p	1		sectionY
	m	([III)I	b	lambda$getBiomeContainers$12
		p	2		sectionY
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
		p	0		heightmap
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	([II)I	c	lambda$getBiomeContainers$14
		p	1		sectionY
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
		p	0		palette
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$21
		p	0		heightmaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$19
		p	0		indices
	m	(Lcom/mojang/serialization/Dynamic;)Lbbu$a;	g	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	I	b	BLOCKS_PER_SECTION
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
c	bbs	net/minecraft/util/datafix/fixes/DataConverterChunkLightRemove
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		chunkTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		levelTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		levelDynamic
c	bbt	net/minecraft/util/datafix/fixes/ChunkConverterPalette
	m	(Laxk;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
		p	1		propertyKey
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
		p	0		out
		p	1		colorId
		p	2		color
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
		p	0		out
		p	1		variant
		p	2		mob
		p	3		block
	m	(Ljava/util/Map;Ljava/lang/String;I)V	a	mapDoor
		p	0		out
		p	1		name
		p	2		firstStateId
	m	(ZZZZ)I	a	getSideMask
		p	0		west
		p	1		east
		p	2		north
		p	3		south
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
		p	1		chunkDynamic
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
		p	0		map
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
		p	0		out
		p	1		colorId
		p	2		color
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
		p	0		map
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
		p	0		map
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
		p	0		map
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	A	BED_BLOCK_MAP
	f	Ljava/util/Map;	B	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	C	AIR
	f	I	D	SIZE
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/BitSet;	j	VIRTUAL
	f	Ljava/util/BitSet;	k	FIX
	f	Lcom/mojang/serialization/Dynamic;	l	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	m	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	n	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	o	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	p	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	q	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	r	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	s	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	t	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	u	UPPER_PEONY
	f	Ljava/util/Map;	v	FLOWER_POT_MAP
	f	Ljava/util/Map;	w	SKULL_MAP
	f	Ljava/util/Map;	x	DOOR_MAP
	f	Ljava/util/Map;	y	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	z	DYE_COLOR_MAP
c	bbt$a	net/minecraft/util/datafix/fixes/ChunkConverterPalette$a
	m	([B)V	<init>	<init>
		p	1		contents
	m	(I)Z	a	isFirst
		p	1		index
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(I)I	b	getPosition
		p	1		index
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
c	bbt$b	net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction
	m	(Ljava/lang/String;ILbbt$b$b;Lbbt$b$a;)V	<init>	<init>
		p	3		direction
		p	4		axis
	m	()Lbbt$b$b;	a	getAxisDirection
	m	()Lbbt$b$a;	b	getAxis
	m	()[Lbbt$b;	c	$values
	f	Lbbt$b;	a	DOWN
	f	Lbbt$b;	b	UP
	f	Lbbt$b;	c	NORTH
	f	Lbbt$b;	d	SOUTH
	f	Lbbt$b;	e	WEST
	f	Lbbt$b;	f	EAST
	f	Lbbt$b$a;	g	axis
	f	Lbbt$b$b;	h	axisDirection
	f	[Lbbt$b;	i	$VALUES
c	bbt$b$a	net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$Axis
	m	()[Lbbt$b$a;	a	$values
	f	Lbbt$b$a;	a	X
	f	Lbbt$b$a;	b	Y
	f	Lbbt$b$a;	c	Z
	f	[Lbbt$b$a;	d	$VALUES
c	bbt$b$b	net/minecraft/util/datafix/fixes/ChunkConverterPalette$Direction$AxisDirection
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		offset
	m	()I	a	getStep
	m	()[Lbbt$b$b;	b	$values
	f	Lbbt$b$b;	a	POSITIVE
	f	Lbbt$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Lbbt$b$b;	d	$VALUES
c	bbt$c	net/minecraft/util/datafix/fixes/ChunkConverterPalette$c
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
		p	1		section
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		index
	m	(II)V	a	addFix
		p	1		section
		p	2		index
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		pos
	m	(Ljava/nio/ByteBuffer;)Lbbt$a;	a	lambda$upgrade$1
	m	(I)I	b	upgrade
		p	1		sidesToUpgrade
	m	(Ljava/nio/ByteBuffer;)Lbbt$a;	b	lambda$upgrade$0
	f	I	a	y
	f	Laxk;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
c	bbt$d	net/minecraft/util/datafix/fixes/ChunkConverterPalette$d
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
		p	1		chunkTag
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
		p	1		packedLocalPos
	m	(ILbbt$b;)I	a	relative
		p	0		packedLocalPos
		p	1		direction
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
		p	1		packedLocalPos
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
		p	1		sectionTag
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
		p	1		packedLocalPos
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
		p	1		blockEntityTag
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
		p	1		packedLocalPos
	m	(I)Lbbt$c;	d	getSection
		p	1		packedLocalPos
	f	I	a	sides
	f	[Lbbt$c;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
c	bbu	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
		p	1		levelDynamic
	m	(I)Z	a	lambda$makeTickList$14
		p	0		packedLocalPos
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
		p	8		chunkTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
		p	7		levelTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
		p	6		sectionsTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
		p	5		sectionTyped
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
		p	0		paletteTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lbbu$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
		p	0		blockStateDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
		p	1		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
		p	1		levelDynamic
		p	2		palettedSectionsByY
		p	3		sectionY
		p	4		localX
		p	5		localZ
		p	6		key
		p	7		blockIdGetter
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
		p	1		levelDynamic
		p	2		sectionSupplier
		p	3		sectionX
		p	4		sectionY
		p	5		sectionZ
		p	6		packedLocalPos
		p	7		blockIdGetter
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
		p	7		packedLocalPos
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
		p	3		blockStatesTyped
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
		p	1		yDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
		p	0		blockStateDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		liquidTicksDynamic
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
		p	0		posDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
		p	0		paletteDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
		p	0		levelDynamic
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
c	bbu$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$a
	m	(Ljava/util/List;[J)V	<init>	<init>
		p	1		palette
		p	2		data
	m	()Ljava/util/List;	a	palette
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
		p	1		localX
		p	2		localY
		p	3		localZ
	m	()[J	b	data
	m	(III)I	b	getIndex
		p	1		localX
		p	2		localY
		p	3		localZ
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
c	bbv	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	3		chunkTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
		p	0		outputTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
		p	0		chunkTyped
		p	1		chunkDynamic
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	0		structuresTyped
c	bbw	net/minecraft/util/datafix/fixes/DataConverterChunkStatus
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bbx	net/minecraft/util/datafix/fixes/DataConverterChunkStatus2
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
c	bby	net/minecraft/util/datafix/fixes/DataConverterChunkStructuresTemplateRename
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		structureFeatureTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChildren
		p	1		structureFeatureDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		structureFeatureDynamic
		p	2		childDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixChildren$2
		p	2		childrenDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixChildren$1
		p	2		childDynamic
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
c	bbz	net/minecraft/util/datafix/fixes/DataConverterProtoChunk
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changestype
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
		p	0		sectionY
	m	(III)S	a	packOffsetCoordinates
		p	0		x
		p	1		y
		p	2		z
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
		p	1		packedLocalPos
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
		p	1		biomesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
		p	1		section
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
		p	1		biomes
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
		p	1		tileTicksDynamic
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
		p	1		tickTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
		p	0		chunkDynamic
	f	I	a	NUM_SECTIONS
c	bca	net/minecraft/util/datafix/fixes/DataConverterColorlessShulkerEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		shulkerDynamic
c	bcb	net/minecraft/util/datafix/fixes/CriteriaRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		description
		p	3		advancementId
		p	4		renamer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		typed
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixAdvancements$3
		p	1		pair
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixAdvancements
		p	1		advancements
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdvancements$1
		p	2		keyString
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixAdvancements$5
		p	1		advancement
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAdvancements$4
		p	1		criteria
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixAdvancements$2
		p	1		key
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	advancementId
	f	Ljava/util/function/UnaryOperator;	c	conversions
c	bcc	net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	f	Ljava/lang/String;	a	DECORATED_POT_ID
c	bcd	net/minecraft/util/datafix/fixes/DropInvalidSignDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		blockEntityId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	0		blockEntityData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	a	lambda$fixText$1
		p	1		message
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixText$0
		p	2		message
		p	3		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixText
		p	0		textData
	f	[Ljava/lang/String;	a	FIELDS_TO_DROP
c	bce	net/minecraft/util/datafix/fixes/DataConverterDye
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bcf	net/minecraft/util/datafix/fixes/EffectDurationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	3		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		playerTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEffect
		p	1		effectDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEffect$3
		p	1		factorCalculationDataDynamic
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	1		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
		p	1		effectsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntity
		p	1		entityDynamic
	f	Ljava/util/Set;	a	ITEM_TYPES
c	bcg	net/minecraft/util/datafix/fixes/EmptyItemInHotbarFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		hotbarTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
c	bch	net/minecraft/util/datafix/fixes/EmptyItemInVillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		villagerTradeDynamic
c	bci	net/minecraft/util/datafix/fixes/DataConverterArmorStand
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		armorStandDynamic
c	bcj	net/minecraft/util/datafix/fixes/DataConverterEntityBlockState
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
		p	1		fallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
		p	1		entity
		p	2		oldIdKey
		p	3		oldDataKey
		p	4		newStateKey
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		entity
		p	2		entityId
		p	3		function
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	1		projectile
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
		p	1		unit
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
		p	2		state
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
		p	0		id
	m	(Ljava/lang/String;)I	a	getBlockId
		p	0		blockId
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	4		entity
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
		p	1		enderman
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
		p	0		id
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
		p	1		arrow
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
		p	1		minecart
	f	Ljava/util/Map;	a	MAP
c	bck	net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
c	bcl	net/minecraft/util/datafix/fixes/DataConverterEntityCatSplit
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
		p	2		entityDynamic
c	bcm	net/minecraft/util/datafix/fixes/DataConverterEntityCodSalmon
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
c	bcn	net/minecraft/util/datafix/fixes/DataConverterCustomNameEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		entityTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	2		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
		p	0		entityDynamic
c	bco	net/minecraft/util/datafix/fixes/DataConverterGuardian
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
		p	2		entityDynamic
c	bcp	net/minecraft/util/datafix/fixes/DataConverterEquipment
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$2
		p	4		entityTyped
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		itemStackType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$1
c	bcq	net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		goatDynamic
c	bcr	net/minecraft/util/datafix/fixes/DataConverterHealth
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		entityDynamic
	f	Ljava/util/Set;	a	ENTITIES
c	bcs	net/minecraft/util/datafix/fixes/DataConverterSaddle
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
c	bct	net/minecraft/util/datafix/fixes/DataConverterHorse
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
		p	2		entityTyped
c	bcu	net/minecraft/util/datafix/fixes/DataConverterEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	ID_MAP
c	bcv	net/minecraft/util/datafix/fixes/DataConverterItemFrame
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(B)B	a	direction2dTo3d
		p	0		oldDirection
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		itemFrameDynamic
c	bcw	net/minecraft/util/datafix/fixes/DataConverterMinecart
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		entityDynamic
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
		p	2		entityTyped
c	bcx	net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
c	bcy	net/minecraft/util/datafix/fixes/DataConverterHanging
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	3		entityTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	1		itemFrameTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
		p	1		itemFrameDynamic
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
		p	1		entityDynamic
		p	2		isPainting
		p	3		isItemFrame
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
		p	3		entityTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
		p	1		paintingTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		paintingDynamic
	f	[[I	a	DIRECTIONS
c	bcz	net/minecraft/util/datafix/fixes/DataConverterPainting
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		paintingdynamic
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
c	bda	net/minecraft/util/datafix/fixes/DataConverterEntityProjectileOwner
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JJ)[I	a	createUUIDArray
		p	0		most
		p	2		least
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
		p	1		entityTyped
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
		p	1		entityTyped
		p	2		matchId
		p	3		fixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
		p	1		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
		p	1		entityDynamic
		p	2		most
		p	4		least
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
		p	1		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateItemPotion
		p	1		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateOwnerThrowable
		p	1		entityDynamic
c	bdb	net/minecraft/util/datafix/fixes/DataConverterEntityPufferfish
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bdc	net/minecraft/util/datafix/fixes/DataConverterEntityRavagerRename
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bdd	net/minecraft/util/datafix/fixes/DataConverterDropChances
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
		p	1		chances
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		entityTyped
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
		p	0		listTag
		p	1		expectedLength
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
		p	0		chance
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
c	bde	net/minecraft/util/datafix/fixes/DataConverterEntityName
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
		p	2		entityTyped
	f	Ljava/lang/String;	a	name
c	bdf	net/minecraft/util/datafix/fixes/DataConverterRiding
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		inputSchema
		p	2		outputSchema
		p	3		inputEntityTreeType
		p	4		outputEntityTreeType
		p	5		inputEntityType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	bdg	net/minecraft/util/datafix/fixes/DataConverterShulker
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		shulkerDynamic
c	bdh	net/minecraft/util/datafix/fixes/DataConverterEntityShulkerRotation
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		shulkerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
		p	0		rotationDynamic
c	bdi	net/minecraft/util/datafix/fixes/DataConverterSkeleton
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
		p	2		entityDynamic
c	bdj	net/minecraft/util/datafix/fixes/DataConverterUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		entityDynamic
c	bdk	net/minecraft/util/datafix/fixes/DataConverterEntityRename
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
c	bdl	net/minecraft/util/datafix/fixes/DataConverterEntityTippedArrow
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
c	bdm	net/minecraft/util/datafix/fixes/DataConverterEntityUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
		p	0		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
c	bdn	net/minecraft/util/datafix/fixes/EntityVariantFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
		p	4		entityId
		p	5		variantKey
		p	6		variantIntToId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
		p	1		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
		p	2		variantInt
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	updateAndRename
		p	0		entityDynamic
		p	1		oldVariantKey
		p	2		newVariantKey
		p	3		variantIntToId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$4
		p	1		variantDynamic
	f	Ljava/lang/String;	a	fieldName
	f	Ljava/util/function/IntFunction;	b	idConversions
c	bdo	net/minecraft/util/datafix/fixes/DataConverterWolf
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		wolfDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
		p	0		colorDynamic
c	bdp	net/minecraft/util/datafix/fixes/DataConverterZombieType
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Lcom/mojang/datafixers/types/Type;	a	lambda$new$0
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$changeSchemaToZombieVillager$2
		p	1		zombieVillagerDynamic
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	changeSchemaToZombieVillager
		p	1		entityTyped
		p	2		variant
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$1
		p	0		entityDynamic
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
		p	2		entityTyped
	f	Ljava/util/function/Supplier;	b	zombieVillagerType
c	bdq	net/minecraft/util/datafix/fixes/DataConverterZombie
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getVillagerProfession
		p	1		type
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		zombieDynamic
	f	I	a	PROFESSION_MAX
c	bdr	net/minecraft/util/datafix/fixes/DataConverterEntityZombifiedPiglinRename
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bds	net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Set;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		featureToggleIds
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		levelTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$3
		p	3		enabledFeatures
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$2
		p	3		stream
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixTag$1
		p	3		enabledFeature
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	flagsToRemove
c	bdt	net/minecraft/util/datafix/fixes/FilteredBooksFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	bdu	net/minecraft/util/datafix/fixes/FilteredSignsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		blockEntity
c	bdv	net/minecraft/util/datafix/fixes/FixProjectileStoredItem
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lbdv$a;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$0
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lbdv$a;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	fixArrow
		p	0		typed
		p	1		type
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getArrowType
		p	0		arrowData
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	createItemStack
		p	0		projectileData
		p	1		id
	m	(Ljava/lang/String;Lbdv$a;)Ljava/util/function/Function;	a	fixChoice
		p	1		id
		p	2		fixer
	m	(Ljava/lang/String;Lbdv$a;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Ljava/util/function/Function;	a	fixChoiceCap
		p	0		id
		p	1		fixer
		p	2		inputType
		p	3		outputType
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	b	fixSpectralArrow
		p	0		typed
		p	1		type
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixSpectralArrow$3
		p	0		data
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	c	castUnchecked
		p	0		typed
		p	1		type
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixArrow$2
		p	0		data
	f	Ljava/lang/String;	a	EMPTY_POTION
c	bdv$a	net/minecraft/util/datafix/fixes/FixProjectileStoredItem$a
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	fix	fix
		p	1		typed
		p	2		type
c	bdw	net/minecraft/util/datafix/fixes/DataConverterPOIRebuild
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
c	bdx	net/minecraft/util/datafix/fixes/DataConverterFurnaceRecipesUsed
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
		p	9		blockEntityTyped
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
		p	1		recipeType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
		p	1		recipeType
		p	2		recipesUsedType
		p	3		smelterTyped
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
		p	3		smokerTyped
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
		p	3		blastFurnaceTyped
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
		p	3		furnaceTyped
c	bdy	net/minecraft/util/datafix/fixes/GoatHornIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
	f	[Ljava/lang/String;	a	INSTRUMENTS
c	bdz	net/minecraft/util/datafix/fixes/DataConverterGossip
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
		p	0		entityDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
		p	0		gossips
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
		p	0		gossipsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
		p	0		gossipDynamic
c	bea	net/minecraft/util/datafix/fixes/DataConverterHeightmapRenaming
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	2		chunkTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		levelTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		levelDynamic
c	beb	net/minecraft/util/datafix/fixes/HorseBodyArmorItemFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		entityId
		p	3		oldNbtKey
		p	4		removeOldArmor
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	0		dropChanceDynamic
		p	1		slot
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$3
		p	0		armorDropChancesDynamic
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
		p	0		itemDynamic
		p	1		slot
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$1
		p	0		armorItemsDynamic
	f	Ljava/lang/String;	a	previousBodyArmorTag
	f	Z	b	clearArmorItems
c	bec	net/minecraft/util/datafix/fixes/DataConverterIglooMetadataRemoval
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	0		structureFeatureTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	0		structureFeatureDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
		p	0		structureFeatureDynamic
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
		p	0		structureFeatureDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$2
c	bed	net/minecraft/util/datafix/fixes/DataConverterBanner
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	3		itemStackTyped
c	bee	net/minecraft/util/datafix/fixes/DataConverterCustomNameItem
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		tagDynamic
c	bef	net/minecraft/util/datafix/fixes/DataConverterMaterialId
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)Ljava/lang/String;	a	getItem
		p	0		id
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
		p	0		id
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
		p	0		named
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
		p	0		ordinal
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
c	beg	net/minecraft/util/datafix/fixes/DataConverterItemLoreComponentize
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	1		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	0		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
		p	0		tagDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixLoreList
		p	0		nbt
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$1
		p	0		displaySubtag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
		p	0		lore
c	beh	net/minecraft/util/datafix/fixes/DataConverterPotionId
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	2		itemStack
	m	([Ljava/lang/String;)V	a	lambda$static$0
		p	0		potions
	f	Ljava/lang/String;	a	DEFAULT
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
c	bei	net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/util/Set;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		itemIds
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	4		typed
	f	Ljava/util/Set;	a	items
c	bej	net/minecraft/util/datafix/fixes/DataConverterItemName
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
		p	0		outputSchema
		p	1		name
		p	2		rename
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/lang/String;	a	name
c	bej$1	net/minecraft/util/datafix/fixes/DataConverterItemName$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
		p	1		input
	f	Ljava/util/function/Function;	a	val$fixItem
c	bek	net/minecraft/util/datafix/fixes/DataConverterShulkerBoxItem
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	3		itemStack
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
c	bel	net/minecraft/util/datafix/fixes/DataConverterSpawnEgg
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	6		itemStack
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
		p	1		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$4
	m	([Ljava/lang/String;)V	a	lambda$static$0
		p	0		ids
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
		p	1		entityTagTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
		p	1		tagTyped
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
c	bem	net/minecraft/util/datafix/fixes/ItemStackComponentRemainderFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		componentId
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		oldComponentId
		p	4		newComponentId
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		dynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	componentId
	f	Ljava/lang/String;	c	newComponentId
c	ben	net/minecraft/util/datafix/fixes/ItemStackComponentizationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(I)Ljava/lang/String;	a	fixMapDecorationType
		p	0		index
	m	(Lben$a;)V	a	fixFireworkStar
		p	0		data
	m	(Lben$a;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixItemStack$2
		p	2		displayDynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	a	fixItemStack
		p	0		data
		p	1		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	fixDisplay
		p	0		data
		p	1		dynamic
		p	2		hideFlags
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixBlockEntityTag
		p	0		data
		p	1		dynamic
		p	2		blockEntityId
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Z)V	a	fixEnchantments
		p	0		data
		p	1		dynamic
		p	2		nbtKey
		p	3		componentId
		p	4		hideInTooltip
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixBlockStateTag$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProfile
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixItemStack$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixBlockStatePredicate
		p	0		dynamic
		p	1		listAsString
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	createFilteredText
		p	0		dynamic
		p	1		unfiltered
		p	2		filtered
	m	(Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProfileProperties
		p	0		propertiesDynamic
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$fixProfileProperties$25
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixProfileProperties$24
	m	(Ljava/lang/String;)Z	a	isValidPlayerName
		p	0		username
	m	(Ljava/lang/String;Ljava/lang/Number;)Lcom/mojang/datafixers/util/Pair;	a	lambda$parseEnchantment$9
		p	0		enchantmentId
		p	1		level
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	lambda$fixBlockStateTag$6
	m	(I)Z	b	lambda$isValidPlayerName$20
		p	0		c
	m	(Lben$a;)V	b	fixFireworkRocket
		p	0		data
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	b	fixPotionContents
		p	0		data
		p	1		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;I)V	b	fixAdventureModeChecks
		p	0		data
		p	1		dynamic
		p	2		hideFlags
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Z)V	b	fixBlockStatePredicates
		p	0		data
		p	1		dynamic
		p	2		nbtKey
		p	3		componentId
		p	4		hideInTooltip
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixBlockStateTag
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixBlockStatePredicates$10
	m	(Ljava/lang/String;)Z	b	lambda$fixPotionContents$14
		p	0		potionId
	m	(Lben$a;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$26
		p	0		data
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	c	fixWritableBook
		p	0		data
		p	1		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;I)V	c	fixAttributeModifiers
		p	0		data
		p	1		dynamic
		p	2		hideFlags
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	c	parseEnchantment
		p	0		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	d	fixWrittenBook
		p	0		data
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixAttributeModifier
		p	0		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixBookPages
		p	0		data
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	e	fixMapDecoration
		p	0		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	f	fixBucketedMobData
		p	0		data
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	fixFireworkExplosion
		p	0		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	g	fixLodestoneTracker
		p	0		data
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$27
		p	0		dynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$fixFireworkRocket$19
		p	1		fireworksDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	h	lambda$fixProfileProperties$23
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$fixFireworkStar$18
		p	1		explosionDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	i	lambda$fixProfileProperties$22
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	j	lambda$fixItemStack$4
		p	1		skullOwnerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	j	lambda$fixProfileProperties$21
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$fixItemStack$1
		p	1		blockEntityTagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	k	lambda$fixBookPages$17
		p	0		filteredPagesValueDynamic
	m	(Lben$a;Lcom/mojang/serialization/Dynamic;)V	l	lambda$fixItemStack$0
		p	1		blockStateTagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	l	lambda$fixBookPages$16
		p	0		filteredPagesKeyDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	m	lambda$fixBookPages$15
		p	0		pagesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	lambda$fixMapDecoration$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	lambda$fixAttributeModifier$12
		p	0		operationDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$fixBlockStatePredicates$11
		p	0		predicatesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	q	lambda$fixEnchantments$8
		p	0		enchantmentsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$fixBlockEntityTag$7
		p	0		itemsDynamic
	f	I	a	HIDE_ENCHANTMENTS
	f	I	b	HIDE_MODIFIERS
	f	I	c	HIDE_UNBREAKABLE
	f	I	d	HIDE_CAN_DESTROY
	f	I	e	HIDE_CAN_PLACE
	f	I	f	HIDE_ADDITIONAL
	f	I	g	HIDE_DYE
	f	I	h	HIDE_UPGRADES
	f	Ljava/util/Set;	i	POTION_HOLDER_IDS
	f	Ljava/util/Set;	j	BUCKETED_MOB_IDS
	f	Ljava/util/List;	k	BUCKETED_MOB_TAGS
	f	Ljava/util/Set;	l	BOOLEAN_BLOCK_STATE_PROPERTIES
	f	Lcom/google/common/base/Splitter;	m	PROPERTY_SPLITTER
c	ben$a	net/minecraft/util/datafix/fixes/ItemStackComponentizationFix$a
	m	(Ljava/lang/String;ILcom/mojang/serialization/Dynamic;)V	<init>	<init>
		p	1		itemId
		p	2		count
		p	3		dynamic
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	read
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainder
		p	0		data
		p	1		leftoverNbt
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/Number;)Lben$a;	a	lambda$read$0
		p	1		itemId
		p	2		count
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainder$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainder$4
	m	(Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	removeTag
		p	1		key
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	a	setComponent
		p	1		key
		p	2		value
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	moveTagInto
		p	1		nbtKey
		p	2		components
		p	3		componentId
	m	(Ljava/lang/String;Lcom/mojang/serialization/OptionalDynamic;)V	a	setComponent
		p	1		key
		p	2		optionalValue
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	moveTagToComponent
		p	1		nbtKey
		p	2		componentId
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	a	moveTagToComponent
		p	1		nbtKey
		p	2		componentId
		p	3		defaultValue
	m	(Ljava/lang/String;ZLjava/util/function/UnaryOperator;)V	a	fixSubTag
		p	1		nbtKey
		p	2		removeIfEmpty
		p	3		fixer
	m	(Ljava/util/Set;)Z	a	is
		p	1		itemIds
	m	(Ljava/lang/String;)Z	b	is
		p	1		itemId
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	b	lambda$moveTagToComponent$2
		p	2		nbt
	m	(Ljava/lang/String;)Z	c	hasComponent
		p	1		componentId
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	c	lambda$setComponent$1
		p	2		value
	f	Ljava/lang/String;	a	item
	f	I	b	count
	f	Lcom/mojang/serialization/Dynamic;	c	components
	f	Lcom/mojang/serialization/Dynamic;	d	remainder
	f	Lcom/mojang/serialization/Dynamic;	e	tag
c	beo	net/minecraft/util/datafix/fixes/ItemStackCustomNameToOverrideComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixMap
		p	0		data
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Predicate;)Lcom/mojang/serialization/Dynamic;	a	fixCustomName
		p	0		data
		p	1		namePredicate
	m	(Ljava/lang/String;)Z	a	lambda$fixBanner$5
		p	0		name
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixBanner
		p	0		data
	m	(Ljava/lang/String;)Z	b	lambda$makeRule$2
		p	0		itemId
	m	(Ljava/lang/String;)Z	c	lambda$makeRule$0
		p	0		itemId
	f	Ljava/util/Set;	a	MAP_NAMES
c	bep	net/minecraft/util/datafix/fixes/DataConverterItemStackEnchantment
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		tagDynamic
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
		p	0		storedEnchantments
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
		p	0		storedEnchantmentsDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
		p	0		enchantments
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
		p	0		storedEnchantment
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
		p	0		enchantment
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
c	beq	net/minecraft/util/datafix/fixes/DataConverterMap
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	2		itemStack
c	ber	net/minecraft/util/datafix/fixes/DataConverterFlattenSpawnEgg
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		spawnEggId
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	5		stack
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/lang/String;	a	itemType
	f	Ljava/util/Map;	b	MAP
c	bes	net/minecraft/util/datafix/fixes/ItemStackTagFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		itemIdPredicate
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Predicate;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/UnaryOperator;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createFixer$1
		p	4		itemStackTyped
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/function/Predicate;Ljava/util/function/UnaryOperator;)Ljava/util/function/UnaryOperator;	a	createFixer
		p	0		itemStackType
		p	1		itemIdPredicate
		p	2		nbtFixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/util/function/UnaryOperator;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createFixer$0
		p	1		tag
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Predicate;	b	idFilter
c	bet	net/minecraft/util/datafix/fixes/DataConverterFlatten
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	2		itemStackTyped
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
		p	0		oldId
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
		p	0		originalName
		p	1		damage
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
c	beu	net/minecraft/util/datafix/fixes/DataConverterItemStackUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	3		tagTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	3		tagDynamic
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
		p	0		id
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
		p	1		attributeModifiersDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
		p	1		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
		p	1		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
		p	0		skullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
		p	0		attributeModifier
c	bev	net/minecraft/util/datafix/fixes/DataConverterPotionWater
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	2		itemStackTyped
c	bew	net/minecraft/util/datafix/fixes/DataConverterBook
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$1
		p	1		pagesDynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$0
		p	0		pages
c	bex	net/minecraft/util/datafix/fixes/DataConverterJigsawProperties
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	0		blockEntityDynamic
c	bey	net/minecraft/util/datafix/fixes/DataConverterJigsawRotation
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		blockStateTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	0		blockStateDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
		p	0		propertiesDynamic
	f	Ljava/util/Map;	a	RENAMES
c	bez	net/minecraft/util/datafix/fixes/JukeboxTicksSinceSongStartedFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		dynamic
c	bfa	net/minecraft/util/datafix/fixes/DataConverterLeaves
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(I)I	a	getX
		p	1		packedLocalPos
	m	(III)I	a	getIndex
		p	0		localX
		p	1		localY
		p	2		localZ
	m	(Lbfa$a;)Lbfa$a;	a	lambda$makeRule$2
		p	0		fixer
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
		p	4		chunkTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
		p	3		levelTyped
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	3		sectionsTyped
	m	(Lcom/mojang/datafixers/Typed;)Lbfa$a;	a	lambda$makeRule$1
		p	1		sectionTyped
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	1		sectionDynamic
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(ZZZZ)I	a	getSideMask
		p	0		westernmost
		p	1		easternmost
		p	2		northernmost
		p	3		southernmost
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(I)I	b	getY
		p	1		packedLocalPos
	m	(I)I	c	getZ
		p	1		packedLocalPos
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
c	bfa$a	net/minecraft/util/datafix/fixes/DataConverterLeaves$a
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		sectionTyped
		p	2		inputSchema
	m	()Z	a	skippable
	m	(I)Z	a	isLog
		p	1		index
	m	(III)V	a	setDistance
		p	1		packedLocalPos
		p	2		propertyIndex
		p	3		distance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
		p	1		tag
		p	2		name
		p	3		persistent
		p	4		distance
	m	(I)Z	b	isLeaf
		p	1		index
	m	(I)I	d	getDistance
		p	1		index
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
c	bfa$b	net/minecraft/util/datafix/fixes/DataConverterLeaves$b
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		sectionTyped
		p	2		inputSchema
	m	()Z	a	skippable
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Ljava/lang/String;ZI)I	a	getStateId
		p	1		leafBlockName
		p	2		persistent
		p	3		distance
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
		p	0		palettes
	m	()Z	b	isSkippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
		p	0		propertiesDynamic
	m	()I	c	getIndex
	m	(I)I	c	getBlock
		p	1		index
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
		p	1		remainder
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Lbaa;	g	storage
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
c	bfb	net/minecraft/util/datafix/fixes/LegacyDragonFightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixDragonFight
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	0		levelData
c	bfc	net/minecraft/util/datafix/fixes/DataConverterLevelDataGeneratorOptions
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		levelTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	0		levelDynamic
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$5
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
		p	0		layer
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
		p	0		generatorOptions
		p	1		levelDynamicOps
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$4
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
		p	0		layers
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
c	bfd	net/minecraft/util/datafix/fixes/DataConverterWorldGenSettings
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		levelTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		levelDynamic
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
		p	1		generatorOptions
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		generatorOptionsDynamic
	f	Ljava/lang/String;	a	DEFAULT
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
c	bfe	net/minecraft/util/datafix/fixes/LevelLegacyWorldGenSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		data
	f	Ljava/lang/String;	a	WORLD_GEN_SETTINGS
	f	Ljava/util/List;	b	OLD_SETTINGS_KEYS
c	bff	net/minecraft/util/datafix/fixes/DataConverterMiscUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		levelTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCustomBossEvents$11
		p	0		entry
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvents$9
		p	1		playersDynamic
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
		p	1		levelTyped2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$updateDragonFight$5
		p	0		entry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
		p	1		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
		p	1		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvents
		p	1		levelDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvents$12
		p	0		bossbarsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvents$10
		p	0		bossbarDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateCustomBossEvents$8
		p	0		playerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateCustomBossEvents$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$6
		p	0		dimensionDataDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$updateDragonFight$4
		p	0		dimensionDataValueDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$updateDragonFight$3
		p	0		dragonFightDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	lambda$makeRule$0
		p	1		levelDynamic
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bfg	net/minecraft/util/datafix/fixes/LodestoneCompassComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
		p	1		dynamic
c	bfh	net/minecraft/util/datafix/fixes/MapBannerBlockPosFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	0		mapDatTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixMapSavedData
		p	0		mapDataDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
		p	0		mapDatDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixMapSavedData$1
		p	0		banners
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixMapSavedData$0
		p	0		banner
c	bfi	net/minecraft/util/datafix/fixes/DataConverterMapId
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		mapDatTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		mapDatDynamic
c	bfj	net/minecraft/util/datafix/fixes/DataConverterMemoryExpiry
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		choiceName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
		p	1		memoryKv
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		entityDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
		p	1		brainDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
		p	1		memoriesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
		p	1		memoryValue
c	bfk	net/minecraft/util/datafix/fixes/DataConverterMissingDimension
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	4		worldGenSettingsTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	4		dimensionsTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	3		dimensionsListTyped
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
		p	1		worldGenSettingsDynamic
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
		p	0		field
		p	1		type
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
		p	0		field1
		p	1		type1
		p	2		field2
		p	3		type2
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
		p	0		field
		p	1		type
c	bfl	net/minecraft/util/datafix/fixes/MobEffectIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	blockEntityFixer
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$12
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$11
		p	0		tagTyped
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
		p	1		entityTyped
		p	2		entityTypeReference
		p	3		entityId
		p	4		effectsFixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectInstance
		p	0		effectDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateSuspiciousStewEntry
		p	0		effectDynamicIn
		p	1		effectDynamicOut
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	getAndConvertMobEffectId
		p	0		dynamic
		p	1		idKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectIdField
		p	0		dynamic
		p	1		oldKey
		p	3		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectIdField
		p	0		dynamic
		p	1		oldKey
		p	2		newKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixSuspiciousStewTag$8
		p	1		effects
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		idMap
	m	(Ljava/lang/Number;)Ljava/lang/String;	a	lambda$getAndConvertMobEffectId$1
		p	0		oldId
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$3
		p	1		matchingEntityTyped
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	entityFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$itemStackFixer$9
		p	0		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSuspiciousStewEntry
		p	0		effectDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	updateMobEffectInstanceList
		p	0		dynamic
		p	1		oldEffectListKey
		p	2		newEffectListKey
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateMobEffectInstanceList$2
		p	1		oldEffects
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	c	playerFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$playerFixer$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixMooshroomTag
		p	0		dynamic
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	d	itemStackFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$entityFixer$6
		p	1		entityTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixArrowTag
		p	0		dynamic
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	e	lambda$blockEntityFixer$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixAreaEffectCloudTag
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateLivingEntityTag
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	fixSuspiciousStewTag
		p	0		tagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$itemStackFixer$10
		p	0		tagDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$blockEntityFixer$4
		p	0		dynamic
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ID_MAP
	f	Ljava/util/Set;	b	MOB_EFFECT_INSTANCE_CARRIER_ITEMS
c	bfm	net/minecraft/util/datafix/fixes/DataConverterMobSpawner
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	2		untaggedSpawnerTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		spawnerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
		p	0		spawnPotentialsDynamic
c	bfn	net/minecraft/util/datafix/fixes/DataConverterNamedEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	bfo	net/minecraft/util/datafix/fixes/NamedEntityWriteReadFix
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		type
		p	5		choiceName
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	typePatcher
		p	0		inputSubtype
		p	1		outputSubtype
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fix
		p	1		inputType
		p	2		outputType
		p	4		outputSubtype
		p	5		rewrittenType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$fix$1
		p	6		input
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$fix$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$typePatcher$4
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$typePatcher$3
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
c	bfp	net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		typeReference
		p	4		renamer
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	f	Ljava/util/function/UnaryOperator;	c	renamer
c	bfq	net/minecraft/util/datafix/fixes/DataConverterNewVillage
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
c	bfr	net/minecraft/util/datafix/fixes/DataConverterObjectiveDisplayName
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		objectiveTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		objectiveDynamic
c	bfs	net/minecraft/util/datafix/fixes/DataConverterObjectiveRenderType
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		objective
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getRenderType
		p	0		oldName
c	bft	net/minecraft/util/datafix/fixes/DataConverterOminousBannerBlockEntityRename
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		bannerDynamic
c	bfu	net/minecraft/util/datafix/fixes/DataConverterOminousBannerRename
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
		p	1		dynamic
	m	(Ljava/lang/String;)Z	a	lambda$new$0
		p	0		itemId
c	bfv	net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		options
c	bfw	net/minecraft/util/datafix/fixes/DataConverterOptionsAddTextBackground
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	1		optionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Ljava/lang/String;)D	a	calculateBackground
		p	1		chatOpacity
c	bfx	net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	0		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	0		optionsdynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	1		setting
	m	(Ljava/lang/String;)Ljava/lang/String;	a	updateValue
		p	0		oldValue
c	bfy	net/minecraft/util/datafix/fixes/DataConverterVBO
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		optionsDynamic
c	bfz	net/minecraft/util/datafix/fixes/DataConverterKeybind
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	0		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
		p	0		optionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
		p	1		optionsMap
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
c	bga	net/minecraft/util/datafix/fixes/DataConverterKeybind2
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	0		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
		p	0		optionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	1		optionsMap
c	bgb	net/minecraft/util/datafix/fixes/DataConverterLang
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	0		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	0		optionsDynamic
c	bgc	net/minecraft/util/datafix/fixes/OptionsMenuBlurrinessFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	1		optionsDynamic
	m	(Ljava/lang/String;)I	a	convertToIntRange
		p	1		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		menuBackgroundBlurriness
c	bgd	net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixList
		p	1		option
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixList$2
		p	1		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	1		options
c	bge	net/minecraft/util/datafix/fixes/DataConverterSettingRename
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
		p	3		name
		p	4		oldName
		p	5		newName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		optionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	1		optionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	2		setting
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
c	bgf	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
		p	2		tickDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	1		chunkTyped
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
		p	0		chunkTag
		p	1		chunkX
		p	2		chunkZ
		p	3		ticks
		p	4		upgradeDataKey
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
		p	1		chunkTag
c	bgg	net/minecraft/util/datafix/fixes/ParticleUnflatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/serialization/Dynamic;	a	readVector
		p	1		paramsReader
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateItem
		p	1		dynamic
		p	2		params
	m	(Ljava/lang/String;)Lub;	a	parseTag
		p	0		snbt
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	updateBlock
		p	1		dynamic
		p	2		params
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Map;	c	parseBlockProperties
		p	1		propertiesStr
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	d	updateDust
		p	1		dynamic
		p	2		params
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	e	updateDustTransition
		p	1		dynamic
		p	2		params
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	f	updateSculkCharge
		p	2		params
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	g	updateVibration
		p	1		dynamic
		p	2		params
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	h	updateShriek
		p	1		dynamic
		p	2		params
	f	Lorg/slf4j/Logger;	a	LOGGER
c	bgh	net/minecraft/util/datafix/fixes/PlayerHeadBlockProfileFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		dynamic
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$fix$0
c	bgi	net/minecraft/util/datafix/fixes/DataConverterPlayerUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	0		playerTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
		p	0		rootVehicleTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
		p	0		playerDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
		p	0		rootVehicleDynamic
c	bgj	net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		removePredicate
	m	(Lcom/mojang/serialization/Dynamic;)Z	a	shouldKeepRecord
		p	1		dynamic
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	f	Ljava/util/function/Predicate;	a	typesToKeep
c	bgk	net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		renamer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$processRecords$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
		p	1		dynamics
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$processRecords$0
	f	Ljava/util/function/Function;	a	renamer
c	bgl	net/minecraft/util/datafix/fixes/PrimedTntBlockStateFixer
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	renameFuse
		p	0		data
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	insertBlockState
		p	0		data
c	bgm	net/minecraft/util/datafix/fixes/ProjectileStoredWeaponFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$0
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	fixChoice
		p	1		entityId
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Ljava/util/function/Function;	a	fixChoiceCap
		p	0		name
c	bgn	net/minecraft/util/datafix/fixes/RandomSequenceSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	0		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	0		randomSequencesData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
		p	0		data
c	bgo	net/minecraft/util/datafix/fixes/DataConverterRecipes
	f	Ljava/util/Map;	a	RECIPES
c	bgp	net/minecraft/util/datafix/fixes/DataConverterRecipeRename
	f	Ljava/util/Map;	a	RECIPES
c	bgq	net/minecraft/util/datafix/fixes/DataConverterRedstoneConnections
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		blockStateTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
		p	1		blockStateDynamic
	m	(Ljava/lang/String;)Z	a	isConnected
		p	0		value
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
		p	1		southDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
		p	0		propertiesDynamic
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
		p	1		northDynamic
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
		p	1		westDynamic
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
		p	1		eastDynamic
c	bgr	net/minecraft/util/datafix/fixes/DataConverterTypes
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/DSL$TypeReference;	a	reference
		p	0		typeName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	A	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	B	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	C	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	D	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	E	GAME_EVENT_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	F	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	G	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	H	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	I	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	J	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	K	BIOME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	L	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	M	WORLD_GEN_SETTINGS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	SAVED_DATA_COMMAND_STORAGE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	SAVED_DATA_FORCED_CHUNKS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	SAVED_DATA_MAP_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	SAVED_DATA_MAP_INDEX
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	SAVED_DATA_RAIDS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	SAVED_DATA_RANDOM_SEQUENCES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	SAVED_DATA_SCOREBOARD
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	FLAT_BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	DATA_COMPONENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	VILLAGER_TRADE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	PARTICLE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	ENTITY_NAME
c	bgr$1	net/minecraft/util/datafix/fixes/DataConverterTypes$1
	f	Ljava/lang/String;	a	val$id
c	bgs	net/minecraft/util/datafix/fixes/RemapChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		mapper
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		typed
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStatus
		p	1		status
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$1
		p	1		chunk
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	mapper
c	bgt	net/minecraft/util/datafix/fixes/RemoveEmptyItemInBrushableBlockFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	isEmptyStack
		p	0		dynamic
c	bgu	net/minecraft/util/datafix/fixes/DataConverterRemoveGolemGossip
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
		p	0		villagerData
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
		p	1		gossipsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
		p	0		gossipDynamic
c	bgv	net/minecraft/util/datafix/fixes/RenameEnchantmentsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		oldToNewIds
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	2		itemStackTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	1		itemTagTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		itemTagDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/DataResult$Error;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEnchantmentList$7
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEnchantmentList$4
		p	2		idDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixEnchantmentList
		p	1		itemTagDynamic
		p	2		enchantmentsKey
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEnchantmentList$6
		p	1		enchantments
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$8
		p	1		enchantmentsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/DataResult$Error;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$2
		p	2		oldId
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEnchantmentList$5
		p	1		enchantmentDynamic
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	bgw	net/minecraft/util/datafix/fixes/DataConverterCoralFan
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bgx	net/minecraft/util/datafix/fixes/DataConverterCoral
	f	Ljava/util/Map;	a	RENAMED_IDS
c	bgy	net/minecraft/util/datafix/fixes/DataConverterPOI
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
c	bgz	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(I)Ljava/lang/String;	a	lambda$get$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
		p	0		feature
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
		p	0		root
		p	1		pathParts
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
		p	0		type
		p	1		name
		p	2		stateProviderType
		p	3		stateProviderStateName
		p	4		stateProviderFirstEntryName
		p	5		foliagePlacerType
		p	6		leavesProviderStateName
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
		p	0		structureFeature
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
		p	0		children
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
		p	0		child
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
		p	0		poolElement
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
c	bha	net/minecraft/util/datafix/fixes/DataConverterSavedDataUUID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
		p	0		raidsDataTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$6
		p	0		raidsDataDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$5
		p	0		dataDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$4
		p	0		raidsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$3
		p	0		raidDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$2
		p	0		heroesOfTheVillageDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$1
		p	0		heroOfTheVillageDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bhb	net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
		p	1		scoreboardTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	0		scoreboardDataTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
		p	0		entry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
		p	0		scoreboardDataDynamic
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	0		oldName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
		p	0		displaySlotsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
		p	0		key
	f	Ljava/util/Map;	a	SLOT_RENAMES
c	bhc	net/minecraft/util/datafix/fixes/DataConverterEntityNameAbstract
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
		p	1		choice
		p	2		entityTyped
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
		p	1		choice
		p	2		entityDynamic
c	bhd	net/minecraft/util/datafix/fixes/DataConverterEntityRenameAbstract
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		name
		p	2		outputSchema
		p	3		changesType
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
		p	3		oldName
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
		p	1		oldName
	f	Ljava/lang/String;	a	name
c	bhe	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	5		untaggedSpawnerTyped
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
		p	1		spawnDataType
		p	2		spawnDataTyped
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
		p	1		spawnPotentialsType
		p	2		spawnPotentialsTyped
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
		p	2		spawnPotentialsTyped
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
		p	2		spawnDataTyped
c	bhf	net/minecraft/util/datafix/fixes/DataConverterStatistic
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	makeStatFixer
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeObjectiveFixer$4
		p	1		objectiveTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeObjectiveFixer$3
		p	0		criteriaNameDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeStatFixer$0
	m	(Ljava/lang/String;)Lbhf$a;	a	unpackLegacyKey
		p	0		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	makeObjectiveFixer
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeStatFixer$1
		p	1		statsTyped
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeItem
		p	0		id
	m	(Ljava/lang/String;)Ljava/lang/String;	c	upgradeBlock
		p	0		id
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$makeObjectiveFixer$2
		p	0		criteriaName
	f	Ljava/util/Set;	a	SPECIAL_OBJECTIVE_CRITERIA
	f	Ljava/util/Set;	b	SKIP
	f	Ljava/util/Map;	c	CUSTOM_MAP
	f	Ljava/lang/String;	d	BLOCK_KEY
	f	Ljava/lang/String;	e	NEW_BLOCK_KEY
	f	Ljava/util/Map;	f	ITEM_KEYS
	f	Ljava/util/Map;	g	ENTITY_KEYS
	f	Ljava/util/Map;	h	ENTITIES
	f	Ljava/lang/String;	i	NEW_CUSTOM_KEY
c	bhf$a	net/minecraft/util/datafix/fixes/DataConverterStatistic$a
	m	()Ljava/lang/String;	a	type
	m	()Ljava/lang/String;	b	typeKey
	f	Ljava/lang/String;	a	type
	f	Ljava/lang/String;	b	typeKey
c	bhg	net/minecraft/util/datafix/fixes/StatsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		replacements
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
		p	4		statsTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
		p	3		statsInnerTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
		p	2		customStatTyped
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
		p	1		old
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
		p	4		objectiveTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
		p	3		criteriaTypeTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
		p	2		customCriteriaTypeTyped
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
		p	1		old
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
c	bhh	net/minecraft/util/datafix/fixes/DataConverterStriderGravity
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputschema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
		p	1		striderDynamic
c	bhi	net/minecraft/util/datafix/fixes/DataConverterStructureReference
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	0		structureFeatureTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
		p	0		structureFeatureDynamic
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
		p	0		references
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
		p	0		referencesDynamic
c	bhj	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	1		worldGenSettingsTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
		p	0		dimensionEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
		p	0		structureSettingsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$6
		p	1		entry
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$5
		p	1		structureDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$7
		p	2		strongholdDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
		p	1		dimensionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$4
		p	0		generatorDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$3
		p	0		generatorSettingsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
		p	0		dimensionsDynamic
c	bhk	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lbhk$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$8
		p	2		sectionDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		chunkDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lbhk$a;)Ljava/util/Optional;	a	guessConfiguration
		p	1		chunkDynamic
		p	2		mappingForStructure
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
		p	1		startsDynamic
		p	2		chunkDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReferences$5
		p	1		configuredStructureId
		p	2		referenceDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/HashMap;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$6
		p	3		structureId
		p	4		referenceDynamic
	m	(Lbhk$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$7
		p	2		biomePaletteDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
		p	1		referencesDynamic
		p	2		chunkDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateStarts$3
		p	2		configuredStructureId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/HashMap;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$4
		p	3		structureId
		p	4		startDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
		p	1		structureIdDynamic
		p	2		chunkDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$2
		p	2		structuresDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$1
		p	2		referencesDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fix$0
		p	2		startsDynamic
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	CONVERSION_MAP
c	bhk$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$a
	m	()Ljava/util/Map;	a	biomeMapping
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
		p	2		key
	m	(Ljava/lang/String;)Lbhk$a;	a	trivial
		p	0		mapping
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
		p	0		biomeMapping
	m	(Ljava/util/Map;Ljava/lang/String;)Lbhk$a;	a	biomeMapped
		p	0		biomeMapping
		p	1		fallback
	m	()Ljava/lang/String;	b	fallback
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
c	bhl	net/minecraft/util/datafix/fixes/DataConverterTeamDisplayName
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
c	bhm	net/minecraft/util/datafix/fixes/TippedArrowPotionToItemFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	3		itemDynamic
c	bhn	net/minecraft/util/datafix/fixes/DataConverterTrappedChest
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
c	bhn$a	net/minecraft/util/datafix/fixes/DataConverterTrappedChest$a
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		sectionTyped
		p	2		inputSchema
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
		p	1		index
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
c	bho	net/minecraft/util/datafix/fixes/TrialSpawnerConfigFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	1		data
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	moveToConfigTag
		p	0		data
c	bhp	net/minecraft/util/datafix/fixes/VariantRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
		p	4		choiceName
		p	5		oldToNewNames
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
		p	1		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	2		variantName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
		p	1		variant
	f	Ljava/util/Map;	a	renames
c	bhq	net/minecraft/util/datafix/fixes/DataConverterVillagerProfession
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
		p	1		outputSchema
		p	2		entity
	m	(II)Ljava/lang/String;	a	upgradeData
		p	0		professionId
		p	1		careerId
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
c	bhr	net/minecraft/util/datafix/fixes/DataConverterVillagerFollowRange
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
		p	0		villagerDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
		p	1		attributesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
		p	0		attributeDynamic
	f	D	a	ORIGINAL_VALUE
	f	D	b	NEW_BASE_VALUE
c	bhs	net/minecraft/util/datafix/fixes/DataConverterVillagerLevelXp
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesTyped
	m	(I)I	a	getMinXpPerLevel
		p	0		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
		p	1		villagerDynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
		p	3		villagerTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
		p	1		recipesTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	5		entityTyped
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
		p	0		villagerTyped
		p	1		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
		p	1		villagerdynamic
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
		p	1		offersTyped
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
		p	0		villagerTyped
		p	1		level
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
		p	1		villagerDataDynamic
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
c	bht	net/minecraft/util/datafix/fixes/DataConverterVillagerTrade
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
		p	1		idOpticFinder
		p	2		itemTyped
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
		p	4		villagerTradeTyped
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$3
		p	0		entry
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$2
		p	0		id
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
		p	2		itemTyped
c	bhu	net/minecraft/util/datafix/fixes/DataConverterWallProperty
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	0		blockStateTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
		p	0		blockStateDynamic
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
		p	0		propertiesDynamic
		p	1		propertyName
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
		p	0		value
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
		p	0		propertiesDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
		p	0		propertyValue
	f	Ljava/util/Set;	a	WALL_BLOCKS
c	bhv	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		dynamic
c	bhw	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
		p	1		worldGenSettingsTyped
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
		p	0		dimensionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
		p	0		dimensionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
		p	0		dimensionId
		p	1		dimensionDynamic
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
		p	0		dimensions
c	bhx	net/minecraft/util/datafix/fixes/DataConverterWorldGenSettingsBuilding
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
		p	0		seed
		p	2		worldGenSettingsDynamic
		p	3		settingsDynamic
		p	4		biomeSourceDynamic
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
		p	2		legacyCustomOptions
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
		p	0		worldGenSettingsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
		p	0		worldGenSettingsDynamic
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
		p	0		worldGenSettingsDynamic
		p	1		seed
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
		p	0		worldGenSettingsDynamic
		p	1		seed
		p	3		generatorSettingsDynamic
		p	4		caves
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
		p	0		worldGenSettingsDynamic
		p	1		seed
		p	3		legacyBiomeInitLayer
		p	4		largeBiomes
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
		p	6		propertyName
		p	7		spacing
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
		p	0		worldGenSettingsDynamicOps
		p	1		generatorOptionsDynamic
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
		p	0		generatorName
	m	(Ljava/lang/String;I)I	a	getInt
		p	1		defaultValue
	m	(Ljava/lang/String;II)I	a	getInt
		p	1		defaultValue
		p	2		minValue
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
		p	1		structureId
		p	2		spacingStr
		p	3		minSpacing
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
		p	5		oldStructureName
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
		p	0		biomeDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
c	bhx$a	net/minecraft/util/datafix/fixes/DataConverterWorldGenSettingsBuilding$a
	m	(III)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		salt
	m	(Lbhx$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lbhx$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lbhx$a;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
c	bhy	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		outputSchema
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
		p	2		worldGenSettingsTyped
	m	(Lcom/mojang/datafixers/types/Type;ZZLcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
		p	3		dimensionsTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
		p	2		overworldBiomeSourceDynamic
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
		p	2		dimensionsDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$3
		p	0		overworldGeneratorSettingsDynamic
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
		p	2		overworldDimensionDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$2
		p	0		overworldGeneratorSettingsDynamic
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$4
		p	2		overworldGeneratorDynamic
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
		p	0		worldGenSettingsDynamic
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	f	Ljava/lang/String;	b	NAME
c	bhz	net/minecraft/util/datafix/fixes/DataConverterShoulderEntity
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
		p	1		outputSchema
		p	2		name
		p	3		type
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
c	bia	net/minecraft/util/datafix/fixes/DataConverterZombieVillagerLevelXp
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
		p	1		outputSchema
		p	2		changesType
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
		p	1		inputTyped
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
		p	0		zombieVillagerDynamic
c	bid	net/minecraft/util/datafix/schemas/DataConverterSchemaNamed
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
		p	0		id
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
c	bid$1	net/minecraft/util/datafix/schemas/DataConverterSchemaNamed$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
c	bie	net/minecraft/util/datafix/schemas/DataConverterSchemaV100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
		p	1		name
c	bif	net/minecraft/util/datafix/schemas/DataConverterSchemaV102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	big	net/minecraft/util/datafix/schemas/DataConverterSchemaV1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
c	bih	net/minecraft/util/datafix/schemas/DataConverterSchemaV106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bii	net/minecraft/util/datafix/schemas/DataConverterSchemaV107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bij	net/minecraft/util/datafix/schemas/DataConverterSchemaV1125
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
c	bik	net/minecraft/util/datafix/schemas/DataConverterSchemaV135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bil	net/minecraft/util/datafix/schemas/DataConverterSchemaV143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bim	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bin	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bio	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
c	bip	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
c	biq	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bir	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bis	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	(Ljava/lang/String;)Ljava/lang/String;	b	packNamespacedWithDot
		p	0		id
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
c	bis$1	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		pair
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
		p	0		criteriaName
c	bis$2	net/minecraft/util/datafix/schemas/DataConverterSchemaV1451_6$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
		p	1		criteriaName
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
c	bit	net/minecraft/util/datafix/schemas/DataConverterSchemaV1460
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	A	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$50
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$28
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$41
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$44
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$51
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$49
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$27
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
		p	0		schema
		p	1		map
		p	2		name
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$34
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$48
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$26
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$47
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$45
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$25
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$39
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$24
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$42
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$23
		p	1		name
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$22
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	z	lambda$registerEntities$3
		p	1		name
c	biu	net/minecraft/util/datafix/schemas/DataConverterSchemaV1466
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	biv	net/minecraft/util/datafix/schemas/DataConverterSchemaV1470
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	biw	net/minecraft/util/datafix/schemas/DataConverterSchemaV1481
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bix	net/minecraft/util/datafix/schemas/DataConverterSchemaV1483
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	biy	net/minecraft/util/datafix/schemas/DataConverterSchemaV1486
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	biz	net/minecraft/util/datafix/schemas/DataConverterSchemaV1510
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bja	net/minecraft/util/datafix/schemas/DataConverterSchemaV1800
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
c	bjb	net/minecraft/util/datafix/schemas/DataConverterSchemaV1801
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjc	net/minecraft/util/datafix/schemas/DataConverterSchemaV1904
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjd	net/minecraft/util/datafix/schemas/DataConverterSchemaV1906
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	bje	net/minecraft/util/datafix/schemas/DataConverterSchemaV1909
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bjf	net/minecraft/util/datafix/schemas/DataConverterSchemaV1920
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		name
c	bjg	net/minecraft/util/datafix/schemas/DataConverterSchemaV1928
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	bjh	net/minecraft/util/datafix/schemas/DataConverterSchemaV1929
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
		p	1		name
c	bji	net/minecraft/util/datafix/schemas/DataConverterSchemaV1931
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjj	net/minecraft/util/datafix/schemas/DataConverterSchemaV2100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		entityTypes
		p	2		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	bjk	net/minecraft/util/datafix/schemas/DataConverterSchemaV2501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
		p	0		schema
		p	1		map
		p	2		name
c	bjl	net/minecraft/util/datafix/schemas/DataConverterSchemaV2502
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjm	net/minecraft/util/datafix/schemas/DataConverterSchemaV2505
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjn	net/minecraft/util/datafix/schemas/DataConverterSchemaV2509
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjo	net/minecraft/util/datafix/schemas/DataConverterSchemaV2519
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjp	net/minecraft/util/datafix/schemas/DataConverterSchemaV2522
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjq	net/minecraft/util/datafix/schemas/DataConverterSchemaV2551
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	bjr	net/minecraft/util/datafix/schemas/DataConverterSchemaV2568
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjs	net/minecraft/util/datafix/schemas/V2571
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjt	net/minecraft/util/datafix/schemas/V2684
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bju	net/minecraft/util/datafix/schemas/V2686
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjv	net/minecraft/util/datafix/schemas/V2688
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
c	bjw	net/minecraft/util/datafix/schemas/V2704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bjx	net/minecraft/util/datafix/schemas/V2707
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bjy	net/minecraft/util/datafix/schemas/V2831
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bjz	net/minecraft/util/datafix/schemas/V2832
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$7
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	bka	net/minecraft/util/datafix/schemas/V2842
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bkb	net/minecraft/util/datafix/schemas/V3076
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bkc	net/minecraft/util/datafix/schemas/V3078
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerMob$0
c	bkd	net/minecraft/util/datafix/schemas/V3081
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bke	net/minecraft/util/datafix/schemas/V3082
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
		p	1		string
c	bkf	net/minecraft/util/datafix/schemas/V3083
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkg	net/minecraft/util/datafix/schemas/V3202
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bkh	net/minecraft/util/datafix/schemas/V3203
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bki	net/minecraft/util/datafix/schemas/V3204
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bkj	net/minecraft/util/datafix/schemas/V3325
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bkk	net/minecraft/util/datafix/schemas/V3326
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkl	net/minecraft/util/datafix/schemas/V3327
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$0
c	bkm	net/minecraft/util/datafix/schemas/V3328
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bkn	net/minecraft/util/datafix/schemas/V3438
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
c	bko	net/minecraft/util/datafix/schemas/V3448
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bkp	net/minecraft/util/datafix/schemas/V3682
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bkq	net/minecraft/util/datafix/schemas/V3683
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkr	net/minecraft/util/datafix/schemas/V3685
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	abstractArrow
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$0
c	bks	net/minecraft/util/datafix/schemas/V3689
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bkt	net/minecraft/util/datafix/schemas/V3799
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bku	net/minecraft/util/datafix/schemas/V3807
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bkv	net/minecraft/util/datafix/schemas/V3808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkw	net/minecraft/util/datafix/schemas/V3808_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkx	net/minecraft/util/datafix/schemas/V3808_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bky	net/minecraft/util/datafix/schemas/V3816
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bkz	net/minecraft/util/datafix/schemas/V3818
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bla	net/minecraft/util/datafix/schemas/V3818_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	blb	net/minecraft/util/datafix/schemas/V3818_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	blc	net/minecraft/util/datafix/schemas/V3818_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bld	net/minecraft/util/datafix/schemas/V3825
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	ble	net/minecraft/util/datafix/schemas/V3938
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	abstractArrow
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$0
c	blf	net/minecraft/util/datafix/schemas/DataConverterSchemaV501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	blg	net/minecraft/util/datafix/schemas/DataConverterSchemaV700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	blh	net/minecraft/util/datafix/schemas/DataConverterSchemaV701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
c	bli	net/minecraft/util/datafix/schemas/DataConverterSchemaV702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	blj	net/minecraft/util/datafix/schemas/DataConverterSchemaV703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	blk	net/minecraft/util/datafix/schemas/DataConverterSchemaV704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$2
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$1
		p	1		name
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
c	blk$1	net/minecraft/util/datafix/schemas/DataConverterSchemaV704$1
c	bll	net/minecraft/util/datafix/schemas/DataConverterSchemaV705
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$25
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$24
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$23
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$22
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$19
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$14
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$12
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$4
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$3
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$2
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
	f	Ljava/util/Map;	c	ITEM_TO_ENTITY
c	bll$1	net/minecraft/util/datafix/schemas/DataConverterSchemaV705$1
c	blm	net/minecraft/util/datafix/schemas/DataConverterSchemaV808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
		p	0		schema
		p	1		map
		p	2		blockEntityId
c	bln	net/minecraft/util/datafix/schemas/DataConverterSchemaV99
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
		p	1		versionKey
		p	2		parent
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$36
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	equipment
		p	0		schema
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$22
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$39
		p	2		entityTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Object;	a	addNames
		p	0		stack
		p	1		renames
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$40
		p	3		tag
	m	(Ljava/util/HashMap;)V	a	lambda$static$37
		p	0		map
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$28
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$21
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addNames$38
		p	2		blockEntityTag
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$20
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerMinecart
		p	0		schema
		p	1		map
		p	2		entityId
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$33
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	d	registerInventory
		p	0		schema
		p	1		map
		p	2		entityId
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$18
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$17
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$16
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$24
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$15
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$13
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$11
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$10
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerInventory$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$9
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerMinecart$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$8
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerThrowableProjectile$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$7
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerMob$0
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$6
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$5
		p	1		name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$4
		p	1		name
	f	Ljava/util/Map;	a	ITEM_TO_ENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	ITEM_TO_BLOCKENTITY
c	bln$1	net/minecraft/util/datafix/schemas/DataConverterSchemaV99$1
c	blp	net/minecraft/util/debugchart/AbstractSampleLogger
	m	(I[J)V	<init>	<init>
		p	1		size
		p	2		defaults
	m	()V	a	useSample
	m	(J)V	a	logSample
		p	1		value
	m	(JI)V	a	logPartialSample
		p	1		value
		p	3		column
	m	([J)V	a	logFullSample
		p	1		values
	m	()V	b	resetSample
	f	[J	a	defaults
	f	[J	b	sample
c	blq	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker
	m	(Laur;)V	<init>	<init>
		p	1		playerManager
	m	(I)V	a	tick
		p	1		tick
	m	(IJLjava/util/Map$Entry;)Z	a	lambda$handleUnsubscriptions$0
		p	4		entry
	m	(JI)V	a	handleSubscriptions
		p	1		time
		p	3		tick
	m	(Lacv;)V	a	broadcast
		p	1		packet
	m	(Laqv;Lbls;)V	a	subscribe
		p	1		player
		p	2		type
	m	(Lbls;)Z	a	shouldLogSamples
		p	1		type
	m	(JI)V	b	handleUnsubscriptions
		p	1		measuringTimeMs
		p	3		tick
	f	I	a	STOP_SENDING_AFTER_TICKS
	f	I	b	STOP_SENDING_AFTER_MS
	f	Laur;	c	playerList
	f	Ljava/util/EnumMap;	d	subscriptions
	f	Ljava/util/Queue;	e	subscriptionRequestQueue
c	blq$a	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker$a
	m	()Laqv;	a	player
	m	()Lbls;	b	sampleType
	f	Laqv;	a	player
	f	Lbls;	b	sampleType
c	blq$b	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker$b
	m	()J	a	millis
	m	()I	b	tick
	f	J	a	millis
	f	I	b	tick
c	blr	net/minecraft/util/debugchart/LocalSampleLogger
	m	(I)V	<init>	<init>
		p	1		dimensions
	m	(I[J)V	<init>	<init>
		p	1		size
		p	2		defaults
	m	()V	a	useSample
	m	(I)J	a	get
		p	1		index
	m	(II)J	a	get
		p	1		index
		p	2		dimension
	m	(I)I	b	wrapIndex
		p	1		index
	m	()I	c	capacity
	m	()I	d	size
	m	()V	e	reset
	f	I	c	CAPACITY
	f	[[J	d	samples
	f	I	e	start
	f	I	f	size
c	bls	net/minecraft/util/debugchart/RemoteDebugSampleType
	m	()[Lbls;	a	$values
	f	Lbls;	a	TICK_TIME
	f	[Lbls;	b	$VALUES
c	blt	net/minecraft/util/debugchart/RemoteSampleLogger
	m	(ILblq;Lbls;)V	<init>	<init>
		p	1		size
		p	2		tracker
		p	3		type
	m	(ILblq;Lbls;[J)V	<init>	<init>
		p	1		size
		p	2		tracker
		p	3		type
		p	4		defaults
	m	()V	a	useSample
	f	Lblq;	c	subscriptionTracker
	f	Lbls;	d	sampleType
c	blu	net/minecraft/util/debugchart/SampleLogger
	m	(J)V	a	logSample
		p	1		value
	m	(JI)V	a	logPartialSample
		p	1		value
		p	3		column
	m	([J)V	a	logFullSample
		p	1		values
c	blv	net/minecraft/util/debugchart/SampleStorage
	m	(I)J	a	get
		p	1		index
	m	(II)J	a	get
		p	1		index
		p	2		dimension
	m	()I	c	capacity
	m	()I	d	size
	m	()V	e	reset
c	blw	net/minecraft/util/debugchart/TpsDebugDimensions
	m	()[Lblw;	a	$values
	f	Lblw;	a	FULL_TICK
	f	Lblw;	b	TICK_SERVER_METHOD
	f	Lblw;	c	SCHEDULED_TASKS
	f	Lblw;	d	IDLE
	f	[Lblw;	e	$VALUES
c	blx	blx
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
		p	1		directory
		p	2		extension
	m	()Lblx$d;	a	listFiles
	m	(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V	a	writeCompressed
		p	0		source
		p	1		outputPath
	m	(Ljava/nio/file/Path;)Lblx$b;	a	parseFile
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lblx;	a	open
		p	0		directory
		p	1		extension
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	tryCompress
		p	0		from
		p	1		to
	m	(Ljava/time/LocalDate;)Lblx$e;	a	createNewFile
		p	1		date
	m	(Ljava/nio/file/Path;)Z	b	lambda$listFiles$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	COMPRESS_BUFFER_SIZE
	f	Ljava/lang/String;	c	COMPRESSED_EXTENSION
	f	Ljava/nio/file/Path;	d	root
	f	Ljava/lang/String;	e	extension
c	blx$a	blx$a
	m	()Ljava/io/Reader;	a	openReader
	m	()Lblx$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lblx$c;	d	id
	f	Ljava/nio/file/Path;	a	path
	f	Lblx$c;	b	id
c	blx$b	blx$b
	m	()Ljava/io/Reader;	a	openReader
	m	()Lblx$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lblx$c;	d	id
c	blx$c	blx$c
	m	()Ljava/time/LocalDate;	a	date
	m	(Ljava/lang/String;)Lblx$c;	a	parse
		p	0		fileName
	m	()I	b	index
	m	(Ljava/lang/String;)Ljava/lang/String;	b	toFileName
		p	1		extension
	f	Ljava/time/LocalDate;	a	date
	f	I	b	index
	f	Ljava/time/format/DateTimeFormatter;	c	DATE_FORMATTER
c	blx$d	blx$d
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		logs
	m	()Lblx$d;	a	compressAll
	m	(ILjava/time/LocalDate;Lblx$b;)Z	a	lambda$prune$0
		p	2		log
	m	(Ljava/time/LocalDate;I)Lblx$d;	a	prune
		p	1		currentDate
		p	2		retentionDays
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Set;	c	ids
	f	Ljava/util/List;	a	files
c	blx$e	blx$e
	m	()Ljava/io/Reader;	a	openReader
	m	()Lblx$a;	b	compress
	m	()Ljava/nio/file/Path;	c	path
	m	()Lblx$c;	d	id
	m	()Ljava/nio/channels/FileChannel;	e	openChannel
	f	Ljava/nio/file/Path;	a	path
	f	Lblx$c;	b	id
c	bly	bly
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/channels/FileChannel;)V	<init>	<init>
		p	1		codec
		p	2		channel
	m	()Lblz;	a	openReader
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbly;	a	open
		p	0		codec
		p	1		path
	m	(Ljava/lang/Object;)V	a	write
		p	1		object
	m	()V	b	releaseReference
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	referenceCount
c	bly$1	bly$1
	m	()Ljava/lang/Object;	a	next
	f	Lblz;	a	val$reader
	f	Lbly;	b	this$0
	f	J	c	position
c	blz	blz
	m	()Ljava/lang/Object;	a	next
	m	(Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lblz;	a	create
		p	0		codec
		p	1		reader
c	blz$1	blz$1
	m	()Ljava/lang/Object;	a	next
	f	Lcom/google/gson/stream/JsonReader;	a	val$jsonReader
	f	Lcom/mojang/serialization/Codec;	b	val$codec
c	bmb	net/minecraft/util/monitoring/jmx/MinecraftServerBeans
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
		p	1		server
	m	()F	a	getAverageTickTime
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Lbmb$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
		p	0		server
	m	()[J	b	getTickTimes
	m	(Lbmb$a;)Ljava/lang/String;	b	lambda$new$0
		p	0		entry
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
c	bmb$a	net/minecraft/util/monitoring/jmx/MinecraftServerBeans$a
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		getter
		p	3		description
		p	4		type
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
c	bmf	net/minecraft/util/parsing/packrat/Atom
	m	()Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)Lbmf;	a	of
		p	0		name
	f	Ljava/lang/String;	a	name
c	bmg	net/minecraft/util/parsing/packrat/Control
	m	()V	a	lambda$static$0
	f	Lbmg;	a	UNBOUND
c	bmh	net/minecraft/util/parsing/packrat/Dictionary
	m	(Lbmf;)Lbml;	a	get
		p	1		symbol
	m	(Lbmf;Lbml;)V	a	put
		p	1		symbol
		p	2		rule
	m	(Lbmf;Lbmo;Lbml$a;)V	a	put
		p	1		symbol
		p	2		term
		p	3		action
	m	(Lbmf;Lbmo;Lbml$b;)V	a	put
		p	1		symbol
		p	2		term
		p	3		action
	f	Ljava/util/Map;	a	terms
c	bmi	net/minecraft/util/parsing/packrat/ErrorCollector
	m	(I)V	a	finish
		p	1		cursor
	m	(ILbmn;Ljava/lang/Object;)V	a	store
		p	1		cursor
		p	2		suggestions
		p	3		reason
	m	(ILjava/lang/Object;)V	a	store
		p	1		cursor
		p	2		reason
c	bmi$a	net/minecraft/util/parsing/packrat/ErrorCollector$a
	m	()Ljava/util/List;	a	entries
	m	(I)V	a	finish
		p	1		cursor
	m	(ILbmn;Ljava/lang/Object;)V	a	store
		p	1		cursor
		p	2		suggestions
		p	3		reason
	m	()I	b	cursor
	m	(I)V	b	discardErrorsFromShorterParse
		p	1		cursor
	f	Ljava/util/List;	a	entries
	f	I	b	lastCursor
c	bmj	net/minecraft/util/parsing/packrat/ErrorEntry
	m	()I	a	cursor
	m	()Lbmn;	b	suggestions
	m	()Ljava/lang/Object;	c	reason
	f	I	a	cursor
	f	Lbmn;	b	suggestions
	f	Ljava/lang/Object;	c	reason
c	bmk	net/minecraft/util/parsing/packrat/ParseState
	m	(Lbmh;Lbmi;)V	<init>	<init>
		p	1		rules
		p	2		errors
	m	()Lbmi;	a	errorCollector
	m	(I)V	a	restore
		p	1		cursor
	m	(Lbmf;)Ljava/util/Optional;	a	parseTopRule
		p	1		startSymbol
	m	(Lbmk$b;)Lbmk$a;	a	lookupInCache
		p	1		key
	m	(Lbmk$b;Ljava/util/Optional;)V	a	storeInCache
		p	1		key
		p	2		value
	m	()Ljava/lang/Object;	b	input
	m	(Lbmf;)Ljava/util/Optional;	b	parse
		p	1		symbol
	m	()I	c	mark
	f	Ljava/util/Map;	a	ruleCache
	f	Lbmh;	b	dictionary
	f	Lbmi;	c	errorCollector
c	bmk$a	net/minecraft/util/parsing/packrat/ParseState$a
	m	()Ljava/util/Optional;	a	value
	m	()I	b	mark
	f	Ljava/util/Optional;	a	value
	f	I	b	mark
c	bmk$b	net/minecraft/util/parsing/packrat/ParseState$b
	m	()Lbmf;	a	name
	m	()I	b	mark
	f	Lbmf;	a	name
	f	I	b	mark
c	bml	net/minecraft/util/parsing/packrat/Rule
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	m	(Lbml$b;Lbmk;Lbmm;)Ljava/util/Optional;	a	lambda$fromTerm$0
		p	1		state
		p	2		results
	m	(Lbmo;Lbml$a;)Lbml;	a	fromTerm
		p	0		term
		p	1		action
	m	(Lbmo;Lbml$b;)Lbml;	a	fromTerm
		p	0		term
		p	1		action
c	bml$a	net/minecraft/util/parsing/packrat/Rule$a
	m	(Lbmk;Lbmm;)Ljava/util/Optional;	run	run
		p	1		state
		p	2		results
c	bml$b	net/minecraft/util/parsing/packrat/Rule$b
	m	(Lbmm;)Ljava/lang/Object;	run	run
		p	1		results
c	bml$c	net/minecraft/util/parsing/packrat/Rule$c
	m	()Lbml$a;	a	action
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	m	()Lbmo;	b	child
	f	Lbml$a;	a	action
	f	Lbmo;	b	child
c	bmm	net/minecraft/util/parsing/packrat/Scope
	m	(Lbmf;)Ljava/lang/Object;	a	get
		p	1		symbol
	m	(Lbmf;Ljava/lang/Object;)V	a	put
		p	1		symbol
		p	2		value
	m	(Lbmm;)V	a	putAll
		p	1		results
	m	([Lbmf;)Ljava/lang/Object;	a	getAny
		p	1		symbols
	m	(Lbmf;)Ljava/lang/Object;	b	getOrThrow
		p	1		symbol
	m	(Lbmf;Ljava/lang/Object;)Ljava/lang/Object;	b	getOrDefault
		p	1		symbol
		p	2		fallback
	m	([Lbmf;)Ljava/lang/Object;	b	getAnyOrThrow
		p	1		symbols
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	a	values
c	bmn	net/minecraft/util/parsing/packrat/SuggestionSupplier
	m	()Lbmn;	b	empty
	m	(Lbmk;)Ljava/util/stream/Stream;	b	lambda$empty$0
		p	0		state
	m	(Lbmk;)Ljava/util/stream/Stream;	possibleValues	possibleValues
		p	1		state
c	bmo	net/minecraft/util/parsing/packrat/Term
	m	()Lbmo;	a	cut
	m	(Lbmf;)Lbmo;	a	named
		p	0		symbol
	m	(Lbmf;Ljava/lang/Object;)Lbmo;	a	marker
		p	0		symbol
		p	1		value
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	(Lbmo;)Lbmo;	a	optional
		p	0		term
	m	([Lbmo;)Lbmo;	a	sequence
		p	0		terms
	m	()Lbmo;	b	empty
	m	([Lbmo;)Lbmo;	b	alternative
		p	0		terms
c	bmo$1	net/minecraft/util/parsing/packrat/Term$1
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
c	bmo$2	net/minecraft/util/parsing/packrat/Term$2
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
c	bmo$a	net/minecraft/util/parsing/packrat/Term$a
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Ljava/util/List;	c	elements
	f	Ljava/util/List;	a	elements
c	bmo$b	net/minecraft/util/parsing/packrat/Term$b
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Lbmf;	c	name
	m	()Ljava/lang/Object;	d	value
	f	Lbmf;	a	name
	f	Ljava/lang/Object;	b	value
c	bmo$c	net/minecraft/util/parsing/packrat/Term$c
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Lbmo;	c	term
	f	Lbmo;	a	term
c	bmo$d	net/minecraft/util/parsing/packrat/Term$d
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Lbmf;	c	name
	f	Lbmf;	a	name
c	bmo$e	net/minecraft/util/parsing/packrat/Term$e
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Ljava/util/List;	c	elements
	f	Ljava/util/List;	a	elements
c	bmp	net/minecraft/util/parsing/packrat/commands/Grammar
	m	()Lbmh;	a	rules
	m	(Lbmj;Ljava/util/function/Consumer;)V	a	lambda$parseForCommands$0
		p	0		error
		p	1		consumer
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseForCommands
		p	1		reader
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	parseForSuggestions
		p	1		builder
	m	()Lbmf;	b	top
	f	Lbmh;	a	rules
	f	Lbmf;	b	top
c	bmq	net/minecraft/util/parsing/packrat/commands/ResourceLocationParseRule
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	f	Lbml;	a	INSTANCE
c	bmr	net/minecraft/util/parsing/packrat/commands/ResourceLookupRule
	m	(Lbmf;Ljava/lang/Object;)V	<init>	<init>
		p	1		symbol
		p	2		callbacks
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lakr;)Ljava/lang/Object;	a	validateElement
		p	1		reader
		p	2		id
	f	Ljava/lang/Object;	a	context
	f	Lbmf;	b	idParser
c	bms	net/minecraft/util/parsing/packrat/commands/ResourceSuggestion
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lbmk;)Ljava/util/stream/Stream;	possibleValues	possibleValues
		p	1		state
c	bmt	net/minecraft/util/parsing/packrat/commands/StringReaderParserState
	m	(Lbmh;Lbmi;Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
		p	1		rules
		p	2		errors
		p	3		reader
	m	(I)V	a	restore
		p	1		cursor
	m	()Ljava/lang/Object;	b	input
	m	()I	c	mark
	m	()Lcom/mojang/brigadier/StringReader;	d	input
	f	Lcom/mojang/brigadier/StringReader;	a	input
c	bmu	net/minecraft/util/parsing/packrat/commands/StringReaderTerms
	m	(C)Lbmo;	a	character
		p	0		c
	m	(Ljava/lang/String;)Lbmo;	a	word
		p	0		string
c	bmu$a	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$a
	m	(Lbmk;)Ljava/util/stream/Stream;	a	lambda$parse$0
		p	1		suggestState
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()C	c	value
	f	C	a	value
c	bmu$b	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$b
	m	(Lbmk;)Ljava/util/stream/Stream;	a	lambda$parse$0
		p	1		suggestState
	m	(Lbmk;Lbmm;Lbmg;)Z	a	parse
		p	1		state
		p	2		results
		p	3		cut
	m	()Ljava/lang/String;	c	value
	f	Ljava/lang/String;	a	value
c	bmv	net/minecraft/util/parsing/packrat/commands/TagParseRule
	m	(Lbmk;)Ljava/util/Optional;	a	parse
		p	1		state
	f	Lbml;	a	INSTANCE
c	bmy	net/minecraft/util/profiling/MethodProfiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Z)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
		p	3		checkTimeout
	m	()V	a	startTick
	m	(J)Ljava/lang/Object;	a	lambda$pop$2
	m	(Lbol;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbmy$a;	c	getEntry
		p	1		name
	m	()Lbne;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lbmy$a;	e	lambda$getCurrentEntry$3
		p	0		k
	m	()Lbmy$a;	f	getCurrentEntry
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lbmy$a;	m	currentEntry
	f	Z	n	warn
	f	Ljava/util/Set;	o	chartedPaths
c	bmy$a	net/minecraft/util/profiling/MethodProfiler$a
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
c	bmz	net/minecraft/util/profiling/GameProfilerSwitcher
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;)V	<init>	<init>
		p	1		timeGetter
		p	2		tickGetter
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lbnf;	d	getFiller
	m	()Lbne;	e	getResults
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Lbnd;	c	profiler
c	bna	net/minecraft/util/profiling/MethodProfilerResultsEmpty
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	Lbna;	a	EMPTY
c	bnb	net/minecraft/util/profiling/MethodProfilerResultsFilled
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
		p	1		locationInfos
		p	2		startTime
		p	4		startTick
		p	5		endTime
		p	7		endTick
	m	()J	a	getStartTimeNano
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
		p	4		entry
	m	(ILjava/lang/String;Lbnb$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
		p	1		depth
		p	2		name
		p	3		info
		p	4		tickSpan
		p	5		sb
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
		p	1		level
		p	2		name
		p	3		sb
	m	(JI)Ljava/lang/String;	a	getProfilerResults
		p	1		timeSpan
		p	3		tickSpan
	m	(Lbnb$a;)J	a	lambda$static$0
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
		p	0		parent
		p	1		path
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
		p	0		sb
		p	1		size
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lbnb$a;)V	a	lambda$appendCounters$6
		p	3		name
		p	4		info
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
		p	3		marker
		p	4		count
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	(Ljava/util/Map;Ljava/lang/String;Lbng;)V	a	lambda$getCounterValues$3
		p	1		location
		p	2		info
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
		p	1		counters
		p	2		sb
		p	3		tickSpan
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
		p	2		marker
		p	3		count
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	(Ljava/lang/String;)Lbng;	c	getEntry
		p	1		path
	m	()I	d	getEndTimeTicks
	m	(Ljava/lang/String;)Lbnb$a;	d	lambda$getCounterValues$1
		p	0		k
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()Ljava/util/Map;	h	getCounterValues
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbng;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
c	bnb$1	net/minecraft/util/profiling/MethodProfilerResultsFilled$1
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bnb$a	net/minecraft/util/profiling/MethodProfilerResultsFilled$a
	m	(Ljava/lang/String;)Lbnb$a;	a	lambda$addValue$0
		p	0		k
	m	(Ljava/util/Iterator;J)V	a	addValue
		p	1		pathIterator
		p	2		time
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
c	bnc	net/minecraft/util/profiling/GameProfilerDisabled
	m	()V	a	startTick
	m	(Lbol;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/lang/String;)Lbmy$a;	c	getEntry
		p	1		name
	m	()Lbne;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
	f	Lbnc;	a	INSTANCE
c	bnd	net/minecraft/util/profiling/GameProfilerFillerActive
	m	(Ljava/lang/String;)Lbmy$a;	c	getEntry
		p	1		name
	m	()Lbne;	d	getResults
	m	()Ljava/util/Set;	e	getChartedPaths
c	bne	net/minecraft/util/profiling/MethodProfilerResults
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
		p	0		path
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()I	f	getTickDuration
	m	()J	g	getNanoDuration
	f	C	d	PATH_SEPARATOR
c	bnf	net/minecraft/util/profiling/GameProfilerFiller
	m	()V	a	startTick
	m	(Lbnf;Lbnf;)Lbnf;	a	tee
		p	0		a
		p	1		b
	m	(Lbol;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	m	(Ljava/util/function/Supplier;)V	c	incrementCounter
		p	1		markerGetter
	m	(Ljava/lang/String;)V	d	incrementCounter
		p	1		marker
	f	Ljava/lang/String;	b	ROOT
c	bnf$1	net/minecraft/util/profiling/GameProfilerFiller$1
	m	()V	a	startTick
	m	(Lbol;)V	a	markForCharting
		p	1		type
	m	(Ljava/lang/String;)V	a	push
		p	1		location
	m	(Ljava/lang/String;I)V	a	incrementCounter
		p	1		marker
		p	2		num
	m	(Ljava/util/function/Supplier;)V	a	push
		p	1		locationGetter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
		p	1		markerGetter
		p	2		num
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	b	popPush
		p	1		location
	m	(Ljava/util/function/Supplier;)V	b	popPush
		p	1		locationGetter
	m	()V	c	pop
	f	Lbnf;	a	val$first
	f	Lbnf;	c	val$second
c	bng	net/minecraft/util/profiling/MethodProfilerResult
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bnh	net/minecraft/util/profiling/MethodProfilerResultsField
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
		p	1		name
		p	2		parentUsagePercentage
		p	4		totalUsagePercentage
		p	6		visitCount
	m	()I	a	getColor
	m	(Lbnh;)I	a	compareTo
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
c	bni	net/minecraft/util/profiling/GameProfilerTick
	m	(Ljava/util/function/LongSupplier;Ljava/lang/String;J)V	<init>	<init>
		p	1		timeGetter
		p	2		filename
		p	3		overtime
	m	()Lbnf;	a	startTick
	m	(Lbnf;Lbni;)Lbnf;	a	decorateFiller
		p	0		profiler
		p	1		monitor
	m	(Ljava/lang/String;)Lbni;	a	createTickProfiler
		p	0		name
	m	()V	b	endTick
	m	()I	c	lambda$startTick$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lbnd;	f	profiler
c	bnj	net/minecraft/util/profiling/jfr/Environment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	(Lnet/minecraft/server/MinecraftServer;)Lbnj;	a	from
		p	0		server
	m	()[Lbnj;	b	$values
	f	Lbnj;	a	CLIENT
	f	Lbnj;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Lbnj;	d	$VALUES
c	bnk	net/minecraft/util/profiling/jfr/JfrProfiler
	m	()Lbnk;	a	getInstance
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbnj;)Z	a	start
		p	1		instanceType
	m	(Lbnj;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
		p	2		recording
	m	(Ldcd;Lakq;Ljava/lang/String;)Lbno;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ldws;Ldcd;Ldwr;I)V	a	onRegionFileRead
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Ljava/io/Reader;Lbnj;)Z	a	start
		p	1		reader
		p	2		instanceType
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
		p	1		address
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Ldws;Ldcd;Ldwr;I)V	b	onRegionFileWrite
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbno;	e	onWorldLoadedStarted
	m	()V	f	setupSummaryListener
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Ljava/lang/String;	e	STORAGE_CATEGORY
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/util/List;	h	CUSTOM_EVENTS
	f	Ljava/lang/String;	i	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	j	DATE_TIME_FORMATTER
	f	Lbnk;	k	INSTANCE
	f	Ljdk/jfr/Recording;	l	recording
	f	F	m	currentAverageTickTime
	f	Ljava/util/Map;	n	networkTrafficByAddress
c	bnk$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	m	()V	a	lambda$$0
	f	Lbnn;	a	summaryReporter
	f	Lbnk;	b	this$0
c	bnl	net/minecraft/util/profiling/jfr/JvmProfiler
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbnj;)Z	a	start
		p	1		instanceType
	m	(Ldcd;Lakq;Ljava/lang/String;)Lbno;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ldws;Ldcd;Ldwr;I)V	a	onRegionFileRead
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Ldws;Ldcd;Ldwr;I)V	b	onRegionFileWrite
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbno;	e	onWorldLoadedStarted
	f	Lbnl;	f	INSTANCE
c	bnl$a	net/minecraft/util/profiling/jfr/JvmProfiler$a
	m	()V	a	lambda$static$0
	m	(F)V	a	onServerTick
		p	1		tickTime
	m	(Lbnj;)Z	a	start
		p	1		instanceType
	m	(Ldcd;Lakq;Ljava/lang/String;)Lbno;	a	onChunkGenerate
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
	m	(Ldws;Ldcd;Ldwr;I)V	a	onRegionFileRead
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	a	onPacketReceived
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Ljava/nio/file/Path;	b	stop
	m	(Ldws;Ldcd;Ldwr;I)V	b	onRegionFileWrite
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
	m	(Lvu;Lzi;Ljava/net/SocketAddress;I)V	b	onPacketSent
		p	1		state
		p	2		type
		p	3		remoteAddress
		p	4		bytes
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	()Lbno;	e	onWorldLoadedStarted
	f	Lbno;	a	noOpCommit
	f	Lorg/slf4j/Logger;	b	LOGGER
c	bnm	net/minecraft/util/profiling/jfr/Percentiles
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
		p	0		map
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
		p	1		reversedMap
	m	([D)Ljava/util/Map;	a	evaluate
		p	0		values
	m	([J)Ljava/util/Map;	a	evaluate
		p	0		values
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
c	bnn	net/minecraft/util/profiling/jfr/SummaryReporter
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		stopCallback
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
		p	1		dumpPath
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
		p	0		logSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
		p	0		logSupplier
		p	1		throwable
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
c	bno	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
c	bnq	net/minecraft/util/profiling/jfr/event/ChunkRegionIoEvent
	m	(Ldws;Ldcd;Ldwr;I)V	<init>	<init>
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
c	bnq$a	net/minecraft/util/profiling/jfr/event/ChunkRegionIoEvent$a
	f	Ljava/lang/String;	a	REGION_POS_X
	f	Ljava/lang/String;	b	REGION_POS_Z
	f	Ljava/lang/String;	c	LOCAL_POS_X
	f	Ljava/lang/String;	d	LOCAL_POS_Z
	f	Ljava/lang/String;	e	CHUNK_POS_X
	f	Ljava/lang/String;	f	CHUNK_POS_Z
	f	Ljava/lang/String;	g	LEVEL
	f	Ljava/lang/String;	h	DIMENSION
	f	Ljava/lang/String;	i	TYPE
	f	Ljava/lang/String;	j	COMPRESSION
	f	Ljava/lang/String;	k	BYTES
c	bnr	net/minecraft/util/profiling/jfr/event/PacketEvent
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetDirection
		p	3		packetId
		p	4		remoteAddress
		p	5		bytes
c	bnr$a	net/minecraft/util/profiling/jfr/event/PacketEvent$a
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_DIRECTION
	f	Ljava/lang/String;	d	PACKET_ID
	f	Ljava/lang/String;	e	BYTES
c	bnu	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		events
	m	()Lbnv;	a	results
	m	(Lboa;)Lbnu$a;	a	lambda$incrementChunk$2
		p	0		chunk
	m	(Lbof;)Lbnu$a;	a	lambda$incrementPacket$1
		p	0		packet
	m	(Ljava/nio/file/Path;)Lbnv;	a	parse
		p	0		path
	m	(Ljava/time/Duration;Ljava/util/Map;)Lboe;	a	collectIoStats
		p	0		duration
		p	1		packetsToCounter
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectIoStats$3
		p	0		entry
	m	(Ljava/util/stream/Stream;)V	a	capture
		p	1		events
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
		p	1		event
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
		p	1		event
		p	2		bytes
		p	3		packetsToCounter
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
		p	1		event
		p	2		samples
		p	3		bytesKey
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	b	incrementChunk
		p	1		event
		p	2		bytes
		p	3		chunksToCounter
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	cpuLoadStat
	f	Ljava/util/Map;	e	receivedPackets
	f	Ljava/util/Map;	f	sentPackets
	f	Ljava/util/Map;	g	readChunks
	f	Ljava/util/Map;	h	writtenChunks
	f	Ljava/util/List;	i	fileWrites
	f	Ljava/util/List;	j	fileReads
	f	I	k	garbageCollections
	f	Ljava/time/Duration;	l	gcTotalDuration
	f	Ljava/util/List;	m	gcHeapStats
	f	Ljava/util/List;	n	threadAllocationStats
	f	Ljava/util/List;	o	tickTimes
	f	Ljava/time/Duration;	p	worldCreationDuration
c	bnu$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
c	bnu$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$a
	m	()Lboe$a;	a	toCountAndSize
	m	(I)V	a	increment
		p	1		bytes
	f	J	a	count
	f	J	b	totalSize
c	bnv	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	m	()Ljava/util/List;	a	chunkGenSummary
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
		p	0		pair
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
		p	0		entry
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Lbod$a;	i	heapSummary
	m	()Lbog$a;	j	threadAllocationSummary
	m	()Lboe;	k	receivedPacketsSummary
	m	()Lboe;	l	sentPacketsSummary
	m	()Lboe;	m	writtenChunks
	m	()Lboe;	n	readChunks
	m	()Lboc$a;	o	fileWrites
	m	()Lboc$a;	p	fileReads
	m	()Ljava/util/List;	q	chunkGenStats
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Lbod$a;	g	heapSummary
	f	Lbog$a;	h	threadAllocationSummary
	f	Lboe;	i	receivedPacketsSummary
	f	Lboe;	j	sentPacketsSummary
	f	Lboe;	k	writtenChunks
	f	Lboe;	l	readChunks
	f	Lboc$a;	m	fileWrites
	f	Lboc$a;	n	fileReads
	f	Ljava/util/List;	o	chunkGenStats
c	bnx	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	m	(Lbnv;)Ljava/lang/String;	a	format
		p	1		profile
	m	(Lbnz;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$4
		p	0		sample
	m	(Lboa;Lcom/google/gson/JsonObject;)V	a	serializeChunkId
		p	0		chunk
		p	1		json
	m	(Lboc$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
		p	1		statistics
	m	(Lbod$a;)Lcom/google/gson/JsonElement;	a	heap
		p	1		statistics
	m	(Lboe;Ljava/util/function/BiConsumer;)Lcom/google/gson/JsonElement;	a	ioSummary
		p	1		statistics
		p	2		callback
	m	(Lbof;Lcom/google/gson/JsonObject;)V	a	serializePacketId
		p	0		packet
		p	1		json
	m	(Lbog$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
		p	1		statistics
	m	(Lboh;)D	a	lambda$serverTicks$7
		p	0		sample
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$fileIoSummary$9
		p	1		pair
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$6
		p	1		threadName
		p	2		allocation
	m	(Lcom/google/gson/JsonArray;Ljava/util/function/BiConsumer;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$ioSummary$10
		p	2		topContributor
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$1
		p	1		json
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$2
		p	1		json
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$8
		p	1		quantile
		p	2		value
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$0
		p	0		pair
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$5
		p	2		json
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	chunkGen
		p	1		statistics
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$11
		p	0		samplesx
		p	1		valueGetter
	m	(Lbnv;)Lcom/google/gson/JsonElement;	b	fileIO
		p	1		profile
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$3
		p	1		quantile
		p	2		value
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	serverTicks
		p	1		samples
	m	(Lbnv;)Lcom/google/gson/JsonElement;	c	network
		p	1		profile
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	cpu
		p	1		samples
	f	Lcom/google/gson/Gson;	a	gson
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
c	bnz	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	m	(Ljava/time/Duration;Ldcd;Laqi;Ldvz;Ljava/lang/String;)V	<init>	<init>
		p	1		duration
	m	()Ljava/time/Duration;	a	duration
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbnz;	a	from
		p	0		event
	m	()Ldcd;	b	chunkPos
	m	()Laqi;	c	worldPos
	m	()Ldvz;	d	status
	m	()Ljava/lang/String;	e	level
	f	Ljava/time/Duration;	a	duration
	f	Ldcd;	b	chunkPos
	f	Laqi;	c	worldPos
	f	Ldvz;	d	status
	f	Ljava/lang/String;	e	level
c	boa	net/minecraft/util/profiling/jfr/stats/ChunkIdentification
	m	()Ljava/lang/String;	a	level
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lboa;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	dimension
	m	()I	c	x
	m	()I	d	z
	f	Ljava/lang/String;	a	level
	f	Ljava/lang/String;	b	dimension
	f	I	c	x
	f	I	d	z
c	bob	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	m	()D	a	jvm
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbob;	a	from
		p	0		event
	m	()D	b	userJvm
	m	()D	c	system
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
c	boc	net/minecraft/util/profiling/jfr/stats/FileIOStat
	m	()Ljava/time/Duration;	a	duration
	m	(Lboc;)J	a	lambda$summary$3
		p	0		sample
	m	(Ljava/time/Duration;Ljava/util/List;)Lboc$a;	a	summary
		p	0		duration
		p	1		samples
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
		p	0		entry
	m	()Ljava/lang/String;	b	path
	m	(Lboc;)Ljava/lang/String;	b	lambda$summary$2
		p	0		sample
	m	()J	c	bytes
	m	(Lboc;)Z	c	lambda$summary$1
		p	0		sample
	m	(Lboc;)J	d	lambda$summary$0
		p	0		sample
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
c	boc$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$a
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
c	bod	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lbod;)Lbod$b;	a	lambda$calculateAllocationRatePerSecond$0
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbod$a;	a	summary
		p	0		duration
		p	1		samples
		p	2		gcDuration
		p	3		count
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
		p	0		samples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbod;	a	from
		p	0		event
	m	()J	b	heapUsed
	m	()Lbod$b;	c	timing
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Lbod$b;	c	timing
c	bod$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$a
	m	()F	a	gcOverHead
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
c	bod$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$b
	m	()[Lbod$b;	a	$values
	f	Lbod$b;	a	BEFORE_GC
	f	Lbod$b;	b	AFTER_GC
	f	[Lbod$b;	c	$VALUES
c	boe	net/minecraft/util/profiling/jfr/stats/IoSummary
	m	(Ljava/time/Duration;Ljava/util/List;)V	<init>	<init>
		p	1		duration
		p	2		packetsToStatistics
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
	f	Lboe$a;	a	totalCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
c	boe$a	net/minecraft/util/profiling/jfr/stats/IoSummary$a
	m	()F	a	averageSize
	m	(Lboe$a;)Lboe$a;	a	add
		p	1		statistics
	m	()J	b	totalCount
	m	()J	c	totalSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
c	bof	net/minecraft/util/profiling/jfr/stats/PacketIdentification
	m	()Ljava/lang/String;	a	direction
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbof;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	protocolId
	m	()Ljava/lang/String;	c	packetId
	f	Ljava/lang/String;	a	direction
	f	Ljava/lang/String;	b	protocolId
	f	Ljava/lang/String;	c	packetId
c	bog	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Lbog;)Ljava/lang/String;	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lbog$a;	a	summary
		p	0		samples
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
		p	1		threadName
		p	2		groupedSamples
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbog;	a	from
		p	0		event
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
c	bog$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$a
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
c	boh	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	m	()Ljava/time/Instant;	a	timestamp
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lboh;	a	from
		p	0		event
	m	()Ljava/time/Duration;	b	currentAverage
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
c	boi	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	boj	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	m	()Lboi;	a	fastest
	m	(Lboi;)J	a	lambda$summary$0
		p	0		sample
	m	(Ljava/util/List;)Lboj;	a	summary
		p	0		samples
	m	()Lboi;	b	slowest
	m	()Lboi;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	f	Lboi;	a	fastest
	f	Lboi;	b	slowest
	f	Lboi;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
c	bol	net/minecraft/util/profiling/metrics/MetricCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lbol;	b	$values
	f	Lbol;	a	PATH_FINDING
	f	Lbol;	b	EVENT_LOOPS
	f	Lbol;	c	MAIL_BOXES
	f	Lbol;	d	TICK_LOOP
	f	Lbol;	e	JVM
	f	Lbol;	f	CHUNK_RENDERING
	f	Lbol;	g	CHUNK_RENDERING_DISPATCHING
	f	Lbol;	h	CPU
	f	Lbol;	i	GPU
	f	Ljava/lang/String;	j	description
	f	[Lbol;	k	$VALUES
c	bom	net/minecraft/util/profiling/metrics/MetricSampler
	m	(Ljava/lang/String;Lbol;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Lbom$c;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		retriever
		p	4		startAction
		p	5		deviationChecker
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
		p	1		tick
	m	(Ljava/lang/String;Lbol;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lbom;	a	create
		p	0		name
		p	1		type
		p	2		context
		p	3		retriever
	m	(Ljava/lang/String;Lbol;Ljava/util/function/DoubleSupplier;)Lbom;	a	create
		p	0		name
		p	1		type
		p	2		retriever
	m	(Ljava/lang/String;Lbol;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbom$a;	a	builder
		p	0		name
		p	1		type
		p	2		retriever
		p	3		context
	m	()V	b	onFinished
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Lbol;	e	getCategory
	m	()Lbom$b;	f	result
	m	()Z	g	triggersThreshold
	m	()V	h	verifyRunning
	f	Lbom$c;	a	thresholdTest
	f	Ljava/lang/String;	b	name
	f	Lbol;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	D	i	currentValue
c	bom$a	net/minecraft/util/profiling/metrics/MetricSampler$a
	m	(Ljava/lang/String;Lbol;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		timeFunction
		p	4		context
	m	()Lbom;	a	build
	m	(Lbom$c;)Lbom$a;	a	withThresholdAlert
		p	1		deviationChecker
	m	(Ljava/util/function/Consumer;)Lbom$a;	a	withBeforeTick
		p	1		action
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	f	Ljava/lang/String;	a	name
	f	Lbol;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Lbom$c;	f	thresholdTest
c	bom$b	net/minecraft/util/profiling/metrics/MetricSampler$b
	m	(IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V	<init>	<init>
		p	1		startTick
		p	2		endTick
		p	3		values
	m	()I	a	getFirstTick
	m	(I)D	a	valueAtTick
		p	1		tick
	m	()I	b	getLastTick
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
c	bom$c	net/minecraft/util/profiling/metrics/MetricSampler$c
	m	(D)Z	test	test
		p	1		value
c	bom$d	net/minecraft/util/profiling/metrics/MetricSampler$d
	m	(F)V	<init>	<init>
		p	1		threshold
	m	(D)Z	test	test
		p	1		value
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
c	bon	net/minecraft/util/profiling/metrics/MetricsRegistry
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Lbop;)V	a	add
		p	1		executor
	m	(Ljava/util/Map$Entry;)Lbom;	a	lambda$aggregateDuplicates$1
		p	0		entry
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
		p	0		samplers
	m	(Lbop;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
		p	0		executor
	f	Lbon;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
c	bon$a	net/minecraft/util/profiling/metrics/MetricsRegistry$a
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
		p	1		id
		p	2		delegates
	m	(DLbom;)Z	a	lambda$thresholdTest$2
		p	2		sampler
	m	(Ljava/util/List;)Lbom$c;	a	thresholdTest
		p	0		delegates
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
		p	1		value
	m	(Ljava/util/List;)V	b	beforeTick
		p	0		samplers
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
		p	0		samplers
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
	f	Ljava/util/List;	b	delegates
c	boo	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
c	bop	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bw	profiledMetrics
c	bor	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	m	(Lboo;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbox;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		samplerSource
		p	2		timeGetter
		p	3		dumpExecutor
		p	4		dumper
		p	5		resultConsumer
		p	6		dumpConsumer
	m	()V	a	end
	m	(Lbne;)V	a	scheduleSaveResults
		p	1		result
	m	(Lbom;)Ljava/util/List;	a	lambda$endTick$3
		p	0		s
	m	(Lboo;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbox;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbor;	a	createStarted
		p	0		source
		p	1		timeGetter
		p	2		dumpExecutor
		p	3		dumper
		p	4		resultConsumer
		p	5		dumpConsumer
	m	(Ljava/util/Collection;)V	a	cleanup
		p	1		samplers
	m	(Ljava/util/HashSet;Lbne;)V	a	lambda$scheduleSaveResults$5
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
		p	0		consumer
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbnf;	f	getProfiler
	m	()V	g	verifyStarted
	m	()I	h	lambda$endTick$4
	m	()Lbnd;	i	lambda$startTick$2
	m	()I	j	lambda$new$1
	m	()I	k	lambda$new$0
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lbmz;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Lbox;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Lboo;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lbnd;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
c	bos	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbnf;	f	getProfiler
	f	Lbot;	a	INSTANCE
c	bot	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbnf;	f	getProfiler
c	bou	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
		p	1		profilerSupplier
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Lbol;)Lbom;	a	samplerForProfilingPath
		p	0		profilerSupplier
		p	1		id
		p	2		type
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Lbom;	a	lambda$newSamplersFoundInProfiler$1
		p	1		target
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
		p	1		target
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
c	bov	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	m	(Ljava/util/function/LongSupplier;Z)V	<init>	<init>
		p	1		nanoTimeSupplier
		p	2		includeSystem
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Lbov$a;I)Lbom;	a	lambda$runtimeIndependentSamplers$1
		p	1		index
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
		p	0		watch
	m	(Ljava/util/function/LongSupplier;)Lbom;	a	tickTimeSampler
		p	0		nanoTimeSupplier
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
		p	1		profilerSupplier
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Lbov$a;I)D	b	lambda$runtimeIndependentSamplers$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Lbou;	c	samplerFactory
c	bov$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
c	bov$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$a
	m	(I)D	a	loadForCpu
		p	1		index
	f	I	a	nrOfCpus
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
c	box	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		type
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILbom$b;)Ljava/lang/String;	a	lambda$saveCategory$1
		p	1		data
	m	(Lbne;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
		p	1		result
		p	2		directory
	m	(Lbol;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
		p	1		type
		p	2		samplers
		p	3		directory
	m	(Ljava/nio/file/Path;Lbol;Ljava/util/List;)V	a	lambda$saveMetrics$0
		p	2		type
		p	3		sampler
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbom;Lboy;)V	a	lambda$saveDeviations$3
		p	3		deviation
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbom;Ljava/util/List;)V	a	lambda$saveDeviations$4
		p	2		sampler
		p	3		sampleDeviations
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
		p	1		deviations
		p	2		deviationsDirectory
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
		p	1		samplers
		p	2		directory
	m	(Ljava/util/Set;Ljava/util/Map;Lbne;)Ljava/nio/file/Path;	a	saveReports
		p	1		samplers
		p	2		deviations
		p	3		result
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
c	boy	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	m	(Ljava/time/Instant;ILbne;)V	<init>	<init>
		p	1		instant
		p	2		ticks
		p	3		result
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lbne;	c	profilerResultAtTick
c	bpb	net/minecraft/util/random/SimpleWeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Lbpb$a;	a	builder
	m	(Layw;)Ljava/util/Optional;	a	getRandomValue
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrappedCodecAllowingEmpty
		p	0		dataCodec
	m	(Ljava/lang/Object;)Lbpb;	a	single
		p	0		object
	m	()Lbpb;	b	empty
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	wrappedCodec
		p	0		dataCodec
c	bpb$a	net/minecraft/util/random/SimpleWeightedRandomList$a
	m	()Lbpb;	a	build
	m	(Ljava/lang/Object;)Lbpb$a;	a	add
		p	1		object
	m	(Ljava/lang/Object;I)Lbpb$a;	a	add
		p	1		object
		p	2		weight
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
c	bpc	net/minecraft/util/random/Weight
	m	(I)V	<init>	<init>
		p	1		weight
	m	()I	a	asInt
	m	(I)Lbpc;	a	of
		p	0		weight
	m	(I)V	b	validateWeight
		p	0		weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpc;	b	ONE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	value
c	bpd	net/minecraft/util/random/WeightedEntry
	m	()Lbpc;	a	getWeight
	m	(Ljava/lang/Object;I)Lbpd$b;	a	wrap
		p	0		data
		p	1		weight
c	bpd$a	net/minecraft/util/random/WeightedEntry$a
	m	(I)V	<init>	<init>
		p	1		weight
	m	(Lbpc;)V	<init>	<init>
		p	1		weight
	m	()Lbpc;	a	getWeight
	f	Lbpc;	a	weight
c	bpd$b	net/minecraft/util/random/WeightedEntry$b
	m	(Ljava/lang/Object;Lbpc;)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Lbpc;	a	getWeight
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		dataCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	()Ljava/lang/Object;	b	data
	m	()Lbpc;	c	weight
	f	Ljava/lang/Object;	a	data
	f	Lbpc;	b	weight
c	bpe	net/minecraft/util/random/WeightedRandom2
	m	(Layw;Ljava/util/List;)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
	m	(Layw;Ljava/util/List;I)Ljava/util/Optional;	a	getRandomItem
		p	0		random
		p	1		pool
		p	2		totalWeight
	m	(Ljava/util/List;)I	a	getTotalWeight
		p	0		pool
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getWeightedItem
		p	0		pool
		p	1		totalWeight
c	bpf	net/minecraft/util/random/WeightedRandomList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	(Ljava/util/List;)Lbpf;	a	create
		p	0		entries
	m	([Lbpd;)Lbpf;	a	create
		p	0		entries
	m	(Layw;)Ljava/util/Optional;	b	getRandom
		p	1		random
	m	()Lbpf;	c	create
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	codec
		p	0		entryCodec
	m	()Z	d	isEmpty
	m	()Ljava/util/List;	e	unwrap
	f	I	a	totalWeight
	f	Lcom/google/common/collect/ImmutableList;	b	items
c	bph	net/minecraft/util/thread/IAsyncTaskHandler
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()V	A	waitForTasks
	m	()Z	B	pollTask
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	submitAsync
		p	1		runnable
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
		p	1		task
	m	()Z	ay	scheduleExecutables
	m	()Ljava/lang/Thread;	az	getRunningThread
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	b	lambda$submitAsync$0
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
		p	1		stopCondition
	m	()V	bA	dropAllTasks
	m	()V	bB	runAllTasks
	m	()Ljava/util/List;	bw	profiledMetrics
	m	()Z	bx	isSameThread
	m	()I	by	getPendingTasksCount
	m	()Ljava/lang/String;	bz	name
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
		p	1		task
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
		p	1		runnable
	m	(Ljava/lang/Runnable;)V	i	tell
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
c	bpi	bpi
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
		p	1		thread
		p	2		throwable
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
c	bpj	net/minecraft/util/thread/Mailbox
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lbpj;	a	of
		p	0		name
		p	1		action
	m	(Ljava/util/concurrent/CompletableFuture;Lcom/mojang/datafixers/util/Either;)V	a	lambda$askEither$0
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	ask
		p	1		messageProvider
	m	()Ljava/lang/String;	bz	name
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	askEither
		p	1		messageProvider
c	bpj$1	net/minecraft/util/thread/Mailbox$1
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	()Ljava/lang/String;	bz	name
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/function/Consumer;	b	val$tell
c	bpk	net/minecraft/util/thread/ThreadedMailbox
	m	(Lbpm;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
		p	1		queue
		p	2		executor
		p	3		name
	m	()V	a	runAll
	m	(I)Z	a	lambda$runAll$1
		p	0		runCount
	m	(Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I	a	pollUntil
		p	1		condition
	m	(Ljava/lang/Object;)V	a	tell
		p	1		message
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lbpk;	a	create
		p	0		executor
		p	1		name
	m	()I	b	size
	m	(I)Z	b	lambda$run$0
		p	0		runCount
	m	()Ljava/util/List;	bw	profiledMetrics
	m	()Ljava/lang/String;	bz	name
	m	()Z	c	hasWork
	m	()Z	d	setAsScheduled
	m	()V	e	setAsIdle
	m	()Z	f	canBeScheduled
	m	()Z	g	shouldProcess
	m	()Z	h	pollTask
	m	()V	i	registerForExecution
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	CLOSED_BIT
	f	I	c	SCHEDULED_BIT
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	status
	f	Lbpm;	e	queue
	f	Ljava/util/concurrent/Executor;	f	dispatcher
	f	Ljava/lang/String;	g	name
c	bpl	net/minecraft/util/thread/IAsyncTaskHandlerReentrant
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Z	ay	scheduleExecutables
	m	()Z	bC	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	f	I	b	reentrantCount
c	bpm	net/minecraft/util/thread/PairedQueue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
c	bpm$a	net/minecraft/util/thread/PairedQueue$a
	m	(I)V	<init>	<init>
		p	1		priorityCount
	m	()Ljava/lang/Object;	a	pop
	m	(Lbpm$b;)Z	a	push
		p	1		message
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	m	()Ljava/lang/Runnable;	d	pop
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
c	bpm$b	net/minecraft/util/thread/PairedQueue$b
	m	(ILjava/lang/Runnable;)V	<init>	<init>
		p	1		priority
		p	2		runnable
	m	()I	a	getPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
c	bpm$c	net/minecraft/util/thread/PairedQueue$c
	m	(Ljava/util/Queue;)V	<init>	<init>
		p	1		queue
	m	()Ljava/lang/Object;	a	pop
	m	(Ljava/lang/Object;)Z	a	push
		p	1		message
	m	()Z	b	isEmpty
	m	()I	c	size
	f	Ljava/util/Queue;	a	queue
c	bpo	net/minecraft/util/valueproviders/BiasedToBottomInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbpo;	a	of
		p	0		min
		p	1		max
	m	(Layw;)I	a	sample
		p	1		random
	m	(Lbpo;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbpo;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbpx;	c	getType
	m	(Lbpo;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbpo;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bpp	net/minecraft/util/valueproviders/ClampedInt
	m	(Lbpw;II)V	<init>	<init>
		p	1		source
		p	2		min
		p	3		max
	m	()I	a	getMinValue
	m	(Layw;)I	a	sample
		p	1		random
	m	(Lbpp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		provider
	m	(Lbpw;II)Lbpp;	a	of
		p	0		source
		p	1		min
		p	2		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbpp;)Ljava/lang/String;	b	lambda$static$4
	m	()Lbpx;	c	getType
	m	(Lbpp;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		provider
	m	(Lbpp;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		provider
	m	(Lbpp;)Lbpw;	e	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
c	bpq	net/minecraft/util/valueproviders/ClampedNormalFloat
	m	(FFFF)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()F	a	getMinValue
	m	(FFFF)Lbpq;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Layw;)F	a	sample
		p	1		random
	m	(Layw;FFFF)F	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbpq;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbpq;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbpv;	c	getType
	m	(Lbpq;)Ljava/lang/Float;	c	lambda$static$3
		p	0		provider
	m	(Lbpq;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbpq;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbpq;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
c	bpr	net/minecraft/util/valueproviders/ClampedNormalInt
	m	(FFII)V	<init>	<init>
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	()I	a	getMinValue
	m	(FFII)Lbpr;	a	of
		p	0		mean
		p	1		deviation
		p	2		min
		p	3		max
	m	(Layw;)I	a	sample
		p	1		random
	m	(Layw;FFFF)I	a	sample
		p	0		random
		p	1		mean
		p	2		deviation
		p	3		min
		p	4		max
	m	(Lbpr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbpr;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbpx;	c	getType
	m	(Lbpr;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		provider
	m	(Lbpr;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		provider
	m	(Lbpr;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbpr;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	minInclusive
	f	I	h	maxInclusive
c	bps	net/minecraft/util/valueproviders/ConstantFloat
	m	(F)V	<init>	<init>
		p	1		value
	m	()F	a	getMinValue
	m	(F)Lbps;	a	of
		p	0		value
	m	(Layw;)F	a	sample
		p	1		random
	m	()F	b	getMaxValue
	m	()Lbpv;	c	getType
	m	()F	d	getValue
	f	Lbps;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	F	d	value
c	bpt	net/minecraft/util/valueproviders/ConstantInt
	m	(I)V	<init>	<init>
		p	1		value
	m	()I	a	getMinValue
	m	(I)Lbpt;	a	of
		p	0		value
	m	(Layw;)I	a	sample
		p	1		random
	m	()I	b	getMaxValue
	m	()Lbpx;	c	getType
	m	()I	d	getValue
	f	Lbpt;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	f	value
c	bpu	net/minecraft/util/valueproviders/FloatProvider
	m	()F	a	getMinValue
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
		p	0		min
		p	1		max
	m	(FFLbpu;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
		p	2		provider
	m	(FLbpu;)Ljava/lang/String;	a	lambda$codec$4
	m	(Lbpu;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbpu;	a	lambda$static$1
		p	0		either
	m	()F	b	getMaxValue
	m	(FLbpu;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbpu;)Lbpu;	b	lambda$static$0
		p	0		provider
	m	()Lbpv;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	bpv	net/minecraft/util/valueproviders/FloatProviderType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbpv;	a	register
		p	0		id
		p	1		codec
	f	Lbpv;	a	CONSTANT
	f	Lbpv;	b	UNIFORM
	f	Lbpv;	c	CLAMPED_NORMAL
	f	Lbpv;	d	TRAPEZOID
c	bpw	net/minecraft/util/valueproviders/IntProvider
	m	()I	a	getMinValue
	m	(IILbpw;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	validateCodec
		p	0		min
		p	1		max
		p	2		providerCodec
	m	(ILbpw;)Ljava/lang/String;	a	lambda$validate$5
	m	(Layw;)I	a	sample
		p	1		random
	m	(Lbpw;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lcom/mojang/datafixers/util/Either;)Lbpw;	a	lambda$static$1
		p	0		either
	m	()I	b	getMaxValue
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
		p	0		min
		p	1		max
	m	(IILbpw;)Lcom/mojang/serialization/DataResult;	b	lambda$validateCodec$3
		p	2		provider
	m	(ILbpw;)Ljava/lang/String;	b	lambda$validate$4
	m	(Lbpw;)Lbpw;	b	lambda$static$0
		p	0		provider
	m	()Lbpx;	c	getType
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
c	bpx	net/minecraft/util/valueproviders/IntProviderType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbpx;	a	register
		p	0		id
	f	Lbpx;	a	CONSTANT
	f	Lbpx;	b	UNIFORM
	f	Lbpx;	c	BIASED_TO_BOTTOM
	f	Lbpx;	d	CLAMPED
	f	Lbpx;	e	WEIGHTED_LIST
	f	Lbpx;	f	CLAMPED_NORMAL
c	bpy	bpy
	m	([Lbpz;)V	<init>	<init>
		p	1		multipliers
	m	(Layw;)F	a	sample
		p	1		random
	f	[Lbpz;	a	values
c	bpz	net/minecraft/util/valueproviders/SampledFloat
	m	(Layw;)F	a	sample
		p	1		random
c	bqa	net/minecraft/util/valueproviders/TrapezoidFloat
	m	(FFF)V	<init>	<init>
		p	1		min
		p	2		max
		p	3		plateau
	m	()F	a	getMinValue
	m	(FFF)Lbqa;	a	of
		p	0		min
		p	1		max
		p	2		plateau
	m	(Layw;)F	a	sample
		p	1		random
	m	(Lbqa;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	()F	b	getMaxValue
	m	(Lbqa;)Ljava/lang/String;	b	lambda$static$5
	m	()Lbpv;	c	getType
	m	(Lbqa;)Ljava/lang/String;	c	lambda$static$4
	m	(Lbqa;)Ljava/lang/Float;	d	lambda$static$2
		p	0		provider
	m	(Lbqa;)Ljava/lang/Float;	e	lambda$static$1
		p	0		provider
	m	(Lbqa;)Ljava/lang/Float;	f	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
c	bqb	net/minecraft/util/valueproviders/UniformFloat
	m	(FF)V	<init>	<init>
		p	1		min
		p	2		max
	m	()F	a	getMinValue
	m	(Layw;)F	a	sample
		p	1		random
	m	(Lbqb;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()F	b	getMaxValue
	m	(FF)Lbqb;	b	of
		p	0		min
		p	1		max
	m	(Lbqb;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbpv;	c	getType
	m	(Lbqb;)Ljava/lang/Float;	c	lambda$static$1
		p	0		provider
	m	(Lbqb;)Ljava/lang/Float;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
c	bqc	net/minecraft/util/valueproviders/UniformInt
	m	(II)V	<init>	<init>
		p	1		min
		p	2		max
	m	()I	a	getMinValue
	m	(II)Lbqc;	a	of
		p	0		min
		p	1		max
	m	(Layw;)I	a	sample
		p	1		random
	m	(Lbqc;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	()I	b	getMaxValue
	m	(Lbqc;)Ljava/lang/String;	b	lambda$static$3
	m	()Lbpx;	c	getType
	m	(Lbqc;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		provider
	m	(Lbqc;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
c	bqd	net/minecraft/util/valueproviders/WeightedListInt
	m	(Lbpb;)V	<init>	<init>
		p	1		weightedList
	m	()I	a	getMinValue
	m	(Layw;)I	a	sample
		p	1		random
	m	(Lbqd;)Lbpb;	a	lambda$static$0
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	()I	b	getMaxValue
	m	()Lbpx;	c	getType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpb;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
c	bqf	net/minecraft/util/worldupdate/WorldUpgrader
	m	(Lerf$c;Lcom/mojang/datafixers/DataFixer;Lka;ZZ)V	<init>	<init>
		p	1		session
		p	2		dataFixer
		p	3		dynamicRegistryManager
		p	4		eraseCache
		p	5		recreateRegionFiles
	m	()V	a	cancel
	m	(Lakq;)F	a	dimensionProgress
		p	1		world
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
		p	1		thread
		p	2		throwable
	m	(Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	resolveRecreateDirectory
		p	0		current
	m	()Z	b	isFinished
	m	()Ljava/util/Set;	c	levels
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Lwz;	h	getStatus
	m	()V	i	work
	f	Leqz;	A	overworldDataStorage
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Ljava/lang/String;	c	NEW_DIRECTORY_PREFIX
	f	Lxn;	d	STATUS_UPGRADING_POI
	f	Lxn;	e	STATUS_FINISHED_POI
	f	Lxn;	f	STATUS_UPGRADING_ENTITIES
	f	Lxn;	g	STATUS_FINISHED_ENTITIES
	f	Lxn;	h	STATUS_UPGRADING_CHUNKS
	f	Lxn;	i	STATUS_FINISHED_CHUNKS
	f	Ljz;	j	dimensions
	f	Ljava/util/Set;	k	levels
	f	Z	l	eraseCache
	f	Z	m	recreateRegionFiles
	f	Lerf$c;	n	levelStorage
	f	Ljava/lang/Thread;	o	thread
	f	Lcom/mojang/datafixers/DataFixer;	p	dataFixer
	f	Z	q	running
	f	Z	r	finished
	f	F	s	progress
	f	I	t	totalChunks
	f	I	u	totalFiles
	f	I	v	converted
	f	I	w	skipped
	f	Lit/unimi/dsi/fastutil/objects/Reference2FloatMap;	x	progressMap
	f	Lwz;	y	status
	f	Ljava/util/regex/Pattern;	z	REGEX
c	bqf$a	net/minecraft/util/worldupdate/WorldUpgrader$a
	m	(Lbqf;Lazw;Ljava/lang/String;Ljava/lang/String;Lxn;Lxn;)V	<init>	<init>
		p	2		dataFixTypes
		p	3		name
		p	4		targetName
		p	5		upgradingText
		p	6		finishedText
	m	()V	a	upgrade
	m	(Lakq;Ljava/lang/AutoCloseable;Ldcd;)Z	a	processOnePosition
		p	1		worldKey
		p	2		storage
		p	3		chunkPos
	m	(Lbqf$e;)I	a	lambda$getFilesToProcess$0
		p	0		region
	m	(Ldwp;)V	a	onFileFinished
		p	1		regionFile
	m	(Ldws;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
		p	1		key
		p	2		worldDirectory
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPositions$1
		p	0		file
		p	1		name
	m	(Ljava/lang/AutoCloseable;Ldcd;Lakq;)Z	a	tryProcessOnePosition
		p	1		storage
		p	2		chunkPos
		p	3		worldKey
	m	()Ljava/util/List;	b	getDimensionsToUpgrade
	m	(Ldws;Ljava/nio/file/Path;)Ljava/util/ListIterator;	b	getFilesToProcess
		p	1		key
		p	2		regionDirectory
	m	(Ldws;Ljava/nio/file/Path;)Ljava/util/List;	c	getAllChunkPositions
		p	0		key
		p	1		regionDirectory
	f	Ljava/util/concurrent/CompletableFuture;	a	previousWriteFuture
	f	Lazw;	b	dataFixType
	f	Lbqf;	c	this$0
	f	Lxn;	d	upgradingStatus
	f	Lxn;	e	finishedStatus
	f	Ljava/lang/String;	f	type
	f	Ljava/lang/String;	g	folderName
c	bqf$b	net/minecraft/util/worldupdate/WorldUpgrader$b
	m	(Lbqf;)V	<init>	<init>
		p	1		dataFixTypes
	m	(Ldwj;Ldcd;Lakq;)Z	a	tryProcessOnePosition
		p	1		storage
		p	2		chunkPos
		p	3		worldKey
	m	(Ldws;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
		p	1		key
		p	2		worldDirectory
	m	(Ljava/lang/AutoCloseable;Ldcd;Lakq;)Z	a	tryProcessOnePosition
		p	1		storage
		p	2		chunkPos
		p	3		worldKey
	m	()Leqz;	b	lambda$tryProcessOnePosition$0
	m	(Ldws;Ljava/nio/file/Path;)Ldwj;	b	createStorage
	f	Lbqf;	d	this$0
c	bqf$c	net/minecraft/util/worldupdate/WorldUpgrader$c
	m	()Lakq;	a	dimensionKey
	m	()Ljava/lang/Object;	b	storage
	m	()Ljava/util/ListIterator;	c	files
	f	Lakq;	a	dimensionKey
	f	Ljava/lang/Object;	b	storage
	f	Ljava/util/ListIterator;	c	files
c	bqf$d	net/minecraft/util/worldupdate/WorldUpgrader$d
	m	(Lbqf;)V	<init>	<init>
		p	1		dataFixTypes
	m	(Ldwu;Lub;)Lub;	a	upgradeTag
		p	1		storage
		p	2		nbt
c	bqf$e	net/minecraft/util/worldupdate/WorldUpgrader$e
	m	()Ldwp;	a	file
	m	()Ljava/util/List;	b	chunksToUpgrade
	f	Ldwp;	a	file
	f	Ljava/util/List;	b	chunksToUpgrade
c	bqf$f	net/minecraft/util/worldupdate/WorldUpgrader$f
	m	(Lbqf;)V	<init>	<init>
		p	1		dataFixTypes
	m	(Ldwu;Lub;)Lub;	a	upgradeTag
		p	1		storage
		p	2		nbt
c	bqf$g	net/minecraft/util/worldupdate/WorldUpgrader$g
	m	(Lbqf;Lazw;Ljava/lang/String;Lxn;Lxn;)V	<init>	<init>
		p	2		dataFixTypes
		p	3		targetName
		p	4		upgradingText
		p	5		finishedText
	m	(Ldws;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
		p	1		key
		p	2		worldDirectory
	m	(Ldwu;Ldcd;Lakq;)Z	a	tryProcessOnePosition
		p	1		storage
		p	2		chunkPos
		p	3		worldKey
	m	(Ldwu;Lub;)Lub;	a	upgradeTag
		p	1		storage
		p	2		nbt
	m	(Ljava/lang/AutoCloseable;Ldcd;Lakq;)Z	a	tryProcessOnePosition
		p	1		storage
		p	2		chunkPos
		p	3		worldKey
	m	(Ldws;Ljava/nio/file/Path;)Ldwu;	b	createStorage
	f	Lbqf;	d	this$0
c	bqh	net/minecraft/world/BossBattle
	m	(Ljava/util/UUID;Lwz;Lbqh$a;Lbqh$b;)V	<init>	<init>
		p	1		uuid
		p	2		name
		p	3		color
		p	4		style
	m	(F)V	a	setProgress
		p	1		percent
	m	(Lbqh$a;)V	a	setColor
		p	1		color
	m	(Lbqh$b;)V	a	setOverlay
		p	1		style
	m	(Lwz;)V	a	setName
		p	1		name
	m	(Z)Lbqh;	a	setDarkenScreen
		p	1		darkenSky
	m	(Z)Lbqh;	b	setPlayBossMusic
		p	1		dragonMusic
	m	(Z)Lbqh;	c	setCreateWorldFog
		p	1		thickenFog
	m	()Ljava/util/UUID;	h	getId
	m	()Lwz;	i	getName
	m	()F	j	getProgress
	m	()Lbqh$a;	k	getColor
	m	()Lbqh$b;	l	getOverlay
	m	()Z	m	shouldDarkenScreen
	m	()Z	n	shouldPlayBossMusic
	m	()Z	o	shouldCreateWorldFog
	f	Lwz;	a	name
	f	F	b	progress
	f	Lbqh$a;	c	color
	f	Lbqh$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	f	Ljava/util/UUID;	h	id
c	bqh$a	net/minecraft/world/BossBattle$BarColor
	m	(Ljava/lang/String;ILjava/lang/String;Ln;)V	<init>	<init>
		p	3		name
		p	4		format
	m	()Ln;	a	getFormatting
	m	(Ljava/lang/String;)Lbqh$a;	a	byName
		p	0		name
	m	()Ljava/lang/String;	b	getName
	m	()[Lbqh$a;	c	$values
	f	Lbqh$a;	a	PINK
	f	Lbqh$a;	b	BLUE
	f	Lbqh$a;	c	RED
	f	Lbqh$a;	d	GREEN
	f	Lbqh$a;	e	YELLOW
	f	Lbqh$a;	f	PURPLE
	f	Lbqh$a;	g	WHITE
	f	Ljava/lang/String;	h	name
	f	Ln;	i	formatting
	f	[Lbqh$a;	j	$VALUES
c	bqh$b	net/minecraft/world/BossBattle$BarStyle
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lbqh$b;	a	byName
		p	0		name
	m	()[Lbqh$b;	b	$values
	f	Lbqh$b;	a	PROGRESS
	f	Lbqh$b;	b	NOTCHED_6
	f	Lbqh$b;	c	NOTCHED_10
	f	Lbqh$b;	d	NOTCHED_12
	f	Lbqh$b;	e	NOTCHED_20
	f	Ljava/lang/String;	f	name
	f	[Lbqh$b;	g	$VALUES
c	bqi	net/minecraft/world/Clearable
	m	()V	a	clearContent
	m	(Ljava/lang/Object;)V	a_	tryClear
		p	0		o
c	bqj	net/minecraft/world/InventoryLargeChest
	m	(Lbqk;Lbqk;)V	<init>	<init>
		p	1		first
		p	2		second
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbqk;)Z	a	contains
		p	1		inventory
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	()I	al_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	f	Lbqk;	b	container1
	f	Lbqk;	c	container2
c	bqk	net/minecraft/world/IInventory
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbqk;ILcuq;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Ldqh;Lcmx;)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
	m	(Ldqh;Lcmx;F)Z	a	stillValidBlockEntity
		p	0		blockEntity
		p	1		player
		p	2		range
	m	(Ljava/util/Set;)Z	a	hasAnyOf
		p	1		items
	m	(Ljava/util/Set;Lcuq;)Z	a	lambda$hasAnyOf$0
		p	1		stack
	m	(Lcul;)I	a_	countItem
		p	1		item
	m	(Ljava/util/function/Predicate;)Z	a_	hasAnyMatching
		p	1		predicate
	m	()I	al_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	m	()V	e	setChanged
	m	(Lcuq;)I	e_	getMaxStackSize
		p	1		stack
	f	F	p_	DEFAULT_DISTANCE_BUFFER
c	bql	net/minecraft/world/ContainerUtil
	m	(Lbqk;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		inventory
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Lcuq;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
		p	0		stack
		p	1		shouldRemove
		p	2		maxCount
		p	3		dryRun
	m	(Ljava/util/List;I)Lcuq;	a	takeItem
		p	0		stacks
		p	1		slot
	m	(Ljava/util/List;II)Lcuq;	a	removeItem
		p	0		stacks
		p	1		slot
		p	2		amount
	m	(Lub;Ljv;Ljo$a;)Lub;	a	saveAllItems
		p	0		nbt
		p	1		stacks
		p	2		registries
	m	(Lub;Ljv;ZLjo$a;)Lub;	a	saveAllItems
		p	0		nbt
		p	1		stacks
		p	2		setIfEmpty
		p	3		registries
	m	(Lub;Ljv;Ljo$a;)V	b	loadAllItems
		p	0		nbt
		p	1		stacks
		p	2		registries
	f	Ljava/lang/String;	a	TAG_ITEMS
c	bqm	net/minecraft/world/IInventoryListener
	m	(Lbqk;)V	a	containerChanged
		p	1		sender
c	bqn	net/minecraft/world/InventoryUtils
	m	(Ldcw;DDDLbqk;)V	a	dropContents
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		inventory
	m	(Ldcw;DDDLcuq;)V	a	dropItemStack
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		stack
	m	(Ldcw;Lbsr;Lbqk;)V	a	dropContents
		p	0		world
		p	1		entity
		p	2		inventory
	m	(Ldcw;Ljd;Lbqk;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		inventory
	m	(Ldcw;Ljd;Lcuq;)V	a	lambda$dropContents$0
		p	2		stack
	m	(Ldcw;Ljd;Ljv;)V	a	dropContents
		p	0		world
		p	1		pos
		p	2		stacks
	m	(Ldtc;Ldtc;Ldcw;Ljd;)V	a	dropContentsOnDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
c	bqo	net/minecraft/world/EnumDifficulty
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lbqo;	a	byId
		p	0		id
	m	(Ljava/lang/String;)Lbqo;	a	byName
		p	0		name
	m	()Lwz;	b	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lwz;	d	getInfo
	m	()Ljava/lang/String;	e	getKey
	m	()[Lbqo;	f	$values
	f	Lbqo;	a	PEACEFUL
	f	Lbqo;	b	EASY
	f	Lbqo;	c	NORMAL
	f	Lbqo;	d	HARD
	f	Lazk$a;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	key
	f	[Lbqo;	i	$VALUES
c	bqp	net/minecraft/world/DifficultyDamageScaler
	m	(Lbqo;JJF)V	<init>	<init>
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()Lbqo;	a	getDifficulty
	m	(F)Z	a	isHarderThan
		p	1		difficulty
	m	(Lbqo;JJF)F	a	calculateDifficulty
		p	1		difficulty
		p	2		timeOfDay
		p	4		inhabitedTime
		p	6		moonSize
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	()F	d	getSpecialMultiplier
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lbqo;	d	base
	f	F	e	effectiveDifficulty
c	bqq	net/minecraft/world/EnumHand
	m	()[Lbqq;	a	$values
	f	Lbqq;	a	MAIN_HAND
	f	Lbqq;	b	OFF_HAND
	f	[Lbqq;	c	$VALUES
c	bqr	net/minecraft/world/EnumInteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lbqr;	a	sidedSuccess
		p	0		swingHand
	m	()Z	b	shouldSwing
	m	()Z	c	indicateItemUse
	m	()[Lbqr;	d	$values
	f	Lbqr;	a	SUCCESS
	f	Lbqr;	b	SUCCESS_NO_ITEM_USED
	f	Lbqr;	c	CONSUME
	f	Lbqr;	d	CONSUME_PARTIAL
	f	Lbqr;	e	PASS
	f	Lbqr;	f	FAIL
	f	[Lbqr;	g	$VALUES
c	bqs	net/minecraft/world/InteractionResultWrapper
	m	(Lbqr;Ljava/lang/Object;)V	<init>	<init>
		p	1		result
		p	2		value
	m	()Lbqr;	a	getResult
	m	(Ljava/lang/Object;)Lbqs;	a	success
		p	0		data
	m	(Ljava/lang/Object;Z)Lbqs;	a	sidedSuccess
		p	0		data
		p	1		swingHand
	m	()Ljava/lang/Object;	b	getObject
	m	(Ljava/lang/Object;)Lbqs;	b	consume
		p	0		data
	m	(Ljava/lang/Object;)Lbqs;	c	pass
		p	0		data
	m	(Ljava/lang/Object;)Lbqs;	d	fail
		p	0		data
	f	Lbqr;	a	result
	f	Ljava/lang/Object;	b	object
c	bqt	net/minecraft/world/ItemInteractionResult
	m	()Z	a	consumesAction
	m	(Z)Lbqt;	a	sidedSuccess
		p	0		swingHand
	m	()Lbqr;	b	result
	m	()[Lbqt;	c	$values
	f	Lbqt;	a	SUCCESS
	f	Lbqt;	b	CONSUME
	f	Lbqt;	c	CONSUME_PARTIAL
	f	Lbqt;	d	PASS_TO_DEFAULT_BLOCK_INTERACTION
	f	Lbqt;	e	SKIP_DEFAULT_BLOCK_INTERACTION
	f	Lbqt;	f	FAIL
	f	[Lbqt;	g	$VALUES
c	bqu	net/minecraft/world/ChestLock
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		key
	m	()Ljava/lang/String;	a	key
	m	(Lcuq;)Z	a	unlocksWith
		p	1		stack
	m	(Lub;)V	a	addToTag
		p	1		nbt
	m	(Lub;)Lbqu;	b	fromTag
		p	0		nbt
	f	Lbqu;	a	NO_LOCK
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	TAG_LOCK
	f	Ljava/lang/String;	d	key
c	bqv	net/minecraft/world/ITileInventory
	m	()Lwz;	S_	getDisplayName
c	bqw	net/minecraft/world/INamableTileEntity
	m	()Lwz;	S_	getDisplayName
	m	()Lwz;	ah	getName
	m	()Z	ai	hasCustomName
	m	()Lwz;	aj	getCustomName
c	bqx	net/minecraft/world/RandomSequence
	m	(JLakr;)V	<init>	<init>
		p	1		seed
		p	3		id
	m	(JLjava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		id
	m	(Ldzz;)V	<init>	<init>
		p	1		source
	m	()Layw;	a	random
	m	(JLjava/util/Optional;)Ldzz;	a	createSequence
		p	0		seed
		p	2		id
	m	(Lakr;)Ldzn$a;	a	seedForKey
		p	0		id
	m	(Lbqx;)Ldzz;	a	lambda$static$0
		p	0		sequence
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldzz;	b	source
c	bqy	net/minecraft/world/RandomSequences
	m	(J)V	<init>	<init>
		p	1		seed
	m	()I	a	clear
	m	(IZZ)V	a	setSeedDefaults
		p	1		salt
		p	2		includeWorldSeed
		p	3		includeSequenceId
	m	(J)Leql$a;	a	factory
		p	0		seed
	m	(JLub;)Lbqy;	a	load
		p	0		seed
		p	2		nbt
	m	(JLub;Ljo$a;)Lbqy;	a	lambda$factory$1
		p	2		nbt
		p	3		registryLookup
	m	(Lakr;)Layw;	a	get
		p	1		id
	m	(Lakr;IZZ)V	a	reset
		p	1		id
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Ljava/util/function/BiConsumer;)V	a	forAllSequences
		p	1		consumer
	m	(Lub;Lakr;Lbqx;)V	a	lambda$save$2
		p	1		id
		p	2		sequence
	m	(Lub;Ljava/lang/String;Z)Z	a	getBooleanWithDefault
		p	0		nbt
		p	1		key
		p	2		fallback
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	(J)Lbqy;	b	lambda$factory$0
	m	(Lakr;)V	b	reset
		p	1		id
	m	(Lakr;IZZ)Lbqx;	b	createSequence
		p	1		id
		p	2		salt
		p	3		includeWorldSeed
		p	4		includeSequenceId
	m	(Lakr;)Lbqx;	c	createSequence
		p	1		id
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	worldSeed
	f	I	c	salt
	f	Z	d	includeWorldSeed
	f	Z	e	includeSequenceId
	f	Ljava/util/Map;	f	sequences
c	bqy$a	net/minecraft/world/RandomSequences$a
	m	(Lbqy;Layw;)V	<init>	<init>
		p	2		random
	m	(I)I	a	nextInt
		p	1		bound
	m	(J)V	b	setSeed
		p	1		seed
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	Lbqy;	b	this$0
	f	Layw;	c	random
c	bqz	net/minecraft/world/RandomizableContainer
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Lakq;J)V	a	setLootTable
		p	1		lootTableId
		p	2		lootTableSeed
	m	(Ldcc;Layw;Ljd;Lakq;)V	a	setBlockEntityLootTable
		p	0		world
		p	1		random
		p	2		pos
		p	3		lootTableId
	m	()Lakq;	aB_	getLootTable
	m	()J	aC_	getLootTableSeed
	m	()Ljd;	aD_	getBlockPos
	m	(Lub;)Z	b_	tryLoadLootTable
		p	1		nbt
	m	(Lub;)Z	c_	trySaveLootTable
		p	1		nbt
	m	(Lcmx;)V	e_	unpackLootTable
		p	1		player
	m	()Ldcw;	i	getLevel
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
c	bra	net/minecraft/world/InventorySubcontainer
	m	(I)V	<init>	<init>
		p	1		size
	m	([Lcuq;)V	<init>	<init>
		p	1		items
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbqm;)V	a	addListener
		p	1		listener
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
	m	(Lcul;I)Lcuq;	a	removeItemType
		p	1		item
		p	2		count
	m	(Lcuq;Lcuq;)V	a	moveItemsBetweenStacks
		p	1		source
		p	2		target
	m	(Ljo$a;)Luh;	a	createTag
		p	1		registries
	m	(Luh;Ljo$a;)V	a	fromTag
		p	1		list
		p	2		registries
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lbqm;)V	b	removeListener
		p	1		listener
	m	(Lcuq;)Lcuq;	b	addItem
		p	1		stack
	m	()Z	c	isEmpty
	m	(Lcuq;)Z	c	canAddItem
		p	1		stack
	m	(Lcuq;)V	d	moveItemToEmptySlots
		p	1		stack
	m	()V	e	setChanged
	m	(Lcuq;)V	e	moveItemToOccupiedSlotsWithSameType
		p	1		stack
	m	()Ljava/util/List;	f	removeAllItems
	m	(Lcuq;)Z	f	lambda$toString$1
		p	0		stack
	m	()Ljv;	g	getItems
	m	(Lcuq;)Z	g	lambda$removeAllItems$0
		p	0		stack
	f	I	b	size
	f	Ljv;	c	items
	f	Ljava/util/List;	d	listeners
c	brb	net/minecraft/world/TileInventory
	m	(Lcrb;Lwz;)V	<init>	<init>
		p	1		baseFactory
		p	2		name
	m	()Lwz;	S_	getDisplayName
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Lwz;	a	title
	f	Lcrb;	b	menuConstructor
c	brc	net/minecraft/world/TickRateManager
	m	(F)V	a	setTickRate
		p	1		tickRate
	m	(Lbsr;)Z	a	isEntityFrozen
		p	1		entity
	m	(Z)V	a	setFrozen
		p	1		frozen
	m	(I)V	c	setFrozenTicksToRun
		p	1		stepTicks
	m	()F	f	tickrate
	m	()F	g	millisecondsPerTick
	m	()J	h	nanosecondsPerTick
	m	()Z	i	runsNormally
	m	()Z	j	isSteppingForward
	m	()I	k	frozenTicksToRun
	m	()Z	l	isFrozen
	m	()V	m	tick
	f	F	a	MIN_TICKRATE
	f	F	b	tickrate
	f	J	c	nanosecondsPerTick
	f	I	d	frozenTicksToRun
	f	Z	e	runGameElements
	f	Z	f	isFrozen
c	brd	net/minecraft/world/IWorldInventory
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	bre	net/minecraft/world/IInventoryHolder
	m	(Ldtc;Ldcx;Ljd;)Lbrd;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
c	brf	net/minecraft/world/damagesource/CombatEntry
	m	(Lbrk;FLbrp;F)V	<init>	<init>
		p	1		damageSource
	m	()Lbrk;	a	source
	m	()F	b	damage
	m	()Lbrp;	c	fallLocation
	m	()F	d	fallDistance
	f	Lbrk;	a	source
	f	F	b	damage
	f	Lbrp;	c	fallLocation
	f	F	d	fallDistance
c	brg	net/minecraft/world/damagesource/CombatMath
	m	(FF)F	a	getDamageAfterMagicAbsorb
		p	0		damageDealt
		p	1		protection
	m	(Lbtn;FLbrk;FF)F	a	getDamageAfterAbsorb
		p	0		armorWearer
		p	1		damageAmount
		p	2		damageSource
		p	3		armor
		p	4		armorToughness
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
c	brh	net/minecraft/world/damagesource/CombatTracker
	m	(Lbtn;)V	<init>	<init>
		p	1		entity
	m	()Lwz;	a	getDeathMessage
	m	(Lbrf;Lbsr;)Lwz;	a	getFallMessage
		p	1		damageRecord
		p	2		attacker
	m	(Lbrk;)Z	a	shouldEnterCombat
		p	0		damageSource
	m	(Lbrk;F)V	a	recordDamage
		p	1		damageSource
		p	2		damage
	m	(Lbsr;)Lwz;	a	getDisplayName
		p	0		entity
	m	(Lbsr;Lwz;Ljava/lang/String;Ljava/lang/String;)Lwz;	a	getMessageForAssistedFall
		p	1		attacker
		p	2		attackerDisplayName
		p	3		itemDeathTranslationKey
		p	4		deathTranslationKey
	m	()I	b	getCombatDuration
	m	()V	c	recheckStatus
	m	()Lbrf;	d	getMostSignificantFall
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Lxw;	c	INTENTIONAL_GAME_DESIGN_STYLE
	f	Ljava/util/List;	d	entries
	f	Lbtn;	e	mob
	f	I	f	lastDamageTime
	f	I	g	combatStartTime
	f	I	h	combatEndTime
	f	Z	i	inCombat
	f	Z	j	takingDamage
c	bri	net/minecraft/world/damagesource/DamageEffects
	m	(Ljava/lang/String;ILjava/lang/String;Lavo;)V	<init>	<init>
		p	3		id
		p	4		sound
	m	()Lavo;	a	sound
	m	()[Lbri;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbri;	a	HURT
	f	Lbri;	b	THORNS
	f	Lbri;	c	DROWNING
	f	Lbri;	d	BURNING
	f	Lbri;	e	POKING
	f	Lbri;	f	FREEZING
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	id
	f	Lavo;	i	sound
	f	[Lbri;	j	$VALUES
c	brj	net/minecraft/world/damagesource/DamageScaling
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbrj;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbrj;	a	NEVER
	f	Lbrj;	b	WHEN_CAUSED_BY_LIVING_NON_PLAYER
	f	Lbrj;	c	ALWAYS
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbrj;	f	$VALUES
c	brk	net/minecraft/world/damagesource/DamageSource
	m	(Ljm;)V	<init>	<init>
		p	1		type
	m	(Ljm;Lbsr;)V	<init>	<init>
		p	1		type
		p	2		attacker
	m	(Ljm;Lbsr;Lbsr;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
	m	(Ljm;Lbsr;Lbsr;Lexc;)V	<init>	<init>
		p	1		type
		p	2		source
		p	3		attacker
		p	4		position
	m	(Ljm;Lexc;)V	<init>	<init>
		p	1		type
		p	2		position
	m	()F	a	getFoodExhaustion
	m	(Lakq;)Z	a	is
		p	1		typeKey
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Lbtn;)Lwz;	a	getLocalizedDeathMessage
		p	1		killed
	m	()Z	b	isDirect
	m	()Lbsr;	c	getDirectEntity
	m	()Lbsr;	d	getEntity
	m	()Lcuq;	e	getWeaponItem
	m	()Ljava/lang/String;	f	getMsgId
	m	()Z	g	scalesWithDifficulty
	m	()Z	h	isCreativePlayer
	m	()Lexc;	i	getSourcePosition
	m	()Lexc;	j	sourcePositionRaw
	m	()Lbrm;	k	type
	m	()Ljm;	l	typeHolder
	f	Ljm;	a	type
	f	Lbsr;	b	causingEntity
	f	Lbsr;	c	directEntity
	f	Lexc;	d	damageSourcePosition
c	brk$1	net/minecraft/world/damagesource/DamageSource$1
	f	[I	a	$SwitchMap$net$minecraft$world$damagesource$DamageScaling
c	brl	net/minecraft/world/damagesource/DamageSources
	m	(Lka;)V	<init>	<init>
		p	1		registryManager
	m	()Lbrk;	a	inFire
	m	(Lakq;)Lbrk;	a	source
		p	1		key
	m	(Lakq;Lbsr;)Lbrk;	a	source
		p	1		key
		p	2		attacker
	m	(Lakq;Lbsr;Lbsr;)Lbrk;	a	source
		p	1		key
		p	2		source
		p	3		attacker
	m	(Lbsr;)Lbrk;	a	fallingBlock
		p	1		attacker
	m	(Lbsr;Lbsr;)Lbrk;	a	trident
		p	1		source
		p	2		attacker
	m	(Lbsr;Lbtn;)Lbrk;	a	mobProjectile
		p	1		source
		p	2		attacker
	m	(Lbtn;)Lbrk;	a	sting
		p	1		attacker
	m	(Lcmx;)Lbrk;	a	playerAttack
		p	1		attacker
	m	(Lcnd;Lbsr;)Lbrk;	a	arrow
		p	1		source
		p	2		attacker
	m	(Lcnj;Lbsr;)Lbrk;	a	fireball
		p	1		source
		p	2		attacker
	m	(Lcnk;Lbsr;)Lbrk;	a	fireworks
		p	1		source
		p	2		attacker
	m	(Lcod;Lbsr;)Lbrk;	a	witherSkull
		p	1		source
		p	2		attacker
	m	(Ldco;)Lbrk;	a	explosion
		p	1		explosion
	m	(Lexc;)Lbrk;	a	badRespawnPointExplosion
		p	1		position
	m	()Lbrk;	b	campfire
	m	(Lbsr;)Lbrk;	b	anvil
		p	1		attacker
	m	(Lbsr;Lbsr;)Lbrk;	b	thrown
		p	1		source
		p	2		attacker
	m	(Lbsr;Lbtn;)Lbrk;	b	spit
		p	1		source
		p	2		attacker
	m	(Lbtn;)Lbrk;	b	mobAttack
		p	1		attacker
	m	()Lbrk;	c	lightningBolt
	m	(Lbsr;)Lbrk;	c	fallingStalactite
		p	1		attacker
	m	(Lbsr;Lbsr;)Lbrk;	c	indirectMagic
		p	1		source
		p	2		attacker
	m	(Lbsr;Lbtn;)Lbrk;	c	windCharge
		p	1		source
		p	2		attacker
	m	(Lbtn;)Lbrk;	c	noAggroMobAttack
		p	1		attacker
	m	()Lbrk;	d	onFire
	m	(Lbsr;)Lbrk;	d	thorns
		p	1		attacker
	m	(Lbsr;Lbsr;)Lbrk;	d	explosion
		p	1		source
		p	2		attacker
	m	()Lbrk;	e	lava
	m	(Lbsr;)Lbrk;	e	sonicBoom
		p	1		attacker
	m	()Lbrk;	f	hotFloor
	m	()Lbrk;	g	inWall
	m	()Lbrk;	h	cramming
	m	()Lbrk;	i	drown
	m	()Lbrk;	j	starve
	m	()Lbrk;	k	cactus
	m	()Lbrk;	l	fall
	m	()Lbrk;	m	flyIntoWall
	m	()Lbrk;	n	fellOutOfWorld
	m	()Lbrk;	o	generic
	m	()Lbrk;	p	magic
	m	()Lbrk;	q	wither
	m	()Lbrk;	r	dragonBreath
	m	()Lbrk;	s	dryOut
	m	()Lbrk;	t	sweetBerryBush
	m	()Lbrk;	u	freeze
	m	()Lbrk;	v	stalagmite
	m	()Lbrk;	w	outOfBorder
	m	()Lbrk;	x	genericKill
	f	Ljz;	a	damageTypes
	f	Lbrk;	b	inFire
	f	Lbrk;	c	campfire
	f	Lbrk;	d	lightningBolt
	f	Lbrk;	e	onFire
	f	Lbrk;	f	lava
	f	Lbrk;	g	hotFloor
	f	Lbrk;	h	inWall
	f	Lbrk;	i	cramming
	f	Lbrk;	j	drown
	f	Lbrk;	k	starve
	f	Lbrk;	l	cactus
	f	Lbrk;	m	fall
	f	Lbrk;	n	flyIntoWall
	f	Lbrk;	o	fellOutOfWorld
	f	Lbrk;	p	generic
	f	Lbrk;	q	magic
	f	Lbrk;	r	wither
	f	Lbrk;	s	dragonBreath
	f	Lbrk;	t	dryOut
	f	Lbrk;	u	sweetBerryBush
	f	Lbrk;	v	freeze
	f	Lbrk;	w	stalagmite
	f	Lbrk;	x	outsideBorder
	f	Lbrk;	y	genericKill
c	brm	net/minecraft/world/damagesource/DamageType
	m	(Ljava/lang/String;F)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
	m	(Ljava/lang/String;FLbri;)V	<init>	<init>
		p	1		msgId
		p	2		exhaustion
		p	3		effects
	m	(Ljava/lang/String;Lbrj;F)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
	m	(Ljava/lang/String;Lbrj;FLbri;)V	<init>	<init>
		p	1		msgId
		p	2		scaling
		p	3		exhaustion
		p	4		effects
	m	()Ljava/lang/String;	a	msgId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbrj;	b	scaling
	m	()F	c	exhaustion
	m	()Lbri;	d	effects
	m	()Lbro;	e	deathMessageType
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/lang/String;	d	msgId
	f	Lbrj;	e	scaling
	f	F	f	exhaustion
	f	Lbri;	g	effects
	f	Lbro;	h	deathMessageType
c	brn	net/minecraft/world/damagesource/DamageTypes
	m	(Lqq;)V	a	bootstrap
		p	0		damageTypeRegisterable
	f	Lakq;	A	MOB_ATTACK
	f	Lakq;	B	MOB_ATTACK_NO_AGGRO
	f	Lakq;	C	PLAYER_ATTACK
	f	Lakq;	D	ARROW
	f	Lakq;	E	TRIDENT
	f	Lakq;	F	MOB_PROJECTILE
	f	Lakq;	G	SPIT
	f	Lakq;	H	WIND_CHARGE
	f	Lakq;	I	FIREWORKS
	f	Lakq;	J	FIREBALL
	f	Lakq;	K	UNATTRIBUTED_FIREBALL
	f	Lakq;	L	WITHER_SKULL
	f	Lakq;	M	THROWN
	f	Lakq;	N	INDIRECT_MAGIC
	f	Lakq;	O	THORNS
	f	Lakq;	P	EXPLOSION
	f	Lakq;	Q	PLAYER_EXPLOSION
	f	Lakq;	R	SONIC_BOOM
	f	Lakq;	S	BAD_RESPAWN_POINT
	f	Lakq;	T	OUTSIDE_BORDER
	f	Lakq;	U	GENERIC_KILL
	f	Lakq;	a	IN_FIRE
	f	Lakq;	b	CAMPFIRE
	f	Lakq;	c	LIGHTNING_BOLT
	f	Lakq;	d	ON_FIRE
	f	Lakq;	e	LAVA
	f	Lakq;	f	HOT_FLOOR
	f	Lakq;	g	IN_WALL
	f	Lakq;	h	CRAMMING
	f	Lakq;	i	DROWN
	f	Lakq;	j	STARVE
	f	Lakq;	k	CACTUS
	f	Lakq;	l	FALL
	f	Lakq;	m	FLY_INTO_WALL
	f	Lakq;	n	FELL_OUT_OF_WORLD
	f	Lakq;	o	GENERIC
	f	Lakq;	p	MAGIC
	f	Lakq;	q	WITHER
	f	Lakq;	r	DRAGON_BREATH
	f	Lakq;	s	DRY_OUT
	f	Lakq;	t	SWEET_BERRY_BUSH
	f	Lakq;	u	FREEZE
	f	Lakq;	v	STALAGMITE
	f	Lakq;	w	FALLING_BLOCK
	f	Lakq;	x	FALLING_ANVIL
	f	Lakq;	y	FALLING_STALACTITE
	f	Lakq;	z	STING
c	bro	net/minecraft/world/damagesource/DeathMessageType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lbro;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbro;	a	DEFAULT
	f	Lbro;	b	FALL_VARIANTS
	f	Lbro;	c	INTENTIONAL_GAME_DESIGN
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbro;	f	$VALUES
c	brp	net/minecraft/world/damagesource/FallLocation
	m	()Ljava/lang/String;	a	languageKey
	m	(Lbtn;)Lbrp;	a	getCurrentFallLocation
		p	0		entity
	m	(Ldtc;)Lbrp;	a	blockToFallLocation
		p	0		state
	m	()Ljava/lang/String;	b	id
	f	Lbrp;	a	GENERIC
	f	Lbrp;	b	LADDER
	f	Lbrp;	c	VINES
	f	Lbrp;	d	WEEPING_VINES
	f	Lbrp;	e	TWISTING_VINES
	f	Lbrp;	f	SCAFFOLDING
	f	Lbrp;	g	OTHER_CLIMBABLE
	f	Lbrp;	h	WATER
	f	Ljava/lang/String;	i	id
c	brr	net/minecraft/world/effect/AbsorptionMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbtn;I)V	b	onEffectStarted
		p	1		entity
		p	2		amplifier
c	brs	net/minecraft/world/effect/BadOmenMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	brt	net/minecraft/world/effect/HealOrHarmMobEffect
	m	(Lbry;IZ)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		damage
	m	(Lbsr;Lbsr;Lbtn;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	f	Z	c	isHarm
c	bru	net/minecraft/world/effect/HungerMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	brv	net/minecraft/world/effect/InfestedMobEffect
	m	(Lbry;IFLjava/util/function/ToIntFunction;)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		silverfishChance
		p	4		silverfishCountFunction
	m	(Lbtn;ILbrk;F)V	a	onMobHurt
		p	1		entity
		p	2		amplifier
		p	3		source
		p	4		amount
	m	(Ldcw;Lbtn;DDD)V	a	spawnSilverfish
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
	f	F	c	chanceToSpawn
	f	Ljava/util/function/ToIntFunction;	d	spawnedCount
c	brw	net/minecraft/world/effect/InstantMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	()Z	a	isInstantenous
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
c	brx	net/minecraft/world/effect/MobEffectList
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbry;ILlk;)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		particleEffect
	m	()Z	a	isInstantenous
	m	(I)Lbrx;	a	setBlendDuration
		p	1		fadeTicks
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(ILbrz;)Llk;	a	lambda$new$0
		p	1		effect
	m	(ILjava/util/function/BiConsumer;)V	a	createModifiers
		p	1		amplifier
		p	2		consumer
	m	(Lavo;)Lbrx;	a	withSoundOnAdded
		p	1		sound
	m	(Lbrz;)Llk;	a	createParticleOptions
		p	1		effect
	m	(Lbsr;Lbsr;Lbtn;ID)V	a	applyInstantenousEffect
		p	1		source
		p	2		attacker
		p	3		target
		p	4		amplifier
		p	5		proximity
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
	m	(Lbtn;ILbrk;F)V	a	onMobHurt
		p	1		entity
		p	2		amplifier
		p	3		source
		p	4		amount
	m	(Lbtn;ILbsr$c;)V	a	onMobRemoved
		p	1		entity
		p	2		amplifier
		p	3		reason
	m	(Lbtn;Lavo;)V	a	lambda$onEffectAdded$2
		p	1		sound
	m	(Lbut;)V	a	removeAttributeModifiers
		p	1		attributeContainer
	m	(Lbut;I)V	a	addAttributeModifiers
		p	1		attributeContainer
		p	2		amplifier
	m	(Ljava/util/function/BiConsumer;ILjm;Lbrx$a;)V	a	lambda$createModifiers$3
		p	2		attribute
		p	3		attributeModifierCreator
	m	(Ljm;Lakr;DLbuu$a;)Lbrx;	a	addAttributeModifier
		p	1		attribute
		p	2		id
		p	3		amount
		p	5		operation
	m	(Llk;Lbrz;)Llk;	a	lambda$new$1
		p	1		effect
	m	([Lcpj;)Lbrx;	a	requiredFeatures
		p	1		requiredFeatures
	m	()I	b	getBlendDurationTicks
	m	(Lbtn;I)V	b	onEffectStarted
		p	1		entity
		p	2		amplifier
	m	()Ljava/lang/String;	c	getOrCreateDescriptionId
	m	(Lbtn;I)V	c	onEffectAdded
		p	1		entity
		p	2		amplifier
	m	()Ljava/lang/String;	d	getDescriptionId
	m	()Lwz;	e	getDisplayName
	m	()Lbry;	f	getCategory
	m	()I	g	getColor
	m	()Z	h	isBeneficial
	m	()Lcpl;	i	requiredFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	AMBIENT_ALPHA
	f	Ljava/util/Map;	d	attributeModifiers
	f	Lbry;	e	category
	f	I	f	color
	f	Ljava/util/function/Function;	g	particleFactory
	f	Ljava/lang/String;	h	descriptionId
	f	I	i	blendDurationTicks
	f	Ljava/util/Optional;	j	soundOnAdded
	f	Lcpl;	k	requiredFeatures
c	brx$a	net/minecraft/world/effect/MobEffectList$a
	m	()Lakr;	a	id
	m	(I)Lbuu;	a	create
		p	1		amplifier
	m	()D	b	amount
	m	()Lbuu$a;	c	operation
	f	Lakr;	a	id
	f	D	b	amount
	f	Lbuu$a;	c	operation
c	bry	net/minecraft/world/effect/MobEffectInfo
	m	(Ljava/lang/String;ILn;)V	<init>	<init>
		p	3		format
	m	()Ln;	a	getTooltipFormatting
	m	()[Lbry;	b	$values
	f	Lbry;	a	BENEFICIAL
	f	Lbry;	b	HARMFUL
	f	Lbry;	c	NEUTRAL
	f	Ln;	d	tooltipFormatting
	f	[Lbry;	e	$VALUES
c	brz	net/minecraft/world/effect/MobEffect
	m	(Lbrz;)V	<init>	<init>
		p	1		instance
	m	(Ljm;)V	<init>	<init>
		p	1		effect
	m	(Ljm;I)V	<init>	<init>
		p	1		effect
		p	2		duration
	m	(Ljm;II)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		amplifier
	m	(Ljm;IIZZ)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		visible
	m	(Ljm;IIZZZ)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
	m	(Ljm;IIZZZLbrz;)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		amplifier
		p	4		ambient
		p	5		showParticles
		p	6		showIcon
		p	7		hiddenEffect
	m	(Ljm;Lbrz$b;)V	<init>	<init>
		p	1		effect
		p	2		parameters
	m	()Llk;	a	getParticleOptions
	m	(I)Z	a	endsWithin
		p	1		duration
	m	(Lbrz;)V	a	setDetailsFrom
		p	1		that
	m	(Lbtn;)V	a	onEffectStarted
		p	1		entity
	m	(Lbtn;F)F	a	getBlendFactor
		p	1		entity
		p	2		tickDelta
	m	(Lbtn;Lbrk;F)V	a	onMobHurt
		p	1		entity
		p	2		source
		p	3		amount
	m	(Lbtn;Lbsr$c;)V	a	onMobRemoved
		p	1		entity
		p	2		reason
	m	(Lbtn;Ljava/lang/Runnable;)Z	a	tick
		p	1		entity
		p	2		overwriteCallback
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I	a	mapDuration
		p	1		mapper
	m	(Ljm;)Z	a	is
		p	1		effect
	m	(Ljm;Lbrz$b;)Lbrz;	a	lambda$new$1
		p	1		parametersx
	m	(Lub;)Lbrz;	a	load
		p	0		nbt
	m	()Z	b	isInfiniteDuration
	m	(I)I	b	lambda$tickDownDuration$2
		p	0		duration
	m	(Lbrz;)Z	b	update
		p	1		that
	m	(Lbtn;)V	b	onEffectAdded
		p	1		entity
	m	()Ljm;	c	getEffect
	m	(Lbrz;)I	c	compareTo
	m	()I	d	getDuration
	m	(Lbrz;)V	d	copyBlendState
		p	1		effect
	m	()I	e	getAmplifier
	m	(Lbrz;)Z	e	isShorterDurationThan
		p	1		effect
	m	()Z	f	isAmbient
	m	()Z	g	isVisible
	m	()Z	h	showIcon
	m	()Ljava/lang/String;	i	getDescriptionId
	m	()Luy;	j	save
	m	()V	k	skipBlending
	m	()Lbrz$b;	l	asDetails
	m	()Z	m	hasRemainingDuration
	m	()I	n	tickDownDuration
	m	()Ljava/lang/String;	o	describeDuration
	f	I	a	INFINITE_DURATION
	f	I	b	MIN_AMPLIFIER
	f	I	c	MAX_AMPLIFIER
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lyx;	e	STREAM_CODEC
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljm;	g	effect
	f	I	h	duration
	f	I	i	amplifier
	f	Z	j	ambient
	f	Z	k	visible
	f	Z	l	showIcon
	f	Lbrz;	m	hiddenEffect
	f	Lbrz$a;	n	blendState
c	brz$a	net/minecraft/world/effect/MobEffect$a
	m	(Lbrz$a;)V	a	copyFrom
		p	1		fading
	m	(Lbrz;)V	a	setImmediate
		p	1		effect
	m	(Lbtn;F)F	a	getFactor
		p	1		entity
		p	2		tickDelta
	m	(Lbrz;)V	b	tick
		p	1		effect
	m	(Lbrz;)F	c	computeTarget
		p	0		effect
	m	(Lbrz;)I	d	getBlendDuration
		p	0		effect
	f	F	a	factor
	f	F	b	factorPreviousFrame
c	brz$b	net/minecraft/world/effect/MobEffect$b
	m	()I	a	amplifier
	m	(IIZZLjava/util/Optional;Ljava/util/Optional;)Lbrz$b;	a	create
		p	0		amplifier
		p	1		duration
		p	2		ambient
		p	3		showParticles
		p	4		showIcon
		p	5		hiddenEffect
	m	(Lbrz$b;)Ljava/util/Optional;	a	lambda$static$0
		p	0		parameters
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$2
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	1		instance
	m	(Lyx;)Lyx;	a	lambda$static$3
		p	0		packetCodec
	m	()I	b	duration
	m	()Z	c	ambient
	m	()Z	d	showParticles
	m	()Z	e	showIcon
	m	()Ljava/util/Optional;	f	hiddenEffect
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	amplifier
	f	I	d	duration
	f	Z	e	ambient
	f	Z	f	showParticles
	f	Z	g	showIcon
	f	Ljava/util/Optional;	h	hiddenEffect
c	bsa	net/minecraft/world/effect/MobEffectUtil
	m	(Laqu;Lbsr;Lexc;DLbrz;I)Ljava/util/List;	a	addEffectToPlayersAround
		p	0		world
		p	1		entity
		p	2		origin
		p	3		range
		p	5		statusEffectInstance
		p	6		duration
	m	(Lbrz;FF)Lwz;	a	formatDuration
		p	0		effect
		p	1		multiplier
		p	2		tickRate
	m	(Lbrz;Lbsr;Laqv;)V	a	lambda$addEffectToPlayersAround$1
		p	2		player
	m	(Lbsr;Lexc;DLjm;Lbrz;ILaqv;)Z	a	lambda$addEffectToPlayersAround$0
		p	7		player
	m	(Lbtn;)Z	a	hasDigSpeed
		p	0		entity
	m	(Lbtn;)I	b	getDigSpeedAmplification
		p	0		entity
	m	(Lbtn;)Z	c	hasWaterBreathing
		p	0		entity
c	bsb	net/minecraft/world/effect/MobEffects
	m	(Layw;)I	a	lambda$static$2
		p	0		random
	m	(Ljava/lang/String;Lbrx;)Ljm;	a	register
		p	0		id
		p	1		statusEffect
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	m	(Layw;)I	b	lambda$static$1
		p	0		random
	m	(Layw;)I	c	lambda$static$0
		p	0		random
	f	Ljm;	A	UNLUCK
	f	Ljm;	B	SLOW_FALLING
	f	Ljm;	C	CONDUIT_POWER
	f	Ljm;	D	DOLPHINS_GRACE
	f	Ljm;	E	BAD_OMEN
	f	Ljm;	F	HERO_OF_THE_VILLAGE
	f	Ljm;	G	DARKNESS
	f	Ljm;	H	TRIAL_OMEN
	f	Ljm;	I	RAID_OMEN
	f	Ljm;	J	WIND_CHARGED
	f	Ljm;	K	WEAVING
	f	Ljm;	L	OOZING
	f	Ljm;	M	INFESTED
	f	I	N	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	f	Ljm;	a	MOVEMENT_SPEED
	f	Ljm;	b	MOVEMENT_SLOWDOWN
	f	Ljm;	c	DIG_SPEED
	f	Ljm;	d	DIG_SLOWDOWN
	f	Ljm;	e	DAMAGE_BOOST
	f	Ljm;	f	HEAL
	f	Ljm;	g	HARM
	f	Ljm;	h	JUMP
	f	Ljm;	i	CONFUSION
	f	Ljm;	j	REGENERATION
	f	Ljm;	k	DAMAGE_RESISTANCE
	f	Ljm;	l	FIRE_RESISTANCE
	f	Ljm;	m	WATER_BREATHING
	f	Ljm;	n	INVISIBILITY
	f	Ljm;	o	BLINDNESS
	f	Ljm;	p	NIGHT_VISION
	f	Ljm;	q	HUNGER
	f	Ljm;	r	WEAKNESS
	f	Ljm;	s	POISON
	f	Ljm;	t	WITHER
	f	Ljm;	u	HEALTH_BOOST
	f	Ljm;	v	ABSORPTION
	f	Ljm;	w	SATURATION
	f	Ljm;	x	GLOWING
	f	Ljm;	y	LEVITATION
	f	Ljm;	z	LUCK
c	bsc	net/minecraft/world/effect/OozingMobEffect
	m	(Lbry;ILjava/util/function/ToIntFunction;)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		slimeCountFunction
	m	(ILbsc$a;I)I	a	numberOfSlimesToSpawn
		p	0		maxEntityCramming
		p	1		slimeCounter
		p	2		potentialSlimes
	m	(Lbtn;ILbsr$c;)V	a	onMobRemoved
		p	1		entity
		p	2		amplifier
		p	3		reason
	m	(Ldcw;DDD)V	a	spawnSlimeOffspring
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	f	I	c	SLIME_SIZE
	f	I	d	RADIUS_TO_CHECK_SLIMES
	f	Ljava/util/function/ToIntFunction;	e	spawnedCount
c	bsc$a	net/minecraft/world/effect/OozingMobEffect$a
	m	(Lbtn;)Lbsc$a;	a	closeTo
		p	0		entity
	m	(Lbtn;I)I	a	lambda$closeTo$1
		p	1		limit
	m	(Lbtn;Lckm;)Z	a	lambda$closeTo$0
		p	1		slime
	m	(I)I	count	count
		p	1		limit
c	bsd	net/minecraft/world/effect/PoisonMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bse	net/minecraft/world/effect/RaidOmenMobEffect
	m	(Lbry;ILlk;)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		particleEffect
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bsf	net/minecraft/world/effect/RegenerationMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bsg	net/minecraft/world/effect/SaturationMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bsh	net/minecraft/world/effect/WeavingMobEffect
	m	(Lbry;ILjava/util/function/ToIntFunction;)V	<init>	<init>
		p	1		category
		p	2		color
		p	3		cobwebChanceFunction
	m	(Lbtn;ILbsr$c;)V	a	onMobRemoved
		p	1		entity
		p	2		amplifier
		p	3		reason
	m	(Ldcw;Layw;Ljd;)V	a	spawnCobwebsRandomlyAround
		p	1		world
		p	2		random
		p	3		pos
	f	Ljava/util/function/ToIntFunction;	c	maxCobwebs
c	bsi	net/minecraft/world/effect/WindChargedMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(Lbtn;ILbsr$c;)V	a	onMobRemoved
		p	1		entity
		p	2		amplifier
		p	3		reason
c	bsj	net/minecraft/world/effect/WitherMobEffect
	m	(Lbry;I)V	<init>	<init>
		p	1		category
		p	2		color
	m	(II)Z	a	shouldApplyEffectTickThisTick
		p	1		duration
		p	2		amplifier
	m	(Lbtn;I)Z	a	applyEffectTick
		p	1		entity
		p	2		amplifier
c	bsl	net/minecraft/world/entity/EntityAgeable
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	ageUp
		p	1		age
		p	2		overGrow
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()Z	ab_	canBreed
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	b_	ageUp
		p	1		age
	m	(I)V	c_	setAge
		p	1		age
	m	(I)I	d_	getSpeedUpSecondsWhenFeeding
		p	0		breedingAge
	m	()I	g	getAge
	m	()V	k	ageBoundaryReached
	m	()V	m_	aiStep
	m	()Z	o_	isBaby
	f	I	b	BABY_START_AGE
	f	I	c	age
	f	Lajw;	cc	DATA_BABY_ID
	f	I	cd	FORCED_AGE_PARTICLE_TICKS
	f	I	d	forcedAge
	f	I	e	forcedAgeTimer
c	bsl$a	net/minecraft/world/entity/EntityAgeable$a
	m	(F)V	<init>	<init>
		p	1		babyChance
	m	(Z)V	<init>	<init>
		p	1		babyAllowed
	m	(ZF)V	<init>	<init>
		p	1		babyAllowed
		p	2		babyChance
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
c	bsm	net/minecraft/world/entity/AnimationState
	m	()V	a	stop
	m	(FF)V	a	updateTime
		p	1		animationProgress
		p	2		speedMultiplier
	m	(I)V	a	start
		p	1		age
	m	(IF)V	a	fastForward
		p	1		seconds
		p	2		speedMultiplier
	m	(Ljava/util/function/Consumer;)V	a	ifStarted
		p	1		consumer
	m	(ZI)V	a	animateWhen
		p	1		running
		p	2		age
	m	()J	b	getAccumulatedTime
	m	(I)V	b	startIfStopped
		p	1		age
	m	()Z	c	isStarted
	f	J	a	STOPPED
	f	J	b	lastTime
	f	J	c	accumulatedTime
c	bsn	net/minecraft/world/entity/EntityAreaEffectCloud
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(F)V	a	setRadius
		p	1		radius
	m	(I)V	a	setDuration
		p	1		duration
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrz;)V	a	addEffect
		p	1		effect
	m	(Lbtn;)V	a	setOwner
		p	1		owner
	m	(Lbua;)Lbsu;	a	getDimensions
		p	1		pose
	m	(Lcwu;)V	a	setPotionContents
		p	1		potionContentsComponent
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$0
		p	1		entry
	m	(Llk;)V	a	setParticle
		p	1		particle
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setWaiting
		p	1		waiting
	m	(F)V	b	setRadiusOnUse
		p	1		radiusOnUse
	m	(I)V	b	setDurationOnUse
		p	1		durationOnUse
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(F)V	c	setRadiusPerTick
		p	1		radiusGrowth
	m	(I)V	c	setWaitTime
		p	1		waitTime
	m	(I)I	d	lambda$tick$1
		p	0		duration
	m	(Ljava/lang/String;)V	d	lambda$readAdditionalSaveData$3
	m	(Ljava/lang/String;)V	e	lambda$readAdditionalSaveData$2
	m	()F	g	getRadius
	m	()Llk;	h	getParticle
	m	()Z	i	isWaiting
	m	()V	i_	refreshDimensions
	m	()I	j	getDuration
	m	()Lepj;	j_	getPistonPushReaction
	m	()F	k	getRadiusOnUse
	m	()V	l	tick
	m	()F	m	getRadiusPerTick
	m	()I	o	getDurationOnUse
	m	()I	p	getWaitTime
	m	()Lbtn;	q	getOwner
	m	()Lbsr;	s	getOwner
	m	()V	t	updateColor
	f	F	b	DEFAULT_WIDTH
	f	F	c	HEIGHT
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	TIME_BETWEEN_APPLICATIONS
	f	Lajw;	f	DATA_RADIUS
	f	Lajw;	g	DATA_WAITING
	f	Lajw;	h	DATA_PARTICLE
	f	F	i	MAX_RADIUS
	f	F	j	MINIMAL_RADIUS
	f	F	k	DEFAULT_RADIUS
	f	Lcwu;	l	potionContents
	f	Ljava/util/Map;	m	victims
	f	I	n	duration
	f	I	o	waitTime
	f	I	p	reapplicationDelay
	f	I	q	durationOnUse
	f	F	r	radiusOnUse
	f	F	s	radiusPerTick
	f	Lbtn;	t	owner
	f	Ljava/util/UUID;	u	ownerUUID
c	bso	net/minecraft/world/entity/Attackable
	m	()Lbtn;	Y_	getLastAttacker
c	bsp	net/minecraft/world/entity/Crackiness
	m	(FFF)V	<init>	<init>
		p	1		lowCrackThreshold
		p	2		mediumCrackThreshold
		p	3		highCrackThreshold
	m	(F)Lbsp$a;	a	byFraction
		p	1		health
	m	(II)Lbsp$a;	a	byDamage
		p	1		currentDamage
		p	2		maxDamage
	m	(Lcuq;)Lbsp$a;	a	byDamage
		p	1		stack
	f	Lbsp;	a	GOLEM
	f	Lbsp;	b	WOLF_ARMOR
	f	F	c	fractionLow
	f	F	d	fractionMedium
	f	F	e	fractionHigh
c	bsp$a	net/minecraft/world/entity/Crackiness$a
	m	()[Lbsp$a;	a	$values
	f	Lbsp$a;	a	NONE
	f	Lbsp$a;	b	LOW
	f	Lbsp$a;	c	MEDIUM
	f	Lbsp$a;	d	HIGH
	f	[Lbsp$a;	e	$VALUES
c	bsq	net/minecraft/world/entity/Display
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()F	A	getShadowRadius
	m	()F	B	getShadowStrength
	m	()F	C	getWidth
	m	()I	D	getGlowColorOverride
	m	()F	E	getHeight
	m	()V	F	updateCulling
	m	()Lbsq$k;	H	createFreshRenderState
	m	()D	P_	lerpTargetZ
	m	()F	Q_	lerpTargetXRot
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(F)F	a	calculateInterpolationProgress
		p	1		delta
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laka;)Lj;	a	createTransformation
		p	0		dataTracker
	m	(Laxd;)V	a	setBrightnessOverride
		p	1		brightness
	m	(Lbsq$a;)V	a	setBillboardConstraints
		p	1		billboardMode
	m	(Lbsq$k;F)Lbsq$k;	a	createInterpolatedRenderState
		p	1		state
		p	2		lerpProgress
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$2
		p	1		pair
	m	(Lj;)V	a	setTransformation
		p	1		transformation
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$5
		p	1		brightness
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	(DDD)V	a_	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	b	setViewRange
		p	1		viewRange
	m	(I)V	b	setTransformationInterpolationDuration
		p	1		interpolationDuration
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	b	lambda$addAdditionalSaveData$4
		p	1		billboard
	m	(F)V	c	setShadowRadius
		p	1		shadowRadius
	m	(I)V	c	setTransformationInterpolationDelay
		p	1		startInterpolation
	m	(Lcom/mojang/datafixers/util/Pair;)V	c	lambda$readAdditionalSaveData$0
		p	1		pair
	m	(Lub;Luy;)V	c	lambda$addAdditionalSaveData$3
		p	1		transformations
	m	()D	c_	lerpTargetX
	m	(I)V	d	setPosRotInterpolationDuration
		p	1		teleportDuration
	m	()D	d_	lerpTargetY
	m	()F	e_	lerpTargetYRot
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	()Lepj;	j_	getPistonPushReaction
	m	()V	l	tick
	m	(I)V	m	setGlowColorOverride
		p	1		glowColorOverride
	m	()Lbsq$k;	p	renderState
	m	()I	q_	getTeamColor
	m	()Z	r_	isIgnoringBlockTriggers
	m	()I	s	getTransformationInterpolationDuration
	m	()I	t	getTransformationInterpolationDelay
	m	()I	v	getPosRotInterpolationDuration
	m	(F)V	v	setShadowStrength
		p	1		shadowStrength
	m	()Lbsq$a;	w	getBillboardConstraints
	m	(F)V	w	setWidth
		p	1		width
	m	()Laxd;	x	getBrightnessOverride
	m	(F)V	x	setHeight
		p	1		height
	m	()I	y	getPackedBrightnessOverride
	m	()F	z	getViewRange
	f	Lajw;	aD	DATA_RIGHT_ROTATION_ID
	f	Lajw;	aE	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	f	Lajw;	aF	DATA_BRIGHTNESS_OVERRIDE_ID
	f	Lajw;	aG	DATA_VIEW_RANGE_ID
	f	Lajw;	aH	DATA_SHADOW_RADIUS_ID
	f	Lajw;	aI	DATA_SHADOW_STRENGTH_ID
	f	Lajw;	aJ	DATA_WIDTH_ID
	f	Lajw;	aK	DATA_HEIGHT_ID
	f	Lajw;	aL	DATA_GLOW_COLOR_OVERRIDE_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	aM	RENDER_STATE_IDS
	f	F	aN	INITIAL_SHADOW_RADIUS
	f	F	aO	INITIAL_SHADOW_STRENGTH
	f	I	aP	NO_GLOW_COLOR_OVERRIDE
	f	J	aQ	interpolationStartClientTick
	f	I	aR	interpolationDuration
	f	F	aS	lastProgress
	f	Lewx;	aT	cullingBoundingBox
	f	Z	aU	updateStartTick
	f	Z	aV	updateInterpolationDuration
	f	Lbsq$k;	aW	renderState
	f	Lbsq$j;	aX	posRotInterpolationTarget
	f	I	b	NO_BRIGHTNESS_OVERRIDE
	f	Ljava/lang/String;	c	TAG_POS_ROT_INTERPOLATION_DURATION
	f	Ljava/lang/String;	d	TAG_TRANSFORMATION_INTERPOLATION_DURATION
	f	Ljava/lang/String;	e	TAG_TRANSFORMATION_START_INTERPOLATION
	f	Ljava/lang/String;	f	TAG_TRANSFORMATION
	f	Ljava/lang/String;	g	TAG_BILLBOARD
	f	Ljava/lang/String;	h	TAG_BRIGHTNESS
	f	Ljava/lang/String;	i	TAG_VIEW_RANGE
	f	Ljava/lang/String;	j	TAG_SHADOW_RADIUS
	f	Ljava/lang/String;	k	TAG_SHADOW_STRENGTH
	f	Ljava/lang/String;	l	TAG_WIDTH
	f	Ljava/lang/String;	m	TAG_HEIGHT
	f	Ljava/lang/String;	n	TAG_GLOW_COLOR_OVERRIDE
	f	Z	o	updateRenderState
	f	Lorg/slf4j/Logger;	p	LOGGER
	f	Lajw;	q	DATA_TRANSFORMATION_INTERPOLATION_START_DELTA_TICKS_ID
	f	Lajw;	r	DATA_TRANSFORMATION_INTERPOLATION_DURATION_ID
	f	Lajw;	s	DATA_POS_ROT_INTERPOLATION_DURATION_ID
	f	Lajw;	t	DATA_TRANSLATION_ID
	f	Lajw;	u	DATA_SCALE_ID
	f	Lajw;	v	DATA_LEFT_ROTATION_ID
c	bsq$a	net/minecraft/world/entity/Display$BillboardConstraints
	m	(Ljava/lang/String;IBLjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()[Lbsq$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbsq$a;	a	FIXED
	f	Lbsq$a;	b	VERTICAL
	f	Lbsq$a;	c	HORIZONTAL
	f	Lbsq$a;	d	CENTER
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	B	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbsq$a;	i	$VALUES
c	bsq$b	net/minecraft/world/entity/Display$BlockDisplay
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ldtc;)V	c	setBlockState
		p	1		state
	m	()Lbsq$b$a;	s	blockRenderState
	m	()Ldtc;	t	getBlockState
	f	Ljava/lang/String;	p	TAG_BLOCK_STATE
	f	Lajw;	q	DATA_BLOCK_STATE_ID
	f	Lbsq$b$a;	r	blockRenderState
c	bsq$b$a	net/minecraft/world/entity/Display$BlockDisplay$a
	m	()Ldtc;	a	blockState
	f	Ldtc;	a	blockState
c	bsq$c	net/minecraft/world/entity/Display$ColorInterpolator
	m	()I	a	previous
	m	()I	b	current
	m	(F)I	get	get
		p	1		delta
	f	I	a	previous
	f	I	b	current
c	bsq$d	net/minecraft/world/entity/Display$FloatInterpolator
	m	(FF)F	a	lambda$constant$0
		p	1		delta
	m	(F)Lbsq$d;	constant	constant
		p	0		value
	m	(F)F	get	get
		p	1		delta
c	bsq$e	net/minecraft/world/entity/Display$GenericInterpolator
	m	(Ljava/lang/Object;F)Ljava/lang/Object;	a	lambda$constant$0
		p	1		delta
	m	(Ljava/lang/Object;)Lbsq$e;	constant	constant
		p	0		value
	m	(F)Ljava/lang/Object;	get	get
		p	1		delta
c	bsq$f	net/minecraft/world/entity/Display$IntInterpolator
	m	(IF)I	a	lambda$constant$0
		p	1		delta
	m	(I)Lbsq$f;	constant	constant
		p	0		value
	m	(F)I	get	get
		p	1		delta
c	bsq$g	net/minecraft/world/entity/Display$ItemDisplay
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$0
		p	1		mode
	m	(Lcun;)V	a	setItemTransform
		p	1		transformationMode
	m	(Lcuq;)V	a	setItemStack
		p	1		stack
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$1
		p	1		nbtx
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbsq$g$a;	s	itemRenderState
	m	()Lcuq;	t	getItemStack
	m	()Lcun;	v	getItemTransform
	f	Ljava/lang/String;	p	TAG_ITEM
	f	Ljava/lang/String;	q	TAG_ITEM_DISPLAY
	f	Lajw;	r	DATA_ITEM_STACK_ID
	f	Lajw;	s	DATA_ITEM_DISPLAY_ID
	f	Lbug;	t	slot
	f	Lbsq$g$a;	u	itemRenderState
c	bsq$g$a	net/minecraft/world/entity/Display$ItemDisplay$a
	m	()Lcuq;	a	itemStack
	m	()Lcun;	b	itemTransform
	f	Lcuq;	a	itemStack
	f	Lcun;	b	itemTransform
c	bsq$h	net/minecraft/world/entity/Display$h
	m	()F	a	previous
	m	()F	b	current
	m	(F)F	get	get
		p	1		delta
	f	F	a	previous
	f	F	b	current
c	bsq$i	net/minecraft/world/entity/Display$i
	m	()I	a	previous
	m	()I	b	current
	m	(F)I	get	get
		p	1		delta
	f	I	a	previous
	f	I	b	current
c	bsq$j	net/minecraft/world/entity/Display$j
	m	(IDDDDD)V	<init>	<init>
		p	1		step
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	10		pitch
	m	(Lbsr;)V	a	applyTargetPosAndRot
		p	1		entity
	m	(Lbsr;)V	b	applyLerpStep
		p	1		entity
	f	I	a	steps
	f	D	b	targetX
	f	D	c	targetY
	f	D	d	targetZ
	f	D	e	targetYRot
	f	D	f	targetXRot
c	bsq$k	net/minecraft/world/entity/Display$k
	m	()Lbsq$e;	a	transformation
	m	()Lbsq$a;	b	billboardConstraints
	m	()I	c	brightnessOverride
	m	()Lbsq$d;	d	shadowRadius
	m	()Lbsq$d;	e	shadowStrength
	m	()I	f	glowColorOverride
	f	Lbsq$e;	a	transformation
	f	Lbsq$a;	b	billboardConstraints
	f	I	c	brightnessOverride
	f	Lbsq$d;	d	shadowRadius
	f	Lbsq$d;	e	shadowStrength
	f	I	f	glowColorOverride
c	bsq$l	net/minecraft/world/entity/Display$TextDisplay
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(B)Lbsq$l$a;	a	getAlign
		p	0		flags
	m	(BLub;Ljava/lang/String;B)B	a	loadFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbsq$l$d;)Lbsq$l$b;	a	cacheDisplay
		p	1		splitter
	m	(Lbsq$l$e;F)Lbsq$l$e;	a	createInterpolatedTextRenderState
		p	1		data
		p	2		lerpProgress
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$0
	m	(ZF)V	a	updateRenderSubState
		p	1		shouldLerp
		p	2		lerpProgress
	m	(BLub;Ljava/lang/String;B)V	b	storeFlag
		p	0		flags
		p	1		nbt
		p	2		nbtKey
		p	3		flag
	m	(I)V	b	setLineWidth
		p	1		lineWidth
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(B)V	c	setTextOpacity
		p	1		textOpacity
	m	(I)V	c	setBackgroundColor
		p	1		background
	m	(Lwz;)V	c	setText
		p	1		text
	m	(B)V	d	setFlags
		p	1		flags
	m	()Lbsq$l$e;	s	textRenderState
	m	()Lwz;	t	getText
	m	()I	v	getLineWidth
	m	()B	w	getTextOpacity
	m	()I	x	getBackgroundColor
	m	()B	y	getFlags
	m	()Lbsq$l$e;	z	createFreshTextRenderState
	f	Ljava/lang/String;	aD	TAG_LINE_WIDTH
	f	Ljava/lang/String;	aE	TAG_TEXT_OPACITY
	f	Ljava/lang/String;	aF	TAG_BACKGROUND_COLOR
	f	Ljava/lang/String;	aG	TAG_SHADOW
	f	Ljava/lang/String;	aH	TAG_SEE_THROUGH
	f	Ljava/lang/String;	aI	TAG_USE_DEFAULT_BACKGROUND
	f	Ljava/lang/String;	aJ	TAG_ALIGNMENT
	f	B	aK	INITIAL_TEXT_OPACITY
	f	Lajw;	aL	DATA_TEXT_ID
	f	Lajw;	aM	DATA_LINE_WIDTH_ID
	f	Lajw;	aN	DATA_BACKGROUND_COLOR_ID
	f	Lajw;	aO	DATA_TEXT_OPACITY_ID
	f	Lajw;	aP	DATA_STYLE_FLAGS_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	aQ	TEXT_RENDER_STATE_IDS
	f	Lbsq$l$b;	aR	clientDisplayCache
	f	Lbsq$l$e;	aS	textRenderState
	f	Ljava/lang/String;	p	TAG_TEXT
	f	B	q	FLAG_SHADOW
	f	B	r	FLAG_SEE_THROUGH
	f	B	s	FLAG_USE_DEFAULT_BACKGROUND
	f	B	t	FLAG_ALIGN_LEFT
	f	B	u	FLAG_ALIGN_RIGHT
	f	I	v	INITIAL_BACKGROUND
c	bsq$l$a	net/minecraft/world/entity/Display$TextDisplay$Align
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lbsq$l$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbsq$l$a;	a	CENTER
	f	Lbsq$l$a;	b	LEFT
	f	Lbsq$l$a;	c	RIGHT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lbsq$l$a;	f	$VALUES
c	bsq$l$b	net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	m	()Ljava/util/List;	a	lines
	m	()I	b	width
	f	Ljava/util/List;	a	lines
	f	I	b	width
c	bsq$l$c	net/minecraft/world/entity/Display$TextDisplay$CachedLine
	m	()Laya;	a	contents
	m	()I	b	width
	f	Laya;	a	contents
	f	I	b	width
c	bsq$l$d	net/minecraft/world/entity/Display$TextDisplay$LineSplitter
	m	(Lwz;I)Lbsq$l$b;	split	split
		p	1		text
		p	2		lineWidth
c	bsq$l$e	net/minecraft/world/entity/Display$TextDisplay$e
	m	()Lwz;	a	text
	m	()I	b	lineWidth
	m	()Lbsq$f;	c	textOpacity
	m	()Lbsq$f;	d	backgroundColor
	m	()B	e	flags
	f	Lwz;	a	text
	f	I	b	lineWidth
	f	Lbsq$f;	c	textOpacity
	f	Lbsq$f;	d	backgroundColor
	f	B	e	flags
c	bsq$m	net/minecraft/world/entity/Display$m
	m	()Lj;	a	previous
	m	(F)Lj;	a	get
	m	()Lj;	b	current
	m	(F)Ljava/lang/Object;	get	get
		p	1		delta
	f	Lj;	a	previous
	f	Lj;	b	current
c	bsr	net/minecraft/world/entity/Entity
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	A	lambda$startRiding$3
		p	0		passenger
	m	()Z	F	isInBubbleColumn
	m	()I	G	getPermissionLevel
	m	()V	H	updateFluidOnEyes
	m	()V	I	teleportPassengers
	m	()Ljava/util/stream/Stream;	J	getIndirectPassengersStream
	m	()Ljava/util/Iterator;	K	lambda$getIndirectPassengers$12
	m	()Ljava/lang/String;	L	lambda$fillCrashReportCategory$9
	m	()V	M	processPortalCooldown
	m	()Z	M_	shouldInformAdmins
	m	()Ljava/lang/String;	N	lambda$fillCrashReportCategory$8
	m	()Ljava/lang/String;	O	lambda$fillCrashReportCategory$7
	m	()Ljava/lang/String;	P	lambda$fillCrashReportCategory$6
	m	()D	P_	lerpTargetZ
	m	()F	Q_	lerpTargetXRot
	m	()Z	R_	isSpectator
	m	()Lwz;	S_	getDisplayName
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDD)V	a	dismountTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(DDDFF)V	a	absMoveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DDF)Lexc;	a	getCollisionHorizontalEscapeVector
		p	0		vehicleWidth
		p	2		passengerWidth
		p	4		passengerYaw
	m	(DFZ)Lexa;	a	pick
		p	1		maxDistance
		p	3		tickDelta
		p	4		includeFluids
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(FF)V	a	setRot
		p	1		yaw
		p	2		pitch
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(FLexc;)V	a	moveRelative
		p	1		speed
		p	2		movementInput
	m	(IDDDDD)V	a	lerpPositionAndRotationStep
		p	1		step
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	10		pitch
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Laqu;DDDLjava/util/Set;FF)Z	a	teleportTo
		p	1		world
		p	2		destX
		p	4		destY
		p	6		destZ
		p	8		flags
		p	9		yaw
		p	10		pitch
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Laqu;Lbtn;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Laqu;Ljd;)Ljd;	a	adjustSpawnLocation
		p	1		world
		p	2		basePos
	m	(Laqv;)Z	a	broadcastToPlayer
		p	1		spectator
	m	(Lavo;)V	a	playSound
		p	1		event
	m	(Lavo;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lawu;)Z	a	isEyeInFluid
		p	1		fluidTag
	m	(Lawu;D)Z	a	updateFluidHeightAndDoFluidPushing
		p	1		tag
		p	2		speed
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lbsr;)V	a	onExplosionHit
		p	1		entity
	m	(Lbsr;D)Z	a	closerThan
		p	1		entity
		p	2		radius
	m	(Lbsr;DD)Z	a	closerThan
		p	1		entity
		p	2		horizontalRadius
		p	4		verticalRadius
	m	(Lbsr;ILbrk;)V	a	awardKillScore
		p	1		entityKilled
		p	2		score
		p	3		damageSource
	m	(Lbsr;Lbsr$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbsr;Lbsr;)Z	a	lambda$removePassenger$5
		p	1		entity
	m	(Lbsr;Lbsr;Lbst;)Lexc;	a	getDefaultPassengerAttachmentPoint
		p	0		vehicle
		p	1		passenger
		p	2		attachments
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbsr;Ldcw;Ljava/util/List;Lewx;)Ljava/util/List;	a	collectColliders
		p	0		entity
		p	1		world
		p	2		regularCollisions
		p	3		movingEntityBoundingBox
	m	(Lbsr;Lexc;Lewx;Ldcw;Ljava/util/List;)Lexc;	a	collideBoundingBox
		p	0		entity
		p	1		movement
		p	2		entityBoundingBox
		p	3		world
		p	4		collisions
	m	(Lbsr;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbsu;)Z	a	fudgePositionAfterSizeChange
		p	1		previous
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lbua;)Lbsu;	a	getDimensions
		p	1		pose
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcmx;Lexc;Lbqq;)Lbqr;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Lcnp;)Lcnq;	a	deflection
		p	1		projectile
	m	(Lcul;)Lexc;	a	getHandHoldingItemAngle
		p	1		item
	m	(Lcuq;F)Lcjh;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Ldco;)Z	a	ignoreExplosion
		p	1		explosion
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Ldcv;)Lcjh;	a	spawnAtLocation
		p	1		item
	m	(Ldcv;I)Lcjh;	a	spawnAtLocation
		p	1		item
		p	2		yOffset
	m	(Ldcw;)V	a	setLevel
		p	1		world
	m	(Ldcw;Ldcw;)Z	a	canChangeDimensions
		p	1		from
		p	2		to
	m	(Ldcw;Ljd;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Ldkv;)F	a	mirror
		p	1		mirror
	m	(Ldlr;Ljd;)V	a	setAsInsidePortal
		p	1		portal
		p	2		pos
	m	(Ldmm;)F	a	rotate
		p	1		rotation
	m	(Ldtc;)V	a	onInsideBlock
		p	1		state
	m	(Ldtc;Ldtc;)V	a	playCombinationStepSounds
		p	1		primaryState
		p	2		secondaryState
	m	(Ldtc;Lexc;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Ldxh;)V	a	setLevelCallback
		p	1		changeListener
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Lewx;)V	a	setBoundingBox
		p	1		boundingBox
	m	(Lewx;Ljava/util/List;FF)[F	a	collectCandidateStepUpHeights
		p	0		collisionBox
		p	1		collisions
		p	3		stepHeight
	m	(Lewx;Ljd;)Z	a	lambda$isInWall$2
		p	2		pos
	m	(Lexc;)Lexc;	a	collide
		p	1		movement
	m	(Lexc;FF)V	a	moveTo
		p	1		pos
		p	2		yaw
		p	3		pitch
	m	(Lexc;Lbts;)Lexc;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Lexc;Lewx;Ljava/util/List;)Lexc;	a	collideWithShapes
		p	0		movement
		p	1		entityBoundingBox
		p	2		collisions
	m	(Leyi;)Z	a	isAlliedTo
		p	1		team
	m	(Lff$a;Lexc;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Ljava/lang/String;)Z	a	addTag
		p	1		tag
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
		p	1		entries
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
		p	1		predicate
	m	(Ljd;)Ldtc;	a	lambda$checkFallDamage$1
	m	(Ljd;FF)V	a	moveTo
		p	1		pos
		p	2		yaw
		p	3		pitch
	m	(Ljd;Ldtc;)Z	a	isColliding
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;ZZLexc;)Z	a	vibrationAndSoundEffectsFromBlock
		p	1		pos
		p	2		state
		p	3		playSound
		p	4		emitEvent
		p	5		movement
	m	(Lji$a;D)D	a	applyPistonMovementRestriction
		p	1		axis
		p	2		offsetFactor
	m	(Lji$a;Ll$a;)Lexc;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Ljm;)V	a	gameEvent
		p	1		event
	m	(Ljm;Lbsr;)V	a	gameEvent
		p	1		event
		p	2		entity
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(Lxw;)Lxw;	a	lambda$getDisplayName$10
		p	1		style
	m	(ZLexc;)V	a	setOnGroundWithMovement
		p	1		onGround
		p	2		movement
	m	([D)Luh;	a	newDoubleList
		p	1		values
	m	([F)Luh;	a	newFloatList
		p	1		values
	m	()Z	aA	isOnPortalCooldown
	m	()V	aB	lavaHurt
	m	()I	aC	getRemainingFireTicks
	m	()V	aD	clearFire
	m	()V	aE	onBelowWorld
	m	()Z	aF	onGround
	m	()V	aG	tryCheckInsideBlocks
	m	()V	aH	playEntityOnFireExtinguishedSound
	m	()V	aI	extinguishFire
	m	()V	aJ	processFlappingMovement
	m	()Ljd;	aK	getOnPosLegacy
	m	()Ljd;	aL	getBlockPosBelowThatAffectsMyMovement
	m	()Ljd;	aM	getOnPos
	m	()F	aN	getBlockJumpFactor
	m	()F	aO	getBlockSpeedFactor
	m	()F	aP	nextStep
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	()Lavo;	aS	getSwimHighSpeedSplashSound
	m	()V	aT	checkInsideBlocks
	m	()V	aU	waterSwimSound
	m	()V	aV	onFlap
	m	()Z	aW	isFlapping
	m	()Z	aX	isSilent
	m	()Z	aY	isNoGravity
	m	()D	aZ	getDefaultGravity
	m	(DDD)V	a_	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(Ljava/util/UUID;)V	a_	setUUID
		p	1		uuid
	m	()V	ad	stopRiding
	m	()Lexc;	ag	getKnownMovement
	m	()Lwz;	ah	getName
	m	()Z	ai	hasCustomName
	m	()Lwz;	aj	getCustomName
	m	()V	ak	unRide
	m	()Laig;	al	getPositionCodec
	m	()Lbsx;	am	getType
	m	()I	an	getId
	m	()Ljava/util/Set;	ao	getTags
	m	()V	ap	kill
	m	()V	aq	discard
	m	()Laka;	ar	getEntityData
	m	()V	as	onClientRemoval
	m	()Lbua;	at	getPose
	m	()Lewx;	au	makeBoundingBox
	m	()V	av	reapplyPosition
	m	()V	aw	baseTick
	m	()V	ax	checkBelowWorld
	m	()V	ay	setPortalCooldown
	m	()I	az	getPortalCooldown
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(D)V	b	setViewScale
		p	0		value
	m	(DD)V	b	turn
		p	1		cursorDeltaX
		p	3		cursorDeltaY
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(FF)V	b	absRotateTo
		p	1		yaw
		p	2		pitch
	m	(IZ)V	b	setSharedFlag
		p	1		index
		p	2		value
	m	(Lawu;)D	b	getFluidHeight
		p	1		fluid
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbsr$c;)V	b	setRemoved
		p	1		reason
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lbua;)V	b	setPose
		p	1		pose
	m	(Lcuq;)Lcjh;	b	spawnAtLocation
		p	1		stack
	m	(Ldtc;)V	b	playMuffledStepSound
		p	1		state
	m	(Lewx;)Z	b	isFree
		p	1		box
	m	(Lexc;FF)Lexc;	b	getInputVector
		p	0		movementInput
		p	1		speed
		p	2		yaw
	m	(Ljava/lang/String;)Z	b	removeTag
		p	1		tag
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lwz;)V	b	setCustomName
		p	1		name
	m	(ZLexc;)V	b	checkSupportingBlock
		p	1		onGround
		p	2		movement
	m	()Z	bA	isPickable
	m	()Z	bB	isPushable
	m	()Z	bC	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bD	getEncodeId
	m	()Z	bE	isAlive
	m	()Z	bF	isInWall
	m	()Z	bG	canBeCollidedWith
	m	()Z	bH	showVehicleHealth
	m	()V	bI	ejectPassengers
	m	()V	bJ	removeVehicle
	m	()Z	bK	couldAcceptPassenger
	m	()F	bL	getPickRadius
	m	()Lexc;	bM	getLookAngle
	m	()Lexb;	bN	getRotationVector
	m	()Lexc;	bO	getForward
	m	()V	bP	handlePortal
	m	()I	bQ	getDimensionChangingDelay
	m	()Z	bR	isOnFire
	m	()Z	bS	isPassenger
	m	()Z	bT	isVehicle
	m	()Z	bU	dismountsUnderwater
	m	()Z	bV	canControlVehicle
	m	()Z	bW	isShiftKeyDown
	m	()Z	bX	isSteppingCarefully
	m	()Z	bY	isSuppressingBounce
	m	()Z	bZ	isDiscrete
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	()D	ba	getGravity
	m	()V	bb	applyGravity
	m	()Lbsr$b;	bc	getMovementEmission
	m	()Z	bd	dampensVibrations
	m	()Z	be	fireImmune
	m	()Z	bf	isInWater
	m	()Z	bg	isInWaterOrRain
	m	()Z	bh	isInWaterRainOrBubble
	m	()Z	bi	isInWaterOrBubble
	m	()Z	bj	isInLiquid
	m	()Z	bk	isUnderWater
	m	()V	bl	updateSwimming
	m	()Z	bm	updateInWaterStateAndDoFluidPushing
	m	()V	bn	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	bo	doWaterSplashEffect
	m	()Ldtc;	bp	getBlockStateOnLegacy
	m	()Ldtc;	bq	getBlockStateOn
	m	()Z	br	canSpawnSprintParticle
	m	()V	bs	spawnSprintParticle
	m	()Z	bt	isInLava
	m	()F	bu	getLightLevelDependentMagicValue
	m	()V	bv	setOldPosAndRot
	m	()V	bw	markHurt
	m	()Lji;	bx	getNearestViewDirection
	m	()Lexc;	by	getEyePosition
	m	()Z	bz	canBeHitByProjectile
	m	(D)D	c	getX
		p	1		widthScale
	m	(DDD)V	c	teleportTo
		p	1		destX
		p	3		destY
		p	5		destZ
	m	(FF)Lexc;	c	calculateViewVector
		p	1		pitch
		p	2		yaw
	m	(Lbrk;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbsr;)Z	c	lambda$countPlayerPassengers$13
		p	0		passenger
	m	(Lbua;)Z	c	hasPose
		p	1		pose
	m	(Ldtc;)Z	c	isStateClimbable
		p	1		state
	m	(Lexc;)V	c	setPos
		p	1		pos
	m	(Ljd;Ldtc;)V	c	walkingStepSound
		p	1		pos
		p	2		state
	m	(Lwz;)Lwz;	c	removeAction
		p	0		textComponent
	m	(Z)V	c	setSharedFlagOnFire
		p	1		onFire
	m	()Ljava/lang/String;	cA	getStringUUID
	m	()Ljava/lang/String;	cB	getScoreboardName
	m	()Z	cC	isPushedByFluid
	m	()D	cD	getViewScale
	m	()Z	cE	isCustomNameVisible
	m	()Z	cF	shouldShowName
	m	()V	cG	fixupDimensions
	m	()Lji;	cH	getDirection
	m	()Lji;	cI	getMotionDirection
	m	()Lxf;	cJ	createHoverEvent
	m	()Lewx;	cK	getBoundingBox
	m	()F	cL	getEyeHeight
	m	()Lexc;	cM	getLeashOffset
	m	()Ldcw;	cN	getCommandSenderWorld
	m	()Lnet/minecraft/server/MinecraftServer;	cO	getServer
	m	()Z	cP	onlyOpCanSetNbt
	m	()Lbtn;	cQ	getControllingPassenger
	m	()Z	cR	hasControllingPassenger
	m	()Ljava/util/List;	cS	getPassengers
	m	()Lbsr;	cT	getFirstPassenger
	m	()Ljava/util/stream/Stream;	cU	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cV	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	cW	getIndirectPassengers
	m	()I	cX	countPlayerPassengers
	m	()Z	cY	hasExactlyOnePlayerPassenger
	m	()Lbsr;	cZ	getRootVehicle
	m	()D	c_	lerpTargetX
	m	()Z	ca	isDescending
	m	()Z	cb	isCrouching
	m	()Z	cc	isSprinting
	m	()Z	cd	isSwimming
	m	()Z	ce	isVisuallySwimming
	m	()Z	cf	isVisuallyCrawling
	m	()Z	cg	hasGlowingTag
	m	()Z	ch	isCurrentlyGlowing
	m	()Z	ci	isInvisible
	m	()Z	cj	isOnRails
	m	()Leyb;	ck	getTeam
	m	()I	cl	getMaxAirSupply
	m	()I	cm	getAirSupply
	m	()I	cn	getTicksFrozen
	m	()F	co	getPercentFrozen
	m	()Z	cp	isFullyFrozen
	m	()I	cq	getTicksRequiredToFreeze
	m	()V	cr	checkSlowFallDistance
	m	()Lwz;	cs	getTypeName
	m	()F	ct	getYHeadRot
	m	()Z	cu	isAttackable
	m	()Z	cv	isInvulnerable
	m	()V	cw	removeAfterChangingDimensions
	m	()I	cx	getMaxFallDistance
	m	()Z	cy	displayFireAnimation
	m	()Ljava/util/UUID;	cz	getUUID
	m	(D)D	d	getRandomX
		p	1		widthScale
	m	(DDD)V	d	teleportRelative
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(F)V	d	igniteForSeconds
		p	1		seconds
	m	(FF)Lexc;	d	calculateUpVector
		p	1		pitch
		p	2		yaw
	m	(Laqv;)V	d	startSeenByPlayer
		p	1		player
	m	(Lbsr;)V	d	lambda$teleportPassengers$11
		p	0		entity
	m	(Lbua;)F	d	getEyeHeight
		p	1		pose
	m	(Lcmx;)Z	d	isInvisibleTo
		p	1		player
	m	(Ldtc;)Z	d	shouldPlayAmethystStepSound
		p	1		state
	m	(Lexc;)Z	d	isHorizontalCollisionMinor
		p	1		adjustedMovement
	m	(Ljd;)Z	d	isSupportedBy
		p	1		pos
	m	(Lub;)Z	d	saveAsPassenger
		p	1		nbt
	m	(Z)V	d	setOnGround
		p	1		onGround
	m	()V	dA	checkDespawn
	m	()Lcuq;	dB	getPickResult
	m	()Z	dC	canFreeze
	m	()Z	dD	isFreezing
	m	()F	dE	getYRot
	m	()F	dF	getVisualRotationYInDegrees
	m	()F	dG	getXRot
	m	()Z	dH	canSprint
	m	()F	dI	maxUpStep
	m	()Z	dJ	isRemoved
	m	()Lbsr$c;	dK	getRemovalReason
	m	()V	dL	unsetRemoved
	m	()Z	dM	shouldBeSaved
	m	()Z	dN	isAlwaysTicking
	m	()Ldcw;	dO	level
	m	()Lbrl;	dP	damageSources
	m	()Lka;	dQ	registryAccess
	m	()Layw;	dR	getRandom
	m	()Lcuq;	dS	getWeaponItem
	m	()D	d_	lerpTargetY
	m	()Z	da	isControlledByLocalInstance
	m	()Z	db	isEffectiveAi
	m	()Lbsr;	dc	getVehicle
	m	()Lbsr;	dd	getControlledVehicle
	m	()Lavq;	de	getSoundSource
	m	()I	df	getFireImmuneTicks
	m	()Let;	dg	createCommandSourceStack
	m	()Z	dh	touchingUnloadedChunk
	m	()D	di	getFluidJumpThreshold
	m	()F	dj	getBbWidth
	m	()F	dk	getBbHeight
	m	()Lbst;	dl	getAttachments
	m	()Lexc;	dm	position
	m	()Lexc;	dn	trackingPosition
	m	()Ljd;	do	blockPosition
	m	()Ldtc;	dp	getInBlockState
	m	()Ldcd;	dq	chunkPosition
	m	()Lexc;	dr	getDeltaMovement
	m	()I	ds	getBlockX
	m	()D	dt	getX
	m	()I	du	getBlockY
	m	()D	dv	getY
	m	()D	dw	getRandomY
	m	()D	dx	getEyeY
	m	()I	dy	getBlockZ
	m	()D	dz	getZ
	m	(D)D	e	getY
		p	1		heightScale
	m	(DDD)V	e	moveTo
		p	1		x
		p	3		y
		p	5		z
	m	(F)Ljd;	e	getOnPos
		p	1		offset
	m	(I)V	e	setId
		p	1		id
	m	(Laqv;)V	e	stopSeenByPlayer
		p	1		player
	m	(Lbsr;)V	e	lambda$startRiding$4
		p	0		player
	m	(Ldtc;)Z	e	lambda$move$0
		p	0		state
	m	(Lexc;)Lexc;	e	limitPistonMovement
		p	1		movement
	m	(Ljd;)Ljd;	e	getPrimaryStepSoundBlockPos
		p	1		pos
	m	(Lub;)Z	e	save
		p	1		nbt
	m	(Z)V	e	setSilent
		p	1		silent
	m	()F	e_	lerpTargetYRot
	m	(D)D	f	getZ
		p	1		widthScale
	m	(DDD)V	f	syncPacketPositionCodec
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	f	playSwimSound
		p	1		volume
	m	(I)V	f	setPortalCooldown
		p	1		portalCooldown
	m	(Lbsr;)F	f	distanceTo
		p	1		entity
	m	(Lexc;)V	f	moveTo
		p	1		pos
	m	(Ljd;)V	f	placePortalTicket
		p	1		pos
	m	(Lub;)Lub;	f	saveWithoutId
		p	1		nbt
	m	(Z)V	f	setNoGravity
		p	1		noGravity
	m	(D)D	g	getRandomZ
		p	1		widthScale
	m	(DDD)Z	g	isFree
		p	1		offsetX
		p	3		offsetY
		p	5		offsetZ
	m	(F)Lexc;	g	getViewVector
		p	1		tickDelta
	m	(I)V	g	igniteForTicks
		p	1		ticks
	m	(Lbsr;)D	g	distanceToSqr
		p	1		entity
	m	(Lexc;)D	g	distanceToSqr
		p	1		vector
	m	(Lub;)V	g	load
		p	1		nbt
	m	(Z)V	g	setShiftKeyDown
		p	1		sneaking
	m	(DDD)V	h	absMoveTo
		p	1		x
		p	3		y
		p	5		z
	m	(F)F	h	getViewXRot
		p	1		tickDelta
	m	(I)V	h	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbsr;)V	h	push
		p	1		entity
	m	(Lexc;)V	h	push
		p	1		velocity
	m	(Z)V	h	setSprinting
		p	1		sprinting
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	(DDD)D	i	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)F	i	getViewYRot
		p	1		tickDelta
	m	(I)Z	i	getSharedFlag
		p	1		index
	m	(Lbsr;)Z	i	canCollideWith
		p	1		other
	m	(Lexc;)V	i	setDeltaMovement
		p	1		velocity
	m	(Z)V	i	setSwimming
		p	1		swimming
	m	()V	i_	refreshDimensions
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	(F)Lexc;	j	getUpVector
		p	1		tickDelta
	m	(I)V	j	setAirSupply
		p	1		air
	m	(Lbsr;)V	j	positionRider
		p	1		passenger
	m	(Lexc;)V	j	addDeltaMovement
		p	1		velocity
	m	(Z)V	j	setGlowingTag
		p	1		glowing
	m	()Lepj;	j_	getPistonPushReaction
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	(F)Lexc;	k	getEyePosition
		p	1		tickDelta
	m	(I)V	k	setTicksFrozen
		p	1		frozenTicks
	m	(Lbsr;)V	k	onPassengerTurned
		p	1		passenger
	m	(Z)V	k	setInvisible
		p	1		invisible
	m	()Z	k_	acceptsSuccess
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lexc;	l	getLightProbePosition
		p	1		tickDelta
	m	(I)Z	l	hasPermissions
		p	1		permissionLevel
	m	(Lbsr;)Lexc;	l	getVehicleAttachmentPoint
		p	1		vehicle
	m	(Z)V	l	onAboveBubbleCol
		p	1		drag
	m	(DDD)V	m	moveTowardsClosestSpace
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lexc;	m	getPosition
		p	1		delta
	m	(Lbsr;)Lexc;	m	getPassengerRidingPosition
		p	1		passenger
	m	(Z)V	m	onInsideBubbleColumn
		p	1		drag
	m	()V	n	resetFallDistance
	m	(DDD)V	n	setDeltaMovement
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	n	animateHurt
		p	1		yaw
	m	(Lbsr;)Z	n	startRiding
		p	1		entity
	m	(Z)V	n	setInvulnerable
		p	1		invulnerable
	m	(DDD)V	o	setPosRaw
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	o	setYHeadRot
		p	1		headYaw
	m	(Lbsr;)Z	o	canRide
		p	1		entity
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
	m	(F)V	p	setYBodyRot
		p	1		bodyYaw
	m	(Lbsr;)V	p	addPassenger
		p	1		passenger
	m	(Z)V	p	setCustomNameVisible
		p	1		visible
	m	(F)Lexc;	q	getLeashOffset
		p	1		tickDelta
	m	(Lbsr;)V	q	removePassenger
		p	1		passenger
	m	(Z)V	q	setIsInPowderSnow
		p	1		inPowderSnow
	m	()I	q_	getTeamColor
	m	(F)F	r	getPreciseBodyRotation
		p	1		delta
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Z	r_	isIgnoringBlockTriggers
	m	(F)Lexc;	s	getRopeHoldPosition
		p	1		delta
	m	(Lbsr;)Z	s	isAlliedTo
		p	1		other
	m	(F)V	t	setYRot
		p	1		yaw
	m	(Lbsr;)Z	t	is
		p	1		entity
	m	()V	u	rideTick
	m	(F)V	u	setXRot
		p	1		pitch
	m	(Lbsr;)Z	u	skipAttackInteraction
		p	1		attacker
	m	()V	v	playAmethystStepSound
	m	(Lbsr;)V	v	copyPosition
		p	1		entity
	m	()Z	w	isInRain
	m	(Lbsr;)V	w	restoreFrom
		p	1		original
	m	()Z	w_	acceptsFailure
	m	(Lbsr;)Z	x	hasPassenger
		p	1		passenger
	m	(Lbsr;)Z	y	isPassengerOfSameVehicle
		p	1		entity
	m	(Lbsr;)Z	z	hasIndirectPassenger
		p	1		passenger
	f	I	A	TOTAL_AIR_SUPPLY
	f	I	B	MAX_ENTITY_TAG_COUNT
	f	F	C	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2
	f	D	D	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5
	f	D	E	DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0
	f	I	F	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	G	FREEZE_HURT_FREQUENCY
	f	I	H	BASE_SAFE_FALL_DISTANCE
	f	Ljava/lang/String;	I	UUID_TAG
	f	Z	J	blocksBuilding
	f	I	K	boardingCooldown
	f	D	L	xo
	f	D	M	yo
	f	D	N	zo
	f	F	O	yRotO
	f	F	P	xRotO
	f	Z	Q	horizontalCollision
	f	Z	R	verticalCollision
	f	Z	S	verticalCollisionBelow
	f	Z	T	minorHorizontalCollision
	f	Z	U	hurtMarked
	f	Lexc;	V	stuckSpeedMultiplier
	f	F	W	DEFAULT_BB_WIDTH
	f	F	X	DEFAULT_BB_HEIGHT
	f	F	Y	walkDistO
	f	F	Z	walkDist
	f	Z	aA	wasInPowderSnow
	f	Z	aB	wasOnFire
	f	Ljava/util/Optional;	aC	mainSupportingBlockPos
	f	F	aD	yRot
	f	F	aE	xRot
	f	Lewx;	aF	bb
	f	Z	aG	onGround
	f	Lbsr$c;	aH	removalReason
	f	F	aI	nextStep
	f	I	aJ	remainingFireTicks
	f	Ljava/util/Set;	aK	fluidOnEyes
	f	I	aL	FLAG_SHIFT_KEY_DOWN
	f	I	aM	FLAG_SPRINTING
	f	I	aN	FLAG_SWIMMING
	f	I	aO	FLAG_INVISIBLE
	f	Lajw;	aP	DATA_AIR_SUPPLY_ID
	f	Lajw;	aQ	DATA_CUSTOM_NAME
	f	Lajw;	aR	DATA_CUSTOM_NAME_VISIBLE
	f	Lajw;	aS	DATA_SILENT
	f	Lajw;	aT	DATA_NO_GRAVITY
	f	Lajw;	aU	DATA_TICKS_FROZEN
	f	Ldxh;	aV	levelCallback
	f	Laig;	aW	packetPositionCodec
	f	I	aX	portalCooldown
	f	Z	aY	invulnerable
	f	Z	aZ	hasGlowingTag
	f	F	aa	moveDist
	f	F	ab	flyDist
	f	F	ac	fallDistance
	f	D	ad	xOld
	f	D	ae	yOld
	f	D	af	zOld
	f	Z	ag	noPhysics
	f	Layw;	ah	random
	f	I	ai	tickCount
	f	Z	aj	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	ak	fluidHeight
	f	Z	al	wasEyeInWater
	f	I	am	invulnerableTime
	f	Z	an	firstTick
	f	Laka;	ao	entityData
	f	Lajw;	ap	DATA_SHARED_FLAGS_ID
	f	I	aq	FLAG_ONFIRE
	f	I	ar	FLAG_GLOWING
	f	I	as	FLAG_FALL_FLYING
	f	Lajw;	at	DATA_POSE
	f	Z	au	noCulling
	f	Z	av	hasImpulse
	f	Lbtz;	aw	portalProcess
	f	Ljava/util/UUID;	ax	uuid
	f	Ljava/lang/String;	ay	stringUUID
	f	Z	az	isInPowderSnow
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	ba	tags
	f	[D	bb	pistonDeltas
	f	J	bc	pistonDeltasGameTime
	f	Lbsu;	bd	dimensions
	f	F	be	eyeHeight
	f	Z	bf	onGroundNoBlocks
	f	F	bg	crystalSoundIntensity
	f	I	bh	lastCrystalSoundPlayTick
	f	Z	bi	hasVisualFire
	f	Ldtc;	bj	inBlockState
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	ENTITY_COUNTER
	f	Lewx;	d	INITIAL_AABB
	f	D	e	WATER_FLOW_SCALE
	f	D	k	LAVA_FAST_FLOW_SCALE
	f	D	l	LAVA_SLOW_FLOW_SCALE
	f	D	m	viewScale
	f	Lbsx;	n	type
	f	I	o	id
	f	Lcom/google/common/collect/ImmutableList;	p	passengers
	f	Lbsr;	q	vehicle
	f	Ldcw;	r	level
	f	Lexc;	s	position
	f	Ljd;	t	blockPosition
	f	Ldcd;	u	chunkPosition
	f	Lexc;	v	deltaMovement
	f	Ljava/lang/String;	w	ID_TAG
	f	Ljava/lang/String;	x	PASSENGERS_TAG
	f	I	y	CONTENTS_SLOT_INDEX
	f	I	z	BOARDING_COOLDOWN
c	bsr$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	bsr$a	net/minecraft/world/entity/Entity$MoveFunction
	m	(Lbsr;DDD)V	accept	accept
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
c	bsr$b	net/minecraft/world/entity/Entity$MovementEmission
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		sounds
		p	4		events
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Lbsr$b;	d	$values
	f	Lbsr$b;	a	NONE
	f	Lbsr$b;	b	SOUNDS
	f	Lbsr$b;	c	EVENTS
	f	Lbsr$b;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Lbsr$b;	g	$VALUES
c	bsr$c	net/minecraft/world/entity/Entity$RemovalReason
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		destroy
		p	4		save
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Lbsr$c;	c	$values
	f	Lbsr$c;	a	KILLED
	f	Lbsr$c;	b	DISCARDED
	f	Lbsr$c;	c	UNLOADED_TO_CHUNK
	f	Lbsr$c;	d	UNLOADED_WITH_PLAYER
	f	Lbsr$c;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Lbsr$c;	h	$VALUES
c	bss	net/minecraft/world/entity/EntityAttachment
	m	(Ljava/lang/String;ILbss$a;)V	<init>	<init>
		p	3		point
	m	()[Lbss;	a	$values
	m	(FF)Ljava/util/List;	a	createFallbackPoints
		p	1		width
		p	2		height
	f	Lbss;	a	PASSENGER
	f	Lbss;	b	VEHICLE
	f	Lbss;	c	NAME_TAG
	f	Lbss;	d	WARDEN_CHEST
	f	Lbss$a;	e	fallback
	f	[Lbss;	f	$VALUES
c	bss$a	net/minecraft/world/entity/EntityAttachment$a
	m	(FF)Ljava/util/List;	a	lambda$static$2
		p	0		width
		p	1		height
	m	(FF)Ljava/util/List;	b	lambda$static$1
		p	0		width
		p	1		height
	m	(FF)Ljava/util/List;	c	lambda$static$0
		p	0		width
		p	1		height
	m	(FF)Ljava/util/List;	create	create
		p	1		width
		p	2		height
	f	Ljava/util/List;	a	ZERO
	f	Lbss$a;	b	AT_FEET
	f	Lbss$a;	c	AT_HEIGHT
	f	Lbss$a;	d	AT_CENTER
c	bst	net/minecraft/world/entity/EntityAttachments
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		points
	m	()Lbst$a;	a	builder
	m	(FF)Lbst;	a	createDefault
		p	0		width
		p	1		height
	m	(FFF)Lbst;	a	scale
		p	1		xScale
		p	2		yScale
		p	3		zScale
	m	(Lbss;IF)Lexc;	a	getNullable
		p	1		type
		p	2		index
		p	3		yaw
	m	(Lexc;F)Lexc;	a	transformPoint
		p	0		point
		p	1		yaw
	m	(Ljava/util/List;FFF)Ljava/util/List;	a	scalePoints
		p	0		points
		p	1		xScale
		p	2		yScale
		p	3		zScale
	m	(Lbss;IF)Lexc;	b	get
		p	1		type
		p	2		index
		p	3		yaw
	m	(Lbss;IF)Lexc;	c	getClamped
		p	1		type
		p	2		index
		p	3		yaw
	f	Ljava/util/Map;	a	attachments
c	bst$a	net/minecraft/world/entity/EntityAttachments$a
	m	(FF)Lbst;	a	build
		p	1		width
		p	2		height
	m	(Lbss;)Ljava/util/List;	a	lambda$attach$0
		p	0		list
	m	(Lbss;FFF)Lbst$a;	a	attach
		p	1		type
		p	2		x
		p	3		y
		p	4		z
	m	(Lbss;Lexc;)Lbst$a;	a	attach
		p	1		type
		p	2		point
	f	Ljava/util/Map;	a	attachments
c	bsu	net/minecraft/world/entity/EntitySize
	m	(FFZ)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		fixed
	m	()F	a	width
	m	(DDD)Lewx;	a	makeBoundingBox
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lbsu;	a	scale
		p	1		ratio
	m	(FF)Lbsu;	a	scale
		p	1		widthRatio
		p	2		heightRatio
	m	(Lbst$a;)Lbsu;	a	withAttachments
		p	1		attachments
	m	(Lexc;)Lewx;	a	makeBoundingBox
		p	1		pos
	m	()F	b	height
	m	(F)Lbsu;	b	withEyeHeight
		p	1		eyeHeight
	m	(FF)Lbsu;	b	scalable
		p	0		width
		p	1		height
	m	()F	c	eyeHeight
	m	(F)F	c	defaultEyeHeight
		p	0		height
	m	(FF)Lbsu;	c	fixed
		p	0		width
		p	1		height
	m	()Lbst;	d	attachments
	m	()Z	e	fixed
	f	F	a	width
	f	F	b	height
	f	F	c	eyeHeight
	f	Lbst;	d	attachments
	f	Z	e	fixed
c	bsv	bsv
	f	B	A	PERMISSION_LEVEL_OWNERS
	f	B	B	ATTACK_BLOCKED
	f	B	C	SHIELD_DISABLED
	f	B	D	FISHING_ROD_REEL_IN
	f	B	E	ARMORSTAND_WOBBLE
	f	B	F	STOP_OFFER_FLOWER
	f	B	G	TALISMAN_ACTIVATE
	f	B	H	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	I	RAVAGER_STUNNED
	f	B	J	TRUSTING_FAILED
	f	B	K	TRUSTING_SUCCEEDED
	f	B	L	VILLAGER_SWEAT
	f	B	M	FOX_EAT
	f	B	N	TELEPORT
	f	B	O	MAINHAND_BREAK
	f	B	P	OFFHAND_BREAK
	f	B	Q	HEAD_BREAK
	f	B	R	CHEST_BREAK
	f	B	S	LEGS_BREAK
	f	B	T	FEET_BREAK
	f	B	U	HONEY_SLIDE
	f	B	V	HONEY_JUMP
	f	B	W	SWAP_HANDS
	f	B	X	CANCEL_SHAKE_WETNESS
	f	B	Y	START_RAM
	f	B	Z	END_RAM
	f	B	a	JUMP
	f	B	aa	POOF
	f	B	ab	TENDRILS_SHIVER
	f	B	ac	SONIC_CHARGE
	f	B	ad	SNIFFER_DIGGING_SOUND
	f	B	ae	ARMADILLO_PEEK
	f	B	af	BODY_BREAK
	f	B	b	DEATH
	f	B	c	START_ATTACKING
	f	B	d	STOP_ATTACKING
	f	B	e	TAMING_FAILED
	f	B	f	TAMING_SUCCEEDED
	f	B	g	SHAKE_WETNESS
	f	B	h	USE_ITEM_COMPLETE
	f	B	i	EAT_GRASS
	f	B	j	OFFER_FLOWER
	f	B	k	LOVE_HEARTS
	f	B	l	VILLAGER_ANGRY
	f	B	m	VILLAGER_HAPPY
	f	B	n	WITCH_HAT_MAGIC
	f	B	o	ZOMBIE_CONVERTING
	f	B	p	FIREWORKS_EXPLODE
	f	B	q	IN_LOVE_HEARTS
	f	B	r	SQUID_ANIM_SYNCH
	f	B	s	SILVERFISH_MERGE_ANIM
	f	B	t	GUARDIAN_ATTACK_SOUND
	f	B	u	REDUCED_DEBUG_INFO
	f	B	v	FULL_DEBUG_INFO
	f	B	w	PERMISSION_LEVEL_ALL
	f	B	x	PERMISSION_LEVEL_MODERATORS
	f	B	y	PERMISSION_LEVEL_GAMEMASTERS
	f	B	z	PERMISSION_LEVEL_ADMINS
c	bsw	net/minecraft/world/entity/IEntitySelector
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
		p	0		x
		p	2		y
		p	4		z
		p	6		max
	m	(DDDDLbsr;)Z	a	lambda$withinDistance$5
		p	8		entity
	m	(Lbsr;)Ljava/util/function/Predicate;	a	pushableBy
		p	0		entity
	m	(Lbsr;Lbsr;)Z	a	lambda$notRiding$7
		p	1		testedEntity
	m	(Lbsr;Leyi;Leyi$a;Lbsr;)Z	a	lambda$pushableBy$6
		p	3		entityx
	m	(Lbsr;)Ljava/util/function/Predicate;	b	notRiding
		p	0		entity
	m	(Lbsr;)Z	c	lambda$static$4
		p	0		entity
	m	(Lbsr;)Z	d	lambda$static$3
		p	0		entity
	m	(Lbsr;)Z	e	lambda$static$2
		p	0		entity
	m	(Lbsr;)Z	f	lambda$static$1
		p	0		entity
	m	(Lbsr;)Z	g	lambda$static$0
		p	0		entity
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
c	bsw$a	net/minecraft/world/entity/IEntitySelector$EntitySelectorEquipable
	m	(Lcuq;)V	<init>	<init>
		p	1		stack
	m	(Lbsr;)Z	a	test
	f	Lcuq;	a	itemStack
c	bsx	net/minecraft/world/entity/EntityTypes
	m	(Lbsx$b;Lbtq;ZZZZLcom/google/common/collect/ImmutableSet;Lbsu;FIILcpl;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
		p	3		saveable
		p	4		summonable
		p	5		fireImmune
		p	6		spawnableFarFromPlayer
		p	7		canSpawnInside
		p	8		dimensions
		p	9		spawnBoxScale
		p	10		maxTrackDistance
		p	11		trackTickInterval
		p	12		requiredFeatures
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(DDD)Lewx;	a	getSpawnAABB
		p	1		x
		p	3		y
		p	5		z
	m	(Laqu;Lcmx;Lcxh;Lbsr;)V	a	lambda$appendCustomEntityStackConfig$3
		p	3		entity
	m	(Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;	a	createDefaultStackConfig
		p	0		world
		p	1		stack
		p	2		player
	m	(Laqu;Lcuq;Lcmx;Ljd;Lbtr;ZZ)Lbsr;	a	spawn
		p	1		world
		p	2		stack
		p	3		player
		p	4		pos
		p	5		spawnReason
		p	6		alignPosition
		p	7		invertY
	m	(Laqu;Ljava/util/function/Consumer;Ljd;Lbtr;ZZ)Lbsr;	a	spawn
		p	1		world
		p	2		afterConsumer
		p	3		pos
		p	4		reason
		p	5		alignPosition
		p	6		invertY
	m	(Laqu;Ljd;Lbtr;)Lbsr;	a	spawn
		p	1		world
		p	2		pos
		p	3		reason
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Lbsr;)Lbsr;	a	tryCast
		p	1		obj
	m	(Lbsx;)Lakr;	a	getKey
		p	0		type
	m	(Ldcw;)Lbsr;	a	create
		p	1		world
	m	(Ldcw;Lbsx;)Lbsr;	a	lambda$create$4
		p	1		entityType
	m	(Ldcw;Lcmx;Lbsr;Lcxh;)V	a	updateCustomEntityTag
		p	0		world
		p	1		player
		p	2		entity
		p	3		nbt
	m	(Ldcz;Ljd;ZLewx;)D	a	getYOffset
		p	0		world
		p	1		pos
		p	2		invertY
		p	3		boundingBox
	m	(Ldtc;)Z	a	isBlockDangerous
		p	1		state
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
		p	0		id
	m	(Ljava/lang/String;Lbsx$a;)Lbsx;	a	register
		p	0		id
		p	1		type
	m	(Ljava/util/List;Ldcw;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
		p	0		entityNbtList
		p	1		world
	m	(Ljava/util/function/Consumer;Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;	a	appendDefaultStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Ljava/util/function/Consumer;Lcuq;)Ljava/util/function/Consumer;	a	appendCustomNameConfig
		p	0		chained
		p	1		stack
	m	(Ljq;)Z	a	is
		p	1		entityTypeEntryList
	m	(Lub;)Ljava/util/Optional;	a	by
		p	0		nbt
	m	(Lub;Lbsr;)V	a	lambda$create$5
		p	1		entity
	m	(Lub;Ldcw;)Ljava/util/Optional;	a	create
		p	0		nbt
		p	1		world
	m	(Lub;Ldcw;Ljava/util/function/Function;)Lbsr;	a	loadEntityRecursive
		p	0		nbt
		p	1		world
		p	2		entityProcessor
	m	(Lub;Ldcw;Ljava/util/function/Function;Lbsr;)Lbsr;	a	lambda$loadEntityRecursive$7
		p	3		entity
	m	(Lwz;Lbsr;)V	a	lambda$appendCustomNameConfig$2
		p	1		entity
	m	()Z	b	canSerialize
	m	(Laqu;Ljava/util/function/Consumer;Ljd;Lbtr;ZZ)Lbsr;	b	create
		p	1		world
		p	2		afterConsumer
		p	3		pos
		p	4		reason
		p	5		alignPosition
		p	6		invertY
	m	(Lbsr;)V	b	lambda$createDefaultStackConfig$1
		p	0		entity
	m	(Ljava/util/function/Consumer;Laqu;Lcuq;Lcmx;)Ljava/util/function/Consumer;	b	appendCustomEntityStackConfig
		p	0		chained
		p	1		world
		p	2		stack
		p	3		player
	m	(Lub;)V	b	lambda$create$6
	m	(Lub;Ldcw;)Ljava/util/Optional;	b	loadStaticEntity
		p	0		nbt
		p	1		world
	m	()Z	c	canSummon
	m	(Lbsr;)V	c	lambda$spawn$0
		p	0		entity
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Lbtq;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Lwz;	h	getDescription
	m	()Lcpl;	i	requiredFeatures
	m	()Ljava/lang/String;	j	toShortString
	m	()Lakq;	k	getDefaultLootTable
	m	()F	l	getWidth
	m	()F	m	getHeight
	m	()Lbsu;	n	getDimensions
	m	()I	o	clientTrackingRange
	m	()I	p	updateInterval
	m	()Z	q	trackDeltas
	m	()Ljm$c;	r	builtInRegistryHolder
	f	Lbsx;	A	DRAGON_FIREBALL
	f	Lbsx;	B	DROWNED
	f	Lbsx;	C	EGG
	f	Lbsx;	D	ELDER_GUARDIAN
	f	Lbsx;	E	END_CRYSTAL
	f	Lbsx;	F	ENDER_DRAGON
	f	Lbsx;	G	ENDER_PEARL
	f	Lbsx;	H	ENDERMAN
	f	Lbsx;	I	ENDERMITE
	f	Lbsx;	J	EVOKER
	f	Lbsx;	K	EVOKER_FANGS
	f	Lbsx;	L	EXPERIENCE_BOTTLE
	f	Lbsx;	M	EXPERIENCE_ORB
	f	Lbsx;	N	EYE_OF_ENDER
	f	Lbsx;	O	FALLING_BLOCK
	f	Lbsx;	P	FIREWORK_ROCKET
	f	Lbsx;	Q	FOX
	f	Lbsx;	R	FROG
	f	Lbsx;	S	FURNACE_MINECART
	f	Lbsx;	T	GHAST
	f	Lbsx;	U	GIANT
	f	Lbsx;	V	GLOW_ITEM_FRAME
	f	Lbsx;	W	GLOW_SQUID
	f	Lbsx;	X	GOAT
	f	Lbsx;	Y	GUARDIAN
	f	Lbsx;	Z	HOGLIN
	f	Lbsx;	aA	PIGLIN
	f	Lbsx;	aB	PIGLIN_BRUTE
	f	Lbsx;	aC	PILLAGER
	f	Lbsx;	aD	POLAR_BEAR
	f	Lbsx;	aE	POTION
	f	Lbsx;	aF	PUFFERFISH
	f	Lbsx;	aG	RABBIT
	f	Lbsx;	aH	RAVAGER
	f	Lbsx;	aI	SALMON
	f	Lbsx;	aJ	SHEEP
	f	Lbsx;	aK	SHULKER
	f	Lbsx;	aL	SHULKER_BULLET
	f	Lbsx;	a	ALLAY
	f	Lbsx;	aM	SILVERFISH
	f	Lbsx;	aN	SKELETON
	f	Lbsx;	aO	SKELETON_HORSE
	f	Lbsx;	aP	SLIME
	f	Lbsx;	aQ	SMALL_FIREBALL
	f	Lbsx;	aR	SNIFFER
	f	Lbsx;	aS	SNOW_GOLEM
	f	Lbsx;	aT	SNOWBALL
	f	Lbsx;	aU	SPAWNER_MINECART
	f	Lbsx;	aV	SPECTRAL_ARROW
	f	Lbsx;	aW	SPIDER
	f	Lbsx;	aX	SQUID
	f	Lbsx;	aY	STRAY
	f	Lbsx;	aZ	STRIDER
	f	Lbsx;	aa	HOPPER_MINECART
	f	Lbsx;	ab	HORSE
	f	Lbsx;	ac	HUSK
	f	Lbsx;	ad	ILLUSIONER
	f	Lbsx;	ae	INTERACTION
	f	Lbsx;	af	IRON_GOLEM
	f	Lbsx;	ag	ITEM
	f	Lbsx;	ah	ITEM_DISPLAY
	f	Lbsx;	ai	ITEM_FRAME
	f	Lbsx;	aj	OMINOUS_ITEM_SPAWNER
	f	Lbsx;	ak	FIREBALL
	f	Lbsx;	al	LEASH_KNOT
	f	Lbsx;	am	LIGHTNING_BOLT
	f	Lbsx;	an	LLAMA
	f	Lbsx;	ao	LLAMA_SPIT
	f	Lbsx;	ap	MAGMA_CUBE
	f	Lbsx;	aq	MARKER
	f	Lbsx;	ar	MINECART
	f	Lbsx;	as	MOOSHROOM
	f	Lbsx;	at	MULE
	f	Lbsx;	au	OCELOT
	f	Lbsx;	av	PAINTING
	f	Lbsx;	aw	PANDA
	f	Lbsx;	ax	PARROT
	f	Lbsx;	ay	PHANTOM
	f	Lbsx;	az	PIG
	f	Lorg/slf4j/Logger;	bB	LOGGER
	f	Ljm$c;	bC	builtInRegistryHolder
	f	F	bD	MAGIC_HORSE_WIDTH
	f	I	bE	DISPLAY_TRACKING_RANGE
	f	Lbsx$b;	bF	factory
	f	Lbtq;	bG	category
	f	Lcom/google/common/collect/ImmutableSet;	bH	immuneTo
	f	Z	bI	serialize
	f	Z	bJ	summon
	f	Z	bK	fireImmune
	f	Z	bL	canSpawnFarFromPlayer
	f	Lbsx;	b	AREA_EFFECT_CLOUD
	f	I	bM	clientTrackingRange
	f	I	bN	updateInterval
	f	Ljava/lang/String;	bO	descriptionId
	f	Lwz;	bP	description
	f	Lakq;	bQ	lootTable
	f	Lbsu;	bR	dimensions
	f	F	bS	spawnDimensionsScale
	f	Lcpl;	bT	requiredFeatures
	f	Lbsx;	ba	TADPOLE
	f	Lbsx;	bb	TEXT_DISPLAY
	f	Lbsx;	bc	TNT
	f	Lbsx;	bd	TNT_MINECART
	f	Lbsx;	be	TRADER_LLAMA
	f	Lbsx;	bf	TRIDENT
	f	Lbsx;	bg	TROPICAL_FISH
	f	Lbsx;	bh	TURTLE
	f	Lbsx;	bi	VEX
	f	Lbsx;	bj	VILLAGER
	f	Lbsx;	bk	VINDICATOR
	f	Lbsx;	bl	WANDERING_TRADER
	f	Lbsx;	bm	WARDEN
	f	Lbsx;	bn	WIND_CHARGE
	f	Lbsx;	bo	WITCH
	f	Lbsx;	bp	WITHER
	f	Lbsx;	bq	WITHER_SKELETON
	f	Lbsx;	br	WITHER_SKULL
	f	Lbsx;	bs	WOLF
	f	Lbsx;	bt	ZOGLIN
	f	Lbsx;	bu	ZOMBIE
	f	Lbsx;	bv	ZOMBIE_HORSE
	f	Lbsx;	bw	ZOMBIE_VILLAGER
	f	Lbsx;	bx	ZOMBIFIED_PIGLIN
	f	Lbsx;	by	PLAYER
	f	Lbsx;	bz	FISHING_BOBBER
	f	Lbsx;	c	ARMADILLO
	f	Lbsx;	d	ARMOR_STAND
	f	Lbsx;	e	ARROW
	f	Lbsx;	f	AXOLOTL
	f	Lbsx;	g	BAT
	f	Lbsx;	h	BEE
	f	Lbsx;	i	BLAZE
	f	Lbsx;	j	BLOCK_DISPLAY
	f	Lbsx;	k	BOAT
	f	Lbsx;	l	BOGGED
	f	Lbsx;	m	BREEZE
	f	Lbsx;	n	BREEZE_WIND_CHARGE
	f	Lbsx;	o	CAMEL
	f	Lbsx;	p	CAT
	f	Lbsx;	q	CAVE_SPIDER
	f	Lbsx;	r	CHEST_BOAT
	f	Lbsx;	s	CHEST_MINECART
	f	Lbsx;	t	CHICKEN
	f	Lbsx;	u	COD
	f	Lbsx;	v	COMMAND_BLOCK_MINECART
	f	Lbsx;	w	COW
	f	Lbsx;	x	CREEPER
	f	Lbsx;	y	DOLPHIN
	f	Lbsx;	z	DONKEY
c	bsx$1	net/minecraft/world/entity/EntityTypes$1
	m	(Ldcw;Ljava/util/function/Consumer;Luy;)V	a	lambda$tryAdvance$1
		p	2		nbt
	m	(Ljava/util/function/Consumer;Lbsr;)Lbsr;	a	lambda$tryAdvance$0
		p	1		entity
	f	Ljava/util/Spliterator;	a	val$tagSpliterator
	f	Ldcw;	b	val$level
	f	Ljava/util/List;	c	val$entities
c	bsx$a	net/minecraft/world/entity/EntityTypes$Builder
	m	(Lbsx$b;Lbtq;)V	<init>	<init>
		p	1		factory
		p	2		spawnGroup
	m	()Lbsx$a;	a	noSummon
	m	(F)Lbsx$a;	a	spawnDimensionsScale
		p	1		spawnBoxScale
	m	(FF)Lbsx$a;	a	sized
		p	1		width
		p	2		height
	m	(I)Lbsx$a;	a	clientTrackingRange
		p	1		maxTrackingRange
	m	(Lbss;FFF)Lbsx$a;	a	attach
		p	1		type
		p	2		offsetX
		p	3		offsetY
		p	4		offsetZ
	m	(Lbss;Lexc;)Lbsx$a;	a	attach
		p	1		type
		p	2		offset
	m	(Lbsx$b;Lbtq;)Lbsx$a;	a	of
		p	0		factory
		p	1		spawnGroup
	m	(Lbsx;Ldcw;)Lbsr;	a	lambda$createNothing$0
		p	0		type
		p	1		world
	m	(Lbtq;)Lbsx$a;	a	createNothing
		p	0		spawnGroup
	m	(Lexc;)Lbsx$a;	a	vehicleAttachment
		p	1		vehicleAttachment
	m	(Ljava/lang/String;)Lbsx;	a	build
		p	1		id
	m	([F)Lbsx$a;	a	passengerAttachments
		p	1		offsetYs
	m	([Lcpj;)Lbsx$a;	a	requiredFeatures
		p	1		features
	m	([Ldfy;)Lbsx$a;	a	immuneTo
		p	1		blocks
	m	([Lexc;)Lbsx$a;	a	passengerAttachments
		p	1		passengerAttachments
	m	()Lbsx$a;	b	noSave
	m	(F)Lbsx$a;	b	eyeHeight
		p	1		eyeHeight
	m	(I)Lbsx$a;	b	updateInterval
		p	1		trackingTickInterval
	m	()Lbsx$a;	c	fireImmune
	m	(F)Lbsx$a;	c	ridingOffset
		p	1		offsetY
	m	()Lbsx$a;	d	canSpawnFarFromPlayer
	m	(F)Lbsx$a;	d	nameTagOffset
		p	1		offsetY
	f	Lbsx$b;	a	factory
	f	Lbtq;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Lbsu;	j	dimensions
	f	F	k	spawnDimensionsScale
	f	Lbst$a;	l	attachments
	f	Lcpl;	m	requiredFeatures
c	bsx$b	net/minecraft/world/entity/EntityTypes$b
	m	(Lbsx;Ldcw;)Lbsr;	create	create
		p	1		type
		p	2		world
c	bsy	net/minecraft/world/entity/EnumItemSlot
	m	(Ljava/lang/String;ILbsy$a;IIILjava/lang/String;)V	<init>	<init>
		p	3		type
		p	4		entityId
		p	5		maxCount
		p	6		armorStandId
		p	7		name
	m	(Ljava/lang/String;ILbsy$a;IILjava/lang/String;)V	<init>	<init>
		p	3		type
		p	4		entityId
		p	5		armorStandId
		p	6		name
	m	()Lbsy$a;	a	getType
	m	(I)I	a	getIndex
		p	1		offset
	m	(Lcuq;)Lcuq;	a	limit
		p	1		stack
	m	(Ljava/lang/String;)Lbsy;	a	byName
		p	0		name
	m	()I	b	getIndex
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	d	getFilterFlag
	m	()Ljava/lang/String;	e	getName
	m	()Z	f	isArmor
	m	()[Lbsy;	g	$values
	f	Lbsy;	a	MAINHAND
	f	Lbsy;	b	OFFHAND
	f	Lbsy;	c	FEET
	f	Lbsy;	d	LEGS
	f	Lbsy;	e	CHEST
	f	Lbsy;	f	HEAD
	f	Lbsy;	g	BODY
	f	I	h	NO_COUNT_LIMIT
	f	Lazk$a;	i	CODEC
	f	Lbsy$a;	j	type
	f	I	k	index
	f	I	l	countLimit
	f	I	m	filterFlag
	f	Ljava/lang/String;	n	name
	f	[Lbsy;	o	$VALUES
c	bsy$a	net/minecraft/world/entity/EnumItemSlot$Function
	m	()[Lbsy$a;	a	$values
	f	Lbsy$a;	a	HAND
	f	Lbsy$a;	b	HUMANOID_ARMOR
	f	Lbsy$a;	c	ANIMAL_ARMOR
	f	[Lbsy$a;	d	$VALUES
c	bsz	net/minecraft/world/entity/EquipmentSlotGroup
	m	(Ljava/lang/String;IILjava/lang/String;Lbsy;)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		slot
	m	(Ljava/lang/String;IILjava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		slotPredicate
	m	()[Lbsz;	a	$values
	m	(Lbsy;)Lbsz;	a	bySlot
		p	0		slot
	m	(Lbsy;Lbsy;)Z	a	lambda$new$4
		p	1		slotx
	m	(Lbsz;)I	a	lambda$static$3
		p	0		id
	m	(Lbsy;)Z	b	test
		p	1		slot
	m	(Lbsz;)I	b	lambda$static$2
		p	0		id
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lbsy;)Z	c	lambda$static$1
		p	0		slot
	m	(Lbsy;)Z	d	lambda$static$0
		p	0		slot
	f	Lbsz;	a	ANY
	f	Lbsz;	b	MAINHAND
	f	Lbsz;	c	OFFHAND
	f	Lbsz;	d	HAND
	f	Lbsz;	e	FEET
	f	Lbsz;	f	LEGS
	f	Lbsz;	g	CHEST
	f	Lbsz;	h	HEAD
	f	Lbsz;	i	ARMOR
	f	Lbsz;	j	BODY
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Lyx;	m	STREAM_CODEC
	f	I	n	id
	f	Ljava/lang/String;	o	key
	f	Ljava/util/function/Predicate;	p	predicate
	f	[Lbsz;	q	$VALUES
c	bsz$1	net/minecraft/world/entity/EquipmentSlotGroup$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	bta	net/minecraft/world/entity/EquipmentTable
	m	()Lakq;	a	lootTable
	m	(F)Ljava/util/Map;	a	createForAllSlots
		p	0		dropChance
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/Map;	a	lambda$static$0
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/util/List;F)Ljava/util/Map;	a	createForAllSlots
		p	0		slots
		p	1		dropChance
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
		p	0		map
	m	()Ljava/util/Map;	b	slotDropChances
	f	Lcom/mojang/serialization/Codec;	a	DROP_CHANCES_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lakq;	c	lootTable
	f	Ljava/util/Map;	d	slotDropChances
c	btb	net/minecraft/world/entity/EquipmentUser
	m	(Lakq;Leru;JLjava/util/Map;)V	a	equip
		p	1		lootTable
		p	2		parameters
		p	3		seed
		p	5		slotDropChances
	m	(Lakq;Leru;Ljava/util/Map;)V	a	equip
		p	1		lootTable
		p	2		parameters
		p	3		slotDropChances
	m	(Lbsy;)Lcuq;	a	getItemBySlot
		p	1		slot
	m	(Lbsy;F)V	a	setDropChance
		p	1		slot
		p	2		dropChance
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbta;Leru;)V	a	equip
		p	1		equipmentTable
		p	2		parameters
	m	(Lcuq;Ljava/util/List;)Lbsy;	a	resolveSlot
		p	1		stack
		p	2		slotBlacklist
c	btc	net/minecraft/world/entity/EntityExperienceOrb
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDI)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		amount
	m	(IILbtc;)Z	a	lambda$tryMergeToExisting$0
		p	2		orb
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Laqu;Lexc;I)V	a	award
		p	0		world
		p	1		pos
		p	2		amount
	m	(Laqv;I)I	a	repairPlayerItems
		p	1		player
		p	2		amount
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbtc;)Z	a	canMerge
		p	1		other
	m	(Lbtc;II)Z	a	canMerge
		p	0		orb
		p	1		seed
		p	2		amount
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljd;	aL	getBlockPosBelowThatAffectsMyMovement
	m	()D	aZ	getDefaultGravity
	m	(I)I	b	getExperienceValue
		p	0		value
	m	(Laqu;Lexc;I)Z	b	tryMergeToExisting
		p	0		world
		p	1		pos
		p	2		amount
	m	(Lbtc;)V	b	merge
		p	1		other
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	()Lbsr$b;	bc	getMovementEmission
	m	()V	bo	doWaterSplashEffect
	m	()Z	cu	isAttackable
	m	()Lavq;	de	getSoundSource
	m	()V	l	tick
	m	()I	p	getValue
	m	()I	s	getIcon
	m	()V	t	scanForEntities
	m	()V	v	setUnderwaterMovement
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
	f	I	g	age
	f	I	h	health
	f	I	i	value
	f	I	j	count
	f	Lcmx;	k	followingPlayer
c	btd	net/minecraft/world/entity/EntityFlying
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	()Z	p_	onClimbable
c	bte	net/minecraft/world/entity/GlowSquid
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkGlowSquidSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setDarkTicks
		p	1		ticks
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Llk;	s	getInkParticle
	m	()Lavo;	t	getSquirtSound
	m	()Lavo;	v	getAmbientSound
	m	()I	x	getDarkTicksRemaining
	f	Lajw;	cg	DATA_DARK_TICKS_REMAINING
c	btf	net/minecraft/world/entity/HasCustomInventoryScreen
	m	(Lcmx;)V	b	openCustomInventoryScreen
		p	1		player
c	btg	net/minecraft/world/entity/EnumMainHand
	m	(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		translationKey
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getKey
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lbtg;	e	getOpposite
	m	()[Lbtg;	f	$values
	f	Lbtg;	a	LEFT
	f	Lbtg;	b	RIGHT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	Ljava/lang/String;	g	translationKey
	f	[Lbtg;	h	$VALUES
c	bth	net/minecraft/world/entity/Interaction
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbtn;	Y_	getLastAttacker
	m	(F)V	a	setWidth
		p	1		width
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbua;)Lbsu;	a	getDimensions
		p	1		pose
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$readAdditionalSaveData$1
		p	1		pair
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$3
	m	(Z)V	a	setResponse
		p	1		response
	m	()Lewx;	au	makeBoundingBox
	m	(F)V	b	setHeight
		p	1		height
	m	(Lcom/mojang/datafixers/util/Pair;)V	b	lambda$readAdditionalSaveData$0
		p	1		pair
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	b	lambda$addAdditionalSaveData$2
	m	()Z	bA	isPickable
	m	()Z	bz	canBeHitByProjectile
	m	()Lepj;	j_	getPistonPushReaction
	m	()V	l	tick
	m	()Lbtn;	p	getTarget
	m	()Z	r_	isIgnoringBlockTriggers
	m	()F	s	getWidth
	m	()F	t	getHeight
	m	(Lbsr;)Z	u	skipAttackInteraction
		p	1		attacker
	m	()Z	v	getResponse
	m	()Lbsu;	w	getDimensions
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajw;	c	DATA_WIDTH_ID
	f	Lajw;	d	DATA_HEIGHT_ID
	f	Lajw;	e	DATA_RESPONSE_ID
	f	Ljava/lang/String;	f	TAG_WIDTH
	f	Ljava/lang/String;	g	TAG_HEIGHT
	f	Ljava/lang/String;	h	TAG_ATTACK
	f	Ljava/lang/String;	i	TAG_INTERACTION
	f	Ljava/lang/String;	j	TAG_RESPONSE
	f	Lbth$a;	k	attack
	f	Lbth$a;	l	interaction
c	bth$a	net/minecraft/world/entity/Interaction$PlayerAction
	m	()Ljava/util/UUID;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()J	b	timestamp
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/UUID;	b	player
	f	J	c	timestamp
c	bti	net/minecraft/world/entity/SaddleStorage
	m	(Laka;Lajw;Lajw;)V	<init>	<init>
		p	1		dataTracker
		p	2		boostTime
		p	3		saddled
	m	()V	a	onSynced
	m	(Layw;)Z	a	boost
		p	1		random
	m	(Lub;)V	a	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setSaddle
		p	1		saddled
	m	()V	b	tickBoost
	m	(Lub;)V	b	readAdditionalSaveData
		p	1		nbt
	m	()F	c	boostFactor
	m	()Z	d	hasSaddle
	m	()I	e	boostTimeTotal
	f	I	a	MIN_BOOST_TIME
	f	I	b	MAX_BOOST_TIME
	f	Laka;	c	entityData
	f	Lajw;	d	boostTimeAccessor
	f	Lajw;	e	hasSaddleAccessor
	f	Z	f	boosting
	f	I	g	boostTime
c	btj	net/minecraft/world/entity/ISteerable
	m	()Z	a	boost
c	btk	net/minecraft/world/entity/Leashable
	m	()Lbsr;	A	getLeashHolder
	m	()Z	N_	isLeashed
	m	()Z	O_	mayBeLeashed
	m	()Lbtk$a;	X_	getLeashData
	m	(Lbsr;F)Z	a	handleLeashAtDistance
		p	1		leashHolder
		p	2		distance
	m	(Lbsr;Lbsr;F)V	a	legacyElasticRangeLeashBehaviour
		p	0		entity
		p	1		leashHolder
		p	2		distance
	m	(Lbsr;Lbsr;Z)V	a	setLeashedTo
		p	0		entity
		p	1		leashHolder
		p	2		sendPacket
	m	(Lbsr;Lbtk$a;)V	a	restoreLeashFromSave
		p	0		entity
		p	1		leashData
	m	(Lbsr;ZZ)V	a	dropLeash
		p	0		entity
		p	1		sendPacket
		p	2		dropItem
	m	(Lbtk$a;)V	a	setLeashData
		p	1		leashData
	m	(Ljava/util/UUID;)Luy;	a	lambda$writeLeashData$0
		p	0		uuid
	m	(Lub;Lbtk$a;)V	a	writeLeashData
		p	1		nbt
		p	2		leashData
	m	(ZZ)V	a	dropLeash
		p	1		sendPacket
		p	2		dropItem
	m	(Lbsr;)V	b	closeRangeLeashBehaviour
		p	1		entity
	m	(Lbsr;F)V	b	elasticRangeLeashBehaviour
		p	1		leashHolder
		p	2		distance
	m	(Lbsr;Z)V	b	setLeashedTo
		p	1		leashHolder
		p	2		sendPacket
	m	(Lbsr;)V	b_	tickLeash
		p	0		entity
	m	(Lbsr;)Lbsr;	c	getLeashHolder
		p	0		entity
	m	(Lub;)Lbtk$a;	c	readLeashData
		p	1		nbt
	m	(I)V	h_	setDelayedLeashHolderId
		p	1		unresolvedLeashHolderId
	m	()Z	q	canHaveALeashAttachedToIt
	m	()Z	y	canBeLeashed
	m	()V	z	leashTooFarBehaviour
	f	Ljava/lang/String;	b_	LEASH_TAG
	f	D	q_	LEASH_TOO_FAR_DIST
	f	D	r_	LEASH_ELASTIC_DIST
c	btk$a	net/minecraft/world/entity/Leashable$a
	m	(I)V	<init>	<init>
		p	1		unresolvedLeashHolderId
	m	(Lbsr;)V	<init>	<init>
		p	1		leashHolder
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
		p	1		unresolvedLeashData
	m	(Lbsr;)V	a	setLeashHolder
		p	1		leashHolder
	f	Lbsr;	a	leashHolder
	f	Lcom/mojang/datafixers/util/Either;	b	delayedLeashInfo
	f	I	c	delayedLeashHolderId
c	btl	net/minecraft/world/entity/LerpingModel
	m	()Ljava/util/Map;	a	getModelRotationValues
c	btm	net/minecraft/world/entity/EntityLightning
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Ldcw;Ljd;Ldtc;)V	a	lambda$randomStepCleaningCopper$2
		p	2		state
	m	(Ldcw;Ljd;Ljd$a;I)V	a	randomWalkCleaningCopper
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		count
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setVisualOnly
		p	1		cosmetic
	m	(I)V	b	spawnFire
		p	1		spreadAttempts
	m	(Laqv;)V	b	setCause
		p	1		channeler
	m	(Lbsr;)Z	b	lambda$tick$0
	m	(Ldcw;Ljd;)V	b	clearCopperOnLightningStrike
		p	0		world
		p	1		pos
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Laqv;)Z	c	lambda$tick$1
	m	(Ldcw;Ljd;)Ljava/util/Optional;	c	randomStepCleaningCopper
		p	0		world
		p	1		pos
	m	()Lavq;	de	getSoundSource
	m	()V	l	tick
	m	()Laqv;	p	getCause
	m	()I	s	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	t	getHitEntities
	m	()V	v	powerLightningRod
	m	()Ljd;	w	getStrikePosition
	f	J	b	seed
	f	I	c	START_LIFE
	f	D	d	DAMAGE_RADIUS
	f	D	e	DETECTION_RADIUS
	f	I	f	life
	f	I	g	flashes
	f	Z	h	visualOnly
	f	Laqv;	i	cause
	f	Ljava/util/Set;	j	hitEntities
	f	I	k	blocksSetOnFire
c	btn	net/minecraft/world/entity/EntityLiving
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)V	A	setSpeed
		p	1		movementSpeed
	m	(Lbsr;)V	A	setLastHurtMob
		p	1		target
	m	()V	B	refreshDirtyAttributes
	m	(F)F	B	getAttackAnim
		p	1		tickDelta
	m	(Lbsr;)D	B	getVisibilityPercent
		p	1		entity
	m	()I	C	getCurrentSwingDuration
	m	(F)V	C	setAbsorptionAmount
		p	1		absorptionAmount
	m	(Lbsr;)V	C	dropExperience
		p	1		attacker
	m	()V	D	makePoofParticles
	m	(F)V	D	internalSetAbsorptionAmount
		p	1		absorptionAmount
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	()V	E	swapHandItems
	m	(F)F	E	getFrictionInfluencedSpeed
		p	1		slipperiness
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	()V	F	detectEquipmentUpdates
	m	(Lbsr;)Z	F	hasLineOfSight
		p	1		entity
	m	()Ljava/util/Map;	H	collectEquipmentChanges
	m	()V	I	updateFallFlying
	m	()V	J	updatingUsingItem
	m	()V	K	updateInvisibilityStatus
	m	()Z	L	shouldTriggerItemUseEffects
	m	()V	L_	completeUsingItem
	m	()V	N	updateSwimAmount
	m	()Z	O	checkBedExists
	m	()D	P_	lerpTargetZ
	m	()F	Q_	lerpTargetXRot
	m	()Lbtn;	Y_	getLastAttacker
	m	(DD)V	a	indicateDamage
		p	1		deltaX
		p	3		deltaZ
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(DZLexc;)Lexc;	a	getFluidFallingAdjustedMovement
		p	1		gravity
		p	3		falling
		p	4		motion
	m	(F)F	a	getSwimAmount
		p	1		tickDelta
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(FI)V	a	lerpHeadTo
		p	1		yaw
		p	2		interpolationSteps
	m	(ID)V	a	lerpHeadRotationStep
		p	1		headTrackingIncrements
		p	2		serverHeadYaw
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;)V	a	dropAllDeathLoot
		p	1		world
		p	2		damageSource
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Laqu;Lbsr;)I	a	getExperienceReward
		p	1		world
		p	2		attacker
	m	(Lbqq;)V	a	swing
		p	1		hand
	m	(Lbqq;Lcuq;)V	a	setItemInHand
		p	1		hand
		p	2		stack
	m	(Lbqq;Z)V	a	swing
		p	1		hand
		p	2		fromServerPlayer
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrk;F[Lbsy;)V	a	doHurtEquipment
		p	1		source
		p	2		amount
		p	3		slots
	m	(Lbrk;Z)V	a	dropFromLootTable
		p	1		damageSource
		p	2		causedByPlayer
	m	(Lbrz;)V	a	onEffectRemoved
		p	1		effect
	m	(Lbrz;Lbsr;)V	a	onEffectAdded
		p	1		effect
		p	2		source
	m	(Lbrz;ZLbsr;)V	a	onEffectUpdated
		p	1		effect
		p	2		reapplyEffect
		p	3		source
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lbsr;I)V	a	take
		p	1		item
		p	2		count
	m	(Lbsr;Lbrk;)F	a	getKnockback
		p	1		target
		p	2		damageSource
	m	(Lbsx;)Z	a	canAttackType
		p	1		type
	m	(Lbsy;)Lcuq;	a	getItemBySlot
		p	1		slot
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbsy;Lcuq;Lcuq;)V	a	onEquipItem
		p	1		slot
		p	2		oldStack
		p	3		newStack
	m	(Lbtn;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbtn;Lbsy;)Lbug;	a	createEquipmentSlotAccess
		p	0		entity
		p	1		slot
	m	(Lbtn;Lbsy;Lcuq;)Z	a	lambda$createEquipmentSlotAccess$10
		p	2		stack
	m	(Lbtn;Lcef;)Z	a	canAttack
		p	1		entity
		p	2		predicate
	m	(Lbua;)Lbsu;	a	getDimensions
		p	1		pose
	m	(Lbut;Lcuq;Lbsy;Ljm;Lbuu;)V	a	lambda$collectEquipmentChanges$4
		p	4		attribute
		p	5		modifier
	m	(Lcjh;)V	a	onItemPickup
		p	1		item
	m	(Lcmx;Lexc;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lcpr;)V	a	addEatEffect
		p	1		component
	m	(Lcul;Lbsy;)V	a	onEquippedItemBroken
		p	1		item
		p	2		slot
	m	(Lcul;Lcuq;)Z	a	lambda$isHolding$3
		p	1		stack
	m	(Lcuq;)V	a	updateUsingItem
		p	1		stack
	m	(Lcuq;I)V	a	spawnItemParticles
		p	1		stack
		p	2		count
	m	(Lcuq;Lbsy;Ljm;Lbuu;)V	a	lambda$collectEquipmentChanges$5
	m	(Lcuq;Lcuq;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Ldcw;Lcuq;)Lcuq;	a	eat
		p	1		world
		p	2		stack
	m	(Ldcw;Lcuq;Lcpr;)Lcuq;	a	eat
		p	1		world
		p	2		stack
		p	3		foodComponent
	m	(Lepe;)Z	a	canStandOnFluid
		p	1		state
	m	(Lewx;Lewx;)V	a	checkAutoSpinAttack
		p	1		a
		p	2		b
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Lexc;F)Lexc;	a	handleRelativeFrictionAndCalculateMovement
		p	1		movementInput
		p	2		slipperiness
	m	(Lff$a;Lexc;)V	a	lookAt
		p	1		anchorPoint
		p	2		target
	m	(Ljava/util/List;Lbsy;Lcuq;)V	a	lambda$handleEquipmentChanges$6
		p	2		slot
		p	3		stack
	m	(Ljava/util/Map;)V	a	handleHandSwap
		p	1		equipmentChanges
	m	(Ljd;)V	a	setPosToBed
		p	1		pos
	m	(Ljd;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Lji$a;Ll$a;)Lexc;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Ljd;)V	a	lambda$addAdditionalSaveData$0
		p	1		pos
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$1
		p	1		brain
	m	()V	aE	onBelowWorld
	m	()F	aO	getBlockSpeedFactor
	m	()D	aZ	getDefaultGravity
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()V	ad	stopRiding
	m	()V	ap	kill
	m	()V	aw	baseTick
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(DDDZ)Z	b	randomTeleport
		p	1		x
		p	3		y
		p	5		z
		p	7		particleEffects
	m	(F)F	b	sanitizeScale
		p	1		scale
	m	(Laqu;Ljd;)V	b	onChangedBlock
		p	1		world
		p	2		pos
	m	(Lavo;)V	b	makeSound
		p	1		sound
	m	(Lbqq;)Lcuq;	b	getItemInHand
		p	1		hand
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbrk;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbrz;)Z	b	addEffect
		p	1		effect
	m	(Lbrz;Lbsr;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lbsy;)Z	b	doesEmitEquipEvent
		p	1		slot
	m	(Lbsy;Lcuq;)V	b	setLastArmorItem
		p	1		slot
		p	2		armor
	m	(Lcmx;Lexc;)Lexc;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcul;)Z	b	isHolding
		p	1		item
	m	(Lcuq;I)V	b	triggerItemUseEffects
		p	1		stack
		p	2		particleCount
	m	(Lexc;)Lexc;	b	handleOnClimbable
		p	1		motion
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
		p	1		equipmentChanges
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
		p	1		predicate
	m	(Ljd;)V	b	startSleeping
		p	1		pos
	m	(Ljm;)Z	b	hasEffect
		p	1		effect
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Z	bB	isPushable
	m	()Z	bE	isAlive
	m	()Z	bF	isInWall
	m	(F)V	c	heal
		p	1		amount
	m	(IZ)V	c	setLivingEntityFlag
		p	1		mask
		p	2		value
	m	(Lawu;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbqq;)V	c	startUsingItem
		p	1		hand
	m	(Lbrk;)V	c	handleDamageEvent
		p	1		damageSource
	m	(Lbrk;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbrz;)Z	c	canBeAffected
		p	1		effect
	m	(Lbrz;Lbsr;)V	c	forceAddEffect
		p	1		effect
		p	2		source
	m	(Lbsr$c;)V	c	triggerOnDeathMobEffects
		p	1		reason
	m	(Lbsy;)Z	c	hasItemInSlot
		p	1		slot
	m	(Lbsy;Lcuq;)V	c	setLastHandItem
		p	1		slot
		p	2		stack
	m	(Lbtn;)Z	c	canAttack
		p	1		target
	m	(Lcmx;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	(Lcmx;Lexc;)V	c	travelRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcuq;)Lavo;	c	getDrinkingSound
		p	1		stack
	m	(Ljava/util/Collection;)Z	c	areAllEffectsAmbient
		p	0		effects
	m	(Ljd;)V	c	lambda$stopSleeping$9
		p	1		pos
	m	(Ljd;Ldtc;)Z	c	trapdoorUsableAsLadder
		p	1		pos
		p	2		state
	m	(Ljm;)Lbrz;	c	getEffect
		p	1		effect
	m	()Z	cF	shouldShowName
	m	()D	c_	lerpTargetX
	m	()Z	ce	isVisuallySwimming
	m	()Z	ch	isCurrentlyGlowing
	m	()F	ct	getYHeadRot
	m	()I	cx	getMaxFallDistance
	m	(Lbqq;)Lbsy;	d	getSlotForHand
		p	0		hand
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbrk;F)F	d	getDamageAfterArmorAbsorb
		p	1		source
		p	2		amount
	m	(Lbrz;)V	d	sendEffectToPassengers
		p	1		effect
	m	(Lbsr;)V	d	dismountVehicle
		p	1		vehicle
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lbtn;)V	d	blockUsingShield
		p	1		attacker
	m	(Lcuq;)Lavo;	d	getEatingSound
		p	1		stack
	m	(Ljm;)Lbrz;	d	removeEffectNoUpdate
		p	1		effect
	m	()Z	dC	canFreeze
	m	()F	dF	getVisualRotationYInDegrees
	m	()F	dI	maxUpStep
	m	()Lcuq;	dS	getWeaponItem
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Lbuv$a;	dV	createLivingAttributes
	m	()Z	dW	canBreatheUnderwater
	m	()Z	dX	hasLandedInLiquid
	m	()V	dY	removeFrost
	m	()V	dZ	tryAddFrost
	m	()D	d_	lerpTargetY
	m	(FF)I	e	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbrk;)V	e	playHurtSound
		p	1		damageSource
	m	(Lbrk;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	(Lbrz;)V	e	lambda$tickEffects$2
	m	(Lbsy;)Lcuq;	e	getLastArmorItem
		p	1		slot
	m	(Lbtn;)V	e	blockedByShield
		p	1		target
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lcmx;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	(Lcuq;)V	e	verifyEquippedItem
		p	1		stack
	m	(Ljm;)Z	e	removeEffect
		p	1		effect
	m	()Lakq;	eA	getLootTable
	m	()J	eB	getLootTableSeed
	m	()V	eC	skipDropExperience
	m	()Z	eD	wasExperienceConsumed
	m	()F	eE	getHurtDir
	m	()Lewx;	eF	getHitbox
	m	()Ljava/util/Map;	eG	activeLocationDependentEnchantments
	m	()Lbtn$a;	eH	getFallSounds
	m	()Ljava/util/Optional;	eI	getLastClimbablePos
	m	()V	eJ	playBlockFallSound
	m	()I	eK	getArmorValue
	m	()Lbrh;	eL	getCombatTracker
	m	()Lbtn;	eM	getKillCredit
	m	()F	eN	getMaxHealth
	m	()F	eO	getMaxAbsorption
	m	()I	eP	getArrowCount
	m	()I	eQ	getStingerCount
	m	()V	eR	updateSwingTime
	m	()Lbut;	eS	getAttributes
	m	()Lcuq;	eT	getMainHandItem
	m	()Lcuq;	eU	getOffhandItem
	m	()Ljava/lang/Iterable;	eV	getArmorSlots
	m	()Ljava/lang/Iterable;	eW	getHandSlots
	m	()Ljava/lang/Iterable;	eX	getArmorAndBodyArmorSlots
	m	()Ljava/lang/Iterable;	eY	getAllSlots
	m	()F	eZ	getArmorCoverPercentage
	m	()F	e_	lerpTargetYRot
	m	()F	ea	getAgeScale
	m	()F	eb	getScale
	m	()Z	ec	isAffectedByFluids
	m	()V	ed	tickDeath
	m	()Z	ee	shouldDropExperience
	m	()Z	ef	shouldDropLoot
	m	()I	eg	getBaseExperienceReward
	m	()Z	eh	isAlwaysExperienceDropper
	m	()Lbtn;	ei	getLastHurtByMob
	m	()I	ej	getLastHurtByMobTimestamp
	m	()Lbtn;	ek	getLastHurtMob
	m	()I	el	getLastHurtMobTimestamp
	m	()I	em	getNoActionTime
	m	()Z	en	shouldDiscardFriction
	m	()V	eo	tickEffects
	m	()Z	ep	canBeSeenAsEnemy
	m	()Z	eq	canBeSeenByAnyone
	m	()V	er	removeEffectParticles
	m	()Z	es	removeAllEffects
	m	()Ljava/util/Collection;	et	getActiveEffects
	m	()Ljava/util/Map;	eu	getActiveEffectsMap
	m	()Z	ev	isInvertedHealAndHarm
	m	()F	ew	getHealth
	m	()Z	ex	isDeadOrDying
	m	()Lbrk;	ey	getLastDamageSource
	m	()V	ez	dropEquipment
	m	(FF)F	f	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbrk;)Z	f	isDamageSourceBlocked
		p	1		source
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lbsy;)Lcuq;	f	getLastHandItem
		p	1		slot
	m	(Lbtn;)V	f	createWitherRose
		p	1		adversary
	m	(Lbua;)Lewx;	f	getLocalBoundsForPose
		p	1		pose
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	(Ljm;)Lbus;	f	getAttribute
		p	1		attribute
	m	()Z	fA	isFallFlying
	m	()I	fB	getFallFlyingTicks
	m	()Z	fC	isAffectedByPotions
	m	()Z	fD	attackable
	m	()Lcom/google/common/collect/ImmutableList;	fE	getDismountPoses
	m	()Ljava/util/Optional;	fF	getSleepingPos
	m	()V	fG	clearSleepingPos
	m	()Z	fH	isSleeping
	m	()V	fI	stopSleeping
	m	()Lji;	fJ	getBedOrientation
	m	()Z	fK	canDisableShield
	m	()Z	fL	hasInfiniteMaterials
	m	()V	f_	onEnterCombat
	m	()F	fa	getSoundVolume
	m	()F	fb	getVoicePitch
	m	()Z	fc	isImmobile
	m	()F	fd	getJumpPower
	m	()F	fe	getJumpBoostPower
	m	()V	ff	jumpFromGround
	m	()V	fg	goDownInWater
	m	()F	fh	getWaterSlowDown
	m	()F	fi	getFlyingSpeed
	m	()F	fj	getSpeed
	m	()F	fk	getMaxHeadRotationRelativeToBody
	m	()Z	fl	isSensitiveToWater
	m	()V	fm	serverAiStep
	m	()Z	fn	isAutoSpinAttack
	m	()F	fo	getAbsorptionAmount
	m	()V	fp	updateEffectVisibility
	m	()Lbtg;	fq	getMainArm
	m	()Z	fr	isUsingItem
	m	()Lbqq;	fs	getUsedItemHand
	m	()Lcuq;	ft	getUseItem
	m	()I	fu	getUseItemRemainingTicks
	m	()I	fv	getTicksUsingItem
	m	()V	fw	releaseUsingItem
	m	()V	fx	stopUsingItem
	m	()Z	fy	isBlocking
	m	()Z	fz	isSuppressingSlidingDownLadder
	m	(I)V	g	igniteForTicks
		p	1		ticks
	m	(Lbrk;)Z	g	checkTotemDeathProtection
		p	1		source
	m	(Lbsy;)B	g	entityEventForEquipmentBreak
		p	0		slot
	m	(Lbtn;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lbua;)Z	g	wouldNotSuffocateAtTargetPose
		p	1		pose
	m	(Lcuq;)Lcuq;	g	getProjectile
		p	1		stack
	m	(Ljd;)V	g	setSleepingPos
		p	1		pos
	m	(Ljm;)D	g	getAttributeValue
		p	1		attribute
	m	()V	g_	onLeaveCombat
	m	(Lbsr;)V	h	push
		p	1		entity
	m	(Lcuq;)Lbsy;	h	getEquipmentSlotForItem
		p	1		stack
	m	(Ljd;)Lexc;	h	lambda$stopSleeping$8
	m	(Ljm;)D	h	getAttributeBaseValue
		p	1		attribute
	m	(Z)V	h	setSprinting
		p	1		sprinting
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	(F)F	i	getViewYRot
		p	1		tickDelta
	m	(Lcuq;)V	i	breakItem
		p	1		stack
	m	(Ljd;)Ljava/lang/Boolean;	i	lambda$checkBedExists$7
		p	1		pos
	m	(Ljm;)V	i	onAttributeUpdated
		p	1		attribute
	m	(Lexc;)Lexc;	k	resetForwardDirectionOfRelativePortalPosition
		p	0		pos
	m	()V	l	tick
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	(Lbsr;)Lexc;	m	getPassengerRidingPosition
		p	1		passenger
	m	()V	m_	aiStep
	m	(F)V	n	animateHurt
		p	1		yaw
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	()Lavo;	n_	getDeathSound
	m	(F)V	o	setYHeadRot
		p	1		headYaw
	m	(I)V	o	setNoActionTime
		p	1		despawnCounter
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
	m	()Z	o_	isBaby
	m	(DDD)V	p	knockback
		p	1		strength
		p	3		x
		p	5		z
	m	(F)V	p	setYBodyRot
		p	1		bodyYaw
	m	(I)V	p	setArrowCount
		p	1		stuckArrowCount
	m	()Z	p_	onClimbable
	m	(I)V	q	setStingerCount
		p	1		stingerCount
	m	()V	r	pushEntities
	m	(F)F	r	getPreciseBodyRotation
		p	1		delta
	m	(I)Lavo;	r	getFallDamageSound
		p	1		distance
	m	(Z)V	r	setDiscardFriction
		p	1		noDrag
	m	()V	s	updateSynchronizedMobEffectParticles
	m	(I)Lbsy;	s	getEquipmentSlot
		p	0		slotId
	m	(Z)V	s	calculateEntityAnimation
		p	1		flutter
	m	(Z)V	t	setJumping
		p	1		jumping
	m	()V	u	rideTick
	m	()V	v	updateGlowingStatus
	m	(F)V	v	setHealth
		p	1		health
	m	(F)I	w	getComfortableFallDistance
		p	1		health
	m	(F)V	x	hurtCurrentlyUsedShield
		p	1		amount
	m	(F)F	y	getJumpPower
		p	1		strength
	m	(F)V	z	updateWalkAnimation
		p	1		posDelta
	f	I	aD	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Lajw;	aE	DATA_LIVING_ENTITY_FLAGS
	f	Lbsu;	aF	SLEEPING_DIMENSIONS
	f	F	aG	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	F	aH	DEFAULT_BABY_SCALE
	f	Ljava/lang/String;	aI	ATTRIBUTES_FIELD
	f	Z	aJ	swinging
	f	Lbqq;	aK	swingingArm
	f	I	aL	swingTime
	f	I	aM	removeArrowTime
	f	I	aN	removeStingerTime
	f	I	aO	hurtTime
	f	I	aP	hurtDuration
	f	I	aQ	deathTime
	f	F	aR	oAttackAnim
	f	F	aS	attackAnim
	f	I	aT	attackStrengthTicker
	f	Lbup;	aU	walkAnimation
	f	I	aV	invulnerableDuration
	f	F	aW	timeOffs
	f	F	aX	rotA
	f	F	aY	yBodyRot
	f	F	aZ	yBodyRotO
	f	I	bA	useItemRemaining
	f	I	bB	fallFlyTicks
	f	I	bC	autoSpinAttackTicks
	f	F	bD	autoSpinAttackDmg
	f	Lcuq;	bE	autoSpinAttackItemStack
	f	Lbuq;	bF	brain
	f	F	bG	appliedScale
	f	Lbuu;	bH	SPEED_MODIFIER_SPRINTING
	f	I	bI	DAMAGE_SOURCE_TIMEOUT
	f	I	bJ	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bK	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	D	bL	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajw;	bM	DATA_HEALTH_ID
	f	Lajw;	bN	DATA_EFFECT_PARTICLES
	f	Lajw;	bO	DATA_EFFECT_AMBIENCE_ID
	f	Lajw;	bP	DATA_ARROW_COUNT_ID
	f	Lajw;	bQ	DATA_STINGER_COUNT_ID
	f	Lajw;	bR	SLEEPING_POS_ID
	f	I	bS	PARTICLE_FREQUENCY_WHEN_INVISIBLE
	f	F	bT	ITEM_USE_EFFECT_START_FRACTION
	f	Lbut;	bU	attributes
	f	Lbrh;	bV	combatTracker
	f	Ljava/util/Map;	bW	activeEffects
	f	Ljv;	bX	lastHandItemStacks
	f	Ljv;	bY	lastArmorItemStacks
	f	Lcuq;	bZ	lastBodyItemStack
	f	F	ba	yHeadRot
	f	F	bb	yHeadRotO
	f	Lcmx;	bc	lastHurtByPlayer
	f	I	bd	lastHurtByPlayerTime
	f	Z	be	dead
	f	I	bf	noActionTime
	f	F	bg	oRun
	f	F	bh	run
	f	F	bi	animStep
	f	F	bj	animStepO
	f	F	bk	rotOffs
	f	I	bl	deathScore
	f	F	bm	lastHurt
	f	Z	bn	jumping
	f	F	bo	xxa
	f	F	bp	yya
	f	F	bq	zza
	f	I	br	lerpSteps
	f	D	bs	lerpX
	f	D	bt	lerpY
	f	D	bu	lerpZ
	f	D	bv	lerpYRot
	f	D	bw	lerpXRot
	f	D	bx	lerpYHeadRot
	f	I	by	lerpHeadSteps
	f	Lcuq;	bz	useItem
	f	Ljava/lang/String;	c	TAG_ACTIVE_EFFECTS
	f	Z	ca	discardFriction
	f	Z	cb	effectsDirty
	f	Lbtn;	cc	lastHurtByMob
	f	I	cd	lastHurtByMobTimestamp
	f	Lbtn;	ce	lastHurtMob
	f	I	cf	lastHurtMobTimestamp
	f	F	cg	speed
	f	I	ch	noJumpDelay
	f	F	ci	absorptionAmount
	f	Ljd;	cj	lastPos
	f	Ljava/util/Optional;	ck	lastClimbablePos
	f	Lbrk;	cl	lastDamageSource
	f	J	cm	lastDamageStamp
	f	F	cn	swimAmount
	f	F	co	swimAmountO
	f	Z	cp	skipDropExperience
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	cq	activeLocationDependentEnchantments
	f	Lakr;	d	SPEED_MODIFIER_POWDER_SNOW_ID
	f	Lakr;	e	SPRINTING_MODIFIER_ID
	f	I	i	HAND_SLOTS
	f	I	j	ARMOR_SLOTS
	f	I	k	EQUIPMENT_SLOT_OFFSET
	f	I	l	ARMOR_SLOT_OFFSET
	f	I	m	BODY_ARMOR_OFFSET
	f	I	n	SWING_DURATION
	f	I	o	PLAYER_HURT_EXPERIENCE_TIME
	f	D	p	MIN_MOVEMENT_DISTANCE
	f	D	q	DEFAULT_BASE_GRAVITY
	f	I	r	DEATH_DURATION
	f	I	s	USE_ITEM_INTERVAL
	f	F	t	BASE_JUMP_POWER
	f	I	u	LIVING_ENTITY_FLAG_IS_USING
	f	I	v	LIVING_ENTITY_FLAG_OFF_HAND
c	btn$1	net/minecraft/world/entity/EntityLiving$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	btn$a	net/minecraft/world/entity/EntityLiving$a
	m	()Lavo;	a	small
	m	()Lavo;	b	big
	f	Lavo;	a	small
	f	Lavo;	b	big
c	bto	net/minecraft/world/entity/Marker
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bK	couldAcceptPassenger
	m	()Lepj;	j_	getPistonPushReaction
	m	()V	l	tick
	m	(Lbsr;)V	p	addPassenger
		p	1		passenger
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Z	r_	isIgnoringBlockTriggers
	f	Ljava/lang/String;	b	DATA_TAG
	f	Lub;	c	data
c	btp	net/minecraft/world/entity/EntityInsentient
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)V	A	setSpeed
		p	1		movementSpeed
	m	()V	B	registerGoals
	m	()Lbuv$a;	C	createMobAttributes
	m	()Z	D	shouldPassengersInheritMalus
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	()V	E	onPathfindingStart
	m	(F)V	E	setZza
		p	1		forwardSpeed
	m	()V	F	onPathfindingDone
	m	(F)V	F	setYya
		p	1		upwardSpeed
	m	(F)V	G	setXxa
		p	1		sidewaysSpeed
	m	()Lbzk;	H	createBodyControl
	m	()Lbzo;	I	getLookControl
	m	()Lbzp;	J	getMoveControl
	m	()Lbzn;	L	getJumpControl
	m	()Lcda;	N	getNavigation
	m	()Lcdx;	O	getSensing
	m	()Lbtn;	P	getTargetFromBrain
	m	()V	Q	ate
	m	()I	R	getAmbientSoundInterval
	m	()V	S	playAmbientSound
	m	()V	T	spawnAnim
	m	()V	U	updateControlFlags
	m	()Lakq;	V	getDefaultLootTable
	m	()V	W	stopInPlace
	m	()Lkh;	X	getPickupReach
	m	()Lbtk$a;	X_	getLeashData
	m	()Z	Y	requiresCustomPersistence
	m	()Z	Z	shouldDespawnInPeaceful
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lakq;Ljava/util/Map;)V	a	equip
		p	1		lootTable
		p	2		slotDropChances
	m	(Laqu;)Leru;	a	createEquipmentParams
		p	1		world
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbrk;Z)V	a	dropFromLootTable
		p	1		damageSource
		p	2		causedByPlayer
	m	(Lbsr;FF)V	a	lookAt
		p	1		targetEntity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lbsr;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbsx;)Z	a	canAttackType
		p	1		type
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	a	checkMobSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbsx;Z)Lbtp;	a	convertTo
		p	1		entityType
		p	2		keepEquipment
	m	(Lbsy;)Lcuq;	a	getItemBySlot
		p	1		slot
	m	(Lbsy;F)V	a	setDropChance
		p	1		slot
		p	2		dropChance
	m	(Lbsy;I)Lcul;	a	getEquipmentForSlot
		p	0		equipmentSlot
		p	1		equipmentLevel
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbta;)V	a	equip
		p	1		equipmentTable
	m	(Lbtk$a;)V	a	setLeashData
		p	1		leashData
	m	(Lcam;)Z	a	lambda$removeFreeWill$2
		p	0		goal
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcmx;Lbtp;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lcvn;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Ldcx;Lbtr;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Layw;Lbqp;)V	a	populateDefaultEquipmentEnchantments
		p	1		world
		p	2		random
		p	3		localDifficulty
	m	(Lddl;Layw;Lbsy;Lbqp;)V	a	enchantSpawnedArmor
		p	1		world
		p	2		random
		p	3		slot
		p	4		localDifficulty
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lddl;Lbsy;Layw;FLbqp;)V	a	enchantSpawnedEquipment
		p	1		world
		p	2		slot
		p	3		random
		p	4		power
		p	5		localDifficulty
	m	(Lepv;)F	a	getPathfindingMalus
		p	1		nodeType
	m	(Lepv;F)V	a	setPathfindingMalus
		p	1		nodeType
		p	2		penalty
	m	(Ljd;)Z	a	isWithinRestriction
		p	1		pos
	m	(Ljd;I)V	a	restrictTo
		p	1		target
		p	2		range
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	(ZZ)V	a	dropLeash
		p	1		sendPacket
		p	2		dropItem
	m	(Z)V	a_	setCanPickUpLoot
		p	1		canPickUpLoot
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ac	getMaxHeadXRot
	m	()I	ae	getMaxHeadYRot
	m	()V	af	clampHeadRotationToBody
	m	()V	aw	baseTick
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbsy;Lcuq;)V	b	setItemSlotAndDropWhenKilled
		p	1		slot
		p	2		stack
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lbtp;)V	b	lambda$checkAndHandleImportantInteractions$1
		p	2		entity
	m	(Lcuq;Lcuq;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Lddl;Layw;Lbqp;)V	b	enchantSpawnedWeapon
		p	1		world
		p	2		random
		p	3		localDifficulty
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lawu;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lcmx;Lbqq;)Lbqr;	c	checkAndHandleImportantInteractions
		p	1		player
		p	2		hand
	m	(Lcuq;Lcuq;)Z	c	canReplaceEqualItem
		p	1		newStack
		p	2		oldStack
	m	(Ljava/util/function/Predicate;)Ljava/util/Set;	c	dropPreservedEquipment
		p	1		dropPredicate
	m	()Lbtn;	cQ	getControllingPassenger
	m	()V	cw	removeAfterChangingDimensions
	m	()I	cx	getMaxFallDistance
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Ljava/util/function/Predicate;)V	d	removeAllGoals
		p	1		predicate
	m	()V	dA	checkDespawn
	m	()Lcuq;	dB	getPickResult
	m	()Z	db	isEffectiveAi
	m	(Lbrk;)V	e	playHurtSound
		p	1		damageSource
	m	(Lbsy;)V	e	setGuaranteedDrop
		p	1		slot
	m	()Lakq;	eA	getLootTable
	m	()J	eB	getLootTableSeed
	m	()Ljava/lang/Iterable;	eV	getArmorSlots
	m	()Ljava/lang/Iterable;	eW	getHandSlots
	m	()Ljava/lang/Iterable;	eX	getArmorAndBodyArmorSlots
	m	()I	eg	getBaseExperienceReward
	m	(FF)F	f	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lbsy;)F	f	getEquipmentDropChance
		p	1		slot
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	()I	fM	getHeadRotSpeed
	m	()I	fN	getMaxSpawnClusterSize
	m	()Lcuq;	fO	getBodyArmorItem
	m	()Z	fP	isWearingBodyArmor
	m	()V	fQ	dropPreservedEquipment
	m	()V	fR	setPersistenceRequired
	m	()Z	fS	canPickUpLoot
	m	()Z	fT	isPersistenceRequired
	m	()Z	fU	isWithinRestriction
	m	()Ljd;	fV	getRestrictCenter
	m	()F	fW	getRestrictRadius
	m	()V	fX	clearRestriction
	m	()Z	fY	hasRestriction
	m	()Z	fZ	isNoAi
	m	()V	fm	serverAiStep
	m	()Lbtg;	fq	getMainArm
	m	()Z	ga	isLeftHanded
	m	()Z	gb	isAggressive
	m	()Lewx;	gc	getAttackBoundingBox
	m	()V	gd	playAttackSound
	m	()Z	ge	isSunBurnTick
	m	()V	gf	removeFreeWill
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	(Lbtn;)Z	i	isWithinMeleeAttackRange
		p	1		entity
	m	(Lcuq;)Lcuq;	i	equipItemIfPossible
		p	1		stack
	m	(Lcuq;)Z	j	canHoldItem
		p	1		stack
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	(Lcuq;)Z	l	isBodyArmorItem
		p	1		stack
	m	(Lcuq;)V	m	setBodyArmorItem
		p	1		stack
	m	()V	m_	aiStep
	m	(Lcuq;)D	o	getApproximateAttackDamageWithItem
		p	1		stack
	m	()Lbtn;	p	getTarget
	m	(Lcuq;)Z	p	hasAnyComponentExceptDamage
		p	0		stack
	m	(Lcuq;)V	q	lambda$removeAfterChangingDimensions$3
		p	0		stack
	m	(I)Z	r	isMaxGroupSizeReached
		p	1		count
	m	(Lcuq;)Z	r	lambda$dropPreservedEquipment$0
		p	0		stack
	m	()V	s	resetAmbientSoundTime
	m	(Z)V	u	setNoAi
		p	1		aiDisabled
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	v	setLeftHanded
		p	1		leftHanded
	m	(Z)V	w	setAggressive
		p	1		attacking
	m	()Z	y	canBeLeashed
	m	()V	z	leashTooFarBehaviour
	f	F	bH	MAX_WEARING_ARMOR_CHANCE
	f	F	bI	MAX_PICKUP_LOOT_CHANCE
	f	F	bJ	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bK	MAX_ENCHANTED_WEAPON_CHANCE
	f	F	bL	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	Lajw;	b	DATA_MOB_FLAGS_ID
	f	F	bM	PRESERVE_ITEM_DROP_CHANCE_THRESHOLD
	f	I	bN	PRESERVE_ITEM_DROP_CHANCE
	f	I	bO	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	Lakr;	bP	RANDOM_SPAWN_BONUS_ID
	f	I	bQ	ambientSoundTime
	f	I	bR	xpReward
	f	Lbzo;	bS	lookControl
	f	Lbzp;	bT	moveControl
	f	Lbzn;	bU	jumpControl
	f	Lcda;	bV	navigation
	f	Lcan;	bW	goalSelector
	f	Lcan;	bX	targetSelector
	f	[F	bY	handDropChances
	f	[F	bZ	armorDropChances
	f	I	c	MOB_FLAG_NO_AI
	f	F	ca	bodyArmorDropChance
	f	Lkh;	cb	ITEM_PICKUP_REACH
	f	D	cc	DEFAULT_ATTACK_REACH
	f	Lbzk;	cd	bodyRotationControl
	f	Lbtn;	ce	target
	f	Lcdx;	cf	sensing
	f	Ljv;	cg	handItems
	f	Ljv;	ch	armorItems
	f	Lcuq;	ci	bodyArmorItem
	f	Z	cj	canPickUpLoot
	f	Z	ck	persistenceRequired
	f	Ljava/util/Map;	cl	pathfindingMalus
	f	Lakq;	cm	lootTable
	f	J	cn	lootTableSeed
	f	Lbtk$a;	co	leashData
	f	Ljd;	cp	restrictCenter
	f	F	cq	restrictRadius
	f	I	d	MOB_FLAG_LEFTHANDED
	f	I	e	MOB_FLAG_AGGRESSIVE
	f	I	h	PICKUP_REACH
c	btp$1	net/minecraft/world/entity/EntityInsentient$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
	f	[I	b	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
c	btq	net/minecraft/world/entity/EnumCreatureType
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
		p	3		name
		p	4		spawnCap
		p	5		peaceful
		p	6		rare
		p	7		immediateDespawnRange
	m	()Ljava/lang/String;	a	getName
	m	()I	b	getMaxInstancesPerChunk
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Lbtq;	h	$values
	f	Lbtq;	a	MONSTER
	f	Lbtq;	b	CREATURE
	f	Lbtq;	c	AMBIENT
	f	Lbtq;	d	AXOLOTLS
	f	Lbtq;	e	UNDERGROUND_WATER_CREATURE
	f	Lbtq;	f	WATER_CREATURE
	f	Lbtq;	g	WATER_AMBIENT
	f	Lbtq;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	I	j	max
	f	Z	k	isFriendly
	f	Z	l	isPersistent
	f	Ljava/lang/String;	m	name
	f	I	n	noDespawnDistance
	f	I	o	despawnDistance
	f	[Lbtq;	p	$VALUES
c	btr	net/minecraft/world/entity/EnumMobSpawn
	m	()[Lbtr;	a	$values
	m	(Lbtr;)Z	a	isSpawner
		p	0		reason
	m	(Lbtr;)Z	b	ignoresLightRequirements
		p	0		reason
	f	Lbtr;	a	NATURAL
	f	Lbtr;	b	CHUNK_GENERATION
	f	Lbtr;	c	SPAWNER
	f	Lbtr;	d	STRUCTURE
	f	Lbtr;	e	BREEDING
	f	Lbtr;	f	MOB_SUMMONED
	f	Lbtr;	g	JOCKEY
	f	Lbtr;	h	EVENT
	f	Lbtr;	i	CONVERSION
	f	Lbtr;	j	REINFORCEMENT
	f	Lbtr;	k	TRIGGERED
	f	Lbtr;	l	BUCKET
	f	Lbtr;	m	SPAWN_EGG
	f	Lbtr;	n	COMMAND
	f	Lbtr;	o	DISPENSER
	f	Lbtr;	p	PATROL
	f	Lbtr;	q	TRIAL_SPAWNER
	f	[Lbtr;	r	$VALUES
c	bts	net/minecraft/world/entity/EnumMoveType
	m	()[Lbts;	a	$values
	f	Lbts;	a	SELF
	f	Lbts;	b	PLAYER
	f	Lbts;	c	PISTON
	f	Lbts;	d	SHULKER_BOX
	f	Lbts;	e	SHULKER
	f	[Lbts;	f	$VALUES
c	btt	net/minecraft/world/entity/IEntityAngerable
	m	()V	Z_	stopBeingAngry
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laqu;Z)V	a	updatePersistentAnger
		p	1		world
		p	2		angerPersistent
	m	(Lbtn;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Ldcw;Lub;)V	a	readPersistentAngerSaveData
		p	1		world
		p	2		nbt
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lbtn;)Z	a_	isAngryAt
		p	1		entity
	m	(Lcmx;)V	a_	playerDied
		p	1		player
	m	(Ldcw;)Z	a_	isAngryAtAllPlayers
		p	1		world
	m	(Lub;)V	a_	addPersistentAngerSaveData
		p	1		nbt
	m	()Z	ad_	isAngry
	m	()V	ae_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	()V	c	startPersistentAngerTimer
	m	(Lbtn;)Z	c	canAttack
		p	1		target
	m	(Lcmx;)V	c	setLastHurtByPlayer
		p	1		attacking
	m	()Lbtn;	ei	getLastHurtByMob
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	()Lbtn;	p	getTarget
	f	Ljava/lang/String;	c_	TAG_ANGER_TIME
	f	Ljava/lang/String;	d_	TAG_ANGRY_AT
c	btu	net/minecraft/world/entity/OminousItemSpawner
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcuq;)V	a	setItem
		p	1		stack
	m	(Ldcw;I)V	a	lambda$spawnItem$0
		p	2		event
	m	(Ldcw;Lcuq;)Lbtu;	a	create
		p	0		world
		p	1		stack
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bK	couldAcceptPassenger
	m	()Lepj;	j_	getPistonPushReaction
	m	()V	l	tick
	m	()V	p	addParticles
	m	(Lbsr;)V	p	addPassenger
		p	1		passenger
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Z	r_	isIgnoringBlockTriggers
	m	()Lcuq;	s	getItem
	m	()V	t	tickServer
	m	()V	v	tickClient
	m	()V	w	spawnItem
	f	I	b	TICKS_BEFORE_ABOUT_TO_SPAWN_SOUND
	f	I	c	SPAWN_ITEM_DELAY_MIN
	f	I	d	SPAWN_ITEM_DELAY_MAX
	f	Ljava/lang/String;	e	TAG_SPAWN_ITEM_AFTER_TICKS
	f	Ljava/lang/String;	f	TAG_ITEM
	f	Lajw;	g	DATA_ITEM
	f	J	h	spawnItemAfterTicks
c	btv	net/minecraft/world/entity/OwnableEntity
	m	()Lbtn;	T_	getOwner
	m	()Ljava/util/UUID;	aa_	getOwnerUUID
	m	()Ldcn;	e	level
c	btw	net/minecraft/world/entity/EntityCreature
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;F)Z	a	handleLeashAtDistance
		p	1		leashHolder
		p	2		distance
	m	(Ldcx;Lbtr;)Z	a	checkSpawnRules
		p	1		world
		p	2		spawnReason
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lbsr;)V	b	closeRangeLeashBehaviour
		p	1		entity
	m	(Ljd;)F	c	getWalkTargetValue
		p	1		pos
	m	()Z	gg	isPathFinding
	m	()Z	gh	isPanicking
	m	()Z	gi	shouldStayCloseToLeashHolder
	m	()D	gj	followLeashSpeed
	f	F	cb	DEFAULT_WALK_TARGET_VALUE
c	btx	net/minecraft/world/entity/PlayerRideable
c	bty	net/minecraft/world/entity/IJumpable
	m	()Z	a	canJump
	m	()V	b	handleStopJump
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	()I	c	getJumpCooldown
	m	(I)V	c	handleStartJump
		p	1		height
c	btz	net/minecraft/world/entity/PortalProcessor
	m	(Ldlr;Ljd;)V	<init>	<init>
		p	1		portal
		p	2		pos
	m	()Ldlr$a;	a	getPortalLocalTransition
	m	(Laqu;Lbsr;)Leqc;	a	getPortalDestination
		p	1		world
		p	2		entity
	m	(Laqu;Lbsr;Z)Z	a	processPortalTeleportation
		p	1		world
		p	2		entity
		p	3		canUsePortals
	m	(Ldlr;)Z	a	isSamePortal
		p	1		portal
	m	(Ljd;)V	a	updateEntryPosition
		p	1		pos
	m	(Z)V	a	setAsInsidePortalThisTick
		p	1		inPortal
	m	()Z	b	hasExpired
	m	()Ljd;	c	getEntryPosition
	m	()I	d	getPortalTime
	m	()Z	e	isInsidePortalThisTick
	m	()V	f	decayTick
	f	Ldlr;	a	portal
	f	Ljd;	b	entryPosition
	f	I	c	portalTime
	f	Z	d	insidePortalThisTick
c	bua	net/minecraft/world/entity/EntityPose
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	id
	m	()[Lbua;	b	$values
	f	Lbua;	a	STANDING
	f	Lbua;	b	FALL_FLYING
	f	Lbua;	c	SLEEPING
	f	Lbua;	d	SWIMMING
	f	Lbua;	e	SPIN_ATTACK
	f	Lbua;	f	CROUCHING
	f	Lbua;	g	LONG_JUMPING
	f	Lbua;	h	DYING
	f	Lbua;	i	CROAKING
	f	Lbua;	j	USING_TONGUE
	f	Lbua;	k	SITTING
	f	Lbua;	l	ROARING
	f	Lbua;	m	SNIFFING
	f	Lbua;	n	EMERGING
	f	Lbua;	o	DIGGING
	f	Lbua;	p	SLIDING
	f	Lbua;	q	SHOOTING
	f	Lbua;	r	INHALING
	f	Ljava/util/function/IntFunction;	s	BY_ID
	f	Lyx;	t	STREAM_CODEC
	f	I	u	id
	f	[Lbua;	v	$VALUES
c	bub	net/minecraft/world/entity/PowerableMob
	m	()Z	a	isPowered
c	buc	net/minecraft/world/entity/RelativeMovement
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		shift
	m	()I	a	getMask
	m	(I)Ljava/util/Set;	a	unpack
		p	0		mask
	m	(Ljava/util/Set;)I	a	pack
		p	0		flags
	m	()[Lbuc;	b	$values
	m	(I)Z	b	isSet
		p	1		mask
	f	Lbuc;	a	X
	f	Lbuc;	b	Y
	f	Lbuc;	c	Z
	f	Lbuc;	d	Y_ROT
	f	Lbuc;	e	X_ROT
	f	Ljava/util/Set;	f	ALL
	f	Ljava/util/Set;	g	ROTATION
	f	I	h	bit
	f	[Lbuc;	i	$VALUES
c	bud	net/minecraft/world/entity/ReputationHandler
	m	(Lcep;Lbsr;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
c	bue	net/minecraft/world/entity/ISaddleable
	m	(Lcuq;Lavq;)V	a	equipSaddle
		p	1		stack
		p	2		soundCategory
	m	()Lavo;	ac_	getSaddleSoundEvent
	m	()Z	f	isSaddleable
	m	()Z	i	isSaddled
c	buf	net/minecraft/world/entity/IShearable
	m	()Z	a	readyForShearing
	m	(Lavq;)V	a	shear
		p	1		shearedSoundCategory
c	bug	net/minecraft/world/entity/SlotAccess
	m	()Lcuq;	a	get
	m	(Lbqk;I)Lbug;	a	forContainer
		p	0		inventory
		p	1		index
	m	(Lbqk;ILjava/util/function/Predicate;)Lbug;	a	forContainer
		p	0		inventory
		p	1		index
		p	2		stackFilter
	m	(Lbtn;Lbsy;)Lbug;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
	m	(Lbtn;Lbsy;Ljava/util/function/Predicate;)Lbug;	a	forEquipmentSlot
		p	0		entity
		p	1		slot
		p	2		filter
	m	(Lcuq;)Z	a	set
		p	1		stack
	m	(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lbug;	a	of
		p	0		getter
		p	1		setter
	m	(Lcuq;)Z	b	lambda$forEquipmentSlot$1
		p	0		stack
	m	(Lcuq;)Z	c	lambda$forContainer$0
		p	0		stack
	f	Lbug;	a	NULL
c	bug$1	net/minecraft/world/entity/SlotAccess$1
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
c	bug$2	net/minecraft/world/entity/SlotAccess$2
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Ljava/util/function/Supplier;	b	val$getter
	f	Ljava/util/function/Consumer;	c	val$setter
c	bug$3	net/minecraft/world/entity/SlotAccess$3
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lbqk;	b	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
c	bug$4	net/minecraft/world/entity/SlotAccess$4
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lbtn;	b	val$entity
	f	Lbsy;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
c	buh	net/minecraft/world/entity/GroupDataEntity
c	bui	net/minecraft/world/entity/SpawnPlacementType
	m	(Ldcz;Ljd;)Ljd;	a	adjustSpawnPosition
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;Lbsx;)Z	isSpawnPositionOk	isSpawnPositionOk
		p	1		world
		p	2		pos
		p	3		entityType
c	buj	net/minecraft/world/entity/SpawnPlacementTypes
	m	(Ldcz;Ljd;Lbsx;)Z	a	lambda$static$2
		p	0		world
		p	1		pos
		p	2		entityType
	m	(Ldcz;Ljd;Lbsx;)Z	b	lambda$static$1
		p	0		world
		p	1		pos
		p	2		entityType
	m	(Ldcz;Ljd;Lbsx;)Z	c	lambda$static$0
		p	0		world
		p	1		pos
		p	2		entityType
	f	Lbui;	a	NO_RESTRICTIONS
	f	Lbui;	b	IN_WATER
	f	Lbui;	c	IN_LAVA
	f	Lbui;	d	ON_GROUND
c	buj$1	net/minecraft/world/entity/SpawnPlacementTypes$1
	m	(Ldcz;Ljd;)Ljd;	a	adjustSpawnPosition
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;Lbsx;)Z	a	isValidEmptySpawnBlock
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Ldcz;Ljd;Lbsx;)Z	isSpawnPositionOk	isSpawnPositionOk
		p	1		world
		p	2		pos
		p	3		entityType
c	buk	net/minecraft/world/entity/EntityPositionTypes
	m	(Lbsx;)Lbui;	a	getPlacementType
		p	0		type
	m	(Lbsx;Lbui;Ldyy$a;Lbuk$b;)V	a	register
		p	0		type
		p	1		location
		p	2		heightmapType
		p	3		predicate
	m	(Lbsx;Ldcz;Ljd;)Z	a	isSpawnPositionOk
		p	0		type
		p	1		world
		p	2		pos
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbsx;)Ldyy$a;	b	getHeightmapType
		p	0		type
	f	Ljava/util/Map;	a	DATA_BY_TYPE
c	buk$a	net/minecraft/world/entity/EntityPositionTypes$a
	m	(Ldyy$a;Lbui;Lbuk$b;)V	<init>	<init>
		p	1		heightmapType
		p	2		location
		p	3		predicate
	m	()Ldyy$a;	a	heightMap
	m	()Lbui;	b	placement
	m	()Lbuk$b;	c	predicate
	f	Ldyy$a;	a	heightMap
	f	Lbui;	b	placement
	f	Lbuk$b;	c	predicate
c	buk$b	net/minecraft/world/entity/EntityPositionTypes$b
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	test	test
		p	1		type
		p	2		world
		p	3		spawnReason
		p	4		pos
		p	5		random
c	bul	net/minecraft/world/entity/EntityTameableAnimal
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(III)Z	a	maybeTeleportTo
		p	1		x
		p	2		y
		p	3		z
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbsr;F)Z	a	handleLeashAtDistance
		p	1		leashHolder
		p	2		distance
	m	(Lbtn;Lbtn;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lcmx;)V	a	tame
		p	1		player
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	aa_	getOwnerUUID
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		uuid
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	b	setTame
		p	1		tamed
		p	2		updateAttributes
	m	(Lbtn;)Z	c	canAttack
		p	1		target
	m	()Leyb;	ck	getTeam
	m	()Ldcn;	e	level
	m	()Z	gk	isOrderedToSit
	m	()V	gl	tryToTeleportToOwner
	m	()Z	gm	shouldTryTeleportToOwner
	m	()Z	gn	unableToMoveToOwner
	m	()Z	go	canFlyToOwner
	m	(Ljd;)V	h	teleportToAroundBlockPos
		p	1		pos
	m	(Ljd;)Z	i	canTeleportTo
		p	1		pos
	m	(Lbtn;)Z	j	isOwnedBy
		p	1		entity
	m	()Z	s	isTame
	m	(Lbsr;)Z	s	isAlliedTo
		p	1		other
	m	()V	t	applyTamingSideEffects
	m	()Z	x	isInSittingPose
	m	(Z)V	x	spawnTamingParticles
		p	1		positive
	m	()Z	y	canBeLeashed
	m	(Z)V	y	setInSittingPose
		p	1		inSittingPose
	m	(Z)V	z	setOrderedToSit
		p	1		sitting
	f	I	cc	TELEPORT_WHEN_DISTANCE_IS_SQ
	f	Lajw;	cd	DATA_FLAGS_ID
	f	Lajw;	ce	DATA_OWNERUUID_ID
	f	I	cg	MIN_HORIZONTAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	I	ch	MAX_HORIZONTAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	I	ci	MAX_VERTICAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	Z	cj	orderedToSit
c	bul$a	net/minecraft/world/entity/EntityTameableAnimal$a
	m	(Lbul;D)V	<init>	<init>
		p	2		speed
	m	(Lbul;DLawu;)V	<init>	<init>
		p	2		speed
		p	4		dangerousDamageTypes
	m	()V	a	tick
	f	Lbul;	a	this$0
c	bum	net/minecraft/world/entity/Targeting
	m	()Lbtn;	p	getTarget
c	bun	net/minecraft/world/entity/TraceableEntity
	m	()Lbsr;	s	getOwner
c	buo	net/minecraft/world/entity/VariantHolder
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	d	getVariant
c	bup	net/minecraft/world/entity/WalkAnimationState
	m	()F	a	speed
	m	(F)V	a	setSpeed
		p	1		speed
	m	(FF)V	a	update
		p	1		speed
		p	2		multiplier
	m	()F	b	position
	m	(F)F	b	speed
		p	1		tickDelta
	m	()Z	c	isMoving
	m	(F)F	c	position
		p	1		tickDelta
	f	F	a	speedOld
	f	F	b	speed
	f	F	c	position
c	buq	net/minecraft/world/entity/ai/BehaviorController
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		memories
		p	2		sensors
		p	3		memoryEntries
		p	4		codecSupplier
	m	()V	a	clearMemories
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
		p	1		begin
		p	2		tasks
	m	(JJ)V	a	updateActivityFromSchedule
		p	1		timeOfDay
		p	3		time
	m	(Laqu;Lbtn;)V	a	tick
		p	1		world
		p	2		entity
	m	(Lccs;)Z	a	hasMemoryValue
		p	1		type
	m	(Lccs;Lcct;)Z	a	checkMemory
		p	1		type
		p	2		state
	m	(Lccs;Ljava/lang/Object;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lccs;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
		p	1		type
		p	2		value
		p	3		expiry
	m	(Lccs;Ljava/util/Optional;)V	a	setMemory
		p	1		type
		p	2		value
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
		p	1		ops
	m	(Lcom;)V	a	setActiveActivityIfPossible
		p	1		activity
	m	(Lcom;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		begin
		p	3		list
	m	(Lcom;ILcom/google/common/collect/ImmutableList;Lccs;)V	a	addActivityAndRemoveMemoryWhenStopped
		p	1		activity
		p	2		begin
		p	3		tasks
		p	4		memoryType
	m	(Lcom;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
		p	1		activity
		p	2		indexedTasks
	m	(Lcom;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
	m	(Lcom;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
		p	1		activity
		p	2		indexedTasks
		p	3		requiredMemories
		p	4		forgettingMemories
	m	(Lcop;)V	a	setSchedule
		p	1		schedule
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$3
		p	0		index
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
		p	1		value
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$2
		p	1		memoryValue
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lbuq$b;	a	provider
		p	0		memoryModules
		p	1		sensors
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
		p	1		activities
	m	(Ljava/util/Map$Entry;)Lbuq$a;	a	lambda$memories$0
		p	0		entry
	m	(Ljava/util/Set;)V	a	setCoreActivities
		p	1		coreActivities
	m	()Ljava/util/Map;	b	getMemories
	m	(Laqu;Lbtn;)V	b	stopAll
		p	1		world
		p	2		entity
	m	(Lccs;)V	b	eraseMemory
		p	1		type
	m	(Lccs;Ljava/lang/Object;)Z	b	isMemoryValue
		p	1		type
		p	2		value
	m	(Lccs;Ljava/util/Optional;)V	b	setMemoryInternal
		p	1		type
		p	2		memory
	m	(Lcom;)V	b	setDefaultActivity
		p	1		activity
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
		p	0		memoryModules
		p	1		sensors
	m	()Lcop;	c	getSchedule
	m	(Laqu;Lbtn;)V	c	tickSensors
		p	1		world
		p	2		entity
	m	(Lccs;)Ljava/util/Optional;	c	getMemory
		p	1		type
	m	(Lcom;)Z	c	isActive
		p	1		activity
	m	()Ljava/util/Set;	d	getActiveActivities
	m	(Laqu;Lbtn;)V	d	startEachNonRunningBehavior
		p	1		world
		p	2		entity
	m	(Lccs;)Ljava/util/Optional;	d	getMemoryInternal
		p	1		type
	m	(Lcom;)V	d	setActiveActivity
		p	1		except
	m	()Ljava/util/List;	e	getRunningBehaviors
	m	(Laqu;Lbtn;)V	e	tickEachRunningBehavior
		p	1		world
		p	2		entity
	m	(Lccs;)J	e	getTimeUntilExpiry
		p	1		type
	m	(Lcom;)V	e	eraseMemoriesForOtherActivitesThan
		p	1		except
	m	()V	f	useDefaultActivity
	m	(Lccs;)V	f	lambda$clearMemories$1
		p	1		type
	m	(Lcom;)Z	f	activityRequirementsAreMet
		p	1		activity
	m	()Ljava/util/Optional;	g	getActiveNonCoreActivity
	m	(Lcom;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$4
		p	0		activity2
	m	()V	h	removeAllBehaviors
	m	()Lbuq;	i	copyWithoutBehaviors
	m	()Ljava/util/stream/Stream;	j	memories
	m	()V	k	forgetOutdatedMemories
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lcop;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lcom;	l	defaultActivity
	f	J	m	lastScheduleUpdate
c	buq$1	net/minecraft/world/entity/ai/BehaviorController$1
	m	(Lbuq;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Lccs;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lccs;Lccr;)Lbuq$a;	a	lambda$captureRead$8
		p	1		data
	m	(Lccs;Lcom/mojang/serialization/Codec;)Lakr;	a	lambda$keys$0
		p	1		codec
	m	(Lccs;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
		p	1		memoryType
		p	2		ops
		p	3		value
	m	(Lcom/mojang/serialization/DynamicOps;Lakr;)Ljava/lang/Object;	a	lambda$keys$2
		p	1		id
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lccs;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
		p	3		memoryType
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lbuq$a;)V	a	lambda$encode$9
		p	2		entry
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$7
		p	2		codec
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
		p	3		pair
	m	(Lccs;)Ljava/lang/String;	b	lambda$captureRead$5
	m	(Lccs;)Ljava/util/stream/Stream;	c	lambda$keys$1
		p	0		memoryType
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
c	buq$a	net/minecraft/world/entity/ai/BehaviorController$a
	m	(Lccs;Ljava/util/Optional;)V	<init>	<init>
		p	1		type
		p	2		data
	m	(Lbuq;)V	a	setMemoryInternal
		p	1		brain
	m	(Lccs;Ljava/util/Optional;)Lbuq$a;	a	createUnchecked
		p	0		type
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
		p	1		ops
		p	2		builder
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
		p	3		codec
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lccr;)V	a	lambda$serialize$0
		p	4		data
	f	Lccs;	a	type
	f	Ljava/util/Optional;	b	value
c	buq$b	net/minecraft/world/entity/ai/BehaviorController$b
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
		p	1		memoryModules
		p	2		sensors
	m	()Lbuq;	a	lambda$makeBrain$1
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		data
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
c	bur	net/minecraft/world/entity/ai/attributes/AttributeBase
	m	(Ljava/lang/String;D)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
	m	()D	a	getDefaultValue
	m	(D)D	a	sanitizeValue
		p	1		value
	m	(Lbur$a;)Lbur;	a	setSentiment
		p	1		category
	m	(Z)Lbur;	a	setSyncable
		p	1		tracked
	m	()Z	b	isClientSyncable
	m	(Z)Ln;	b	getStyle
		p	1		addition
	m	()Ljava/lang/String;	c	getDescriptionId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	D	c	defaultValue
	f	Z	d	syncable
	f	Ljava/lang/String;	e	descriptionId
	f	Lbur$a;	f	sentiment
c	bur$a	net/minecraft/world/entity/ai/attributes/AttributeBase$a
	m	()[Lbur$a;	a	$values
	m	(Z)Ln;	a	getStyle
		p	1		addition
	f	Lbur$a;	a	POSITIVE
	f	Lbur$a;	b	NEUTRAL
	f	Lbur$a;	c	NEGATIVE
	f	[Lbur$a;	d	$VALUES
c	bus	net/minecraft/world/entity/ai/attributes/AttributeModifiable
	m	(Ljm;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		type
		p	2		updateCallback
	m	()Ljm;	a	getAttribute
	m	(D)V	a	setBaseValue
		p	1		baseValue
	m	(Lakr;)Lbuu;	a	getModifier
		p	1		id
	m	(Lbus;)V	a	replaceFrom
		p	1		other
	m	(Lbuu$a;)Ljava/util/Map;	a	getModifiers
		p	1		operation
	m	(Lbuu$a;Ljava/util/Map;)V	a	lambda$replaceFrom$1
		p	1		operation
		p	2		modifiers
	m	(Lbuu;)V	a	addOrUpdateTransientModifier
		p	1		modifier
	m	(Lub;)V	a	load
		p	1		nbt
	m	()D	b	getBaseValue
	m	(Lakr;)Z	b	hasModifier
		p	1		id
	m	(Lbuu$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
		p	1		operation
	m	(Lbuu;)V	b	addTransientModifier
		p	1		modifier
	m	()Ljava/util/Set;	c	getModifiers
	m	(Lakr;)Z	c	removeModifier
		p	1		id
	m	(Lbuu$a;)Ljava/util/Map;	c	lambda$getModifiers$0
		p	0		operationx
	m	(Lbuu;)V	c	addOrReplacePermanentModifier
		p	1		modifier
	m	()V	d	setDirty
	m	(Lbuu;)V	d	addPermanentModifier
		p	1		modifier
	m	()V	e	removeModifiers
	m	(Lbuu;)V	e	removeModifier
		p	1		modifier
	m	()D	f	getValue
	m	(Lbuu;)V	f	addModifier
		p	1		modifier
	m	()Lub;	g	save
	m	()D	h	calculateValue
	m	()Ljava/lang/IllegalStateException;	i	lambda$save$2
	f	Ljava/lang/String;	a	ID_FIELD
	f	Ljava/lang/String;	b	BASE_FIELD
	f	Ljava/lang/String;	c	MODIFIERS_FIELD
	f	Ljm;	d	attribute
	f	Ljava/util/Map;	e	modifiersByOperation
	f	Ljava/util/Map;	f	modifierById
	f	Ljava/util/Map;	g	permanentModifiers
	f	D	h	baseValue
	f	Z	i	dirty
	f	D	j	cachedValue
	f	Ljava/util/function/Consumer;	k	onDirty
c	but	net/minecraft/world/entity/ai/attributes/AttributeMapBase
	m	(Lbuv;)V	<init>	<init>
		p	1		defaultAttributes
	m	()Ljava/util/Set;	a	getAttributesToSync
	m	(Lakr;)V	a	lambda$load$8
	m	(Lbus;)V	a	onAttributeModified
		p	1		instance
	m	(Lbus;Lbuu;)V	a	lambda$removeAttributeModifiers$3
		p	1		modifier
	m	(Lbut;)V	a	assignAllValues
		p	1		other
	m	(Lcom/google/common/collect/Multimap;)V	a	addTransientAttributeModifiers
		p	1		modifiersMap
	m	(Ljm;)Lbus;	a	getInstance
		p	1		attribute
	m	(Ljm;Lakr;)Z	a	hasModifier
		p	1		attribute
		p	2		id
	m	(Ljm;Lbuu;)V	a	lambda$addTransientAttributeModifiers$2
		p	1		attribute
		p	2		modifier
	m	(Ljm;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$4
		p	1		attribute
		p	2		modifiers
	m	(Lub;Ljm$c;)V	a	lambda$load$7
		p	2		attribute
	m	(Luh;)V	a	load
		p	1		nbt
	m	()Ljava/util/Set;	b	getAttributesToUpdate
	m	(Lbus;)V	b	lambda$assignBaseValues$6
		p	1		attributeInstance
	m	(Lbut;)V	b	assignBaseValues
		p	1		other
	m	(Lcom/google/common/collect/Multimap;)V	b	removeAttributeModifiers
		p	1		modifiersMap
	m	(Ljm;)Z	b	hasAttribute
		p	1		attribute
	m	(Ljm;Lakr;)D	b	getModifierValue
		p	1		attribute
		p	2		id
	m	()Ljava/util/Collection;	c	getSyncableAttributes
	m	(Lbus;)V	c	lambda$assignAllValues$5
		p	1		attributeInstance
	m	(Ljm;)D	c	getValue
		p	1		attribute
	m	()Luh;	d	save
	m	(Lbus;)Z	d	lambda$getSyncableAttributes$0
		p	0		attribute
	m	(Ljm;)D	d	getBaseValue
		p	1		attribute
	m	(Ljm;)Lbus;	e	lambda$getInstance$1
		p	1		attribute
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	attributes
	f	Ljava/util/Set;	c	attributesToSync
	f	Ljava/util/Set;	d	attributesToUpdate
	f	Lbuv;	e	supplier
c	buu	net/minecraft/world/entity/ai/attributes/AttributeModifier
	m	()Lub;	a	save
	m	(Lakr;)Z	a	is
		p	1		id
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lub;)Lbuu;	a	load
		p	0		nbt
	m	()Lakr;	b	id
	m	()D	c	amount
	m	()Lbuu$a;	d	operation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lakr;	d	id
	f	D	e	amount
	f	Lbuu$a;	f	operation
	f	Lorg/slf4j/Logger;	g	LOGGER
c	buu$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		id
	m	()I	a	id
	m	()[Lbuu$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lbuu$a;	a	ADD_VALUE
	f	Lbuu$a;	b	ADD_MULTIPLIED_BASE
	f	Lbuu$a;	c	ADD_MULTIPLIED_TOTAL
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Lyx;	e	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	name
	f	I	h	id
	f	[Lbuu$a;	i	$VALUES
c	buv	net/minecraft/world/entity/ai/attributes/AttributeProvider
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		instances
	m	()Lbuv$a;	a	builder
	m	(Ljava/util/function/Consumer;Ljm;)Lbus;	a	createInstance
		p	1		updateCallback
		p	2		attribute
	m	(Ljm;)D	a	getValue
		p	1		attribute
	m	(Ljm;Lakr;)D	a	getModifierValue
		p	1		attribute
		p	2		id
	m	(Ljm;)D	b	getBaseValue
		p	1		attribute
	m	(Ljm;Lakr;)Z	b	hasModifier
		p	1		attribute
		p	2		id
	m	(Ljm;)Z	c	hasAttribute
		p	1		attribute
	m	(Ljm;)Lbus;	d	getAttributeInstance
		p	1		attribute
	f	Ljava/util/Map;	a	instances
c	buv$a	net/minecraft/world/entity/ai/attributes/AttributeProvider$Builder
	m	()Lbuv;	a	build
	m	(Ljm;)Lbuv$a;	a	add
		p	1		attribute
	m	(Ljm;D)Lbuv$a;	a	add
		p	1		attribute
		p	2		baseValue
	m	(Ljm;Lbus;)V	a	lambda$create$0
		p	2		attributex
	m	(Ljm;)Lbus;	b	create
		p	1		attribute
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	builder
	f	Z	b	instanceFrozen
c	buw	net/minecraft/world/entity/ai/attributes/GenericAttributes
	m	(Ljava/lang/String;Lbur;)Ljm;	a	register
		p	0		id
		p	1		attribute
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	f	Ljm;	A	SPAWN_REINFORCEMENTS_CHANCE
	f	Ljm;	B	STEP_HEIGHT
	f	Ljm;	C	SUBMERGED_MINING_SPEED
	f	Ljm;	D	SWEEPING_DAMAGE_RATIO
	f	Ljm;	E	WATER_MOVEMENT_EFFICIENCY
	f	Ljm;	a	ARMOR
	f	Ljm;	b	ARMOR_TOUGHNESS
	f	Ljm;	c	ATTACK_DAMAGE
	f	Ljm;	d	ATTACK_KNOCKBACK
	f	Ljm;	e	ATTACK_SPEED
	f	Ljm;	f	BLOCK_BREAK_SPEED
	f	Ljm;	g	BLOCK_INTERACTION_RANGE
	f	Ljm;	h	BURNING_TIME
	f	Ljm;	i	EXPLOSION_KNOCKBACK_RESISTANCE
	f	Ljm;	j	ENTITY_INTERACTION_RANGE
	f	Ljm;	k	FALL_DAMAGE_MULTIPLIER
	f	Ljm;	l	FLYING_SPEED
	f	Ljm;	m	FOLLOW_RANGE
	f	Ljm;	n	GRAVITY
	f	Ljm;	o	JUMP_STRENGTH
	f	Ljm;	p	KNOCKBACK_RESISTANCE
	f	Ljm;	q	LUCK
	f	Ljm;	r	MAX_ABSORPTION
	f	Ljm;	s	MAX_HEALTH
	f	Ljm;	t	MINING_EFFICIENCY
	f	Ljm;	u	MOVEMENT_EFFICIENCY
	f	Ljm;	v	MOVEMENT_SPEED
	f	Ljm;	w	OXYGEN_BONUS
	f	Ljm;	x	SAFE_FALL_DISTANCE
	f	Ljm;	y	SCALE
	f	Ljm;	z	SNEAKING_SPEED
c	bux	net/minecraft/world/entity/ai/attributes/AttributeDefaults
	m	()V	a	validate
	m	(Lakr;)V	a	lambda$validate$2
		p	0		id
	m	(Lbsx;)Lbuv;	a	getSupplier
		p	0		type
	m	(Lbsx;)Z	b	hasSupplier
		p	0		type
	m	(Lbsx;)Z	c	lambda$validate$1
		p	0		entityType
	m	(Lbsx;)Z	d	lambda$validate$0
		p	0		entityType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
c	buy	net/minecraft/world/entity/ai/attributes/AttributeRanged
	m	(Ljava/lang/String;DDD)V	<init>	<init>
		p	1		translationKey
		p	2		fallback
		p	4		min
		p	6		max
	m	(D)D	a	sanitizeValue
		p	1		value
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	f	D	c	minValue
	f	D	d	maxValue
c	bva	net/minecraft/world/entity/ai/behavior/BehaviorFindPosition
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$create$0
		p	2		entry
	m	(Laqu;JJ)Lbva$a;	a	lambda$create$5
	m	(Laqu;Lbtw;Ljava/lang/Byte;)V	a	lambda$create$3
		p	2		status
	m	(Lbtp;Ljava/util/Set;)Leps;	a	findPathToPois
		p	0		entity
		p	1		pois
	m	(Lbws;Lbyv;)Lbyx;	a	lambda$create$9
		p	1		poiPos
	m	(Lccs;Lbws;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	2		context
	m	(Lccs;ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$8
		p	0		context
	m	(Lces;Ljava/util/function/Predicate;Ljd;Lbyv;Laqu;Ljava/util/Optional;Lbtw;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljm;)V	a	lambda$create$4
		p	8		poiType
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;JLjd;)Z	a	lambda$create$1
		p	3		pos
	m	(Ljava/util/function/Predicate;Lccs;Lccs;ZLjava/util/Optional;)Lbvi;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		potentialPoiPosModule
		p	3		onlyRunIfChild
		p	4		entityStatus
	m	(Ljava/util/function/Predicate;Lccs;ZLjava/util/Optional;)Lbvi;	a	create
		p	0		poiPredicate
		p	1		poiPosModule
		p	2		onlyRunIfChild
		p	3		entityStatus
	m	(Ljd;Ljm;Ljd;)Z	a	lambda$create$2
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Lbyv;Ljava/util/Optional;Laqu;Lbtw;J)Z	a	lambda$create$6
		p	6		world
		p	7		entity
		p	8		time
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/Optional;Lbyv;)Lbyx;	a	lambda$create$7
		p	5		queryResult
	f	I	a	SCAN_RANGE
c	bva$a	net/minecraft/world/entity/ai/behavior/BehaviorFindPosition$a
	m	(Layw;J)V	<init>	<init>
		p	1		random
		p	2		time
	m	(J)V	a	markAttempt
		p	1		time
	m	(J)Z	b	isStillValid
		p	1		time
	m	(J)Z	c	shouldRetry
		p	1		time
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Layw;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
c	bvb	net/minecraft/world/entity/ai/behavior/BehaviorMakeLoveAnimal
	m	(Lbsx;)V	<init>	<init>
		p	1		targetType
	m	(Lbsx;FI)V	<init>	<init>
		p	1		targetType
		p	2		speed
		p	3		approachDistance
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcfe;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcfe;J)V	a	start
	m	(Lcfe;)Lcfe;	a	getBreedTarget
		p	1		animal
	m	(Lcfe;Lbtn;)Z	a	lambda$findValidBreedPartner$0
		p	2		entity
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcfe;J)Z	b	canStillUse
	m	(Lcfe;)Z	b	hasBreedTargetOfRightType
		p	1		animal
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcfe;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcfe;)Ljava/util/Optional;	c	findValidBreedPartner
		p	1		animal
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcfe;J)V	d	stop
	f	I	c	BREED_RANGE
	f	I	d	MIN_DURATION
	f	I	e	MAX_DURATION
	f	Lbsx;	f	partnerType
	f	F	g	speedModifier
	f	I	h	closeEnoughDistance
	f	I	i	DEFAULT_CLOSE_ENOUGH_DISTANCE
	f	J	j	spawnChildAtTime
c	bvc	net/minecraft/world/entity/ai/behavior/AnimalPanic
	m	(F)V	<init>	<init>
		p	1		speed
	m	(FLjava/util/function/Function;)V	<init>	<init>
		p	1		speed
		p	2		entityToDangerousDamageTypes
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtw;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtw;)Lawu;	a	lambda$new$0
		p	0		entity
	m	(Lbtw;Laqu;)Lexc;	a	getPanicPos
		p	1		entity
		p	2		world
	m	(Lbtw;Lbrk;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$1
		p	2		hurtBy
	m	(Ldcc;Lbsr;)Ljava/util/Optional;	a	lookForWater
		p	1		world
		p	2		entity
	m	(Ldcc;Ljd;)Z	a	lambda$lookForWater$4
		p	1		pos
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	b	start
	m	(Ldcc;Ljd;)Z	b	lambda$lookForWater$3
		p	1		pos
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	c	stop
	m	(Ldcc;Ljd;)Z	c	lambda$lookForWater$2
		p	1		posx
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	d	tick
	f	I	c	PANIC_MIN_DURATION
	f	I	d	PANIC_MAX_DURATION
	f	I	e	PANIC_DISTANCE_HORIZONTAL
	f	I	f	PANIC_DISTANCE_VERTICAL
	f	F	g	speedMultiplier
	f	Ljava/util/function/Function;	h	panicCausingDamageTypes
c	bvd	net/minecraft/world/entity/ai/behavior/BehaviorCareer
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	1		potentialJobSite
		p	2		jobSite
	m	(Lbyu$b;Lbyv;Lbyv;Laqu;Lcmk;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lcmk;Laqu;Lcmn;)V	a	lambda$create$3
		p	2		profession
	m	(Ljl;Laqu;)Ljava/util/Optional;	a	lambda$create$0
		p	1		jobSiteWorld
	m	(Ljm;)Ljava/util/Optional;	a	lambda$create$2
		p	0		poiType
	m	(Ljm;Lcmn;)Z	a	lambda$create$1
		p	1		profession
c	bve	net/minecraft/world/entity/ai/behavior/BehaviorFollowAdult
	m	(FLbtn;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lbqc;F)Lbws;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbqc;Ljava/util/function/Function;)Lbws;	a	create
		p	0		executionRange
		p	1		speed
	m	(Lbqc;Ljava/util/function/Function;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lbyu$b;Lbqc;Ljava/util/function/Function;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	3		nearestVisibleAdult
		p	4		lookTarget
		p	5		walkTarget
	m	(Lbyu$b;Lbyv;Lbqc;Ljava/util/function/Function;Lbyv;Lbyv;Laqu;Lbsl;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bvf	net/minecraft/world/entity/ai/behavior/BehaviorRetreat
	m	(IF)Lbws;	a	create
		p	0		distance
		p	1		forwardMovement
	m	(IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lbyu$b;IFLbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		walkTarget
		p	4		lookTarget
		p	5		attackTarget
		p	6		visibleMobs
	m	(Lbyu$b;Lbyv;ILbyv;Lbyv;FLaqu;Lbtp;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bvg	net/minecraft/world/entity/ai/behavior/BehaviorPacify
	m	(ILbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	1		attackTarget
		p	2		pacified
		p	3		requiredMemoryResult
	m	(Lbyv;ILbyv;Laqu;Lbtn;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lccs;)Ljava/lang/String;	a	lambda$create$0
	m	(Lccs;I)Lbvi;	a	create
		p	0		requiredMemory
		p	1		duration
	m	(Lccs;ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
c	bvh	net/minecraft/world/entity/ai/behavior/Behavior
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		requiredMemoryState
	m	(Ljava/util/Map;I)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		runTime
	m	(Ljava/util/Map;II)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		minRunTime
		p	3		maxRunTime
	m	()Lbvh$a;	a	getStatus
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;)Z	a	hasRequiredMemories
		p	1		entity
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	DEFAULT_DURATION
	f	Ljava/util/Map;	b	entryCondition
	f	Lbvh$a;	c	status
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
c	bvh$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	m	()[Lbvh$a;	a	$values
	f	Lbvh$a;	a	STOPPED
	f	Lbvh$a;	b	RUNNING
	f	[Lbvh$a;	c	$VALUES
c	bvi	net/minecraft/world/entity/ai/behavior/BehaviorControl
	m	()Lbvh$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
c	bvj	net/minecraft/world/entity/ai/behavior/BehaviorUtil
	m	(Laqu;ILkf;)Z	a	lambda$findSectionClosestToVillage$2
		p	2		sectionPos
	m	(Laqu;Lkf;I)Lkf;	a	findSectionClosestToVillage
		p	0		world
		p	1		center
		p	2		radius
	m	(Lbsr;)Lbtn;	a	lambda$getLivingEntityFromUUIDMemory$4
		p	0		target
	m	(Lbsx;Lbtn;)Z	a	lambda$targetIsValid$0
		p	1		entity
	m	(Lbtn;)Z	a	isBreeding
		p	0		entity
	m	(Lbtn;Lbsr;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbtn;Lbtn;)V	a	lookAtEntity
		p	0		entity
		p	1		target
	m	(Lbtn;Lbtn;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
		p	0		source
		p	1		target
		p	2		extraDistance
	m	(Lbtn;Lbtn;FI)V	a	lockGazeAndWalkToEachOther
		p	0		first
		p	1		second
		p	2		speed
		p	3		walkCompletionRange
	m	(Lbtn;Lbtn;Lbtn;)Lbtn;	a	getTargetNearestMe
		p	0		source
		p	1		first
		p	2		second
	m	(Lbtn;Lbwv;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbtn;Lccs;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
		p	0		entity
		p	1		uuidMemoryModule
	m	(Lbtn;Lcuq;Lexc;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
	m	(Lbtn;Lcuq;Lexc;Lexc;F)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		targetLocation
		p	3		velocityFactor
		p	4		yOffset
	m	(Lbtn;Ljava/util/Optional;Lbtn;)Lbtn;	a	getNearestTarget
		p	0		source
		p	1		first
		p	2		second
	m	(Lbtn;Ljava/util/UUID;)Lbsr;	a	lambda$getLivingEntityFromUUIDMemory$3
		p	1		uuid
	m	(Lbtn;Ljd;FI)V	a	setWalkAndLookTargetMemories
		p	0		entity
		p	1		target
		p	2		speed
		p	3		completionRange
	m	(Lbtp;Lbtn;I)Z	a	isWithinAttackRange
		p	0		mob
		p	1		target
		p	2		rangedWeaponReachReduction
	m	(Lbtw;II)Lexc;	a	getRandomSwimmablePos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbuq;Lbtn;)Z	a	entityIsVisible
		p	0		brain
		p	1		target
	m	(Lbuq;Lccs;Lbsx;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryModuleType
		p	2		entityType
	m	(Lbuq;Lccs;Ljava/util/function/Predicate;)Z	a	targetIsValid
		p	0		brain
		p	1		memoryType
		p	2		filter
	m	(Lbtn;Lbtn;)Z	b	canSee
		p	0		source
		p	1		target
	m	(Lbtn;Lbtn;FI)V	b	setWalkAndLookTargetMemoriesToEachOther
		p	0		first
		p	1		second
		p	2		speed
		p	3		completionRange
	m	(Lbuq;Lbtn;)Z	b	lambda$targetIsValid$1
		p	1		target
	m	(Lbtn;Lbtn;)V	c	lookAtEachOther
		p	0		first
		p	1		second
c	bvk	net/minecraft/world/entity/ai/behavior/BehaviorTarget
	m	(Lexc;)V	<init>	<init>
		p	1		pos
	m	(Ljd;)V	<init>	<init>
		p	1		blockPos
	m	()Lexc;	a	currentPosition
	m	(Lbtn;)Z	a	isVisibleBy
		p	1		entity
	m	()Ljd;	b	currentBlockPosition
	f	Ljd;	a	blockPos
	f	Lexc;	b	centerPosition
c	bvl	net/minecraft/world/entity/ai/behavior/BehaviorCelebrate
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcti;I)Lcuq;	a	getFirework
		p	1		color
		p	2		flight
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lcoi;	c	currentRaid
c	bvm	net/minecraft/world/entity/ai/behavior/BehaviorExpirableMemory
	m	(Lccs;Lccs;Ljava/util/function/Predicate;Lbqc;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	4		context
	m	(Ljava/util/function/Predicate;Lbyu$b;Lbqc;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		source
		p	4		target
	m	(Ljava/util/function/Predicate;Lbyv;Lbyu$b;Lbyv;Lbqc;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	m	(Ljava/util/function/Predicate;Lccs;Lccs;Lbqc;)Lbvi;	a	create
		p	0		runPredicate
		p	1		sourceType
		p	2		targetType
		p	3		expiry
c	bvn	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	m	(Lccs;)V	<init>	<init>
		p	1		moduleType
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;)Ljava/util/Optional;	b	getCooldownTickMemory
		p	1		entity
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	Lccs;	c	cooldownTicks
c	bvo	net/minecraft/world/entity/ai/behavior/Croak
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgy;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;J)V	b	start
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;J)V	d	tick
	f	I	c	CROAK_TICKS
	f	I	d	TIME_OUT_DURATION
	f	I	e	croakCounter
c	bvp	net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtp;Lbtn;)V	a	crossbowAttack
		p	1		entity
		p	2		target
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	b	tick
	m	(Lbtn;)Lbtn;	b	getAttackTarget
		p	0		entity
	m	(Lbtp;Lbtn;)V	b	lookAtTarget
		p	1		entity
		p	2		target
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	c	stop
	f	I	c	TIMEOUT
	f	I	d	attackDelay
	f	Lbvp$a;	e	crossbowState
c	bvp$a	net/minecraft/world/entity/ai/behavior/BehaviorCrossbowAttack$BowState
	m	()[Lbvp$a;	a	$values
	f	Lbvp$a;	a	UNCHARGED
	f	Lbvp$a;	b	CHARGING
	f	Lbvp$a;	c	CHARGED
	f	Lbvp$a;	d	READY_TO_ATTACK
	f	[Lbvp$a;	e	$VALUES
c	bvq	net/minecraft/world/entity/ai/behavior/BehaviorStopRiding
	m	(ILjava/util/function/BiPredicate;)Lbvi;	a	create
		p	0		range
		p	1		alternativeRideCondition
	m	(ILjava/util/function/BiPredicate;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lbtn;Lbsr;I)Z	a	isVehicleValid
		p	0		entity
		p	1		vehicle
		p	2		range
	m	(Lbyu$b;ILjava/util/function/BiPredicate;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		rideTarget
	m	(Lbyu$b;Lbyv;ILjava/util/function/BiPredicate;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	bvr	net/minecraft/world/entity/ai/behavior/BehaviorNop
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	()Lbvh$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	I	a	minDuration
	f	I	b	maxDuration
	f	Lbvh$a;	c	status
	f	J	d	endTimestamp
c	bvs	net/minecraft/world/entity/ai/behavior/BehaviorPositionEntity
	m	(Lbsr;Z)V	<init>	<init>
		p	1		entity
		p	2		useEyeHeight
	m	()Lexc;	a	currentPosition
	m	(Lbtn;)Z	a	isVisibleBy
		p	1		entity
	m	()Ljd;	b	currentBlockPosition
	m	()Lbsr;	c	getEntity
	f	Lbsr;	a	entity
	f	Z	b	trackEyeHeight
c	bvt	net/minecraft/world/entity/ai/behavior/BehaviorRemoveMemory
	m	(Lccs;Ljava/util/function/Predicate;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		queryResult
	m	(Ljava/util/function/Predicate;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Ljava/util/function/Predicate;Lccs;)Lbvi;	a	create
		p	0		condition
		p	1		memory
c	bvu	net/minecraft/world/entity/ai/behavior/FollowTemptation
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
		p	2		stopDistanceGetter
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtw;)F	a	getSpeedModifier
		p	1		entity
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	b	start
	m	(Lbtn;)Ljava/lang/Double;	b	lambda$new$0
		p	0		entity
	m	(Lbtw;)Ljava/util/Optional;	b	getTemptingPlayer
		p	1		entity
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$new$1
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	d	tick
	f	I	c	TEMPTATION_COOLDOWN
	f	D	d	DEFAULT_CLOSE_ENOUGH_DIST
	f	D	e	BACKED_UP_CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	f	speedModifier
	f	Ljava/util/function/Function;	g	closeEnoughDistance
c	bvv	net/minecraft/world/entity/ai/behavior/BehaviorGate
	m	(Ljava/util/Map;Ljava/util/Set;Lbvv$a;Lbvv$b;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		memoriesToForgetWhenStopped
		p	3		order
		p	4		runMode
		p	5		tasks
	m	()Lbvh$a;	a	getStatus
	m	(Laqu;Lbtn;JLbvi;)V	a	lambda$doStop$5
		p	4		task
	m	(Lbtn;)Z	a	hasRequiredMemories
		p	1		entity
	m	(Lbvi;)Z	a	lambda$toString$6
		p	0		task
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
		p	1		task
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;JLbvi;)V	b	lambda$tickOrStop$2
		p	4		task
	m	(Lbvi;)Z	b	lambda$doStop$4
		p	0		task
	m	(Lbvi;)Z	c	lambda$tickOrStop$3
		p	0		task
	m	(Lbvi;)Z	d	lambda$tickOrStop$1
		p	0		task
	m	(Laqu;Lbtn;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/util/Map;	a	entryCondition
	f	Ljava/util/Set;	b	exitErasedMemories
	f	Lbvv$a;	c	orderPolicy
	f	Lbvv$b;	d	runningPolicy
	f	Lbxq;	e	behaviors
	f	Lbvh$a;	f	status
c	bvv$a	net/minecraft/world/entity/ai/behavior/BehaviorGate$Order
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
		p	3		listModifier
	m	()[Lbvv$a;	a	$values
	m	(Lbxq;)V	a	apply
		p	1		list
	m	(Lbxq;)V	b	lambda$static$0
		p	0		list
	f	Lbvv$a;	a	ORDERED
	f	Lbvv$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lbvv$a;	d	$VALUES
c	bvv$b	net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution
	m	()[Lbvv$b;	a	$values
	m	(Ljava/util/stream/Stream;Laqu;Lbtn;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
	f	Lbvv$b;	a	RUN_ONE
	f	Lbvv$b;	b	TRY_ALL
	f	[Lbvv$b;	c	$VALUES
c	bvv$b$1	net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution$1
	m	(Laqu;Lbtn;JLbvi;)Z	a	lambda$apply$1
		p	4		task
	m	(Lbvi;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Laqu;Lbtn;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bvv$b$2	net/minecraft/world/entity/ai/behavior/BehaviorGate$Execution$2
	m	(Laqu;Lbtn;JLbvi;)V	a	lambda$apply$1
		p	4		task
	m	(Lbvi;)Z	a	lambda$apply$0
		p	0		task
	m	(Ljava/util/stream/Stream;Laqu;Lbtn;J)V	a	apply
		p	1		tasks
		p	2		world
		p	3		entity
		p	4		time
c	bvw	net/minecraft/world/entity/ai/behavior/BehaviorVillageHeroGift
	m	(I)V	<init>	<init>
		p	1		delay
	m	(Laqu;)I	a	calculateTimeUntilNextGift
		p	0		world
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)V	a	start
	m	(Lcmk;)Ljava/util/List;	a	getItemToThrow
		p	1		villager
	m	(Lcmk;Lbtn;)V	a	throwGift
		p	1		villager
		p	2		recipient
	m	(Lcmk;Lcmx;)Z	a	isWithinThrowingDistance
		p	1		villager
		p	2		player
	m	(Lcmx;)Z	a	isHero
		p	1		player
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		gifts
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)Z	b	canStillUse
	m	(Lcmk;)Z	b	isHeroVisible
		p	1		villager
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmk;)Ljava/util/Optional;	c	getNearestTargetableHero
		p	1		villager
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	stop
	f	I	c	THROW_GIFT_AT_DISTANCE
	f	I	d	MIN_TIME_BETWEEN_GIFTS
	f	I	e	MAX_TIME_BETWEEN_GIFTS
	f	I	f	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	g	GIFTS
	f	F	h	SPEED_MODIFIER
	f	I	i	timeUntilNextGift
	f	Z	j	giftGivenDuringThisRun
	f	J	k	timeSinceStart
c	bvx	net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	m	(Ljava/util/function/Function;FI)V	<init>	<init>
		p	1		lookTargetFunction
		p	2		speed
		p	3		runTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;Lbwv;)V	a	lambda$start$0
		p	2		target
	m	(Lbtn;Lcuq;Lexc;)V	a	throwItem
		p	0		entity
		p	1		stack
		p	2		target
	m	(Lbwv;)Lexc;	a	getThrowPosition
		p	0		target
	m	(Lbwv;Lcuq;Laqv;)V	a	triggerDropItemOnBlock
		p	1		target
		p	2		stack
		p	3		player
	m	(Lbtn;)Z	b	canThrowItemToTarget
		p	1		entity
	m	(Lbwv;Lcuq;Laqv;)V	b	lambda$tick$1
		p	3		player
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CLOSE_ENOUGH_DISTANCE_TO_TARGET
	f	I	d	ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	f	Ljava/util/function/Function;	e	targetPositionGetter
	f	F	f	speedModifier
c	bvy	net/minecraft/world/entity/ai/behavior/BehaviorNearestVillage
	m	(FI)Lbvi;	a	create
		p	0		speed
		p	1		completionRange
	m	(FILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(FILbyv;)Lbyx;	a	lambda$create$2
		p	2		walkTarget
	m	(Lbyv;FILaqu;Lcmk;J)Z	a	lambda$create$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lces;Ljd;)D	a	lambda$create$0
		p	1		pos
c	bvz	net/minecraft/world/entity/ai/behavior/BehaviorPotentialJobSite
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Ljl;)V	a	lambda$stop$2
		p	1		pos
	m	(Lcom;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
		p	0		activity
	m	(Ljm;)Z	a	lambda$stop$1
		p	0		poiType
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	tick
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	stop
	f	F	c	speedModifier
	f	I	d	TICKS_UNTIL_TIMEOUT
c	bwa	net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	m	(Layw;)I	a	getRandomOffset
		p	0		random
	m	(Lbtp;Ljd;)Ljd;	a	getNearbyPos
		p	0		mob
		p	1		pos
	m	(Lbyu$b;IFLbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		pos
		p	4		attackTarget
		p	5		walkTarget
		p	6		lookTarget
	m	(Lbyu$b;Lbyv;IFLaqu;Lbtp;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
	m	(Lccs;IF)Lbws;	a	create
		p	0		posModule
		p	1		completionRange
		p	2		speed
	m	(Lccs;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
c	bwb	net/minecraft/world/entity/ai/behavior/BehaviorFindAdmirableItem
	m	(FZI)Lbvi;	a	create
		p	0		speed
		p	1		requiresWalkTarget
		p	2		radius
	m	(Lbtn;)Z	a	lambda$create$0
		p	0		entity
	m	(Lbyu$b;Lbyv;Lbyv;Ljava/util/function/Predicate;IFLbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$1
		p	8		world
		p	9		entity
		p	10		time
	m	(Lbyu$b;Ljava/util/function/Predicate;IFLbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	4		lookTarget
		p	5		walkTarget
		p	6		nearestVisibleWantedItem
		p	7		itemPickupCooldownTicks
	m	(Ljava/util/function/Predicate;FZI)Lbvi;	a	create
		p	0		startCondition
		p	1		speed
		p	2		requiresWalkTarget
		p	3		radius
	m	(ZLjava/util/function/Predicate;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
c	bwc	net/minecraft/world/entity/ai/behavior/BehaviorFarm
	m	(Laqu;)Ljd;	a	getValidFarmland
		p	1		world
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)V	a	start
	m	(Ljd;Laqu;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)Z	d	canStillUse
	f	F	c	SPEED_MODIFIER
	f	I	d	HARVEST_DURATION
	f	Ljd;	e	aboveFarmlandPos
	f	J	f	nextOkStartTime
	f	I	g	timeWorkedSoFar
	f	Ljava/util/List;	h	validFarmlandAroundVillager
c	bwd	net/minecraft/world/entity/ai/behavior/BehaviorStrollInside
	m	(F)Lbvi;	a	create
		p	0		speed
	m	(FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(FLbyv;)Lbyx;	a	lambda$create$5
		p	1		walkTarget
	m	(Laqu;Lbtw;Ljd;)Z	a	lambda$create$2
		p	2		pos
	m	(Laqu;Ljd;)Z	a	lambda$create$0
		p	1		pos
	m	(Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$4
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbyv;FLjd;)V	a	lambda$create$3
		p	2		pos
	m	(Laqu;Lbtw;Ljd;)Z	b	lambda$create$1
		p	2		pos
c	bwe	net/minecraft/world/entity/ai/behavior/BehaviorInteract
	m	(Lbsx;ILccs;FI)Lbvi;	a	of
		p	0		type
		p	1		maxDistance
		p	2		targetModule
		p	3		speed
		p	4		completionRange
	m	(Lbsx;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lccs;FI)Lbvi;	a	of
		p	0		type
		p	1		maxDistance
		p	2		entityPredicate
		p	3		targetPredicate
		p	4		targetModule
		p	5		speed
		p	6		completionRange
	m	(Lbsx;Ljava/util/function/Predicate;Lbtn;)Z	a	lambda$of$2
		p	2		entity
	m	(Lbtn;)Z	a	lambda$of$1
		p	0		entity
	m	(Lbtn;ILjava/util/function/Predicate;Lbtn;)Z	a	lambda$of$3
		p	3		target
	m	(Lbyu$b;Lbyv;Ljava/util/function/Predicate;Ljava/util/function/Predicate;ILbyv;Lbyv;Lbyv;FILaqu;Lbtn;J)Z	a	lambda$of$5
		p	10		world
		p	11		entity
		p	12		time
	m	(Lbyu$b;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$of$6
		p	6		targetValue
		p	7		lookTarget
		p	8		walkTarget
		p	9		visibleMobs
	m	(Lbyv;Lbyv;Lbyv;FILbtn;)V	a	lambda$of$4
		p	5		target
	m	(Lccs;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$of$7
		p	6		context
	m	(Lbtn;)Z	b	lambda$of$0
		p	0		entity
c	bwf	net/minecraft/world/entity/ai/behavior/BehaviorInteractDoor
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;Lepq;Lepq;Lbyu$b;Lbyv;Ljava/util/Set;)V	a	lambda$create$2
		p	6		doors
	m	(Laqu;Lbtn;Lepq;Lepq;Ljava/util/Set;Ljava/util/Optional;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
		p	0		world
		p	1		entity
		p	2		lastNode
		p	3		currentNode
		p	4		doors
		p	5		otherMobs
	m	(Laqu;Lbtn;Ljl;)Z	a	isDoorTooFarAway
		p	0		world
		p	1		entity
		p	2		doorPos
	m	(Lbtn;Lbtn;)Z	a	lambda$areOtherMobsComingThroughDoor$7
		p	1		mob
	m	(Lbtn;Ljd;Ljava/util/Optional;)Z	a	areOtherMobsComingThroughDoor
		p	0		entity
		p	1		pos
		p	2		otherMobs
	m	(Lbuq;Ljd;)Z	a	isMobComingThroughDoor
		p	0		brain
		p	1		pos
	m	(Lbyu$b;Lbyv;Lbyv;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyu$b;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$4
		p	3		path
		p	4		doorsToClose
		p	5		mobs
	m	(Lbyv;Ljava/util/Optional;Laqu;Ljd;)Ljava/util/Optional;	a	rememberDoorToClose
		p	0		queryResult
		p	1		doors
		p	2		world
		p	3		pos
	m	(Ldtb$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$6
		p	0		state
	m	(Ljd;Lbtn;)Z	a	lambda$areOtherMobsComingThroughDoor$9
		p	1		mob
	m	(Ljl;Lbyv;)Ljava/util/Set;	a	lambda$rememberDoorToClose$11
	m	(Ljl;Ljava/util/Set;)Ljava/util/Set;	a	lambda$rememberDoorToClose$10
		p	1		doorSet
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	2		context
	m	(Ldtb$a;)Z	b	lambda$create$1
		p	0		state
	m	(Ljd;Lbtn;)Z	b	lambda$areOtherMobsComingThroughDoor$8
		p	1		mob
	m	(Ldtb$a;)Z	c	lambda$create$0
		p	0		state
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	b	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	c	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
c	bwg	net/minecraft/world/entity/ai/behavior/BehaviorBedJump
	m	(F)V	<init>	<init>
		p	1		walkSpeed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;J)V	a	start
	m	(Laqu;Lbtp;Ljd;)V	a	lambda$start$0
		p	3		pos
	m	(Laqu;Ljd;)Z	a	isBed
		p	1		world
		p	2		pos
	m	(Lbtp;)Ljava/util/Optional;	a	getNearestBed
		p	1		mob
	m	(Lbtp;Ljd;)V	a	startWalkingTowardsBed
		p	1		mob
		p	2		pos
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	b	nearBed
		p	1		world
		p	2		mob
	m	(Laqu;Lbtp;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	c	onOrOverBed
		p	1		world
		p	2		mob
	m	(Laqu;Lbtp;J)Z	c	canStillUse
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	d	onBedSurface
		p	1		world
		p	2		mob
	m	(Laqu;Lbtp;J)V	d	tick
	m	(Laqu;Lbtp;)Z	e	tiredOfWalking
		p	1		world
		p	2		mob
	m	(Laqu;Lbtp;)Z	f	tiredOfJumping
		p	1		world
		p	2		mob
	f	I	c	MAX_TIME_TO_REACH_BED
	f	I	d	MIN_JUMPS
	f	I	e	MAX_JUMPS
	f	I	f	COOLDOWN_BETWEEN_JUMPS
	f	F	g	speedModifier
	f	Ljd;	h	targetBed
	f	I	i	remainingTimeToReachBed
	f	I	j	remainingJumps
	f	I	k	remainingCooldownUntilNextJump
c	bwh	net/minecraft/world/entity/ai/behavior/BehaviorHome
	m	(IFI)Lbws;	a	create
		p	0		maxDistance
		p	1		walkSpeed
		p	2		preferredDistance
	m	(IIFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
		p	3		context
	m	(IILbyu$b;FLbyv;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$9
		p	4		walkTarget
		p	5		home
		p	6		hidingPlace
		p	7		path
		p	8		lookTarget
		p	9		breedTarget
		p	10		interactionTarget
	m	(IILbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;FLaqu;Lbtn;J)Z	a	lambda$create$8
		p	11		world
		p	12		entity
		p	13		time
	m	(Laqu;Lbtn;I)Ljava/util/Optional;	a	lambda$create$5
	m	(Lbtn;ILjd;)Z	a	lambda$create$2
		p	2		pos
	m	(Lbyu$b;Lbyv;)Ljava/util/Optional;	a	lambda$create$6
	m	(Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;Laqu;Lbtn;ILbyv;FLjd;)V	a	lambda$create$7
		p	10		pos
	m	(Ljd;)Z	a	lambda$create$4
		p	0		pos
	m	(Ljm;)Z	a	lambda$create$3
		p	0		poiType
	m	(Ljd;)Z	b	lambda$create$1
		p	0		pos
	m	(Ljm;)Z	b	lambda$create$0
		p	0		poiType
c	bwi	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	m	(Lbqc;Lavo;)V	<init>	<init>
		p	1		cooldownRange
		p	2		sound
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	b	start
	m	(Laqu;Lbtp;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	Lbqc;	d	timeBetweenLongJumps
	f	Lavo;	e	landingSound
c	bwj	net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	m	(Lbqc;IIFLjava/util/function/Function;Lawu;FLjava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		favoredBlocks
		p	7		biasChance
		p	8		jumpToPredicate
	m	(Laqu;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Laqu;Lbtp;J)V	a	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lawu;	m	preferredBlockTag
	f	F	n	preferredBlocksChance
	f	Ljava/util/List;	o	notPrefferedJumpCandidates
	f	Z	p	currentlyWantingPreferredOnes
c	bwk	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	m	(Lbqc;IIFLjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
	m	(Lbqc;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V	<init>	<init>
		p	1		cooldownRange
		p	2		verticalRange
		p	3		horizontalRange
		p	4		maxRange
		p	5		entityToSound
		p	6		jumpToPredicate
	m	(Laqu;)Ljava/util/Optional;	a	getJumpCandidate
		p	1		world
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;J)V	a	start
	m	(Laqu;Lbtp;Ljd;)Z	a	isAcceptableLandingPosition
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lbtp;Lexc;)Lexc;	a	calculateOptimalJumpVector
		p	1		entity
		p	2		targetPos
	m	(Lbtp;Ljd;)Z	a	defaultAcceptableLandingSpot
		p	0		entity
		p	1		pos
	m	(Ljd;Ljd;)Lbwk$a;	a	lambda$start$1
	m	(Laqu;Lbtp;J)Z	b	canStillUse
	m	(Ljd;Ljd;)Z	b	lambda$start$0
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	d	pickCandidate
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	FIND_JUMP_TRIES
	f	I	d	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	I	e	maxLongJumpHeight
	f	I	f	maxLongJumpWidth
	f	F	g	maxJumpVelocityMultiplier
	f	Ljava/util/List;	h	jumpCandidates
	f	Ljava/util/Optional;	i	initialPosition
	f	Lexc;	j	chosenJump
	f	I	k	findJumpTries
	f	J	l	prepareJumpStart
	f	I	m	PREPARE_JUMP_DURATION
	f	I	n	TIME_OUT_DURATION
	f	Ljava/util/List;	o	ALLOWED_ANGLES
	f	Lbqc;	p	timeBetweenLongJumps
	f	Ljava/util/function/Function;	q	getJumpSound
	f	Ljava/util/function/BiPredicate;	r	acceptableLandingSpot
c	bwk$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$a
	m	(Ljd;I)V	<init>	<init>
		p	1		pos
		p	2		weight
	m	()Ljd;	b	getJumpTarget
	f	Ljd;	a	jumpTarget
c	bwl	net/minecraft/world/entity/ai/behavior/LongJumpUtil
	m	(Lbtp;Lbsu;Lexc;Lexc;)Z	a	isClearTransition
		p	0		entity
		p	1		dimensions
		p	2		prevPos
		p	3		nextPos
	m	(Lbtp;Lexc;FIZ)Ljava/util/Optional;	a	calculateJumpVectorForAngle
		p	0		entity
		p	1		jumpTarget
		p	2		maxVelocity
		p	3		angle
		p	4		requireClearPath
c	bwm	net/minecraft/world/entity/ai/behavior/BehaviorInteractPlayer
	m	(F)V	<init>	<init>
		p	1		speed
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmk;)V	a	followPlayer
		p	1		villager
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	start
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	tick
	f	F	c	speedModifier
c	bwn	net/minecraft/world/entity/ai/behavior/BehaviorLook
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtp;Lbwv;)V	a	lambda$tick$1
		p	1		lookTarget
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtp;Lbwv;)Z	b	lambda$canStillUse$0
		p	1		lookTarget
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
c	bwo	net/minecraft/world/entity/ai/behavior/BehaviorAttack
	m	(I)Lbws;	a	create
		p	0		cooldown
	m	(ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbtp;)Z	a	isHoldingUsableProjectileWeapon
		p	0		mob
	m	(Lbtp;Lcuq;)Z	a	lambda$isHoldingUsableProjectileWeapon$3
		p	1		stack
	m	(Lbyu$b;ILbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	2		lookTarget
		p	3		attackTarget
		p	4		attackCoolingDown
		p	5		visibleMobs
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;ILaqu;Lbtp;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	bwp	net/minecraft/world/entity/ai/behavior/BehaviorStartRiding
	m	(F)Lbvi;	a	create
		p	0		speed
	m	(FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbyu$b;FLbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	2		lookTarget
		p	3		walkTarget
		p	4		rideTarget
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;FLaqu;Lbtn;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
c	bwq	net/minecraft/world/entity/ai/behavior/BehaviorOutside
	m	(F)Lbws;	a	create
		p	0		speed
	m	(FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	m	(FLbyv;)Lbyx;	a	lambda$create$2
		p	1		walkTarget
	m	(Laqu;Lbtn;)Lexc;	a	getOutdoorPosition
		p	0		world
		p	1		entity
	m	(Laqu;Lbtn;Ljd;)Z	a	hasNoBlocksAbove
		p	0		world
		p	1		entity
		p	2		pos
	m	(Lbyv;FLaqu;Lbtn;J)Z	a	lambda$create$1
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbyv;FLexc;)V	a	lambda$create$0
		p	2		pos
c	bwr	net/minecraft/world/entity/ai/behavior/BehavorMove
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtp;Lccv;)Z	a	reachedTarget
		p	1		entity
		p	2		walkTarget
	m	(Lbtp;Lccv;J)Z	a	tryComputePath
		p	1		entity
		p	2		walkTarget
		p	3		time
	m	(Lccv;)Z	a	isWalkTargetSpectator
		p	0		target
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	c	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	d	tick
	f	I	c	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	d	remainingCooldown
	f	Leps;	e	path
	f	Ljd;	f	lastTargetPos
	f	F	g	speedModifier
c	bws	net/minecraft/world/entity/ai/behavior/OneShot
	m	()Lbvh$a;	a	getStatus
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;J)Z	e	tryStart
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	f	tickOrStop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	g	doStop
		p	1		world
		p	2		entity
		p	3		time
	f	Lbvh$a;	a	status
c	bwt	net/minecraft/world/entity/ai/behavior/BehaviorPlay
	m	()Lbvi;	a	create
	m	(Lbtn;)Lbtn;	a	whoAreYouChasing
		p	0		baby
	m	(Lbtn;Lbtn;)Z	a	isFriendChasingMe
		p	0		entity
		p	1		baby
	m	(Lbtn;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$6
		p	0		target
		p	1		count
	m	(Lbtw;Lbtn;)Z	a	lambda$create$0
		p	1		baby
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$3
		p	1		visibleVillagerBabies
		p	2		walkTarget
		p	3		lookTarget
		p	4		interactionTarget
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;Laqu;Lbtw;J)Z	a	lambda$create$2
		p	5		world
		p	6		entity
		p	7		time
	m	(Lbyv;Lbyv;Lbyv;Lbtn;)V	a	chaseKid
		p	0		interactionTarget
		p	1		lookTarget
		p	2		walkTarget
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Optional;	a	findSomeoneBeingChased
		p	0		babies
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$5
		p	0		entry
	m	(Ljava/util/Map;Lbtn;)V	a	lambda$checkHowManyChasersEachFriendHas$7
		p	1		baby
	m	(Lbtn;)Z	b	isChasingSomeone
		p	0		baby
	m	(Lbtn;Lbtn;)Z	b	lambda$isFriendChasingMe$8
		p	1		target
	m	(Lbyv;Lbyv;Lbyv;Lbtn;)V	b	lambda$create$1
		p	3		baby
	m	(Ljava/util/List;)Ljava/util/Map;	b	checkHowManyChasersEachFriendHas
		p	0		babies
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	b	MAX_FLEE_Y_DIST
	f	F	c	FLEE_SPEED_MODIFIER
	f	F	d	CHASE_SPEED_MODIFIER
	f	I	e	MAX_CHASERS_PER_TARGET
	f	I	f	AVERAGE_WAIT_TIME_BETWEEN_RUNS
c	bwu	net/minecraft/world/entity/ai/behavior/BehaviorBetterJob
	m	()Lbvi;	a	create
	m	(Lbtn;)Lcmk;	a	lambda$create$1
		p	0		villager
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	1		jobSite
		p	2		mobs
	m	(Lbyu$b;Lbyv;Lbyv;Laqu;Lcmk;J)Z	a	lambda$create$4
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbyu$b;Lbyv;Lcmk;Ljl;Ljm;)V	a	lambda$create$3
		p	4		poiType
	m	(Lcmk;Lbtn;)Z	a	lambda$create$0
		p	1		mob
	m	(Lcmk;Lcmk;)Lcmk;	a	selectWinner
		p	0		first
		p	1		second
	m	(Ljl;Ljm;Lcmk;)Z	a	competesForSameJobsite
		p	0		pos
		p	1		poiType
		p	2		villager
	m	(Ljm;Lcmn;)Z	a	hasMatchingProfession
		p	0		poiType
		p	1		profession
	m	(Ljl;Ljm;Lcmk;)Z	b	lambda$create$2
		p	2		villager
c	bwv	net/minecraft/world/entity/ai/behavior/BehaviorPosition
	m	()Lexc;	a	currentPosition
	m	(Lbtn;)Z	a	isVisibleBy
		p	1		entity
	m	()Ljd;	b	currentBlockPosition
c	bww	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	m	(Ljava/util/function/ToIntFunction;IIFLcef;ILjava/util/function/Function;)V	<init>	<init>
		p	1		cooldownFactory
		p	2		minDistance
		p	3		maxDistance
		p	4		speed
		p	5		targetPredicate
		p	6		prepareTime
		p	7		soundFactory
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	a	start
	m	(Lbtn;Ljd;)Lbww$a;	a	lambda$chooseRamPosition$4
		p	1		start
	m	(Lbtw;Lbtn;)Ljava/util/Optional;	a	calculateRammingStartPosition
		p	1		entity
		p	2		target
	m	(Lbtw;Lccu;)Ljava/util/Optional;	a	lambda$start$1
		p	2		mob
	m	(Lbtw;Ljd;)Z	a	isWalkableBlock
		p	1		entity
		p	2		target
	m	(Lcda;Ljd;)Z	a	lambda$calculateRammingStartPosition$3
		p	1		start
	m	(Ljd;Ljd;)Lexc;	a	getEdgeOfBlock
		p	1		start
		p	2		end
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtw;Lbtn;)V	b	chooseRamPosition
		p	1		entity
		p	2		target
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)Z	c	canStillUse
	m	(Lbtw;Lbtn;)V	c	lambda$start$2
		p	2		mob
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtw;J)V	d	tick
	m	(Lbtw;Lbtn;)Z	d	lambda$start$0
		p	2		mobx
	f	I	c	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	d	getCooldownOnFail
	f	I	e	minRamDistance
	f	I	f	maxRamDistance
	f	F	g	walkSpeed
	f	Lcef;	h	ramTargeting
	f	I	i	ramPrepareTime
	f	Ljava/util/function/Function;	j	getPrepareRamSound
	f	Ljava/util/Optional;	k	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	l	ramCandidate
c	bww$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$a
	m	(Ljd;Ljd;Lbtn;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		entity
	m	()Ljd;	a	getStartPosition
	m	()Ljd;	b	getTargetPosition
	m	()Lbtn;	c	getTarget
	f	Ljd;	a	startPosition
	f	Ljd;	b	targetPosition
	f	Lbtn;	c	target
c	bwx	net/minecraft/world/entity/ai/behavior/RamTarget
	m	(Ljava/util/function/Function;Lcef;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		cooldownRangeFactory
		p	2		targetPredicate
		p	3		speed
		p	4		strengthMultiplierFactory
		p	5		impactSoundFactory
		p	6		hornBreakSoundFactory
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lche;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lche;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lche;)V	b	finishRam
		p	1		world
		p	2		goat
	m	(Laqu;Lche;J)V	b	start
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lche;)Z	c	hasRammedHornBreakingBlock
		p	1		world
		p	2		goat
	m	(Laqu;Lche;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	TIME_OUT_DURATION
	f	F	d	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	e	getTimeBetweenRams
	f	Lcef;	f	ramTargeting
	f	F	g	speed
	f	Ljava/util/function/ToDoubleFunction;	h	getKnockbackForce
	f	Lexc;	i	ramDirection
	f	Ljava/util/function/Function;	j	getImpactSound
	f	Ljava/util/function/Function;	k	getHornBreakSound
c	bwy	net/minecraft/world/entity/ai/behavior/RandomLookAround
	m	(Lbpw;FFF)V	<init>	<init>
		p	1		cooldown
		p	2		maxYaw
		p	3		minPitch
		p	4		maxPitch
	m	(Laqu;Lbtp;J)V	a	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	Lbpw;	c	interval
	f	F	d	maxYaw
	f	F	e	minPitch
	f	F	f	pitchRange
c	bwz	net/minecraft/world/entity/ai/behavior/BehaviorStrollRandomUnconstrained
	m	(F)Lbws;	a	stroll
		p	0		speed
	m	(FII)Lbvi;	a	stroll
		p	0		speed
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(FLexc;)Lccv;	a	lambda$strollFlyOrSwim$7
		p	1		pos
	m	(FLjava/util/function/Function;Ljava/util/function/Predicate;)Lbws;	a	strollFlyOrSwim
		p	0		speed
		p	1		targetGetter
		p	2		shouldRun
	m	(FZ)Lbws;	a	stroll
		p	0		speed
		p	1		strollInsideWater
	m	(IILbtw;)Lexc;	a	lambda$stroll$3
		p	2		entity
	m	(Lbtw;)Lexc;	a	getTargetSwimPos
		p	0		entity
	m	(Lbtw;II)Lexc;	a	getTargetFlyPos
		p	0		entity
		p	1		horizontalRadius
		p	2		verticalRadius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$strollFlyOrSwim$10
		p	3		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLbyv;)Lbyx;	a	lambda$strollFlyOrSwim$9
		p	3		walkTarget
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$strollFlyOrSwim$8
		p	4		world
		p	5		entity
		p	6		time
	m	(F)Lbvi;	b	fly
		p	0		speed
	m	(Lbtw;)Z	b	lambda$fly$6
		p	0		entity
	m	(F)Lbvi;	c	swim
		p	0		speed
	m	(Lbtw;)Lexc;	c	lambda$fly$5
		p	0		entity
	m	(Lbtw;)Z	d	lambda$stroll$4
		p	0		entity
	m	(Lbtw;)Z	e	lambda$stroll$2
		p	0		entity
	m	(Lbtw;)Z	f	lambda$stroll$1
		p	0		entity
	m	(Lbtw;)Lexc;	g	lambda$stroll$0
		p	0		entity
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
	f	[[I	c	SWIM_XY_DISTANCE_TIERS
c	bxa	net/minecraft/world/entity/ai/behavior/BehaviorBellAlert
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyv;)Lbyx;	a	lambda$create$1
		p	0		heardBellTime
c	bxb	net/minecraft/world/entity/ai/behavior/BehaviorProfession
	m	()Lbvi;	a	create
	m	(Laqu;Lcmk;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyv;)Lbyx;	a	lambda$create$1
		p	0		jobSite
c	bxc	net/minecraft/world/entity/ai/behavior/BehaviorRaidReset
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bxd	net/minecraft/world/entity/ai/behavior/BehaviorBellRing
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyu$b;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		meetingPoint
	m	(Lbyu$b;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	f	I	a	RING_BELL_FROM_DISTANCE
	f	F	b	BELL_RING_CHANCE
c	bxe	net/minecraft/world/entity/ai/behavior/BehaviorGateSingle
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		tasks
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		requiredMemoryState
		p	2		tasks
c	bxf	net/minecraft/world/entity/ai/behavior/BehaviorWalkHome
	m	(F)Lbvi;	a	create
		p	0		speed
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableLong;Ljd;)Z	a	lambda$create$1
		p	3		pos
	m	(Ljm;)Z	a	lambda$create$2
		p	0		poiType
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$create$3
		p	1		entry
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	0		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	3		walkTarget
		p	4		home
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$4
		p	4		world
		p	5		entity
		p	6		time
	m	(Ljm;)Z	b	lambda$create$0
		p	0		poiType
	f	I	a	CACHE_TIMEOUT
	f	I	b	BATCH_SIZE
	f	I	c	RATE
	f	I	d	OK_DISTANCE_SQR
c	bxg	net/minecraft/world/entity/ai/behavior/BehaviorLookTarget
	m	(F)Lbws;	a	create
		p	0		maxDistance
	m	(Lbsx;F)Lbws;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbsx;Lbtn;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbtn;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbtn;FLbtn;)Z	a	lambda$create$3
		p	2		target
	m	(Lbtq;F)Lbvi;	a	create
		p	0		spawnGroup
		p	1		maxDistance
	m	(Lbtq;Lbtn;)Z	a	lambda$create$0
		p	1		entity
	m	(Lbyu$b;Lbyv;Ljava/util/function/Predicate;FLbyv;Laqu;Lbtn;J)Z	a	lambda$create$4
		p	5		world
		p	6		entity
		p	7		time
	m	(Lbyu$b;Ljava/util/function/Predicate;FLbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	3		lookTarget
		p	4		visibleMobs
	m	(Ljava/util/function/Predicate;F)Lbws;	a	create
		p	0		predicate
		p	1		maxDistance
	m	(Ljava/util/function/Predicate;FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	2		context
c	bxh	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	m	(FLbqc;)Lbvi;	a	create
		p	0		maxDistance
		p	1		interval
	m	(FLbqc;Ljava/util/function/Predicate;)Lbvi;	a	create
		p	0		maxDistance
		p	1		interval
		p	2		predicate
	m	(Lbsx;FLbqc;)Lbvi;	a	create
		p	0		type
		p	1		maxDistance
		p	2		interval
	m	(Lbsx;Lbtn;)Z	a	lambda$create$1
		p	1		entity
	m	(Lbtn;)Z	a	lambda$create$0
		p	0		entity
	m	(Lbtn;FLbtn;)Z	a	lambda$create$2
		p	2		other
	m	(Lbyu$b;Lbyv;Ljava/util/function/Predicate;FLbxh$a;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyu$b;Ljava/util/function/Predicate;FLbxh$a;Lbyv;Lbyv;)Lbyx;	a	lambda$create$4
		p	4		lookTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Predicate;FLbxh$a;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	3		context
c	bxh$a	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$a
	m	(Lbqc;)V	<init>	<init>
		p	1		interval
	m	(Layw;)Z	a	tickDownAndCheck
		p	1		random
	f	Lbqc;	a	interval
	f	I	b	ticksUntilNextStart
c	bxi	net/minecraft/world/entity/ai/behavior/BehaviorHide
	m	(II)Lbvi;	a	create
		p	0		maxHiddenSeconds
		p	1		distance
	m	(Lbyu$b;Lbyv;Lorg/apache/commons/lang3/mutable/MutableInt;ILbyv;ILaqu;Lbtn;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyu$b;Lorg/apache/commons/lang3/mutable/MutableInt;IILbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	4		hidingPlace
		p	5		heardBellTime
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;IILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	f	I	a	HIDE_TIMEOUT
c	bxj	net/minecraft/world/entity/ai/behavior/BehaviorLookInteract
	m	(ILbsx;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Lbsx;I)Lbvi;	a	create
		p	0		type
		p	1		maxDistance
	m	(Lbtn;ILbsx;Lbtn;)Z	a	lambda$create$0
		p	3		target
	m	(Lbyu$b;ILbsx;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	3		lookTarget
		p	4		interactionTarget
		p	5		visibleMobs
	m	(Lbyu$b;Lbyv;ILbsx;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
c	bxk	net/minecraft/world/entity/ai/behavior/BehaviorRaid
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	bxl	net/minecraft/world/entity/ai/behavior/BehaviorWalkAway
	m	(Lbyu$b;Lbyv;ZLjava/util/function/Function;Lbyv;IFLaqu;Lbtw;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lbyu$b;ZLjava/util/function/Function;IFLbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	5		walkTarget
		p	6		posSourcex
	m	(Lccs;FIZ)Lbvi;	a	pos
		p	0		posModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
	m	(Lccs;FIZLjava/util/function/Function;)Lbws;	a	create
		p	0		posSource
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
		p	4		posGetter
	m	(Lccs;ZLjava/util/function/Function;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Lccs;FIZ)Lbws;	b	entity
		p	0		entityModule
		p	1		speed
		p	2		range
		p	3		requiresWalkTarget
c	bxm	net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayOutOfRange
	m	(F)Lbvi;	a	create
		p	0		speed
	m	(FLbtn;)Ljava/lang/Float;	a	lambda$create$0
		p	1		entity
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;Ljava/util/function/Function;Laqu;Lbtp;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyu$b;Ljava/util/function/Function;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	2		walkTarget
		p	3		lookTarget
		p	4		attackTarget
		p	5		visibleMobs
	m	(Ljava/util/function/Function;)Lbvi;	a	create
		p	0		speed
	m	(Ljava/util/function/Function;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	1		context
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
c	bxn	net/minecraft/world/entity/ai/behavior/BehaviorWalkAwayBlock
	m	(Lbyu$b;ILccs;IFILbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	6		cantReachWalkTargetSince
		p	7		walkTarget
		p	8		destinationResult
	m	(Lbyu$b;Lbyv;Lbyv;ILccs;ILbyv;FILaqu;Lcmk;J)Z	a	lambda$create$0
		p	9		world
		p	10		entity
		p	11		time
	m	(Lccs;FIII)Lbws;	a	create
		p	0		destination
		p	1		speed
		p	2		completionRange
		p	3		maxDistance
		p	4		maxRunTime
	m	(Lccs;IIFILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bxo	net/minecraft/world/entity/ai/behavior/BehaviorLookWalk
	m	(FI)Lbws;	a	create
		p	0		speed
		p	1		completionRange
	m	(FLbtn;)Ljava/lang/Float;	a	lambda$create$1
		p	1		entity
	m	(Lbtn;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Predicate;Lbyu$b;Ljava/util/function/Function;ILbyv;Lbyv;)Lbyx;	a	lambda$create$3
		p	4		walkTarget
		p	5		lookTarget
	m	(Ljava/util/function/Predicate;Lbyv;Lbyu$b;Lbyv;Ljava/util/function/Function;ILaqu;Lbtn;J)Z	a	lambda$create$2
		p	6		world
		p	7		entity
		p	8		time
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lbws;	a	create
		p	0		predicate
		p	1		speed
		p	2		completionRange
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	3		context
c	bxp	net/minecraft/world/entity/ai/behavior/BehaviorTradePlayer
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;Lcmk;)V	a	findItemsToDisplay
		p	1		customer
		p	2		villager
	m	(Lcmk;)V	a	displayFirstItem
		p	1		villager
	m	(Lcmk;Lcuq;)V	a	displayAsHeldItem
		p	0		villager
		p	1		stack
	m	(Ldbu;)Z	a	playerItemStackMatchesCostOfOffer
		p	1		offer
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	start
	m	(Lcmk;)V	b	updateDisplayItems
		p	1		villager
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmk;)V	c	clearHeldItem
		p	0		villager
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	stop
	m	(Lcmk;)Lbtn;	d	lookAtTarget
		p	1		villager
	m	(Lcmk;)V	e	displayCyclingItems
		p	1		villager
	f	I	c	MAX_LOOK_TIME
	f	I	d	STARTING_LOOK_TIME
	f	Lcuq;	e	playerItemStack
	f	Ljava/util/List;	f	displayItems
	f	I	g	cycleCounter
	f	I	h	displayIndex
	f	I	i	lookTime
c	bxq	net/minecraft/world/entity/ai/behavior/ShufflingList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Lbxq;	a	shuffle
	m	(Lbxq$a;)V	a	lambda$shuffle$1
		p	1		entry
	m	(Lbxq;)Ljava/util/List;	a	lambda$codec$0
		p	0		weightedList
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Ljava/lang/Object;I)Lbxq;	a	add
		p	1		data
		p	2		weight
	m	()Ljava/util/stream/Stream;	b	stream
	f	Ljava/util/List;	a	entries
	f	Layw;	b	random
c	bxq$a	net/minecraft/world/entity/ai/behavior/ShufflingList$a
	m	(Ljava/lang/Object;I)V	<init>	<init>
		p	1		data
		p	2		weight
	m	()Ljava/lang/Object;	a	getData
	m	(F)V	a	setRandom
		p	1		random
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	()I	b	getWeight
	m	()D	c	getRandWeight
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
c	bxq$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$a$1
	m	(Lbxq$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lbxq$a;	a	lambda$decode$0
		p	1		data
	m	(Lcom/mojang/serialization/DynamicOps;Lbxq$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
		p	1		entry
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
c	bxr	net/minecraft/world/entity/ai/behavior/BehaviorSleep
	m	(J)Z	a	timedOut
		p	1		time
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	COOLDOWN_AFTER_BEING_WOKEN
	f	J	d	nextOkStartTime
c	bxs	net/minecraft/world/entity/ai/behavior/BehaviorBell
	m	()Lbws;	a	create
	m	(Lbtn;)Z	a	lambda$create$0
		p	0		target
	m	(Lbtn;Lbtn;)Z	a	lambda$create$1
		p	1		target
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$4
		p	1		walkTarget
		p	2		lookTarget
		p	3		meetingPoint
		p	4		visibleMobs
		p	5		interactionTarget
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$3
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyv;Lbyv;Lbyv;Lbtn;)V	a	lambda$create$2
		p	3		target
	f	F	a	SPEED_MODIFIER
c	bxt	net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetSet
	m	(Lbtp;)Z	a	lambda$create$0
		p	0		entity
	m	(Ljava/util/function/Function;)Lbvi;	a	create
		p	0		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lbvi;	a	create
		p	0		startCondition
		p	1		targetGetter
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	2		context
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lbyv;Lbyv;Laqu;Lbtp;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
c	bxu	net/minecraft/world/entity/ai/behavior/BehaviorCelebrateDeath
	m	(ILjava/util/function/BiPredicate;)Lbvi;	a	create
		p	0		celebrationDuration
		p	1		predicate
	m	(Lbyu$b;Lbyv;Ljava/util/function/BiPredicate;Lbyv;ILbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lbyu$b;Ljava/util/function/BiPredicate;ILbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		attackTarget
		p	4		angryAt
		p	5		celebrateLocation
		p	6		dancing
	m	(Ljava/util/function/BiPredicate;ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
c	bxv	net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	5		lookTarget
		p	6		walkTarget
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lbvi;	a	create
		p	0		lookTargetFunction
		p	1		predicate
		p	2		completionRange
		p	3		searchRange
		p	4		speed
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;ILbyv;Lbyv;FILaqu;Lbtn;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
c	bxw	net/minecraft/world/entity/ai/behavior/BehaviorAttackTargetForget
	m	()Lbvi;	a	create
	m	(Lbtn;)Z	a	lambda$create$2
		p	0		entity
	m	(Lbtn;Ljava/util/Optional;)Z	a	isTiredOfTryingToReachTarget
	m	(Lbtp;Lbtn;)V	a	lambda$create$3
		p	0		entity
		p	1		target
	m	(Lbyu$b;Lbyv;ZLbyv;Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Laqu;Lbtp;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyu$b;ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	4		attackTarget
		p	5		cantReachWalkTargetSince
	m	(Ljava/util/function/BiConsumer;)Lbvi;	a	create
		p	0		forgetCallback
	m	(Ljava/util/function/Predicate;)Lbvi;	a	create
		p	0		alternativeCondition
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lbvi;	a	create
		p	0		alternativeCondition
		p	1		forgetCallback
		p	2		shouldForgetIfTargetUnreachable
	m	(ZLjava/util/function/Predicate;Ljava/util/function/BiConsumer;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	3		context
	m	(Lbtn;)Z	b	lambda$create$0
		p	0		entity
	m	(Lbtp;Lbtn;)V	b	lambda$create$1
		p	0		entity
		p	1		target
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
c	bxx	net/minecraft/world/entity/ai/behavior/BehaviorForgetAnger
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;)Z	a	lambda$create$1
		p	1		target
	m	(Lbsr;)Lbtn;	a	lambda$create$0
		p	0		target
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
		p	0		context
	m	(Lbyu$b;Lbyv;)Lbyx;	a	lambda$create$4
		p	1		angryAt
	m	(Lbyu$b;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$3
		p	2		world
		p	3		entity
		p	4		time
	m	(Lbyv;Lbtn;)V	a	lambda$create$2
		p	1		target
c	bxy	net/minecraft/world/entity/ai/behavior/BehaviorStrollPosition
	m	(FLexc;)Lccv;	a	lambda$create$0
		p	1		targetPos
	m	(Lbyu$b;ILorg/apache/commons/lang3/mutable/MutableLong;FLbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	4		walkTarget
		p	5		pos
	m	(Lbyu$b;Lbyv;ILorg/apache/commons/lang3/mutable/MutableLong;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$1
		p	6		world
		p	7		entity
		p	8		time
	m	(Lccs;FI)Lbws;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		maxDistance
	m	(Lccs;ILorg/apache/commons/lang3/mutable/MutableLong;FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	4		context
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	b	STROLL_MAX_XZ_DIST
	f	I	c	STROLL_MAX_Y_DIST
c	bxz	net/minecraft/world/entity/ai/behavior/BehaviorStrollPlace
	m	(Lbyu$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	5		walkTarget
		p	6		pos
	m	(Lbyu$b;Lbyv;ILorg/apache/commons/lang3/mutable/MutableLong;Lbyv;FILaqu;Lbtw;J)Z	a	lambda$create$0
		p	7		world
		p	8		entity
		p	9		time
	m	(Lccs;FII)Lbvi;	a	create
		p	0		posModule
		p	1		walkSpeed
		p	2		completionRange
		p	3		maxDistance
	m	(Lccs;ILorg/apache/commons/lang3/mutable/MutableLong;FILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	5		context
c	bya	net/minecraft/world/entity/ai/behavior/BehaviorStrollPlaceList
	m	(Lbyu$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	5		walkTarget
		p	6		secondary
		p	7		primary
	m	(Lbyu$b;Lbyv;Lbyv;ILorg/apache/commons/lang3/mutable/MutableLong;Lbyv;FILaqu;Lcmk;J)Z	a	lambda$create$0
		p	8		world
		p	9		entity
		p	10		time
	m	(Lccs;FIILccs;)Lbvi;	a	create
		p	0		secondaryPositions
		p	1		speed
		p	2		completionRange
		p	3		primaryPositionActivationDistance
		p	4		primaryPosition
	m	(Lccs;Lccs;ILorg/apache/commons/lang3/mutable/MutableLong;FILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	6		context
c	byb	net/minecraft/world/entity/ai/behavior/BehaviorSwim
	m	(F)V	<init>	<init>
		p	1		chance
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtp;)Z	a	shouldSwim
		p	0		entity
	m	(Laqu;Lbtp;J)V	b	tick
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	f	F	c	chance
c	byc	net/minecraft/world/entity/ai/behavior/BehaviorTradeVillager
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmk;Lcmk;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
		p	0		entity
		p	1		target
	m	(Lcmk;Ljava/util/Set;Lbtn;)V	a	throwHalfStack
		p	0		villager
		p	1		validItems
		p	2		target
	m	(Lcom/google/common/collect/ImmutableSet;Lcul;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
		p	1		item
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	start
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	stop
	f	Ljava/util/Set;	c	trades
c	byd	net/minecraft/world/entity/ai/behavior/TriggerGate
	m	(Lbvv$a;Lbxq;Lbvv$b;Laqu;Lbtn;J)Z	a	lambda$triggerGate$1
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbvv$a;Lbxq;Lbvv$b;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerGate$2
		p	3		context
	m	(Lbxq;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$triggerGate$0
		p	1		task
	m	(Ljava/util/List;)Lbws;	a	triggerOneShuffled
		p	0		weightedTasks
	m	(Ljava/util/List;Lbvv$a;Lbvv$b;)Lbws;	a	triggerGate
		p	0		weightedTasks
		p	1		order
		p	2		runMode
c	bye	net/minecraft/world/entity/ai/behavior/TryFindLand
	m	(IF)Lbvi;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbyv;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
	f	I	a	COOLDOWN_TICKS
c	byf	net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	m	(IF)Lbvi;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbyv;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	byg	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	(IF)Lbvi;	a	create
		p	0		range
		p	1		speed
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	3		context
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		attackTarget
		p	4		walkTarget
		p	5		lookTarget
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILbyv;Lbyv;FLaqu;Lbtw;J)Z	a	lambda$create$0
		p	5		world
		p	6		entity
		p	7		time
c	byh	net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	m	(Ldfy;)Lbvi;	a	create
		p	0		frogSpawn
	m	(Ldfy;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Ldfy;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Ldfy;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		attackTarget
		p	2		walkTarget
		p	3		isPregnant
c	byi	net/minecraft/world/entity/ai/behavior/BehaviorSchedule
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	byj	net/minecraft/world/entity/ai/behavior/BehaviorBonemeal
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmk;)V	a	setCurrentCropAsTarget
		p	1		villager
	m	(Lcmk;Ljd;)V	a	lambda$setCurrentCropAsTarget$0
		p	1		pos
	m	(Ljd;Laqu;)Z	a	validPos
		p	1		pos
		p	2		world
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Ljava/util/Optional;	b	pickNextTarget
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)V	b	start
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	tick
	f	I	c	BONEMEALING_DURATION
	f	J	d	nextWorkCycleTime
	f	J	e	lastBonemealingSession
	f	I	f	timeWorkedSoFar
	f	Ljava/util/Optional;	g	cropPos
c	byk	net/minecraft/world/entity/ai/behavior/BehaviorPositionValidate
	m	(Laqu;Ljd;Lbtn;)Z	a	bedIsOccupied
		p	0		world
		p	1		pos
		p	2		entity
	m	(Lbyu$b;Lbyv;Ljava/util/function/Predicate;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbyu$b;Ljava/util/function/Predicate;Lbyv;)Lbyx;	a	lambda$create$1
		p	2		poiPos
	m	(Lccs;Ljava/util/function/Predicate;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Ljava/util/function/Predicate;Lccs;)Lbvi;	a	create
		p	0		poiTypePredicate
		p	1		poiPosModule
	f	I	a	MAX_DISTANCE
c	byl	net/minecraft/world/entity/ai/behavior/BehaviorStrollRandom
	m	(F)Lbws;	a	create
		p	0		walkSpeed
	m	(FII)Lbws;	a	create
		p	0		walkSpeed
		p	1		horizontalRange
		p	2		verticalRange
	m	(FLexc;)Lccv;	a	lambda$create$0
		p	1		pos
	m	(IIFLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	3		context
	m	(IIFLbyv;)Lbyx;	a	lambda$create$2
		p	3		walkTarget
	m	(IILbyv;FLaqu;Lbtw;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
c	bym	net/minecraft/world/entity/ai/behavior/BehaviorCooldown
	m	()Lbvi;	a	create
	m	(Lbtn;Lbtn;)Z	a	lambda$create$0
		p	1		hurtByx
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	1		hurtBy
		p	2		hurtByEntity
		p	3		nearestHostile
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	f	I	a	SAFE_DISTANCE_FROM_DANGER
c	byn	net/minecraft/world/entity/ai/behavior/Behaviors
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
		p	0		speed
	m	(Laqu;Lbtn;)Z	a	raidExistsAndActive
		p	0		world
		p	1		entity
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
		p	0		profession
		p	1		speed
	m	(Ljm;)Z	a	lambda$getMeetPackage$3
		p	0		poiType
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Laqu;Lbtn;)Z	b	raidExistsAndNotVictory
		p	0		world
		p	1		entity
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
		p	0		profession
		p	1		speed
	m	(Ljm;)Z	b	lambda$getRestPackage$2
		p	0		poiType
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
		p	0		profession
		p	1		speed
	m	(Ljm;)Z	c	lambda$getCorePackage$1
		p	0		poiType
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
		p	0		profession
		p	1		speed
	m	(Ljm;)Z	d	lambda$getCorePackage$0
		p	0		poiType
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
		p	0		profession
		p	1		speed
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
		p	0		profession
		p	1		speed
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
		p	0		profession
		p	1		speed
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
		p	0		profession
		p	1		speed
	m	(Lcmn;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
		p	0		profession
		p	1		speed
	f	I	a	INTERACT_DIST_SQR
	f	I	b	INTERACT_WALKUP_DIST
	f	F	c	INTERACT_SPEED_MODIFIER
	f	F	d	STROLL_SPEED_MODIFIER
c	byo	net/minecraft/world/entity/ai/behavior/BehaviorMakeLove
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;Lcmk;)V	a	tryToGiveBirth
		p	1		world
		p	2		first
		p	3		second
	m	(Laqu;Lcmk;Ljd;)V	a	giveBedToChild
		p	1		world
		p	2		child
		p	3		pos
	m	(Lbsl;)Z	a	lambda$isBreedingPossible$0
	m	(Lcmk;)Z	a	isBreedingPossible
		p	1		villager
	m	(Lcmk;Ljd;Ljm;)Z	a	canReach
		p	1		villager
		p	2		pos
		p	3		poiType
	m	(Lcmk;Ljm;Ljd;)Z	a	lambda$takeVacantBed$2
		p	2		poiType
		p	3		pos
	m	(Ljm;)Z	a	lambda$takeVacantBed$1
		p	0		poiType
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)Ljava/util/Optional;	b	takeVacantBed
		p	1		world
		p	2		villager
	m	(Laqu;Lcmk;J)V	b	start
	m	(Laqu;Lcmk;Lcmk;)Ljava/util/Optional;	b	breed
		p	1		world
		p	2		parent
		p	3		partner
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	d	stop
	f	J	c	birthTimestamp
c	byp	net/minecraft/world/entity/ai/behavior/BehaviorPanic
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	b	start
	m	(Lbtn;)Z	b	hasHostile
		p	0		entity
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;)Z	c	isHurt
		p	0		entity
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	byq	net/minecraft/world/entity/ai/behavior/BehaviorWake
	m	()Lbvi;	a	create
	m	(Laqu;Lbtn;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
		p	0		context
c	byr	net/minecraft/world/entity/ai/behavior/BehaviorWorkComposter
	m	(Laqu;Lcmk;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;Ljl;Ldtc;)V	a	compostItems
		p	1		world
		p	2		entity
		p	3		pos
		p	4		composterState
	m	(Laqu;Ldtc;Ljd;Ldtc;)V	a	spawnComposterFillEffects
		p	1		world
		p	2		oldState
		p	3		pos
		p	4		newState
	m	(Lcmk;)V	a	makeBread
		p	1		entity
	f	Ljava/util/List;	c	COMPOSTABLE_ITEMS
c	bys	net/minecraft/world/entity/ai/behavior/BehaviorWork
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmk;)V	a	useWorkstation
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;J)V	a	start
	m	(Lbuq;Ljl;)V	a	lambda$start$0
		p	1		pos
	m	(Laqu;Lcmk;)Z	b	checkExtraStartConditions
	m	(Laqu;Lcmk;J)Z	b	canStillUse
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	CHECK_COOLDOWN
	f	D	d	DISTANCE
	f	J	e	lastCheck
c	byt	net/minecraft/world/entity/ai/behavior/BehaviorLeaveJob
	m	(F)Lbvi;	a	create
		p	0		speed
	m	(FLbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
		p	1		context
	m	(Lbtn;)Lcmk;	a	lambda$create$1
		p	0		villager
	m	(Lbtw;Ljd;Lcev;)Z	a	canReachPos
		p	0		entity
		p	1		pos
		p	2		poiType
	m	(Lbyu$b;FLbyv;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$5
		p	2		potentialJobSite
		p	3		jobSite
		p	4		mobs
		p	5		walkTarget
		p	6		lookTarget
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;FLaqu;Lcmk;J)Z	a	lambda$create$4
		p	6		world
		p	7		entity
		p	8		time
	m	(Lbyv;Lbyv;Lbyv;Ljd;FLaqu;Lcmk;)V	a	lambda$create$3
		p	6		villager
	m	(Lcmk;Lbtn;)Z	a	lambda$create$0
		p	1		mob
	m	(Ljava/util/Optional;Ljd;Lcmk;)Z	a	lambda$create$2
		p	2		villager
	m	(Ljm;Lcmk;Ljd;)Z	a	nearbyWantsJobsite
		p	0		poiType
		p	1		villager
		p	2		pos
c	byu	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	m	(Lbyu$e;)V	<init>	<init>
		p	1		function
	m	()Lbyu$b;	a	instance
	m	(Lbyu$e;)Lbyu;	a	create
		p	0		function
	m	(Lbyx;Lbyx;)Lbws;	a	sequence
		p	0		predicate
		p	1		task
	m	(Lbyx;Lbyx;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$sequence$1
		p	2		context
	m	(Lbyx;Lcom/mojang/datafixers/util/Unit;)Lbyx;	a	lambda$sequence$0
		p	1		unit
	m	(Lcom/mojang/datafixers/kinds/App;)Lbyu;	a	unbox
		p	0		app
	m	(Ljava/util/function/BiPredicate;)Lbws;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/BiPredicate;Laqu;Lbtn;J)Z	a	lambda$triggerIf$4
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/BiPredicate;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$5
		p	1		context
	m	(Ljava/util/function/Function;)Lbws;	a	create
		p	0		creator
	m	(Ljava/util/function/Predicate;)Lbws;	a	triggerIf
		p	0		predicate
	m	(Ljava/util/function/Predicate;Laqu;Lbtn;J)Z	a	lambda$triggerIf$2
		p	1		world
		p	2		entity
		p	3		time
	m	(Ljava/util/function/Predicate;Lbws;)Lbws;	a	triggerIf
		p	0		predicate
		p	1		task
	m	(Ljava/util/function/Predicate;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$3
		p	1		context
	m	(Lcom/mojang/datafixers/kinds/App;)Lbyu$e;	b	get
		p	0		app
	f	Lbyu$e;	a	trigger
c	byu$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$1
	m	()Ljava/lang/String;	b	debugString
	m	(Laqu;Lbtn;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$resolvedBuilder
c	byu$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$a
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		value
	m	(Ljava/lang/Object;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		value
		p	2		nameSupplier
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$new$0
c	byu$a$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$a$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Ljava/lang/Object;	a	val$a
	f	Ljava/util/function/Supplier;	b	val$debugString
c	byu$b	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b
	m	(Lbyv;)Ljava/util/Optional;	a	tryGet
		p	1		result
	m	(Lbyx;)Lbyu;	a	ifTriggered
		p	1		runnable
	m	(Lccs;)Lbyu;	a	registered
		p	1		type
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	a	lambda$lift1$0
		p	2		app2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbyu;	a	ap2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbyu;	a	ap3
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lbyu;	a	ap4
	m	(Ljava/lang/Object;)Lbyu;	a	point
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lbyu;	a	map
	m	(Ljava/util/function/Supplier;Ljava/lang/Object;)Lbyu;	a	point
		p	1		nameSupplier
		p	2		value
	m	(Lbyv;)Ljava/lang/Object;	b	get
		p	1		result
	m	(Lccs;)Lbyu;	b	present
		p	1		type
	m	(Lccs;)Lbyu;	c	absent
		p	1		type
c	byu$b$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$aTrigger
	f	Lbyu$e;	b	val$fTrigger
c	byu$b$2	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$2
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$tTrigger
	f	Ljava/util/function/Function;	b	val$func
c	byu$b$3	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$3
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$aTrigger
	f	Lbyu$e;	b	val$bTrigger
	f	Lbyu$e;	c	val$fTrigger
c	byu$b$4	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$4
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$t1Trigger
	f	Lbyu$e;	b	val$t2Trigger
	f	Lbyu$e;	c	val$t3Trigger
	f	Lbyu$e;	d	val$fTrigger
c	byu$b$5	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$5
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	f	Lbyu$e;	a	val$t1Trigger
	f	Lbyu$e;	b	val$t2Trigger
	f	Lbyu$e;	c	val$t3Trigger
	f	Lbyu$e;	d	val$t4Trigger
	f	Lbyu$e;	e	val$fTrigger
c	byu$b$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$b$a
c	byu$c	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$c
c	byu$d	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$d
	m	(Lbyw;)V	<init>	<init>
		p	1		query
c	byu$d$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$d$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)Lbyv;	b	tryTrigger
	f	Lbyw;	a	val$condition
c	byu$e	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$e
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
c	byu$f	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$f
	m	(Lbyx;)V	<init>	<init>
		p	1		taskRunnable
c	byu$f$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$f$1
	m	()Ljava/lang/String;	a	debugString
	m	(Laqu;Lbtn;J)Ljava/lang/Object;	a	tryTrigger
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)Lcom/mojang/datafixers/util/Unit;	b	tryTrigger
	f	Lbyx;	a	val$dependentTrigger
c	byv	net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	m	(Lbuq;Lccs;Lcom/mojang/datafixers/kinds/App;)V	<init>	<init>
		p	1		brain
		p	2		memory
		p	3		value
	m	()Lcom/mojang/datafixers/kinds/App;	a	value
	m	(Ljava/lang/Object;)V	a	set
		p	1		value
	m	(Ljava/lang/Object;J)V	a	setWithExpiry
		p	1		value
		p	2		expiry
	m	(Ljava/util/Optional;)V	a	setOrErase
		p	1		value
	m	()V	b	erase
	f	Lbuq;	a	brain
	f	Lccs;	b	memoryType
	f	Lcom/mojang/datafixers/kinds/App;	c	value
c	byw	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	m	()Lccs;	a	memory
	m	(Lbuq;Ljava/util/Optional;)Lbyv;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lcct;	b	condition
c	byw$a	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$a
	m	()Lccs;	a	memory
	m	(Lbuq;Ljava/util/Optional;)Lbyv;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lcct;	b	condition
	f	Lccs;	a	memory
c	byw$b	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$b
	m	()Lccs;	a	memory
	m	(Lbuq;Ljava/util/Optional;)Lbyv;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lcct;	b	condition
	f	Lccs;	a	memory
c	byw$c	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$c
	m	()Lccs;	a	memory
	m	(Lbuq;Ljava/util/Optional;)Lbyv;	a	createAccessor
		p	1		brain
		p	2		value
	m	()Lcct;	b	condition
	f	Lccs;	a	memory
c	byx	net/minecraft/world/entity/ai/behavior/declarative/Trigger
	m	(Laqu;Lbtn;J)Z	trigger	trigger
		p	1		world
		p	2		entity
		p	3		time
c	bza	net/minecraft/world/entity/ai/behavior/warden/Digging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmb;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	b	start
	m	(Laqu;Lcmb;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bzb	net/minecraft/world/entity/ai/behavior/warden/Emerging
	m	(I)V	<init>	<init>
		p	1		duration
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	b	start
	m	(Laqu;Lcmb;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bzc	net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	bzd	net/minecraft/world/entity/ai/behavior/warden/Roar
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	a	start
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)Z	b	canStillUse
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	d	stop
	f	I	c	TICKS_BEFORE_PLAYING_ROAR_SOUND
	f	I	d	ROAR_ANGER_INCREASE
c	bze	net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	m	(Ljava/util/function/Function;)Lbvi;	a	create
		p	0		targetFinder
	m	(Ljava/util/function/Function;Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Ljava/util/function/Function;Lbyv;Lbyv;Laqu;Lcmb;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Ljava/util/function/Function;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		roarTarget
		p	2		attackTarget
		p	3		cantReachWalkTargetSince
c	bzf	net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
		p	0		context
	m	(Lbyu$b;Lbyv;)Ljava/util/Optional;	a	lambda$create$0
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$1
		p	4		world
		p	5		entity
		p	6		time
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$2
		p	1		lookTarget
		p	2		disturbanceLocation
		p	3		roarTarget
		p	4		attackTarget
c	bzg	net/minecraft/world/entity/ai/behavior/warden/Sniffing
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcmb;Lbtn;)V	a	lambda$stop$0
		p	1		target
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	b	start
	m	(Laqu;Lcmb;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	D	c	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	f	D	d	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
c	bzh	net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcmb;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;I)V	a	setCooldown
		p	0		warden
		p	1		cooldown
	m	(Lcmb;Laqu;Lbtn;)V	a	lambda$tick$2
		p	2		target
	m	(Lcmb;Lbtn;)Z	a	lambda$tick$1
		p	1		target
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	b	start
	m	(Lcmb;Lbtn;)V	b	lambda$tick$0
		p	1		target
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcmb;J)V	d	stop
	f	I	c	COOLDOWN
	f	I	d	DISTANCE_XZ
	f	I	e	DISTANCE_Y
	f	D	f	KNOCKBACK_VERTICAL
	f	D	g	KNOCKBACK_HORIZONTAL
	f	I	h	TICKS_BEFORE_PLAYING_SOUND
	f	I	i	DURATION
c	bzi	net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyv;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbyv;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	0		isSniffing
		p	1		walkTarget
		p	2		sniffCooldown
		p	3		nearestAttackable
		p	4		disturbanceLocation
	f	Lbpw;	a	SNIFF_COOLDOWN
c	bzk	net/minecraft/world/entity/ai/control/EntityAIBodyControl
	m	(Lbtp;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
	f	Lbtp;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
c	bzl	net/minecraft/world/entity/ai/control/Control
c	bzm	net/minecraft/world/entity/ai/control/ControllerMoveFlying
	m	(Lbtp;IZ)V	<init>	<init>
		p	1		entity
		p	2		maxPitchChange
		p	3		noGravity
	m	()V	a	tick
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
c	bzn	net/minecraft/world/entity/ai/control/ControllerJump
	m	(Lbtp;)V	<init>	<init>
		p	1		entity
	m	()V	a	jump
	m	()V	b	tick
	f	Z	a	jump
	f	Lbtp;	b	mob
c	bzo	net/minecraft/world/entity/ai/control/ControllerLook
	m	(Lbtp;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDD)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
	m	(DDDFF)V	a	setLookAt
		p	1		x
		p	3		y
		p	5		z
		p	7		maxYawChange
		p	8		maxPitchChange
	m	(FFF)F	a	rotateTowards
		p	1		from
		p	2		to
		p	3		max
	m	(Lbsr;)V	a	setLookAt
		p	1		entity
	m	(Lbsr;FF)V	a	setLookAt
		p	1		entity
		p	2		maxYawChange
		p	3		maxPitchChange
	m	(Lexc;)V	a	setLookAt
		p	1		direction
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	()V	b	clampHeadRotationToBody
	m	(Lbsr;)D	b	getWantedY
		p	0		entity
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lbtp;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
c	bzp	net/minecraft/world/entity/ai/control/ControllerMove
	m	(Lbtp;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(FF)V	a	strafe
		p	1		forward
		p	2		sideways
	m	(FFF)F	a	rotlerp
		p	1		from
		p	2		to
		p	3		max
	m	()Z	b	hasWanted
	m	(FF)Z	b	isWalkable
		p	1		x
		p	2		z
	m	()D	c	getSpeedModifier
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Lbtp;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lbzp$a;	k	operation
c	bzp$a	net/minecraft/world/entity/ai/control/ControllerMove$Operation
	m	()[Lbzp$a;	a	$values
	f	Lbzp$a;	a	WAIT
	f	Lbzp$a;	b	MOVE_TO
	f	Lbzp$a;	c	STRAFE
	f	Lbzp$a;	d	JUMPING
	f	[Lbzp$a;	e	$VALUES
c	bzq	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	m	(Lbtp;I)V	<init>	<init>
		p	1		entity
		p	2		yawAdjustThreshold
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
		p	1		pitch
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
		p	1		yaw
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
c	bzr	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	m	(Lbtp;IIFFZ)V	<init>	<init>
		p	1		entity
		p	2		pitchChange
		p	3		yawChange
		p	4		speedInWater
		p	5		speedInAir
		p	6		buoyant
	m	()V	a	tick
	m	(F)F	a	getTurningSpeedFactor
	f	F	l	FULL_SPEED_TURN_THRESHOLD
	f	F	m	STOP_TURN_THRESHOLD
	f	I	n	maxTurnX
	f	I	o	maxTurnY
	f	F	p	inWaterSpeedModifier
	f	F	q	outsideWaterSpeedModifier
	f	Z	r	applyGravity
c	bzt	net/minecraft/world/entity/ai/goal/PathfinderGoalAvoidTarget
	m	(Lbtw;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	(Lbtw;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		fleeingEntity
		p	2		classToFleeFrom
		p	3		fleeDistance
		p	4		fleeSlowSpeed
		p	6		fleeFastSpeed
		p	8		inclusionSelector
	m	(Lbtw;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		fleeFromType
		p	3		extraInclusionSelector
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
		p	9		inclusionSelector
	m	()V	a	tick
	m	(Lbtn;)Z	a	lambda$canUse$2
	m	()Z	b	canUse
	m	(Lbtn;)Z	b	lambda$new$1
	m	()Z	c	canContinueToUse
	m	(Lbtn;)Z	c	lambda$new$0
	m	()V	d	start
	m	()V	e	stop
	f	Lbtw;	a	mob
	f	Lbtn;	b	toAvoid
	f	F	c	maxDist
	f	Leps;	d	path
	f	Lcda;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lcef;	k	avoidEntityTargeting
c	bzu	net/minecraft/world/entity/ai/goal/PathfinderGoalBeg
	m	(Lcgh;F)V	<init>	<init>
		p	1		wolf
		p	2		begDistance
	m	()V	a	tick
	m	(Lcmx;)Z	a	playerHoldingInteresting
		p	1		player
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcgh;	a	wolf
	f	Lcmx;	b	player
	f	Ldcw;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lcef;	f	begTargeting
c	bzv	net/minecraft/world/entity/ai/goal/PathfinderGoalBoat
	m	()[Lbzv;	a	$values
	f	Lbzv;	a	GO_TO_BOAT
	f	Lbzv;	b	GO_IN_BOAT_DIRECTION
	f	[Lbzv;	c	$VALUES
c	bzw	net/minecraft/world/entity/ai/goal/PathfinderGoalBreakDoor
	m	(Lbtp;ILjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		maxProgress
		p	3		difficultySufficientPredicate
	m	(Lbtp;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		difficultySufficientPredicate
	m	()V	a	tick
	m	(Lbqo;)Z	a	isValidDifficulty
		p	1		difficulty
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()I	f	getDoorBreakTime
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
c	bzx	net/minecraft/world/entity/ai/goal/PathfinderGoalBreath
	m	(Lbtw;)V	<init>	<init>
		p	1		mob
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	(Ldcz;Ljd;)Z	a	givesAir
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	h	findAirPosition
	f	Lbtw;	a	mob
c	bzy	net/minecraft/world/entity/ai/goal/PathfinderGoalBreed
	m	(Lcfe;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	(Lcfe;DLjava/lang/Class;)V	<init>	<init>
		p	1		animal
		p	2		speed
		p	4		entityClass
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	g	breed
	m	()Lcfe;	h	getFreePartner
	f	Lcfe;	a	animal
	f	Ldcw;	b	level
	f	Lcfe;	c	partner
	f	Lcef;	d	PARTNER_TARGETING
	f	Ljava/lang/Class;	e	partnerClass
	f	I	f	loveTime
	f	D	g	speedModifier
c	bzz	net/minecraft/world/entity/ai/goal/PathfinderGoalCatSitOnBed
	m	(Lcfh;DI)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		range
	m	()V	a	tick
	m	(Lbtw;)I	a	nextStartTick
		p	1		mob
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfh;	g	cat
c	caa	net/minecraft/world/entity/ai/goal/PathfinderGoalJumpOnBlock
	m	(Lcfh;D)V	<init>	<init>
		p	1		cat
		p	2		speed
	m	()V	a	tick
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldtb$a;)Z	a	lambda$isValidTarget$1
		p	0		state
	m	(Ldtp;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
		p	0		part
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfh;	g	cat
c	cab	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lbtp;	a	mob
	f	Ldcw;	b	level
c	cac	net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJump
	m	(Lcfm;I)V	<init>	<init>
		p	1		dolphin
		p	2		chance
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	(Ljd;III)Z	a	waterIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()Z	b	canUse
	m	(Ljd;III)Z	b	surfaceIsClear
		p	1		pos
		p	2		offsetX
		p	3		offsetZ
		p	4		multiplier
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	[I	a	STEPS_TO_CHECK
	f	Lcfm;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
c	cad	net/minecraft/world/entity/ai/goal/PathfinderGoalDoorInteract
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Z)V	a	setOpen
		p	1		open
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	h	isOpen
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	f	Lbtp;	d	mob
	f	Ljd;	e	doorPos
	f	Z	f	hasDoor
c	cae	net/minecraft/world/entity/ai/goal/PathfinderGoalEatTile
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()I	h	getEatAnimationTick
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_TALL_GRASS
	f	Lbtp;	c	mob
	f	Ldcw;	d	level
	f	I	e	eatAnimationTick
c	caf	net/minecraft/world/entity/ai/goal/PathfinderGoalFleeSun
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	h	setWantedPos
	m	()Lexc;	i	getHidePos
	f	Lbtw;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Ldcw;	f	level
c	cag	net/minecraft/world/entity/ai/goal/PathfinderGoalFloat
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lbtp;	a	mob
c	cah	net/minecraft/world/entity/ai/goal/PathfinderGoalFollowBoat
	m	(Lbtw;)V	<init>	<init>
		p	1		mob
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	I	a	timeToRecalcPath
	f	Lbtw;	b	mob
	f	Lcmx;	c	following
	f	Lbzv;	d	currentGoal
c	cai	net/minecraft/world/entity/ai/goal/PathfinderGoalFishSchool
	m	(Lcfd;)V	<init>	<init>
		p	1		fish
	m	()V	a	tick
	m	(Lcfd;)I	a	nextStartTick
		p	1		fish
	m	()Z	b	canUse
	m	(Lcfd;)Z	b	lambda$canUse$1
		p	0		fish
	m	()Z	c	canContinueToUse
	m	(Lcfd;)Z	c	lambda$canUse$0
		p	0		fish
	m	()V	d	start
	m	()V	e	stop
	f	I	a	INTERVAL_TICKS
	f	Lcfd;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
c	caj	net/minecraft/world/entity/ai/goal/PathfinderGoalFollowEntity
	m	(Lbtp;DFF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
	m	()V	a	tick
	m	(Lbtp;Lbtp;)Z	a	lambda$new$0
		p	1		target
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbtp;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Lbtp;	c	followingMob
	f	D	d	speedModifier
	f	Lcda;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
c	cak	net/minecraft/world/entity/ai/goal/PathfinderGoalFollowOwner
	m	(Lbul;DFF)V	<init>	<init>
		p	1		tameable
		p	2		speed
		p	4		minDistance
		p	5		maxDistance
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbul;	a	tamable
	f	Lbtn;	b	owner
	f	D	c	speedModifier
	f	Lcda;	d	navigation
	f	I	e	timeToRecalcPath
	f	F	f	stopDistance
	f	F	g	startDistance
	f	F	h	oldWaterCost
c	cal	net/minecraft/world/entity/ai/goal/PathfinderGoalFollowParent
	m	(Lcfe;D)V	<init>	<init>
		p	1		animal
		p	2		speed
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lcfe;	d	animal
	f	Lcfe;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
c	cam	net/minecraft/world/entity/ai/goal/PathfinderGoal
	m	()Z	U_	isInterruptable
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canUse
	m	(I)I	b	reducedTickDelay
		p	0		serverTicks
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Ljava/util/EnumSet;	j	getFlags
	f	Ljava/util/EnumSet;	a	flags
c	cam$a	net/minecraft/world/entity/ai/goal/PathfinderGoal$Type
	m	()[Lcam$a;	a	$values
	f	Lcam$a;	a	MOVE
	f	Lcam$a;	b	LOOK
	f	Lcam$a;	c	JUMP
	f	Lcam$a;	d	TARGET
	f	[Lcam$a;	e	$VALUES
c	can	net/minecraft/world/entity/ai/goal/PathfinderGoalSelector
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		profiler
	m	()V	a	tick
	m	(ILcam;)V	a	addGoal
		p	1		priority
		p	2		goal
	m	(Lcam$a;)V	a	disableControlFlag
		p	1		control
	m	(Lcam$a;Z)V	a	setControlFlag
		p	1		control
		p	2		enabled
	m	(Lcam;)V	a	removeGoal
		p	1		goal
	m	(Lcam;Lcca;)Z	a	lambda$removeGoal$1
	m	(Lcca;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
		p	0		goal
		p	1		controls
	m	(Lcca;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
		p	0		goal
		p	1		goalsByControl
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$2
	m	(Ljava/util/function/Predicate;)V	a	removeAllGoals
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lcca;)Z	a	lambda$removeAllGoals$0
		p	1		goal
	m	(Z)V	a	tickRunningGoals
		p	1		tickAll
	m	()Ljava/util/Set;	b	getAvailableGoals
	m	(Lcam$a;)V	b	enableControlFlag
		p	1		control
	f	Lcca;	a	NO_GOAL
	f	Ljava/util/Map;	b	lockedFlags
	f	Ljava/util/Set;	c	availableGoals
	f	Ljava/util/function/Supplier;	d	profiler
	f	Ljava/util/EnumSet;	e	disabledFlags
c	can$1	net/minecraft/world/entity/ai/goal/PathfinderGoalSelector$1
	m	()Z	b	canUse
c	can$2	net/minecraft/world/entity/ai/goal/PathfinderGoalSelector$2
	m	(ILcam;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	h	isRunning
c	cao	net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillageGolem
	m	(Lbtw;D)V	<init>	<init>
		p	1		entity
		p	2		speed
	m	(Laqu;Lkf;)Z	a	lambda$getRandomVillageSection$0
		p	1		sectionPos
	m	(Lcmk;)Z	a	doesVillagerWantGolem
		p	1		villager
	m	(Ljm;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Lkf;)Ljd;	a	getRandomPoiWithinSection
		p	1		pos
	m	()Lexc;	h	getPosition
	m	()Lexc;	k	getPositionTowardsAnywhere
	m	()Lexc;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Lexc;	m	getPositionTowardsPoi
	m	()Lkf;	n	getRandomVillageSection
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
c	cap	net/minecraft/world/entity/ai/goal/PathfinderGoalInteract
	m	(Lbtp;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbtp;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
c	caq	net/minecraft/world/entity/ai/goal/PathfinderGoalWaterJumpAbstract
c	car	net/minecraft/world/entity/ai/goal/PathfinderGoalPerch
	m	(Lcgb;)V	<init>	<init>
		p	1		tameable
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcgb;	a	entity
	f	Laqv;	b	owner
	f	Z	c	isSittingOnShoulder
c	cas	net/minecraft/world/entity/ai/goal/PathfinderGoalLeapAtTarget
	m	(Lbtp;F)V	<init>	<init>
		p	1		mob
		p	2		velocity
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lbtp;	a	mob
	f	Lbtn;	b	target
	f	F	c	yd
c	cat	net/minecraft/world/entity/ai/goal/PathfinderGoalLlamaFollow
	m	(Lchl;D)V	<init>	<init>
		p	1		llama
		p	2		speed
	m	()V	a	tick
	m	(Lbsr;)Z	a	lambda$canUse$0
		p	0		entity
	m	(Lchl;I)Z	a	firstIsLeashed
		p	1		llama
		p	2		length
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	f	Lchl;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
c	cau	net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtPlayer
	m	(Lbtp;Ljava/lang/Class;F)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
	m	(Lbtp;Ljava/lang/Class;FF)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
	m	(Lbtp;Ljava/lang/Class;FFZ)V	<init>	<init>
		p	1		mob
		p	2		targetType
		p	3		range
		p	4		chance
		p	5		lookForward
	m	()V	a	tick
	m	(Lbtn;)Z	a	lambda$canUse$1
	m	(Lbtp;Lbtn;)Z	a	lambda$new$0
		p	1		entity
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	F	a	DEFAULT_PROBABILITY
	f	Lbtp;	b	mob
	f	Lbsr;	c	lookAt
	f	F	d	lookDistance
	f	F	e	probability
	f	Ljava/lang/Class;	f	lookAtType
	f	Lcef;	g	lookAtContext
	f	I	h	lookTime
	f	Z	i	onlyHorizontal
c	cav	net/minecraft/world/entity/ai/goal/PathfinderGoalLookAtTradingPlayer
	m	(Lcmf;)V	<init>	<init>
		p	1		merchant
	m	()Z	b	canUse
	f	Lcmf;	h	villager
c	caw	net/minecraft/world/entity/ai/goal/PathfinderGoalMeleeAttack
	m	(Lbtw;DZ)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Lbtn;)V	a	checkAndPerformAttack
		p	1		target
	m	()Z	b	canUse
	m	(Lbtn;)Z	b	canPerformAttack
		p	1		target
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
	f	Lbtw;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Leps;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
c	cax	net/minecraft/world/entity/ai/goal/PathfinderGoalStrollVillage
	m	(Lbtw;DZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		canDespawn
	m	()Z	b	canUse
	m	()Lexc;	h	getPosition
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
c	cay	net/minecraft/world/entity/ai/goal/PathfinderGoalMoveThroughVillage
	m	(Lbtw;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		requiresNighttime
		p	5		distance
		p	6		doorPassingThroughGetter
	m	(Laqu;Ljd;Ljd;)D	a	lambda$canUse$2
		p	3		pos
	m	(Ljd;)Z	a	hasNotVisited
		p	1		pos
	m	(Ljd;Ljd;)Ljava/lang/Double;	a	lambda$canUse$1
	m	(Ljm;)Z	a	lambda$canUse$3
		p	0		poiType
	m	()Z	b	canUse
	m	(Ljm;)Z	b	lambda$canUse$0
		p	0		poiType
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	h	updateVisited
	f	Lbtw;	a	mob
	f	D	b	speedModifier
	f	Leps;	c	path
	f	Ljd;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
c	caz	net/minecraft/world/entity/ai/goal/PathfinderGoalGotoTarget
	m	(Lbtw;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
	m	(Lbtw;DII)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Lbtw;)I	a	nextStartTick
		p	1		mob
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Ljd;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	f	Lbtw;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	Ljd;	e	blockPos
	f	I	f	verticalSearchStart
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	I	j	maxStayTicks
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
c	cba	net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsRestriction
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lbtw;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
c	cbb	net/minecraft/world/entity/ai/goal/PathfinderGoalMoveTowardsTarget
	m	(Lbtw;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		maxDistance
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbtw;	a	mob
	f	Lbtn;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
c	cbc	net/minecraft/world/entity/ai/goal/PathfinderGoalOcelotAttack
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	f	Lbtp;	a	mob
	f	Lbtn;	b	target
	f	I	c	attackTime
c	cbd	net/minecraft/world/entity/ai/goal/PathfinderGoalOfferFlower
	m	(Lcfq;)V	<init>	<init>
		p	1		golem
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	I	a	OFFER_TICKS
	f	Lcef;	b	OFFER_TARGER_CONTEXT
	f	Lcfq;	c	golem
	f	Lcmk;	d	villager
	f	I	e	tick
c	cbe	net/minecraft/world/entity/ai/goal/PathfinderGoalDoorOpen
	m	(Lbtp;Z)V	<init>	<init>
		p	1		mob
		p	2		delayedClose
	m	()V	a	tick
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Z	a	closeDoor
	f	I	b	forgetTime
c	cbf	net/minecraft/world/entity/ai/goal/PathfinderGoalPanic
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbtw;DLawu;)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		dangerousDamageTypes
	m	(Lbtw;DLjava/util/function/Function;)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		entityToDangerousDamageTypes
	m	(Lawu;Lbtw;)Lawu;	a	lambda$new$0
		p	1		entity
	m	(Ldcc;Lbsr;I)Ljd;	a	lookForWater
		p	1		world
		p	2		entity
		p	3		rangeX
	m	(Ldcc;Ljd;)Z	a	lambda$lookForWater$1
		p	1		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	f	Ljava/util/function/Function;	a	panicCausingDamageTypes
	f	I	b	WATER_CHECK_DISTANCE_VERTICAL
	f	Lbtw;	c	mob
	f	D	d	speedModifier
	f	D	e	posX
	f	D	f	posY
	f	D	g	posZ
	f	Z	h	isRunning
c	cbg	net/minecraft/world/entity/ai/goal/PathfinderGoalRaid
	m	(Lcoj;)V	<init>	<init>
		p	1		actor
	m	()V	a	tick
	m	(Lcoi;)V	a	recruitNearby
		p	1		raid
	m	(Lcoi;Lcoj;)Z	a	lambda$recruitNearby$0
		p	1		raider
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lcoj;	c	mob
	f	I	d	recruitmentTick
c	cbh	net/minecraft/world/entity/ai/goal/PathfinderGoalRandomLookaround
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lbtp;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
c	cbi	net/minecraft/world/entity/ai/goal/RandomStandGoal
	m	(Lchi;)V	<init>	<init>
		p	1		entity
	m	()Z	V_	requiresUpdateEveryTick
	m	(Lchi;)V	a	resetStandInterval
		p	1		entity
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	h	playStandSound
	f	Lchi;	a	horse
	f	I	b	nextStand
c	cbj	net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStroll
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbtw;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	(Lbtw;DIZ)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		chance
		p	5		canDespawn
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	(I)V	c	setInterval
		p	1		chance
	m	()V	d	start
	m	()V	e	stop
	m	()Lexc;	h	getPosition
	m	()V	i	trigger
	f	I	a	DEFAULT_INTERVAL
	f	Lbtw;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
c	cbk	net/minecraft/world/entity/ai/goal/PathfinderGoalRandomSwim
	m	(Lbtw;DI)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		chance
	m	()Lexc;	h	getPosition
c	cbl	net/minecraft/world/entity/ai/goal/PathfinderGoalArrowAttack
	m	(Lckh;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	(Lckh;DIIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		minIntervalTicks
		p	5		maxIntervalTicks
		p	6		maxShootRange
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	f	Lbtp;	a	mob
	f	Lckh;	b	rangedAttackMob
	f	Lbtn;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
c	cbm	net/minecraft/world/entity/ai/goal/PathfinderGoalBowShoot
	m	(Lckd;DIF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		attackInterval
		p	5		range
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	(I)V	c	setMinAttackInterval
		p	1		attackInterval
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	isHoldingBow
	f	Lckd;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
c	cbn	net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack
	m	(Lckd;DF)V	<init>	<init>
		p	1		actor
		p	2		speed
		p	4		range
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()Z	h	isHoldingCrossbow
	m	()Z	i	isValidTarget
	m	()Z	k	canRun
	f	Lbqc;	a	PATHFINDING_DELAY_RANGE
	f	Lckd;	b	mob
	f	Lcbn$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
c	cbn$a	net/minecraft/world/entity/ai/goal/PathfinderGoalCrossbowAttack$State
	m	()[Lcbn$a;	a	$values
	f	Lcbn$a;	a	UNCHARGED
	f	Lcbn$a;	b	CHARGING
	f	Lcbn$a;	c	CHARGED
	f	Lcbn$a;	d	READY_TO_ATTACK
	f	[Lcbn$a;	e	$VALUES
c	cbo	net/minecraft/world/entity/ai/goal/PathfinderGoalRemoveBlock
	m	(Ldfy;Lbtw;DI)V	<init>	<init>
		p	1		targetBlock
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	()V	a	tick
	m	(Ldcw;Ljd;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Ldcx;Ljd;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ljd;Ldcc;)Ljd;	a	getPosWithBlock
		p	1		pos
		p	2		world
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Ldfy;	g	blockToRemove
	f	Lbtp;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
c	cbp	net/minecraft/world/entity/ai/goal/PathfinderGoalRestrictSun
	m	(Lbtw;)V	<init>	<init>
		p	1		mob
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbtw;	a	mob
c	cbq	net/minecraft/world/entity/ai/goal/PathfinderGoalTame
	m	(Lchi;D)V	<init>	<init>
		p	1		horse
		p	2		speed
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lchi;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
c	cbr	net/minecraft/world/entity/ai/goal/PathfinderGoalSit
	m	(Lbul;)V	<init>	<init>
		p	1		tameable
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbul;	a	mob
c	cbs	net/minecraft/world/entity/ai/goal/PathfinderGoalNearestVillage
	m	(Lbtw;I)V	<init>	<init>
		p	1		mob
		p	2		searchRange
	m	()V	a	tick
	m	(Laqu;Ljd;)D	a	lambda$canUse$0
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	h	moveRandomly
	f	I	a	DISTANCE_THRESHOLD
	f	Lbtw;	b	mob
	f	I	c	interval
	f	Ljd;	d	wantedPos
c	cbt	net/minecraft/world/entity/ai/goal/PathfinderGoalSwell
	m	(Lcjp;)V	<init>	<init>
		p	1		creeper
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjp;	a	creeper
	f	Lbtn;	b	target
c	cbu	net/minecraft/world/entity/ai/goal/PathfinderGoalTempt
	m	(Lbtw;DLjava/util/function/Predicate;Z)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	4		foodPredicate
		p	5		canBeScared
	m	()V	a	tick
	m	(Lbtn;)Z	a	shouldFollow
		p	1		entity
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	canScare
	m	()Z	i	isRunning
	f	Lbtw;	a	mob
	f	Lcmx;	b	player
	f	Lcef;	c	TEMP_TARGETING
	f	Lcef;	d	targetingConditions
	f	D	e	speedModifier
	f	D	f	px
	f	D	g	py
	f	D	h	pz
	f	D	i	pRotX
	f	D	j	pRotY
	f	I	k	calmDown
	f	Z	l	isRunning
	f	Ljava/util/function/Predicate;	m	items
	f	Z	n	canScare
c	cbv	net/minecraft/world/entity/ai/goal/PathfinderGoalTradeWithPlayer
	m	(Lcmf;)V	<init>	<init>
		p	1		merchant
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcmf;	a	mob
c	cbw	net/minecraft/world/entity/ai/goal/PathfinderGoalWater
	m	(Lbtw;)V	<init>	<init>
		p	1		mob
	m	()Z	b	canUse
	m	()V	d	start
	f	Lbtw;	a	mob
c	cbx	net/minecraft/world/entity/ai/goal/PathfinderGoalUseItem
	m	(Lbtp;Lcuq;Lavo;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		item
		p	3		sound
		p	4		condition
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lbtp;	a	mob
	f	Lcuq;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Lavo;	d	finishUsingSound
c	cby	net/minecraft/world/entity/ai/goal/PathfinderGoalRandomFly
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lexc;	h	getPosition
c	cbz	net/minecraft/world/entity/ai/goal/PathfinderGoalRandomStrollLand
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	(Lbtw;DF)V	<init>	<init>
		p	1		mob
		p	2		speed
		p	4		probability
	m	()Lexc;	h	getPosition
	f	F	i	PROBABILITY
	f	F	j	probability
c	cca	net/minecraft/world/entity/ai/goal/PathfinderGoalWrapped
	m	(ILcam;)V	<init>	<init>
		p	1		priority
		p	2		goal
	m	()Z	U_	isInterruptable
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(I)I	a	adjustedTickDelay
		p	1		ticks
	m	(Lcca;)Z	a	canBeReplacedBy
		p	1		goal
	m	(Ljava/util/EnumSet;)V	a	setFlags
		p	1		controls
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Lcam;	k	getGoal
	f	Lcam;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
c	ccb	net/minecraft/world/entity/ai/goal/PathfinderGoalZombieAttack
	m	(Lckw;DZ)V	<init>	<init>
		p	1		zombie
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()V	a	tick
	m	()V	d	start
	m	()V	e	stop
	f	Lckw;	b	zombie
	f	I	c	raiseArmTicks
c	ccd	net/minecraft/world/entity/ai/goal/target/PathfinderGoalDefendVillage
	m	(Lcfq;)V	<init>	<init>
		p	1		golem
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfq;	a	golem
	f	Lbtn;	b	potentialTarget
	f	Lcef;	c	attackTargeting
c	cce	net/minecraft/world/entity/ai/goal/target/PathfinderGoalHurtByTarget
	m	(Lbtw;[Ljava/lang/Class;)V	<init>	<init>
		p	1		mob
		p	2		noRevengeTypes
	m	(Lbtp;Lbtn;)V	a	alertOther
		p	1		mob
		p	2		target
	m	([Ljava/lang/Class;)Lcce;	a	setAlertOthers
		p	1		noHelpTypes
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	h	alertOthers
	f	Lcef;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
c	ccf	net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTarget
	m	(Lbtp;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	(Lbtp;Ljava/lang/Class;Z)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
	m	(Lbtp;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	(Lbtp;Ljava/lang/Class;ZZ)V	<init>	<init>
		p	1		mob
		p	2		targetClass
		p	3		checkVisibility
		p	4		checkCanNavigate
	m	(D)Lewx;	a	getTargetSearchArea
		p	1		distance
	m	(Lbtn;)V	a	setTarget
		p	1		targetEntity
	m	()Z	b	canUse
	m	(Lbtn;)Z	b	lambda$findTarget$0
	m	()V	d	start
	m	()V	h	findTarget
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Lbtn;	c	target
	f	Lcef;	d	targetConditions
	f	I	i	DEFAULT_RANDOM_INTERVAL
c	ccg	net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestAttackableTargetWitch
	m	(Lcoj;Ljava/lang/Class;IZZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		actor
		p	2		targetEntityClass
		p	3		reciprocalChance
		p	4		checkVisibility
		p	5		checkCanNavigate
		p	6		targetPredicate
	m	(Z)V	a	setCanAttack
		p	1		enabled
	m	()Z	b	canUse
	f	Z	i	canAttack
c	cch	net/minecraft/world/entity/ai/goal/target/PathfinderGoalNearestHealableRaider
	m	(Lcoj;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		raider
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	b	canUse
	m	()V	d	start
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
c	cci	net/minecraft/world/entity/ai/goal/target/PathfinderGoalRandomTargetNonTamed
	m	(Lbul;Ljava/lang/Class;ZLjava/util/function/Predicate;)V	<init>	<init>
		p	1		tameable
		p	2		targetClass
		p	3		checkVisibility
		p	4		targetPredicate
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lbul;	i	tamableMob
c	ccj	net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtByTarget
	m	(Lbul;)V	<init>	<init>
		p	1		tameable
	m	()Z	b	canUse
	m	()V	d	start
	f	Lbul;	a	tameAnimal
	f	Lbtn;	b	ownerLastHurtBy
	f	I	c	timestamp
c	cck	net/minecraft/world/entity/ai/goal/target/PathfinderGoalOwnerHurtTarget
	m	(Lbul;)V	<init>	<init>
		p	1		tameable
	m	()Z	b	canUse
	m	()V	d	start
	f	Lbul;	a	tameAnimal
	f	Lbtn;	b	ownerLastHurt
	f	I	c	timestamp
c	ccl	net/minecraft/world/entity/ai/goal/target/PathfinderGoalUniversalAngerReset
	m	(Lbtp;Z)V	<init>	<init>
		p	1		mob
		p	2		triggerOthers
	m	(Lbtp;)Lbtt;	a	lambda$start$1
		p	0		entity
	m	()Z	b	canUse
	m	(Lbtp;)Z	b	lambda$start$0
		p	1		entity
	m	()V	d	start
	m	()Z	h	wasHurtByPlayer
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	f	I	a	ALERT_RANGE_Y
	f	Lbtp;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
c	ccm	net/minecraft/world/entity/ai/goal/target/PathfinderGoalTarget
	m	(Lbtp;Z)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
	m	(Lbtp;ZZ)V	<init>	<init>
		p	1		mob
		p	2		checkVisibility
		p	3		checkNavigable
	m	(Lbtn;)Z	a	canReach
		p	1		entity
	m	(Lbtn;Lcef;)Z	a	canAttack
		p	1		target
		p	2		targetPredicate
	m	()Z	c	canContinueToUse
	m	(I)Lccm;	c	setUnseenMemoryTicks
		p	1		time
	m	()V	d	start
	m	()V	e	stop
	m	()D	l	getFollowDistance
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Z	d	mustReach
	f	Lbtp;	e	mob
	f	Z	f	mustSee
	f	Lbtn;	g	targetMob
	f	I	h	unseenMemoryTicks
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
c	cco	net/minecraft/world/entity/ai/gossip/Reputation
	m	()Ljava/util/Map;	a	getGossipEntries
	m	(II)I	a	mergeValuesForTransfer
		p	0		left
		p	1		right
	m	(Layw;I)Ljava/util/Collection;	a	selectGossipsForTransfer
		p	1		random
		p	2		count
	m	(Lcco$b;)V	a	lambda$update$9
		p	1		entry
	m	(Lcco;Layw;I)V	a	transferFrom
		p	1		from
		p	2		random
		p	3		count
	m	(Lccp;)V	a	remove
		p	1		type
	m	(Lccp;II)I	a	mergeValuesForAddition
		p	1		type
		p	2		left
		p	3		right
	m	(Lccp;Ljava/util/function/DoublePredicate;)J	a	getCountForType
		p	1		type
		p	2		predicate
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/util/stream/Stream;	a	lambda$update$8
	m	(Lcom/mojang/serialization/Dynamic;)V	a	update
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	store
		p	1		ops
	m	(Ljava/lang/String;)V	a	lambda$update$7
		p	0		error
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$1
		p	0		entry
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$0
		p	2		uuid
	m	(Ljava/util/UUID;)Lcco$a;	a	getOrCreate
		p	1		target
	m	(Ljava/util/UUID;Lccp;)V	a	remove
		p	1		target
		p	2		type
	m	(Ljava/util/UUID;Lccp;I)V	a	add
		p	1		target
		p	2		type
		p	3		value
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
		p	1		target
		p	2		gossipTypeFilter
	m	(Ljava/util/function/DoublePredicate;Lccp;Lcco$a;)Z	a	lambda$getCountForType$4
		p	2		reputation
	m	()V	b	decay
	m	(Lcco$b;)V	b	lambda$transferFrom$3
		p	1		gossip
	m	(Lccp;II)I	b	lambda$add$5
		p	2		left
		p	3		right
	m	(Ljava/lang/String;)V	b	lambda$store$6
		p	0		error
	m	(Ljava/util/UUID;)Lcco$a;	b	lambda$getOrCreate$2
		p	0		uuid
	m	(Ljava/util/UUID;Lccp;I)V	b	remove
		p	1		target
		p	2		type
		p	3		value
	m	()Ljava/util/stream/Stream;	c	unpack
	f	I	a	DISCARD_THRESHOLD
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	gossips
c	cco$a	net/minecraft/world/entity/ai/gossip/Reputation$a
	m	()V	a	decay
	m	(Lccp;)V	a	makeSureValueIsntTooLowOrTooHigh
		p	1		gossipType
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
		p	0		entry
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
		p	1		target
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcco$b;	a	lambda$unpack$2
		p	1		entry
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
		p	1		gossipTypeFilter
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
		p	1		entry
	m	()Z	b	isEmpty
	m	(Lccp;)V	b	remove
		p	1		gossipType
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
c	cco$b	net/minecraft/world/entity/ai/gossip/Reputation$b
	m	(Ljava/util/UUID;Lccp;I)V	<init>	<init>
		p	1		target
		p	2		type
		p	3		value
	m	()I	a	weightedValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/UUID;	b	target
	m	()Lccp;	c	type
	m	()I	d	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljava/util/UUID;	c	target
	f	Lccp;	d	type
	f	I	e	value
c	ccp	net/minecraft/world/entity/ai/gossip/ReputationType
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
		p	3		key
		p	4		multiplier
		p	5		maxReputation
		p	6		decay
		p	7		shareDecrement
	m	()[Lccp;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lccp;	a	MAJOR_NEGATIVE
	f	Lccp;	b	MINOR_NEGATIVE
	f	Lccp;	c	MINOR_POSITIVE
	f	Lccp;	d	MAJOR_POSITIVE
	f	Lccp;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Lcom/mojang/serialization/Codec;	n	CODEC
	f	[Lccp;	o	$VALUES
c	ccr	net/minecraft/world/entity/ai/memory/ExpirableMemory
	m	(Ljava/lang/Object;J)V	<init>	<init>
		p	1		value
		p	2		expiry
	m	()V	a	tick
	m	(Lccr;)Ljava/util/Optional;	a	lambda$codec$1
		p	0		memory
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	(Ljava/lang/Object;)Lccr;	a	of
		p	0		value
	m	(Ljava/lang/Object;J)Lccr;	a	of
		p	0		value
		p	1		expiry
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lccr;	a	lambda$codec$2
		p	0		value
		p	1		expiry
	m	()J	b	getTimeToLive
	m	(Lccr;)Ljava/lang/Object;	b	lambda$codec$0
		p	0		memory
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Z	e	canExpire
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
c	ccs	net/minecraft/world/entity/ai/memory/MemoryModuleType
	m	(Ljava/util/Optional;)V	<init>	<init>
		p	1		codec
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;)Lccs;	a	register
		p	0		id
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lccs;	a	register
		p	0		id
		p	1		codec
	f	Lccs;	A	NEAREST_HOSTILE
	f	Lccs;	B	NEAREST_ATTACKABLE
	f	Lccs;	C	HIDING_PLACE
	f	Lccs;	D	HEARD_BELL_TIME
	f	Lccs;	E	CANT_REACH_WALK_TARGET_SINCE
	f	Lccs;	F	GOLEM_DETECTED_RECENTLY
	f	Lccs;	G	DANGER_DETECTED_RECENTLY
	f	Lccs;	H	LAST_SLEPT
	f	Lccs;	I	LAST_WOKEN
	f	Lccs;	J	LAST_WORKED_AT_POI
	f	Lccs;	K	NEAREST_VISIBLE_ADULT
	f	Lccs;	L	NEAREST_VISIBLE_WANTED_ITEM
	f	Lccs;	M	NEAREST_VISIBLE_NEMESIS
	f	Lccs;	N	PLAY_DEAD_TICKS
	f	Lccs;	O	TEMPTING_PLAYER
	f	Lccs;	P	TEMPTATION_COOLDOWN_TICKS
	f	Lccs;	Q	GAZE_COOLDOWN_TICKS
	f	Lccs;	R	IS_TEMPTED
	f	Lccs;	S	LONG_JUMP_COOLDOWN_TICKS
	f	Lccs;	T	LONG_JUMP_MID_JUMP
	f	Lccs;	U	HAS_HUNTING_COOLDOWN
	f	Lccs;	V	RAM_COOLDOWN_TICKS
	f	Lccs;	W	RAM_TARGET
	f	Lccs;	X	IS_IN_WATER
	f	Lccs;	Y	IS_PREGNANT
	f	Lccs;	Z	IS_PANICKING
	f	Lccs;	aA	RECENT_PROJECTILE
	f	Lccs;	aB	IS_SNIFFING
	f	Lccs;	aC	IS_EMERGING
	f	Lccs;	aD	ROAR_SOUND_DELAY
	f	Lccs;	aE	DIG_COOLDOWN
	f	Lccs;	aF	ROAR_SOUND_COOLDOWN
	f	Lccs;	aG	SNIFF_COOLDOWN
	f	Lccs;	aH	TOUCH_COOLDOWN
	f	Lccs;	aI	VIBRATION_COOLDOWN
	f	Lccs;	aJ	SONIC_BOOM_COOLDOWN
	f	Lccs;	aK	SONIC_BOOM_SOUND_COOLDOWN
	f	Lccs;	aL	SONIC_BOOM_SOUND_DELAY
	f	Lccs;	a	DUMMY
	f	Lccs;	aM	LIKED_PLAYER
	f	Lccs;	aN	LIKED_NOTEBLOCK_POSITION
	f	Lccs;	aO	LIKED_NOTEBLOCK_COOLDOWN_TICKS
	f	Lccs;	aP	ITEM_PICKUP_COOLDOWN_TICKS
	f	Lccs;	aQ	SNIFFER_EXPLORED_POSITIONS
	f	Lccs;	aR	SNIFFER_SNIFFING_TARGET
	f	Lccs;	aS	SNIFFER_DIGGING
	f	Lccs;	aT	SNIFFER_HAPPY
	f	Lccs;	aU	BREEZE_JUMP_COOLDOWN
	f	Lccs;	aV	BREEZE_SHOOT
	f	Lccs;	aW	BREEZE_SHOOT_CHARGING
	f	Lccs;	aX	BREEZE_SHOOT_RECOVERING
	f	Lccs;	aY	BREEZE_SHOOT_COOLDOWN
	f	Lccs;	aZ	BREEZE_JUMP_INHALING
	f	Lccs;	aa	UNREACHABLE_TONGUE_TARGETS
	f	Lccs;	ab	ANGRY_AT
	f	Lccs;	ac	UNIVERSAL_ANGER
	f	Lccs;	ad	ADMIRING_ITEM
	f	Lccs;	ae	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lccs;	af	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lccs;	ag	ADMIRING_DISABLED
	f	Lccs;	ah	HUNTED_RECENTLY
	f	Lccs;	ai	CELEBRATE_LOCATION
	f	Lccs;	aj	DANCING
	f	Lccs;	ak	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lccs;	al	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lccs;	am	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lccs;	an	NEARBY_ADULT_PIGLINS
	f	Lccs;	ao	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lccs;	ap	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lccs;	aq	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lccs;	ar	NEAREST_VISIBLE_ZOMBIFIED
	f	Lccs;	as	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lccs;	at	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lccs;	au	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lccs;	av	ATE_RECENTLY
	f	Lccs;	aw	NEAREST_REPELLENT
	f	Lccs;	ax	PACIFIED
	f	Lccs;	ay	ROAR_TARGET
	f	Lccs;	az	DISTURBANCE_LOCATION
	f	Lccs;	b	HOME
	f	Lccs;	ba	BREEZE_JUMP_TARGET
	f	Lccs;	bb	BREEZE_LEAVING_WATER
	f	Ljava/util/Optional;	bc	codec
	f	Lccs;	c	JOB_SITE
	f	Lccs;	d	POTENTIAL_JOB_SITE
	f	Lccs;	e	MEETING_POINT
	f	Lccs;	f	SECONDARY_JOB_SITE
	f	Lccs;	g	NEAREST_LIVING_ENTITIES
	f	Lccs;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lccs;	i	VISIBLE_VILLAGER_BABIES
	f	Lccs;	j	NEAREST_PLAYERS
	f	Lccs;	k	NEAREST_VISIBLE_PLAYER
	f	Lccs;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lccs;	m	WALK_TARGET
	f	Lccs;	n	LOOK_TARGET
	f	Lccs;	o	ATTACK_TARGET
	f	Lccs;	p	ATTACK_COOLING_DOWN
	f	Lccs;	q	INTERACTION_TARGET
	f	Lccs;	r	BREED_TARGET
	f	Lccs;	s	RIDE_TARGET
	f	Lccs;	t	PATH
	f	Lccs;	u	INTERACTABLE_DOORS
	f	Lccs;	v	DOORS_TO_CLOSE
	f	Lccs;	w	NEAREST_BED
	f	Lccs;	x	HURT_BY
	f	Lccs;	y	HURT_BY_ENTITY
	f	Lccs;	z	AVOID_TARGET
c	cct	net/minecraft/world/entity/ai/memory/MemoryStatus
	m	()[Lcct;	a	$values
	f	Lcct;	a	VALUE_PRESENT
	f	Lcct;	b	VALUE_ABSENT
	f	Lcct;	c	REGISTERED
	f	[Lcct;	d	$VALUES
c	ccu	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	m	(Lbtn;Ljava/util/List;)V	<init>	<init>
		p	1		owner
		p	2		entities
	m	()Lccu;	a	empty
	m	(Lbtn;)Z	a	contains
		p	1		entity
	m	(Lbtn;Lbtn;)Z	a	lambda$new$1
		p	1		entity
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lbtn;)Z	a	lambda$new$2
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbtn;)Z	a	lambda$find$4
		p	2		entity
	m	(Lbtn;)Z	b	lambda$new$0
		p	0		entity
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
		p	1		predicate
	m	(Ljava/util/function/Predicate;Lbtn;)Z	b	lambda$findAll$3
		p	2		entity
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
		p	1		predicate
	m	(Ljava/util/function/Predicate;)Z	d	contains
		p	1		predicate
	f	Lccu;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
c	ccv	net/minecraft/world/entity/ai/memory/MemoryTarget
	m	(Lbsr;FI)V	<init>	<init>
		p	1		entity
		p	2		speed
		p	3		completionRange
	m	(Lbwv;FI)V	<init>	<init>
		p	1		lookTarget
		p	2		speed
		p	3		completionRange
	m	(Lexc;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	(Ljd;FI)V	<init>	<init>
		p	1		pos
		p	2		speed
		p	3		completionRange
	m	()Lbwv;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
	f	Lbwv;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
c	ccx	net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lexc;)D	a	getGroundY
		p	1		pos
	m	(Lexc;Lexc;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lexc;	b	getTempMobPos
c	ccy	net/minecraft/world/entity/ai/navigation/NavigationFlying
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lbsr;I)Leps;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lexc;Lexc;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
	m	()Lexc;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	()V	c	tick
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
c	ccz	net/minecraft/world/entity/ai/navigation/Navigation
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	W_	trimPath
	m	()Z	a	canUpdatePath
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lbsr;I)Leps;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lepv;)Z	a	hasValidPathType
		p	1		pathType
	m	(Ljd;I)Leps;	a	createPath
		p	1		target
		p	2		distance
	m	()Lexc;	b	getTempMobPos
	m	(Z)V	b	setCanOpenDoors
		p	1		canPathThroughDoors
	m	(Z)V	c	setCanPassDoors
		p	1		canEnterOpenDoors
	m	(Z)V	d	setAvoidSun
		p	1		avoidSunlight
	m	()Z	e	canPassDoors
	m	(Z)V	e	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	f	canOpenDoors
	m	()I	s	getSurfaceY
	f	Z	p	avoidSun
c	cda	net/minecraft/world/entity/ai/navigation/NavigationAbstract
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()V	W_	trimPath
	m	()Z	a	canUpdatePath
	m	(D)V	a	setSpeedModifier
		p	1		speed
	m	(DDDD)Z	a	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	m	(DDDI)Leps;	a	createPath
		p	1		x
		p	3		y
		p	5		z
		p	7		distance
	m	(DDDID)Z	a	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		distance
		p	8		speed
	m	(F)V	a	setMaxVisitedNodesMultiplier
		p	1		rangeMultiplier
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lbsr;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbsr;I)Leps;	a	createPath
		p	1		entity
		p	2		distance
	m	(Lbtp;Lexc;Lexc;Z)Z	a	isClearForMovementBetween
		p	0		entity
		p	1		startPos
		p	2		entityPos
		p	3		includeFluids
	m	(Leps;D)Z	a	moveTo
		p	1		path
		p	2		speed
	m	(Lexc;)D	a	getGroundY
		p	1		pos
	m	(Lexc;Lexc;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Ljava/util/Set;I)Leps;	a	createPath
		p	1		positions
		p	2		distance
	m	(Ljava/util/Set;IZI)Leps;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
	m	(Ljava/util/Set;IZIF)Leps;	a	createPath
		p	1		positions
		p	2		range
		p	3		useHeadPos
		p	4		distance
		p	5		followRange
	m	(Ljava/util/stream/Stream;I)Leps;	a	createPath
		p	1		positions
		p	2		distance
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
	m	(Ljd;I)Leps;	a	createPath
		p	1		target
		p	2		distance
	m	(Ljd;II)Leps;	a	createPath
		p	1		target
		p	2		minDistance
		p	3		maxDistance
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lexc;	b	getTempMobPos
	m	(Lepv;)Z	b	canCutCorner
		p	1		nodeType
	m	(Lexc;)V	b	doStuckDetection
		p	1		currentPos
	m	(Ljd;)Z	b	shouldRecomputePath
		p	1		pos
	m	()V	c	tick
	m	(Lexc;)Z	c	shouldTargetNextNodeInDirection
		p	1		currentPos
	m	()V	e	timeoutPath
	m	()V	f	resetStuckTimeout
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	()Ljd;	h	getTargetPos
	m	()V	i	recomputePath
	m	()Leps;	j	getPath
	m	()V	k	followThePath
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Lepr;	o	getNodeEvaluator
	m	()Z	p	canFloat
	m	()F	q	getMaxDistanceToWaypoint
	m	()Z	r	isStuck
	f	Lbtp;	a	mob
	f	Ldcw;	b	level
	f	Leps;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Lexc;	g	lastStuckCheckPos
	f	Lkh;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Lepr;	o	nodeEvaluator
	f	I	p	MAX_TIME_RECOMPUTE
	f	I	q	STUCK_CHECK_INTERVAL
	f	F	r	STUCK_THRESHOLD_DISTANCE_FACTOR
	f	Ljd;	s	targetPos
	f	I	t	reachRange
	f	F	u	maxVisitedNodesMultiplier
	f	Lepu;	v	pathFinder
	f	Z	w	isStuck
c	cdb	net/minecraft/world/entity/ai/navigation/NavigationSpider
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(Lbsr;D)Z	a	moveTo
		p	1		entity
		p	2		speed
	m	(Lbsr;I)Leps;	a	createPath
		p	1		entity
		p	2		distance
	m	(Ljd;I)Leps;	a	createPath
		p	1		target
		p	2		distance
	m	()V	c	tick
	f	Ljd;	p	pathToPosition
c	cdc	net/minecraft/world/entity/ai/navigation/NavigationGuardian
	m	(Lbtp;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	()Z	a	canUpdatePath
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lexc;)D	a	getGroundY
		p	1		pos
	m	(Lexc;Lexc;)Z	a	canMoveDirectly
		p	1		origin
		p	2		target
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
	m	(Z)V	a	setCanFloat
		p	1		canSwim
	m	()Lexc;	b	getTempMobPos
	f	Z	p	allowBreaching
c	cdf	net/minecraft/world/entity/ai/sensing/SensorAdult
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbsl;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbsl;Lbtn;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Lbsl;Lccu;)V	a	setNearestVisibleAdult
		p	1		entity
		p	2		livingTarget
	m	(Lbsl;Lccu;)V	b	lambda$doTick$0
c	cdg	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	m	(Lbtn;Lbtn;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lccs;	b	getMemory
	m	(Lbtn;)Z	b	isHostileTarget
		p	1		axolotl
	m	(Lbtn;Lbtn;)Z	e	isHuntTarget
		p	1		axolotl
		p	2		target
	m	(Lbtn;Lbtn;)Z	f	isClose
		p	1		axolotl
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	cdh	net/minecraft/world/entity/ai/sensing/BreezeAttackEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lckz;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lckz;)V	a	lambda$doTick$2
	m	(Lckz;Lbtn;)V	a	lambda$doTick$1
	m	()I	b	radiusXZ
	m	(Lckz;Lbtn;)Z	b	lambda$doTick$0
	m	()I	c	radiusY
	f	I	a	BREEZE_SENSOR_RADIUS
c	cdi	net/minecraft/world/entity/ai/sensing/SensorDummy
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
c	cdj	net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	m	(Lbtn;Lbtn;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lccs;	b	getMemory
	m	(Lbtn;Lbtn;)Z	e	isUnreachableAttackTarget
		p	1		entity
		p	2		target
	f	F	a	TARGET_DETECTION_DISTANCE
c	cdk	net/minecraft/world/entity/ai/sensing/SensorGolemLastSeen
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)V	a	checkForNearbyGolem
		p	0		entity
	m	(Lbtn;)V	b	golemDetected
		p	0		entity
	m	(Lbtn;)Z	c	lambda$checkForNearbyGolem$0
	f	I	a	GOLEM_SCAN_RATE
	f	I	c	MEMORY_TIME_TO_LIVE
c	cdl	net/minecraft/world/entity/ai/sensing/SensorHoglinSpecific
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lclh;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Ljd;)Z	a	lambda$findNearestRepellent$1
		p	1		pos
	m	(Lbtn;)Z	a	lambda$doTick$0
	m	(Laqu;Lclh;)Ljava/util/Optional;	b	findNearestRepellent
		p	1		world
		p	2		hoglin
c	cdm	net/minecraft/world/entity/ai/sensing/SensorHurtBy
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbuq;Lbtn;)V	a	lambda$doTick$0
c	cdn	net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
c	cdo	net/minecraft/world/entity/ai/sensing/MobSensor
	m	(ILjava/util/function/BiPredicate;Ljava/util/function/Predicate;Lccs;I)V	<init>	<init>
		p	1		senseInterval
		p	2		threateningEntityPredicate
		p	3		canRollUpPredicate
		p	4		memoryModuleType
		p	5		expiry
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)V	a	checkForMobsNearby
		p	1		entity
	m	(Lbtn;Lbtn;)Z	a	lambda$checkForMobsNearby$0
		p	2		threat
	m	(Lbtn;)V	b	mobDetected
		p	1		entity
	m	(Lbtn;)V	c	clearMemory
		p	1		entity
	f	Ljava/util/function/BiPredicate;	a	mobTest
	f	Ljava/util/function/Predicate;	c	readyTest
	f	Lccs;	d	toSet
	f	I	e	memoryTimeToLive
c	cdp	net/minecraft/world/entity/ai/sensing/SensorNearestBed
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$2
	m	(Ljd;)Z	a	lambda$doTick$0
		p	1		pos
	m	(Ljm;)Z	a	lambda$doTick$1
	f	I	a	CACHE_TIMEOUT
	f	I	c	BATCH_SIZE
	f	I	d	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	batchCache
	f	I	f	triedCount
	f	J	g	lastUpdate
c	cdq	net/minecraft/world/entity/ai/sensing/SensorNearestItems
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtp;Lcjh;)Z	a	lambda$doTick$2
		p	1		itemEntity
	m	(Lcjh;)Z	a	lambda$doTick$0
		p	0		itemEntity
	m	(Lbtp;Lcjh;)Z	b	lambda$doTick$1
		p	1		itemEntity
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	f	J	c	XZ_RANGE
	f	J	d	Y_RANGE
c	cdr	net/minecraft/world/entity/ai/sensing/SensorNearestLivingEntities
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;Lbtn;)Z	a	lambda$doTick$0
		p	1		e
	m	()I	b	radiusXZ
	m	()I	c	radiusY
c	cds	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)Ljava/util/Optional;	a	getVisibleEntities
		p	1		entity
	m	(Lbtn;Lbtn;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	(Lbtn;Lccu;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	()Lccs;	b	getMemory
	m	(Lbtn;)Ljava/util/Optional;	b	getNearestEntity
		p	1		entity
	m	(Lbtn;Lbtn;)Z	e	lambda$getNearestEntity$0
c	cdt	net/minecraft/world/entity/ai/sensing/SensorPiglinBruteSpecific
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)Z	a	lambda$doTick$0
c	cdu	net/minecraft/world/entity/ai/sensing/SensorPiglinSpecific
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Ljd;)Z	a	isValidRepellent
		p	0		world
		p	1		pos
	m	(Lbtn;)Z	a	lambda$doTick$0
	m	(Laqu;Ljd;)Z	b	lambda$findNearestRepellent$1
		p	1		pos
	m	(Laqu;Lbtn;)Ljava/util/Optional;	c	findNearestRepellent
		p	0		world
		p	1		entity
c	cdv	net/minecraft/world/entity/ai/sensing/SensorNearestPlayers
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;Laqv;)Z	a	lambda$doTick$0
		p	1		player
	m	(Lbtn;Lcmx;)Z	a	lambda$doTick$2
		p	1		player
	m	(Lbtn;Lcmx;)Z	b	lambda$doTick$1
		p	1		player
c	cdw	net/minecraft/world/entity/ai/sensing/SensorSecondaryPlaces
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lcmk;)V	a	doTick
		p	1		world
		p	2		entity
	f	I	a	SCAN_RATE
c	cdx	net/minecraft/world/entity/ai/sensing/EntitySenses
	m	(Lbtp;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(Lbsr;)Z	a	hasLineOfSight
		p	1		entity
	f	Lbtp;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
c	cdy	net/minecraft/world/entity/ai/sensing/Sensor
	m	(I)V	<init>	<init>
		p	1		senseInterval
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;)V	b	tick
		p	1		world
		p	2		entity
	m	(Lbtn;Lbtn;)Z	b	isEntityTargetable
		p	0		entity
		p	1		target
	m	(Lbtn;Lbtn;)Z	c	isEntityAttackable
		p	0		entity
		p	1		target
	m	(Lbtn;Lbtn;)Z	d	isEntityAttackableIgnoringLineOfSight
		p	0		entity
		p	1		target
	f	Layw;	a	RANDOM
	f	I	b	TARGETING_RANGE
	f	I	c	DEFAULT_SCAN_RATE
	f	Lcef;	d	TARGET_CONDITIONS
	f	Lcef;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lcef;	f	ATTACK_TARGET_CONDITIONS
	f	Lcef;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lcef;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lcef;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
c	cdz	net/minecraft/world/entity/ai/sensing/SensorType
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		factory
	m	()Lcdy;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lcdz;	a	register
		p	0		id
		p	1		factory
	m	()Lcea;	b	lambda$static$6
	m	()Lcea;	c	lambda$static$5
	m	()Lcea;	d	lambda$static$4
	m	()Lcea;	e	lambda$static$3
	m	()Lcea;	f	lambda$static$2
	m	()Lcea;	g	lambda$static$1
	m	()Lcdo;	h	lambda$static$0
	f	Ljava/util/function/Supplier;	A	factory
	f	Lcdz;	a	DUMMY
	f	Lcdz;	b	NEAREST_ITEMS
	f	Lcdz;	c	NEAREST_LIVING_ENTITIES
	f	Lcdz;	d	NEAREST_PLAYERS
	f	Lcdz;	e	NEAREST_BED
	f	Lcdz;	f	HURT_BY
	f	Lcdz;	g	VILLAGER_HOSTILES
	f	Lcdz;	h	VILLAGER_BABIES
	f	Lcdz;	i	SECONDARY_POIS
	f	Lcdz;	j	GOLEM_DETECTED
	f	Lcdz;	k	ARMADILLO_SCARE_DETECTED
	f	Lcdz;	l	PIGLIN_SPECIFIC_SENSOR
	f	Lcdz;	m	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lcdz;	n	HOGLIN_SPECIFIC_SENSOR
	f	Lcdz;	o	NEAREST_ADULT
	f	Lcdz;	p	AXOLOTL_ATTACKABLES
	f	Lcdz;	q	AXOLOTL_TEMPTATIONS
	f	Lcdz;	r	GOAT_TEMPTATIONS
	f	Lcdz;	s	FROG_TEMPTATIONS
	f	Lcdz;	t	CAMEL_TEMPTATIONS
	f	Lcdz;	u	ARMADILLO_TEMPTATIONS
	f	Lcdz;	v	FROG_ATTACKABLES
	f	Lcdz;	w	IS_IN_WATER
	f	Lcdz;	x	WARDEN_ENTITY_SENSOR
	f	Lcdz;	y	SNIFFER_TEMPTATIONS
	f	Lcdz;	z	BREEZE_ATTACK_ENTITY_SENSOR
c	cea	net/minecraft/world/entity/ai/sensing/TemptingSensor
	m	(Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		predicate
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lbtw;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtw;Laqv;)Z	a	lambda$doTick$2
	m	(Lcmx;)Z	a	playerHoldingTemptation
		p	1		player
	m	(Lcuq;)Z	a	isTemptation
		p	1		stack
	m	(Lbtw;Laqv;)Z	b	lambda$doTick$1
		p	1		player
	m	(Lbtw;Laqv;)Z	c	lambda$doTick$0
		p	1		player
	f	I	a	TEMPTATION_RANGE
	f	Lcef;	c	TEMPT_TARGETING
	f	Ljava/util/function/Predicate;	d	temptations
c	ceb	net/minecraft/world/entity/ai/sensing/SensorVillagerBabies
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)Ljava/util/List;	a	getNearestVillagerBabies
		p	1		entities
	m	(Lbtn;)Z	b	isVillagerBaby
		p	1		entity
	m	(Lbtn;)Lccu;	c	getVisibleEntities
		p	1		entity
c	cec	net/minecraft/world/entity/ai/sensing/SensorVillagerHostiles
	m	(Lbtn;Lbtn;)Z	a	isMatchingEntity
		p	1		entity
		p	2		target
	m	()Lccs;	b	getMemory
	m	(Lbtn;)Z	b	isHostile
		p	1		entity
	m	(Lbtn;Lbtn;)Z	e	isClose
		p	1		villager
		p	2		target
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
c	ced	net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	m	()Ljava/util/Set;	a	requires
	m	(Laqu;Lbtn;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Laqu;Lcmb;)V	a	doTick
		p	1		world
		p	2		entity
	m	(Lbtn;)Z	a	lambda$doTick$1
		p	0		entityx
	m	(Lcmb;)V	a	lambda$doTick$4
	m	(Lcmb;Lbtn;)V	a	lambda$doTick$3
		p	1		entityx
	m	(Lcmb;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getClosest
		p	0		warden
		p	1		targetPredicate
	m	()I	b	radiusXZ
	m	(Lbtn;)Z	b	lambda$doTick$0
		p	0		entityx
	m	(Lcmb;)Ljava/util/Optional;	b	lambda$doTick$2
	m	()I	c	radiusY
c	cef	net/minecraft/world/entity/ai/targeting/PathfinderTargetCondition
	m	(Z)V	<init>	<init>
		p	1		attackable
	m	()Lcef;	a	forCombat
	m	(D)Lcef;	a	range
		p	1		baseMaxDistance
	m	(Lbtn;Lbtn;)Z	a	test
		p	1		baseEntity
		p	2		targetEntity
	m	(Ljava/util/function/Predicate;)Lcef;	a	selector
		p	1		predicate
	m	()Lcef;	b	forNonCombat
	m	()Lcef;	c	copy
	m	()Lcef;	d	ignoreLineOfSight
	m	()Lcef;	e	ignoreInvisibilityTesting
	f	Lcef;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Ljava/util/function/Predicate;	g	selector
c	ceh	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	(Lbtw;IIIDDD)Lexc;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
	m	(Lbtw;IIIDDDZ)Ljd;	a	generateRandomPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		rangeAngle
		p	10		posTargetInRange
	m	(Lbtw;Ljd;)Z	a	lambda$generateRandomPos$1
		p	1		pos
	m	(Lbtw;IIIDDDZ)Ljd;	b	lambda$getPos$0
c	cei	net/minecraft/world/entity/ai/util/AirRandomPos
	m	(Lbtw;IIILexc;D)Lexc;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		direction
		p	5		angleRange
	m	(Lbtw;IIILexc;DZ)Ljd;	a	lambda$getPosTowards$0
c	cej	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	(Lbtw;II)Lexc;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbtw;IILexc;)Lexc;	a	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbtw;IILexc;D)Lexc;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
		p	4		angleRange
	m	(Lbtw;IILexc;DZ)Ljd;	a	lambda$getPosTowards$1
	m	(Lbtw;IILexc;Z)Ljd;	a	lambda$getPosAway$2
	m	(Lbtw;IIZ)Ljd;	a	lambda$getPos$0
	m	(Lbtw;IZLjd;)Ljd;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		fuzz
c	cek	net/minecraft/world/entity/ai/util/PathfinderGoalUtil
	m	(Lbtp;)Z	a	hasGroundPathNavigation
		p	0		entity
	m	(Lbtw;I)Z	a	mobRestricted
		p	0		entity
		p	1		extraDistance
	m	(Lbtw;Ljd;)Z	a	isWater
		p	0		entity
		p	1		pos
	m	(Lcda;Ljd;)Z	a	isNotStable
		p	0		navigation
		p	1		pos
	m	(Ljd;Lbtw;)Z	a	isOutsideLimits
		p	0		pos
		p	1		entity
	m	(ZLbtw;Ljd;)Z	a	isRestricted
		p	0		posTargetInRange
		p	1		entity
		p	2		pos
	m	(Lbtw;Ljd;)Z	b	hasMalus
		p	0		entity
		p	1		pos
	m	(Lbtw;Ljd;)Z	c	isSolid
		p	0		entity
		p	1		pos
c	cel	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	(Lbtw;IIDDFII)Lexc;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		x
		p	5		z
		p	7		angle
		p	8		maxAboveSolid
		p	9		minAboveSolid
	m	(Lbtw;IIDDFZII)Ljd;	a	lambda$getPos$1
	m	(Lbtw;Ljd;)Z	a	lambda$getPos$0
		p	1		pos
c	cem	net/minecraft/world/entity/ai/util/LandRandomPos
	m	(Lbtw;II)Lexc;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
	m	(Lbtw;IILexc;)Lexc;	a	getPosTowards
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		end
	m	(Lbtw;IILexc;Z)Lexc;	a	getPosInDirection
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		direction
		p	4		posTargetInRange
	m	(Lbtw;IILjava/util/function/ToDoubleFunction;)Lexc;	a	getPos
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		scorer
	m	(Lbtw;IIZ)Ljd;	a	lambda$getPos$0
	m	(Lbtw;IZLjd;)Ljd;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		posTargetInRange
		p	3		relativeInRangePos
	m	(Lbtw;Ljd;)Ljd;	a	movePosUpOutOfSolid
		p	0		entity
		p	1		pos
	m	(Lbtw;IILexc;)Lexc;	b	getPosAway
		p	0		entity
		p	1		horizontalRange
		p	2		verticalRange
		p	3		start
	m	(Lbtw;IILexc;Z)Ljd;	b	lambda$getPosInDirection$1
	m	(Lbtw;Ljd;)Z	b	lambda$movePosUpOutOfSolid$2
		p	1		currentPos
c	cen	net/minecraft/world/entity/ai/util/RandomPositionGenerator
	m	(Layw;II)Ljd;	a	generateRandomDirection
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
	m	(Layw;IIIDDD)Ljd;	a	generateRandomDirectionWithinRadians
		p	0		random
		p	1		horizontalRange
		p	2		verticalRange
		p	3		startHeight
		p	4		directionX
		p	6		directionZ
		p	8		angleRange
	m	(Lbtw;ILayw;Ljd;)Ljd;	a	generateRandomPosTowardDirection
		p	0		entity
		p	1		horizontalRange
		p	2		random
		p	3		fuzz
	m	(Lbtw;Ljava/util/function/Supplier;)Lexc;	a	generateRandomPos
		p	0		entity
		p	1		factory
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lexc;	a	generateRandomPos
		p	0		factory
		p	1		scorer
	m	(Ljd;IILjava/util/function/Predicate;)Ljd;	a	moveUpToAboveSolid
		p	0		pos
		p	1		extraAbove
		p	2		max
		p	3		condition
	m	(Ljd;ILjava/util/function/Predicate;)Ljd;	a	moveUpOutOfSolid
		p	0		pos
		p	1		maxY
		p	2		condition
	f	I	a	RANDOM_POS_ATTEMPTS
c	cep	net/minecraft/world/entity/ai/village/ReputationEvent
	m	(Ljava/lang/String;)Lcep;	a	register
		p	0		key
	f	Lcep;	a	ZOMBIE_VILLAGER_CURED
	f	Lcep;	b	GOLEM_KILLED
	f	Lcep;	c	VILLAGER_HURT
	f	Lcep;	d	VILLAGER_KILLED
	f	Lcep;	e	TRADE
c	cep$1	net/minecraft/world/entity/ai/village/ReputationEvent$1
	f	Ljava/lang/String;	f	val$name
c	ceq	net/minecraft/world/entity/ai/village/VillageSiege
	m	(Laqu;)Z	a	tryToSetupSiege
		p	1		world
	m	(Laqu;Ljd;)Lexc;	a	findRandomSpawnPos
		p	1		world
		p	2		pos
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Laqu;)V	b	trySpawn
		p	1		world
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lceq$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
c	ceq$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	m	()[Lceq$a;	a	$values
	f	Lceq$a;	a	SIEGE_CAN_ACTIVATE
	f	Lceq$a;	b	SIEGE_TONIGHT
	f	Lceq$a;	c	SIEGE_DONE
	f	[Lceq$a;	d	$VALUES
c	ces	net/minecraft/world/entity/ai/village/poi/VillagePlace
	m	(Ldws;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLka;Ldwg;Ldcy;)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		dataFixer
		p	4		dsync
		p	5		registryManager
		p	6		errorHandler
		p	7		world
	m	(J)V	a	setDirty
		p	1		pos
	m	(Lakq;Ljd;)Z	a	existsAtPosition
		p	1		type
		p	2		pos
	m	(Lakq;Ljm;)Z	a	lambda$existsAtPosition$1
		p	1		entry
	m	(Lcet;)Ljd;	a	lambda$take$15
		p	0		poi
	m	(Lceu;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$23
		p	0		poiSet
	m	(Lcom/mojang/datafixers/util/Pair;)Ldcd;	a	lambda$ensureLoadedAndValid$31
	m	(Ldcd;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$5
	m	(Ldcz;Ldcd;)V	a	lambda$ensureLoadedAndValid$33
	m	(Ldcz;Ljd;I)V	a	ensureLoadedAndValid
		p	1		world
		p	2		pos
		p	3		radius
	m	(Ldvj;)Z	a	mayHavePoi
		p	0		chunkSection
	m	(Ldvj;Ljava/util/function/BiConsumer;Ljd;)V	a	lambda$updateFromSection$28
		p	2		pos
	m	(Ldvj;Lkf;)V	a	lambda$checkConsistencyWithBlocks$26
	m	(Ldvj;Lkf;Lceu;)V	a	lambda$checkConsistencyWithBlocks$25
		p	3		poiSet
	m	(Ldvj;Lkf;Ljava/util/function/BiConsumer;)V	a	updateFromSection
		p	1		chunkSection
		p	2		sectionPos
		p	3		populator
	m	(Ljava/util/function/BiConsumer;Ljd;Ljm;)V	a	lambda$updateFromSection$27
		p	2		poiType
	m	(Ljava/util/function/BiPredicate;Lcet;)Z	a	lambda$take$14
		p	1		poi
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Predicate;Lces$b;Ldcd;)Ljava/util/stream/Stream;	a	lambda$getInSquare$2
		p	3		chunkPos
	m	(Ljava/util/function/Predicate;Lces$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$6
	m	(Ljava/util/function/Predicate;Lcet;)Z	a	lambda$getRandom$16
		p	1		poi
	m	(Ljava/util/function/Predicate;Ldcd;Lces$b;)Ljava/util/stream/Stream;	a	getInChunk
		p	1		typePredicate
		p	2		chunkPos
		p	3		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Ljd;I)Ljava/util/Optional;	a	take
		p	1		typePredicate
		p	3		pos
		p	4		radius
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lces$b;Ljd;ILayw;)Ljava/util/Optional;	a	getRandom
		p	1		typePredicate
		p	2		positionPredicate
		p	3		occupationStatus
		p	4		pos
		p	5		radius
		p	6		random
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;	a	findAll
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Ljava/util/function/Predicate;Ljd;ILces$b;)J	a	getCountInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljd;)V	a	remove
		p	1		pos
	m	(Ljd;ILcet;)Z	a	lambda$getInRange$4
		p	2		poi
	m	(Ljd;Lcet;)D	a	lambda$findClosestWithType$11
		p	1		poi
	m	(Ljd;Lceu;)Ljava/lang/Integer;	a	lambda$getFreeTickets$21
		p	1		poiSet
	m	(Ljd;Lcom/mojang/datafixers/util/Pair;)D	a	lambda$findAllClosestFirstWithType$9
	m	(Ljd;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Ljd;Ljava/util/function/Predicate;Lceu;)Ljava/lang/Boolean;	a	lambda$exists$19
		p	2		poiSet
	m	(Ljd;Ljd;)D	a	lambda$findClosest$13
	m	(Ljd;Ljm;)V	a	add
		p	1		pos
		p	2		type
	m	(Ljm;)Z	a	lambda$isVillageCenter$22
		p	0		entry
	m	(Lkf;)I	a	sectionsToVillage
		p	1		pos
	m	(Lkf;Ldvj;)V	a	checkConsistencyWithBlocks
		p	1		sectionPos
		p	2		chunkSection
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Lcet;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findClosestWithType$12
		p	0		poi
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$30
	m	(Ldcd;)Z	b	lambda$ensureLoadedAndValid$32
		p	1		chunkPos
	m	(Ldvj;Lkf;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$24
		p	3		populator
	m	(Ljava/util/function/Predicate;Lcet;)Z	b	lambda$findAllWithType$7
		p	1		poi
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;	b	findAllWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;	b	getInSquare
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljd;)Z	b	release
		p	1		pos
	m	(Ljd;ILcet;)Z	b	lambda$getInSquare$3
		p	2		poi
	m	(Ljd;Lceu;)Ljava/util/Optional;	b	lambda$getType$20
		p	1		poiSet
	m	(Ljd;Ljd;)D	b	lambda$findClosest$10
	m	(Lkf;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$29
		p	1		sectionPos
	m	(Lcet;)Lcom/mojang/datafixers/util/Pair;	c	lambda$findAllWithType$8
		p	0		poi
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;	c	findAllClosestFirstWithType
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/stream/Stream;	c	getInRange
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljd;)Ljava/util/Optional;	c	getType
		p	1		pos
	m	(Ljd;Lceu;)Ljava/lang/Boolean;	c	lambda$release$17
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;	d	find
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;	d	findClosest
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljd;)I	d	getFreeTickets
		p	1		pos
	m	(Ljd;Lceu;)V	d	lambda$remove$0
		p	1		poiSet
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;	e	findClosest
		p	1		typePredicate
		p	2		posPredicate
		p	3		pos
		p	4		radius
		p	5		occupationStatus
	m	(Ljava/util/function/Predicate;Ljd;ILces$b;)Ljava/util/Optional;	e	findClosestWithType
		p	1		typePredicate
		p	2		pos
		p	3		radius
		p	4		occupationStatus
	m	(Ljd;)Ljava/lang/IllegalStateException;	e	lambda$release$18
	m	(J)Z	g	isVillageCenter
		p	1		pos
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lces$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
c	ces$a	net/minecraft/world/entity/ai/village/poi/VillagePlace$a
	m	()V	a	runAllUpdates
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(J)I	b	getLevelFromSource
		p	1		id
	m	(J)I	c	getLevel
		p	1		id
	f	Lces;	a	this$0
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
c	ces$b	net/minecraft/world/entity/ai/village/poi/VillagePlace$Occupancy
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lcet;)Z	a	lambda$static$0
		p	0		poi
	m	()[Lces$b;	b	$values
	f	Lces$b;	a	HAS_SPACE
	f	Lces$b;	b	IS_OCCUPIED
	f	Lces$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lces$b;	e	$VALUES
c	cet	net/minecraft/world/entity/ai/village/poi/VillagePlaceRecord
	m	(Ljd;Ljm;ILjava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		freeTickets
		p	4		updateListener
	m	(Ljd;Ljm;Ljava/lang/Runnable;)V	<init>	<init>
		p	1		pos
		p	2		type
		p	3		updateListener
	m	()I	a	getFreeTickets
	m	(Lcet;)Ljava/lang/Integer;	a	lambda$codec$2
		p	0		poi
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	1		instance
	m	()Z	b	acquireTicket
	m	(Lcet;)Ljm;	b	lambda$codec$1
		p	0		poi
	m	()Z	c	releaseTicket
	m	(Lcet;)Ljd;	c	lambda$codec$0
		p	0		poi
	m	()Z	d	hasSpace
	m	()Z	e	isOccupied
	m	()Ljd;	f	getPos
	m	()Ljm;	g	getPoiType
	f	Ljd;	a	pos
	f	Ljm;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
c	ceu	net/minecraft/world/entity/ai/village/poi/VillagePlaceSection
	m	(Ljava/lang/Runnable;)V	<init>	<init>
		p	1		updateListener
	m	(Ljava/lang/Runnable;ZLjava/util/List;)V	<init>	<init>
		p	1		updateListener
		p	2		valid
		p	3		pois
	m	()Z	a	isValid
	m	(Lcet;)Z	a	add
		p	1		poi
	m	(Lceu;)Ljava/util/List;	a	lambda$codec$1
		p	0		poiSet
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Ljd;Ljm;)V	a	lambda$refresh$8
		p	2		pos
	m	(Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		updateListener
	m	(Ljava/lang/Runnable;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$5
		p	0		entry
	m	(Ljava/util/function/Consumer;)V	a	refresh
		p	1		updater
	m	(Ljava/util/function/Predicate;Lces$b;)Ljava/util/stream/Stream;	a	getRecords
		p	1		predicate
		p	2		occupationStatus
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$4
		p	1		entry
	m	(Ljd;)V	a	remove
		p	1		pos
	m	(Ljd;Ljava/util/function/Predicate;)Z	a	exists
		p	1		pos
		p	2		predicate
	m	(Ljd;Ljm;)V	a	add
		p	1		pos
		p	2		type
	m	(Ljd;Ljm;S)Lcet;	a	lambda$refresh$7
	m	(Ljm;)Ljava/util/Set;	a	lambda$add$6
		p	0		type
	m	()V	b	clear
	m	(Lceu;)Ljava/lang/Boolean;	b	lambda$codec$0
		p	0		poiSet
	m	(Ljava/lang/Runnable;)Lceu;	b	lambda$codec$3
	m	(Ljd;)I	b	getFreeTickets
		p	1		pos
	m	(Ljd;)Z	c	release
		p	1		pos
	m	(Ljd;)Ljava/util/Optional;	d	getType
		p	1		pos
	m	(Ljd;)Ljava/util/Optional;	e	getPoiRecord
		p	1		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
c	cev	net/minecraft/world/entity/ai/village/poi/VillagePlaceType
	m	()Ljava/util/Set;	a	matchingStates
	m	(Ldtc;)Z	a	is
		p	1		state
	m	(Ljm;)Z	a	lambda$static$0
		p	0		type
	m	()I	b	maxTickets
	m	()I	c	validRange
	f	Ljava/util/function/Predicate;	a	NONE
	f	Ljava/util/Set;	b	matchingStates
	f	I	c	maxTickets
	f	I	d	validRange
c	cew	net/minecraft/world/entity/ai/village/poi/PoiTypes
	m	(Ldfy;)Ljava/util/Set;	a	getBlockStates
		p	0		block
	m	(Ldtc;)Ljava/util/Optional;	a	forState
		p	0		state
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljm;Ldtc;)V	a	lambda$registerBlockStates$3
		p	1		state
	m	(Ljm;Ljava/util/Set;)V	a	registerBlockStates
		p	0		poiTypeEntry
		p	1		states
	m	(Ljz;)Lcev;	a	bootstrap
		p	0		registry
	m	(Ljz;Lakq;Ljava/util/Set;II)Lcev;	a	register
		p	0		registry
		p	1		key
		p	2		states
		p	3		ticketCount
		p	4		searchDistance
	m	(Ldfy;)Ljava/util/stream/Stream;	b	lambda$static$2
	m	(Ldtc;)Z	b	hasPoi
		p	0		state
	m	(Ldfy;)Ljava/util/stream/Stream;	c	lambda$static$0
	m	(Ldtc;)Z	c	lambda$static$1
	f	Lakq;	a	ARMORER
	f	Lakq;	b	BUTCHER
	f	Lakq;	c	CARTOGRAPHER
	f	Lakq;	d	CLERIC
	f	Lakq;	e	FARMER
	f	Lakq;	f	FISHERMAN
	f	Lakq;	g	FLETCHER
	f	Lakq;	h	LEATHERWORKER
	f	Lakq;	i	LIBRARIAN
	f	Lakq;	j	MASON
	f	Lakq;	k	SHEPHERD
	f	Lakq;	l	TOOLSMITH
	f	Lakq;	m	WEAPONSMITH
	f	Lakq;	n	HOME
	f	Lakq;	o	MEETING
	f	Lakq;	p	BEEHIVE
	f	Lakq;	q	BEE_NEST
	f	Lakq;	r	NETHER_PORTAL
	f	Lakq;	s	LODESTONE
	f	Lakq;	t	LIGHTNING_ROD
	f	Ljava/util/Set;	u	BEDS
	f	Ljava/util/Set;	v	CAULDRONS
	f	Ljava/util/Map;	w	TYPE_BY_STATE
c	cey	net/minecraft/world/entity/ambient/EntityAmbient
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	y	canBeLeashed
c	cez	net/minecraft/world/entity/ambient/EntityBat
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aW	isFlapping
	m	()V	ab	customServerAiStep
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkBatSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bB	isPushable
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()F	fa	getSoundVolume
	m	()F	fb	getVoicePitch
	m	()V	gg	setupAnimationStates
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()V	r	pushEntities
	m	()Z	r_	isIgnoringBlockTriggers
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isResting
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isHalloween
	m	(Z)V	x	setResting
		p	1		roosting
	f	F	b	FLAP_LENGTH_SECONDS
	f	F	c	TICKS_PER_FLAP
	f	Lajw;	cb	DATA_ID_FLAGS
	f	I	cc	FLAG_RESTING
	f	Lcef;	cd	BAT_RESTING_TARGETING
	f	Ljd;	ce	targetPosition
	f	Lbsm;	d	flyAnimationState
	f	Lbsm;	e	restAnimationState
c	cfb	net/minecraft/world/entity/animal/EntityFish
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	Y	requiresCustomPersistence
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	aQ	getSwimSound
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	fN	getMaxSpawnClusterSize
	m	()Z	gk	canRandomSwim
	m	()Lavo;	gl	getFlopSound
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lub;)V	h	loadFromBucketTag
		p	1		nbt
	m	()V	m_	aiStep
	m	(Lcuq;)V	n	saveToBucketTag
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	fromBucket
	m	()Lavo;	x	getPickupSound
	m	(Z)V	x	setFromBucket
		p	1		fromBucket
	f	Lajw;	b	FROM_BUCKET
c	cfb$a	net/minecraft/world/entity/animal/EntityFish$a
	m	(Lcfb;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	f	Lcfb;	l	fish
c	cfb$b	net/minecraft/world/entity/animal/EntityFish$b
	m	(Lcfb;)V	<init>	<init>
		p	1		fish
	m	()Z	b	canUse
	f	Lcfb;	i	fish
c	cfc	net/minecraft/world/entity/animal/EntityGolem
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	R	getAmbientSoundInterval
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
c	cfd	net/minecraft/world/entity/animal/EntityFishSchool
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lcfd;)Lcfd;	a	startFollowing
		p	1		groupLeader
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
		p	1		fish
	m	(Lcfd;)V	b	lambda$addFollowers$1
		p	1		fishx
	m	(Lcfd;)Z	c	lambda$addFollowers$0
		p	1		fishx
	m	()I	fN	getMaxSpawnClusterSize
	m	()Z	gk	canRandomSwim
	m	()I	gm	getMaxSchoolSize
	m	()Z	gn	isFollower
	m	()V	go	stopFollowing
	m	()Z	gp	canBeFollowed
	m	()Z	gq	hasFollowers
	m	()Z	gr	inRangeOfLeader
	m	()V	gs	pathToLeader
	m	()V	gt	addFollower
	m	()V	gu	removeFollower
	m	()V	l	tick
	f	Lcfd;	b	leader
	f	I	c	schoolSize
c	cfd$a	net/minecraft/world/entity/animal/EntityFishSchool$a
	m	(Lcfd;)V	<init>	<init>
		p	1		leader
	f	Lcfd;	a	leader
c	cfe	net/minecraft/world/entity/animal/EntityAnimal
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	R	getAmbientSoundInterval
	m	(Laqu;Lcfe;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Laqu;Lcfe;Lbsl;)V	a	finalizeSpawnChildFromBreeding
		p	1		world
		p	2		other
		p	3		baby
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcfe;Lbsl;Laqv;)V	a	lambda$finalizeSpawnChildFromBreeding$1
		p	3		player
	m	(Lcmx;Lbqq;Lcuq;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Ldbz;Ljd;)Z	a	isBrightEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcfe;)Ljava/util/Optional;	b	lambda$finalizeSpawnChildFromBreeding$0
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	eg	getBaseExperienceReward
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lcmx;)V	f	setInLove
		p	1		player
	m	()Z	gp	canFallInLove
	m	()I	gq	getInLoveTime
	m	()Laqv;	gr	getLoveCause
	m	()Z	gs	isInLove
	m	()V	gt	resetLove
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	m_	aiStep
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(I)V	s	setInLoveTime
		p	1		loveTicks
	f	I	cc	inLove
	f	Ljava/util/UUID;	cd	loveCause
	f	I	cf	PARENT_AGE_AFTER_BREEDING
c	cff	net/minecraft/world/entity/animal/EntityBee
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcff;)Layw;	A	access$2600
	m	()V	B	registerGoals
	m	(Lcff;)Layw;	B	access$2700
	m	(Lcff;)Layw;	C	access$2800
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(F)F	H	getRollAmount
		p	1		tickDelta
	m	()I	a	getRemainingPersistentAngerTime
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcff;)Lcda;	a	access$000
	m	(Ldcw;DDDDDLlk;)V	a	spawnFluidParticle
		p	1		world
		p	2		lastX
		p	4		x
		p	6		lastZ
		p	8		z
		p	10		y
		p	12		effect
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aW	isFlapping
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Laqu;Lbsl;)Lcff;	b	getBreedOffspring
	m	(Lcff;)Layw;	b	access$100
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;I)Z	b	closerThan
		p	1		pos
		p	2		distance
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lawu;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lcff;)Lcda;	c	access$200
	m	()Lexc;	cM	getLeashOffset
	m	(IZ)V	d	setFlag
		p	1		bit
		p	2		value
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcff;)Lcda;	d	access$300
	m	(Lcff;)Lcda;	e	access$400
	m	(Lcff;)Lcda;	f	access$500
	m	()F	fa	getSoundVolume
	m	(Lcff;)Lcda;	g	access$600
	m	()Z	gA	wantsToEnterHive
	m	()V	gB	updateRollAmount
	m	()Z	gC	isHiveNearFire
	m	()I	gD	getCropsGrownSincePollination
	m	()V	gE	resetNumCropsGrownSincePollination
	m	()V	gF	incrementNumCropsGrownSincePollination
	m	()Z	gG	isHiveValid
	m	()Z	gH	isRolling
	m	()Ljava/util/List;	gk	getBlacklistedHives
	m	()V	gl	resetTicksWithoutNectarSinceExitingHive
	m	()Z	gm	hasHive
	m	()Ljd;	gn	getHivePos
	m	()Lcan;	go	getGoalSelector
	m	()Z	gu	hasNectar
	m	()Z	gv	hasStung
	m	()Lbuv$a;	gw	createAttributes
	m	()Z	gx	isFlying
	m	()V	gy	dropOffNectar
	m	()Z	gz	isTiredOfLookingForNectar
	m	(Lcff;)Lcda;	h	access$700
	m	(Ljd;)V	h	setSavedFlowerPos
		p	1		flowerPos
	m	(Lcff;)Lcda;	i	access$800
	m	(Ljd;)V	i	setHivePos
		p	1		pos
	m	(Lcff;)Lcda;	j	access$900
	m	(Ljd;)V	j	pathfindRandomlyTowards
		p	1		pos
	m	(Lcff;)Lcda;	k	access$1000
	m	(Ljd;)Z	k	doesHiveHaveSpace
		p	1		pos
	m	()V	l	tick
	m	(Lcff;)Lcda;	l	access$1100
	m	(Ljd;)Z	l	isTooFarAway
		p	1		pos
	m	(Lcff;)Lcda;	m	access$1200
	m	(Ljd;)Z	m	isFlowerValid
		p	1		pos
	m	()V	m_	aiStep
	m	(Lcff;)Lcda;	n	access$1300
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcff;)Lcda;	o	access$1400
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lcff;)Lcda;	p	access$1500
	m	(Lcff;)Lcda;	q	access$1600
	m	(Lcff;)Lcda;	r	access$1700
	m	()Ljd;	s	getSavedFlowerPos
	m	(Lcff;)Lcda;	s	access$1800
	m	()Z	t	hasSavedFlowerPos
	m	(I)V	t	setStayOutOfHiveCountdown
		p	1		cannotEnterHiveTicks
	m	(Lcff;)Layw;	t	access$1900
	m	(I)Z	u	getFlag
		p	1		location
	m	(Lcff;)Layw;	u	access$2000
	m	()Lavo;	v	getAmbientSound
	m	(Lcff;)Lcda;	v	access$2100
	m	(Lcff;)Layw;	w	access$2200
	m	()I	x	getTravellingTicks
	m	(Lcff;)Lcda;	x	access$2300
	m	(Z)V	x	setHasNectar
		p	1		hasNectar
	m	(Lcff;)Layw;	y	access$2400
	m	(Z)V	y	setHasStung
		p	1		hasStung
	m	(Lcff;)Layw;	z	access$2500
	m	(Z)V	z	setRolling
		p	1		nearTarget
	f	I	cA	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cB	HIVE_SEARCH_DISTANCE
	f	Lbqc;	cD	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cE	persistentAngerTarget
	f	F	cF	rollAmount
	f	F	cG	rollAmountO
	f	I	cH	timeSinceSting
	f	I	cI	ticksWithoutNectarSinceExitingHive
	f	I	cJ	stayOutOfHiveCountdown
	f	I	cK	numCropsGrownSincePollination
	f	I	cL	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	cM	remainingCooldownBeforeLocatingNewHive
	f	I	cN	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	cO	remainingCooldownBeforeLocatingNewFlower
	f	Ljd;	cP	savedFlowerPos
	f	Ljd;	cQ	hivePos
	f	Lcff$k;	cR	beePollinateGoal
	f	Lcff$e;	cS	goToHiveGoal
	f	Lcff$f;	cT	goToKnownFlowerGoal
	f	I	cU	underWaterTicks
	f	F	cc	FLAP_DEGREES_PER_TICK
	f	I	cd	TICKS_PER_FLAP
	f	Ljava/lang/String;	ce	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	cg	TAG_CANNOT_ENTER_HIVE_TICKS
	f	Ljava/lang/String;	ch	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	ci	TAG_HAS_STUNG
	f	Ljava/lang/String;	cj	TAG_HAS_NECTAR
	f	Ljava/lang/String;	ck	TAG_FLOWER_POS
	f	Ljava/lang/String;	cl	TAG_HIVE_POS
	f	Lajw;	cm	DATA_FLAGS_ID
	f	Lajw;	cn	DATA_REMAINING_ANGER_TIME
	f	I	co	FLAG_ROLL
	f	I	cp	FLAG_HAS_STUNG
	f	I	cq	FLAG_HAS_NECTAR
	f	I	cr	STING_DEATH_COUNTDOWN
	f	I	cs	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	ct	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	cu	MIN_ATTACK_DIST
	f	I	cv	MAX_CROPS_GROWABLE
	f	I	cw	POISON_SECONDS_NORMAL
	f	I	cx	POISON_SECONDS_HARD
	f	I	cy	TOO_FAR_DISTANCE
	f	I	cz	HIVE_CLOSE_ENOUGH_DISTANCE
c	cff$1	net/minecraft/world/entity/animal/EntityBee$1
	m	(Lcff;Lbtp;Ldcw;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
	m	()V	c	tick
	f	Lcff;	p	this$0
c	cff$a	net/minecraft/world/entity/animal/EntityBee$a
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lcff;	a	this$0
c	cff$b	net/minecraft/world/entity/animal/EntityBee$b
	m	(Lcff;Lbtw;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcff;	b	this$0
c	cff$c	net/minecraft/world/entity/animal/EntityBee$c
	m	(Lcff;)V	<init>	<init>
		p	1		bee
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	i	beeCanTarget
c	cff$d	net/minecraft/world/entity/animal/EntityBee$d
	m	()V	d	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	Lcff;	b	this$0
c	cff$e	net/minecraft/world/entity/animal/EntityBee$e
	m	()V	a	tick
	m	(Ljd;)Z	a	pathfindDirectlyTowards
		p	1		pos
	m	()Z	b	canUse
	m	(Ljd;)Z	b	isTargetBlacklisted
		p	1		pos
	m	()Z	c	canContinueToUse
	m	(Ljd;)V	c	blacklistTarget
		p	1		pos
	m	()V	d	start
	m	(Ljd;)Z	d	hasReachedTarget
		p	1		pos
	m	()V	e	stop
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	()V	m	dropHive
	f	I	b	MAX_TRAVELLING_TICKS
	f	Lcff;	c	this$0
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Leps;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
c	cff$f	net/minecraft/world/entity/animal/EntityBee$f
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	wantsToGoToKnownFlower
	f	Lcff;	b	this$0
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
c	cff$g	net/minecraft/world/entity/animal/EntityBee$g
	m	()V	a	tick
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	f	I	b	GROW_CHANCE
	f	Lcff;	c	this$0
c	cff$h	net/minecraft/world/entity/animal/EntityBee$h
	m	(Lcff;Lcff;)V	<init>	<init>
		p	2		bee
	m	(Lbtp;Lbtn;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	c	canContinueToUse
	f	Lcff;	a	this$0
c	cff$i	net/minecraft/world/entity/animal/EntityBee$i
	m	(Ljd;Ljd;)D	a	lambda$findNearbyHivesWithSpace$1
	m	(Ljm;)Z	a	lambda$findNearbyHivesWithSpace$0
		p	0		poiType
	m	()V	d	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	f	Lcff;	b	this$0
c	cff$j	net/minecraft/world/entity/animal/EntityBee$j
	m	(Lcff;Lbtp;)V	<init>	<init>
		p	2		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lcff;	h	this$0
c	cff$k	net/minecraft/world/entity/animal/EntityBee$k
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Ldtc;)Z	a	lambda$new$0
		p	0		state
	m	(Ljava/util/function/Predicate;D)Ljava/util/Optional;	a	findNearestBlock
		p	1		predicate
		p	2		searchDistance
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
	f	Lcff;	b	this$0
	f	I	c	MIN_POLLINATION_TICKS
	f	I	d	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	e	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	Ljava/util/function/Predicate;	f	VALID_POLLINATION_BLOCKS
	f	D	g	ARRIVAL_THRESHOLD
	f	I	h	POSITION_CHANGE_CHANCE
	f	F	i	SPEED_MODIFIER
	f	F	j	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	k	HOVER_POS_OFFSET
	f	I	l	successfulPollinatingTicks
	f	I	m	lastSoundPlayedTick
	f	Z	n	pollinating
	f	Lexc;	o	hoverPos
	f	I	p	pollinatingTicks
	f	I	q	MAX_POLLINATING_TICKS
c	cff$l	net/minecraft/world/entity/animal/EntityBee$l
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Lexc;	h	findPos
	f	Lcff;	a	this$0
	f	I	b	WANDER_THRESHOLD
c	cfg	net/minecraft/world/entity/animal/Bucketable
	m	(Lbtp;Lcuq;)V	a	saveDefaultDataToBucketTag
		p	0		entity
		p	1		stack
	m	(Lbtp;Lub;)V	a	loadDefaultDataFromBucketTag
		p	0		entity
		p	1		nbt
	m	(Lcmx;Lbqq;Lbtn;)Ljava/util/Optional;	a	bucketMobPickup
		p	0		player
		p	1		hand
		p	2		entity
	m	()Lcuq;	b	getBucketItemStack
	m	(Lbtp;Lub;)V	b	lambda$saveDefaultDataToBucketTag$0
	m	(Lub;)V	h	loadFromBucketTag
		p	1		nbt
	m	(Lcuq;)V	n	saveToBucketTag
		p	1		stack
	m	()Z	t	fromBucket
	m	()Lavo;	x	getPickupSound
	m	(Z)V	x	setFromBucket
		p	1		fromBucket
c	cfh	net/minecraft/world/entity/animal/EntityCat
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setLying
		p	1		sleeping
	m	()V	B	registerGoals
	m	(Z)V	B	setRelaxStateOne
		p	1		headDown
	m	(F)F	H	getLieDownAmount
		p	1		tickDelta
	m	(F)F	I	getLieDownAmountTail
		p	1		tickDelta
	m	(F)F	J	getRelaxStateOneAmount
		p	1		tickDelta
	m	()I	R	getAmbientSoundInterval
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lakr;)Lakq;	a	lambda$readAdditionalSaveData$1
		p	0		id
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcmx;Lbqq;Lcuq;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcti;)V	a	setCollarColor
		p	1		color
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(Laqu;Lbsl;)Lcfh;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	b	setTame
		p	1		tamed
		p	2		updateAttributes
	m	()Z	bX	isSteppingCarefully
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmx;)V	g	tryToTame
		p	1		player
	m	()V	gA	reassessTameGoals
	m	()Z	gB	isRelaxStateOne
	m	()V	gC	handleLieDown
	m	()V	gD	updateLieDownAmount
	m	()V	gE	updateRelaxStateOneAmount
	m	()Lakr;	gu	getTextureId
	m	()Ljm;	gv	getVariant
	m	()Z	gw	isLying
	m	()Lcti;	gx	getCollarColor
	m	()V	gy	hiss
	m	()Lbuv$a;	gz	createAttributes
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Ljm;)V	i	setVariant
	m	()V	l	tick
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lavo;	v	getAmbientSound
	f	D	cg	TEMPT_SPEED_MOD
	f	D	ch	WALK_SPEED_MOD
	f	D	ci	SPRINT_SPEED_MOD
	f	Lajw;	cj	DATA_VARIANT_ID
	f	Lajw;	ck	IS_LYING
	f	Lajw;	cl	RELAX_STATE_ONE
	f	Lajw;	cm	DATA_COLLAR_COLOR
	f	Lakq;	cn	DEFAULT_VARIANT
	f	Lcfh$a;	co	avoidPlayersGoal
	f	Lcbu;	cp	temptGoal
	f	F	cq	lieDownAmount
	f	F	cr	lieDownAmountO
	f	F	cs	lieDownAmountTail
	f	F	ct	lieDownAmountOTail
	f	F	cu	relaxStateOneAmount
	f	F	cv	relaxStateOneAmountO
c	cfh$a	net/minecraft/world/entity/animal/EntityCat$a
	m	(Lcfh;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		cat
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcfh;	i	cat
c	cfh$b	net/minecraft/world/entity/animal/EntityCat$b
	m	(Lcfh;)V	<init>	<init>
		p	1		cat
	m	()V	a	tick
	m	(Ljd;)Ljd;	a	lambda$canUse$1
	m	(Ljd;Lji;)Ljd;	a	lambda$canUse$0
		p	1		direction
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	spaceIsOccupied
	m	()V	i	giveMorningGift
	f	Lcfh;	a	cat
	f	Lcmx;	b	ownerPlayer
	f	Ljd;	c	goalPos
	f	I	d	onBedTicks
c	cfh$c	net/minecraft/world/entity/animal/EntityCat$PathfinderGoalTemptChance
	m	(Lcfh;DLjava/util/function/Predicate;Z)V	<init>	<init>
		p	1		cat
		p	2		speed
		p	4		foodPredicate
		p	5		canBeScared
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	h	canScare
	f	Lcmx;	c	selectedPlayer
	f	Lcfh;	d	cat
c	cfi	net/minecraft/world/entity/animal/CatVariant
	m	()Lakr;	a	texture
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljz;)Lcfi;	a	bootstrap
		p	0		registry
	m	(Ljz;Lakq;Ljava/lang/String;)Lcfi;	a	register
		p	0		registry
		p	1		key
		p	2		textureId
	f	Lyx;	a	STREAM_CODEC
	f	Lakq;	b	TABBY
	f	Lakq;	c	BLACK
	f	Lakq;	d	RED
	f	Lakq;	e	SIAMESE
	f	Lakq;	f	BRITISH_SHORTHAIR
	f	Lakq;	g	CALICO
	f	Lakq;	h	PERSIAN
	f	Lakq;	i	RAGDOLL
	f	Lakq;	j	WHITE
	f	Lakq;	k	JELLIE
	f	Lakq;	l	ALL_BLACK
	f	Lakr;	m	texture
c	cfj	net/minecraft/world/entity/animal/EntityChicken
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsr;Lbsr$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aV	onFlap
	m	()Z	aW	isFlapping
	m	(Laqu;Lbsl;)Lcfj;	b	getBreedOffspring
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()I	eg	getBaseExperienceReward
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isChickenJockey
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setChickenJockey
		p	1		hasJockey
	f	F	cc	flap
	f	F	cd	flapSpeed
	f	F	ce	oFlapSpeed
	f	F	cg	oFlap
	f	F	ch	flapping
	f	I	ci	eggTime
	f	Z	cj	isChickenJockey
	f	Lbsu;	ck	BABY_DIMENSIONS
	f	F	cl	nextFlap
c	cfk	net/minecraft/world/entity/animal/EntityCod
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcuq;	b	getBucketItemStack
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gl	getFlopSound
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
c	cfl	net/minecraft/world/entity/animal/EntityCow
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lbsl;)Lcfl;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()F	fa	getSoundVolume
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Lbsu;	cc	BABY_DIMENSIONS
c	cfm	net/minecraft/world/entity/animal/EntityDolphin
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcfm;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Llk;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	()I	ac	getMaxHeadXRot
	m	()I	ae	getMaxHeadYRot
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lcfm;)Layw;	b	access$100
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setMoisntessLevel
		p	1		moistness
	m	(Lcfm;)Layw;	c	access$200
	m	(Lcjh;)Z	c	lambda$static$0
		p	0		item
	m	()I	cl	getMaxAirSupply
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	()V	gd	playAttackSound
	m	()Lbuv$a;	gk	createAttributes
	m	()Z	gl	closeToNextPos
	m	(Ljd;)V	h	setTreasurePos
		p	1		treasurePos
	m	()V	l	tick
	m	(I)I	n	increaseAirSupply
		p	1		air
	m	()Lavo;	n_	getDeathSound
	m	(Lbsr;)Z	o	canRide
		p	1		entity
	m	()Ljd;	s	getTreasurePos
	m	()Z	t	gotFish
	m	()Lavo;	v	getAmbientSound
	m	()I	x	getMoistnessLevel
	m	(Z)V	x	setGotFish
		p	1		hasFish
	m	()Z	y	canBeLeashed
	f	I	b	TOTAL_AIR_SUPPLY
	f	Ljava/util/function/Predicate;	c	ALLOWED_ITEMS
	f	Lajw;	cc	MOISTNESS_LEVEL
	f	Lcef;	cd	SWIM_WITH_PLAYER_TARGETING
	f	I	ce	TOTAL_MOISTNESS_LEVEL
	f	Lajw;	d	TREASURE_POS
	f	Lajw;	e	GOT_FISH
c	cfm$a	net/minecraft/world/entity/animal/EntityDolphin$a
	m	(Lcfm;)V	<init>	<init>
		p	1		dolphin
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfm;	a	dolphin
	f	Z	b	stuck
c	cfm$b	net/minecraft/world/entity/animal/EntityDolphin$b
	m	(Lcfm;D)V	<init>	<init>
		p	1		dolphin
		p	2		speed
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfm;	a	dolphin
	f	D	b	speedModifier
	f	Lcmx;	c	player
c	cfm$c	net/minecraft/world/entity/animal/EntityDolphin$c
	m	()V	a	tick
	m	(Lcuq;)V	a	drop
		p	1		stack
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfm;	a	this$0
	f	I	b	cooldown
c	cfn	net/minecraft/world/entity/animal/EntityBird
	m	()Z	gx	isFlying
c	cfo	net/minecraft/world/entity/animal/EntityFox
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setIsInterested
		p	1		rollingHead
	m	()V	B	registerGoals
	m	(Z)V	B	setFaceplanted
		p	1		walking
	m	(Z)V	C	setDefending
		p	1		aggressive
	m	(Z)V	D	setSleeping
		p	1		sleeping
	m	(F)F	H	getHeadRollAngle
		p	1		tickDelta
	m	(F)F	I	getCrouchAmount
		p	1		tickDelta
	m	()V	S	playAmbientSound
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;)V	a	dropAllDeathLoot
		p	1		world
		p	2		damageSource
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lcfo$v;)V	a	setVariant
		p	1		variant
	m	(Lcfo;)Z	a	access$000
	m	(Lcfo;Lbtn;)Z	a	isPathClear
		p	0		fox
		p	1		chasedEntity
	m	(Lcmx;Lbqq;Lcuq;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcmx;Lbtp;)V	a	onOffspringSpawnedFromEgg
		p	1		player
		p	2		child
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lcfo;	b	getBreedOffspring
	m	(Lcfo;)Layw;	b	access$100
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Ljava/util/UUID;)V	b	addTrustedUUID
		p	1		uuid
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsr;)Z	c	lambda$static$3
		p	0		entity
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkFoxSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcfo;)Layw;	c	access$200
	m	(Lcjh;)Z	c	lambda$static$0
		p	0		item
	m	(Ljava/util/UUID;)Z	c	trusts
		p	1		uuid
	m	()Lexc;	cM	getLeashOffset
	m	()Z	cb	isCrouching
	m	()Ljava/lang/Object;	d	getVariant
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsr;)Z	d	lambda$static$2
		p	0		entity
	m	(Lcfo;)Layw;	d	access$300
	m	(Lcuq;)Lavo;	d	getEatingSound
		p	1		stack
	m	(Lbsr;)Z	e	lambda$static$1
		p	0		entity
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fH	isSleeping
	m	()Z	fc	isImmobile
	m	()Z	gk	isFaceplanted
	m	()Z	gl	isPouncing
	m	()Z	gm	isJumping
	m	()Z	gn	isFullyCrouched
	m	()Z	go	isInterested
	m	()V	gu	setTargetGoals
	m	()Ljava/util/List;	gv	getTrustedUUIDs
	m	()Z	gw	isDefending
	m	()V	gx	wakeUp
	m	()V	gy	clearStates
	m	()Z	gz	canMove
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	(Lbtn;)Z	j	lambda$registerGoals$9
		p	1		entity
	m	(Lcuq;)Z	j	canHoldItem
		p	1		stack
	m	(Lbtn;)Z	k	lambda$registerGoals$8
		p	1		entity
	m	()V	l	tick
	m	(Lbtn;)Z	l	lambda$registerGoals$7
		p	1		entity
	m	(Lbtn;)Z	m	lambda$registerGoals$6
		p	1		entity
	m	()V	m_	aiStep
	m	(Lbtn;)Z	n	lambda$registerGoals$5
		p	0		entity
	m	(Lcuq;)Z	n	canEat
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lbtn;)Z	o	lambda$registerGoals$4
		p	0		entity
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lcuq;)V	p	spitOutItem
		p	1		stack
	m	(Lcuq;)V	q	dropItemStack
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Lcfo$v;	t	getVariant
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isSitting
	m	(Z)V	x	setSitting
		p	1		sitting
	m	(Z)V	y	setIsPouncing
		p	1		chasing
	m	(Z)V	z	setIsCrouching
		p	1		crouching
	f	F	cA	crouchAmountO
	f	I	cB	ticksSinceEaten
	f	I	cc	FLAG_CROUCHING
	f	I	cd	FLAG_INTERESTED
	f	I	ce	FLAG_POUNCING
	f	Lajw;	cg	DATA_TYPE_ID
	f	Lajw;	ch	DATA_FLAGS_ID
	f	I	ci	FLAG_SITTING
	f	I	cj	FLAG_SLEEPING
	f	I	ck	FLAG_FACEPLANTED
	f	I	cl	FLAG_DEFENDING
	f	Lajw;	cm	DATA_TRUSTED_ID_0
	f	Lajw;	cn	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	co	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	cp	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	cq	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	cr	AVOID_PLAYERS
	f	I	cs	MIN_TICKS_BEFORE_EAT
	f	Lbsu;	ct	BABY_DIMENSIONS
	f	Lcam;	cu	landTargetGoal
	f	Lcam;	cv	turtleEggTargetGoal
	f	Lcam;	cw	fishTargetGoal
	f	F	cx	interestedAngle
	f	F	cy	interestedAngleO
	f	F	cz	crouchAmount
c	cfo$a	net/minecraft/world/entity/animal/EntityFox$a
	m	(Lcfo;Ljava/lang/Class;ZZLjava/util/function/Predicate;)V	<init>	<init>
		p	2		targetEntityClass
		p	3		checkVisibility
		p	4		checkCanNavigate
		p	5		targetPredicate
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfo;	i	this$0
	f	Lbtn;	j	trustedLastHurtBy
	f	Lbtn;	k	trustedLastHurt
	f	I	l	timestamp
c	cfo$b	net/minecraft/world/entity/animal/EntityFox$b
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	I	a	countdown
	f	Lcfo;	b	this$0
c	cfo$c	net/minecraft/world/entity/animal/EntityFox$c
	m	(Lbtn;)Z	a	test
	f	Lcfo;	a	this$0
c	cfo$d	net/minecraft/world/entity/animal/EntityFox$d
	m	()Z	h	hasShelter
	m	()Z	i	alertable
	f	Lcfo;	a	this$0
	f	Lcef;	b	alertableTargeting
c	cfo$e	net/minecraft/world/entity/animal/EntityFox$e
	m	(Lcfo;D)V	<init>	<init>
		p	1		fox
		p	2		chance
	m	()V	d	start
	m	()V	g	breed
c	cfo$f	net/minecraft/world/entity/animal/EntityFox$f
	m	(Lcfo;DII)V	<init>	<init>
		p	2		speed
		p	4		range
		p	5		maxYDifference
	m	()V	a	tick
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	(Ldtc;)V	a	pickGlowBerry
		p	1		state
	m	()Z	b	canUse
	m	(Ldtc;)V	b	pickSweetBerries
		p	1		state
	m	()V	d	start
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	()V	o	onReachedTarget
	f	I	g	ticksWaited
	f	Lcfo;	h	this$0
	f	I	i	WAIT_TICKS
c	cfo$g	net/minecraft/world/entity/animal/EntityFox$g
	m	(Lcfo;)V	<init>	<init>
		p	1		mob
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfo;	a	this$0
c	cfo$h	net/minecraft/world/entity/animal/EntityFox$h
	m	(Lcfo;Lcfo;D)V	<init>	<init>
		p	2		fox
		p	3		speed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lcfo;	d	fox
c	cfo$i	net/minecraft/world/entity/animal/EntityFox$i
	m	(Lcfo$v;)V	<init>	<init>
		p	1		type
	f	Lcfo$v;	a	type
c	cfo$j	net/minecraft/world/entity/animal/EntityFox$j
	m	(Lcfo;Lbtp;Ljava/lang/Class;F)V	<init>	<init>
		p	2		fox
		p	3		targetType
		p	4		range
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcfo;	h	this$0
c	cfo$k	net/minecraft/world/entity/animal/EntityFox$k
	m	(Lcfo;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
	f	Lcfo;	h	this$0
c	cfo$l	net/minecraft/world/entity/animal/EntityFox$l
	m	(Lcfo;DZ)V	<init>	<init>
		p	2		speed
		p	4		pauseWhenIdle
	m	(Lbtn;)V	a	checkAndPerformAttack
		p	1		target
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfo;	b	this$0
c	cfo$m	net/minecraft/world/entity/animal/EntityFox$m
	m	(Lcfo;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lcfo;	l	this$0
c	cfo$n	net/minecraft/world/entity/animal/EntityFox$n
	m	(Lcfo;D)V	<init>	<init>
		p	2		speed
	m	()Z	h	shouldPanic
	f	Lcfo;	a	this$0
c	cfo$o	net/minecraft/world/entity/animal/EntityFox$o
	m	()Z	U_	isInterruptable
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfo;	a	this$0
c	cfo$p	net/minecraft/world/entity/animal/EntityFox$p
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfo;	a	this$0
c	cfo$q	net/minecraft/world/entity/animal/EntityFox$q
	m	(Lcfo;II)V	<init>	<init>
		p	2		unused
		p	3		searchRange
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	h	canFoxMove
	f	Lcfo;	a	this$0
c	cfo$r	net/minecraft/world/entity/animal/EntityFox$r
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	k	resetLook
	f	Lcfo;	b	this$0
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
c	cfo$s	net/minecraft/world/entity/animal/EntityFox$s
	m	(Lcfo;D)V	<init>	<init>
		p	2		speed
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcfo;	b	this$0
	f	I	c	interval
c	cfo$t	net/minecraft/world/entity/animal/EntityFox$t
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	k	canSleep
	f	Lcfo;	b	this$0
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
c	cfo$u	net/minecraft/world/entity/animal/EntityFox$u
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfo;	a	this$0
c	cfo$v	net/minecraft/world/entity/animal/EntityFox$Type
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		key
	m	()I	a	getId
	m	(I)Lcfo$v;	a	byId
		p	0		id
	m	(Ljava/lang/String;)Lcfo$v;	a	byName
		p	0		name
	m	(Ljm;)Lcfo$v;	a	byBiome
		p	0		biome
	m	()[Lcfo$v;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcfo$v;	a	RED
	f	Lcfo$v;	b	SNOW
	f	Lazk$a;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	[Lcfo$v;	g	$VALUES
c	cfp	net/minecraft/world/entity/animal/FrogVariant
	m	()Lakr;	a	texture
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljz;)Lcfp;	a	bootstrap
		p	0		registry
	m	(Ljz;Lakq;Ljava/lang/String;)Lcfp;	a	register
		p	0		registry
		p	1		key
		p	2		id
	f	Lyx;	a	STREAM_CODEC
	f	Lakq;	b	TEMPERATE
	f	Lakq;	c	WARM
	f	Lakq;	d	COLD
	f	Lakr;	e	texture
c	cfq	net/minecraft/world/entity/animal/EntityIronGolem
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsx;)Z	a	canAttackType
		p	1		type
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	canSpawnSprintParticle
	m	()V	c	startPersistentAngerTimer
	m	()Lexc;	cM	getLeashOffset
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()I	gk	getOfferFlowerTick
	m	()Z	gl	isPlayerCreated
	m	()F	gm	getAttackDamage
	m	(Lbtn;)Z	j	lambda$registerGoals$0
		p	0		entity
	m	(I)I	m	decreaseAirSupply
		p	1		air
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Lbsp$a;	t	getCrackiness
	m	()I	x	getAttackAnimationTick
	m	(Z)V	x	offerFlower
		p	1		lookingAtVillager
	m	(Z)V	y	setPlayerCreated
		p	1		playerCreated
	f	Lajw;	c	DATA_FLAGS_ID
	f	I	cc	offerFlowerTick
	f	Lbqc;	cd	PERSISTENT_ANGER_TIME
	f	I	ce	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cf	persistentAngerTarget
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	I	e	attackAnimationTick
c	cfr	net/minecraft/world/entity/animal/EntityMushroomCow
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lavq;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lcfr$a;)V	a	setVariant
		p	1		variant
	m	(Lcfr;)Lcfr$a;	a	getOffspringType
		p	1		mooshroom
	m	(Lcxw;)V	a	lambda$readAdditionalSaveData$1
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$0
	m	(Laqu;Lbsl;)Lcfl;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Laqu;Lbsl;)Lcfr;	c	getBreedOffspring
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkMushroomSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lcuq;)Ljava/util/Optional;	n	getEffectsFromItemStack
		p	1		flower
	m	()Lcfr$a;	t	getVariant
	f	Lajw;	cc	DATA_TYPE
	f	I	cd	MUTATE_CHANCE
	f	Ljava/lang/String;	ce	TAG_STEW_EFFECTS
	f	Lcxw;	cg	stewEffects
	f	Ljava/util/UUID;	ch	lastLightningBoltUUID
c	cfr$a	net/minecraft/world/entity/animal/EntityMushroomCow$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ldtc;)V	<init>	<init>
		p	3		name
		p	4		mushroom
	m	()Ldtc;	a	getBlockState
	m	(Ljava/lang/String;)Lcfr$a;	a	byType
		p	0		name
	m	()[Lcfr$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcfr$a;	a	RED
	f	Lcfr$a;	b	BROWN
	f	Lazk$a;	c	CODEC
	f	Ljava/lang/String;	d	type
	f	Ldtc;	e	blockState
	f	[Lcfr$a;	f	$VALUES
c	cfs	net/minecraft/world/entity/animal/EntityOcelot
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()I	R	getAmbientSoundInterval
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lcfs;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bX	isSteppingCarefully
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkOcelotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lexc;	cM	getLeashOffset
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()V	t	reassessTrustingGoals
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isTrusting
	m	(Z)V	x	setTrusting
		p	1		trusting
	m	(Z)V	y	spawnTrustingParticles
		p	1		positive
	f	D	cc	CROUCH_SPEED_MOD
	f	D	cd	WALK_SPEED_MOD
	f	D	ce	SPRINT_SPEED_MOD
	f	Lajw;	cg	DATA_TRUSTING
	f	Lcfs$a;	ch	ocelotAvoidPlayersGoal
	f	Lcfs$b;	ci	temptGoal
c	cfs$a	net/minecraft/world/entity/animal/EntityOcelot$a
	m	(Lcfs;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		ocelot
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcfs;	i	ocelot
c	cfs$b	net/minecraft/world/entity/animal/EntityOcelot$b
	m	(Lcfs;DLjava/util/function/Predicate;Z)V	<init>	<init>
		p	1		ocelot
		p	2		speed
		p	4		foodPredicate
		p	5		canBeScared
	m	()Z	h	canScare
	f	Lcfs;	c	ocelot
c	cft	net/minecraft/world/entity/animal/EntityPanda
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	sneeze
		p	1		sneezing
	m	()V	B	registerGoals
	m	(Z)V	B	roll
		p	1		playing
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(F)F	H	getSitAmount
		p	1		tickDelta
	m	(F)F	I	getLieOnBackAmount
		p	1		tickDelta
	m	(F)F	J	getRollAmount
		p	1		tickDelta
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcft$a;)V	a	setMainGene
		p	1		gene
	m	(Lcft;)Layw;	a	access$000
	m	(Lcft;Lcft;)V	a	setGeneFromParents
		p	1		mother
		p	2		father
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcft$a;)V	b	setHiddenGene
		p	1		gene
	m	(Lcft;)Layw;	b	access$100
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcft;)Layw;	c	access$200
	m	(Lcjh;)Z	c	lambda$static$1
		p	0		item
	m	(IZ)V	d	setFlag
		p	1		mask
		p	2		value
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcft;)Layw;	d	access$300
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lcft;)Layw;	e	access$400
	m	(Lcft;)Layw;	f	access$500
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	(Lcft;)Layw;	g	access$600
	m	()Z	gA	isBrown
	m	()Z	gB	isWeak
	m	()Z	gC	isScared
	m	()V	gD	setAttributes
	m	()Z	gE	canPerformAction
	m	()I	gF	getEatCounter
	m	()V	gG	handleEating
	m	()V	gH	addEatingParticles
	m	()V	gI	updateSitAmount
	m	()V	gJ	updateOnBackAnimation
	m	()V	gK	updateRollAmount
	m	()V	gL	handleRoll
	m	()V	gM	afterSneeze
	m	()Lcft$a;	gN	getOneOfGenesRandomly
	m	()V	gO	tryToSit
	m	()Z	gb	isAggressive
	m	()V	gd	playAttackSound
	m	()Z	gk	isOnBack
	m	()Z	gl	isEating
	m	()I	gm	getSneezeCounter
	m	()Lcft$a;	gn	getMainGene
	m	()Lcft$a;	go	getHiddenGene
	m	()Z	gu	isRolling
	m	()Lbuv$a;	gv	createAttributes
	m	()Lcft$a;	gw	getVariant
	m	()Z	gx	isLazy
	m	()Z	gy	isWorried
	m	()Z	gz	isPlayful
	m	(Lcft;)Layw;	h	access$700
	m	(Lcft;)Layw;	i	access$800
	m	(Lcft;)Layw;	j	access$900
	m	(Lcft;)Layw;	k	access$1000
	m	()V	l	tick
	m	(Lcuq;)Z	n	isFoodOrCake
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lcuq;)Z	p	lambda$registerGoals$0
		p	0		stack
	m	()I	s	getUnhappyCounter
	m	()Z	t	isSneezing
	m	(I)V	t	setUnhappyCounter
		p	1		askForBambooTicks
	m	(I)V	u	setSneezeCounter
		p	1		sneezeProgress
	m	()Lavo;	v	getAmbientSound
	m	(I)V	v	setEatCounter
		p	1		eatingTicks
	m	(I)Z	w	getFlag
		p	1		bitmask
	m	()Z	x	isSitting
	m	(Z)V	x	sit
		p	1		sitting
	m	()Z	y	canBeLeashed
	m	(Z)V	y	setOnBack
		p	1		lyingOnBack
	m	(Z)V	z	eat
		p	1		eating
	f	F	cA	rollAmount
	f	F	cB	rollAmountO
	f	Lcft$g;	cD	lookAtPlayerGoal
	f	Ljava/util/function/Predicate;	cE	PANDA_ITEMS
	f	I	cc	TOTAL_ROLL_STEPS
	f	I	cd	rollCounter
	f	Lajw;	ce	UNHAPPY_COUNTER
	f	Lajw;	cg	SNEEZE_COUNTER
	f	Lajw;	ch	EAT_COUNTER
	f	Lajw;	ci	MAIN_GENE_ID
	f	Lajw;	cj	HIDDEN_GENE_ID
	f	Lajw;	ck	DATA_ID_FLAGS
	f	Lcef;	cl	BREED_TARGETING
	f	Lbsu;	cm	BABY_DIMENSIONS
	f	I	cn	FLAG_SNEEZE
	f	I	co	FLAG_ROLL
	f	I	cp	FLAG_SIT
	f	I	cq	FLAG_ON_BACK
	f	I	cr	EAT_TICK_INTERVAL
	f	I	cs	TOTAL_UNHAPPY_TIME
	f	Z	ct	gotBamboo
	f	Z	cu	didBite
	f	Lexc;	cv	rollDelta
	f	F	cw	sitAmount
	f	F	cx	sitAmountO
	f	F	cy	onBackAmount
	f	F	cz	onBackAmountO
c	cft$a	net/minecraft/world/entity/animal/EntityPanda$Gene
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		recessive
	m	()I	a	getId
	m	(I)Lcft$a;	a	byId
		p	0		id
	m	(Layw;)Lcft$a;	a	getRandom
		p	0		random
	m	(Lcft$a;Lcft$a;)Lcft$a;	a	getVariantFromGenes
		p	0		mainGene
		p	1		hiddenGene
	m	(Ljava/lang/String;)Lcft$a;	a	byName
		p	0		name
	m	()Z	b	isRecessive
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcft$a;	d	$values
	f	Lcft$a;	a	NORMAL
	f	Lcft$a;	b	LAZY
	f	Lcft$a;	c	WORRIED
	f	Lcft$a;	d	PLAYFUL
	f	Lcft$a;	e	BROWN
	f	Lcft$a;	f	WEAK
	f	Lcft$a;	g	AGGRESSIVE
	f	Lazk$a;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	MAX_GENE
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Z	m	isRecessive
	f	[Lcft$a;	n	$VALUES
c	cft$b	net/minecraft/world/entity/animal/EntityPanda$b
	m	(Lcft;DZ)V	<init>	<init>
		p	1		panda
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	b	canUse
	f	Lcft;	b	panda
c	cft$c	net/minecraft/world/entity/animal/EntityPanda$c
	m	(Lcft;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		panda
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	b	canUse
	f	Lcft;	i	panda
c	cft$d	net/minecraft/world/entity/animal/EntityPanda$d
	m	(Lcft;D)V	<init>	<init>
		p	1		panda
		p	2		chance
	m	()Z	b	canUse
	m	()Z	h	canFindBamboo
	f	Lcft;	d	panda
	f	I	e	unhappyCooldown
c	cft$e	net/minecraft/world/entity/animal/EntityPanda$e
	m	(Lcft;[Ljava/lang/Class;)V	<init>	<init>
		p	1		panda
		p	2		noRevengeTypes
	m	(Lbtp;Lbtn;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()Z	c	canContinueToUse
	f	Lcft;	a	panda
c	cft$f	net/minecraft/world/entity/animal/EntityPanda$f
	m	(Lcft;)V	<init>	<init>
		p	1		panda
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcft;	a	panda
	f	I	b	cooldown
c	cft$g	net/minecraft/world/entity/animal/EntityPanda$g
	m	(Lcft;Ljava/lang/Class;F)V	<init>	<init>
		p	1		panda
		p	2		targetType
		p	3		range
	m	()V	a	tick
	m	(Lbtn;)V	a	setTarget
		p	1		target
	m	()Z	b	canUse
	m	(Lbtn;)Z	b	lambda$canUse$0
	m	()Z	c	canContinueToUse
	f	Lcft;	h	panda
c	cft$h	net/minecraft/world/entity/animal/EntityPanda$h
	m	(Lcft;)V	<init>	<init>
		p	1		panda
	m	()V	a	tick
	f	Lcft;	l	panda
c	cft$i	net/minecraft/world/entity/animal/EntityPanda$i
	m	(Lcft;D)V	<init>	<init>
		p	1		panda
		p	2		speed
	m	()Z	c	canContinueToUse
	f	Lcft;	a	panda
c	cft$j	net/minecraft/world/entity/animal/EntityPanda$j
	m	(Lcft;)V	<init>	<init>
		p	1		panda
	m	()Z	U_	isInterruptable
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lcft;	a	panda
c	cft$k	net/minecraft/world/entity/animal/EntityPanda$k
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcft;	a	this$0
	f	I	b	cooldown
c	cft$l	net/minecraft/world/entity/animal/EntityPanda$l
	m	(Lcft;)V	<init>	<init>
		p	1		panda
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lcft;	a	panda
c	cfu	net/minecraft/world/entity/animal/EntityParrot
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)F	a	getPitch
		p	0		random
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcfu$b;)V	a	setVariant
		p	1		variant
	m	(Ldcw;Layw;)Lavo;	a	getAmbient
		p	0		world
		p	1		random
	m	(Ldcw;Lbsr;)Z	a	imitateNearbyMobs
		p	0		world
		p	1		parrot
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljd;Z)V	a	setRecordPlayingNearby
		p	1		songPosition
		p	2		playing
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aV	onFlap
	m	()Z	aW	isFlapping
	m	(Lbsx;)Lavo;	b	getImitatedSound
		p	0		imitate
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bB	isPushable
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkParrotSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lexc;	cM	getLeashOffset
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavq;	de	getSoundSource
	m	()F	fb	getVoicePitch
	m	()Z	go	canFlyToOwner
	m	()Lbuv$a;	gu	createAttributes
	m	()Z	gv	isPartyParrot
	m	()Lcfu$b;	gw	getVariant
	m	()Z	gx	isFlying
	m	()V	gz	calculateFlapping
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Z	o_	isBaby
	m	()Lavo;	v	getAmbientSound
	f	F	cg	flap
	f	F	ch	flapSpeed
	f	F	ci	oFlapSpeed
	f	F	cj	oFlap
	f	Lajw;	ck	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	cl	NOT_PARROT_PREDICATE
	f	Ljava/util/Map;	cm	MOB_SOUND_MAP
	f	F	cn	flapping
	f	F	co	nextFlap
	f	Z	cp	partyParrot
	f	Ljd;	cq	jukebox
c	cfu$1	net/minecraft/world/entity/animal/EntityParrot$1
	m	(Lbtp;)Z	a	test
c	cfu$a	net/minecraft/world/entity/animal/EntityParrot$a
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Lexc;	h	getPosition
	m	()Lexc;	k	getTreePos
c	cfu$b	net/minecraft/world/entity/animal/EntityParrot$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lcfu$b;	a	byId
		p	0		index
	m	()[Lcfu$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcfu$b;	a	RED_BLUE
	f	Lcfu$b;	b	BLUE
	f	Lcfu$b;	c	GREEN
	f	Lcfu$b;	d	YELLOW_BLUE
	f	Lcfu$b;	e	GRAY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	[Lcfu$b;	j	$VALUES
c	cfv	net/minecraft/world/entity/animal/EntityPig
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	a	boost
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lcmx;Lexc;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcuq;Lavq;)V	a	equipSaddle
		p	1		stack
		p	2		soundCategory
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Laqu;Lbsl;)Lcfv;	b	getBreedOffspring
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lexc;)Lexc;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lexc;	cM	getLeashOffset
	m	()Lbtn;	cQ	getControllingPassenger
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmx;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()V	ez	dropEquipment
	m	()Z	f	isSaddleable
	m	()Z	i	isSaddled
	m	(Lcuq;)Z	n	lambda$registerGoals$1
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lcuq;)Z	p	lambda$registerGoals$0
		p	0		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Lajw;	cc	DATA_SADDLE_ID
	f	Lajw;	cd	DATA_BOOST_TIME
	f	Lbti;	ce	steering
c	cfw	net/minecraft/world/entity/animal/EntityPolarBear
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(F)F	H	getStandingAnimationScale
		p	1		tickDelta
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbtw;)Lawu;	a	lambda$registerGoals$0
		p	0		polarBear
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkPolarBearSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()F	fh	getWaterSlowDown
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()V	t	playWarningSound
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isStanding
	m	(Z)V	x	setStanding
		p	1		warning
	f	Lajw;	cc	DATA_STANDING_ID
	f	F	cd	STAND_ANIMATION_TICKS
	f	F	ce	clientSideStandAnimationO
	f	F	cg	clientSideStandAnimation
	f	I	ch	warningSoundTicks
	f	Lbqc;	ci	PERSISTENT_ANGER_TIME
	f	I	cj	remainingPersistentAngerTime
	f	Ljava/util/UUID;	ck	persistentAngerTarget
c	cfw$a	net/minecraft/world/entity/animal/EntityPolarBear$a
	m	(Lcfw;)V	<init>	<init>
		p	1		mob
	m	()Z	b	canUse
	m	()D	l	getFollowDistance
	f	Lcfw;	i	this$0
c	cfw$b	net/minecraft/world/entity/animal/EntityPolarBear$b
	m	(Lcfw;)V	<init>	<init>
		p	1		mob
	m	(Lbtp;Lbtn;)V	a	alertOther
		p	1		mob
		p	2		target
	m	()V	d	start
	f	Lcfw;	a	this$0
c	cfw$c	net/minecraft/world/entity/animal/EntityPolarBear$c
	m	(Lcfw;)V	<init>	<init>
		p	1		mob
	m	(Lbtn;)V	a	checkAndPerformAttack
		p	1		target
	m	()V	e	stop
	f	Lcfw;	b	this$0
c	cfx	net/minecraft/world/entity/animal/EntityPufferFish
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbtp;)V	a	touch
		p	1		mob
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcuq;	b	getBucketItemStack
	m	(Lbtp;)Z	b	lambda$aiStep$1
		p	1		entity
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	(I)V	c	setPuffState
		p	1		puffState
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()Lavo;	gl	getFlopSound
	m	()I	gm	getPuffState
	m	(Lbtn;)Z	j	lambda$static$0
		p	0		entity
	m	()V	l	tick
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(I)F	s	getScale
		p	0		puffState
	m	()Lavo;	v	getAmbientSound
	f	I	b	STATE_SMALL
	f	I	c	STATE_MID
	f	I	cc	inflateCounter
	f	I	cd	deflateTimer
	f	Ljava/util/function/Predicate;	ce	SCARY_MOB
	f	Lcef;	cf	targetingConditions
	f	I	d	STATE_FULL
	f	Lajw;	e	PUFF_STATE
c	cfx$a	net/minecraft/world/entity/animal/EntityPufferFish$a
	m	(Lcfx;)V	<init>	<init>
		p	1		pufferfish
	m	(Lbtn;)Z	a	lambda$canUse$0
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcfx;	a	fish
c	cfy	net/minecraft/world/entity/animal/EntityRabbit
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(F)F	H	getJumpCompletion
		p	1		delta
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcfy$g;)V	a	setVariant
		p	1		variant
	m	(Lcfy;)Z	a	access$000
	m	(Ldcx;Ljd;)Lcfy$g;	a	getRandomRabbitVariant
		p	0		world
		p	1		pos
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lcfy;	b	getBreedOffspring
	m	(Lcfy;)Lbzn;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	br	canSpawnSprintParticle
	m	(DD)V	c	facePoint
		p	1		x
		p	3		z
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkRabbitSpawnRules
		p	0		entity
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lexc;	cM	getLeashOffset
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavq;	de	getSoundSource
	m	()F	fd	getJumpPower
	m	()V	ff	jumpFromGround
	m	()V	gd	playAttackSound
	m	()Lcfy$g;	gk	getVariant
	m	()V	gl	enableJumpControl
	m	()V	gm	disableJumpControl
	m	()V	gn	setLandingDelay
	m	()V	go	checkLandingDelay
	m	()Z	gu	wantsMoreFood
	m	(D)V	i	setSpeedModifier
		p	1		speed
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()V	s	startJumping
	m	()Lbuv$a;	t	createAttributes
	m	(Z)V	t	setJumping
		p	1		jumping
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getJumpSound
	f	D	cc	STROLL_SPEED_MOD
	f	D	cd	BREED_SPEED_MOD
	f	D	ce	FOLLOW_SPEED_MOD
	f	D	cg	FLEE_SPEED_MOD
	f	D	ch	ATTACK_SPEED_MOD
	f	Lajw;	ci	DATA_TYPE_ID
	f	Lakr;	cj	KILLER_BUNNY
	f	I	ck	DEFAULT_ATTACK_POWER
	f	I	cl	EVIL_ATTACK_POWER_INCREMENT
	f	Lakr;	cm	EVIL_ATTACK_POWER_MODIFIER
	f	I	cn	EVIL_ARMOR_VALUE
	f	I	co	MORE_CARROTS_DELAY
	f	I	cp	jumpTicks
	f	I	cq	jumpDuration
	f	Z	cr	wasOnGround
	f	I	cs	jumpDelayTicks
	f	I	ct	moreCarrotTicks
c	cfy$a	net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitAvoidTarget
	m	(Lcfy;Ljava/lang/Class;FDD)V	<init>	<init>
		p	1		rabbit
		p	2		fleeFromType
		p	3		distance
		p	4		slowSpeed
		p	6		fastSpeed
	m	()Z	b	canUse
	f	Lcfy;	i	rabbit
c	cfy$b	net/minecraft/world/entity/animal/EntityRabbit$GroupDataRabbit
	m	(Lcfy$g;)V	<init>	<init>
		p	1		type
	f	Lcfy$g;	a	variant
c	cfy$c	net/minecraft/world/entity/animal/EntityRabbit$ControllerJumpRabbit
	m	(Lcfy;)V	<init>	<init>
		p	1		rabbit
	m	(Z)V	a	setCanJump
		p	1		canJump
	m	()V	b	tick
	m	()Z	c	wantJump
	m	()Z	d	canJump
	f	Lcfy;	b	rabbit
	f	Z	c	canJump
c	cfy$d	net/minecraft/world/entity/animal/EntityRabbit$ControllerMoveRabbit
	m	(Lcfy;)V	<init>	<init>
		p	1		owner
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
		p	1		x
		p	3		y
		p	5		z
		p	7		speed
	f	Lcfy;	l	rabbit
	f	D	m	nextJumpSpeed
c	cfy$e	net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalRabbitPanic
	m	(Lcfy;D)V	<init>	<init>
		p	1		rabbit
		p	2		speed
	m	()V	a	tick
	f	Lcfy;	a	rabbit
c	cfy$f	net/minecraft/world/entity/animal/EntityRabbit$PathfinderGoalEatCarrots
	m	(Lcfy;)V	<init>	<init>
		p	1		rabbit
	m	()V	a	tick
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcfy;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
c	cfy$g	net/minecraft/world/entity/animal/EntityRabbit$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	id
	m	(I)Lcfy$g;	a	byId
		p	0		id
	m	()[Lcfy$g;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcfy$g;	a	BROWN
	f	Lcfy$g;	b	WHITE
	f	Lcfy$g;	c	BLACK
	f	Lcfy$g;	d	WHITE_SPLOTCHED
	f	Lcfy$g;	e	GOLD
	f	Lcfy$g;	f	SALT
	f	Lcfy$g;	g	EVIL
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lcfy$g;	l	$VALUES
c	cfz	net/minecraft/world/entity/animal/EntitySalmon
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lcuq;	b	getBucketItemStack
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gl	getFlopSound
	m	()I	gm	getMaxSchoolSize
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
c	cga	net/minecraft/world/entity/animal/EntitySheep
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(F)F	H	getHeadEatPositionScale
		p	1		delta
	m	(F)F	I	getHeadEatAngleScale
		p	1		delta
	m	()V	Q	ate
	m	()Lakq;	V	getDefaultLootTable
	m	()Z	a	readyForShearing
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lavq;)V	a	shear
		p	1		shearedSoundCategory
	m	(Layw;)Lcti;	a	getRandomSheepColor
		p	0		random
	m	(Lcfe;Lcfe;)Lcti;	a	getOffspringColor
		p	1		firstParent
		p	2		secondParent
	m	(Lcti;)I	a	getColor
		p	0		dyeColor
	m	(Lcti;Lcti;)Lcyp;	a	makeCraftInput
		p	0		firstColor
		p	1		secondColor
	m	(Lcyp;Lczb;)Lcuq;	a	lambda$getOffspringColor$3
		p	2		recipe
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		map
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lcga;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcti;)V	b	setColor
		p	1		color
	m	(Lcti;Lcti;)Lcti;	b	lambda$getOffspringColor$4
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcti;)I	c	createSheepColor
		p	0		color
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcti;)Lcti;	d	lambda$static$1
		p	0		color
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	lambda$registerGoals$2
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Lcti;	t	getColor
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isSheared
	m	(Z)V	x	setSheared
		p	1		sheared
	f	I	cc	EAT_ANIMATION_TICKS
	f	Lajw;	cd	DATA_WOOL_ID
	f	Ljava/util/Map;	ce	ITEM_BY_DYE
	f	Ljava/util/Map;	cg	COLOR_BY_DYE
	f	I	ch	eatAnimationTick
	f	Lcae;	ci	eatBlockGoal
c	cga$1	net/minecraft/world/entity/animal/EntitySheep$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	cgb	net/minecraft/world/entity/animal/EntityPerchable
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laqv;)Z	b	setEntityOnShoulder
		p	1		player
	m	()Z	gy	canSitOnShoulder
	m	()V	l	tick
	f	I	cg	RIDE_COOLDOWN
	f	I	ch	rideCooldownCounter
c	cgc	net/minecraft/world/entity/animal/EntitySnowman
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	a	readyForShearing
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lavq;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lexc;	cM	getLeashOffset
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Z	fl	isSensitiveToWater
	m	(Lbtn;)Z	j	lambda$registerGoals$0
		p	0		entity
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	hasPumpkin
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setPumpkin
		p	1		hasPumpkin
	f	Lajw;	b	DATA_PUMPKIN_ID
	f	B	c	PUMPKIN_FLAG
c	cgd	net/minecraft/world/entity/animal/EntitySquid
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(FFF)V	a	setMovementVector
		p	1		x
		p	2		y
		p	3		z
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcgd;)Z	a	access$000
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	()D	aZ	getDefaultGravity
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lexc;)Lexc;	b	rotateVector
		p	1		shootVector
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()F	fa	getSoundVolume
	m	()Lbuv$a;	gk	createAttributes
	m	()Z	gl	hasMovementVector
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Llk;	s	getInkParticle
	m	()Lavo;	t	getSquirtSound
	m	()Lavo;	v	getAmbientSound
	m	()V	x	spawnInk
	m	()Z	y	canBeLeashed
	f	F	b	xBodyRot
	f	F	c	xBodyRotO
	f	F	cc	tentacleMovement
	f	F	cd	oldTentacleMovement
	f	F	ce	tentacleAngle
	f	F	cf	oldTentacleAngle
	f	F	cg	speed
	f	F	ch	tentacleSpeed
	f	F	ci	rotateSpeed
	f	F	cj	tx
	f	F	ck	ty
	f	F	cl	tz
	f	F	d	zBodyRot
	f	F	e	zBodyRotO
c	cgd$a	net/minecraft/world/entity/animal/EntitySquid$a
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcgd;	a	this$0
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
c	cgd$b	net/minecraft/world/entity/animal/EntitySquid$PathfinderGoalSquid
	m	(Lcgd;Lcgd;)V	<init>	<init>
		p	2		squid
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lcgd;	a	squid
c	cge	net/minecraft/world/entity/animal/EntityTropicalFish
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcge$b;)V	a	setVariant
		p	1		variant
	m	(Lcge$b;Lcti;Lcti;)I	a	packVariant
		p	0		variety
		p	1		baseColor
		p	2		patternColor
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcuq;	b	getBucketItemStack
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkTropicalFishSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)Ljava/lang/String;	c	getPredefinedName
		p	0		variant
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gl	getFlopSound
	m	()Lcti;	gt	getBaseColor
	m	()Lcti;	gu	getPatternColor
	m	()Lcge$b;	gv	getVariant
	m	()I	gw	getPackedVariant
	m	(Lub;)V	h	loadFromBucketTag
		p	1		nbt
	m	(Lub;)V	i	lambda$saveToBucketTag$0
	m	(Lcuq;)V	n	saveToBucketTag
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(I)Z	r	isMaxGroupSizeReached
		p	1		count
	m	(I)Lcti;	s	getBaseColor
		p	0		variant
	m	(I)Lcti;	t	getPatternColor
		p	0		variant
	m	(I)Lcge$b;	u	getPattern
		p	0		variant
	m	()Lavo;	v	getAmbientSound
	m	(I)V	v	setPackedVariant
		p	1		variant
	f	Ljava/lang/String;	b	BUCKET_VARIANT_TAG
	f	Ljava/util/List;	c	COMMON_VARIANTS
	f	Lajw;	d	DATA_ID_TYPE_VARIANT
	f	Z	e	isSchool
c	cge$a	net/minecraft/world/entity/animal/EntityTropicalFish$Base
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()[Lcge$a;	a	$values
	f	Lcge$a;	a	SMALL
	f	Lcge$a;	b	LARGE
	f	I	c	id
	f	[Lcge$a;	d	$VALUES
c	cge$b	net/minecraft/world/entity/animal/EntityTropicalFish$Variant
	m	(Ljava/lang/String;ILjava/lang/String;Lcge$a;I)V	<init>	<init>
		p	3		name
		p	4		size
		p	5		id
	m	()Lcge$a;	a	base
	m	(I)Lcge$b;	a	byId
		p	0		id
	m	()I	b	getPackedId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lwz;	d	displayName
	m	()[Lcge$b;	e	$values
	f	Lcge$b;	a	KOB
	f	Lcge$b;	b	SUNSTREAK
	f	Lcge$b;	c	SNOOPER
	f	Lcge$b;	d	DASHER
	f	Lcge$b;	e	BRINELY
	f	Lcge$b;	f	SPOTTY
	f	Lcge$b;	g	FLOPPER
	f	Lcge$b;	h	STRIPEY
	f	Lcge$b;	i	GLITTER
	f	Lcge$b;	j	BLOCKFISH
	f	Lcge$b;	k	BETTY
	f	Lcge$b;	l	CLAYFISH
	f	Lcom/mojang/serialization/Codec;	m	CODEC
	f	Ljava/util/function/IntFunction;	n	BY_ID
	f	Ljava/lang/String;	o	name
	f	Lwz;	p	displayName
	f	Lcge$a;	q	base
	f	I	r	packedId
	f	[Lcge$b;	s	$VALUES
c	cge$c	net/minecraft/world/entity/animal/EntityTropicalFish$c
	m	(Lcge;Lcge$d;)V	<init>	<init>
		p	1		leader
		p	2		variant
	f	Lcge$d;	b	variant
c	cge$d	net/minecraft/world/entity/animal/EntityTropicalFish$d
	m	(I)V	<init>	<init>
		p	1		id
	m	()I	a	getPackedId
	m	()Lcge$b;	b	pattern
	m	()Lcti;	c	baseColor
	m	()Lcti;	d	patternColor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcge$b;	b	pattern
	f	Lcti;	c	baseColor
	f	Lcti;	d	patternColor
c	cgf	net/minecraft/world/entity/animal/EntityTurtle
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setTravelling
		p	1		traveling
	m	()V	B	registerGoals
	m	()I	R	getAmbientSoundInterval
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lcgf;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aP	nextStep
	m	()Lavo;	aQ	getSwimSound
	m	(Lcgf;)Layw;	b	access$100
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkTurtleSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	cC	isPushedByFluid
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()F	ea	getAgeScale
	m	(F)V	f	playSwimSound
		p	1		volume
	m	()Ljd;	gk	getHomePos
	m	()Ljd;	gl	getTravelPos
	m	()Z	gm	isGoingHome
	m	()Z	gn	isTravelling
	m	()Z	gp	canFallInLove
	m	(Ljd;)V	h	setHomePos
		p	1		pos
	m	(Ljd;)V	i	setTravelPos
		p	1		pos
	m	(Lbtn;)Z	j	lambda$static$0
		p	0		entity
	m	()V	k	ageBoundaryReached
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	lambda$registerGoals$1
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Z	s	hasEgg
	m	()Z	t	isLayingEgg
	m	()Lavo;	v	getAmbientSound
	m	()Lbuv$a;	x	createAttributes
	m	(Z)V	x	setHasEgg
		p	1		hasEgg
	m	()Z	y	canBeLeashed
	m	(Z)V	y	setLayingEgg
		p	1		diggingSand
	m	(Z)V	z	setGoingHome
		p	1		landBound
	f	Ljava/util/function/Predicate;	cc	BABY_ON_LAND_SELECTOR
	f	Lajw;	cd	HOME_POS
	f	Lajw;	ce	HAS_EGG
	f	Lajw;	cg	LAYING_EGG
	f	Lajw;	ch	TRAVEL_POS
	f	Lajw;	ci	GOING_HOME
	f	Lajw;	cj	TRAVELLING
	f	F	ck	BABY_SCALE
	f	Lbsu;	cl	BABY_DIMENSIONS
	f	I	cm	layEggCounter
c	cgf$a	net/minecraft/world/entity/animal/EntityTurtle$a
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	b	canUse
	m	()V	g	breed
	f	Lcgf;	d	turtle
c	cgf$b	net/minecraft/world/entity/animal/EntityTurtle$b
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcgf;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
c	cgf$c	net/minecraft/world/entity/animal/EntityTurtle$c
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	l	shouldRecalculatePath
	f	I	g	GIVE_UP_TICKS
	f	Lcgf;	h	turtle
c	cgf$d	net/minecraft/world/entity/animal/EntityTurtle$d
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()V	a	tick
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcgf;	g	turtle
c	cgf$e	net/minecraft/world/entity/animal/EntityTurtle$e
	m	(Lcgf;)V	<init>	<init>
		p	1		turtle
	m	()V	a	tick
	m	()V	g	updateSpeed
	f	Lcgf;	l	turtle
c	cgf$f	net/minecraft/world/entity/animal/EntityTurtle$f
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()Z	b	canUse
c	cgf$g	net/minecraft/world/entity/animal/EntityTurtle$g
	m	(Lcgf;Ldcw;)V	<init>	<init>
		p	1		owner
		p	2		world
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
c	cgf$h	net/minecraft/world/entity/animal/EntityTurtle$h
	m	(Lcgf;DI)V	<init>	<init>
		p	1		turtle
		p	2		speed
		p	4		chance
	m	()Z	b	canUse
	f	Lcgf;	i	turtle
c	cgf$i	net/minecraft/world/entity/animal/EntityTurtle$i
	m	(Lcgf;D)V	<init>	<init>
		p	1		turtle
		p	2		speed
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcgf;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
c	cgg	net/minecraft/world/entity/animal/EntityWaterAnimal
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	R	getAmbientSoundInterval
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	()V	aw	baseTick
	m	(I)V	b	handleAirSupply
		p	1		air
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkSurfaceWaterAnimalSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cC	isPushedByFluid
	m	()I	eg	getBaseExperienceReward
	m	()Z	y	canBeLeashed
c	cgh	net/minecraft/world/entity/animal/EntityWolf
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setIsInterested
		p	1		begging
	m	()V	B	registerGoals
	m	(F)F	H	getWetShade
		p	1		tickDelta
	m	(F)F	I	getHeadRollAngle
		p	1		tickDelta
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lakq;)Ljava/util/Optional;	a	lambda$readAdditionalSaveData$3
		p	1		variantKey
	m	(Lakr;)Lakq;	a	lambda$readAdditionalSaveData$2
		p	0		variantId
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbtn;Lbtn;)Z	a	wantsToAttack
		p	1		target
		p	2		owner
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcgh;)Layw;	a	access$000
	m	(Lcti;)V	a	setCollarColor
		p	1		color
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Lakq;)V	a	lambda$addAdditionalSaveData$1
	m	()I	ac	getMaxHeadXRot
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lcgh;	b	getBreedOffspring
	m	(Lbrk;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkWolfSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lexc;	cM	getLeashOffset
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	()I	fN	getMaxSpawnClusterSize
	m	()F	fa	getSoundVolume
	m	(FF)F	g	getBodyRollAngle
		p	1		tickDelta
	m	(Lbrk;)Z	g	canArmorAbsorb
		p	1		source
	m	(Lcmx;)V	g	tryToTame
		p	1		player
	m	()Z	gA	hasArmor
	m	()Z	gB	isInterested
	m	()V	gC	cancelShake
	m	()Lakr;	gu	getTexture
	m	()Ljm;	gv	getVariant
	m	()Lbuv$a;	gw	createAttributes
	m	()Z	gx	isWet
	m	()F	gy	getTailAngle
	m	()Lcti;	gz	getCollarColor
	m	(Ljm;)V	i	setVariant
	m	(Lbtn;)Z	k	lambda$static$0
		p	0		entity
	m	()V	l	tick
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()V	t	applyTamingSideEffects
	m	()Lavo;	v	getAmbientSound
	m	()Z	y	canBeLeashed
	f	Ljava/util/function/Predicate;	cg	PREY_SELECTOR
	f	Lajw;	ch	DATA_INTERESTED_ID
	f	Lajw;	ci	DATA_COLLAR_COLOR
	f	Lajw;	cj	DATA_REMAINING_ANGER_TIME
	f	Lajw;	ck	DATA_VARIANT_ID
	f	F	cl	START_HEALTH
	f	F	cm	TAME_HEALTH
	f	F	cn	ARMOR_REPAIR_UNIT
	f	F	co	interestedAngle
	f	F	cp	interestedAngleO
	f	Z	cq	isWet
	f	Z	cr	isShaking
	f	F	cs	shakeAnim
	f	F	ct	shakeAnimO
	f	Lbqc;	cu	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cv	persistentAngerTarget
c	cgh$a	net/minecraft/world/entity/animal/EntityWolf$a
	m	(Lcgh;Lcgh;Ljava/lang/Class;FDD)V	<init>	<init>
		p	2		wolf
		p	3		fleeFromType
		p	4		distance
		p	5		slowSpeed
		p	7		fastSpeed
	m	()V	a	tick
	m	(Lchl;)Z	a	avoidLlama
		p	1		llama
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcgh;	i	this$0
	f	Lcgh;	j	wolf
c	cgh$b	net/minecraft/world/entity/animal/EntityWolf$b
	m	(Ljm;)V	<init>	<init>
		p	1		variant
	f	Ljm;	a	type
c	cgi	net/minecraft/world/entity/animal/WolfVariant
	m	(Lakr;Lakr;Lakr;Ljq;)V	<init>	<init>
		p	1		wildId
		p	2		tameId
		p	3		angryId
		p	4		biomes
	m	()Lakr;	a	wildTexture
	m	(Lakr;)Lakr;	a	fullTextureId
		p	0		id
	m	(Lcgi;)Lakr;	a	lambda$static$2
		p	0		wolfVariant
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fullTextureId$4
		p	0		oldPath
	m	()Lakr;	b	tameTexture
	m	(Lcgi;)Lakr;	b	lambda$static$1
		p	0		wolfVariant
	m	()Lakr;	c	angryTexture
	m	(Lcgi;)Lakr;	c	lambda$static$0
		p	0		wolfVariant
	m	()Ljq;	d	biomes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lakr;	e	wildTexture
	f	Lakr;	f	tameTexture
	f	Lakr;	g	angryTexture
	f	Lakr;	h	wildTextureFull
	f	Lakr;	i	tameTextureFull
	f	Lakr;	j	angryTextureFull
	f	Ljq;	k	biomes
c	cgj	net/minecraft/world/entity/animal/WolfVariants
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljm;Ljm$c;)Z	a	lambda$getSpawnVariant$0
		p	1		entry
	m	(Ljz;)Ljava/util/Optional;	a	lambda$getSpawnVariant$1
	m	(Lka;Ljm;)Ljm;	a	getSpawnVariant
		p	0		dynamicRegistryManager
		p	1		biome
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;Ljava/lang/String;Lakq;)V	a	register
		p	0		registry
		p	1		key
		p	2		textureName
		p	3		biome
	m	(Lqq;Lakq;Ljava/lang/String;Lawu;)V	a	register
		p	0		registry
		p	1		key
		p	2		textureName
		p	3		biomeTag
	m	(Lqq;Lakq;Ljava/lang/String;Ljq;)V	a	register
		p	0		registry
		p	1		key
		p	2		textureName
		p	3		biomes
	f	Lakq;	a	PALE
	f	Lakq;	b	SPOTTED
	f	Lakq;	c	SNOWY
	f	Lakq;	d	BLACK
	f	Lakq;	e	ASHEN
	f	Lakq;	f	RUSTY
	f	Lakq;	g	WOODS
	f	Lakq;	h	CHESTNUT
	f	Lakq;	i	STRIPED
	f	Lakq;	j	DEFAULT
c	cgk	net/minecraft/world/entity/animal/allay/Allay
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(F)F	H	getHoldingItemAnimationProgress
	m	(F)F	I	getSpinningProgress
	m	()Lkh;	X	getPickupReach
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcmx;Lcuq;)V	a	removeInteractionItem
		p	1		player
		p	2		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lcuq;Lcuq;)Z	a	equipmentHasChanged
		p	1		stack
		p	2		stack2
	m	(Ldyi$a;)V	a	lambda$readAdditionalSaveData$3
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$1
	m	()Z	aW	isFlapping
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Ljd;Z)V	b	setJukeboxPlaying
		p	1		jukeboxPos
		p	2		playing
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lexc;	cM	getLeashOffset
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcuq;Lcuq;)Z	d	allayConsidersItemEqual
		p	1		stack
		p	2		stack2
	m	(Ljava/lang/String;)V	d	lambda$readAdditionalSaveData$2
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(Lcuq;Lcuq;)Z	e	hasNonMatchingPotion
		p	1		stack
		p	2		stack2
	m	(Ljava/lang/String;)V	e	lambda$addAdditionalSaveData$0
	m	()V	ez	dropEquipment
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	()Z	fS	canPickUpLoot
	m	()F	fa	getSoundVolume
	m	()Z	gi	shouldStayCloseToLeashHolder
	m	()Z	gk	isDancing
	m	()Z	gl	isSpinning
	m	()Ldyi$a;	gm	getVibrationData
	m	()Ldyi$d;	gn	getVibrationUser
	m	()Z	go	isOnPickupCooldown
	m	()Z	gp	shouldStopDancing
	m	()V	gq	updateDuplicationCooldown
	m	()V	gr	duplicateAllay
	m	()V	gs	resetDuplicationCooldown
	m	()Z	gt	canDuplicate
	m	()V	gu	spawnHeartParticle
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	isDuplicationItem
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	hasItemInHand
	m	()Lavo;	v	getAmbientSound
	m	()Lbra;	x	getInventory
	m	(Z)V	x	setDancing
		p	1		dancing
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	Lkh;	cc	ITEM_PICKUP_REACH
	f	I	cd	LIFTING_ITEM_ANIMATION_DURATION
	f	F	ce	DANCING_LOOP_DURATION
	f	F	cf	SPINNING_ANIMATION_DURATION
	f	Lcyw;	cg	DUPLICATION_ITEM
	f	I	ch	DUPLICATION_COOLDOWN_TICKS
	f	I	ci	NUM_OF_DUPLICATION_HEARTS
	f	Lajw;	cj	DATA_DANCING
	f	Lajw;	ck	DATA_CAN_DUPLICATE
	f	Ldxw;	cl	dynamicVibrationListener
	f	Ldyi$a;	cm	vibrationData
	f	Ldyi$d;	cn	vibrationUser
	f	Ldxw;	co	dynamicJukeboxListener
	f	Lbra;	cp	inventory
	f	Ljd;	cq	jukeboxPos
	f	J	cr	duplicationCooldown
	f	F	cs	holdingItemAnimationTicks
	f	F	ct	holdingItemAnimationTicks0
	f	F	cu	dancingAnimationTicks
	f	F	cv	spinningAnimationTicks
	f	F	cw	spinningAnimationTicks0
	f	Lcom/google/common/collect/ImmutableList;	d	THROW_SOUND_PITCHES
	f	Lorg/slf4j/Logger;	e	LOGGER
c	cgk$a	net/minecraft/world/entity/animal/allay/Allay$a
	m	(Lcgk;Ldyd;I)V	<init>	<init>
		p	2		positionSource
		p	3		range
	m	()Ldyd;	a	getListenerSource
	m	(Laqu;Ljm;Ldxz$a;Lexc;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	f	Lcgk;	a	this$0
	f	Ldyd;	b	listenerSource
	f	I	c	listenerRadius
c	cgk$b	net/minecraft/world/entity/animal/allay/Allay$b
	m	()I	a	getListenerRadius
	m	(Laqu;Ljd;Ljm;Lbsr;Lbsr;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldyd;	b	getPositionSource
	m	()Lawu;	c	getListenableEvents
	f	Lcgk;	a	this$0
	f	I	b	VIBRATION_EVENT_LISTENER_RANGE
	f	Ldyd;	c	positionSource
c	cgl	net/minecraft/world/entity/animal/allay/AllayAi
	m	(Laqv;)Lbwv;	a	lambda$getLikedPlayerPositionTracker$1
		p	0		player
	m	(Lbtn;)Ljava/util/Optional;	a	getLikedPlayer
		p	0		allay
	m	(Lbtn;Lbuq;Ljl;)Z	a	shouldDepositItemsAtLikedNoteblock
		p	0		allay
		p	1		brain
		p	2		pos
	m	(Lbtn;Ljd;)V	a	hearNoteblock
		p	0		allay
		p	1		pos
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lcgk;)V	a	updateActivity
		p	0		allay
	m	(Lbtn;)Ljava/util/Optional;	b	getItemDepositPosition
		p	0		allay
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lcgk;)Z	b	lambda$initIdleActivity$0
		p	0		allay
	m	(Lbtn;)Z	c	hasWantedItem
		p	0		entity
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	m	(Lbtn;)Ljava/util/Optional;	d	getLikedPlayerPositionTracker
		p	0		allay
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	f	F	c	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	f	F	d	SPEED_MULTIPLIER_WHEN_PANICKING
	f	I	e	CLOSE_ENOUGH_TO_TARGET
	f	I	f	TOO_FAR_FROM_TARGET
	f	I	g	MAX_LOOK_DISTANCE
	f	I	h	MIN_WAIT_DURATION
	f	I	i	MAX_WAIT_DURATION
	f	I	j	TIME_TO_FORGET_NOTEBLOCK
	f	I	k	DISTANCE_TO_WANTED_ITEM
	f	I	l	GIVE_ITEM_TIMEOUT_DURATION
c	cgn	net/minecraft/world/entity/animal/armadillo/Armadillo
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbzk;	H	createBodyControl
	m	(IZ)V	a	ageUp
		p	1		age
		p	2		overGrow
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcgn$a;)V	a	switchToState
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ae	getMaxHeadYRot
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkArmadilloSpawnRules
		p	0		entityType
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcuq;)Lavo;	d	getEatingSound
		p	1		stack
	m	()Lbuq$b;	dU	brainProvider
	m	()F	ea	getAgeScale
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lcmx;)V	f	setInLove
		p	1		player
	m	()Z	gk	shouldSwitchToScaredState
	m	()Lcgn$a;	gl	getState
	m	()V	gm	rollUp
	m	()V	gn	rollOut
	m	()Z	go	brushOffScute
	m	()Z	gp	canFallInLove
	m	()Z	gu	canStayRolledUp
	m	()I	gv	pickNextScuteDropTime
	m	()V	gw	setupAnimationStates
	m	(Lbtn;)Z	j	isScaredBy
		p	1		entity
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isScared
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	shouldHideInShell
	f	F	cc	BABY_SCALE
	f	F	cd	MAX_HEAD_ROTATION_EXTENT
	f	I	ce	SCARE_CHECK_INTERVAL
	f	Lbsm;	cg	rollOutAnimationState
	f	Lbsm;	ch	rollUpAnimationState
	f	Lbsm;	ci	peekAnimationState
	f	D	cj	SCARE_DISTANCE_HORIZONTAL
	f	D	ck	SCARE_DISTANCE_VERTICAL
	f	Lajw;	cl	ARMADILLO_STATE
	f	J	cm	inStateTicks
	f	I	cn	scuteTime
	f	Z	co	peekReceivedClient
c	cgn$1	net/minecraft/world/entity/animal/armadillo/Armadillo$1
	m	(Lcgn;Lbtp;)V	<init>	<init>
		p	2		entity
	m	()V	a	clientTick
	f	Lcgn;	a	this$0
c	cgn$a	net/minecraft/world/entity/animal/armadillo/Armadillo$a
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
		p	3		name
		p	4		runRollUpTask
		p	5		lengthInTicks
		p	6		index
	m	()Z	a	isThreatened
	m	(J)Z	a	shouldHideInShell
		p	1		currentStateTicks
	m	(Ljava/lang/String;)Lcgn$a;	a	fromName
		p	0		name
	m	()I	b	animationDuration
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	d	id
	m	()[Lcgn$a;	e	$values
	f	Lcgn$a;	a	IDLE
	f	Lcgn$a;	b	ROLLING
	f	Lcgn$a;	c	SCARED
	f	Lcgn$a;	d	UNROLLING
	f	Lyx;	e	STREAM_CODEC
	f	Lazk$a;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	Ljava/lang/String;	h	name
	f	Z	i	isThreatened
	f	I	j	animationDuration
	f	I	k	id
	f	[Lcgn$a;	l	$VALUES
c	cgn$a$1	net/minecraft/world/entity/animal/armadillo/Armadillo$a$1
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
		p	3		name
		p	4		runRollUpTask
		p	5		lengthInTicks
		p	6		index
	m	(J)Z	a	shouldHideInShell
		p	1		currentStateTicks
c	cgn$a$2	net/minecraft/world/entity/animal/armadillo/Armadillo$a$2
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
		p	3		name
		p	4		runRollUpTask
		p	5		lengthInTicks
		p	6		index
	m	(J)Z	a	shouldHideInShell
		p	1		currentStateTicks
c	cgn$a$3	net/minecraft/world/entity/animal/armadillo/Armadillo$a$3
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
		p	3		name
		p	4		runRollUpTask
		p	5		lengthInTicks
		p	6		index
	m	(J)Z	a	shouldHideInShell
		p	1		currentStateTicks
c	cgn$a$4	net/minecraft/world/entity/animal/armadillo/Armadillo$a$4
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
		p	3		name
		p	4		runRollUpTask
		p	5		lengthInTicks
		p	6		index
	m	(J)Z	a	shouldHideInShell
		p	1		currentStateTicks
c	cgo	net/minecraft/world/entity/animal/armadillo/ArmadilloAi
	m	()Lbuq$b;	a	brainProvider
	m	(Laqu;Lcgn;J)Z	a	lambda$static$0
		p	1		armadillo
	m	(Lbtn;)Ljava/lang/Double;	a	lambda$initIdleActivity$4
		p	0		armadillo
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		context
	m	(Lbyv;)Lbyx;	a	lambda$static$1
	m	(Lcgn;)V	a	updateActivity
		p	0		armadillo
	m	(Lcuq;)Z	a	lambda$getTemptations$5
		p	0		stack
	m	()Ljava/util/function/Predicate;	b	getTemptations
	m	(Lbtn;)Ljava/lang/Float;	b	lambda$initIdleActivity$3
		p	0		armadillo
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	m	(Lbuq;)V	d	initScaredActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	D	f	DEFAULT_CLOSE_ENOUGH_DIST
	f	D	g	BABY_CLOSE_ENOUGH_DIST
	f	Lbqc;	h	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	i	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	j	MEMORY_TYPES
	f	Lbws;	k	ARMADILLO_ROLLING_OUT
c	cgo$1	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$1
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtp;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
c	cgo$a	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$a
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgn;J)V	a	tick
	m	(Lcgn;)I	a	pickNextPeekTimer
		p	1		entity
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgn;J)Z	b	canStillUse
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgn;J)V	c	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgn;J)V	d	stop
	f	I	c	BALL_UP_STAY_IN_STATE
	f	I	d	TICKS_DELAY_TO_DETERMINE_IF_DANGER_IS_STILL_AROUND
	f	I	e	DANGER_DETECTED_RECENTLY_DANGER_THRESHOLD
	f	I	f	nextPeekTimer
	f	Z	g	dangerWasAround
c	cgo$b	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$b
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laqu;Lcgn;J)V	a	start
	m	(Lbtw;)Lawu;	a	lambda$new$0
		p	0		entity
	m	(Laqu;Lbtw;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	cgq	net/minecraft/world/entity/animal/axolotl/Axolotl
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	S	playAmbientSound
	m	()Z	Y	requiresCustomPersistence
	m	()Ljava/util/Map;	a	getModelRotationValues
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)Z	a	useRareVariant
		p	0		random
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkAxolotlSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lcgq$d;)V	a	setVariant
		p	1		variant
	m	(Lcgq;Lbtn;)V	a	onStopAttacking
		p	0		axolotl
		p	1		entity
	m	(Lcmx;)V	a	applySupportingEffects
		p	1		player
	m	(Lcmx;Lbqq;Lcuq;)V	a	usePlayerItem
		p	1		player
		p	2		hand
		p	3		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ac	getMaxHeadXRot
	m	()I	ae	getMaxHeadYRot
	m	()V	aw	baseTick
	m	()Lcuq;	b	getBucketItemStack
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cC	isPushedByFluid
	m	()I	cl	getMaxAirSupply
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Z	ep	canBeSeenAsEnemy
	m	()V	gd	playAttackSound
	m	()Lcgq$d;	gk	getVariant
	m	()Z	gl	isPlayingDead
	m	()Lbuv$a;	gm	createAttributes
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lub;)V	h	loadFromBucketTag
		p	1		nbt
	m	(Lub;)V	i	lambda$saveToBucketTag$0
		p	1		nbt
	m	(Lcuq;)V	n	saveToBucketTag
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbtn;	p	getTarget
	m	()V	s	rehydrate
	m	()Z	t	fromBucket
	m	(I)V	t	handleAirSupply
		p	1		air
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getPickupSound
	m	(Z)V	x	setFromBucket
		p	1		fromBucket
	m	()Z	y	canBeLeashed
	m	(Z)V	y	setPlayingDead
		p	1		playingDead
	f	I	cc	TOTAL_PLAYDEAD_TIME
	f	Lcom/google/common/collect/ImmutableList;	cd	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	ce	MEMORY_TYPES
	f	D	cg	PLAYER_REGEN_DETECTION_RANGE
	f	I	ch	RARE_VARIANT_CHANCE
	f	Ljava/lang/String;	ci	VARIANT_TAG
	f	Lajw;	cj	DATA_VARIANT
	f	Lajw;	ck	DATA_PLAYING_DEAD
	f	Lajw;	cl	FROM_BUCKET
	f	I	cm	AXOLOTL_TOTAL_AIR_SUPPLY
	f	I	cn	REHYDRATE_AIR_SUPPLY
	f	I	co	REGEN_BUFF_MAX_DURATION
	f	Ljava/util/Map;	cp	modelRotationValues
	f	I	cq	REGEN_BUFF_BASE_DURATION
c	cgq$a	net/minecraft/world/entity/animal/axolotl/Axolotl$a
	m	([Lcgq$d;)V	<init>	<init>
		p	1		variants
	m	(Layw;)Lcgq$d;	a	getVariant
		p	1		random
	f	[Lcgq$d;	a	types
c	cgq$b	net/minecraft/world/entity/animal/axolotl/Axolotl$b
	m	(Lcgq;Lcgq;I)V	<init>	<init>
		p	2		axolotl
		p	3		yawAdjustThreshold
	m	()V	a	tick
	f	Lcgq;	h	this$0
c	cgq$c	net/minecraft/world/entity/animal/axolotl/Axolotl$c
	m	(Lcgq;)V	<init>	<init>
		p	1		axolotl
	m	()V	a	tick
	f	Lcgq;	l	axolotl
c	cgq$d	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		natural
	m	()I	a	getId
	m	(I)Lcgq$d;	a	byId
		p	0		id
	m	(Layw;)Lcgq$d;	a	getCommonSpawnVariant
		p	0		random
	m	(Layw;Z)Lcgq$d;	a	getSpawnVariant
		p	0		random
		p	1		natural
	m	(ZLcgq$d;)Z	a	lambda$getSpawnVariant$0
		p	1		variant
	m	()Ljava/lang/String;	b	getName
	m	(I)[Lcgq$d;	b	lambda$getSpawnVariant$1
	m	(Layw;)Lcgq$d;	b	getRareSpawnVariant
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcgq$d;	d	$values
	f	Lcgq$d;	a	LUCY
	f	Lcgq$d;	b	WILD
	f	Lcgq$d;	c	GOLD
	f	Lcgq$d;	d	CYAN
	f	Lcgq$d;	e	BLUE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Z	j	common
	f	[Lcgq$d;	k	$VALUES
c	cgr	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Lbtn;)Z	a	canSetWalkTargetFromLookTarget
		p	0		entity
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lcgq;)V	a	updateActivity
		p	0		axolotl
	m	(Lcuq;)Z	a	lambda$getTemptations$0
		p	0		stack
	m	(Lbtn;)F	b	getSpeedModifierChasing
		p	0		entity
	m	(Lbuq;)V	b	initPlayDeadActivity
		p	0		brain
	m	(Lcgq;)Ljava/util/Optional;	b	findNearestValidAttackTarget
		p	0		axolotl
	m	(Lbtn;)F	c	getSpeedModifierFollowingAdult
		p	0		entity
	m	(Lbuq;)V	c	initFightActivity
		p	0		brain
	m	(Lbtn;)F	d	getSpeedModifier
		p	0		entity
	m	(Lbuq;)V	d	initCoreActivity
		p	0		brain
	m	(Lbuq;)V	e	initIdleActivity
		p	0		brain
	f	Lbqc;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
c	cgs	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgq;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgq;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgq;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	cgt	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		playDeadTicks
		p	2		hurtByEntity
	m	(Lbyu$b;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	cgv	net/minecraft/world/entity/animal/camel/Camel
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Lbzk;	H	createBodyControl
	m	()Z	a	canJump
	m	(J)V	a	resetLastPoseChangeTick
		p	1		lastPoseTick
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsr;F)Z	a	handleLeashAtDistance
		p	1		leashHolder
		p	2		distance
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcmx;Lcuq;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcmx;Lexc;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZFLbsu;F)D	a	getBodyAnchorAnimationYOffset
		p	1		primaryPassenger
		p	2		tickDelta
		p	3		dimensions
		p	4		scaleFactor
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()Lavo;	ac_	getSaddleSoundEvent
	m	()I	ae	getMaxHeadYRot
	m	()V	b	handleStopJump
	m	(FLexc;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(J)V	b	resetLastPoseChangeTickToFullStand
		p	1		time
	m	(Laqu;Lbsl;)Lcgv;	b	getBreedOffspring
	m	(Lcmx;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lexc;)Lexc;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	c	getJumpCooldown
	m	(I)V	c	handleStartJump
		p	1		height
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Z	dH	canSprint
	m	()Lbuq$b;	dU	brainProvider
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lcmx;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()F	ea	getAgeScale
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	()V	gV	setupAnimationStates
	m	()Z	gW	isVisuallySittingDown
	m	()Z	gk	canCamelChangePose
	m	()Z	gl	canPerformRearing
	m	()Lavo;	gm	getEatingSound
	m	()Z	gn	isCamelSitting
	m	()Z	go	isCamelVisuallySitting
	m	()Z	gu	isInPoseTransition
	m	()V	gv	sitDown
	m	()V	gw	standUp
	m	()V	gx	standUpInstantly
	m	()J	gy	getPoseTime
	m	()Z	gz	isTamed
	m	(Lbtn;)Lexb;	j	getRiddenRotation
		p	1		controllingPassenger
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(F)Lexc;	q	getLeashOffset
		p	1		tickDelta
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	refuseToMove
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isDashing
	m	(Z)V	x	setDashing
		p	1		dashing
	m	(F)V	z	updateWalkAnimation
		p	1		posDelta
	f	F	cD	RUNNING_SPEED_BONUS
	f	F	cE	DASH_VERTICAL_MOMENTUM
	f	F	cF	DASH_HORIZONTAL_MOMENTUM
	f	I	cG	DASH_MINIMUM_DURATION_TICKS
	f	I	cH	SITDOWN_DURATION_TICKS
	f	I	cI	STANDUP_DURATION_TICKS
	f	I	cJ	IDLE_MINIMAL_DURATION_TICKS
	f	F	cK	SITTING_HEIGHT_DIFFERENCE
	f	Lbsu;	cL	SITTING_DIMENSIONS
	f	I	cM	dashCooldown
	f	I	cN	idleAnimationTimeout
	f	F	cc	BABY_SCALE
	f	I	cd	DASH_COOLDOWN_TICKS
	f	I	ce	MAX_HEAD_Y_ROT
	f	Lajw;	cg	DASH
	f	Lajw;	ch	LAST_POSE_CHANGE_TICK
	f	Lbsm;	ci	sitAnimationState
	f	Lbsm;	cj	sitPoseAnimationState
	f	Lbsm;	ck	sitUpAnimationState
	f	Lbsm;	cl	idleAnimationState
	f	Lbsm;	cm	dashAnimationState
c	cgv$a	net/minecraft/world/entity/animal/camel/Camel$a
	m	(Lcgv;Lcgv;)V	<init>	<init>
		p	2		camel
	m	()V	a	clientTick
	f	Lcgv;	a	this$0
c	cgv$b	net/minecraft/world/entity/animal/camel/Camel$b
	m	(Lcgv;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lcgv;	h	this$0
c	cgv$c	net/minecraft/world/entity/animal/camel/Camel$c
	m	(Lcgv;)V	<init>	<init>
		p	1		entity
	m	()V	a	tick
	f	Lcgv;	l	this$0
c	cgw	net/minecraft/world/entity/animal/camel/CamelAi
	m	()Lbuq$b;	a	brainProvider
	m	(Lbtn;)Ljava/lang/Double;	a	lambda$initIdleActivity$1
		p	0		entity
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lcgv;)V	a	updateActivity
		p	0		camel
	m	(Lcgv;Layw;)V	a	initMemories
		p	0		camel
		p	1		random
	m	(Lcuq;)Z	a	lambda$getTemptations$2
		p	0		stack
	m	()Ljava/util/function/Predicate;	b	getTemptations
	m	(Lbtn;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		entity
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	Lbqc;	f	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	g	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	h	MEMORY_TYPES
c	cgw$a	net/minecraft/world/entity/animal/camel/CamelAi$a
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laqu;Lcgv;J)V	a	start
	m	(Laqu;Lbtw;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	cgw$b	net/minecraft/world/entity/animal/camel/CamelAi$b
	m	(I)V	<init>	<init>
		p	1		lastPoseSecondsDelta
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgv;J)V	a	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	f	I	c	minimalPoseTicks
c	cgy	net/minecraft/world/entity/animal/frog/Frog
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lakr;)Lakq;	a	lambda$readAdditionalSaveData$0
		p	0		variant
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lcfe;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ae	getMaxHeadYRot
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsr;)V	c	setTongueTarget
		p	1		entity
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkFrogSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	()Z	cC	isPushedByFluid
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(FF)I	e	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	()I	fM	getHeadRotSpeed
	m	()Lbuv$a;	gk	createAttributes
	m	(Ljm;)V	i	setVariant
	m	(Lbtn;)Z	j	canEat
		p	0		entity
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Z	o_	isBaby
	m	()Lbtn;	p	getTarget
	m	()V	s	eraseTongueTarget
	m	()Ljava/util/Optional;	t	getTongueTarget
	m	()Lavo;	v	getAmbientSound
	m	()Ljm;	x	getVariant
	m	(F)V	z	updateWalkAnimation
		p	1		posDelta
	f	Lcom/google/common/collect/ImmutableList;	cc	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cd	MEMORY_TYPES
	f	Ljava/lang/String;	ce	VARIANT_KEY
	f	Lbsm;	cg	jumpAnimationState
	f	Lbsm;	ch	croakAnimationState
	f	Lbsm;	ci	tongueAnimationState
	f	Lbsm;	cj	swimIdleAnimationState
	f	Lajw;	ck	DATA_VARIANT_ID
	f	Lajw;	cl	DATA_TONGUE_TARGET_ID
	f	I	cm	FROG_FALL_DAMAGE_REDUCTION
	f	Lakq;	cn	DEFAULT_VARIANT
c	cgy$a	net/minecraft/world/entity/animal/frog/Frog$a
	m	(Lcgy;Lbtp;)V	<init>	<init>
		p	2		entity
	m	()Z	c	resetXRotOnTick
	f	Lcgy;	h	this$0
c	cgy$b	net/minecraft/world/entity/animal/frog/Frog$b
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Lepq;	a	getStart
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	f	Ljd$a;	l	belowPos
c	cgy$c	net/minecraft/world/entity/animal/frog/Frog$c
	m	(Lcgy;Ldcw;)V	<init>	<init>
		p	1		frog
		p	2		world
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lepv;)Z	b	canCutCorner
		p	1		nodeType
c	cgz	net/minecraft/world/entity/animal/frog/FrogAi
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Lbtn;)Ljava/lang/Float;	a	lambda$initSwimActivity$2
		p	0		frog
	m	(Lbtp;Ljd;)Z	a	isAcceptableLandingSpot
		p	0		frog
		p	1		pos
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lcgy;)V	a	updateActivity
		p	0		frog
	m	(Lcgy;Layw;)V	a	initMemories
		p	0		frog
		p	1		random
	m	(Lcuq;)Z	a	lambda$getTemptations$6
		p	0		stack
	m	(Lbtn;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
		p	0		frog
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lcgy;)Z	b	canAttack
		p	0		frog
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	m	(Lcgy;)Lavo;	c	lambda$initJumpActivity$5
		p	0		frog
	m	(Lbuq;)V	d	initSwimActivity
		p	0		brain
	m	(Lcgy;)Ljava/util/Optional;	d	lambda$initLaySpawnActivity$4
		p	0		frog
	m	(Lbuq;)V	e	initLaySpawnActivity
		p	0		brain
	m	(Lcgy;)Ljava/util/Optional;	e	lambda$initSwimActivity$3
		p	0		frog
	m	(Lbuq;)V	f	initJumpActivity
		p	0		brain
	m	(Lcgy;)Ljava/util/Optional;	f	lambda$initIdleActivity$1
		p	0		frog
	m	(Lbuq;)V	g	initTongueActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_IN_WATER
	f	Lbqc;	e	TIME_BETWEEN_LONG_JUMPS
	f	I	f	MAX_LONG_JUMP_HEIGHT
	f	I	g	MAX_LONG_JUMP_WIDTH
	f	F	h	MAX_JUMP_VELOCITY_MULTIPLIER
	f	F	i	SPEED_MULTIPLIER_WHEN_TEMPTED
c	cha	net/minecraft/world/entity/animal/frog/ShootTongue
	m	(Lavo;Lavo;)V	<init>	<init>
		p	1		tongueSound
		p	2		eatSound
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lcgy;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lcgy;Lbtn;)Z	a	canPathfindToTarget
		p	1		entity
		p	2		target
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;)V	b	eatEntity
		p	1		world
		p	2		frog
	m	(Laqu;Lcgy;J)V	b	start
	m	(Lcgy;Lbtn;)V	b	addUnreachableTargetToMemory
		p	1		entity
		p	2		target
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lcgy;J)V	d	tick
	f	I	c	TIME_OUT_DURATION
	f	I	d	CATCH_ANIMATION_DURATION
	f	I	e	TONGUE_ANIMATION_DURATION
	f	I	f	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	f	I	g	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	f	F	h	EATING_DISTANCE
	f	F	i	EATING_MOVEMENT_FACTOR
	f	I	j	eatAnimationTimer
	f	I	k	calculatePathCounter
	f	Lavo;	l	tongueSound
	f	Lavo;	m	eatSound
	f	Lexc;	n	itemSpawnPos
	f	Lcha$a;	o	state
c	cha$a	net/minecraft/world/entity/animal/frog/ShootTongue$a
	m	()[Lcha$a;	a	$values
	f	Lcha$a;	a	MOVE_TO_TARGET
	f	Lcha$a;	b	CATCH_ANIMATION
	f	Lcha$a;	c	EAT_ANIMATION
	f	Lcha$a;	d	DONE
	f	[Lcha$a;	e	$VALUES
c	chb	net/minecraft/world/entity/animal/frog/Tadpole
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmx;Lcuq;)V	a	feed
		p	1		player
		p	2		stack
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()Lcuq;	b	getBucketItemStack
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lcuq;)V	b	usePlayerItem
		p	1		player
		p	2		stack
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	ageUp
		p	1		seconds
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Z	ee	shouldDropExperience
	m	()Lavo;	gl	getFlopSound
	m	()Lbuv$a;	gm	createAttributes
	m	()I	gn	getAge
	m	()V	go	ageUp
	m	()I	gp	getTicksLeftUntilAdult
	m	(Lub;)V	h	loadFromBucketTag
		p	1		nbt
	m	(Lub;)V	i	lambda$saveToBucketTag$0
	m	()V	m_	aiStep
	m	(Lcuq;)V	n	saveToBucketTag
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(I)V	s	setAge
		p	1		tadpoleAge
	m	()Z	t	fromBucket
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getPickupSound
	m	(Z)V	x	setFromBucket
		p	1		fromBucket
	f	I	b	ticksToBeFrog
	f	F	c	HITBOX_WIDTH
	f	Lcom/google/common/collect/ImmutableList;	cc	MEMORY_TYPES
	f	I	cd	age
	f	F	d	HITBOX_HEIGHT
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	chc	net/minecraft/world/entity/animal/frog/TadpoleAi
	m	(Lbtn;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lchb;)V	a	updateActivity
		p	0		tadpole
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
c	che	net/minecraft/world/entity/animal/goat/Goat
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ae	getMaxHeadYRot
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbsl;)Lche;	b	getBreedOffspring
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkGoatSpawnRules
		p	0		entityType
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcuq;)Lavo;	d	getEatingSound
		p	1		stack
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(FF)I	e	calculateFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()Z	gk	hasLeftHorn
	m	()Z	gl	hasRightHorn
	m	()Z	gm	dropHorn
	m	()V	gn	addHorns
	m	()V	go	removeHorns
	m	()Z	gu	isScreamingGoat
	m	()F	gv	getRammingXHeadRot
	m	()V	k	ageBoundaryReached
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(F)V	o	setYHeadRot
		p	1		headYaw
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lcuq;	s	createHorn
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getMilkingSound
	m	(Z)V	x	setScreamingGoat
		p	1		screaming
	f	Lbsu;	cc	LONG_JUMPING_DIMENSIONS
	f	Lcom/google/common/collect/ImmutableList;	cd	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	ce	MEMORY_TYPES
	f	I	cg	GOAT_FALL_DAMAGE_REDUCTION
	f	D	ch	GOAT_SCREAMING_CHANCE
	f	D	ci	UNIHORN_CHANCE
	f	I	cj	ADULT_ATTACK_DAMAGE
	f	I	ck	BABY_ATTACK_DAMAGE
	f	Lajw;	cl	DATA_IS_SCREAMING_GOAT
	f	Lajw;	cm	DATA_HAS_LEFT_HORN
	f	Lajw;	cn	DATA_HAS_RIGHT_HORN
	f	Z	co	isLoweringHead
	f	I	cp	lowerHeadTick
c	chf	net/minecraft/world/entity/animal/goat/GoatAi
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Lbtn;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
		p	0		goat
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lche;)V	a	updateActivity
		p	0		goat
	m	(Lche;Layw;)V	a	initMemories
		p	0		goat
		p	1		random
	m	(Lcuq;)Z	a	lambda$getTemptations$9
		p	0		stack
	m	(Lbtn;)Z	b	lambda$static$0
		p	0		entity
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lche;)Lavo;	b	lambda$initRamActivity$8
		p	0		goat
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	m	(Lche;)I	c	lambda$initRamActivity$7
		p	0		goat
	m	(Lbuq;)V	d	initLongJumpActivity
		p	0		brain
	m	(Lche;)Lavo;	d	lambda$initRamActivity$6
		p	0		goat
	m	(Lbuq;)V	e	initRamActivity
		p	0		brain
	m	(Lche;)Lavo;	e	lambda$initRamActivity$5
		p	0		goat
	m	(Lche;)D	f	lambda$initRamActivity$4
		p	0		goat
	m	(Lche;)Lbqc;	g	lambda$initRamActivity$3
		p	0		goat
	m	(Lche;)Lavo;	h	lambda$initLongJumpActivity$2
		p	0		goat
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY_MULTIPLIER
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	f	Lbqc;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	k	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	l	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	m	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	n	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Lbqc;	o	TIME_BETWEEN_LONG_JUMPS
	f	Lbqc;	p	TIME_BETWEEN_RAMS
	f	Lbqc;	q	TIME_BETWEEN_RAMS_SCREAMER
	f	Lcef;	r	RAM_TARGET_CONDITIONS
	f	F	s	SPEED_MULTIPLIER_WHEN_RAMMING
c	chh	net/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Layw;)V	a	randomizeAttributes
		p	1		random
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()I	af_	getInventoryColumns
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;Lcuq;)V	d	equipChest
		p	1		player
		p	2		chest
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()V	ez	dropEquipment
	m	()Lbuv$a;	s	createBaseChestedHorseAttributes
	m	()Z	t	hasChest
	m	()V	x	playChestEquipsSound
	m	(Z)V	x	setChest
		p	1		hasChest
	f	Lajw;	cc	DATA_ID_CHEST
	f	Lbsu;	cd	babyDimensions
c	chh$1	net/minecraft/world/entity/animal/horse/EntityHorseChestedAbstract$1
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lchh;	b	this$0
c	chi	net/minecraft/world/entity/animal/horse/EntityHorseAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setBred
		p	1		bred
	m	()V	B	registerGoals
	m	(Z)V	B	setEating
		p	1		eatingGrass
	m	(Z)V	C	setStanding
		p	1		angry
	m	(Z)V	D	spawnTamingParticles
		p	1		positive
	m	(F)F	H	getEatAnim
		p	1		tickDelta
	m	(F)F	I	getStandAnim
		p	1		tickDelta
	m	(F)F	J	getMouthAnim
		p	1		tickDelta
	m	()I	R	getAmbientSoundInterval
	m	()Z	a	canJump
	m	(DDDDLayw;)D	a	createOffspringAttribute
		p	0		parentBase
		p	2		otherParentBase
		p	4		min
		p	6		max
		p	8		random
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)V	a	randomizeAttributes
		p	1		random
	m	(Lbqk;)V	a	containerChanged
		p	1		sender
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsl;Lchi;)V	a	setOffspringAttributes
		p	1		other
		p	2		child
	m	(Lbsl;Lchi;Ljm;DD)V	a	setOffspringAttribute
		p	1		other
		p	2		child
		p	3		attribute
		p	4		min
		p	6		max
	m	(Lbsr;F)Z	a	handleLeashAtDistance
		p	1		leashHolder
		p	2		distance
	m	(Lbsr;Lbsr$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lcmx;)V	a	doPlayerRide
		p	1		player
	m	(Lcmx;Lcuq;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lcmx;Lexc;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcuq;Lavq;)V	a	equipSaddle
		p	1		stack
		p	2		soundCategory
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ldnm;)V	a	playGallopSound
		p	1		group
	m	(Lexc;Lbtn;)Lexc;	a	getDismountLocationInDirection
		p	1		offset
		p	2		passenger
	m	(Ljava/util/function/DoubleSupplier;)D	a	generateJumpStrength
		p	0		randomDoubleGetter
	m	(Ljava/util/function/IntUnaryOperator;)F	a	generateMaxHealth
		p	0		randomIntGetter
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()Ljava/util/UUID;	aa_	getOwnerUUID
	m	()I	af_	getInventoryColumns
	m	()V	b	handleStopJump
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(FLexc;)V	b	executeRidersJump
		p	1		strength
		p	2		movementInput
	m	(I)V	b	onPlayerJump
		p	1		strength
	m	(Lbqk;)Z	b	hasInventoryChanged
		p	1		inventory
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcmx;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lcuq;)V	b	equipBodyArmor
		p	1		player
		p	2		stack
	m	(Lcmx;Lexc;)Lexc;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Ldnm;)Z	b	isWoodSoundType
		p	1		soundGroup
	m	(Ljava/util/UUID;)V	b	setOwnerUUID
		p	1		ownerUuid
	m	(Ljava/util/function/DoubleSupplier;)D	b	generateSpeed
		p	0		randomDoubleGetter
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bB	isPushable
	m	(I)V	c	handleStartJump
		p	1		height
	m	(Lcmx;Lcuq;)Lbqr;	c	fedFood
		p	1		player
		p	2		stack
	m	()Lbtn;	cQ	getControllingPassenger
	m	(IZ)V	d	setFlag
		p	1		bitmask
		p	2		flag
	m	()Ldcn;	e	level
	m	(Lcmx;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()V	ez	dropEquipment
	m	()Z	f	isSaddleable
	m	()I	fN	getMaxSpawnClusterSize
	m	()F	fa	getSoundVolume
	m	()Z	fc	isImmobile
	m	(Lcmx;)Z	g	tameWithName
		p	1		player
	m	()V	gA	addBehaviourGoals
	m	()Z	gB	isJumping
	m	()Z	gC	isEating
	m	()Z	gD	isStanding
	m	()Z	gE	isBred
	m	()I	gF	getTemper
	m	()I	gG	getInventorySize
	m	()V	gH	createInventory
	m	()V	gI	syncSaddleToClients
	m	()Lavo;	gJ	getAngrySound
	m	()Lbuv$a;	gK	createBaseHorseAttributes
	m	()I	gL	getMaxTemper
	m	()V	gM	followMommy
	m	()Z	gN	canEatGrass
	m	()Lavo;	gO	getAmbientStandSound
	m	()V	gP	standIfPossible
	m	()V	gQ	makeMad
	m	()V	gR	playJumpSound
	m	()Z	gS	canParent
	m	()I	gT	getAmbientStandInterval
	m	()Lbqk;	gU	getBodyArmorAccess
	m	()Z	gl	canPerformRearing
	m	()Lavo;	gm	getEatingSound
	m	()D	gn	lambda$static$3
	m	()D	go	lambda$static$2
	m	()D	gu	lambda$static$1
	m	()D	gv	lambda$static$0
	m	()Z	gz	isTamed
	m	()Z	i	isSaddled
	m	(Lbtn;)Lexb;	j	getRiddenRotation
		p	1		controllingPassenger
	m	(Lbtn;)Z	k	lambda$static$6
		p	0		entity
	m	()V	l	tick
	m	()V	m_	aiStep
	m	(Lcuq;)Z	n	lambda$addBehaviourGoals$7
		p	0		stack
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Z	p_	onClimbable
	m	()V	s	eating
	m	()V	t	moveTail
	m	(I)Z	t	getFlag
		p	1		bitmask
	m	(I)V	u	setTemper
		p	1		temper
	m	(I)I	v	modifyTemper
		p	1		difference
	m	(I)I	w	getInventorySize
		p	0		columns
	m	()V	x	openMouth
	m	(I)I	x	lambda$static$5
		p	0		max
	m	(I)I	y	lambda$static$4
		p	0		max
	m	(Z)V	y	setTamed
		p	1		tame
	m	(Z)V	z	setIsJumping
		p	1		inAir
	f	Z	cA	canGallop
	f	I	cB	gallopSoundCounter
	f	Lajw;	cD	DATA_ID_FLAGS
	f	I	cE	FLAG_TAME
	f	I	cF	FLAG_SADDLE
	f	I	cG	FLAG_BRED
	f	I	cH	FLAG_EATING
	f	I	cI	FLAG_STANDING
	f	I	cJ	FLAG_OPEN_MOUTH
	f	I	cK	eatingCounter
	f	I	cL	mouthCounter
	f	I	cM	standCounter
	f	F	cN	eatAnim
	f	F	cO	eatAnimO
	f	F	cP	standAnim
	f	F	cQ	standAnimO
	f	F	cR	mouthAnim
	f	F	cS	mouthAnimO
	f	Ljava/util/UUID;	cT	owner
	f	Lbqk;	cU	bodyArmorAccess
	f	F	cc	MIN_MOVEMENT_SPEED
	f	F	cd	MAX_MOVEMENT_SPEED
	f	F	ce	MIN_JUMP_STRENGTH
	f	F	cg	MAX_JUMP_STRENGTH
	f	F	ch	MIN_HEALTH
	f	F	ci	MAX_HEALTH
	f	F	cj	BACKWARDS_MOVE_SPEED_FACTOR
	f	F	ck	SIDEWAYS_MOVE_SPEED_FACTOR
	f	Ljava/util/function/Predicate;	cl	PARENT_HORSE_SELECTOR
	f	Lcef;	cm	MOMMY_TARGETING
	f	I	cn	EQUIPMENT_SLOT_OFFSET
	f	I	co	CHEST_SLOT_OFFSET
	f	I	cp	INVENTORY_SLOT_OFFSET
	f	D	cq	BREEDING_CROSS_FACTOR
	f	I	cr	INV_SLOT_SADDLE
	f	I	cs	INV_BASE_COUNT
	f	I	ct	tailCounter
	f	I	cu	sprintCounter
	f	Z	cv	isJumping
	f	Lbra;	cw	inventory
	f	I	cx	temper
	f	F	cy	playerJumpPendingScale
	f	Z	cz	allowStandSliding
c	chi$1	net/minecraft/world/entity/animal/horse/EntityHorseAbstract$1
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcuq;)V	b	setTheItem
		p	1		stack
	m	()V	e	setChanged
	m	()Lcuq;	f	getTheItem
	f	Lchi;	b	this$0
c	chi$2	net/minecraft/world/entity/animal/horse/EntityHorseAbstract$2
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lchi;	b	this$0
c	chj	net/minecraft/world/entity/animal/horse/EntityHorseDonkey
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gJ	getAngrySound
	m	()V	gR	playJumpSound
	m	()Lavo;	gm	getEatingSound
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
c	chk	net/minecraft/world/entity/animal/horse/EntityHorse
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)V	a	randomizeAttributes
		p	1		random
	m	(Lbqk;)V	a	containerChanged
		p	1		sender
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lchr;)V	a	setVariant
		p	1		variant
	m	(Lchr;Lchm;)V	a	setVariantAndMarkings
		p	1		color
		p	2		marking
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ldnm;)V	a	playGallopSound
		p	1		group
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()Lavo;	gJ	getAngrySound
	m	()Lavo;	gm	getEatingSound
	m	(Lcuq;)Z	l	isBodyArmorItem
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	()Lchr;	s	getVariant
	m	()Lchm;	t	getMarkings
	m	()Lavo;	v	getAmbientSound
	m	()I	x	getTypeVariant
	m	(I)V	x	setTypeVariant
		p	1		variant
	f	Lajw;	cc	DATA_ID_TYPE_VARIANT
	f	Lbsu;	cd	BABY_DIMENSIONS
c	chk$a	net/minecraft/world/entity/animal/horse/EntityHorse$a
	m	(Lchr;)V	<init>	<init>
		p	1		color
	f	Lchr;	a	variant
c	chl	net/minecraft/world/entity/animal/horse/EntityLlama
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Z)V	E	setDidSpit
		p	1		spit
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lchl$d;)V	a	setVariant
		p	1		variant
	m	(Lchl;)V	a	joinCaravan
		p	1		llama
	m	(Lcmx;Lcuq;)Z	a	handleEating
		p	1		player
		p	2		item
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	af_	getInventoryColumns
	m	(Laqu;Lbsl;)Lchl;	b	getBreedOffspring
	m	(Layw;)V	b	setRandomStrength
		p	1		random
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lexc;	cM	getLeashOffset
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()Z	f	isSaddleable
	m	()Z	fc	isImmobile
	m	()Lavo;	gJ	getAngrySound
	m	()I	gL	getMaxTemper
	m	()V	gM	followMommy
	m	()Z	gN	canEatGrass
	m	()Z	gV	hasCaravanTail
	m	()Z	gW	inCaravan
	m	()Lchl;	gX	getCaravanHead
	m	()D	gj	followLeashSpeed
	m	()Z	gl	canPerformRearing
	m	()Lavo;	gm	getEatingSound
	m	()Z	gn	isTraderLlama
	m	()I	go	getStrength
	m	()Lbuv$a;	gu	createAttributes
	m	()Lchl$d;	gv	getVariant
	m	()Lcti;	gw	getSwag
	m	()Lchl;	gx	makeNewLlama
	m	()V	gy	leaveCaravan
	m	(Lbtn;)V	k	spit
		p	1		target
	m	(Lcuq;)Z	l	isBodyArmorItem
		p	1		stack
	m	(Lcuq;)Lcti;	n	getDyeColor
		p	0		color
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lcuq;)Z	p	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	v	getAmbientSound
	m	()V	x	playChestEquipsSound
	m	(I)V	x	setStrength
		p	1		strength
	f	I	cc	MAX_STRENGTH
	f	Lajw;	cd	DATA_STRENGTH_ID
	f	Lajw;	ce	DATA_VARIANT_ID
	f	Lbsu;	cg	BABY_DIMENSIONS
	f	Z	ch	didSpit
	f	Lchl;	ci	caravanHead
	f	Lchl;	cj	caravanTail
c	chl$a	net/minecraft/world/entity/animal/horse/EntityLlama$a
	m	(Lchl;)V	<init>	<init>
		p	1		llama
	m	(Lbtn;)Z	b	lambda$new$0
		p	0		wolf
	m	()D	l	getFollowDistance
c	chl$b	net/minecraft/world/entity/animal/horse/EntityLlama$b
	m	(Lchl$d;)V	<init>	<init>
		p	1		variant
	f	Lchl$d;	a	variant
c	chl$c	net/minecraft/world/entity/animal/horse/EntityLlama$c
	m	(Lchl;)V	<init>	<init>
		p	1		llama
	m	()Z	c	canContinueToUse
c	chl$d	net/minecraft/world/entity/animal/horse/EntityLlama$Variant
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lchl$d;	a	byId
		p	0		id
	m	()[Lchl$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lchl$d;	a	CREAMY
	f	Lchl$d;	b	WHITE
	f	Lchl$d;	c	BROWN
	f	Lchl$d;	d	GRAY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lchl$d;	i	$VALUES
c	chm	net/minecraft/world/entity/animal/horse/HorseStyle
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	getId
	m	(I)Lchm;	a	byId
		p	0		index
	m	()[Lchm;	b	$values
	f	Lchm;	a	NONE
	f	Lchm;	b	WHITE
	f	Lchm;	c	WHITE_FIELD
	f	Lchm;	d	WHITE_DOTS
	f	Lchm;	e	BLACK_DOTS
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	[Lchm;	h	$VALUES
c	chn	net/minecraft/world/entity/animal/horse/EntityHorseMule
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gJ	getAngrySound
	m	()V	gR	playJumpSound
	m	()Lavo;	gm	getEatingSound
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
	m	()V	x	playChestEquipsSound
c	cho	net/minecraft/world/entity/animal/horse/EntityHorseSkeleton
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)V	a	randomizeAttributes
		p	1		random
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	aQ	getSwimSound
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkSkeletonHorseSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(F)V	f	playSwimSound
		p	1		volume
	m	()F	fh	getWaterSlowDown
	m	()V	gA	addBehaviourGoals
	m	()V	gR	playJumpSound
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isTrap
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setTrap
		p	1		trapped
	f	Lchp;	cc	skeletonTrapGoal
	f	I	cd	TRAP_MAX_LIFE
	f	Lbsu;	ce	BABY_DIMENSIONS
	f	Z	cg	isTrap
	f	I	ch	trapTime
c	chp	net/minecraft/world/entity/animal/horse/PathfinderGoalHorseTrap
	m	(Lcho;)V	<init>	<init>
		p	1		skeletonHorse
	m	()V	a	tick
	m	(Lbqp;)Lchi;	a	createHorse
		p	1		localDifficulty
	m	(Lbqp;Lchi;)Lckl;	a	createSkeleton
		p	1		localDifficulty
		p	2		vehicle
	m	(Lckl;Lbsy;Lbqp;)V	a	enchant
		p	1		rider
		p	2		slot
		p	3		localDifficulty
	m	()Z	b	canUse
	f	Lcho;	a	horse
c	chq	net/minecraft/world/entity/animal/horse/EntityLlamaTrader
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lcmx;)V	a	doPlayerRide
		p	1		player
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	gZ	maybeDespawn
	m	()Z	gn	isTraderLlama
	m	()Lchl;	gx	makeNewLlama
	m	()Z	ha	canDespawn
	m	()Z	hb	isLeashedToWanderingTrader
	m	()Z	hc	isLeashedToSomethingOtherThanTheWanderingTrader
	m	()V	m_	aiStep
	m	(I)V	x	setDespawnDelay
		p	1		despawnDelay
	f	I	cc	despawnDelay
c	chq$a	net/minecraft/world/entity/animal/horse/EntityLlamaTrader$a
	m	(Lchl;)V	<init>	<init>
		p	1		llama
	m	()Z	b	canUse
	m	()V	d	start
	f	Lchl;	a	llama
	f	Lbtn;	b	ownerLastHurtBy
	f	I	c	timestamp
c	chr	net/minecraft/world/entity/animal/horse/HorseColor
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Lchr;	a	byId
		p	0		id
	m	()[Lchr;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lchr;	a	WHITE
	f	Lchr;	b	CREAMY
	f	Lchr;	c	CHESTNUT
	f	Lchr;	d	BROWN
	f	Lchr;	e	BLACK
	f	Lchr;	f	GRAY
	f	Lchr;	g	DARK_BROWN
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lchr;	l	$VALUES
c	chs	net/minecraft/world/entity/animal/horse/EntityHorseZombie
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Layw;)V	a	randomizeAttributes
		p	1		random
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkZombieHorseSpawnRules
		p	0		type
		p	1		world
		p	2		reason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()V	gA	addBehaviourGoals
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Lbsu;	cc	BABY_DIMENSIONS
c	chv	net/minecraft/world/entity/animal/sniffer/Sniffer
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	E	onPathfindingStart
	m	()V	F	onPathfindingDone
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lcfe;)V	a	spawnChildFromBreeding
		p	1		world
		p	2		other
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbsm;)Lchv;	a	emitDiggingParticles
		p	1		diggingAnimationState
	m	(Lcfe;)Z	a	canMate
		p	1		other
	m	(Lchv$a;)Lchv;	a	transitionTo
		p	1		state
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Ljd;Ljl;)Z	a	lambda$canDig$2
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ae	getMaxHeadYRot
	m	(Lchv$a;)Lchv;	b	setState
		p	1		state
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcuq;)Lavo;	d	getEatingSound
		p	1		stack
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()V	ff	jumpFromGround
	m	()Ljava/util/stream/Stream;	gA	getExploredPositions
	m	()V	gB	playSearchingSound
	m	()Z	gk	canSniff
	m	()Z	gl	canPlayDiggingSound
	m	()Ljava/util/Optional;	gm	calculateDigPosition
	m	()Z	gn	canDig
	m	()Ljd;	go	getHeadBlock
	m	()Lexc;	gu	getHeadPosition
	m	()Lchv$a;	gv	getState
	m	()V	gw	resetAnimations
	m	()Lchv;	gx	onScentingStart
	m	()Lchv;	gy	onDiggingStart
	m	()V	gz	dropSeed
	m	(Ljd;)Z	h	canDig
		p	1		pos
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	(Ljd;)Lchv;	i	storeExploredPosition
		p	1		pos
	m	(Ljd;)Z	j	lambda$calculateDigPosition$1
		p	1		pos
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isSearching
	m	(I)Lexc;	t	lambda$calculateDigPosition$0
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isTempted
	m	(Z)Lchv;	x	onDiggingComplete
		p	1		explored
	f	Lbsm;	cc	feelingHappyAnimationState
	f	Lbsm;	cd	scentingAnimationState
	f	Lbsm;	ce	sniffingAnimationState
	f	Lbsm;	cg	diggingAnimationState
	f	Lbsm;	ch	risingAnimationState
	f	I	ci	DIGGING_PARTICLES_DELAY_TICKS
	f	I	cj	DIGGING_PARTICLES_DURATION_TICKS
	f	I	ck	DIGGING_PARTICLES_AMOUNT
	f	I	cl	DIGGING_DROP_SEED_OFFSET_TICKS
	f	I	cm	SNIFFER_BABY_AGE_TICKS
	f	F	cn	DIGGING_BB_HEIGHT_OFFSET
	f	Lbsu;	co	DIGGING_DIMENSIONS
	f	Lajw;	cp	DATA_STATE
	f	Lajw;	cq	DATA_DROP_SEED_AT_TICK
c	chv$a	net/minecraft/world/entity/animal/sniffer/Sniffer$State
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	id
	m	()[Lchv$a;	b	$values
	f	Lchv$a;	a	IDLING
	f	Lchv$a;	b	FEELING_HAPPY
	f	Lchv$a;	c	SCENTING
	f	Lchv$a;	d	SNIFFING
	f	Lchv$a;	e	SEARCHING
	f	Lchv$a;	f	DIGGING
	f	Lchv$a;	g	RISING
	f	Ljava/util/function/IntFunction;	h	BY_ID
	f	Lyx;	i	STREAM_CODEC
	f	I	j	id
	f	[Lchv$a;	k	$VALUES
c	chw	net/minecraft/world/entity/animal/sniffer/SnifferAi
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Lbtn;)Ljava/lang/Double;	a	lambda$initIdleActivity$2
		p	0		sniffer
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lchv;)V	a	updateActivity
		p	0		sniffer
	m	(Lcuq;)Z	a	lambda$getTemptations$0
		p	0		stack
	m	(Lbtn;)Ljava/lang/Float;	b	lambda$initIdleActivity$1
		p	0		sniffer
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lchv;)Lchv;	b	resetSniffing
		p	0		sniffer
	m	(Lbuq;)V	c	initSniffingActivity
		p	0		brain
	m	(Lbuq;)V	d	initDigActivity
		p	0		brain
	m	(Lbuq;)V	e	initIdleActivity
		p	0		brain
	f	Ljava/util/List;	a	SENSOR_TYPES
	f	Ljava/util/List;	b	MEMORY_TYPES
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_LOOK_DISTANCE
	f	I	e	SNIFFING_COOLDOWN_TICKS
	f	F	f	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	g	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	h	SPEED_MULTIPLIER_WHEN_SNIFFING
	f	F	i	SPEED_MULTIPLIER_WHEN_TEMPTED
c	chw$1	net/minecraft/world/entity/animal/sniffer/SnifferAi$1
	m	(F)V	<init>	<init>
		p	1		speed
	m	(Laqu;Lchv;J)V	a	start
	m	(Laqu;Lbtw;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$2	net/minecraft/world/entity/animal/sniffer/SnifferAi$2
	m	(Lbsx;)V	<init>	<init>
		p	1		targetType
	m	(Laqu;Lcfe;J)V	a	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$3	net/minecraft/world/entity/animal/sniffer/SnifferAi$3
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		speed
		p	2		stopDistanceGetter
	m	(Laqu;Lbtw;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$a	net/minecraft/world/entity/animal/sniffer/SnifferAi$a
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$b	net/minecraft/world/entity/animal/sniffer/SnifferAi$b
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$c	net/minecraft/world/entity/animal/sniffer/SnifferAi$c
	m	(I)V	<init>	<init>
		p	1		runTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$d	net/minecraft/world/entity/animal/sniffer/SnifferAi$d
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$e	net/minecraft/world/entity/animal/sniffer/SnifferAi$e
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chw$f	net/minecraft/world/entity/animal/sniffer/SnifferAi$f
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lchv;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lchv;Ljd;)V	a	lambda$stop$0
		p	1		pos
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lchv;J)V	b	start
	m	(Laqu;Lchv;J)V	c	stop
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	chy	net/minecraft/world/entity/boss/EntityComplexPart
	m	(Lcia;Ljava/lang/String;FF)V	<init>	<init>
		p	1		owner
		p	2		name
		p	3		width
		p	4		height
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbua;)Lbsu;	a	getDimensions
		p	1		pose
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Lcuq;	dB	getPickResult
	m	()Z	dM	shouldBeSaved
	m	(Lbsr;)Z	t	is
		p	1		entity
	f	Lcia;	b	parentMob
	f	Ljava/lang/String;	c	name
	f	Lbsu;	d	size
c	chz	net/minecraft/world/entity/boss/enderdragon/EntityEnderCrystal
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;)V	a	onDestroyedBy
		p	1		source
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ljd;)V	a	setBeamTarget
		p	1		beamTarget
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowBottom
		p	1		showBottom
	m	()V	ap	kill
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Lbsr$b;	bc	getMovementEmission
	m	()Lcuq;	dB	getPickResult
	m	()V	l	tick
	m	()Ljd;	p	getBeamTarget
	m	()Z	s	showsBottom
	f	I	b	time
	f	Lajw;	c	DATA_BEAM_TARGET
	f	Lajw;	d	DATA_SHOW_BOTTOM
c	cia	net/minecraft/world/entity/boss/enderdragon/EntityEnderDragon
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	2		world
	m	(F)Lexc;	H	getHeadLookVector
		p	1		tickDelta
	m	(IF)[D	a	getLatencyPos
		p	1		segmentNumber
		p	2		tickDelta
	m	(IILepq;)Leps;	a	findPath
		p	1		from
		p	2		to
		p	3		pathNode
	m	(I[D[D)F	a	getHeadPartYOffset
		p	1		segmentOffset
		p	2		segment1
		p	3		segment2
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Ljava/util/List;)V	a	knockBack
		p	1		world
		p	2		entities
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lchy;DDD)V	a	tickPart
		p	1		enderDragonPart
		p	2		dx
		p	4		dy
		p	6		dz
	m	(Lchy;Lbrk;F)Z	a	hurt
		p	1		part
		p	2		source
		p	3		amount
	m	(Lchz;Ljd;Lbrk;)V	a	onCrystalDestroyed
		p	1		endCrystal
		p	2		pos
		p	3		source
	m	(Ldxb;)V	a	setDragonFight
		p	1		fight
	m	(Lepq;Lepq;)Leps;	a	reconstructPath
		p	1		unused
		p	2		node
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aV	onFlap
	m	()Z	aW	isFlapping
	m	()V	ap	kill
	m	(F)F	b	sanitizeScale
		p	1		scale
	m	(Lbrz;Lbsr;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Lewx;)Z	b	checkWalls
		p	1		box
	m	(Ljava/util/List;)V	b	hurt
		p	1		entities
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	(Lbtn;)Z	c	canAttack
		p	1		target
	m	(Ljd;)V	c	setFightOrigin
		p	1		fightOrigin
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	dA	checkDespawn
	m	()Lavq;	de	getSoundSource
	m	()V	ed	tickDeath
	m	()F	fa	getSoundVolume
	m	(Lbrk;F)Z	g	reallyHurt
		p	1		source
		p	2		amount
	m	()[Lchy;	gg	getSubEntities
	m	()Lcir;	gh	getPhaseManager
	m	()Ldxb;	gi	getDragonFight
	m	()F	gj	getHeadYOffset
	m	()V	gk	checkCrystals
	m	(D)F	i	rotWrap
		p	1		yawDegrees
	m	()V	m_	aiStep
	m	(Lbsr;)Z	o	canRide
		p	1		entity
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
	m	(DDD)I	q	findClosestNode
		p	1		x
		p	3		y
		p	5		z
	m	()Ljd;	s	getFightOrigin
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	()I	x	findClosestNode
	f	Lajw;	b	DATA_PHASE
	f	F	cA	sittingDamageReceived
	f	[Lepq;	cB	nodes
	f	[I	cD	nodeAdjacency
	f	Lepo;	cE	openSet
	f	[[D	c	positions
	f	F	cb	oFlapTime
	f	F	cc	flapTime
	f	Z	cd	inWall
	f	I	ce	dragonDeathTime
	f	F	cf	yRotA
	f	Lchz;	cg	nearestCrystal
	f	Lorg/slf4j/Logger;	ch	LOGGER
	f	Lcef;	ci	CRYSTAL_DESTROY_TARGETING
	f	I	cj	GROWL_INTERVAL_MIN
	f	I	ck	GROWL_INTERVAL_MAX
	f	F	cl	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	cm	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	cn	DRAGON_PHASE_KEY
	f	[Lchy;	co	subEntities
	f	Lchy;	cp	neck
	f	Lchy;	cq	body
	f	Lchy;	cr	tail1
	f	Lchy;	cs	tail2
	f	Lchy;	ct	tail3
	f	Lchy;	cu	wing1
	f	Lchy;	cv	wing2
	f	Ldxb;	cw	dragonFight
	f	Ljd;	cx	fightOrigin
	f	Lcir;	cy	phaseManager
	f	I	cz	growlTime
	f	I	d	posPointer
	f	Lchy;	e	head
c	cic	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonController
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbrk;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lchz;Ljd;Lbrk;Lcmx;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	f	Lcia;	a	dragon
c	cid	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonControllerLanded
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	(Lbrk;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
c	cie	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerCharge
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	(Lexc;)V	a	setTarget
		p	1		pathTarget
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Lexc;	d	targetLocation
	f	I	e	timeSinceCharge
c	cif	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerDying
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	f	Lexc;	b	targetLocation
	f	I	c	time
c	cig	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHold
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	(Lchz;Ljd;Lbrk;Lcmx;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	(Lcmx;)V	a	strafePlayer
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lcef;	b	NEW_TARGET_TARGETING
	f	Leps;	c	currentPath
	f	Lexc;	d	targetLocation
	f	Z	e	clockwise
c	cih	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerHover
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()Z	a	isSitting
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	f	Lexc;	b	targetLocation
c	cii	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandingFly
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lcef;	b	NEAR_EGG_TARGETING
	f	Leps;	c	currentPath
	f	Lexc;	d	targetLocation
c	cij	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLanding
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lciq;	i	getPhase
	f	Lexc;	b	targetLocation
c	cik	net/minecraft/world/entity/boss/enderdragon/phases/IDragonController
	m	()Z	a	isSitting
	m	(Lbrk;F)F	a	onHurt
		p	1		damageSource
		p	2		damage
	m	(Lchz;Ljd;Lbrk;Lcmx;)V	a	onCrystalDestroyed
		p	1		crystal
		p	2		pos
		p	3		source
		p	4		player
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()F	f	getFlySpeed
	m	()Lexc;	g	getFlyTargetLocation
	m	()F	h	getTurnSpeed
	m	()Lciq;	i	getPhase
c	cil	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedAttack
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lciq;	i	getPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
c	cim	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedFlame
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	b	doClientTick
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()V	e	end
	m	()Lciq;	i	getPhase
	m	()V	j	resetFlameCount
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Lbsn;	g	flame
c	cin	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerLandedSearch
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	(Lcia;Lbtn;)Z	a	lambda$new$0
		p	1		player
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lciq;	i	getPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lcef;	f	CHARGE_TARGETING
	f	Lcef;	g	scanTargeting
	f	I	h	scanningTime
c	cio	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerStrafe
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	(Lbtn;)V	a	setTarget
		p	1		targetEntity
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Leps;	e	currentPath
	f	Lexc;	f	targetLocation
	f	Lbtn;	g	attackTarget
	f	Z	h	holdingPatternClockwise
c	cip	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerFly
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()V	c	doServerTick
	m	()V	d	begin
	m	()Lexc;	g	getFlyTargetLocation
	m	()Lciq;	i	getPhase
	m	()V	j	findNewTarget
	m	()V	k	navigateToNextPathNode
	f	Z	b	firstTick
	f	Leps;	c	currentPath
	f	Lexc;	d	targetLocation
c	ciq	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerPhase
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		phaseClass
		p	3		name
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	(I)Lciq;	a	getById
		p	0		id
	m	(Lcia;)Lcik;	a	createInstance
		p	1		dragon
	m	(Ljava/lang/Class;Ljava/lang/String;)Lciq;	a	create
		p	0		phaseClass
		p	1		name
	m	()I	b	getId
	m	()I	c	getCount
	f	Lciq;	a	HOLDING_PATTERN
	f	Lciq;	b	STRAFE_PLAYER
	f	Lciq;	c	LANDING_APPROACH
	f	Lciq;	d	LANDING
	f	Lciq;	e	TAKEOFF
	f	Lciq;	f	SITTING_FLAMING
	f	Lciq;	g	SITTING_SCANNING
	f	Lciq;	h	SITTING_ATTACKING
	f	Lciq;	i	CHARGING_PLAYER
	f	Lciq;	j	DYING
	f	Lciq;	k	HOVERING
	f	[Lciq;	l	phases
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
c	cir	net/minecraft/world/entity/boss/enderdragon/phases/DragonControllerManager
	m	(Lcia;)V	<init>	<init>
		p	1		dragon
	m	()Lcik;	a	getCurrentPhase
	m	(Lciq;)V	a	setPhase
		p	1		type
	m	(Lciq;)Lcik;	b	getPhase
		p	1		type
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcia;	b	dragon
	f	[Lcik;	c	phases
	f	Lcik;	d	currentPhase
c	ciu	net/minecraft/world/entity/boss/wither/EntityWither
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	a	isPowered
	m	(FFF)F	a	rotlerp
		p	1		prevAngle
		p	2		desiredAngle
		p	3		maxDifference
	m	(IDDDZ)V	a	performRangedAttack
		p	1		headIndex
		p	2		targetX
		p	4		targetY
		p	6		targetZ
		p	8		charged
	m	(II)V	a	setAlternativeTarget
		p	1		headIndex
		p	2		id
	m	(ILbtn;)V	a	performRangedAttack
		p	1		headIndex
		p	2		target
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Ldtc;Lexc;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(I)F	b	getHeadYRot
		p	1		headIndex
	m	(Lbrz;Lbsr;)Z	b	addEffect
		p	1		effect
		p	2		source
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lwz;)V	b	setCustomName
		p	1		name
	m	(I)F	c	getHeadXRot
		p	1		headIndex
	m	(Lbrz;)Z	c	canBeAffected
		p	1		effect
	m	(Ldtc;)Z	c	canDestroy
		p	0		block
	m	(Laqv;)V	d	startSeenByPlayer
		p	1		player
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	dA	checkDespawn
	m	(Laqv;)V	e	stopSeenByPlayer
		p	1		player
	m	(Lbtn;)Z	j	lambda$static$0
		p	0		entity
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(Lbsr;)Z	o	canRide
		p	1		entity
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
	m	()V	s	makeInvulnerable
	m	(I)V	s	setInvulnerableTicks
		p	1		ticks
	m	()Lbuv$a;	t	createAttributes
	m	(I)I	t	getAlternativeTarget
		p	1		headIndex
	m	(I)D	u	getHeadX
		p	1		headIndex
	m	()Lavo;	v	getAmbientSound
	m	(I)D	v	getHeadY
		p	1		headIndex
	m	(I)D	w	getHeadZ
		p	1		headIndex
	m	()I	x	getInvulnerableTicks
	f	Lajw;	b	DATA_TARGET_A
	f	Lajw;	c	DATA_TARGET_B
	f	Lajw;	cc	DATA_ID_INV
	f	I	cd	INVULNERABLE_TICKS
	f	[F	ce	xRotHeads
	f	[F	cf	yRotHeads
	f	[F	cg	xRotOHeads
	f	[F	ch	yRotOHeads
	f	[I	ci	nextHeadUpdate
	f	[I	cj	idleHeadUpdates
	f	I	ck	destroyBlocksTick
	f	Laqr;	cl	bossEvent
	f	Ljava/util/function/Predicate;	cm	LIVING_ENTITY_SELECTOR
	f	Lcef;	cn	TARGETING_CONDITIONS
	f	Lajw;	d	DATA_TARGET_C
	f	Ljava/util/List;	e	DATA_TARGETS
c	ciu$a	net/minecraft/world/entity/boss/wither/EntityWither$a
	m	()Z	b	canUse
	f	Lciu;	a	this$0
c	ciw	net/minecraft/world/entity/decoration/EntityArmorStand
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Lke;	A	getHeadPose
	m	()Lke;	B	getBodyPose
	m	()Lke;	C	getLeftArmPose
	m	()Lke;	D	getRightArmPose
	m	()Lke;	E	getLeftLegPose
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	()Lke;	F	getRightLegPose
	m	()Z	H	hasPhysics
	m	()Lub;	I	writePose
	m	()V	J	showBreakingParticles
	m	()V	K	updateInvisibilityStatus
	m	()V	L	playBrokenSound
	m	(BIZ)B	a	setBit
		p	1		value
		p	2		bitField
		p	3		set
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;F)V	a	causeDamage
		p	1		world
		p	2		damageSource
		p	3		amount
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsy;)Lcuq;	a	getItemBySlot
		p	1		slot
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lcmx;Lbsy;Lcuq;Lbqq;)Z	a	swapItem
		p	1		player
		p	2		slot
		p	3		stack
		p	4		hand
	m	(Lcmx;Lexc;Lbqq;)Lbqr;	a	interactAt
		p	1		player
		p	2		hitPos
		p	3		hand
	m	(Ldco;)Z	a	ignoreExplosion
		p	1		explosion
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Lke;)V	a	setHeadPose
		p	1		angle
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setShowArms
		p	1		showArms
	m	()V	ap	kill
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Laqu;Lbrk;)V	b	brokenByPlayer
		p	1		world
		p	2		damageSource
	m	(Lbsr;)Z	b	lambda$static$0
		p	0		entity
	m	(Lexc;)Lbsy;	b	getClickedSlot
		p	1		hitPos
	m	(Lke;)V	b	setBodyPose
		p	1		angle
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setNoBasePlate
		p	1		hideBasePlate
	m	()Z	bA	isPickable
	m	()Z	bB	isPushable
	m	(Laqu;Lbrk;)V	c	brokenByAnything
		p	1		world
		p	2		damageSource
	m	(Lke;)V	c	setLeftArmPose
		p	1		angle
	m	(Lub;)V	c	readPose
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lke;)V	d	setRightArmPose
		p	1		angle
	m	()Lcuq;	dB	getPickResult
	m	()Z	db	isEffectiveAi
	m	(Lbsy;)Z	e	isDisabled
		p	1		slot
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lke;)V	e	setLeftLegPose
		p	1		angle
	m	()Lbtn$a;	eH	getFallSounds
	m	()Ljava/lang/Iterable;	eV	getArmorSlots
	m	()Ljava/lang/Iterable;	eW	getHandSlots
	m	()Z	eq	canBeSeenByAnyone
	m	(FF)F	f	tickHeadTurn
		p	1		bodyRotation
		p	2		headRotation
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	(Lke;)V	f	setRightLegPose
		p	1		angle
	m	()Z	fC	isAffectedByPotions
	m	()Z	fD	attackable
	m	()Lbtg;	fq	getMainArm
	m	()V	i_	refreshDimensions
	m	()Lepj;	j_	getPistonPushReaction
	m	(Z)V	k	setInvisible
		p	1		invisible
	m	()V	l	tick
	m	(F)Lexc;	l	getLightProbePosition
		p	1		tickDelta
	m	()Lavo;	n_	getDeathSound
	m	(F)V	o	setYHeadRot
		p	1		headYaw
	m	()Z	o_	isBaby
	m	(F)V	p	setYBodyRot
		p	1		bodyYaw
	m	()V	r	pushEntities
	m	()Z	r_	isIgnoringBlockTriggers
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isSmall
	m	(Lbsr;)Z	u	skipAttackInteraction
		p	1		attacker
	m	(Z)V	u	setSmall
		p	1		small
	m	()Z	v	isShowArms
	m	(Z)V	v	setMarker
		p	1		marker
	m	(Z)Lbsu;	w	getDimensionsMarker
		p	1		marker
	m	()Z	x	isNoBasePlate
	m	()Z	z	isMarker
	f	Lajw;	bH	DATA_CLIENT_FLAGS
	f	I	b	WOBBLE_TIME
	f	Lajw;	bI	DATA_HEAD_POSE
	f	Lajw;	bJ	DATA_BODY_POSE
	f	Lajw;	bK	DATA_LEFT_ARM_POSE
	f	Lajw;	bL	DATA_RIGHT_ARM_POSE
	f	Lajw;	bM	DATA_LEFT_LEG_POSE
	f	Lajw;	bN	DATA_RIGHT_LEG_POSE
	f	J	bO	lastHit
	f	Z	bP	ENABLE_ARMS
	f	Lke;	bQ	DEFAULT_HEAD_POSE
	f	Lke;	bR	DEFAULT_BODY_POSE
	f	Lke;	bS	DEFAULT_LEFT_ARM_POSE
	f	Lke;	bT	DEFAULT_RIGHT_ARM_POSE
	f	Lke;	bU	DEFAULT_LEFT_LEG_POSE
	f	Lke;	bV	DEFAULT_RIGHT_LEG_POSE
	f	Lbsu;	bW	MARKER_DIMENSIONS
	f	Lbsu;	bX	BABY_DIMENSIONS
	f	D	bY	FEET_OFFSET
	f	D	bZ	CHEST_OFFSET
	f	I	c	DISABLE_TAKING_OFFSET
	f	D	ca	LEGS_OFFSET
	f	D	cb	HEAD_OFFSET
	f	Ljava/util/function/Predicate;	cc	RIDABLE_MINECARTS
	f	Ljv;	cd	handItems
	f	Ljv;	ce	armorItems
	f	Z	cf	invisible
	f	I	cg	disabledSlots
	f	Lke;	ch	headPose
	f	Lke;	ci	bodyPose
	f	Lke;	cj	leftArmPose
	f	Lke;	ck	rightArmPose
	f	Lke;	cl	leftLegPose
	f	Lke;	cm	rightLegPose
	f	I	d	DISABLE_PUTTING_OFFSET
	f	I	e	CLIENT_FLAG_SMALL
	f	I	f	CLIENT_FLAG_SHOW_ARMS
	f	I	g	CLIENT_FLAG_NO_BASEPLATE
	f	I	h	CLIENT_FLAG_MARKER
c	ciw$1	net/minecraft/world/entity/decoration/EntityArmorStand$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot$Type
c	cix	net/minecraft/world/entity/decoration/BlockAttachedEntity
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;Ljd;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		attachedBlockPos
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(DDD)V	a_	setPos
		p	1		x
		p	3		y
		p	5		z
	m	(Lbsr;)V	b	dropItem
		p	1		breaker
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Z	bC	repositionEntityAfterLoad
	m	()V	i_	refreshDimensions
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	l	tick
	m	()V	p	recalculateBoundingBox
	m	()Z	s	survives
	m	()Ljd;	t	getPos
	m	(Lbsr;)Z	u	skipAttackInteraction
		p	1		attacker
	f	Ljd;	b	pos
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	checkInterval
c	ciy	net/minecraft/world/entity/decoration/GlowItemFrame
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Ljd;Lji;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Lcuq;	A	getFrameItemStack
	m	()Lavo;	v	getRemoveItemSound
	m	()Lavo;	w	getBreakSound
	m	()Lavo;	x	getPlaceSound
	m	()Lavo;	y	getAddItemSound
	m	()Lavo;	z	getRotateItemSound
c	ciz	net/minecraft/world/entity/decoration/EntityHanging
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;Ljd;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
	m	()Lewx;	B	calculateSupportBox
	m	()V	C	playPlacementSound
	m	(Lcuq;F)Lcjh;	a	spawnAtLocation
		p	1		stack
		p	2		yOffset
	m	(Ldkv;)F	a	mirror
		p	1		mirror
	m	(Ldmm;)F	a	rotate
		p	1		rotation
	m	(Ljd;)Z	a	lambda$survives$1
		p	1		pos
	m	(Ljd;Lji;)Lewx;	a	calculateBoundingBox
		p	1		pos
		p	2		side
	m	(Lji;)V	a	setDirection
		p	1		facing
	m	(Lbsr;)Z	c	lambda$static$0
		p	0		entity
	m	()Lji;	cH	getDirection
	m	()V	p	recalculateBoundingBox
	m	()Z	s	survives
	f	Ljava/util/function/Predicate;	c	HANGING_ENTITY
	f	Lji;	d	direction
c	ciz$1	net/minecraft/world/entity/decoration/EntityHanging$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
c	cja	net/minecraft/world/entity/decoration/EntityItemFrame
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;Ljd;Lji;)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		pos
		p	4		facing
	m	(Ldcw;Ljd;Lji;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
	m	()Lcuq;	A	getFrameItemStack
	m	()V	C	playPlacementSound
	m	()Lcuq;	D	getItem
	m	()Z	E	hasFramedMap
	m	()I	F	getRotation
	m	()I	H	getAnalogOutput
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(IZ)V	a	setRotation
		p	1		value
		p	2		updateComparators
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcuq;)Leqr;	a	getFramedMapId
	m	(Lcuq;Z)V	a	setItem
		p	1		value
		p	2		update
	m	(Ljd;Lji;)Lewx;	a	calculateBoundingBox
		p	1		pos
		p	2		side
	m	(Lji;)V	a	setDirection
		p	1		facing
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()V	ap	kill
	m	(I)V	b	setRotation
		p	1		value
	m	(Lbsr;)V	b	dropItem
		p	1		breaker
	m	(Lbsr;Z)V	b	dropItem
		p	1		entity
		p	2		alwaysDrop
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcuq;)V	c	setItem
		p	1		stack
	m	(Lcuq;)V	d	removeFramedMap
		p	1		stack
	m	()Lcuq;	dB	getPickResult
	m	()F	dF	getVisualRotationYInDegrees
	m	(Lcuq;)V	e	onItemChanged
		p	1		stack
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()Z	s	survives
	m	()Lavo;	v	getRemoveItemSound
	m	()Lavo;	w	getBreakSound
	m	()Lavo;	x	getPlaceSound
	m	()Lavo;	y	getAddItemSound
	m	()Lavo;	z	getRotateItemSound
	f	I	e	NUM_ROTATIONS
	f	Lajw;	f	DATA_ITEM
	f	Lajw;	g	DATA_ROTATION
	f	F	h	DEPTH
	f	F	i	WIDTH
	f	F	j	HEIGHT
	f	F	k	dropChance
	f	Z	l	fixed
c	cjb	net/minecraft/world/entity/decoration/EntityLeash
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Ljd;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcmx;Lbtk;)Z	a	lambda$interact$0
		p	2		entity
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbsr;)V	b	dropItem
		p	1		breaker
	m	(Ldcw;Ljd;)Lcjb;	b	getOrCreateKnot
		p	0		world
		p	1		pos
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcuq;	dB	getPickResult
	m	()V	p	recalculateBoundingBox
	m	()Z	s	survives
	m	(F)Lexc;	s	getRopeHoldPosition
		p	1		delta
	m	()V	v	playPlacementSound
	f	D	c	OFFSET_Y
c	cjc	net/minecraft/world/entity/decoration/EntityPainting
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Ljd;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Lji;Ljm;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		direction
		p	4		variant
	m	()V	C	playPlacementSound
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(ILjm;)Z	a	lambda$create$1
		p	1		variant
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lcjc;Ljm;)Z	a	lambda$create$0
		p	1		variant
	m	(Ldcw;Ljd;Lji;)Ljava/util/Optional;	a	create
		p	0		world
		p	1		pos
		p	2		facing
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljd;Lji;)Lewx;	a	calculateBoundingBox
		p	1		pos
		p	2		side
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$2
	m	(DDDFF)V	b	moveTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
	m	(I)D	b	offsetForPaintingSize
		p	1		length
	m	(Lbsr;)V	b	dropItem
		p	1		breaker
	m	(Ljm;)V	b	setVariant
		p	1		variant
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ljm;)I	c	variantArea
		p	0		variant
	m	()Ljava/lang/Object;	d	getVariant
	m	()Lcuq;	dB	getPickResult
	m	()Lexc;	dn	trackingPosition
	m	()Ljm;	v	getVariant
	f	Lcom/mojang/serialization/MapCodec;	e	VARIANT_MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	f	VARIANT_CODEC
	f	F	g	DEPTH
	f	Lajw;	h	DATA_PAINTING_VARIANT_ID
c	cjd	net/minecraft/world/entity/decoration/PaintingVariant
	m	(IILakr;)V	<init>	<init>
		p	1		width
		p	2		height
	m	()I	a	area
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	width
	m	()I	c	height
	m	()Lakr;	d	assetId
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	I	e	width
	f	I	f	height
	f	Lakr;	g	assetId
c	cje	net/minecraft/world/entity/decoration/PaintingVariants
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;II)V	a	register
		p	0		registry
		p	1		key
		p	2		width
		p	3		height
	f	Lakq;	A	EARTH
	f	Lakq;	B	WIND
	f	Lakq;	C	WATER
	f	Lakq;	D	FIRE
	f	Lakq;	E	BAROQUE
	f	Lakq;	F	HUMBLE
	f	Lakq;	G	MEDITATIVE
	f	Lakq;	H	PRAIRIE_RIDE
	f	Lakq;	I	UNPACKED
	f	Lakq;	J	BACKYARD
	f	Lakq;	K	BOUQUET
	f	Lakq;	L	CAVEBIRD
	f	Lakq;	M	CHANGING
	f	Lakq;	N	COTAN
	f	Lakq;	O	ENDBOSS
	f	Lakq;	P	FERN
	f	Lakq;	Q	FINDING
	f	Lakq;	R	LOWMIST
	f	Lakq;	S	ORB
	f	Lakq;	T	OWLEMONS
	f	Lakq;	U	PASSAGE
	f	Lakq;	V	POND
	f	Lakq;	W	SUNFLOWERS
	f	Lakq;	X	TIDES
	f	Lakq;	a	KEBAB
	f	Lakq;	b	AZTEC
	f	Lakq;	c	ALBAN
	f	Lakq;	d	AZTEC2
	f	Lakq;	e	BOMB
	f	Lakq;	f	PLANT
	f	Lakq;	g	WASTELAND
	f	Lakq;	h	POOL
	f	Lakq;	i	COURBET
	f	Lakq;	j	SEA
	f	Lakq;	k	SUNSET
	f	Lakq;	l	CREEBET
	f	Lakq;	m	WANDERER
	f	Lakq;	n	GRAHAM
	f	Lakq;	o	MATCH
	f	Lakq;	p	BUST
	f	Lakq;	q	STAGE
	f	Lakq;	r	VOID
	f	Lakq;	s	SKULL_AND_ROSES
	f	Lakq;	t	WITHER
	f	Lakq;	u	FIGHTERS
	f	Lakq;	v	POINTER
	f	Lakq;	w	PIGSCENE
	f	Lakq;	x	BURNING_SKULL
	f	Lakq;	y	SKELETON
	f	Lakq;	z	DONKEY_KONG
c	cjg	net/minecraft/world/entity/item/EntityFallingBlock
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLdtc;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		block
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbrk;FLbsr;)V	a	lambda$causeFallDamage$0
		p	2		entity
	m	(Ldcw;Ljd;Ldtc;)Lcjg;	a	fall
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldfy;Ljd;)V	a	callOnBrokenAfterFall
		p	1		block
		p	2		pos
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Ljd;)V	a	setStartPos
		p	1		pos
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()D	aZ	getDefaultGravity
	m	(FI)V	b	setHurtsEntities
		p	1		fallHurtAmount
		p	2		fallHurtMax
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Lbsr$b;	bc	getMovementEmission
	m	()Z	cP	onlyOpCanSetNbt
	m	()Lwz;	cs	getTypeName
	m	()Z	cu	isAttackable
	m	()Z	cy	displayFireAnimation
	m	()V	l	tick
	m	()Ljd;	p	getStartPos
	m	()V	s	disableDrop
	m	()Ldtc;	t	getBlockState
	f	I	b	time
	f	Z	c	dropItem
	f	Lub;	d	blockData
	f	Z	e	forceTickAfterTeleportToDuplicate
	f	Lajw;	f	DATA_START_POS
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ldtc;	h	blockState
	f	Z	i	cancelDrop
	f	Z	j	hurtEntities
	f	I	k	fallDamageMax
	f	F	l	fallDamagePerDistance
c	cjh	net/minecraft/world/entity/item/EntityItem
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcjh;)V	<init>	<init>
		p	1		entity
	m	(Ldcw;DDDLcuq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Ldcw;DDDLcuq;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	()V	A	setExtendedLifetime
	m	()V	B	makeFakeItem
	m	()Lcjh;	C	copy
	m	()V	D	setUnderwaterMovement
	m	()V	E	setUnderLavaMovement
	m	()V	F	mergeWithNeighbours
	m	()Z	H	isMergable
	m	(F)F	a	getSpin
		p	1		tickDelta
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcjh;)V	a	tryToMerge
		p	1		other
	m	(Lcjh;Lcuq;Lcjh;Lcuq;)V	a	merge
		p	0		targetEntity
		p	1		targetStack
		p	2		sourceEntity
		p	3		sourceStack
	m	(Lcjh;Lcuq;Lcuq;)V	a	merge
		p	0		targetEntity
		p	1		stack1
		p	2		stack2
	m	(Lcuq;)V	a	setItem
		p	1		stack
	m	(Lcuq;Lcuq;)Z	a	areMergable
		p	0		stack1
		p	1		stack2
	m	(Lcuq;Lcuq;I)Lcuq;	a	merge
		p	0		stack1
		p	1		stack2
		p	2		maxCount
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ljd;	aL	getBlockPosBelowThatAffectsMyMovement
	m	()D	aZ	getDefaultGravity
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()Lwz;	ah	getName
	m	(I)V	b	setPickUpDelay
		p	1		pickupDelay
	m	(Lbsr;)V	b	setThrower
		p	1		thrower
	m	(Lcjh;)Z	b	lambda$mergeWithNeighbours$0
		p	1		otherItemEntity
	m	(Ljava/util/UUID;)V	b	setTarget
		p	1		owner
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	()Lbsr$b;	bc	getMovementEmission
	m	()Z	bd	dampensVibrations
	m	()Z	be	fireImmune
	m	()Z	cu	isAttackable
	m	()F	dF	getVisualRotationYInDegrees
	m	()Lavq;	de	getSoundSource
	m	()V	l	tick
	m	()Lcuq;	p	getItem
	m	()Lbsr;	s	getOwner
	m	()I	t	getAge
	m	()V	v	setDefaultPickUpDelay
	m	()V	w	setNoPickUpDelay
	m	(Lbsr;)V	w	restoreFrom
		p	1		original
	m	()V	x	setNeverPickUp
	m	()Z	y	hasPickUpDelay
	m	()V	z	setUnlimitedLifetime
	f	F	b	EYE_HEIGHT
	f	F	c	bobOffs
	f	Lajw;	d	DATA_ITEM
	f	F	e	FLOAT_HEIGHT
	f	I	f	LIFETIME
	f	I	g	INFINITE_PICKUP_DELAY
	f	I	h	INFINITE_LIFETIME
	f	I	i	age
	f	I	j	pickupDelay
	f	I	k	health
	f	Ljava/util/UUID;	l	thrower
	f	Lbsr;	m	cachedThrower
	f	Ljava/util/UUID;	n	target
c	cji	net/minecraft/world/entity/item/EntityTNTPrimed
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLbtn;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		igniter
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setUsedPortal
		p	1		teleported
	m	()D	aZ	getDefaultGravity
	m	(I)V	b	setFuse
		p	1		fuse
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Ldtc;)V	c	setBlockState
		p	1		state
	m	()V	l	tick
	m	()Lbtn;	p	getOwner
	m	()Lbsr;	s	getOwner
	m	()I	t	getFuse
	m	()Ldtc;	v	getBlockState
	m	()V	w	explode
	m	(Lbsr;)V	w	restoreFrom
		p	1		original
	f	Ljava/lang/String;	b	TAG_FUSE
	f	Lajw;	c	DATA_FUSE_ID
	f	Lajw;	d	DATA_BLOCK_STATE_ID
	f	I	e	DEFAULT_FUSE_TIME
	f	Ljava/lang/String;	f	TAG_BLOCK_STATE
	f	Ldcp;	g	USED_PORTAL_DAMAGE_CALCULATOR
	f	Lbtn;	h	owner
	f	Z	i	usedPortal
c	cji$1	net/minecraft/world/entity/item/EntityTNTPrimed$1
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
c	cjk	net/minecraft/world/entity/monster/EntityIllagerAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbtn;)Z	c	canAttack
		p	1		target
	m	()Lcjk$a;	s	getArmPose
	m	(Lbsr;)Z	s	isAlliedTo
		p	1		other
c	cjk$a	net/minecraft/world/entity/monster/EntityIllagerAbstract$a
	m	()[Lcjk$a;	a	$values
	f	Lcjk$a;	a	CROSSED
	f	Lcjk$a;	b	ATTACKING
	f	Lcjk$a;	c	SPELLCASTING
	f	Lcjk$a;	d	BOW_AND_ARROW
	f	Lcjk$a;	e	CROSSBOW_HOLD
	f	Lcjk$a;	f	CROSSBOW_CHARGE
	f	Lcjk$a;	g	CELEBRATING
	f	Lcjk$a;	h	NEUTRAL
	f	[Lcjk$a;	i	$VALUES
c	cjk$b	net/minecraft/world/entity/monster/EntityIllagerAbstract$b
	m	(Lcjk;Lcoj;)V	<init>	<init>
		p	2		raider
	m	()Z	b	canUse
	f	Lcjk;	a	this$0
c	cjl	net/minecraft/world/entity/monster/EntitySkeletonAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcuq;FLcuq;)Lcnd;	a	getArrow
		p	1		arrow
		p	2		damageModifier
		p	3		shotFrom
	m	(Lcvn;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()I	gk	getHardAttackInterval
	m	()I	gl	getAttackInterval
	m	()Z	gm	isShaking
	m	()V	m_	aiStep
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	t	getStepSound
	m	()V	u	rideTick
	m	()V	x	reassessWeaponGoal
	f	I	b	HARD_ATTACK_INTERVAL
	f	I	c	NORMAL_ATTACK_INTERVAL
	f	Lcbm;	d	bowGoal
	f	Lcaw;	e	meleeGoal
c	cjl$1	net/minecraft/world/entity/monster/EntitySkeletonAbstract$1
	m	(Lcjl;Lbtw;DZ)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		pauseWhenMobIdle
	m	()V	d	start
	m	()V	e	stop
	f	Lcjl;	b	this$0
c	cjm	net/minecraft/world/entity/monster/EntityBlaze
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	()V	ab	customServerAiStep
	m	()Z	bR	isOnFire
	m	()F	bu	getLightLevelDependentMagicValue
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Z	fl	isSensitiveToWater
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isCharged
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setCharged
		p	1		fireActive
	f	F	b	allowedHeightOffset
	f	I	c	nextHeightOffsetChangeTick
	f	Lajw;	d	DATA_FLAGS_ID
c	cjm$a	net/minecraft/world/entity/monster/EntityBlaze$PathfinderGoalBlazeFireball
	m	(Lcjm;)V	<init>	<init>
		p	1		blaze
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()D	h	getFollowDistance
	f	Lcjm;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
c	cjn	net/minecraft/world/entity/monster/Bogged
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	a	readyForShearing
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lavq;)V	a	shear
		p	1		shearedSoundCategory
	m	(Lcuq;FLcuq;)Lcnd;	a	getArrow
		p	1		arrow
		p	2		damageModifier
		p	3		shotFrom
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()I	gk	getHardAttackInterval
	m	()I	gl	getAttackInterval
	m	()Lbuv$a;	gn	createAttributes
	m	()Z	go	isSheared
	m	()V	gr	spawnShearedMushrooms
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	t	getStepSound
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setSheared
		p	1		sheared
	f	Ljava/lang/String;	b	SHEARED_TAG_NAME
	f	I	c	HARD_ATTACK_INTERVAL
	f	I	d	NORMAL_ATTACK_INTERVAL
	f	Lajw;	e	DATA_SHEARED
c	cjo	net/minecraft/world/entity/monster/EntityCaveSpider
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lbsr;)Lexc;	l	getVehicleAttachmentPoint
		p	1		vehicle
	m	()Lbuv$a;	s	createCaveSpider
c	cjp	net/minecraft/world/entity/monster/EntityCreeper
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(F)F	H	getSwelling
		p	1		timeDelta
	m	()Z	a	isPowered
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)V	b	setSwellDir
		p	1		fuseSpeed
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()I	cx	getMaxFallDistance
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	gk	ignite
	m	()Z	gl	canDropMobsSkull
	m	()V	gm	increaseDroppedSkulls
	m	()V	gn	explodeCreeper
	m	()V	go	spawnLingeringCloud
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()I	t	getSwellDir
	m	()Z	x	isIgnited
	f	Lajw;	b	DATA_SWELL_DIR
	f	Lajw;	c	DATA_IS_POWERED
	f	I	cc	swell
	f	I	cd	maxSwell
	f	I	ce	explosionRadius
	f	I	cf	droppedSkulls
	f	Lajw;	d	DATA_IS_IGNITED
	f	I	e	oldSwell
c	cjq	net/minecraft/world/entity/monster/ICrossbow
	m	()V	a	onCrossbowAttackPerformed
	m	(Lbtn;F)V	b	performCrossbowAttack
		p	1		entity
		p	2		speed
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	()Lbtn;	p	getTarget
c	cjr	net/minecraft/world/entity/monster/EntityDrowned
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkDrownedSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcjr;Lcda;)Lcda;	a	access$002
	m	(Ldcx;Ljd;)Z	a	isDeepEnoughToSpawn
		p	0		world
		p	1		pos
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	()Lavo;	aQ	getSwimSound
	m	(Lcuq;Lcuq;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	()V	bl	updateSwimming
	m	()Z	cC	isPushedByFluid
	m	()Z	ce	isVisuallySwimming
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gk	getStepSound
	m	()Lcuq;	gl	getSkull
	m	()Z	gm	convertsInWater
	m	()Z	gn	closeToNextPos
	m	()Z	gu	wantsToSwim
	m	(Lbtn;)Z	j	okTarget
		p	1		target
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()V	t	addBehaviourGoals
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	supportsBreakDoorGoal
	m	(Z)V	x	setSearchingForLand
		p	1		targetingUnderwater
	f	F	b	NAUTILUS_SHELL_CHANCE
	f	Lcdc;	c	waterNavigation
	f	Z	cf	searchingForLand
	f	Lccz;	d	groundNavigation
c	cjr$a	net/minecraft/world/entity/monster/EntityDrowned$a
	m	(Lcjr;DZ)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		pauseWhenMobIdle
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lcjr;	b	drowned
c	cjr$b	net/minecraft/world/entity/monster/EntityDrowned$b
	m	(Lcjr;D)V	<init>	<init>
		p	1		drowned
		p	2		speed
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjr;	g	drowned
c	cjr$c	net/minecraft/world/entity/monster/EntityDrowned$c
	m	(Lbtw;D)V	<init>	<init>
		p	1		mob
		p	2		speed
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Lexc;	h	getWaterPos
	f	Lbtw;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Ldcw;	f	level
c	cjr$d	net/minecraft/world/entity/monster/EntityDrowned$d
	m	(Lcjr;)V	<init>	<init>
		p	1		drowned
	m	()V	a	tick
	f	Lcjr;	l	drowned
c	cjr$e	net/minecraft/world/entity/monster/EntityDrowned$e
	m	(Lcjr;DI)V	<init>	<init>
		p	1		drowned
		p	2		speed
		p	4		minY
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjr;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
c	cjr$f	net/minecraft/world/entity/monster/EntityDrowned$f
	m	(Lckh;DIF)V	<init>	<init>
		p	1		mob
		p	2		mobSpeed
		p	4		intervalTicks
		p	5		maxShootRange
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjr;	a	drowned
c	cjs	net/minecraft/world/entity/monster/EntityGuardianElder
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	ab	customServerAiStep
	m	(Laqv;)V	b	lambda$customServerAiStep$0
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()I	t	getAttackDuration
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getFlopSound
	f	F	b	ELDER_SIZE_SCALE
	f	I	cc	EFFECT_RADIUS
	f	I	cd	EFFECT_DURATION
	f	I	ce	EFFECT_AMPLIFIER
	f	I	cf	EFFECT_DISPLAY_LIMIT
	f	I	e	EFFECT_INTERVAL
c	cjt	net/minecraft/world/entity/monster/EntityEnderman
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	Y	requiresCustomPersistence
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbrk;Lcob;F)Z	a	hurtWithCleanWater
		p	1		source
		p	2		potion
		p	3		amount
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lbsr;)Z	c	teleportTowards
		p	1		entity
	m	(Ldtc;)V	c	setCarriedBlock
		p	1		state
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmx;)Z	f	isLookingAtMe
		p	1		player
	m	()Z	fl	isSensitiveToWater
	m	()Ldtc;	gk	getCarriedBlock
	m	()Z	gl	isCreepy
	m	()Z	gm	hasBeenStaredAt
	m	()V	gn	setBeingStaredAt
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(DDD)Z	q	teleport
		p	1		x
		p	3		y
		p	5		z
	m	()Lbuv$a;	s	createAttributes
	m	()V	t	playStareSound
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	teleport
	f	Lakr;	c	SPEED_MODIFIER_ATTACKING_ID
	f	I	cc	MIN_DEAGGRESSION_TIME
	f	Lajw;	cd	DATA_CARRY_STATE
	f	Lajw;	ce	DATA_CREEPY
	f	Lajw;	cf	DATA_STARED_AT
	f	I	cg	lastStareSound
	f	I	ch	targetChangeTime
	f	Lbqc;	ci	PERSISTENT_ANGER_TIME
	f	I	cj	remainingPersistentAngerTime
	f	Ljava/util/UUID;	ck	persistentAngerTarget
	f	Lbuu;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
c	cjt$a	net/minecraft/world/entity/monster/EntityEnderman$a
	m	(Lcjt;)V	<init>	<init>
		p	1		enderman
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	f	Lcjt;	a	enderman
	f	Lbtn;	b	target
c	cjt$b	net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPlaceBlock
	m	(Lcjt;)V	<init>	<init>
		p	1		enderman
	m	()V	a	tick
	m	(Ldcw;Ljd;Ldtc;Ldtc;Ldtc;Ljd;)Z	a	canPlaceBlock
		p	1		world
		p	2		posAbove
		p	3		carriedState
		p	4		stateAbove
		p	5		state
		p	6		pos
	m	()Z	b	canUse
	f	Lcjt;	a	enderman
c	cjt$c	net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalPlayerWhoLookedAtTarget
	m	(Lcjt;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		enderman
		p	2		targetPredicate
	m	()V	a	tick
	m	(Lcjt;Lbtn;)Z	a	lambda$new$0
		p	1		playerEntity
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjt;	i	enderman
	f	Lcmx;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lcef;	m	startAggroTargetConditions
	f	Lcef;	n	continueAggroTargetConditions
	f	Ljava/util/function/Predicate;	o	isAngerInducing
c	cjt$d	net/minecraft/world/entity/monster/EntityEnderman$PathfinderGoalEndermanPickupBlock
	m	(Lcjt;)V	<init>	<init>
		p	1		enderman
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lcjt;	a	enderman
c	cju	net/minecraft/world/entity/monster/EntityEndermite
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkEndermiteSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	l	tick
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(F)V	p	setYBodyRot
		p	1		bodyYaw
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	I	b	MAX_LIFE
	f	I	c	life
c	cjv	net/minecraft/world/entity/monster/IMonster
	f	I	i_	XP_REWARD_NONE
	f	I	j_	XP_REWARD_SMALL
	f	I	k_	XP_REWARD_MEDIUM
	f	I	l_	XP_REWARD_LARGE
	f	I	m_	XP_REWARD_HUGE
	f	I	n_	XP_REWARD_BOSS
c	cjw	net/minecraft/world/entity/monster/EntityEvoker
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Lcga;)V	a	setWololoTarget
		p	1		wololoTarget
	m	(Lcjw;)Layw;	a	access$000
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	()Lavo;	ai_	getCelebrateSound
	m	(Lcjw;)Layw;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcjw;)Layw;	c	access$200
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcjw;)Layw;	d	access$300
	m	(Lcjw;)Layw;	e	access$400
	m	()Lcga;	gF	getWololoTarget
	m	()Lavo;	gk	getCastingSoundEvent
	m	()Lavo;	n_	getDeathSound
	m	(Lbsr;)Z	s	isAlliedTo
		p	1		other
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Lcga;	e	wololoTarget
c	cjw$a	net/minecraft/world/entity/monster/EntityEvoker$a
	m	(DDDDFI)V	a	createSpellEntity
		p	1		x
		p	3		z
		p	5		maxY
		p	7		y
		p	9		yaw
		p	10		warmup
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	f	Lcjw;	a	this$0
c	cjw$b	net/minecraft/world/entity/monster/EntityEvoker$b
	m	()V	a	tick
	f	Lcjw;	a	this$0
c	cjw$c	net/minecraft/world/entity/monster/EntityEvoker$c
	m	()Z	b	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	f	Lcjw;	a	this$0
	f	Lcef;	e	vexCountTargeting
c	cjw$d	net/minecraft/world/entity/monster/EntityEvoker$d
	m	()V	a	tick
	m	(Lbtn;)Z	a	lambda$new$0
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	Lcjw;	a	this$0
	f	Lcef;	e	wololoTargeting
c	cjx	net/minecraft/world/entity/monster/EntityGhast
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	Z	shouldDespawnInPeaceful
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkGhastSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavq;	de	getSoundSource
	m	()I	fN	getMaxSpawnClusterSize
	m	()F	fa	getSoundVolume
	m	(Lbrk;)Z	g	isReflectedFireball
		p	0		damageSource
	m	(Lbtn;)Z	j	lambda$registerGoals$0
		p	1		entity
	m	()Lavo;	n_	getDeathSound
	m	()Z	s	isCharging
	m	()I	t	getExplosionPower
	m	()Lavo;	v	getAmbientSound
	m	()Lbuv$a;	x	createAttributes
	m	(Z)V	x	setCharging
		p	1		shooting
	f	Lajw;	b	DATA_IS_CHARGING
	f	I	c	explosionPower
c	cjx$a	net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastMoveTowardsTarget
	m	(Lcjx;)V	<init>	<init>
		p	1		ghast
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lcjx;	a	ghast
c	cjx$b	net/minecraft/world/entity/monster/EntityGhast$ControllerGhast
	m	(Lcjx;)V	<init>	<init>
		p	1		ghast
	m	()V	a	tick
	m	(Lexc;I)Z	a	canReach
		p	1		direction
		p	2		steps
	f	Lcjx;	l	ghast
	f	I	m	floatDuration
c	cjx$c	net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastAttackTarget
	m	(Lcjx;)V	<init>	<init>
		p	1		ghast
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	I	a	chargeTime
	f	Lcjx;	b	ghast
c	cjx$d	net/minecraft/world/entity/monster/EntityGhast$PathfinderGoalGhastIdleMove
	m	(Lcjx;)V	<init>	<init>
		p	1		ghast
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lcjx;	a	ghast
c	cjy	net/minecraft/world/entity/monster/EntityGiantZombie
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lbuv$a;	s	createAttributes
c	cjz	net/minecraft/world/entity/monster/EntityGuardian
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(F)F	H	getTailAnimation
		p	1		tickDelta
	m	(F)F	I	getSpikesAnimation
		p	1		tickDelta
	m	(F)F	J	getAttackAnimationScale
		p	1		tickDelta
	m	()I	R	getAmbientSoundInterval
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()I	ac	getMaxHeadXRot
	m	(I)V	b	setActiveAttackTarget
		p	1		entityId
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkGuardianSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuv$a;	gk	createAttributes
	m	()Z	gl	isMoving
	m	()Z	gm	hasActiveAttackTarget
	m	()Lbtn;	gn	getActiveAttackTarget
	m	()F	go	getClientSideAttackTime
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()I	t	getAttackDuration
	m	()Lavo;	v	getAmbientSound
	m	()Lavo;	x	getFlopSound
	m	(Z)V	x	setMoving
		p	1		retracted
	f	Lajw;	b	DATA_ID_MOVING
	f	I	c	ATTACK_TIME
	f	F	cc	clientSideTailAnimation
	f	F	cd	clientSideTailAnimationO
	f	F	ce	clientSideTailAnimationSpeed
	f	F	cf	clientSideSpikesAnimation
	f	F	cg	clientSideSpikesAnimationO
	f	Lbtn;	ch	clientSideCachedAttackTarget
	f	I	ci	clientSideAttackTime
	f	Z	cj	clientSideTouchedGround
	f	Lcbj;	d	randomStrollGoal
	f	Lajw;	e	DATA_ID_ATTACK_TARGET
c	cjz$a	net/minecraft/world/entity/monster/EntityGuardian$PathfinderGoalGuardianAttack
	m	(Lcjz;)V	<init>	<init>
		p	1		guardian
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcjz;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
c	cjz$b	net/minecraft/world/entity/monster/EntityGuardian$EntitySelectorGuardianTargetHumanSquid
	m	(Lcjz;)V	<init>	<init>
		p	1		owner
	m	(Lbtn;)Z	a	test
	f	Lcjz;	a	guardian
c	cjz$c	net/minecraft/world/entity/monster/EntityGuardian$ControllerMoveGuardian
	m	(Lcjz;)V	<init>	<init>
		p	1		guardian
	m	()V	a	tick
	f	Lcjz;	l	guardian
c	cka	net/minecraft/world/entity/monster/EntityZombieHusk
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkHuskSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()V	ag_	doUnderWaterConversion
	m	()Z	ah_	isSunSensitive
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gk	getStepSound
	m	()Lcuq;	gl	getSkull
	m	()Z	gm	convertsInWater
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
c	ckb	net/minecraft/world/entity/monster/EntityIllagerIllusioner
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(F)[Lexc;	H	getIllusionOffsets
		p	1		tickDelta
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	()Lavo;	ai_	getCelebrateSound
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	gk	getCastingSoundEvent
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lcjk$a;	s	getArmPose
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	I	cc	ILLUSION_TRANSITION_TICKS
	f	I	cd	ILLUSION_SPREAD
	f	I	ce	clientSideIllusionTicks
	f	[[Lexc;	cf	clientSideIllusionOffsets
	f	I	e	NUM_ILLUSIONS
c	ckb$a	net/minecraft/world/entity/monster/EntityIllagerIllusioner$a
	m	()Z	b	canUse
	m	()V	d	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	f	Lckb;	a	this$0
	f	I	e	lastTargetId
c	ckb$b	net/minecraft/world/entity/monster/EntityIllagerIllusioner$b
	m	()Z	b	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	f	Lckb;	a	this$0
c	ckc	net/minecraft/world/entity/monster/EntityMagmaCube
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkMagmaCubeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Z	bR	isOnFire
	m	()F	bu	getLightLevelDependentMagicValue
	m	(Lawu;)V	c	jumpInLiquid
		p	1		fluid
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	ff	jumpFromGround
	m	()V	gg	decreaseSquish
	m	()Z	gh	isDealsDamage
	m	()F	gi	getAttackDamage
	m	()Lavo;	gj	getSquishSound
	m	()Lavo;	gk	getJumpSound
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Llk;	t	getParticleType
	m	()I	x	getJumpDelay
c	ckd	net/minecraft/world/entity/monster/EntityMonster
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Z	shouldDespawnInPeaceful
	m	(Lcmx;)Z	a	isPreventingPlayerRest
		p	1		player
	m	(Lddl;Ljd;Layw;)Z	a	isDarkEnoughToSpawn
		p	0		world
		p	1		pos
		p	2		random
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	b	checkMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkAnyLightMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavq;	de	getSoundSource
	m	()Lbtn$a;	eH	getFallSounds
	m	()Z	ee	shouldDropExperience
	m	()Z	ef	shouldDropLoot
	m	(Lcuq;)Lcuq;	g	getProjectile
		p	1		stack
	m	()V	gp	updateNoActionTime
	m	()Lbuv$a;	gq	createMonsterAttributes
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
c	cke	net/minecraft/world/entity/monster/EntityMonsterPatrolling
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkPatrollingMonsterSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	gl	canBeLeader
	m	()Ljd;	gm	getPatrolTarget
	m	()Z	gn	hasPatrolTarget
	m	()Z	go	isPatrolLeader
	m	()Z	gr	canJoinPatrol
	m	()V	gs	findPatrolTarget
	m	()Z	gt	isPatrolling
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Ljd;)V	h	setPatrolTarget
		p	1		targetPos
	m	(Ljd;)V	i	lambda$readAdditionalSaveData$0
		p	1		patrolTarget
	m	(Z)V	x	setPatrolLeader
		p	1		patrolLeader
	m	(Z)V	y	setPatrolling
		p	1		patrolling
	f	Ljd;	b	patrolTarget
	f	Z	c	patrolLeader
	f	Z	d	patrolling
c	cke$a	net/minecraft/world/entity/monster/EntityMonsterPatrolling$a
	m	(Lcke;DD)V	<init>	<init>
		p	1		entity
		p	2		leaderSpeed
		p	4		followSpeed
	m	()V	a	tick
	m	(Lcke;)Z	a	lambda$findPatrolCompanions$0
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lcke;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
c	ckf	net/minecraft/world/entity/monster/EntityPhantom
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Lbzk;	H	createBodyControl
	m	()Z	Z	shouldDespawnInPeaceful
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbsx;)Z	a	canAttackType
		p	1		type
	m	(Lckf;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aW	isFlapping
	m	()V	ab	customServerAiStep
	m	(I)V	b	setPhantomSize
		p	1		size
	m	(Lckf;)Layw;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lckf;)Layw;	c	access$200
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lckf;)Layw;	d	access$300
	m	()Lavq;	de	getSoundSource
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Lckf;)Layw;	e	access$400
	m	(Lckf;)Layw;	f	access$500
	m	()F	fa	getSoundVolume
	m	(Lckf;)Layw;	g	access$600
	m	(Lckf;)Layw;	h	access$700
	m	(Lckf;)Layw;	i	access$800
	m	(Lckf;)Layw;	j	access$900
	m	(Lckf;)Layw;	k	access$1000
	m	()V	l	tick
	m	(Lckf;)Layw;	l	access$1100
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()I	s	getPhantomSize
	m	()I	t	getUniqueFlapTickOffset
	m	()Lavo;	v	getAmbientSound
	m	()V	x	updatePhantomSizeInfo
	f	F	b	FLAP_DEGREES_PER_TICK
	f	I	c	TICKS_PER_FLAP
	f	Ljd;	cb	anchorPoint
	f	Lckf$a;	cc	attackPhase
	f	Lajw;	d	ID_SIZE
	f	Lexc;	e	moveTargetPoint
c	ckf$a	net/minecraft/world/entity/monster/EntityPhantom$AttackPhase
	m	()[Lckf$a;	a	$values
	f	Lckf$a;	a	CIRCLE
	f	Lckf$a;	b	SWOOP
	f	[Lckf$a;	c	$VALUES
c	ckf$b	net/minecraft/world/entity/monster/EntityPhantom$b
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lckf;	a	this$0
	f	Lcef;	b	attackTargeting
	f	I	c	nextScanTick
c	ckf$c	net/minecraft/world/entity/monster/EntityPhantom$c
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	h	setAnchorAboveTarget
	f	Lckf;	a	this$0
	f	I	b	nextSweepTick
c	ckf$d	net/minecraft/world/entity/monster/EntityPhantom$d
	m	(Lckf;Lbtp;)V	<init>	<init>
		p	2		entity
	m	()V	a	clientTick
	f	Lckf;	a	this$0
c	ckf$e	net/minecraft/world/entity/monster/EntityPhantom$e
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	i	selectNext
	f	Lckf;	a	this$0
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
c	ckf$f	net/minecraft/world/entity/monster/EntityPhantom$f
	m	(Lckf;Lbtp;)V	<init>	<init>
		p	1		phantom
		p	2		entity
	m	()V	a	tick
c	ckf$g	net/minecraft/world/entity/monster/EntityPhantom$g
	m	(Lckf;Lbtp;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lckf;	l	this$0
	f	F	m	speed
c	ckf$h	net/minecraft/world/entity/monster/EntityPhantom$h
	m	()Z	h	touchingTarget
	f	Lckf;	b	this$0
c	ckf$i	net/minecraft/world/entity/monster/EntityPhantom$i
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lckf;	a	this$0
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
c	ckg	net/minecraft/world/entity/monster/EntityPillager
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()V	a	onCrossbowAttackPerformed
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcvn;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()Lavo;	ai_	getCelebrateSound
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lddl;Layw;Lbqp;)V	b	enchantSpawnedWeapon
		p	1		world
		p	2		random
		p	3		localDifficulty
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()I	fN	getMaxSpawnClusterSize
	m	()Z	gk	isChargingCrossbow
	m	(Lcuq;)Z	n	wantsItem
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	()Lcjk$a;	s	getArmPose
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	()Lbra;	x	getInventory
	f	Lajw;	b	IS_CHARGING_CROSSBOW
	f	I	cc	SLOT_OFFSET
	f	Lbra;	cd	inventory
	f	I	e	INVENTORY_SIZE
c	ckh	net/minecraft/world/entity/monster/IRangedEntity
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
c	cki	net/minecraft/world/entity/monster/EntityRavager
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lbsr;)Z	F	hasLineOfSight
		p	1		entity
	m	()V	U	updateControlFlags
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	ae	getMaxHeadYRot
	m	()Lavo;	ai_	getCelebrateSound
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsr;)V	c	strongKnockback
		p	1		entity
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsr;)Z	d	lambda$static$0
		p	0		entity
	m	(Lbtn;)V	e	blockedByShield
		p	1		target
	m	()Z	fc	isImmobile
	m	()Lewx;	gc	getAttackBoundingBox
	m	()I	gk	getStunnedTick
	m	()Z	gl	canBeLeader
	m	()I	gu	getRoarTick
	m	()V	gv	stunEffect
	m	()V	gw	roar
	m	(Lbtn;)Z	j	lambda$registerGoals$1
		p	0		entity
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()I	t	getAttackTick
	m	()Lavo;	v	getAmbientSound
	f	I	b	STUN_DURATION
	f	D	cc	BASE_MOVEMENT_SPEED
	f	D	cd	ATTACK_MOVEMENT_SPEED
	f	I	ce	STUNNED_COLOR
	f	F	cf	STUNNED_COLOR_BLUE
	f	F	cg	STUNNED_COLOR_GREEN
	f	F	ch	STUNNED_COLOR_RED
	f	I	ci	ATTACK_DURATION
	f	I	cj	attackTick
	f	I	ck	stunnedTick
	f	I	cl	roarTick
	f	Ljava/util/function/Predicate;	e	NO_RAVAGER_AND_ALIVE
c	ckj	net/minecraft/world/entity/monster/EntityShulker
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Lbzk;	H	createBodyControl
	m	(F)F	H	getClientPeekAmount
		p	1		delta
	m	(F)Ljava/util/Optional;	I	getRenderPosition
		p	1		tickDelta
	m	(F)F	J	getPhysicalPeek
		p	0		openProgress
	m	()V	S	playAmbientSound
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(FLji;F)Lewx;	a	getProgressAabb
		p	0		scale
		p	1		facing
		p	2		extraLength
	m	(FLji;FF)Lewx;	a	getProgressDeltaAabb
		p	0		scale
		p	1		facing
		p	2		prevExtraLength
		p	3		extraLength
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsr;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lckj;)Layw;	a	access$000
	m	(Lcti;)Ljava/lang/Byte;	a	lambda$setVariant$2
		p	0		color
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Ljava/util/Optional;)V	a	setVariant
		p	1		variant
	m	(Ljd;Lji;)Z	a	canStayAt
		p	1		pos
		p	2		direction
	m	(Lji;)V	a	setAttachFace
		p	1		face
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(DDD)V	a_	setPos
		p	1		x
		p	3		y
		p	5		z
	m	()I	ac	getMaxHeadXRot
	m	()V	ad	stopRiding
	m	()I	ae	getMaxHeadYRot
	m	()Lewx;	au	makeBoundingBox
	m	(F)F	b	sanitizeScale
		p	1		scale
	m	(I)V	b	setRawPeekAmount
		p	1		peekAmount
	m	(Lckj;)Layw;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bG	canBeCollidedWith
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbsr;)Z	c	lambda$onPeekAmountChange$1
	m	(Lckj;)Layw;	c	access$200
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lckj;)Layw;	d	access$300
	m	()Lavq;	de	getSoundSource
	m	()Lexc;	dr	getDeltaMovement
	m	(Lckj;)Layw;	e	access$400
	m	()Ljava/util/Optional;	gk	getVariant
	m	()Lcti;	gl	getColor
	m	()V	gm	findNewAttachment
	m	()Z	gn	updatePeekAmount
	m	()V	go	onPeekAmountChange
	m	()Z	gp	isClosed
	m	()V	gq	hitByShulkerBullet
	m	()I	gr	getRawPeekAmount
	m	()Lorg/joml/Vector3f;	gs	lambda$static$0
	m	(Lbsr;)V	h	push
		p	1		entity
	m	(Ljd;)Lji;	h	findAttachableSurface
		p	1		pos
	m	(Lexc;)V	i	setDeltaMovement
		p	1		velocity
	m	(Ljd;)Z	i	isPositionBlocked
		p	1		pos
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	teleportSomewhere
	m	()Lavo;	v	getAmbientSound
	m	()Lji;	x	getAttachFace
	f	Lajw;	b	DATA_ATTACH_FACE_ID
	f	Lajw;	c	DATA_PEEK_ID
	f	Lbuu;	cc	COVERED_ARMOR_MODIFIER
	f	I	cd	TELEPORT_STEPS
	f	B	ce	NO_COLOR
	f	B	cf	DEFAULT_COLOR
	f	I	cg	MAX_TELEPORT_DISTANCE
	f	I	ch	OTHER_SHULKER_SCAN_RADIUS
	f	I	ci	OTHER_SHULKER_LIMIT
	f	F	cj	PEEK_PER_TICK
	f	Lorg/joml/Vector3f;	ck	FORWARD
	f	F	cl	MAX_SCALE
	f	F	cm	currentPeekAmountO
	f	F	cn	currentPeekAmount
	f	Ljd;	co	clientOldAttachPosition
	f	I	cp	clientSideTeleportInterpolation
	f	F	cq	MAX_LID_OPEN
	f	Lajw;	d	DATA_COLOR_ID
	f	Lakr;	e	COVERED_ARMOR_MODIFIER_ID
c	ckj$a	net/minecraft/world/entity/monster/EntityShulker$a
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lckj;	a	this$0
	f	I	b	attackTime
c	ckj$b	net/minecraft/world/entity/monster/EntityShulker$b
	m	(Lbtp;)V	<init>	<init>
		p	1		entity
	m	()V	a	clientTick
c	ckj$c	net/minecraft/world/entity/monster/EntityShulker$c
	m	(Lckj;)V	<init>	<init>
		p	1		shulker
	m	(D)Lewx;	a	getTargetSearchArea
		p	1		distance
	m	()Z	b	canUse
	m	(Lbtn;)Z	b	lambda$new$0
		p	0		entity
c	ckj$d	net/minecraft/world/entity/monster/EntityShulker$d
	m	(Lckj;Lbtp;)V	<init>	<init>
		p	2		entity
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	f	Lckj;	h	this$0
c	ckj$e	net/minecraft/world/entity/monster/EntityShulker$e
	m	(Lckj;Lckj;)V	<init>	<init>
		p	2		shulker
	m	(D)Lewx;	a	getTargetSearchArea
		p	1		distance
	m	()Z	b	canUse
	f	Lckj;	i	this$0
c	ckj$f	net/minecraft/world/entity/monster/EntityShulker$f
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lckj;	a	this$0
	f	I	b	peekTime
c	ckk	net/minecraft/world/entity/monster/EntitySilverfish
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkSilverfishSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(F)V	p	setYBodyRot
		p	1		bodyYaw
	m	()Lbuv$a;	s	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Lckk$b;	b	friendsGoal
c	ckk$a	net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishHideInBlock
	m	(Lckk;)V	<init>	<init>
		p	1		silverfish
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lji;	i	selectedDirection
	f	Z	j	doMerge
c	ckk$b	net/minecraft/world/entity/monster/EntitySilverfish$PathfinderGoalSilverfishWakeOthers
	m	(Lckk;)V	<init>	<init>
		p	1		silverfish
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	h	notifyHurt
	f	Lckk;	a	silverfish
	f	I	b	lookForFriends
c	ckl	net/minecraft/world/entity/monster/EntitySkeleton
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)V	b	startFreezeConversion
		p	1		time
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Z	dC	canFreeze
	m	()Z	gm	isShaking
	m	()Z	gn	isFreezeConverting
	m	()V	go	doFreezeConversion
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	t	getStepSound
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	x	setFreezeConverting
		p	1		converting
	f	Ljava/lang/String;	b	CONVERSION_TAG
	f	I	c	TOTAL_CONVERSION_TIME
	f	I	cc	conversionTime
	f	Lajw;	d	DATA_STRAY_CONVERSION_ID
	f	I	e	inPowderSnowTime
c	ckm	net/minecraft/world/entity/monster/EntitySlime
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	Z	shouldDespawnInPeaceful
	m	(IZ)V	a	setSize
		p	1		size
		p	2		heal
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	ac	getMaxHeadXRot
	m	()Lbsx;	am	getType
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkSlimeSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavq;	de	getSoundSource
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()F	fa	getSoundVolume
	m	()V	ff	jumpFromGround
	m	()V	gg	decreaseSquish
	m	()Z	gh	isDealsDamage
	m	()F	gi	getAttackDamage
	m	()Lavo;	gj	getSquishSound
	m	()Lavo;	gk	getJumpSound
	m	()I	gl	getSize
	m	()Z	gm	isTiny
	m	()Z	gn	doPlayJumpSound
	m	(Lbsr;)V	h	push
		p	1		entity
	m	()V	i_	refreshDimensions
	m	(Lbtn;)V	j	dealDamage
		p	1		target
	m	(Lbtn;)Z	k	lambda$registerGoals$0
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()F	s	getSoundPitch
	m	()Llk;	t	getParticleType
	m	()I	x	getJumpDelay
	f	I	b	MIN_SIZE
	f	I	c	MAX_SIZE
	f	F	cb	squish
	f	F	cc	oSquish
	f	Lajw;	cd	ID_SIZE
	f	Z	ce	wasOnGround
	f	I	d	MAX_NATURAL_SIZE
	f	F	e	targetSquish
c	ckm$a	net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeNearestPlayer
	m	(Lckm;)V	<init>	<init>
		p	1		slime
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	f	Lckm;	a	slime
	f	I	b	growTiredTimer
c	ckm$b	net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomJump
	m	(Lckm;)V	<init>	<init>
		p	1		slime
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lckm;	a	slime
c	ckm$c	net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeIdle
	m	(Lckm;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lckm;	a	slime
c	ckm$d	net/minecraft/world/entity/monster/EntitySlime$ControllerMoveSlime
	m	(Lckm;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	(D)V	a	setWantedMovement
		p	1		speed
	m	(FZ)V	a	setDirection
		p	1		targetYaw
		p	2		jumpOften
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lckm;	n	slime
	f	Z	o	isAggressive
c	ckm$e	net/minecraft/world/entity/monster/EntitySlime$PathfinderGoalSlimeRandomDirection
	m	(Lckm;)V	<init>	<init>
		p	1		slime
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lckm;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
c	ckn	net/minecraft/world/entity/monster/EntityIllagerWizard
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lckn$a;)V	a	setIsCastingSpell
		p	1		spell
	m	(Lckn;)Lcda;	a	access$000
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lavo;	gk	getCastingSoundEvent
	m	()Z	gu	isCastingSpell
	m	()Lckn$a;	gv	getCurrentSpell
	m	()I	gw	getSpellCastingTime
	m	()V	l	tick
	m	()Lcjk$a;	s	getArmPose
	f	I	b	spellCastingTickCount
	f	Lckn$a;	cc	currentSpell
	f	Lajw;	e	DATA_SPELL_CASTING_ID
c	ckn$a	net/minecraft/world/entity/monster/EntityIllagerWizard$Spell
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
		p	3		id
		p	4		particleVelocityX
		p	6		particleVelocityY
		p	8		particleVelocityZ
	m	()[Lckn$a;	a	$values
	m	(I)Lckn$a;	a	byId
		p	0		id
	m	(Lckn$a;)I	a	lambda$static$0
		p	0		spell
	f	Lckn$a;	a	NONE
	f	Lckn$a;	b	SUMMON_VEX
	f	Lckn$a;	c	FANGS
	f	Lckn$a;	d	WOLOLO
	f	Lckn$a;	e	DISAPPEAR
	f	Lckn$a;	f	BLINDNESS
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	[D	i	spellColor
	f	[Lckn$a;	j	$VALUES
c	ckn$b	net/minecraft/world/entity/monster/EntityIllagerWizard$b
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lckn;	b	this$0
c	ckn$c	net/minecraft/world/entity/monster/EntityIllagerWizard$PathfinderGoalCastSpell
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Lavo;	l	getSpellPrepareSound
	m	()Lckn$a;	m	getSpell
	m	()I	n	getCastWarmupTime
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lckn;	d	this$0
c	cko	net/minecraft/world/entity/monster/EntitySpider
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ldtc;Lexc;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbrz;)Z	c	canBeAffected
		p	1		effect
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbtn;)Z	j	lambda$registerGoals$0
		p	0		entity
	m	()V	l	tick
	m	(Lbsr;)Lexc;	l	getVehicleAttachmentPoint
		p	1		vehicle
	m	()Lavo;	n_	getDeathSound
	m	()Z	p_	onClimbable
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isClimbing
	m	(Z)V	x	setClimbing
		p	1		climbing
	f	Lajw;	b	DATA_FLAGS_ID
	f	F	c	SPIDER_SPECIAL_EFFECT_CHANCE
c	cko$a	net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderMeleeAttack
	m	(Lcko;)V	<init>	<init>
		p	1		spider
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cko$b	net/minecraft/world/entity/monster/EntitySpider$GroupDataSpider
	m	(Layw;)V	a	setRandomEffect
		p	1		random
	f	Ljm;	a	effect
c	cko$c	net/minecraft/world/entity/monster/EntitySpider$PathfinderGoalSpiderNearestAttackableTarget
	m	(Lcko;Ljava/lang/Class;)V	<init>	<init>
		p	1		spider
		p	2		targetEntityClass
	m	()Z	b	canUse
c	ckp	net/minecraft/world/entity/monster/EntitySkeletonStray
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Lddl;Lbtr;Ljd;Layw;)Z	a	checkStraySpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcuq;FLcuq;)Lcnd;	a	getArrow
		p	1		arrow
		p	2		damageModifier
		p	3		shotFrom
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	t	getStepSound
	m	()Lavo;	v	getAmbientSound
c	ckq	net/minecraft/world/entity/monster/EntityStrider
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	()Z	D	shouldPassengersInheritMalus
	m	()Z	a	boost
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lcmx;Lexc;)V	a	tickRidden
		p	1		controllingPlayer
		p	2		movementInput
	m	(Lcuq;Lavq;)V	a	equipSaddle
		p	1		stack
		p	2		soundCategory
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Lbqp;Lbtp;Lbuh;)Lbuh;	a	spawnJockey
		p	1		world
		p	2		difficulty
		p	3		rider
		p	4		entityData
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lepe;)Z	a	canStandOnFluid
		p	1		state
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()F	aP	nextStep
	m	(Laqu;Lbsl;)Lckq;	b	getBreedOffspring
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcmx;Lexc;)Lexc;	b	getRiddenInput
		p	1		controllingPlayer
		p	2		movementInput
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bR	isOnFire
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkStriderSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	()Lexc;	cM	getLeashOffset
	m	()Lbtn;	cQ	getControllingPassenger
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmx;)F	e	getRiddenSpeed
		p	1		controllingPlayer
	m	()V	ez	dropEquipment
	m	()Z	f	isSaddleable
	m	()Z	fl	isSensitiveToWater
	m	()V	gk	floatStrider
	m	()Z	i	isSaddled
	m	()V	l	tick
	m	(Lcuq;)Z	n	lambda$registerGoals$0
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Z	s	isSuffocating
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isBeingTempted
	m	(Z)V	x	setSuffocating
		p	1		cold
	f	Lakr;	cc	SUFFOCATING_MODIFIER_ID
	f	Lbuu;	cd	SUFFOCATING_MODIFIER
	f	F	ce	SUFFOCATE_STEERING_MODIFIER
	f	F	cg	STEERING_MODIFIER
	f	Lajw;	ch	DATA_BOOST_TIME
	f	Lajw;	ci	DATA_SUFFOCATING
	f	Lajw;	cj	DATA_SADDLE_ID
	f	Lbti;	ck	steering
	f	Lcbu;	cl	temptGoal
c	ckq$a	net/minecraft/world/entity/monster/EntityStrider$a
	m	(Lckq;D)V	<init>	<init>
		p	1		strider
		p	2		speed
	m	(Ldcz;Ljd;)Z	a	isValidTarget
		p	1		world
		p	2		pos
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Ljd;	k	getMoveToTarget
	m	()Z	l	shouldRecalculatePath
	f	Lckq;	g	strider
c	ckq$b	net/minecraft/world/entity/monster/EntityStrider$b
	m	(Lckq;Ldcw;)V	<init>	<init>
		p	1		entity
		p	2		world
	m	(I)Lepu;	a	createPathFinder
		p	1		range
	m	(Lepv;)Z	a	hasValidPathType
		p	1		pathType
	m	(Ljd;)Z	a	isStableDestination
		p	1		pos
c	ckr	net/minecraft/world/entity/monster/EntityVex
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(IZ)V	a	setVexFlag
		p	1		mask
		p	2		value
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbtp;)V	a	setOwner
		p	1		owner
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lckr;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Z	aW	isFlapping
	m	(I)V	b	setLimitedLife
		p	1		lifeTicks
	m	(Lckr;)Lbzp;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bu	getLightLevelDependentMagicValue
	m	(I)Z	c	getVexFlag
		p	1		mask
	m	(Lckr;)Lbzp;	c	access$200
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lckr;)Layw;	d	access$300
	m	(Lckr;)Layw;	e	access$400
	m	(Lckr;)Layw;	f	access$500
	m	(Lckr;)Layw;	g	access$600
	m	()Ljd;	gk	getBoundOrigin
	m	()Z	gl	isCharging
	m	(Lckr;)Lbzp;	h	access$700
	m	(Ljd;)V	h	setBoundOrigin
		p	1		bounds
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()Lbsr;	s	getOwner
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	(Lbsr;)V	w	restoreFrom
		p	1		original
	m	()Lbtp;	x	getOwner
	m	(Z)V	x	setIsCharging
		p	1		charging
	f	F	b	FLAP_DEGREES_PER_TICK
	f	I	c	TICKS_PER_FLAP
	f	Lbtp;	cc	owner
	f	Ljd;	cd	boundOrigin
	f	Z	ce	hasLimitedLife
	f	I	cf	limitedLifeTicks
	f	Lajw;	d	DATA_FLAGS_ID
	f	I	e	FLAG_IS_CHARGING
c	ckr$a	net/minecraft/world/entity/monster/EntityVex$a
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	f	Lckr;	a	this$0
c	ckr$b	net/minecraft/world/entity/monster/EntityVex$b
	m	(Lckr;Lbtw;)V	<init>	<init>
		p	2		mob
	m	()Z	b	canUse
	m	()V	d	start
	f	Lckr;	a	this$0
	f	Lcef;	b	copyOwnerTargeting
c	ckr$c	net/minecraft/world/entity/monster/EntityVex$c
	m	(Lckr;Lckr;)V	<init>	<init>
		p	2		owner
	m	()V	a	tick
	f	Lckr;	l	this$0
c	ckr$d	net/minecraft/world/entity/monster/EntityVex$d
	m	()V	a	tick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	f	Lckr;	a	this$0
c	cks	net/minecraft/world/entity/monster/EntityVindicator
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbqo;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lcks;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	()Lavo;	ai_	getCelebrateSound
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lwz;)V	b	setCustomName
		p	1		name
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	n_	getDeathSound
	m	()Lcjk$a;	s	getArmPose
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	f	Ljava/lang/String;	b	TAG_JOHNNY
	f	Z	cc	isJohnny
	f	Ljava/util/function/Predicate;	e	DOOR_BREAKING_PREDICATE
c	cks$a	net/minecraft/world/entity/monster/EntityVindicator$a
	m	(Lbtp;)V	<init>	<init>
		p	1		mob
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	cks$b	net/minecraft/world/entity/monster/EntityVindicator$b
	m	(Lcks;)V	<init>	<init>
		p	1		vindicator
	m	()Z	b	canUse
	m	()V	d	start
c	ckt	net/minecraft/world/entity/monster/EntityWitch
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	()Lavo;	ai_	getCelebrateSound
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbrk;F)F	e	getDamageAfterMagicAbsorb
		p	1		source
		p	2		amount
	m	()Z	gl	canBeLeader
	m	(Lbtn;)Z	j	lambda$registerGoals$0
		p	1		entity
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Z	s	isDrinkingPotion
	m	()Lbuv$a;	t	createAttributes
	m	()Lavo;	v	getAmbientSound
	m	(Z)V	z	setUsingItem
		p	1		drinking
	f	Lakr;	b	SPEED_MODIFIER_DRINKING_ID
	f	Lajw;	cc	DATA_USING_ITEM
	f	I	cd	usingTime
	f	Lcch;	ce	healRaidersGoal
	f	Lccg;	cf	attackPlayersGoal
	f	Lbuu;	e	SPEED_MODIFIER_DRINKING
c	cku	net/minecraft/world/entity/monster/EntitySkeletonWither
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lcuq;FLcuq;)Lcnd;	a	getArrow
		p	1		arrow
		p	2		damageModifier
		p	3		shotFrom
	m	(Lddl;Layw;Lbqp;)V	a	populateDefaultEquipmentEnchantments
		p	1		world
		p	2		random
		p	3		localDifficulty
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lbrz;)Z	c	canBeAffected
		p	1		effect
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	t	getStepSound
	m	()Lavo;	v	getAmbientSound
c	ckv	net/minecraft/world/entity/monster/EntityZoglin
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbuq;)V	a	initCoreActivity
		p	0		brain
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbuq;)V	b	initIdleActivity
		p	0		brain
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbuq;)V	c	initFightActivity
		p	0		brain
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(Lbtn;)V	e	blockedByShield
		p	1		target
	m	()I	gk	getAttackAnimationRemainingTicks
	m	()V	gl	playAngrySound
	m	()Ljava/util/Optional;	gm	findNearestValidAttackTarget
	m	(Lbtn;)Z	j	isTargetable
		p	1		entity
	m	(Lbtn;)V	k	setAttackTarget
		p	1		entity
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Z	o_	isBaby
	m	()Lbtn;	p	getTarget
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isAdult
	m	()Lavo;	v	getAmbientSound
	m	()V	x	updateActivity
	m	()Z	y	canBeLeashed
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	I	cc	ATTACK_KNOCKBACK
	f	F	cd	KNOCKBACK_RESISTANCE
	f	I	ce	ATTACK_DAMAGE
	f	F	cf	BABY_ATTACK_DAMAGE
	f	I	cg	ATTACK_INTERVAL
	f	I	ch	BABY_ATTACK_INTERVAL
	f	I	ci	ATTACK_DURATION
	f	F	cj	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	ck	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	cl	attackAnimationRemainingTicks
	f	Lajw;	d	DATA_BABY_ID
	f	I	e	MAX_HEALTH
c	ckw	net/minecraft/world/entity/monster/EntityZombie
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;)V	<init>	<init>
		p	1		world
	m	()V	B	registerGoals
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(F)V	H	handleAttributes
		p	1		chanceMultiplier
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Laqu;Lbtn;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Layw;)Z	a	getSpawnAsBabyOdds
		p	0		random
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbqo;)Z	a	lambda$static$0
		p	0		difficulty
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lckw;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	ag_	doUnderWaterConversion
	m	()Z	ah_	isSunSensitive
	m	(I)V	b	startUnderWaterConversion
		p	1		ticksUntilWaterConversion
	m	(Lbsx;)V	b	convertToZombieType
		p	1		entityType
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()I	eg	getBaseExperienceReward
	m	()Lavo;	gk	getStepSound
	m	()Lcuq;	gl	getSkull
	m	()Z	gm	convertsInWater
	m	()Lbuv$a;	go	createAttributes
	m	()Z	gr	isUnderWaterConverting
	m	()Z	gs	canBreakDoors
	m	()V	gt	randomizeReinforcementsChance
	m	(Lcuq;)Z	j	canHoldItem
		p	1		stack
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	()Z	o_	isBaby
	m	()V	t	addBehaviourGoals
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	supportsBreakDoorGoal
	m	(Z)V	y	setCanBreakDoors
		p	1		canBreakDoors
	f	Lakr;	b	SPEED_MODIFIER_BABY_ID
	f	Lbuu;	c	SPEED_MODIFIER_BABY
	f	I	cc	REINFORCEMENT_ATTEMPTS
	f	I	cd	REINFORCEMENT_RANGE_MAX
	f	I	ce	REINFORCEMENT_RANGE_MIN
	f	Lbuu;	cf	ZOMBIE_REINFORCEMENT_CALLEE_CHARGE
	f	Lakr;	cg	LEADER_ZOMBIE_BONUS_ID
	f	Lakr;	ch	ZOMBIE_RANDOM_SPAWN_BONUS_ID
	f	Lajw;	ci	DATA_BABY_ID
	f	Lajw;	cj	DATA_SPECIAL_TYPE_ID
	f	Lajw;	ck	DATA_DROWNED_CONVERSION_ID
	f	Lbsu;	cl	BABY_DIMENSIONS
	f	F	cm	BREAK_DOOR_CHANCE
	f	Ljava/util/function/Predicate;	cn	DOOR_BREAKING_PREDICATE
	f	Lbzw;	co	breakDoorGoal
	f	Z	cp	canBreakDoors
	f	I	cq	inWaterTime
	f	I	cr	conversionTime
	f	Lakr;	d	REINFORCEMENT_CALLER_CHARGE_ID
	f	F	e	ZOMBIE_LEADER_CHANCE
c	ckw$a	net/minecraft/world/entity/monster/EntityZombie$a
	m	(Lckw;Lbtw;DI)V	<init>	<init>
		p	2		mob
		p	3		speed
		p	5		maxYDifference
	m	(Ldcw;Ljd;)V	a	playBreakSound
		p	1		world
		p	2		pos
	m	(Ldcx;Ljd;)V	a	playDestroyProgressSound
		p	1		world
		p	2		pos
	m	()D	i	acceptedDistance
	f	Lckw;	g	this$0
c	ckw$b	net/minecraft/world/entity/monster/EntityZombie$GroupDataZombie
	m	(ZZ)V	<init>	<init>
		p	1		baby
		p	2		tryChickenJockey
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
c	ckx	net/minecraft/world/entity/monster/EntityZombieVillager
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;)V	a	finishConversion
		p	1		world
	m	(Lcml;)V	a	setVillagerData
		p	1		villagerData
	m	(Ldbv;)V	a	setTradeOffers
		p	1		offerData
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljava/util/UUID;I)V	a	startConverting
		p	1		uuid
		p	2		delay
	m	(Ljm$c;)V	a	lambda$new$0
		p	1		profession
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$1
	m	(Luy;)V	a	setGossips
		p	1		gossipData
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	setVillagerXp
		p	1		xp
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldbv;)V	b	lambda$readAdditionalSaveData$2
		p	1		offerData
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()F	fb	getVoicePitch
	m	()Lavo;	gk	getStepSound
	m	()Lcuq;	gl	getSkull
	m	()Z	gm	convertsInWater
	m	()Z	gu	isConverting
	m	()Lcml;	gv	getVillagerData
	m	()I	gw	getVillagerXp
	m	()I	gx	getConversionProgress
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	l	tick
	m	(Lcuq;)Z	n	lambda$finishConversion$3
		p	0		stack
	m	()Lavo;	n_	getDeathSound
	m	()Lavo;	v	getAmbientSound
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lajw;	c	DATA_CONVERTING_ID
	f	I	cf	VILLAGER_CONVERSION_WAIT_MIN
	f	I	cg	VILLAGER_CONVERSION_WAIT_MAX
	f	I	ch	MAX_SPECIAL_BLOCKS_COUNT
	f	I	ci	SPECIAL_BLOCK_RADIUS
	f	I	cj	villagerConversionTime
	f	Ljava/util/UUID;	ck	conversionStarter
	f	Luy;	cl	gossips
	f	Ldbv;	cm	tradeOffers
	f	I	cn	villagerXp
	f	Lajw;	d	DATA_VILLAGER_DATA
c	cky	net/minecraft/world/entity/monster/EntityPigZombie
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
		p	1		angerTime
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lcky;)V	a	lambda$alertOthers$3
		p	1		zombifiedPiglin
	m	(Lcmx;)Z	a	isPreventingPlayerRest
		p	1		player
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
		p	1		angryAt
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	ab	customServerAiStep
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkZombifiedPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcky;)Z	b	lambda$alertOthers$2
		p	1		zombifiedPiglin
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	c	startPersistentAngerTimer
	m	(Lcky;)Z	c	lambda$alertOthers$1
		p	0		zombifiedPiglin
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcky;)Z	d	lambda$alertOthers$0
		p	1		zombifiedPiglin
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()Lcuq;	gl	getSkull
	m	()Z	gm	convertsInWater
	m	()V	gt	randomizeReinforcementsChance
	m	()Lbuv$a;	gu	createAttributes
	m	()V	gv	maybePlayFirstAngerSound
	m	()V	gw	maybeAlertOthers
	m	()V	gx	alertOthers
	m	()V	gy	playAngerSound
	m	(Lbtn;)V	h	setTarget
		p	1		target
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	()V	t	addBehaviourGoals
	m	()Lavo;	v	getAmbientSound
	f	Lbsu;	c	BABY_DIMENSIONS
	f	Lbuu;	cf	SPEED_MODIFIER_ATTACKING
	f	Lbqc;	cg	FIRST_ANGER_SOUND_DELAY
	f	I	ch	playFirstAngerSoundIn
	f	Lbqc;	ci	PERSISTENT_ANGER_TIME
	f	I	cj	remainingPersistentAngerTime
	f	Ljava/util/UUID;	ck	persistentAngerTarget
	f	I	cl	ALERT_RANGE_Y
	f	Lbqc;	cm	ALERT_INTERVAL
	f	I	cn	ticksUntilNextAlert
	f	Lakr;	d	SPEED_MODIFIER_ATTACKING_ID
c	ckz	net/minecraft/world/entity/monster/breeze/Breeze
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	S	playAmbientSound
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Lbsx;)Z	a	canAttackType
		p	1		type
	m	(Lcnp;)Lcnq;	a	deflection
		p	1		projectile
	m	(Lcnp;Lbsr;Layw;)V	a	lambda$static$0
		p	0		projectile
		p	1		hitEntity
		p	2		random
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()I	ae	getMaxHeadYRot
	m	(I)V	b	emitGroundParticles
		p	1		count
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lexc;)Z	b	withinInnerCircleRange
		p	1		pos
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbsr;)Lbtn;	c	lambda$getHurtBy$2
		p	0		livingAttacker
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsr;)Z	d	lambda$getHurtBy$1
		p	0		attacker
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Lavq;	de	getSoundSource
	m	()D	di	getFluidJumpThreshold
	m	()I	fM	getHeadRotSpeed
	m	()V	gk	playWhirlSound
	m	()Ljava/util/Optional;	gl	getHurtBy
	m	()D	gm	getSnoutYPosition
	m	()V	gn	resetAnimations
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	()Lbtn;	p	getTarget
	m	()Lbuv$a;	s	createAttributes
	m	()Lckz;	t	resetJumpTrail
	m	()Lavo;	v	getAmbientSound
	m	()V	x	emitJumpTrailParticles
	f	Lbsm;	b	idle
	f	Lbsm;	c	slide
	f	Lbsm;	cc	shoot
	f	Lbsm;	cd	inhale
	f	I	ce	SLIDE_PARTICLES_AMOUNT
	f	I	cf	IDLE_PARTICLES_AMOUNT
	f	I	cg	JUMP_DUST_PARTICLES_AMOUNT
	f	I	ch	JUMP_TRAIL_PARTICLES_AMOUNT
	f	I	ci	JUMP_TRAIL_DURATION_TICKS
	f	I	cj	JUMP_CIRCLE_DISTANCE_Y
	f	F	ck	FALL_DISTANCE_SOUND_TRIGGER_THRESHOLD
	f	I	cl	WHIRL_SOUND_FREQUENCY_MIN
	f	I	cm	WHIRL_SOUND_FREQUENCY_MAX
	f	I	cn	jumpTrailStartedTick
	f	I	co	soundTick
	f	Lcnq;	cp	PROJECTILE_DEFLECTION
	f	Lbsm;	d	slideBack
	f	Lbsm;	e	longJump
c	ckz$1	net/minecraft/world/entity/monster/breeze/Breeze$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	cla	net/minecraft/world/entity/monster/breeze/BreezeAi
	m	(Lbuq;)V	a	initCoreActivity
		p	0		brain
	m	(Lckz;)V	a	updateActivity
		p	0		breeze
	m	(Lckz;Lbtn;)Z	a	lambda$initFightActivity$1
	m	(Lckz;Lbuq;)Lbuq;	a	makeBrain
		p	0		breeze
		p	1		brain
	m	(Lbuq;)V	b	initIdleActivity
		p	0		brain
	m	(Lckz;)Ljava/util/Optional;	b	lambda$initIdleActivity$0
		p	0		breeze
	m	(Lckz;Lbuq;)V	b	initFightActivity
		p	0		breeze
		p	1		brain
	f	F	a	SPEED_MULTIPLIER_WHEN_SLIDING
	f	F	b	JUMP_CIRCLE_INNER_RADIUS
	f	F	c	JUMP_CIRCLE_MIDDLE_RADIUS
	f	F	d	JUMP_CIRCLE_OUTER_RADIUS
	f	Ljava/util/List;	e	SENSOR_TYPES
	f	Ljava/util/List;	f	MEMORY_TYPES
c	cla$a	net/minecraft/world/entity/monster/breeze/BreezeAi$a
	m	(II)V	<init>	<init>
		p	1		minRunTime
		p	2		maxRunTime
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtp;J)V	c	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	clb	net/minecraft/world/entity/monster/breeze/BreezeUtil
	m	(Lbtn;Layw;)Lexc;	a	randomPointBehindTarget
		p	0		target
		p	1		random
	m	(Lckz;Lexc;)Z	a	hasLineOfSight
		p	0		breeze
		p	1		pos
	f	D	a	MAX_LINE_OF_SIGHT_TEST_RANGE
c	clc	net/minecraft/world/entity/monster/breeze/LongJump
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;)Z	a	canRun
		p	0		world
		p	1		breeze
	m	(Laqu;Lckz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lbtn;Lexc;)Ljd;	a	snapToSurface
		p	0		breeze
		p	1		pos
	m	(Lckz;)Z	a	isFinishedInhaling
		p	0		breeze
	m	(Lckz;Layw;Lexc;)Ljava/util/Optional;	a	calculateOptimalJumpVector
		p	0		breeze
		p	1		random
		p	2		jumpTarget
	m	(Lckz;Lbtn;)Z	a	outOfAggroRange
		p	0		breeze
		p	1		target
	m	(Lckz;Ljd;)Ljava/util/Optional;	a	lambda$tick$1
		p	1		jumpTarget
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;)Z	b	checkExtraStartConditions
	m	(Laqu;Lckz;J)V	b	start
	m	(Lckz;)Z	b	isFinishedJumping
		p	0		breeze
	m	(Lckz;Lbtn;)Z	b	tooCloseForJump
		p	0		breeze
		p	1		target
	m	(Lckz;Ljd;)V	b	lambda$start$0
		p	1		jumpTarget
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;)Z	c	canJumpFromCurrentPosition
		p	0		world
		p	1		breeze
	m	(Laqu;Lckz;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;J)V	d	stop
	f	I	c	REQUIRED_AIR_BLOCKS_ABOVE
	f	I	d	JUMP_COOLDOWN_TICKS
	f	I	e	JUMP_COOLDOWN_WHEN_HURT_TICKS
	f	I	f	INHALING_DURATION_TICKS
	f	F	g	MAX_JUMP_VELOCITY
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	h	ALLOWED_ANGLES
c	cld	net/minecraft/world/entity/monster/breeze/Shoot
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lckz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Lckz;Lbtn;)Z	a	isFacingTarget
		p	0		breeze
		p	1		target
	m	(Lckz;Ljava/lang/Boolean;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$1
		p	1		withinRange
	m	(Laqu;Lbtn;J)V	b	stop
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;J)V	b	start
	m	(Lckz;Lbtn;)Z	b	isTargetWithinRange
		p	0		breeze
		p	1		target
	m	(Laqu;Lbtn;J)V	c	tick
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;J)V	c	stop
	m	(Lckz;Lbtn;)V	c	lambda$start$2
		p	1		target
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;J)V	d	tick
	m	(Lckz;Lbtn;)Ljava/lang/Boolean;	d	lambda$checkExtraStartConditions$0
		p	1		target
	f	I	c	ATTACK_RANGE_MIN_SQRT
	f	I	d	ATTACK_RANGE_MAX_SQRT
	f	I	e	UNCERTAINTY_BASE
	f	I	f	UNCERTAINTY_MULTIPLIER
	f	F	g	PROJECTILE_MOVEMENT_SCALE
	f	I	h	SHOOT_INITIAL_DELAY_TICKS
	f	I	i	SHOOT_RECOVER_DELAY_TICKS
	f	I	j	SHOOT_COOLDOWN_TICKS
c	cle	net/minecraft/world/entity/monster/breeze/ShootWhenStuck
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lbtn;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lckz;J)Z	a	canStillUse
		p	1		world
		p	2		entity
		p	3		time
	m	(Laqu;Lckz;J)V	b	start
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	clf	net/minecraft/world/entity/monster/breeze/Slide
	m	(Laqu;Lbtn;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lckz;)Z	a	checkExtraStartConditions
		p	1		world
		p	2		entity
	m	(Laqu;Lckz;J)V	a	start
	m	(Lckz;Lbtn;)Lexc;	a	randomPointInMiddleCircle
		p	0		breeze
		p	1		target
	m	(Laqu;Lbtn;J)V	d	start
		p	1		world
		p	2		entity
		p	3		time
c	clh	net/minecraft/world/entity/monster/hoglin/EntityHoglin
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;)V	a	finishConversion
		p	1		word
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	c	checkHoglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Lavq;	de	getSoundSource
	m	(Lbtn;)V	e	blockedByShield
		p	1		target
	m	()Z	ee	shouldDropExperience
	m	()I	eg	getBaseExperienceReward
	m	()I	gk	getAttackAnimationRemainingTicks
	m	()Z	gl	canBeHunted
	m	()Z	gm	isImmuneToZombification
	m	()Z	gp	canFallInLove
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	k	ageBoundaryReached
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	isFood
		p	1		stack
	m	()Lbtn;	p	getTarget
	m	()Lbuv$a;	s	createAttributes
	m	()Z	t	isAdult
	m	()Lavo;	v	getAmbientSound
	m	()Z	x	isConverting
	m	(Z)V	x	setImmuneToZombification
		p	1		immuneToZombification
	m	()Z	y	canBeLeashed
	m	(Z)V	y	setCannotBeHunted
		p	1		cannotBeHunted
	f	Lcom/google/common/collect/ImmutableList;	cc	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cd	MEMORY_TYPES
	f	Lajw;	ce	DATA_IMMUNE_TO_ZOMBIFICATION
	f	F	cg	PROBABILITY_OF_SPAWNING_AS_BABY
	f	I	ch	MAX_HEALTH
	f	F	ci	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cj	ATTACK_KNOCKBACK
	f	F	ck	KNOCKBACK_RESISTANCE
	f	I	cl	ATTACK_DAMAGE
	f	F	cm	BABY_ATTACK_DAMAGE
	f	I	cn	CONVERSION_TIME
	f	I	co	attackAnimationRemainingTicks
	f	I	cp	timeInOverworld
	f	Z	cq	cannotBeHunted
c	cli	net/minecraft/world/entity/monster/hoglin/HoglinAI
	m	()Lbxe;	a	createIdleMovementBehaviors
	m	(Lbtn;Lclh;)V	a	lambda$broadcastAttackTarget$1
		p	1		hoglinx
	m	(Lbuq;)Lbuq;	a	makeBrain
		p	0		brain
	m	(Lclh;)V	a	updateActivity
		p	0		hoglin
	m	(Lclh;Lbtn;)V	a	onHitTarget
		p	0		hoglin
		p	1		target
	m	(Lclh;Lcom;)Lavo;	a	getSoundForActivity
		p	0		hoglin
		p	1		activity
	m	(Lclh;Ljd;)Z	a	isPosNearNearestRepellent
		p	0		hoglin
		p	1		pos
	m	(Lbtn;Lclh;)V	b	lambda$broadcastRetreat$0
		p	1		hoglinx
	m	(Lbuq;)V	b	initCoreActivity
		p	0		brain
	m	(Lclh;)Ljava/util/Optional;	b	getSoundForCurrentActivity
		p	0		hoglin
	m	(Lclh;Lbtn;)V	b	wasHurtBy
		p	0		hoglin
		p	1		attacker
	m	(Lclh;Lcom;)Lavo;	b	lambda$getSoundForCurrentActivity$2
		p	1		activity
	m	(Lbuq;)V	c	initIdleActivity
		p	0		brain
	m	(Lclh;)Z	c	isPacified
		p	0		hoglin
	m	(Lclh;Lbtn;)V	c	broadcastRetreat
		p	0		hoglin
		p	1		target
	m	(Lbuq;)V	d	initFightActivity
		p	0		brain
	m	(Lclh;)Ljava/util/Optional;	d	findNearestValidAttackTarget
		p	0		hoglin
	m	(Lclh;Lbtn;)V	d	retreatFromNearestTarget
		p	0		hoglin
		p	1		target
	m	(Lbuq;)V	e	initRetreatActivity
		p	0		brain
	m	(Lclh;)Z	e	wantsToStopFleeing
		p	0		hoglin
	m	(Lclh;Lbtn;)V	e	setAvoidTarget
		p	0		hoglin
		p	1		target
	m	(Lclh;)Z	f	piglinsOutnumberHoglins
		p	0		hoglin
	m	(Lclh;Lbtn;)V	f	maybeRetaliate
		p	0		hoglin
		p	1		target
	m	(Lclh;)Ljava/util/List;	g	getVisibleAdultHoglins
		p	0		hoglin
	m	(Lclh;Lbtn;)V	g	setAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lclh;)Z	h	isNearRepellent
		p	0		hoglin
	m	(Lclh;Lbtn;)V	h	broadcastAttackTarget
		p	0		hoglin
		p	1		target
	m	(Lclh;)Z	i	isBreeding
		p	0		hoglin
	m	(Lclh;Lbtn;)V	i	setAttackTargetIfCloserThanCurrent
		p	0		hoglin
		p	1		targetCandidate
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbqc;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Lbqc;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
c	clj	net/minecraft/world/entity/monster/hoglin/IOglin
	m	(Lbtn;Lbtn;)Z	a	hurtAndThrowTarget
		p	0		attacker
		p	1		target
	m	(Lbtn;Lbtn;)V	b	throwTarget
		p	0		attacker
		p	1		target
	m	()I	gk	getAttackAnimationRemainingTicks
	f	I	o_	ATTACK_ANIMATION_DURATION
c	clm	net/minecraft/world/entity/monster/piglin/EntityPiglinAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	S	playAmbientSound
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;)V	a	finishConversion
		p	1		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	gk	isConverting
	m	()Z	gl	isAdult
	m	()Lclp;	gm	getArmPose
	m	()Z	gn	isHoldingMeleeWeapon
	m	()V	go	playConvertedSound
	m	()Lbtn;	p	getTarget
	m	()Z	s	canHunt
	m	()Z	t	isImmuneToZombification
	m	()V	x	applyOpenDoorsAbility
	m	(Z)V	x	setImmuneToZombification
		p	1		immuneToZombification
	f	Lajw;	b	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	c	CONVERSION_TIME
	f	I	d	timeInOverworld
c	cln	net/minecraft/world/entity/monster/piglin/EntityPiglin
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	Z	shouldDespawnInPeaceful
	m	()V	a	onCrossbowAttackPerformed
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;)V	a	finishConversion
		p	1		world
	m	(Laqu;Lbrk;Z)V	a	dropCustomDeathLoot
		p	1		world
		p	2		source
		p	3		causedByPlayer
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsr;Z)Z	a	startRiding
		p	1		entity
		p	2		force
	m	(Lbsy;Lcuq;Layw;)V	a	maybeWearArmor
		p	1		slot
		p	2		stack
		p	3		random
	m	(Lbtn;F)V	a	performRangedAttack
		p	1		target
		p	2		pullProgress
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lcvn;)Z	a	canFireProjectileWeapon
		p	1		weapon
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setBaby
		p	1		baby
	m	()V	ab	customServerAiStep
	m	(Lbsr;I)Lbsr;	b	getTopPassenger
		p	1		entity
		p	2		maxLevel
	m	(Lbsx;Ldcx;Lbtr;Ljd;Layw;)Z	b	checkPiglinSpawnRules
		p	0		type
		p	1		world
		p	2		spawnReason
		p	3		pos
		p	4		random
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Lcuq;Lcuq;)Z	b	canReplaceCurrentItem
		p	1		newStack
		p	2		oldStack
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setChargingCrossbow
		p	1		charging
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()I	eg	getBaseExperienceReward
	m	()Lclp;	gm	getArmPose
	m	()V	go	playConvertedSound
	m	()Lbuv$a;	gr	createAttributes
	m	()Z	gs	isDancing
	m	()Lcuq;	gt	createSpawnWeapon
	m	()Z	gu	isChargingCrossbow
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	(Lcuq;)Lcuq;	n	addToInventory
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	canAddToInventory
		p	1		stack
	m	()Z	o_	isBaby
	m	(Lcuq;)V	p	holdInMainHand
		p	1		stack
	m	(Lcuq;)V	q	holdInOffHand
		p	1		stack
	m	(Lcuq;)Z	r	canReplaceCurrentItem
		p	1		stack
	m	()Z	s	canHunt
	m	()Lavo;	v	getAmbientSound
	m	()Lbra;	x	getInventory
	m	(Z)V	y	setDancing
		p	1		dancing
	m	(Z)V	z	setCannotHunt
		p	1		cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	cc	MEMORY_TYPES
	f	Lajw;	cd	DATA_BABY_ID
	f	Lajw;	ce	DATA_IS_CHARGING_CROSSBOW
	f	Lajw;	cf	DATA_IS_DANCING
	f	Lakr;	cg	SPEED_MODIFIER_BABY_ID
	f	Lbuu;	ch	SPEED_MODIFIER_BABY
	f	I	ci	MAX_HEALTH
	f	F	cj	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	ck	ATTACK_DAMAGE
	f	F	cl	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	cm	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	cn	PROBABILITY_OF_SPAWNING_AS_BABY
	f	Lbsu;	co	BABY_DIMENSIONS
	f	D	cp	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Lbra;	cq	inventory
	f	Z	cr	cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	clo	net/minecraft/world/entity/monster/piglin/PiglinAI
	m	()Lcom/google/common/collect/ImmutableList;	a	createLookBehaviors
	m	(Lbsx;)Z	a	isZombified
		p	0		entityType
	m	(Lbtn;)Z	a	isWearingGold
		p	0		entity
	m	(Lbtn;Lbtn;)Z	a	wantsToDance
		p	0		piglin
		p	1		target
	m	(Lbtn;Lbuq;Lbtn;)V	a	lambda$wasHurtBy$6
		p	2		avoiding
	m	(Lbtn;Lclm;)V	a	lambda$broadcastRetreat$13
		p	1		piglinx
	m	(Lbuq;)V	a	initCoreActivity
		p	0		piglin
	m	(Lbxh$a;Lbtn;)Z	a	lambda$babySometimesRideBabyHoglin$8
		p	1		entity
	m	(Lcjh;)Lcuq;	a	removeOneItemFromItemEntity
		p	0		stack
	m	(Lclm;)V	a	broadcastUniversalAnger
		p	0		piglin
	m	(Lclm;Lbtn;)V	a	maybeRetaliate
		p	0		piglin
		p	1		target
	m	(Lclm;Lcmx;)V	a	lambda$broadcastUniversalAnger$10
		p	1		player
	m	(Lcln;)V	a	updateActivity
		p	0		piglin
	m	(Lcln;Layw;)V	a	initMemories
		p	0		piglin
		p	1		random
	m	(Lcln;Lbsr;)Z	a	wantsToStopRiding
		p	0		piglin
		p	1		ridden
	m	(Lcln;Lbtn;)V	a	wasHurtBy
		p	0		piglin
		p	1		attacker
	m	(Lcln;Lbuq;)Lbuq;	a	makeBrain
		p	0		piglin
		p	1		brain
	m	(Lcln;Lcjh;)V	a	pickUpItem
		p	0		piglin
		p	1		drop
	m	(Lcln;Lcmx;Lbqq;)Lbqr;	a	mobInteract
		p	0		piglin
		p	1		player
		p	2		hand
	m	(Lcln;Lcmx;Ljava/util/List;)V	a	throwItemsTowardPlayer
		p	0		piglin
		p	1		player
		p	2		items
	m	(Lcln;Lcom;)Lavo;	a	getSoundForActivity
		p	0		piglin
		p	1		activity
	m	(Lcln;Lcuq;)Z	a	wantsToPickup
		p	0		piglin
		p	1		stack
	m	(Lcln;Ljava/util/List;)V	a	throwItems
		p	0		piglin
		p	1		items
	m	(Lcln;Ljava/util/List;Lexc;)V	a	throwItemsTowardPos
		p	0		piglin
		p	1		items
		p	2		pos
	m	(Lcln;Z)V	a	stopHoldingOffHandItem
		p	0		piglin
		p	1		barter
	m	(Lcmx;Lcln;)V	a	lambda$angerNearbyPiglins$5
		p	1		piglin
	m	(Lcmx;Z)V	a	angerNearbyPiglins
		p	0		player
		p	1		blockOpen
	m	(Lcuq;)Z	a	isLovedItem
		p	0		stack
	m	(ZLcmx;Lcln;)Z	a	lambda$angerNearbyPiglins$4
		p	2		piglin
	m	()Lbxe;	b	createIdleLookBehaviors
	m	(Lbtn;)Z	b	isPlayerHoldingLovedItem
		p	0		target
	m	(Lbtn;Lbtn;)Z	b	lambda$isNearestValidAttackTarget$3
		p	1		preferredTarget
	m	(Lbtn;Lclm;)V	b	lambda$broadcastAngerTarget$9
		p	1		nearbyPiglin
	m	(Lbuq;)V	b	initIdleActivity
		p	0		piglin
	m	(Lclm;)Ljava/util/Optional;	b	getNearestVisibleTargetablePlayer
		p	0		piglin
	m	(Lclm;Lbtn;)V	b	broadcastAngerTarget
		p	0		piglin
		p	1		target
	m	(Lcln;)V	b	cancelAdmiring
		p	0		piglin
	m	(Lcln;Lbtn;)Z	b	isNearestValidAttackTarget
		p	0		piglin
		p	1		target
	m	(Lcln;Lbuq;)V	b	initFightActivity
		p	0		piglin
		p	1		brain
	m	(Lcln;Lcom;)Lavo;	b	lambda$getSoundForCurrentActivity$7
		p	1		activity
	m	(Lcln;Lcuq;)Z	b	canAdmire
		p	0		piglin
		p	1		nearbyItems
	m	(Lcln;Ljava/util/List;)V	b	throwItemsTowardRandomPos
		p	0		piglin
		p	1		items
	m	(Lcuq;)Z	b	isBarterCurrency
		p	0		stack
	m	()Lbxe;	c	createIdleMovementBehaviors
	m	(Lbtn;)Z	c	hasCrossbow
		p	0		piglin
	m	(Lbuq;)V	c	initCelebrateActivity
		p	0		brain
	m	(Lclm;)V	c	dontKillAnyMoreHoglinsForAWhile
		p	0		piglin
	m	(Lclm;Lbtn;)V	c	setAngerTarget
		p	0		piglin
		p	1		target
	m	(Lcln;)Ljava/util/Optional;	c	getSoundForCurrentActivity
		p	0		piglin
	m	(Lcln;Lbtn;)V	c	broadcastRetreat
		p	0		piglin
		p	1		target
	m	(Lcln;Lcuq;)V	c	holdInOffhand
		p	0		piglin
		p	1		stack
	m	(Lcuq;)Z	c	isFood
		p	0		stack
	m	()Lbvi;	d	avoidRepellent
	m	(Lbtn;)V	d	admireGoldItem
		p	0		entity
	m	(Lbuq;)V	d	initAdmireItemActivity
		p	0		brain
	m	(Lclm;)Z	d	isIdle
		p	0		piglin
	m	(Lclm;Lbtn;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
		p	0		piglin
		p	1		player
	m	(Lcln;)Ljava/util/List;	d	getVisibleAdultPiglins
		p	0		piglin
	m	(Lcln;Lbtn;)V	d	retreatFromNearestTarget
		p	0		piglin
		p	1		target
	m	(Lcln;Lcuq;)V	d	putInInventory
		p	0		piglin
		p	1		stack
	m	()Lbvi;	e	babyAvoidNemesis
	m	(Lbtn;)Z	e	seesPlayerHoldingLovedItem
		p	0		entity
	m	(Lbuq;)V	e	initRetreatActivity
		p	0		brain
	m	(Lclm;)Ljava/util/List;	e	getAdultPiglins
		p	0		piglin
	m	(Lclm;Lbtn;)V	e	setAngerTargetIfCloserThanCurrent
		p	0		piglin
		p	1		target
	m	(Lcln;)Ljava/util/Optional;	e	getAvoidTarget
		p	0		piglin
	m	(Lcln;Lbtn;)V	e	setAvoidTargetAndDontHuntForAWhile
		p	0		piglin
		p	1		target
	m	()Lbvi;	f	avoidZombified
	m	(Lbtn;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
		p	0		piglin
	m	(Lbuq;)V	f	initRideHoglinActivity
		p	0		brain
	m	(Lclm;)Ljava/util/Optional;	f	getAngerTarget
		p	0		piglin
	m	(Lcln;)Z	f	isBabyRidingBaby
		p	0		piglin
	m	(Lcln;Lbtn;)Z	f	lambda$initFightActivity$0
		p	1		target
	m	()Lbvi;	g	babySometimesRideBabyHoglin
	m	(Lbtn;)Z	g	wasHurtRecently
		p	0		piglin
	m	(Lclm;)Z	g	lambda$broadcastRetreat$12
		p	0		nearbyVisiblePiglin
	m	(Lcln;)Ljava/util/List;	g	getBarterResponseItems
		p	0		piglin
	m	(Lclm;)V	h	lambda$broadcastUniversalAnger$11
		p	0		nearbyPiglin
	m	(Lcln;)Z	h	isNearZombified
		p	0		piglin
	m	(Lcln;)Ljava/util/Optional;	i	findNearestValidAttackTarget
		p	0		piglin
	m	(Lcln;)Z	j	isNearAvoidTarget
		p	0		piglin
	m	(Lcln;)V	k	stopWalking
		p	0		piglin
	m	(Lcln;)Z	l	wantsToStopFleeing
		p	0		piglin
	m	(Lcln;)Z	m	piglinsEqualOrOutnumberHoglins
		p	0		piglin
	m	(Lcln;)Z	n	hoglinsOutnumberPiglins
		p	0		piglins
	m	(Lcln;)V	o	eat
		p	0		piglin
	m	(Lcln;)Lexc;	p	getRandomNearbyPos
		p	0		piglin
	m	(Lcln;)Z	q	hasEatenRecently
		p	0		piglin
	m	(Lcln;)Z	r	isAdmiringItem
		p	0		entity
	m	(Lcln;)Z	s	isNearRepellent
		p	0		piglin
	m	(Lcln;)Z	t	isAdmiringDisabled
		p	0		piglin
	m	(Lcln;)Z	u	isHoldingItemInOffHand
		p	0		piglin
	m	(Lcln;)Z	v	isNotHoldingLovedItemInOffHand
		p	0		piglin
	m	(Lcln;)Z	w	lambda$initRideHoglinActivity$2
	m	(Lcln;)Z	x	lambda$initCelebrateActivity$1
		p	0		piglin
	f	Lbqc;	A	AVOID_ZOMBIFIED_DURATION
	f	Lbqc;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lcul;	c	BARTERING_ITEM
	f	Lbqc;	d	TIME_BETWEEN_HUNTS
	f	I	e	PLAYER_ANGER_RANGE
	f	I	f	ANGER_DURATION
	f	I	g	ADMIRE_DURATION
	f	I	h	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	i	MAX_TIME_TO_WALK_TO_ITEM
	f	I	j	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	k	CELEBRATION_TIME
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Lbqc;	o	RIDE_START_INTERVAL
	f	Lbqc;	p	RIDE_DURATION
	f	Lbqc;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
c	clp	net/minecraft/world/entity/monster/piglin/EntityPiglinArmPose
	m	()[Lclp;	a	$values
	f	Lclp;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lclp;	b	CROSSBOW_HOLD
	f	Lclp;	c	CROSSBOW_CHARGE
	f	Lclp;	d	ADMIRING_ITEM
	f	Lclp;	e	DANCING
	f	Lclp;	f	DEFAULT
	f	[Lclp;	g	$VALUES
c	clq	net/minecraft/world/entity/monster/piglin/EntityPiglinBrute
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Layw;Lbqp;)V	a	populateDefaultEquipmentSlots
		p	1		random
		p	2		localDifficulty
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	()V	ab	customServerAiStep
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	()Lclp;	gm	getArmPose
	m	()V	go	playConvertedSound
	m	()V	gr	playAngrySound
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()Lavo;	n_	getDeathSound
	m	()Z	s	canHunt
	m	()Lavo;	v	getAmbientSound
	m	()Lbuv$a;	x	createAttributes
	f	Lcom/google/common/collect/ImmutableList;	cc	MEMORY_TYPES
	f	I	cd	MAX_HEALTH
	f	F	ce	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cf	ATTACK_DAMAGE
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
c	clr	net/minecraft/world/entity/monster/piglin/PiglinBruteAI
	m	()Lbxe;	a	createIdleLookBehaviors
	m	(Lbtn;Lbtn;)Z	a	lambda$isNearestValidAttackTarget$1
		p	1		target
	m	(Lclm;)Ljava/util/Optional;	a	findNearestValidAttackTarget
		p	0		piglin
	m	(Lclm;Lbtn;)Z	a	isNearestValidAttackTarget
		p	0		piglin
		p	1		entity
	m	(Lclm;Lccs;)Ljava/util/Optional;	a	getTargetIfWithinRange
		p	0		piglin
		p	1		targetMemoryModule
	m	(Lclq;)V	a	initMemories
		p	0		piglinBrute
	m	(Lclq;Lbtn;)V	a	wasHurtBy
		p	0		piglinBrute
		p	1		target
	m	(Lclq;Lbuq;)Lbuq;	a	makeBrain
		p	0		piglinBrute
		p	1		brain
	m	(Lclq;Lcom;)V	a	lambda$playActivitySound$3
		p	1		activity
	m	()Lbxe;	b	createIdleMovementBehaviors
	m	(Lclm;Lbtn;)Z	b	lambda$getTargetIfWithinRange$2
		p	1		target
	m	(Lclq;)V	b	updateActivity
		p	0		piglinBrute
	m	(Lclq;Lbtn;)V	b	setAngerTarget
		p	0		piglinBrute
		p	1		target
	m	(Lclq;Lbuq;)V	b	initCoreActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lclq;)V	c	maybePlayActivitySound
		p	0		piglinBrute
	m	(Lclq;Lbtn;)Z	c	lambda$initFightActivity$0
		p	1		entity
	m	(Lclq;Lbuq;)V	c	initIdleActivity
		p	0		piglinBrute
		p	1		brain
	m	(Lclq;)V	d	playActivitySound
		p	0		piglinBrute
	m	(Lclq;Lbuq;)V	d	initFightActivity
		p	0		piglinBrute
		p	1		brain
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	D	f	TARGETING_RANGE
	f	F	g	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	h	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	i	HOME_TOO_FAR_DISTANCE
	f	I	j	HOME_STROLL_AROUND_DISTANCE
c	cls	net/minecraft/world/entity/monster/piglin/BehaviorRememberHuntedHoglin
	m	()Lbvi;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	1		attackTarget
		p	2		huntedRecently
	m	(Lbyu$b;Lbyv;Lbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	3		world
		p	4		entity
		p	5		time
c	clt	net/minecraft/world/entity/monster/piglin/BehaviorStartAdmiringItem
	m	(I)Lbvi;	a	create
		p	0		duration
	m	(ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbyu$b;ILbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	2		nearestVisibleWantedItem
		p	3		admiringItem
		p	4		admiringDisabled
		p	5		disableWalkToAdmireItem
	m	(Lbyu$b;Lbyv;Lbyv;ILaqu;Lbtn;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	clu	net/minecraft/world/entity/monster/piglin/BehaviorHuntHoglin
	m	()Lbws;	a	create
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
		p	0		context
	m	(Lbyu$b;Lbyv;Lbyv;Laqu;Lcln;J)Z	a	lambda$create$2
		p	3		world
		p	4		entity
		p	5		time
	m	(Lbyu$b;Lbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$3
		p	1		nearestVisibleHuntableHoglin
		p	2		angryAt
		p	3		huntedRecently
		p	4		nearestVisibleAdultPiglins
	m	(Lclm;)Z	a	hasHuntedRecently
		p	0		piglin
	m	(Ljava/util/List;)V	a	lambda$create$1
		p	0		piglin
	m	(Ljava/util/List;)Ljava/lang/Boolean;	b	lambda$create$0
		p	0		piglin
c	clv	net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiringItem
	m	(I)Lbvi;	a	create
		p	0		range
	m	(ILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	1		context
	m	(Lbyu$b;ILbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	2		admiringItem
		p	3		nearestVisibleWantedItem
	m	(Lbyu$b;Lbyv;ILbyv;Laqu;Lbtn;J)Z	a	lambda$create$0
		p	4		world
		p	5		entity
		p	6		time
c	clw	net/minecraft/world/entity/monster/piglin/BehaviorAdmireTimeout
	m	(II)Lbvi;	a	create
		p	0		cooldown
		p	1		timeLimit
	m	(IILbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	2		context
	m	(Lbyu$b;IILbyv;Lbyv;Lbyv;Lbyv;)Lbyx;	a	lambda$create$1
		p	3		admiringItem
		p	4		nearestVisibleWantedItem
		p	5		timeTryingToReachAdmireItem
		p	6		disableWalkToAdmireItem
	m	(Lbyu$b;Lbyv;ILbyv;Lbyv;ILaqu;Lbtn;J)Z	a	lambda$create$0
		p	6		world
		p	7		entity
		p	8		time
c	clx	net/minecraft/world/entity/monster/piglin/BehaviorStopAdmiring
	m	()Lbvi;	a	create
	m	(Laqu;Lcln;J)Z	a	lambda$create$0
		p	0		world
		p	1		entity
		p	2		time
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
		p	0		context
	m	(Lbyv;)Lbyx;	a	lambda$create$1
		p	0		admiringItem
c	clz	net/minecraft/world/entity/monster/warden/AngerLevel
	m	(Ljava/lang/String;IILavo;Lavo;)V	<init>	<init>
		p	3		threshold
		p	4		sound
		p	5		listeningSound
	m	()I	a	getMinimumAnger
	m	(I)Lclz;	a	byAnger
		p	0		anger
	m	(Lclz;Lclz;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	([Lclz;)V	a	lambda$static$1
		p	0		values
	m	()Lavo;	b	getAmbientSound
	m	()Lavo;	c	getListeningSound
	m	()Z	d	isAngry
	m	()[Lclz;	e	$values
	f	Lclz;	a	CALM
	f	Lclz;	b	AGITATED
	f	Lclz;	c	ANGRY
	f	[Lclz;	d	SORTED_LEVELS
	f	I	e	minimumAnger
	f	Lavo;	f	ambientSound
	f	Lavo;	g	listeningSound
	f	[Lclz;	h	$VALUES
c	cma	net/minecraft/world/entity/monster/warden/AngerManagement
	m	(Ljava/util/function/Predicate;Ljava/util/List;)V	<init>	<init>
		p	1		suspectPredicate
		p	2		suspectUuidsToAngerLevel
	m	()Ljava/util/Optional;	a	getActiveEntity
	m	(ILbsr;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$increaseAnger$6
		p	1		suspect
		p	2		anger
	m	(Laqu;)V	a	convertFromUuids
		p	1		world
	m	(Laqu;Ljava/util/function/Predicate;)V	a	tick
		p	1		world
		p	2		suspectPredicate
	m	(Lbsr;)V	a	clearAnger
		p	1		entity
	m	(Lbsr;I)I	a	increaseAnger
		p	1		entity
		p	2		amount
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$3
		p	1		suspect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createUuidAngerPairs$5
		p	0		suspect
	m	(Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		suspectPredicate
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	1		instance
	m	(Ljava/util/function/Predicate;Ljava/util/List;)Lcma;	a	lambda$codec$1
		p	1		suspectUuidsToAngerLevel
	m	()Ljava/util/List;	b	createUuidAngerPairs
	m	(Lbsr;)I	b	getActiveAnger
		p	1		entity
	m	()V	c	sortAndUpdateHighestAnger
	m	(Lbsr;)Lbtn;	c	lambda$getActiveEntity$8
		p	0		suspect
	m	()Lbsr;	d	getTopSuspect
	m	(Lbsr;)Z	d	lambda$getActiveEntity$7
		p	0		suspect
	m	(Lbsr;)Lcom/mojang/datafixers/util/Pair;	e	lambda$createUuidAngerPairs$4
		p	1		suspect
	f	I	a	CONVERSION_DELAY
	f	I	b	MAX_ANGER
	f	Ljava/util/ArrayList;	c	suspects
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	angerBySuspect
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	angerByUuid
	f	I	f	DEFAULT_ANGER_DECREASE
	f	I	g	conversionDelay
	f	I	h	highestAnger
	f	Lcom/mojang/serialization/Codec;	i	SUSPECT_ANGER_PAIR
	f	Ljava/util/function/Predicate;	j	filter
	f	Lcma$a;	k	suspectSorter
c	cma$1	net/minecraft/world/entity/monster/warden/AngerManagement$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
c	cma$a	net/minecraft/world/entity/monster/warden/AngerManagement$a
	m	()Lcma;	a	angerManagement
	m	(Lbsr;Lbsr;)I	a	compare
	f	Lcma;	a	angerManagement
c	cmb	net/minecraft/world/entity/monster/warden/Warden
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsr;)Z	D	doHurtTarget
		p	1		target
	m	(Lbsr;)V	E	doPush
		p	1		entity
	m	(F)F	H	getTendrilAnimation
		p	1		tickDelta
	m	(F)F	I	getHeartAnimation
		p	1		tickDelta
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Laqu;Lexc;Lbsr;I)V	a	applyDarknessAround
		p	0		world
		p	1		pos
		p	2		entity
		p	3		range
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsm;)V	a	clientDiggingParticles
		p	1		animationState
	m	(Lbsr;IZ)V	a	increaseAngerAt
		p	1		entity
		p	2		amount
		p	3		listening
	m	(Lcma;)V	a	lambda$readAdditionalSaveData$5
		p	1		angerManager
	m	(Lcmb;)Lbuq;	a	access$000
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Ldco;)Z	a	ignoreExplosion
		p	1		explosion
	m	(Ldcz;)Z	a	checkSpawnObstruction
		p	1		world
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Ldyi$a;)V	a	lambda$readAdditionalSaveData$7
		p	1		listenerData
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
		p	1		callback
	m	(Ljd;Ldcz;)F	a	getWalkTargetValue
		p	1		pos
		p	2		world
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$3
		p	1		listenerData
	m	()F	aP	nextStep
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Ldcw;)Lcda;	b	createNavigation
		p	1		world
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	b	lambda$addAdditionalSaveData$1
		p	1		angerNbt
	m	()Z	bB	isPushable
	m	()Z	bd	dampensVibrations
	m	(Lbsr;)Z	c	canTargetEntity
		p	1		entity
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsr;)V	d	clearAnger
		p	1		entity
	m	(Ljava/lang/String;)V	d	lambda$readAdditionalSaveData$6
	m	()Lbuq;	dT	getBrain
	m	(Lbsr;)V	e	increaseAngerAt
		p	1		entity
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	(Ljava/lang/String;)V	e	lambda$readAdditionalSaveData$4
	m	(Ljava/lang/String;)V	f	lambda$addAdditionalSaveData$2
	m	()Z	fK	canDisableShield
	m	()F	fa	getSoundVolume
	m	(Ljava/lang/String;)V	g	lambda$addAdditionalSaveData$0
	m	()Ljava/util/Optional;	gk	getEntityAngryAt
	m	()Lcma;	gl	getAngerManagement
	m	()Ldyi$a;	gm	getVibrationData
	m	()Ldyi$d;	gn	getVibrationUser
	m	()Z	go	isDiggingOrEmerging
	m	()V	gr	syncClientAngerLevel
	m	()I	gs	getHeartBeatDelay
	m	()V	gt	playListeningSound
	m	()I	gu	getActiveAnger
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lbtn;)V	j	setAttackTarget
		p	1		target
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lbsr;)Z	o	canRide
		p	1		entity
	m	()Lbtn;	p	getTarget
	m	()Lbuv$a;	s	createAttributes
	m	()I	t	getClientAngerLevel
	m	()Lavo;	v	getAmbientSound
	m	()Lclz;	x	getAngerLevel
	f	Lbsm;	b	roarAnimationState
	f	I	cA	PROJECTILE_ANGER_DISTANCE
	f	I	cB	tendrilAnimation
	f	I	cD	tendrilAnimationO
	f	I	cE	heartAnimation
	f	I	cF	heartAnimationO
	f	Ldxw;	cG	dynamicGameEventListener
	f	Ldyi$d;	cH	vibrationUser
	f	Ldyi$a;	cI	vibrationData
	f	Lcma;	cJ	angerManagement
	f	Lbsm;	c	sniffAnimationState
	f	Lbsm;	cc	attackAnimationState
	f	Lbsm;	cd	sonicBoomAnimationState
	f	Lorg/slf4j/Logger;	ce	LOGGER
	f	I	cf	VIBRATION_COOLDOWN_TICKS
	f	I	cg	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	f	I	ch	MAX_HEALTH
	f	F	ci	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cj	KNOCKBACK_RESISTANCE
	f	F	ck	ATTACK_KNOCKBACK
	f	I	cl	ATTACK_DAMAGE
	f	Lajw;	cm	CLIENT_ANGER_LEVEL
	f	I	cn	DARKNESS_DISPLAY_LIMIT
	f	I	co	DARKNESS_DURATION
	f	I	cp	DARKNESS_RADIUS
	f	I	cq	DARKNESS_INTERVAL
	f	I	cr	ANGERMANAGEMENT_TICK_DELAY
	f	I	cs	DEFAULT_ANGER
	f	I	ct	PROJECTILE_ANGER
	f	I	cu	ON_HURT_ANGER_BOOST
	f	I	cv	RECENT_PROJECTILE_TICK_THRESHOLD
	f	I	cw	TOUCH_COOLDOWN_TICKS
	f	I	cx	DIGGING_PARTICLES_AMOUNT
	f	F	cy	DIGGING_PARTICLES_DURATION
	f	F	cz	DIGGING_PARTICLES_OFFSET
	f	Lbsm;	d	emergeAnimationState
	f	Lbsm;	e	diggingAnimationState
c	cmb$1	net/minecraft/world/entity/monster/warden/Warden$1
	m	(Lcmb;Lbtp;Ldcw;)V	<init>	<init>
		p	2		entity
		p	3		world
	m	(I)Lepu;	a	createPathFinder
		p	1		range
c	cmb$1$1	net/minecraft/world/entity/monster/warden/Warden$1$1
	m	(Lcmb$1;Lepr;I)V	<init>	<init>
		p	2		pathNodeMaker
		p	3		range
	m	(Lepq;Lepq;)F	a	distance
		p	1		a
		p	2		b
c	cmb$2	net/minecraft/world/entity/monster/warden/Warden$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
c	cmb$a	net/minecraft/world/entity/monster/warden/Warden$a
	m	()I	a	getListenerRadius
	m	(Laqu;Ljd;Ljm;Lbsr;Lbsr;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldyd;	b	getPositionSource
	m	()Lawu;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	f	Lcmb;	a	this$0
	f	I	b	GAME_EVENT_LISTENER_RANGE
	f	Ldyd;	c	positionSource
c	cmc	net/minecraft/world/entity/monster/warden/WardenAi
	m	(Lbtn;)V	a	setDigCooldown
		p	0		warden
	m	(Lbtn;Lbtn;)Z	a	lambda$isTarget$5
		p	1		entityx
	m	(Lbuq;)V	a	initCoreActivity
		p	0		brain
	m	(Lbyu$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		context
	m	(Lbyu$b;Lbyv;)Lbyx;	a	lambda$static$1
		p	1		digCooldown
	m	(Lbyu$b;Lbyv;Laqu;Lcmb;J)Z	a	lambda$static$0
		p	2		world
		p	3		entity
		p	4		time
	m	(Lcmb;)V	a	updateActivity
		p	0		warden
	m	(Lcmb;Lbtn;)Z	a	isTarget
		p	0		warden
		p	1		entity
	m	(Lcmb;Lbuq;)V	a	initFightActivity
		p	0		warden
		p	1		brain
	m	(Lcmb;Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	0		warden
		p	1		dynamic
	m	(Lcmb;Ljd;)V	a	setDisturbanceLocation
		p	0		warden
		p	1		pos
	m	(Lbuq;)V	b	initEmergeActivity
		p	0		brain
	m	(Lcmb;Lbtn;)V	b	onTargetInvalid
		p	0		warden
		p	1		suspect
	m	(Lbuq;)V	c	initDiggingActivity
		p	0		brain
	m	(Lcmb;Lbtn;)Z	c	lambda$initFightActivity$4
		p	1		entity
	m	(Lbuq;)V	d	initIdleActivity
		p	0		brain
	m	(Lcmb;Lbtn;)Z	d	lambda$initFightActivity$3
		p	1		entity
	m	(Lbuq;)V	e	initInvestigateActivity
		p	0		brain
	m	(Lbuq;)V	f	initSniffingActivity
		p	0		brain
	m	(Lbuq;)V	g	initRoarActivity
		p	0		brain
	f	I	a	EMERGE_DURATION
	f	I	b	ROAR_DURATION
	f	I	c	DIGGING_COOLDOWN
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	e	SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f	F	f	SPEED_MULTIPLIER_WHEN_FIGHTING
	f	I	g	MELEE_ATTACK_COOLDOWN
	f	I	h	DIGGING_DURATION
	f	I	i	SNIFFING_DURATION
	f	I	j	DISTURBANCE_LOCATION_EXPIRY_TIME
	f	Ljava/util/List;	k	SENSOR_TYPES
	f	Ljava/util/List;	l	MEMORY_TYPES
	f	Lbvi;	m	DIG_COOLDOWN_SETTER
c	cmd	net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	m	(III)V	<init>	<init>
		p	1		ticksSinceLastWarning
		p	2		warningLevel
		p	3		cooldownTicks
	m	()V	a	tick
	m	(I)V	a	setWarningLevel
		p	1		warningLevel
	m	(Laqu;Ljd;)Z	a	hasNearbyWarden
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;Laqv;)Ljava/util/OptionalInt;	a	tryWarn
		p	0		world
		p	1		pos
		p	2		player
	m	(Laqv;)Ljava/util/stream/Stream;	a	lambda$tryWarn$5
		p	0		playerx
	m	(Lcmd;)V	a	copyData
		p	1		other
	m	(Lcmd;Laqv;)V	a	lambda$tryWarn$7
		p	1		nearbyPlayer
	m	(Lcmd;Lcmd;)V	a	lambda$tryWarn$6
		p	1		warningManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lexc;Laqv;)Z	a	lambda$getNearbyPlayers$8
		p	1		player
	m	()V	b	reset
	m	(Laqu;Ljd;)Ljava/util/List;	b	getNearbyPlayers
		p	0		world
		p	1		pos
	m	(Laqv;)Z	b	lambda$tryWarn$4
		p	0		nearbyPlayer
	m	(Lcmd;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		manager
	m	()I	c	getWarningLevel
	m	(Lcmd;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		manager
	m	()Z	d	onCooldown
	m	(Lcmd;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		manager
	m	()V	e	increaseWarningLevel
	m	()V	f	decreaseWarningLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WARNING_LEVEL
	f	D	c	PLAYER_SEARCH_RADIUS
	f	I	d	WARNING_CHECK_DIAMETER
	f	I	e	DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f	I	f	WARNING_LEVEL_INCREASE_COOLDOWN
	f	I	g	ticksSinceLastWarning
	f	I	h	warningLevel
	f	I	i	cooldownTicks
c	cmf	net/minecraft/world/entity/npc/EntityVillagerAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lcmx;)V	a	setTradingPlayer
		p	1		customer
	m	(Ldbu;)V	a	notifyTrade
		p	1		offer
	m	(Ldbv;)V	a	overrideOffers
		p	1		offers
	m	(Ldbv;[Lcmo$g;I)V	a	addOffersFromItemListings
		p	1		recipeList
		p	2		pool
		p	3		count
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Leqc;)Lbsr;	a	changeDimension
		p	1		teleportTarget
	m	(Llk;)V	a	addParticlesAroundSelf
		p	1		parameters
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(Ldbu;)V	b	rewardTradeXp
		p	1		offer
	m	(Ldbv;)V	b	lambda$readAdditionalSaveData$0
		p	1		offers
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcmx;	gk	getTradingPlayer
	m	()Z	gl	isTrading
	m	()Ldbv;	gm	getOffers
	m	()Z	gn	showProgressBar
	m	()Lavo;	go	getNotifyTradeSound
	m	()V	gp	playCelebrateSound
	m	()V	gq	stopTrading
	m	()V	gr	updateTrades
	m	()Z	gs	isClientSide
	m	(Lcuq;)V	n	notifyTradeUpdated
		p	1		stack
	m	()I	s	getUnhappyCounter
	m	(F)Lexc;	s	getRopeHoldPosition
		p	1		delta
	m	(I)V	s	setUnhappyCounter
		p	1		ticks
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
	m	()Lbra;	x	getInventory
	m	(Z)Lavo;	x	getTradeUpdatedSound
		p	1		sold
	m	()Z	y	canBeLeashed
	f	I	cc	VILLAGER_SLOT_OFFSET
	f	Ldbv;	cd	offers
	f	Lajw;	ce	DATA_UNHAPPY_COUNTER
	f	Lorg/slf4j/Logger;	cf	LOGGER
	f	I	cg	VILLAGER_INVENTORY_SIZE
	f	Lcmx;	ch	tradingPlayer
	f	Lbra;	ci	inventory
c	cmg	net/minecraft/world/entity/npc/MobSpawnerCat
	m	(Laqu;Ljd;)I	a	spawnInVillage
		p	1		world
		p	2		pos
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Ljd;Laqu;)I	a	spawnCat
		p	1		pos
		p	2		world
	m	(Ljm;)Z	a	lambda$spawnInVillage$0
		p	0		entry
	m	(Laqu;Ljd;)I	b	spawnInHut
		p	1		world
		p	2		pos
	f	I	a	TICK_DELAY
	f	I	b	nextTick
c	cmh	net/minecraft/world/entity/npc/MerchantWrapper
	m	(Lcmx;)V	<init>	<init>
		p	1		player
	m	(Lcmx;)V	a	setTradingPlayer
		p	1		customer
	m	(Ldbu;)V	a	notifyTrade
		p	1		offer
	m	(Ldbv;)V	a	overrideOffers
		p	1		offers
	m	()Lcmx;	gk	getTradingPlayer
	m	()Ldbv;	gm	getOffers
	m	()Z	gn	showProgressBar
	m	()Lavo;	go	getNotifyTradeSound
	m	()Z	gs	isClientSide
	m	(Lcuq;)V	n	notifyTradeUpdated
		p	1		stack
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
	f	Lcmx;	a	source
	f	Ldbv;	b	offers
	f	I	c	xp
c	cmi	net/minecraft/world/entity/npc/InventoryCarrier
	m	(Lbtp;Lcmi;Lcjh;)V	a	pickUpItem
		p	0		entity
		p	1		inventoryOwner
		p	2		item
	m	(Lub;Ljo$a;)V	a	readInventoryFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	b	writeInventoryToTag
		p	1		nbt
	m	()Lbra;	x	getInventory
	f	Ljava/lang/String;	e_	TAG_INVENTORY
c	cmj	net/minecraft/world/entity/npc/NPC
c	cmk	net/minecraft/world/entity/npc/EntityVillager
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		entityType
		p	2		world
	m	(Lbsx;Ldcw;Lcmp;)V	<init>	<init>
		p	1		entityType
		p	2		world
		p	3		type
	m	(J)Z	a	wantsToSpawnGolem
		p	1		time
	m	(JLcmk;)Z	a	lambda$spawnGolemIfNeeded$11
		p	2		villager
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;)V	a	refreshBrain
		p	1		world
	m	(Laqu;JI)V	a	spawnGolemIfNeeded
		p	1		world
		p	2		time
		p	4		requiredCount
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Laqu;Lbsr;Lbtn;)V	a	lambda$tellWitnessesThatIWasMurdered$6
		p	2		observer
	m	(Laqu;Lbtm;)V	a	thunderHit
		p	1		world
		p	2		lightning
	m	(Laqu;Lcmk;J)V	a	gossip
		p	1		world
		p	2		villager
		p	3		time
	m	(Lbra;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$9
		p	1		item
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbtn;)V	a	setLastHurtByMob
		p	1		attacker
	m	(Lbuq;)V	a	registerBrainGoals
		p	1		brain
	m	(Lccp;)Z	a	lambda$getPlayerReputation$8
		p	0		gossipType
	m	(Lccs;)V	a	releasePoi
		p	1		pos
	m	(Lcep;Lbsr;)V	a	onReputationEventFrom
		p	1		interaction
		p	2		entity
	m	(Lcmk;Ljm;)Z	a	lambda$static$3
		p	0		villager
	m	(Lcml;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcmx;)V	a	setTradingPlayer
		p	1		customer
	m	(Lcom/mojang/serialization/Dynamic;)Lbuq;	a	makeBrain
		p	1		dynamic
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lnet/minecraft/server/MinecraftServer;Lccs;Ljl;)V	a	lambda$releasePoi$7
		p	3		posx
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$4
	m	(Luy;)V	a	setGossips
		p	1		nbt
	m	()V	aa	sendDebugPackets
	m	()V	ab	customServerAiStep
	m	()Z	ab_	canBreed
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(J)Z	b	golemSpawnConditionsMet
		p	1		worldTime
	m	(Laqu;Lbsl;)Lcmk;	b	getBreedOffspring
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcmk;Ljm;)Z	b	lambda$static$2
		p	0		villager
	m	(Lcml;)V	b	lambda$readAdditionalSaveData$5
		p	1		villagerData
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldbu;)V	b	rewardTradeXp
		p	1		offer
	m	(Ldbv;)V	b	setOffers
		p	1		offers
	m	(Ljd;)V	b	startSleeping
		p	1		pos
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbsr;)V	c	tellWitnessesThatIWasMurdered
		p	1		killer
	m	(Lcmk;Ljm;)Z	c	lambda$static$1
		p	0		villager
	m	()Lwz;	cs	getTypeName
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmk;Ljm;)Z	d	lambda$static$0
		p	0		villager
	m	()Lbuq;	dT	getBrain
	m	()Lbuq$b;	dU	brainProvider
	m	(Lcmx;)I	f	getPlayerReputation
		p	1		player
	m	()V	fI	stopSleeping
	m	(Lcmx;)V	g	startTrading
		p	1		customer
	m	()Z	gA	isChasing
	m	()V	gB	eatAndDigestFood
	m	()Z	gC	hasExcessFood
	m	()Z	gD	wantsMoreFood
	m	()Z	gE	hasFarmSeeds
	m	()Lcco;	gF	getGossips
	m	()V	gG	setUnhappy
	m	()V	gH	resetSpecialPrices
	m	()V	gI	resendOffersToTradingPlayer
	m	()Z	gJ	needsToRestock
	m	()Z	gK	allowedToRestock
	m	()V	gL	catchUpDemand
	m	()V	gM	updateDemand
	m	()V	gN	releaseAllPois
	m	()Z	gO	hungry
	m	()V	gP	eatUntilFull
	m	()Z	gQ	shouldIncreaseLevel
	m	()V	gR	increaseMerchantCareer
	m	()I	gS	countFoodPointsInInventory
	m	()V	gT	maybeDecayGossip
	m	()V	gU	resetNumberOfRestocks
	m	()V	gq	stopTrading
	m	()V	gr	updateTrades
	m	()Z	gs	isClientSide
	m	()Lbuv$a;	gt	createAttributes
	m	()Z	gu	assignProfessionWhenSpawned
	m	()Lcml;	gv	getVillagerData
	m	()Z	gw	canRestock
	m	()V	gx	restock
	m	()Z	gy	shouldRestock
	m	()V	gz	playWorkSound
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Lcmx;)V	h	updateSpecialPrices
		p	1		player
	m	()V	k	ageBoundaryReached
	m	(Lcuq;)Z	k	wantsToPickUp
		p	1		stack
	m	()V	l	tick
	m	()Lavo;	n_	getDeathSound
	m	(Lcuq;)Z	o	lambda$hasFarmSeeds$10
		p	0		stack
	m	()I	t	getVillagerXp
	m	(I)V	u	setVillagerXp
		p	1		experience
	m	()Lavo;	v	getAmbientSound
	m	(I)V	v	digestFood
		p	1		amount
	m	(Z)V	y	setChasing
	f	J	cA	lastGossipDecayTime
	f	I	cB	villagerXp
	f	J	cD	lastRestockGameTime
	f	I	cE	numberOfRestocksToday
	f	J	cF	lastRestockCheckDayTime
	f	Z	cG	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cH	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cI	SENSOR_TYPES
	f	I	ce	BREEDING_FOOD_THRESHOLD
	f	Ljava/util/Map;	cf	FOOD_POINTS
	f	F	cg	SPEED_MODIFIER
	f	Ljava/util/Map;	ch	POI_MEMORIES
	f	Lorg/slf4j/Logger;	ci	LOGGER
	f	Lajw;	cj	DATA_VILLAGER_DATA
	f	I	ck	TRADES_PER_LEVEL
	f	Ljava/util/Set;	cl	WANTED_ITEMS
	f	I	cm	MAX_GOSSIP_TOPICS
	f	I	cn	GOSSIP_COOLDOWN
	f	I	co	GOSSIP_DECAY_INTERVAL
	f	I	cp	REPUTATION_CHANGE_PER_EVENT
	f	I	cq	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	cr	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	cs	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	I	ct	updateMerchantTimer
	f	Z	cu	increaseProfessionLevelOnUpdate
	f	Lcmx;	cv	lastTradedPlayer
	f	Z	cw	chasing
	f	I	cx	foodLevel
	f	Lcco;	cy	gossips
	f	J	cz	lastGossipTime
c	cml	net/minecraft/world/entity/npc/VillagerData
	m	(Lcmp;Lcmn;I)V	<init>	<init>
		p	1		type
		p	2		profession
		p	3		level
	m	()Lcmp;	a	getType
	m	(I)Lcml;	a	setLevel
		p	1		level
	m	(Lcml;)Ljava/lang/Integer;	a	lambda$static$8
		p	0		data
	m	(Lcmn;)Lcml;	a	setProfession
		p	1		profession
	m	(Lcmp;)Lcml;	a	setType
		p	1		type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	()Lcmn;	b	getProfession
	m	(I)I	b	getMinXpPerLevel
		p	0		level
	m	(Lcml;)Lcmn;	b	lambda$static$7
		p	0		data
	m	()I	c	getLevel
	m	(I)I	c	getMaxXpPerLevel
		p	0		level
	m	(Lcml;)Lcmp;	c	lambda$static$6
		p	0		data
	m	()Lcmn;	d	lambda$static$2
	m	(I)Z	d	canLevelUp
		p	0		level
	m	(Lcml;)Ljava/lang/Integer;	d	lambda$static$4
		p	0		data
	m	()Lcmp;	e	lambda$static$0
	m	(Lcml;)Lcmn;	e	lambda$static$3
		p	0		data
	m	(Lcml;)Lcmp;	f	lambda$static$1
		p	0		data
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	[I	e	NEXT_LEVEL_XP_THRESHOLDS
	f	Lcmp;	f	type
	f	Lcmn;	g	profession
	f	I	h	level
c	cmm	net/minecraft/world/entity/npc/VillagerDataHolder
	m	()Lcmp;	a	getVariant
	m	(Lcml;)V	a	setVillagerData
		p	1		villagerData
	m	(Lcmp;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	()Ljava/lang/Object;	d	getVariant
	m	()Lcml;	gv	getVillagerData
c	cmn	net/minecraft/world/entity/npc/VillagerProfession
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lavo;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	name
	m	(Lakq;Ljm;)Z	a	lambda$register$4
		p	1		entry
	m	(Ljava/lang/String;Lakq;Lavo;)Lcmn;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		workSound
	m	(Ljava/lang/String;Lakq;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lavo;)Lcmn;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		gatherableItems
		p	3		secondaryJobSites
		p	4		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lavo;)Lcmn;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		workSound
	m	(Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lavo;)Lcmn;	a	register
		p	0		id
		p	1		heldWorkstation
		p	2		acquirableWorkstation
		p	3		gatherableItems
		p	4		secondaryJobSites
		p	5		workSound
	m	(Ljm;)Z	a	lambda$static$0
		p	0		poiType
	m	()Ljava/util/function/Predicate;	b	heldJobSite
	m	(Lakq;Ljm;)Z	b	lambda$register$3
		p	1		entry
	m	()Ljava/util/function/Predicate;	c	acquirableJobSite
	m	(Lakq;Ljm;)Z	c	lambda$register$2
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	d	requestedItems
	m	(Lakq;Ljm;)Z	d	lambda$register$1
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	e	secondaryPoi
	m	()Lavo;	f	workSound
	f	Ljava/util/function/Predicate;	a	ALL_ACQUIRABLE_JOBS
	f	Lcmn;	b	NONE
	f	Lcmn;	c	ARMORER
	f	Lcmn;	d	BUTCHER
	f	Lcmn;	e	CARTOGRAPHER
	f	Lcmn;	f	CLERIC
	f	Lcmn;	g	FARMER
	f	Lcmn;	h	FISHERMAN
	f	Lcmn;	i	FLETCHER
	f	Lcmn;	j	LEATHERWORKER
	f	Lcmn;	k	LIBRARIAN
	f	Lcmn;	l	MASON
	f	Lcmn;	m	NITWIT
	f	Lcmn;	n	SHEPHERD
	f	Lcmn;	o	TOOLSMITH
	f	Lcmn;	p	WEAPONSMITH
	f	Ljava/lang/String;	q	name
	f	Ljava/util/function/Predicate;	r	heldJobSite
	f	Ljava/util/function/Predicate;	s	acquirableJobSite
	f	Lcom/google/common/collect/ImmutableSet;	t	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	u	secondaryPoi
	f	Lavo;	v	workSound
c	cmo	net/minecraft/world/entity/npc/VillagerTrades
	m	()Lcmo$g;	a	specialBooks
	m	(I)Lcmo$g;	a	commonBooks
		p	0		experience
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
		p	0		map
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljm;)Ldbs;	a	potionCost
		p	0		potion
	m	(Ljm;Lko$a;)Lko$a;	a	lambda$potionCost$1
		p	1		builder
	m	(Ljm;)Lcuq;	b	potion
		p	0		potion
	f	Ljava/util/Map;	a	TRADES
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	WANDERING_TRADER_TRADES
	f	Ljava/util/Map;	c	EXPERIMENTAL_TRADES
	f	Ljava/util/List;	d	EXPERIMENTAL_WANDERING_TRADER_TRADES
	f	I	e	DEFAULT_SUPPLY
	f	I	f	COMMON_ITEMS_SUPPLY
	f	I	g	UNCOMMON_ITEMS_SUPPLY
	f	I	h	XP_LEVEL_1_SELL
	f	I	i	XP_LEVEL_1_BUY
	f	I	j	XP_LEVEL_2_SELL
	f	I	k	XP_LEVEL_2_BUY
	f	I	l	XP_LEVEL_3_SELL
	f	I	m	XP_LEVEL_3_BUY
	f	I	n	XP_LEVEL_4_SELL
	f	I	o	XP_LEVEL_4_BUY
	f	I	p	XP_LEVEL_5_TRADE
	f	F	q	LOW_TIER_PRICE_MULTIPLIER
	f	F	r	HIGH_TIER_PRICE_MULTIPLIER
	f	Lcmo$l;	s	DESERT_MAP
	f	Lcmo$l;	t	SAVANNA_MAP
	f	Lcmo$l;	u	PLAINS_MAP
	f	Lcmo$l;	v	TAIGA_MAP
	f	Lcmo$l;	w	SNOWY_MAP
	f	Lcmo$l;	x	JUNGLE_MAP
	f	Lcmo$l;	y	SWAMP_MAP
c	cmo$a	net/minecraft/world/entity/npc/VillagerTrades$a
	m	(Lcul;I)V	<init>	<init>
		p	1		item
		p	2		price
	m	(Lcul;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		maxUses
		p	4		experience
	m	(Layw;)Lctj;	a	getRandomDye
		p	0		random
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcul;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
c	cmo$b	net/minecraft/world/entity/npc/VillagerTrades$b
	m	(Ldbs;III)V	<init>	<init>
		p	1		stack
		p	2		maxUses
		p	3		experience
		p	4		price
	m	(Ldcv;III)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		maxUses
		p	4		experience
	m	(Ldcv;IIII)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		maxUses
		p	4		experience
		p	5		price
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	Ldbs;	a	itemStack
	f	I	b	maxUses
	f	I	c	villagerXp
	f	I	d	emeraldAmount
	f	F	e	priceMultiplier
c	cmo$c	net/minecraft/world/entity/npc/VillagerTrades$c
	m	(IIILjava/util/Map;)V	<init>	<init>
		p	1		count
		p	2		maxUses
		p	3		experience
		p	4		map
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcmp;)V	a	lambda$new$1
		p	0		villagerType
	m	(Ljava/util/Map;Lcmp;)Z	a	lambda$new$0
		p	1		villagerType
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
c	cmo$d	net/minecraft/world/entity/npc/VillagerTrades$d
	m	(IIILawu;)V	<init>	<init>
		p	1		experience
		p	2		minLevel
		p	3		maxLevel
		p	4		possibleEnchantments
	m	(ILawu;)V	<init>	<init>
		p	1		experience
		p	2		possibleEnchantments
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	villagerXp
	f	Lawu;	b	tradeableEnchantments
	f	I	c	minLevel
	f	I	d	maxLevel
c	cmo$e	net/minecraft/world/entity/npc/VillagerTrades$e
	m	(Lcul;III)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
	m	(Lcul;IIIF)V	<init>	<init>
		p	1		item
		p	2		basePrice
		p	3		maxUses
		p	4		experience
		p	5		multiplier
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcuq;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
c	cmo$f	net/minecraft/world/entity/npc/VillagerTrades$f
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
c	cmo$g	net/minecraft/world/entity/npc/VillagerTrades$IMerchantRecipeOption
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
c	cmo$h	net/minecraft/world/entity/npc/VillagerTrades$h
	m	(Ldbs;ILcuq;IIFLjava/util/Optional;)V	<init>	<init>
		p	1		toBeProcessed
		p	2		count
		p	3		processed
		p	4		maxUses
		p	5		processedCount
		p	6		multiplier
		p	7		enchantmentProviderKey
	m	(Ldcv;IILcul;IIIF)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		price
		p	4		processed
		p	5		processedCount
		p	6		maxUses
		p	7		experience
		p	8		multiplier
	m	(Ldcv;IILcuq;IIIF)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		price
		p	4		processed
		p	5		processedCount
		p	6		maxUses
		p	7		experience
		p	8		multiplier
	m	(Ldcv;IILdcv;IIIFLakq;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		price
		p	4		processed
		p	5		processedCount
		p	6		maxUses
		p	7		experience
		p	8		multiplier
		p	9		enchantmentProviderKey
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcuq;Ldcw;Lbsr;Layw;Lakq;)V	a	lambda$getOffer$0
		p	4		key
	f	Ldbs;	a	fromItem
	f	I	b	emeraldCost
	f	Lcuq;	c	toItem
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
	f	Ljava/util/Optional;	g	enchantmentProvider
c	cmo$i	net/minecraft/world/entity/npc/VillagerTrades$i
	m	(Lcul;III)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		experience
	m	(Lcul;IIII)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcul;IIIIF)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lcul;IIIIFLakq;)V	<init>	<init>
		p	1		item
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
		p	7		enchantmentProviderKey
	m	(Lcuq;IIII)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lcuq;IIIIF)V	<init>	<init>
		p	1		stack
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
	m	(Lcuq;IIIIFLjava/util/Optional;)V	<init>	<init>
		p	1		sell
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
		p	6		multiplier
		p	7		enchantmentProviderKey
	m	(Ldfy;IIII)V	<init>	<init>
		p	1		block
		p	2		price
		p	3		count
		p	4		maxUses
		p	5		experience
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcuq;Ldcw;Lbsr;Layw;Lakq;)V	a	lambda$getOffer$0
		p	4		key
	f	Lcuq;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
	f	Ljava/util/Optional;	f	enchantmentProvider
c	cmo$j	net/minecraft/world/entity/npc/VillagerTrades$j
	m	(Lcxw;IF)V	<init>	<init>
		p	1		stewEffects
		p	2		experience
		p	3		multiplier
	m	(Ljm;II)V	<init>	<init>
		p	1		effect
		p	2		duration
		p	3		experience
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	Lcxw;	a	effects
	f	I	b	xp
	f	F	c	priceMultiplier
c	cmo$k	net/minecraft/world/entity/npc/VillagerTrades$k
	m	(Lcul;ILcul;IIII)V	<init>	<init>
		p	1		arrow
		p	2		secondCount
		p	3		tippedArrow
		p	4		sellCount
		p	5		price
		p	6		maxUses
		p	7		experience
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lbsr;Ljm$c;)Z	a	lambda$getOffer$0
		p	1		entry
	f	Lcuq;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Lcul;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
c	cmo$l	net/minecraft/world/entity/npc/VillagerTrades$l
	m	(ILawu;Ljava/lang/String;Ljm;II)V	<init>	<init>
		p	1		price
		p	2		structure
		p	3		nameKey
		p	4		decoration
		p	5		maxUses
		p	6		experience
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	f	I	a	emeraldCost
	f	Lawu;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Ljm;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
c	cmo$m	net/minecraft/world/entity/npc/VillagerTrades$m
	m	()Ljava/util/Map;	a	trades
	m	(Lbsr;Layw;)Ldbu;	a	getOffer
		p	1		entity
		p	2		random
	m	(Lcmo$g;Lcmp;)Lcmo$g;	a	lambda$oneTradeInBiomes$1
		p	1		type
	m	(Lcmo$g;[Lcmp;)Lcmo$m;	a	oneTradeInBiomes
		p	0		factory
		p	1		types
	m	(Lcmp;)Lcmp;	a	lambda$oneTradeInBiomes$0
		p	0		type
	f	Ljava/util/Map;	a	trades
c	cmp	net/minecraft/world/entity/npc/VillagerType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/String;)Lcmp;	a	register
		p	0		id
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljm;)Lcmp;	a	byBiome
		p	0		biomeEntry
	f	Lcmp;	a	DESERT
	f	Lcmp;	b	JUNGLE
	f	Lcmp;	c	PLAINS
	f	Lcmp;	d	SAVANNA
	f	Lcmp;	e	SNOW
	f	Lcmp;	f	SWAMP
	f	Lcmp;	g	TAIGA
	f	Ljava/lang/String;	h	name
	f	Ljava/util/Map;	i	BY_BIOME
c	cmq	net/minecraft/world/entity/npc/EntityVillagerTrader
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()V	B	registerGoals
	m	(Laqu;Lbsl;)Lbsl;	a	getBreedOffspring
		p	1		world
		p	2		entity
	m	(Lcmq;)Lcda;	a	access$000
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcmq;)Lcda;	b	access$100
	m	(Lcmx;Lbqq;)Lbqr;	b	mobInteract
		p	1		player
		p	2		hand
	m	(Ldbu;)V	b	rewardTradeXp
		p	1		offer
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmq;)Lcda;	c	access$200
	m	(Lcuq;)Lavo;	c	getDrinkingSound
		p	1		stack
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lcmq;)Lcda;	d	access$300
	m	(Lcmq;)Z	e	lambda$registerGoals$1
		p	1		wanderingTrader
	m	(Lcmq;)Z	f	lambda$registerGoals$0
		p	1		wanderingTrader
	m	()Z	gn	showProgressBar
	m	()Lavo;	go	getNotifyTradeSound
	m	()V	gr	updateTrades
	m	()I	gt	getDespawnDelay
	m	()V	gu	experimentalUpdateTrades
	m	()V	gv	maybeDespawn
	m	()Ljd;	gx	getWanderTarget
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	(Ljd;)V	h	setWanderTarget
		p	1		wanderTarget
	m	(Ljd;)V	i	lambda$readAdditionalSaveData$2
		p	1		wanderTarget
	m	()V	m_	aiStep
	m	()Lavo;	n_	getDeathSound
	m	(I)V	u	setDespawnDelay
		p	1		despawnDelay
	m	()Lavo;	v	getAmbientSound
	m	(Z)Lavo;	x	getTradeUpdatedSound
		p	1		sold
	f	I	ce	NUMBER_OF_TRADE_OFFERS
	f	Ljd;	cf	wanderTarget
	f	I	cg	despawnDelay
c	cmq$a	net/minecraft/world/entity/npc/EntityVillagerTrader$a
	m	(Lcmq;Lcmq;DD)V	<init>	<init>
		p	2		trader
		p	3		proximityDistance
		p	5		speed
	m	()V	a	tick
	m	(Ljd;D)Z	a	isTooFarAway
		p	1		pos
		p	2		proximityDistance
	m	()Z	b	canUse
	m	()V	e	stop
	f	Lcmq;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lcmq;	d	this$0
c	cmr	net/minecraft/world/entity/npc/MobSpawnerTrader
	m	(Lerk;)V	<init>	<init>
		p	1		properties
	m	(Laqu;)Z	a	spawn
		p	1		world
	m	(Laqu;Lcmq;I)V	a	tryToSpawnLlamaFor
		p	1		world
		p	2		wanderingTrader
		p	3		range
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	m	(Ldcc;Ljd;)Z	a	hasEnoughSpace
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;I)Ljd;	a	findSpawnPositionNear
		p	1		world
		p	2		pos
		p	3		range
	m	(Ljd;)Z	a	lambda$spawn$1
		p	0		pos
	m	(Ljm;)Z	a	lambda$spawn$0
		p	0		poiType
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	b	DEFAULT_TICK_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Layw;	h	random
	f	Lerk;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
c	cmu	net/minecraft/world/entity/player/PlayerAbilities
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
		p	1		flySpeed
	m	(Lub;)V	a	addSaveData
		p	1		nbt
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
		p	1		walkSpeed
	m	(Lub;)V	b	loadSaveData
		p	1		nbt
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	f	flyingSpeed
	f	F	g	walkingSpeed
c	cmv	net/minecraft/world/entity/player/EnumChatVisibility
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		translationKey
	m	()I	a	getId
	m	(I)Lcmv;	a	byId
		p	0		id
	m	()Ljava/lang/String;	b	getKey
	m	()[Lcmv;	c	$values
	f	Lcmv;	a	FULL
	f	Lcmv;	b	SYSTEM
	f	Lcmv;	c	HIDDEN
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lcmv;	g	$VALUES
c	cmw	net/minecraft/world/entity/player/PlayerInventory
	m	(Lcmx;)V	<init>	<init>
		p	1		player
	m	()V	a	clearContent
	m	(D)V	a	swapPaint
		p	1		scrollAmount
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lawu;)Z	a	contains
		p	1		tag
	m	(Lcmw;)V	a	replaceWith
		p	1		other
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
	m	(Lcuq;Lcuq;)Z	a	hasRemainingSpaceForItem
		p	1		existingStack
		p	2		stack
	m	(Lcuq;Z)V	a	placeItemBackInInventory
		p	1		stack
		p	2		notifiesClient
	m	(Ldtc;)F	a	getDestroySpeed
		p	1		block
	m	(Ljava/util/function/Predicate;ILbqk;)I	a	clearOrCountMatchingItems
		p	1		shouldRemove
		p	2		maxCount
		p	3		craftingInventory
	m	(Luh;)Luh;	a	save
		p	1		nbtList
	m	(Z)Lcuq;	a	removeFromSelected
		p	1		entireStack
	m	()Lwz;	ah	getName
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcuq;)V	b	setPickedItem
		p	1		stack
	m	(Ljava/util/function/Predicate;)Z	b	contains
		p	1		predicate
	m	(Luh;)V	b	load
		p	1		nbtList
	m	()Z	c	isEmpty
	m	(I)V	c	pickSlot
		p	1		slot
	m	(ILcuq;)Z	c	add
		p	1		slot
		p	2		stack
	m	(Lcuq;)I	c	findSlotMatchingItem
		p	1		stack
	m	(I)Z	d	isHotbarSlot
		p	0		slot
	m	(ILcuq;)I	d	addResource
		p	1		slot
		p	2		stack
	m	(Lcuq;)I	d	findSlotMatchingUnusedItem
		p	1		stack
	m	()V	e	setChanged
	m	(I)Lcuq;	e	getArmor
		p	1		slot
	m	(Lcuq;)I	e	getSlotWithRemainingSpace
		p	1		stack
	m	()Lcuq;	f	getSelected
	m	(Lcuq;)Z	f	add
		p	1		stack
	m	()I	g	getSelectionSize
	m	(Lcuq;)V	g	placeItemBackInInventory
		p	1		stack
	m	()I	h	getFreeSlot
	m	(Lcuq;)V	h	removeItem
		p	1		stack
	m	()I	i	getSuitableHotbarSlot
	m	(Lcuq;)Z	i	contains
		p	1		stack
	m	()V	j	tick
	m	(Lcuq;)I	j	addResource
		p	1		stack
	m	()V	k	dropAll
	m	(Lcuq;)Ljava/lang/String;	k	lambda$add$0
	m	()I	l	getTimesChanged
	f	I	b	POP_TIME_DURATION
	f	I	c	INVENTORY_SIZE
	f	I	d	SLOT_OFFHAND
	f	I	e	NOT_FOUND_INDEX
	f	[I	f	ALL_ARMOR_SLOTS
	f	[I	g	HELMET_SLOT_ONLY
	f	Ljv;	h	items
	f	Ljv;	i	armor
	f	Ljv;	j	offhand
	f	I	k	selected
	f	Lcmx;	l	player
	f	I	m	SELECTION_SIZE
	f	Ljava/util/List;	n	compartments
	f	I	o	timesChanged
c	cmx	net/minecraft/world/entity/player/EntityHuman
	m	(Ldcw;Ljd;FLcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		yaw
		p	4		gameProfile
	m	(F)V	D	internalSetAbsorptionAmount
		p	1		absorptionAmount
	m	(F)V	E	causeFoodExhaustion
		p	1		exhaustion
	m	(F)F	F	getAttackStrengthScale
		p	1		baseTime
	m	(F)Z	G	isAboveGround
	m	(Lbsr;)V	G	lambda$respawnEntityOnShoulder$5
		p	1		entity
	m	()Z	R_	isSpectator
	m	()Lwz;	S_	getDisplayName
	m	()Z	Z	isTextFilteringEnabled
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IFLcuq;)V	a	startAutoSpinAttack
		p	1		riptideTicks
		p	2		riptideAttackDamage
		p	3		stack
	m	(ILdbv;IIZZ)V	a	sendMerchantOffers
		p	1		syncId
		p	2		offers
		p	3		levelProgress
		p	4		experience
		p	5		leveled
		p	6		refreshable
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lakr;)V	a	awardStat
		p	1		stat
	m	(Lakr;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Laqu;Lbtn;)Z	a	killedEntity
		p	1		world
		p	2		other
	m	(Lavo;FF)V	a	playSound
		p	1		sound
		p	2		volume
		p	3		pitch
	m	(Lavo;Lavq;FF)V	a	playNotifySound
		p	1		sound
		p	2		category
		p	3		volume
		p	4		pitch
	m	(Lavw;)V	a	resetStat
		p	1		stat
	m	(Lavw;I)V	a	awardStat
		p	1		stat
		p	2		amount
	m	(Lbqv;)Ljava/util/OptionalInt;	a	openMenu
		p	1		factory
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lbsr;FLbrk;)F	a	getEnchantedDamage
		p	1		target
		p	2		baseDamage
		p	3		damageSource
	m	(Lbsr;Lbqq;)Lbqr;	a	interactOn
		p	1		entity
		p	2		hand
	m	(Lbsy;)Lcuq;	a	getItemBySlot
		p	1		slot
	m	(Lbsy;Lcuq;)V	a	setItemSlot
		p	1		slot
		p	2		stack
	m	(Lbtg;)V	a	setMainArm
		p	1		arm
	m	(Lchi;Lbqk;)V	a	openHorseInventory
		p	1		horse
		p	2		inventory
	m	(Lcmx;)Z	a	canHarmPlayer
		p	1		player
	m	(Lcmy;)Z	a	isModelPartShown
		p	1		modelPart
	m	(Lcuq;I)V	a	onEnchantmentPerformed
		p	1		enchantedItem
		p	2		experienceLevels
	m	(Lcuq;Lbqq;)V	a	openItemGui
		p	1		book
		p	2		hand
	m	(Lcuq;Lcuq;Lcqd;)V	a	updateTutorialInventoryAction
		p	1		cursorStack
		p	2		slotStack
		p	3		clickType
	m	(Lcuq;Z)Lcjh;	a	drop
		p	1		stack
		p	2		retainOwnership
	m	(Lcuq;ZZ)Lcjh;	a	drop
		p	1		stack
		p	2		throwRandomly
		p	3		retainOwnership
	m	(Lczb;Ljava/util/List;)V	a	triggerRecipeCrafted
		p	1		recipe
		p	2		ingredients
	m	(Ldbx;)V	a	openMinecartCommandBlock
		p	1		commandBlockExecutor
	m	(Ldcw;Lcuq;Lcpr;)Lcuq;	a	eat
		p	1		world
		p	2		stack
		p	3		foodComponent
	m	(Ldcw;Ljd;Ldct;)Z	a	blockActionRestricted
		p	1		world
		p	2		pos
		p	3		gameMode
	m	(Ldqr;)V	a	openCommandBlock
		p	1		commandBlock
	m	(Ldri;)V	a	openJigsawBlock
		p	1		jigsaw
	m	(Ldrs;Z)V	a	openTextEdit
		p	1		sign
		p	2		front
	m	(Ldrx;)V	a	openStructureBlock
		p	1		structureBlock
	m	(Ldtc;Lexc;)V	a	makeStuckInBlock
		p	1		state
		p	2		multiplier
	m	(Lewx;D)Z	a	canInteractWithEntity
		p	1		box
		p	2		additionalRange
	m	(Lexc;)V	a	travel
		p	1		movementInput
	m	(Lexc;Lbts;)Lexc;	a	maybeBackOffFromEdge
		p	1		movement
		p	2		type
	m	(Ljava/lang/String;Lxw;)Lxw;	a	lambda$decorateDisplayNameComponent$6
		p	2		style
	m	(Ljava/util/Collection;)I	a	awardRecipes
		p	1		recipes
	m	(Ljava/util/Optional;)V	a	setLastDeathLocation
		p	1		lastDeathPos
	m	(Ljd;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
		p	1		pos
	m	(Ljd;D)Z	a	canInteractWithBlock
		p	1		pos
		p	2		additionalRange
	m	(Ljd;Lji;Lcuq;)Z	a	mayUseItemAt
		p	1		pos
		p	2		facing
		p	3		stack
	m	(Ljl;)Ljava/util/Optional;	a	lambda$addAdditionalSaveData$3
		p	0		pos
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$4
		p	1		pos
	m	(Lwz;Z)V	a	displayClientMessage
		p	1		message
		p	2		overlay
	m	(Lxn;)Lxn;	a	decorateDisplayNameComponent
		p	1		component
	m	(ZZ)V	a	stopSleepInBed
		p	1		skipSleepTimer
		p	2		updateSleepingPlayers
	m	()F	aO	getBlockSpeedFactor
	m	()Lavo;	aQ	getSwimSound
	m	()Lavo;	aR	getSwimSplashSound
	m	()Lavo;	aS	getSwimHighSpeedSplashSound
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()Ljava/util/Optional;	ab	getWardenSpawnTracker
	m	()Lwz;	ah	getName
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(DDF)Z	b	canFallAtLeast
		p	1		offsetX
		p	3		offsetZ
	m	(Lavw;)V	b	awardStat
		p	1		stat
	m	(Lbrk;)Z	b	isInvulnerableTo
		p	1		damageSource
	m	(Lbrk;F)V	b	hurtArmor
		p	1		source
		p	2		amount
	m	(Lbsr;)V	b	crit
		p	1		target
	m	(Lbsr;D)Z	b	canInteractWithEntity
		p	1		entity
		p	2		additionalRange
	m	(Lbsx;)V	b	lambda$playShoulderEntityAmbientSound$1
		p	1		parrotType
	m	(Lbsy;)Z	b	doesEmitEquipEvent
		p	1		slot
	m	(Lexc;)V	b	lambda$readAdditionalSaveData$2
		p	1		currentExplosionImpactPos
	m	(Ljava/util/Collection;)I	b	resetRecipes
		p	1		recipes
	m	(Ljava/util/List;)V	b	awardRecipesByKey
		p	1		recipes
	m	(Ljd;Ldtc;)V	b	playStepSound
		p	1		pos
		p	2		state
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	bJ	removeVehicle
	m	()I	bQ	getDimensionChangingDelay
	m	()Lbsr$b;	bc	getMovementEmission
	m	()V	bl	updateSwimming
	m	()V	bo	doWaterSplashEffect
	m	()Z	bz	canBeHitByProjectile
	m	(I)V	c	giveExperienceLevels
		p	1		levels
	m	(Lbrk;F)V	c	hurtHelmet
		p	1		source
		p	2		amount
	m	(Lbsr;)V	c	magicCrit
		p	1		target
	m	(Lbsx;)Z	c	lambda$playShoulderEntityAmbientSound$0
		p	0		entityType
	m	(Ldtc;)F	c	getDestroySpeed
		p	1		block
	m	(Lub;)V	c	playShoulderEntityAmbientSound
		p	1		entityNbt
	m	()Ljava/lang/String;	cB	getScoreboardName
	m	()Z	cC	isPushedByFluid
	m	()Z	cF	shouldShowName
	m	()Z	cd	isSwimming
	m	(I)V	d	giveExperiencePoints
		p	1		experience
	m	(Lbrk;)Lavo;	d	getHurtSound
		p	1		source
	m	(Lbsr;)V	d	touch
		p	1		entity
	m	(Lbsy;)Z	d	canUseSlot
		p	1		slot
	m	(Lbtn;)V	d	blockUsingShield
		p	1		attacker
	m	(Ldtc;)Z	d	hasCorrectToolForDrops
		p	1		state
	m	()Z	dH	canSprint
	m	()Z	dM	shouldBeSaved
	m	()Z	dN	isAlwaysTicking
	m	()Lcuq;	dS	getWeaponItem
	m	()Lavq;	de	getSoundSource
	m	()I	df	getFireImmuneTicks
	m	(Lbsr;)V	e	attack
		p	1		target
	m	(Lbua;)Lbsu;	e	getDefaultDimensions
		p	1		pose
	m	()F	eE	getHurtDir
	m	()Lbtn$a;	eH	getFallSounds
	m	()Ljava/lang/Iterable;	eV	getArmorSlots
	m	()Ljava/lang/Iterable;	eW	getHandSlots
	m	()Z	ec	isAffectedByFluids
	m	()I	eg	getBaseExperienceReward
	m	()Z	eh	isAlwaysExperienceDropper
	m	()Z	ep	canBeSeenAsEnemy
	m	()V	ez	dropEquipment
	m	()Z	f	isCreative
	m	(Lbrk;F)V	f	actuallyHurt
		p	1		source
		p	2		amount
	m	(Lcuq;)Z	f	canTakeItem
		p	1		stack
	m	()Lcom/google/common/collect/ImmutableList;	fE	getDismountPoses
	m	()V	fI	stopSleeping
	m	()Z	fL	hasInfiniteMaterials
	m	()Lbuv$a;	fM	createAttributes
	m	()Z	fN	isSecondaryUseActive
	m	()Z	fO	wantsToStopRiding
	m	()Z	fP	isStayingOnGroundSurface
	m	()Z	fQ	updateIsUnderwater
	m	()V	fR	updatePlayerPose
	m	()I	fS	getScore
	m	()V	fT	destroyVanishingCursedItems
	m	()V	fU	disableShield
	m	()V	fV	sweepAttack
	m	()V	fW	respawn
	m	()Lcom/mojang/authlib/GameProfile;	fX	getGameProfile
	m	()Lcmw;	fY	getInventory
	m	()Lcmu;	fZ	getAbilities
	m	()Z	fc	isImmobile
	m	()V	ff	jumpFromGround
	m	()F	fi	getFlyingSpeed
	m	()F	fj	getSpeed
	m	()F	fk	getMaxHeadRotationRelativeToBody
	m	()V	fm	serverAiStep
	m	()F	fo	getAbsorptionAmount
	m	()Lbtg;	fq	getMainArm
	m	()Z	g	isLocalPlayer
	m	(Lbtn;)V	g	doAutoAttackOnTouch
		p	1		target
	m	(Lcuq;)Lcuq;	g	getProjectile
		p	1		stack
	m	()Z	gA	isIgnoringFallDamageFromCurrentImpulse
	m	()V	gB	tryResetCurrentImpulseContext
	m	()V	gC	resetCurrentImpulseContext
	m	()Z	ga	hasContainerOpen
	m	()Z	gb	isSleepingLongEnough
	m	()I	gc	getSleepTimer
	m	()Z	gd	tryToStartFallFlying
	m	()V	ge	startFallFlying
	m	()V	gf	stopFallFlying
	m	()I	gg	getEnchantmentSeed
	m	()I	gh	getXpNeededForNextLevel
	m	()Lcpq;	gi	getFoodData
	m	()Z	gj	isHurt
	m	()Z	gk	mayBuild
	m	()Lcrh;	gl	getEnderChestInventory
	m	()V	gm	removeEntitiesOnShoulder
	m	()Leyg;	gn	getScoreboard
	m	()Z	go	isReducedDebugInfo
	m	()Lub;	gp	getShoulderEntityLeft
	m	()Lub;	gq	getShoulderEntityRight
	m	()F	gr	getCurrentItemAttackStrengthDelay
	m	()V	gs	resetAttackStrengthTicker
	m	()Lcum;	gt	getCooldowns
	m	()F	gu	getLuck
	m	()Z	gv	canUseGameMasterBlocks
	m	()Z	gw	isScoping
	m	()Ljava/util/Optional;	gx	getLastDeathLocation
	m	()D	gy	blockInteractionRange
	m	()D	gz	entityInteractionRange
	m	(I)V	h	setRemainingFireTicks
		p	1		fireTicks
	m	(Lbua;)Z	h	canPlayerFitWithinBlocksAndEntitiesWhen
		p	1		pose
	m	(Ljd;)Z	h	freeAt
		p	1		pos
	m	(Lub;)Z	h	setEntityOnShoulder
		p	1		entityNbt
	m	(Lcuq;)Z	i	addItem
		p	1		stack
	m	(Lub;)V	i	setShoulderEntityLeft
		p	1		entityNbt
	m	(Lub;)V	j	setShoulderEntityRight
		p	1		entityNbt
	m	()Lcum;	k	createItemCooldowns
	m	(Lub;)V	k	respawnEntityOnShoulder
		p	1		entityNbt
	m	()V	l	tick
	m	()V	m_	aiStep
	m	(F)V	n	animateHurt
		p	1		yaw
	m	()Lavo;	n_	getDeathSound
	m	(I)V	r	setScore
		p	1		score
	m	()V	s	closeContainer
	m	(F)Lexc;	s	getRopeHoldPosition
		p	1		delta
	m	(I)V	s	increaseScore
		p	1		score
	m	()V	t	doCloseContainer
	m	()V	u	rideTick
	m	(Z)Z	u	canEat
		p	1		ignoreHunger
	m	()V	v	turtleHelmetTick
	m	(Z)V	v	setReducedDebugInfo
		p	1		reducedDebugInfo
	m	(Z)V	w	setIgnoreFallDamageFromCurrentImpulse
		p	1		ignoreFallDamageFromCurrentExplosion
	m	()V	x	moveCloak
	m	(F)V	x	hurtCurrentlyUsedShield
		p	1		amount
	m	()V	z	onUpdateAbilities
	f	Lbtg;	bH	DEFAULT_MAIN_HAND
	f	I	bI	DEFAULT_MODEL_CUSTOMIZATION
	f	I	bJ	MAX_HEALTH
	f	I	bK	SLEEP_DURATION
	f	I	bL	WAKE_UP_DURATION
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	bM	ENDER_SLOT_OFFSET
	f	I	bN	HELD_ITEM_SLOT
	f	I	bO	CRAFTING_SLOT_OFFSET
	f	F	bP	DEFAULT_BLOCK_INTERACTION_RANGE
	f	F	bQ	DEFAULT_ENTITY_INTERACTION_RANGE
	f	F	bR	CROUCH_BB_HEIGHT
	f	F	bS	SWIMMING_BB_WIDTH
	f	F	bT	SWIMMING_BB_HEIGHT
	f	F	bU	DEFAULT_EYE_HEIGHT
	f	Lexc;	bV	DEFAULT_VEHICLE_ATTACHMENT
	f	Lbsu;	bW	STANDING_DIMENSIONS
	f	Lajw;	bX	DATA_PLAYER_MODE_CUSTOMISATION
	f	Lajw;	bY	DATA_PLAYER_MAIN_HAND
	f	Lajw;	bZ	DATA_SHOULDER_LEFT
	f	Lcmu;	cA	abilities
	f	I	cB	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	cD	gameProfile
	f	Z	cE	reducedDebugInfo
	f	Lcuq;	cF	lastItemInMainHand
	f	Lcum;	cG	cooldowns
	f	Ljava/util/Optional;	cH	lastDeathLocation
	f	I	c	CURRENT_IMPULSE_CONTEXT_RESET_GRACE_TIME_TICKS
	f	Z	cI	ignoreFallDamageFromCurrentImpulse
	f	I	cJ	currentImpulseContextResetGraceTime
	f	Lajw;	ca	DATA_SHOULDER_RIGHT
	f	Lcrh;	cb	enderChestInventory
	f	Lcqw;	cc	inventoryMenu
	f	Lcpu;	cd	containerMenu
	f	Lcpq;	ce	foodData
	f	I	cf	jumpTriggerTime
	f	F	cg	oBob
	f	F	ch	bob
	f	I	ci	takeXpDelay
	f	D	cj	xCloakO
	f	D	ck	yCloakO
	f	D	cl	zCloakO
	f	D	cm	xCloak
	f	D	cn	yCloak
	f	D	co	zCloak
	f	Z	cp	wasUnderwater
	f	I	cq	experienceLevel
	f	I	cr	totalExperience
	f	F	cs	experienceProgress
	f	I	ct	enchantmentSeed
	f	F	cu	defaultFlySpeed
	f	Lcnl;	cv	fishing
	f	F	cw	hurtDir
	f	Lexc;	cx	currentImpulseImpactPos
	f	Lbsr;	cy	currentExplosionCause
	f	I	cz	sleepCounter
	f	Ljava/util/Map;	d	POSES
	f	Lajw;	e	DATA_PLAYER_ABSORPTION_ID
	f	Lajw;	f	DATA_SCORE_ID
	f	J	g	timeEntitySatOnShoulder
	f	Lcmw;	h	inventory
c	cmx$1	net/minecraft/world/entity/player/EntityHuman$1
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lcmx;	b	this$0
c	cmx$2	net/minecraft/world/entity/player/EntityHuman$2
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	I	b	val$craftSlot
	f	Lcmx;	c	this$0
c	cmx$a	net/minecraft/world/entity/player/EntityHuman$EnumBedResult
	m	(Ljava/lang/String;ILwz;)V	<init>	<init>
		p	3		message
	m	()Lwz;	a	getMessage
	m	()[Lcmx$a;	b	$values
	f	Lcmx$a;	a	NOT_POSSIBLE_HERE
	f	Lcmx$a;	b	NOT_POSSIBLE_NOW
	f	Lcmx$a;	c	TOO_FAR_AWAY
	f	Lcmx$a;	d	OBSTRUCTED
	f	Lcmx$a;	e	OTHER_PROBLEM
	f	Lcmx$a;	f	NOT_SAFE
	f	Lwz;	g	message
	f	[Lcmx$a;	h	$VALUES
c	cmy	net/minecraft/world/entity/player/PlayerModelPart
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Lwz;	d	getName
	m	()[Lcmy;	e	$values
	f	Lcmy;	a	CAPE
	f	Lcmy;	b	JACKET
	f	Lcmy;	c	LEFT_SLEEVE
	f	Lcmy;	d	RIGHT_SLEEVE
	f	Lcmy;	e	LEFT_PANTS_LEG
	f	Lcmy;	f	RIGHT_PANTS_LEG
	f	Lcmy;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Lwz;	k	name
	f	[Lcmy;	l	$VALUES
c	cmz	cmz
	m	()Z	a	dueRefresh
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/security/PrivateKey;	b	privateKey
	m	()Lcna;	c	publicKey
	m	()Ljava/time/Instant;	d	refreshedAfter
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/security/PrivateKey;	b	privateKey
	f	Lcna;	c	publicKey
	f	Ljava/time/Instant;	d	refreshedAfter
c	cna	net/minecraft/world/entity/player/ProfilePublicKey
	m	()Lazb;	a	createSignatureValidator
	m	(Lazb;Ljava/util/UUID;Lcna$a;)Lcna;	a	createValidated
		p	0		servicesSignatureVerifier
		p	1		playerUuid
		p	2		publicKeyData
	m	()Lcna$a;	b	data
	f	Lwz;	a	EXPIRED_PROFILE_PUBLIC_KEY
	f	Ljava/time/Duration;	b	EXPIRY_GRACE_PERIOD
	f	Lcom/mojang/serialization/Codec;	c	TRUSTED_CODEC
	f	Lcna$a;	d	data
	f	Lwz;	e	INVALID_SIGNATURE
c	cna$a	net/minecraft/world/entity/player/ProfilePublicKey$a
	m	(Lvw;)V	<init>	<init>
		p	1		buf
	m	()Z	a	hasExpired
	m	(Lazb;Ljava/util/UUID;)Z	a	validateSignature
		p	1		servicesSignatureVerifier
		p	2		playerUuid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/time/Duration;)Z	a	hasExpired
		p	1		gracePeriod
	m	(Ljava/util/UUID;)[B	a	signedPayload
		p	1		playerUuid
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ljava/time/Instant;	b	expiresAt
	m	()Ljava/security/PublicKey;	c	key
	m	()[B	d	keySignature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/time/Instant;	b	expiresAt
	f	Ljava/security/PublicKey;	c	key
	f	[B	d	keySignature
	f	I	e	MAX_KEY_SIGNATURE_SIZE
c	cna$b	net/minecraft/world/entity/player/ProfilePublicKey$b
	m	(Lwz;)V	<init>	<init>
		p	1		messageText
c	cnb	net/minecraft/world/entity/player/AutoRecipeStackManager
	m	()V	a	clear
	m	(I)Lcuq;	a	fromStackingIndex
		p	0		itemId
	m	(II)I	a	take
		p	1		itemId
		p	2		count
	m	(Lcuq;)V	a	accountSimpleStack
		p	1		stack
	m	(Lcuq;I)V	a	accountStack
		p	1		stack
		p	2		maxCount
	m	(Lcyz;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	canCraft
		p	1		recipe
		p	2		output
	m	(Lcyz;Lit/unimi/dsi/fastutil/ints/IntList;I)Z	a	canCraft
		p	1		recipe
		p	2		output
		p	3		multiplier
	m	(Lczb;ILit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		limit
		p	3		output
	m	(Lczb;Lit/unimi/dsi/fastutil/ints/IntList;)I	a	getBiggestCraftableStack
		p	1		recipe
		p	2		output
	m	(I)Z	b	has
		p	1		itemId
	m	(II)V	b	put
		p	1		itemId
		p	2		count
	m	(Lcuq;)V	b	accountStack
		p	1		stack
	m	(Lcuq;)I	c	getStackingIndex
		p	0		stack
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	a	contents
	f	I	b	EMPTY
c	cnb$a	net/minecraft/world/entity/player/AutoRecipeStackManager$a
	m	(Lcnb;Lcyz;)V	<init>	<init>
		p	2		recipe
	m	()[I	a	getUniqueAvailableIngredientItems
	m	(I)Z	a	dfs
		p	1		multiplier
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)Z	a	tryPick
		p	1		multiplier
		p	2		output
	m	(ZI)V	a	visit
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	a	hasConnection
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	()I	b	getMinIngredientCount
	m	(I)Z	b	isSatisfied
		p	1		itemId
	m	(ILit/unimi/dsi/fastutil/ints/IntList;)I	b	tryPickAll
		p	1		minimum
		p	2		output
	m	(ZI)Z	b	hasVisited
		p	1		reversed
		p	2		itemId
	m	(ZII)Z	b	hasResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)V	c	setSatisfied
		p	1		itemId
	m	(ZI)I	c	getVisitedIndex
		p	1		reversed
		p	2		itemId
	m	(ZII)V	c	toggleResidual
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	m	(I)I	d	getSatisfiedIndex
		p	1		itemId
	m	(ZII)I	d	getIndex
		p	1		reversed
		p	2		itemIndex
		p	3		ingredientIndex
	f	Lcnb;	a	this$0
	f	Lcyz;	b	recipe
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	[I	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
c	cnd	net/minecraft/world/entity/projectile/EntityArrow
	m	(Lbsx;DDDLdcw;Lcuq;Lcuq;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
		p	9		stack
		p	10		weapon
	m	(Lbsx;Lbtn;Ldcw;Lcuq;Lcuq;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
		p	4		stack
		p	5		shotFrom
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Z	A	isCritArrow
	m	()Z	B	shotFromCrossbow
	m	()B	C	getPierceLevel
	m	()F	D	getWaterInertia
	m	()Z	E	isNoPhysics
	m	()Z	F	shouldFall
	m	()V	J	startFalling
	m	()V	K	resetPiercedEntities
	m	(B)V	a	setPierceLevel
		p	1		level
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(F)V	a	setBaseDamageFromMob
		p	1		damageModifier
	m	(IZ)V	a	setFlag
		p	1		index
		p	2		flag
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lewy;Lcuq;)V	a	hitBlockEnchantmentEffects
		p	1		world
		p	2		blockHitResult
		p	3		weaponStack
	m	(Lbtn;)V	a	doPostHurtEffects
		p	1		target
	m	(Lbtn;Lbrk;)V	a	doKnockback
		p	1		target
		p	2		source
	m	(Lbts;Lexc;)V	a	move
		p	1		movementType
		p	2		movement
	m	(Lcmx;)Z	a	tryPickup
		p	1		player
	m	(Lcuq;)V	a	setPickupItemStack
		p	1		stack
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexc;Lexc;)Lewz;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCritArrow
		p	1		critical
	m	()D	aZ	getDefaultGravity
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(Lavo;)V	b	setSoundEvent
		p	1		sound
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Lcul;)V	b	lambda$hitBlockEnchantmentEffects$1
		p	1		item
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setNoPhysics
		p	1		noClip
	m	()Z	bA	isPickable
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	()Lbsr$b;	bc	getMovementEmission
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		power
		p	8		uncertainty
	m	(Lbsr;)V	c	setOwner
		p	1		entity
	m	(Lcul;)V	c	lambda$new$0
		p	1		item
	m	()Z	cu	isAttackable
	m	()Lcuq;	dS	getWeaponItem
	m	(D)V	h	setBaseDamage
		p	1		damage
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()V	p	tickDespawn
	m	()Lavo;	t	getDefaultHitGroundSoundEvent
	m	()Lavo;	v	getHitGroundSoundEvent
	m	()Lcuq;	w	getPickupItem
	m	()Lcuq;	x	getDefaultPickupItem
	m	()Lcuq;	y	getPickupItemStackOrigin
	m	()D	z	getBaseDamage
	f	Z	b	inGround
	f	I	c	inGroundTime
	f	Lcnd$a;	d	pickup
	f	I	e	shakeTime
	f	D	f	ARROW_BASE_DAMAGE
	f	Lajw;	g	ID_FLAGS
	f	Lajw;	h	PIERCE_LEVEL
	f	I	i	FLAG_CRIT
	f	I	j	FLAG_NOPHYSICS
	f	Ldtc;	k	lastState
	f	I	l	life
	f	D	m	baseDamage
	f	Lavo;	n	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	o	piercingIgnoreEntityIds
	f	Ljava/util/List;	p	piercedAndKilledEntities
	f	Lcuq;	q	pickupItemStack
	f	Lcuq;	r	firedFromWeapon
c	cnd$a	net/minecraft/world/entity/projectile/EntityArrow$PickupStatus
	m	()[Lcnd$a;	a	$values
	m	(I)Lcnd$a;	a	byOrdinal
		p	0		ordinal
	f	Lcnd$a;	a	DISALLOWED
	f	Lcnd$a;	b	ALLOWED
	f	Lcnd$a;	c	CREATIVE_ONLY
	f	[Lcnd$a;	d	$VALUES
c	cne	net/minecraft/world/entity/projectile/EntityFireball
	m	(Lbsx;DDDLdcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbsx;DDDLexc;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		velocity
		p	9		world
	m	(Lbsx;Lbtn;Lexc;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		velocity
		p	4		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lexc;D)V	a	assignDirectionalMovement
		p	1		velocity
		p	2		accelerationPower
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Ldcf$a;	aj_	getClipType
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Lbsr;Z)V	b	onDeflection
		p	1		deflector
		p	2		fromAttack
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bu	getLightLevelDependentMagicValue
	m	()V	l	tick
	m	()Z	t	shouldBurn
	m	()Llk;	v	getTrailParticle
	m	()F	w	getInertia
	m	()F	x	getLiquidInertia
	f	D	b	INITAL_ACCELERATION_POWER
	f	D	c	DEFLECTION_SCALE
	f	D	d	accelerationPower
c	cnf	net/minecraft/world/entity/projectile/EntityTippedArrow
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLcuq;Lcuq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		shotFrom
	m	(Ldcw;Lbtn;Lcuq;Lcuq;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
		p	4		shotFrom
	m	()I	F	getColor
	m	()Lcwu;	J	getPotionContents
	m	()V	K	updateColor
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrz;)V	a	addEffect
		p	1		effect
	m	(Lbtn;)V	a	doPostHurtEffects
		p	1		target
	m	(Lcuq;)V	a	setPickupItemStack
		p	1		stack
	m	(Lcwu;)V	a	setPotionContents
		p	1		potionContentsComponent
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	makeParticle
		p	1		amount
	m	(I)I	c	lambda$doPostHurtEffects$0
	m	()V	l	tick
	m	()Lcuq;	x	getDefaultPickupItem
	f	I	f	EXPOSED_POTION_DECAY_TIME
	f	I	g	NO_EFFECT_COLOR
	f	Lajw;	h	ID_EFFECT_COLOR
	f	B	i	EVENT_POTION_PUFF
c	cng	net/minecraft/world/entity/projectile/EntityDragonFireball
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lbtn;Lexc;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	()Z	t	shouldBurn
	m	()Llk;	v	getTrailParticle
	f	F	e	SPLASH_RANGE
c	cnh	net/minecraft/world/entity/projectile/EntityEvokerFangs
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDFILbtn;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		yaw
		p	9		warmup
		p	10		owner
	m	(F)F	a	getAnimationProgress
		p	1		tickDelta
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbtn;)V	a	setOwner
		p	1		owner
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbtn;)V	c	dealDamageTo
		p	1		target
	m	()V	l	tick
	m	()Lbtn;	p	getOwner
	m	()Lbsr;	s	getOwner
	f	I	b	ATTACK_DURATION
	f	I	c	LIFE_OFFSET
	f	I	d	ATTACK_TRIGGER_TICKS
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
	f	I	g	lifeTicks
	f	Z	h	clientSideAttackStarted
	f	Lbtn;	i	owner
	f	Ljava/util/UUID;	j	ownerUUID
c	cni	net/minecraft/world/entity/projectile/EntityEnderSignal
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcuq;)V	a	setItem
	m	(Ljd;)V	a	signalTo
		p	1		pos
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()F	bu	getLightLevelDependentMagicValue
	m	()Z	cu	isAttackable
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lcuq;	p	getItem
	m	()Lcuq;	s	getDefaultItem
	f	Lajw;	b	DATA_ITEM_STACK
	f	D	c	tx
	f	D	d	ty
	f	D	e	tz
	f	I	f	life
	f	Z	g	surviveAfterDeath
c	cnj	net/minecraft/world/entity/projectile/EntityFireballFireball
	m	(Lbsx;DDDLexc;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		velocity
		p	9		world
	m	(Lbsx;Lbtn;Lexc;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		velocity
		p	4		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcuq;)V	a	setItem
		p	1		stack
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcuq;	p	getItem
	m	()Lcuq;	y	getDefaultItem
	f	Lajw;	e	DATA_ITEM_STACK
c	cnk	net/minecraft/world/entity/projectile/EntityFireworks
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLcuq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Ldcw;Lbsr;DDDLcuq;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		stack
	m	(Ldcw;Lcuq;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		x
		p	5		y
		p	7		z
		p	9		shotAtAngle
	m	(Ldcw;Lcuq;Lbsr;DDDZ)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		shotAtAngle
	m	(Ldcw;Lcuq;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		stack
		p	3		shooter
	m	()Lcuq;	A	getDefaultItem
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbtn;Lbrk;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
		p	1		target
		p	2		source
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(I)V	b	lambda$tick$0
		p	1		id
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cu	isAttackable
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()Lcuq;	p	getItem
	m	()Z	t	isShotAtAngle
	m	()V	v	explode
	m	()Z	w	hasExplosion
	m	()V	x	dealExplosionDamage
	m	()Z	y	isAttachedToEntity
	m	()Ljava/util/List;	z	getExplosions
	f	Lajw;	b	DATA_ID_FIREWORKS_ITEM
	f	Lajw;	c	DATA_ATTACHED_TO_TARGET
	f	Lajw;	d	DATA_SHOT_AT_ANGLE
	f	I	e	life
	f	I	f	lifetime
	f	Lbtn;	g	attachedToEntity
c	cnl	net/minecraft/world/entity/projectile/EntityFishingHook
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;II)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		luckBonus
		p	4		waitTimeReductionTicks
	m	(Lcmx;Ldcw;II)V	<init>	<init>
		p	1		thrower
		p	2		world
		p	3		luckBonus
		p	4		waitTimeReductionTicks
	m	(Lbsr;)V	A	setHookedEntity
		p	1		entity
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lcmx;)Z	a	shouldStopFishing
		p	1		player
	m	(Lcnl$b;Lcnl$b;)Lcnl$b;	a	lambda$getOpenWaterTypeForArea$0
	m	(Lcnl;)V	a	updateOwnerInfo
		p	1		fishingBobber
	m	(Lcuq;)I	a	retrieve
		p	1		usedItem
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Ljd;)V	a	catchingFish
		p	1		pos
	m	(Ljd;Ljd;)Lcnl$b;	a	getOpenWaterTypeForArea
		p	1		start
		p	2		end
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()V	as	onClientRemoval
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Ljd;)Z	b	calculateOpenWater
		p	1		pos
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lbsr$b;	bc	getMovementEmission
	m	(Lbsr;)V	c	setOwner
		p	1		entity
	m	(Ljd;)Lcnl$b;	c	getOpenWaterTypeForBlock
		p	1		pos
	m	(Lbsr;)V	d	pullEntity
		p	1		entity
	m	()V	l	tick
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
	m	()Z	p	isOpenWaterFishing
	m	()Lcmx;	t	getPlayerOwner
	m	()Lbsr;	v	getHookedIn
	m	()V	w	checkCollision
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Layw;	c	syncronizedRandom
	f	Z	d	biting
	f	I	e	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
	f	Lajw;	g	DATA_HOOKED_ENTITY
	f	Lajw;	h	DATA_BITING
	f	I	i	life
	f	I	j	nibble
	f	I	k	timeUntilLured
	f	I	l	timeUntilHooked
	f	F	m	fishAngle
	f	Z	n	openWater
	f	Lbsr;	o	hookedIn
	f	Lcnl$a;	p	currentState
	f	I	q	luck
	f	I	r	lureSpeed
c	cnl$a	net/minecraft/world/entity/projectile/EntityFishingHook$HookState
	m	()[Lcnl$a;	a	$values
	f	Lcnl$a;	a	FLYING
	f	Lcnl$a;	b	HOOKED_IN_ENTITY
	f	Lcnl$a;	c	BOBBING
	f	[Lcnl$a;	d	$VALUES
c	cnl$b	net/minecraft/world/entity/projectile/EntityFishingHook$WaterPosition
	m	()[Lcnl$b;	a	$values
	f	Lcnl$b;	a	ABOVE_WATER
	f	Lcnl$b;	b	INSIDE_WATER
	f	Lcnl$b;	c	INVALID
	f	[Lcnl$b;	d	$VALUES
c	cnm	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Lcuq;	p	getItem
c	cnn	net/minecraft/world/entity/projectile/EntityLargeFireball
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lbtn;Lexc;I)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocity
		p	4		explosionPower
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	f	I	e	explosionPower
c	cno	net/minecraft/world/entity/projectile/EntityLlamaSpit
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lchl;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	()D	aZ	getDefaultGravity
	m	()V	l	tick
c	cnp	net/minecraft/world/entity/projectile/IProjectile
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lbsr;	H	getEffectSource
	m	()V	I	updateRotation
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Laqt;)Lzg;	a	getAddEntityPacket
		p	1		entityTrackerEntry
	m	(Lbsr;FFFFF)V	a	shootFromRotation
		p	1		shooter
		p	2		pitch
		p	3		yaw
		p	4		roll
		p	5		speed
		p	6		divergence
	m	(Lcnq;Lbsr;Lbsr;Z)Z	a	deflect
		p	1		deflection
		p	2		deflector
		p	3		owner
		p	4		fromAttack
	m	(Ldcw;Ljd;)Z	a	mayInteract
		p	1		world
		p	2		pos
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lbtn;Lbrk;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
		p	1		target
		p	2		source
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Lbsr;Z)V	b	onDeflection
		p	1		deflector
		p	2		fromAttack
	m	(Ldcw;)Z	b	mayBreak
		p	1		world
	m	(Lexa;)Lcnq;	b	hitTargetOrDeflectSelf
		p	1		hitResult
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()F	bL	getPickRadius
	m	(DDDFF)V	c	shoot
		p	1		x
		p	3		y
		p	5		z
		p	7		power
		p	8		uncertainty
	m	(Lbsr;)V	c	setOwner
		p	1		entity
	m	(DDDFF)Lexc;	d	getMovementToShoot
		p	1		x
		p	3		y
		p	5		z
		p	7		power
		p	8		uncertainty
	m	(Lbsr;)Z	d	lambda$checkLeftOwner$0
		p	0		entity
	m	(FF)F	e	lerpRotation
		p	0		prevRot
		p	1		newRot
	m	(Lbsr;)Z	e	ownedBy
		p	1		entity
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	()Lbsr;	s	getOwner
	m	()Z	t	checkLeftOwner
	m	(Lbsr;)V	w	restoreFrom
		p	1		original
	f	Ljava/util/UUID;	b	ownerUUID
	f	Lbsr;	c	cachedOwner
	f	Z	d	leftOwner
	f	Z	e	hasBeenShot
	f	Lbsr;	f	lastDeflectedBy
c	cnq	net/minecraft/world/entity/projectile/ProjectileDeflection
	m	(Lcnp;Lbsr;Layw;)V	a	lambda$static$3
		p	0		projectile
		p	1		hitEntity
		p	2		random
	m	(Lcnp;Lbsr;Layw;)V	b	lambda$static$2
		p	0		projectile
		p	1		hitEntity
		p	2		random
	m	(Lcnp;Lbsr;Layw;)V	c	lambda$static$1
		p	0		projectile
		p	1		hitEntity
		p	2		random
	m	(Lcnp;Lbsr;Layw;)V	d	lambda$static$0
		p	0		projectile
		p	1		hitEntity
		p	2		random
	m	(Lcnp;Lbsr;Layw;)V	deflect	deflect
		p	1		projectile
		p	2		hitEntity
		p	3		random
	f	Lcnq;	a	NONE
	f	Lcnq;	b	REVERSE
	f	Lcnq;	c	AIM_DEFLECT
	f	Lcnq;	d	MOMENTUM_DEFLECT
c	cnr	net/minecraft/world/entity/projectile/ProjectileHelper
	m	(Lbsr;F)V	a	rotateTowardsMovement
		p	0		entity
		p	1		delta
	m	(Lbsr;Lexc;Lexc;Lewx;Ljava/util/function/Predicate;D)Lewz;	a	getEntityHitResult
		p	0		entity
		p	1		min
		p	2		max
		p	3		box
		p	4		predicate
		p	5		maxDistance
	m	(Lbsr;Ljava/util/function/Predicate;)Lexa;	a	getHitResultOnMoveVector
		p	0		entity
		p	1		predicate
	m	(Lbsr;Ljava/util/function/Predicate;D)Lexa;	a	getHitResultOnViewVector
		p	0		entity
		p	1		predicate
		p	2		range
	m	(Lbsr;Ljava/util/function/Predicate;Ldcf$a;)Lexa;	a	getHitResultOnMoveVector
		p	0		entity
		p	1		predicate
		p	2		raycastShapeType
	m	(Lbtn;Lcul;)Lbqq;	a	getWeaponHoldingHand
		p	0		entity
		p	1		item
	m	(Lbtn;Lcuq;FLcuq;)Lcnd;	a	getMobArrow
		p	0		entity
		p	1		stack
		p	2		damageModifier
		p	3		bow
	m	(Ldcw;Lbsr;Lexc;Lexc;Lewx;Ljava/util/function/Predicate;)Lewz;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
	m	(Ldcw;Lbsr;Lexc;Lexc;Lewx;Ljava/util/function/Predicate;F)Lewz;	a	getEntityHitResult
		p	0		world
		p	1		entity
		p	2		min
		p	3		max
		p	4		box
		p	5		predicate
		p	6		margin
	m	(Lexc;Lbsr;Ljava/util/function/Predicate;Lexc;Ldcw;FLdcf$a;)Lexa;	a	getHitResult
		p	0		pos
		p	1		entity
		p	2		predicate
		p	3		velocity
		p	4		world
		p	5		margin
		p	6		raycastShapeType
	f	F	a	DEFAULT_ENTITY_HIT_RESULT_MARGIN
c	cns	net/minecraft/world/entity/projectile/EntityShulkerBullet
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lbtn;Lbsr;Lji$a;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		target
		p	4		axis
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	(Labv;)V	a	recreateFromPacket
		p	1		packet
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Lji$a;)V	a	selectNextMoveDirection
		p	1		axis
	m	(Lji;)V	a	setMoveDirection
		p	1		direction
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()D	aZ	getDefaultGravity
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Z	bR	isOnFire
	m	()F	bu	getLightLevelDependentMagicValue
	m	()V	dA	checkDespawn
	m	()Lavq;	de	getSoundSource
	m	()V	l	tick
	m	()Lji;	p	getMoveDirection
	m	()V	t	destroy
	f	D	b	SPEED
	f	Lbsr;	c	finalTarget
	f	Lji;	d	currentMoveDirection
	f	I	e	flightSteps
	f	D	f	targetDeltaX
	f	D	g	targetDeltaY
	f	D	h	targetDeltaZ
	f	Ljava/util/UUID;	i	targetId
c	cnt	net/minecraft/world/entity/projectile/EntitySmallFireball
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLexc;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		velocity
	m	(Ldcw;Lbtn;Lexc;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocity
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
c	cnu	net/minecraft/world/entity/projectile/EntitySnowball
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Ldcw;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcul;	t	getDefaultItem
	m	()Llk;	v	getParticle
c	cnv	net/minecraft/world/entity/projectile/EntitySpectralArrow
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLcuq;Lcuq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
		p	9		shotFrom
	m	(Ldcw;Lbtn;Lcuq;Lcuq;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
		p	4		shotFrom
	m	(Lbtn;)V	a	doPostHurtEffects
		p	1		target
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()V	l	tick
	m	()Lcuq;	x	getDefaultPickupItem
	f	I	f	duration
c	cnw	net/minecraft/world/entity/projectile/EntityProjectileThrowable
	m	(Lbsx;DDDLdcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbsx;Lbtn;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcuq;)V	a	setItem
		p	1		stack
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Lcuq;	p	getItem
	m	()Lcul;	t	getDefaultItem
	m	()Lcuq;	v	lambda$readAdditionalSaveData$0
	f	Lajw;	b	DATA_ITEM_STACK
c	cnx	net/minecraft/world/entity/projectile/EntityProjectile
	m	(Lbsx;DDDLdcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbsx;Lbtn;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		owner
		p	3		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(D)Z	a	shouldRenderAtSqrDistance
		p	1		distance
	m	()D	aZ	getDefaultGravity
	m	()V	l	tick
	m	(Z)Z	o	canUsePortal
		p	1		allowVehicles
c	cny	net/minecraft/world/entity/projectile/EntityEgg
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Ldcw;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	()Lcul;	t	getDefaultItem
	f	Lbsu;	b	ZERO_SIZED_DIMENSIONS
c	cnz	net/minecraft/world/entity/projectile/EntityEnderPearl
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lbsr;Ldcw;)Z	a	isAllowedToTeleportOwner
		p	0		entity
		p	1		world
	m	(Ldcw;Ldcw;)Z	a	canChangeDimensions
		p	1		from
		p	2		to
	m	(Ldcw;Lexc;)V	a	playSound
		p	1		world
		p	2		pos
	m	(Ldtc;)V	a	onInsideBlock
		p	1		state
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	()V	l	tick
	m	()Lcul;	t	getDefaultItem
c	coa	net/minecraft/world/entity/projectile/EntityThrownExpBottle
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Ldcw;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	()D	aZ	getDefaultGravity
	m	()Lcul;	t	getDefaultItem
c	cob	net/minecraft/world/entity/projectile/EntityPotion
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(Ldcw;Lbtn;)V	<init>	<init>
		p	1		world
		p	2		owner
	m	(DI)I	a	lambda$applySplash$1
		p	2		duration
	m	(Lbtn;)Z	a	lambda$static$0
		p	0		entity
	m	(Lcwu;)V	a	makeAreaOfEffectCloud
		p	1		potion
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Ljava/lang/Iterable;Lbsr;)V	a	applySplash
		p	1		effects
		p	2		entity
	m	(Ljd;)V	a	dowseFire
		p	1		pos
	m	()D	aZ	getDefaultGravity
	m	(Lbtn;Lbrk;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
		p	1		target
		p	2		source
	m	()Lcul;	t	getDefaultItem
	m	()V	v	applyWater
	m	()Z	w	isLingering
	f	D	b	SPLASH_RANGE
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE_OR_ON_FIRE
	f	D	d	SPLASH_RANGE_SQ
c	coc	net/minecraft/world/entity/projectile/EntityThrownTrident
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDDLcuq;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		stack
	m	(Ldcw;Lbtn;Lcuq;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		stack
	m	()F	D	getWaterInertia
	m	()Z	F	isFoil
	m	()Z	J	isAcceptibleReturnOwner
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;Lewy;Lcuq;)V	a	hitBlockEnchantmentEffects
		p	1		world
		p	2		blockHitResult
		p	3		weaponStack
	m	(Lcmx;)Z	a	tryPickup
		p	1		player
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexc;Lexc;)Lewz;	a	findHitEntity
		p	1		currentPosition
		p	2		nextPosition
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Lcul;)V	b	lambda$hitBlockEnchantmentEffects$0
		p	1		item
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	b_	playerTouch
		p	1		player
	m	(Lcuq;)B	c	getLoyaltyFromItem
		p	1		stack
	m	()Lcuq;	dS	getWeaponItem
	m	(DDD)Z	k	shouldRender
		p	1		cameraX
		p	3		cameraY
		p	5		cameraZ
	m	()V	l	tick
	m	()V	p	tickDespawn
	m	()Lavo;	t	getDefaultHitGroundSoundEvent
	m	()Lcuq;	x	getDefaultPickupItem
	f	I	f	clientSideReturnTridentTickCount
	f	Lajw;	g	ID_LOYALTY
	f	Lajw;	h	ID_FOIL
	f	Z	i	dealtDamage
c	cod	net/minecraft/world/entity/projectile/EntityWitherSkull
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;Lbtn;Lexc;)V	<init>	<init>
		p	1		world
		p	2		owner
		p	3		velocity
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setDangerous
		p	1		charged
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bR	isOnFire
	m	()Z	t	shouldBurn
	m	()F	w	getInertia
	m	()Z	y	isDangerous
	f	Lajw;	e	DATA_DANGEROUS
c	cof	net/minecraft/world/entity/projectile/windcharge/AbstractWindCharge
	m	(Lbsx;DDDLexc;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		velocity
		p	9		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;Lbsr;DDD)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		owner
		p	4		x
		p	6		y
		p	8		z
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lewy;)V	a	onHitBlock
		p	1		blockHitResult
	m	(Lewz;)V	a	onHitEntity
		p	1		entityHitResult
	m	(Lexa;)V	a	onHit
		p	1		hitResult
	m	(Lexc;)V	a	explode
		p	1		pos
	m	()Lewx;	au	makeBoundingBox
	m	(Lbsr;)Z	b	canHitEntity
		p	1		entity
	m	(Lbsr;)Z	i	canCollideWith
		p	1		other
	m	(DDD)V	j	push
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()V	l	tick
	m	()Lcuq;	p	getItem
	m	()Z	t	shouldBurn
	m	()Llk;	v	getTrailParticle
	m	()F	w	getInertia
	m	()F	x	getLiquidInertia
	f	Ldcp;	e	EXPLOSION_DAMAGE_CALCULATOR
	f	D	f	JUMP_SCALE
c	cog	net/minecraft/world/entity/projectile/windcharge/BreezeWindCharge
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lckz;Ldcw;)V	<init>	<init>
		p	1		breeze
		p	2		world
	m	(Lexc;)V	a	explode
		p	1		pos
	f	F	g	RADIUS
c	coh	net/minecraft/world/entity/projectile/windcharge/WindCharge
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lcmx;Ldcw;DDD)V	<init>	<init>
		p	1		player
		p	2		world
		p	3		x
		p	5		y
		p	7		z
	m	(Ldcw;DDDLexc;)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
		p	8		velocity
	m	(Lcnq;Lbsr;Lbsr;Z)Z	a	deflect
		p	1		deflection
		p	2		deflector
		p	3		owner
		p	4		fromAttack
	m	(Lexc;)V	a	explode
		p	1		pos
	m	()V	l	tick
	f	Ldcp;	g	EXPLOSION_DAMAGE_CALCULATOR
	f	F	h	RADIUS
	f	I	i	noDeflectTicks
c	coi	net/minecraft/world/entity/raid/Raid
	m	(ILaqu;Ljd;)V	<init>	<init>
		p	1		id
		p	2		world
		p	3		pos
	m	(Laqu;Lub;)V	<init>	<init>
		p	1		world
		p	2		nbt
	m	()Z	A	isFinalWave
	m	()Z	B	hasBonusWave
	m	()Z	C	hasSpawnedBonusWave
	m	()Z	D	shouldSpawnBonusGroup
	m	()V	E	updateRaiders
	m	()Z	F	shouldSpawnGroup
	m	()V	G	setDirty
	m	()Z	a	isOver
	m	(I)V	a	setRaidOmenLevel
		p	1		badOmenLevel
	m	(II)Ljd;	a	findRandomSpawnPos
		p	1		proximity
		p	2		tries
	m	(ILcoj;)V	a	setLeader
		p	1		wave
		p	2		entity
	m	(ILcoj;Ljd;Z)V	a	joinRaid
		p	1		wave
		p	2		raider
		p	3		pos
		p	4		existing
	m	(ILcoj;Z)Z	a	addWaveMob
		p	1		wave
		p	2		entity
		p	3		countHealth
	m	(Laqv;)Z	a	absorbRaidOmen
	m	(Lbqo;)I	a	getNumGroups
		p	1		difficulty
	m	(Lbsr;)V	a	addHeroOfTheVillage
		p	1		entity
	m	(Lcoi$b;IZ)I	a	getDefaultNumSpawns
		p	1		member
		p	2		wave
		p	3		extra
	m	(Lcoi$b;Layw;ILbqp;Z)I	a	getPotentialBonusSpawns
		p	1		member
		p	2		random
		p	3		wave
		p	4		localDifficulty
		p	5		extra
	m	(Lcoj;Z)V	a	removeFromRaid
		p	1		entity
		p	2		countHealth
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$2
		p	0		wavex
	m	(Ljd;)V	a	playSound
		p	1		pos
	m	(Ljn;)Lcuq;	a	getLeaderBannerInstance
		p	0		bannerPatternLookup
	m	(Lub;)Lub;	a	save
		p	1		nbt
	m	()Z	b	isBetweenWaves
	m	(I)Lcoj;	b	getLeader
		p	1		wave
	m	(ILcoj;)Z	b	addWaveMob
		p	1		wave
		p	2		entity
	m	(Laqv;)Z	b	lambda$validPlayer$0
		p	1		player
	m	(Ljd;)V	b	spawnGroup
		p	1		pos
	m	()Z	c	hasFirstWaveSpawned
	m	(I)V	c	removeLeader
		p	1		wave
	m	(Ljd;)V	c	setCenter
		p	1		center
	m	()Z	d	isStopped
	m	(I)Ljava/util/Optional;	d	getValidSpawnPos
		p	1		proximity
	m	(Ljd;)D	d	lambda$moveRaidCenterToNearbyVillageSection$1
		p	1		pos
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Ldcw;	i	getLevel
	m	()Z	j	isStarted
	m	()I	k	getGroupsSpawned
	m	()I	l	getMaxRaidOmenLevel
	m	()I	m	getRaidOmenLevel
	m	()V	n	stop
	m	()V	o	tick
	m	()V	p	updateBossbar
	m	()F	q	getHealthOfLivingRaiders
	m	()I	r	getTotalRaidersAlive
	m	()Ljd;	s	getCenter
	m	()I	t	getId
	m	()Z	u	isActive
	m	()F	v	getEnchantOdds
	m	()Ljava/util/function/Predicate;	w	validPlayer
	m	()V	x	updatePlayers
	m	()V	y	moveRaidCenterToNearbyVillageSection
	m	()Z	z	hasMoreWaves
	f	Ljava/util/Set;	A	heroesOfTheVillage
	f	J	B	ticksActive
	f	Ljd;	C	center
	f	Laqu;	D	level
	f	Z	E	started
	f	I	F	id
	f	F	G	totalHealth
	f	I	H	raidOmenLevel
	f	Z	I	active
	f	I	J	groupsSpawned
	f	Laqr;	K	raidEvent
	f	I	L	postRaidTicks
	f	I	M	raidCooldownTicks
	f	Layw;	N	random
	f	I	O	numGroups
	f	Lcoi$a;	P	status
	f	I	Q	celebrationTicks
	f	Ljava/util/Optional;	R	waveSpawnPos
	f	I	a	VILLAGE_RADIUS_BUFFER
	f	I	b	MAX_NO_ACTION_TIME
	f	I	c	MAX_CELEBRATION_TICKS
	f	I	d	TICKS_PER_DAY
	f	I	e	DEFAULT_MAX_RAID_OMEN_LEVEL
	f	I	f	VALID_RAID_RADIUS_SQR
	f	I	g	RAID_REMOVAL_THRESHOLD_SQR
	f	I	h	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	i	ATTEMPT_RAID_FARTHEST
	f	I	j	ATTEMPT_RAID_CLOSE
	f	I	k	ATTEMPT_RAID_INSIDE
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Lwz;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	t	LOW_MOB_THRESHOLD
	f	Lwz;	u	RAID_NAME_COMPONENT
	f	Lwz;	v	RAID_BAR_VICTORY_COMPONENT
	f	Lwz;	w	RAID_BAR_DEFEAT_COMPONENT
	f	I	x	HERO_OF_THE_VILLAGE_DURATION
	f	Ljava/util/Map;	y	groupToLeaderMap
	f	Ljava/util/Map;	z	groupRaiderMap
c	coi$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$Difficulty
c	coi$a	net/minecraft/world/entity/raid/Raid$Status
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcoi$a;	a	getByName
		p	0		name
	m	()[Lcoi$a;	b	$values
	f	Lcoi$a;	a	ONGOING
	f	Lcoi$a;	b	VICTORY
	f	Lcoi$a;	c	LOSS
	f	Lcoi$a;	d	STOPPED
	f	[Lcoi$a;	e	VALUES
	f	[Lcoi$a;	f	$VALUES
c	coi$b	net/minecraft/world/entity/raid/Raid$Wave
	m	(Ljava/lang/String;ILbsx;[I)V	<init>	<init>
		p	3		type
		p	4		countInWave
	m	()[Lcoi$b;	a	$values
	f	Lcoi$b;	a	VINDICATOR
	f	Lcoi$b;	b	EVOKER
	f	Lcoi$b;	c	PILLAGER
	f	Lcoi$b;	d	WITCH
	f	Lcoi$b;	e	RAVAGER
	f	[Lcoi$b;	f	VALUES
	f	Lbsx;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lcoi$b;	i	$VALUES
c	coj	net/minecraft/world/entity/raid/EntityRaider
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Z)V	A	setCanJoinRaid
		p	1		ableToJoinRaid
	m	()V	B	registerGoals
	m	(Z)V	B	setCelebrating
		p	1		celebrating
	m	()Z	Y	requiresCustomPersistence
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;IZ)V	a	applyRaidBuffs
		p	1		world
		p	2		wave
		p	3		unused
	m	(Lbrk;)V	a	die
		p	1		damageSource
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Lcoi;)V	a	setCurrentRaid
		p	1		raid
	m	(Lcoj;)Layw;	a	access$000
	m	(Lddl;Lbqp;Lbtr;Lbuh;)Lbuh;	a	finalizeSpawn
		p	1		world
		p	2		difficulty
		p	3		spawnReason
		p	4		entityData
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lavo;	ai_	getCelebrateSound
	m	(I)V	b	setWave
		p	1		wave
	m	(Lcjh;)V	b	pickUpItem
		p	1		item
	m	(Lcoj;)Layw;	b	access$100
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(I)V	c	setTicksOutsideRaid
		p	1		outOfRaidCounter
	m	(Lcjh;)Z	c	lambda$static$0
		p	0		itemEntity
	m	(Lcoj;)Z	c	access$200
	m	(Lcoj;)Layw;	d	access$300
	m	(Lcoj;)Layw;	e	access$400
	m	()Z	gA	hasRaid
	m	()Z	gB	hasActiveRaid
	m	()I	gC	getWave
	m	()Z	gD	isCelebrating
	m	()I	gE	getTicksOutsideRaid
	m	()V	gp	updateNoActionTime
	m	()Z	gr	canJoinPatrol
	m	()Z	gx	canJoinRaid
	m	()Lcoi;	gy	getCurrentRaid
	m	()Z	gz	isCaptain
	m	(D)Z	h	removeWhenFarAway
		p	1		distanceSquared
	m	()V	m_	aiStep
	f	Ljava/util/function/Predicate;	b	ALLOWED_ITEMS
	f	Lajw;	c	IS_CELEBRATING
	f	Z	cc	canJoinRaid
	f	I	cd	ticksOutsideRaid
	f	Lcoi;	d	raid
	f	I	e	wave
c	coj$a	net/minecraft/world/entity/raid/EntityRaider$a
	m	(Lcoj;Lcjk;F)V	<init>	<init>
		p	1		raider
		p	2		illager
		p	3		distance
	m	()Z	V_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcef;	a	shoutTargeting
	f	Lcoj;	b	mob
	f	F	c	hostileRadiusSqr
c	coj$b	net/minecraft/world/entity/raid/EntityRaider$b
	m	(Lcoj;Lcoj;)V	<init>	<init>
		p	2		actor
	m	()V	a	tick
	m	()Z	b	canUse
	f	Lcoj;	a	mob
c	coj$c	net/minecraft/world/entity/raid/EntityRaider$c
	m	(Lcoj;Lcoj;)V	<init>	<init>
		p	2		raider
	m	()V	a	tick
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	f	Lcoj;	a	this$0
	f	Lcoj;	b	mob
c	coj$d	net/minecraft/world/entity/raid/EntityRaider$d
	m	(Lcoj;DI)V	<init>	<init>
		p	1		raider
		p	2		speed
		p	4		distance
	m	()V	a	tick
	m	(Ljd;)Z	a	hasNotVisited
		p	1		pos
	m	(Ljm;)Z	a	lambda$hasSuitablePoi$0
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()V	k	updateVisited
	f	Lcoj;	a	raider
	f	D	b	speedModifier
	f	Ljd;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
c	cok	net/minecraft/world/entity/raid/PersistentRaid
	m	(Laqu;)V	<init>	<init>
		p	1		world
	m	()V	a	tick
	m	(I)Lcoi;	a	get
		p	1		id
	m	(Laqu;)Leql$a;	a	factory
		p	0		world
	m	(Laqu;Ljd;)Lcoi;	a	getOrCreateRaid
		p	1		world
		p	2		pos
	m	(Laqu;Lub;)Lcok;	a	load
		p	0		world
		p	1		nbt
	m	(Laqu;Lub;Ljo$a;)Lcok;	a	lambda$factory$1
		p	1		nbt
		p	2		registryLookup
	m	(Laqv;Ljd;)Lcoi;	a	createOrExtendRaid
		p	1		player
		p	2		pos
	m	(Lcoj;Lcoi;)Z	a	canJoinRaid
		p	0		raider
		p	1		raid
	m	(Ljd;I)Lcoi;	a	getNearbyRaid
		p	1		pos
		p	2		searchDistance
	m	(Ljm;)Ljava/lang/String;	a	getFileId
		p	0		dimensionTypeEntry
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getUniqueId
	m	(Laqu;)Lcok;	b	lambda$factory$0
	m	(Ljm;)Z	b	lambda$createOrExtendRaid$2
		p	0		poiType
	f	Ljava/lang/String;	a	RAID_FILE_ID
	f	Ljava/util/Map;	b	raidMap
	f	Laqu;	c	level
	f	I	d	nextAvailableID
	f	I	e	tick
c	com	net/minecraft/world/entity/schedule/Activity
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcom;	a	register
		p	0		id
	f	Ljava/lang/String;	A	name
	f	I	B	hashCode
	f	Lcom;	a	CORE
	f	Lcom;	b	IDLE
	f	Lcom;	c	WORK
	f	Lcom;	d	PLAY
	f	Lcom;	e	REST
	f	Lcom;	f	MEET
	f	Lcom;	g	PANIC
	f	Lcom;	h	RAID
	f	Lcom;	i	PRE_RAID
	f	Lcom;	j	HIDE
	f	Lcom;	k	FIGHT
	f	Lcom;	l	CELEBRATE
	f	Lcom;	m	ADMIRE_ITEM
	f	Lcom;	n	AVOID
	f	Lcom;	o	RIDE
	f	Lcom;	p	PLAY_DEAD
	f	Lcom;	q	LONG_JUMP
	f	Lcom;	r	RAM
	f	Lcom;	s	TONGUE
	f	Lcom;	t	SWIM
	f	Lcom;	u	LAY_SPAWN
	f	Lcom;	v	SNIFF
	f	Lcom;	w	INVESTIGATE
	f	Lcom;	x	ROAR
	f	Lcom;	y	EMERGE
	f	Lcom;	z	DIG
c	coo	net/minecraft/world/entity/schedule/ActivityFrame
	m	(IF)V	<init>	<init>
		p	1		startTime
		p	2		priority
	m	()I	a	getTimeStamp
	m	()F	b	getValue
	f	I	a	timeStamp
	f	F	b	value
c	cop	net/minecraft/world/entity/schedule/Schedule
	m	(I)Lcom;	a	getActivityAt
		p	1		time
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
		p	1		rule
	m	(Lcom;)V	a	ensureTimelineExistsFor
		p	1		activity
	m	(Lcom;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
		p	1		rule
	m	(Ljava/lang/String;)Lcoq;	a	register
		p	0		id
	m	(Lcom;)Lcor;	b	getTimelineFor
		p	1		activity
	m	(Lcom;)Ljava/util/List;	c	getAllTimelinesExceptFor
		p	1		activity
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lcop;	c	EMPTY
	f	Lcop;	d	SIMPLE
	f	Lcop;	e	VILLAGER_BABY
	f	Lcop;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
c	coq	net/minecraft/world/entity/schedule/ScheduleBuilder
	m	(Lcop;)V	<init>	<init>
		p	1		schedule
	m	()Lcop;	a	build
	m	(ILcom;)Lcoq;	a	changeActivityAt
		p	1		startTime
		p	2		activity
	m	(Lcoq$a;)V	a	lambda$build$1
		p	1		activity
	m	(Lcoq$a;Lcor;)V	a	lambda$build$0
		p	1		rule
	f	Lcop;	a	schedule
	f	Ljava/util/List;	b	transitions
c	coq$a	net/minecraft/world/entity/schedule/ScheduleBuilder$a
	m	(ILcom;)V	<init>	<init>
		p	1		startTime
		p	2		activity
	m	()I	a	getTime
	m	()Lcom;	b	getActivity
	f	I	a	time
	f	Lcom;	b	activity
c	cor	net/minecraft/world/entity/schedule/ScheduleActivity
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(I)F	a	getValueAt
		p	1		time
	m	(IF)Lcor;	a	addKeyframe
		p	1		startTime
		p	2		priority
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lcoo;)V	a	lambda$sortAndDeduplicateKeyframes$0
		p	0		entry
	m	(Ljava/util/Collection;)Lcor;	a	addKeyframes
		p	1		entries
	m	()V	b	sortAndDeduplicateKeyframes
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
c	cot	net/minecraft/world/entity/vehicle/EntityMinecartAbstract
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Lbsx;Ldcw;DDD)V	<init>	<init>
		p	1		type
		p	2		world
		p	3		x
		p	5		y
		p	7		z
	m	()Z	A	hasCustomDisplay
	m	()D	P_	lerpTargetZ
	m	()F	Q_	lerpTargetXRot
	m	(DDDD)Lexc;	a	getPosOffs
		p	1		x
		p	3		y
		p	5		z
		p	7		offset
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Laqu;DDDLcot$a;Lcuq;Lcmx;)Lcot;	a	createMinecart
		p	0		world
		p	1		x
		p	3		y
		p	5		z
		p	7		type
		p	8		stack
		p	9		player
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Ldug;)Lcom/mojang/datafixers/util/Pair;	a	exits
		p	0		shape
	m	(Ljava/util/EnumMap;)V	a	lambda$static$2
		p	0		map
	m	(Ljd$a;)Lexv;	a	lambda$getDismountLocationForPassenger$0
	m	(Ljd;)Z	a	isRedstoneConductor
		p	1		pos
	m	(Lji$a;Ll$a;)Lexc;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(Z)V	a	setCustomDisplay
		p	1		present
	m	()F	aO	getBlockSpeedFactor
	m	()D	aZ	getDefaultGravity
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Ljd;)Lexv;	b	lambda$getDismountLocationForPassenger$1
		p	1		pos
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	bA	isPickable
	m	()Z	bB	isPushable
	m	()Lbsr$b;	bc	getMovementEmission
	m	(I)V	c	setDisplayOffset
		p	1		offset
	m	(Ldtc;)V	c	setDisplayBlockState
		p	1		state
	m	(Ljd;Ldtc;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()Lji;	cI	getMotionDirection
	m	()D	c_	lerpTargetX
	m	()Z	cj	isOnRails
	m	()Lcuq;	dB	getPickResult
	m	()D	d_	lerpTargetY
	m	()F	e_	lerpTargetYRot
	m	(Lbsr;)V	h	push
		p	1		entity
	m	()Lewx;	h_	getBoundingBoxForCulling
	m	(Lbsr;)Z	i	canCollideWith
		p	1		other
	m	()V	l	tick
	m	(DDD)V	l	lerpMotion
		p	1		x
		p	3		y
		p	5		z
	m	(F)V	n	animateHurt
		p	1		yaw
	m	()D	p	getMaxSpeed
	m	(DDD)Lexc;	p	getPos
		p	1		x
		p	3		y
		p	5		z
	m	()V	s	comeOffTrack
	m	()V	t	applyNaturalSlowdown
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	w	getDisplayBlockState
	m	()Ldtc;	x	getDefaultDisplayBlockState
	m	()I	y	getDisplayOffset
	m	()I	z	getDefaultDisplayOffset
	f	F	b	WATER_SLOWDOWN_FACTOR
	f	Lexc;	c	LOWERED_PASSENGER_ATTACHMENT
	f	Lajw;	d	DATA_ID_DISPLAY_BLOCK
	f	Lajw;	e	DATA_ID_DISPLAY_OFFSET
	f	Lajw;	i	DATA_ID_CUSTOM_DISPLAY
	f	Lcom/google/common/collect/ImmutableMap;	j	POSE_DISMOUNT_HEIGHTS
	f	Z	k	flipped
	f	Z	l	onRails
	f	I	m	lerpSteps
	f	D	n	lerpX
	f	D	o	lerpY
	f	D	p	lerpZ
	f	D	q	lerpYRot
	f	D	r	lerpXRot
	f	Lexc;	s	targetDeltaMovement
	f	Ljava/util/Map;	t	EXITS
c	cot$1	net/minecraft/world/entity/vehicle/EntityMinecartAbstract$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	cot$a	net/minecraft/world/entity/vehicle/EntityMinecartAbstract$EnumMinecartType
	m	()[Lcot$a;	a	$values
	f	Lcot$a;	a	RIDEABLE
	f	Lcot$a;	b	CHEST
	f	Lcot$a;	c	FURNACE
	f	Lcot$a;	d	TNT
	f	Lcot$a;	e	SPAWNER
	f	Lcot$a;	f	HOPPER
	f	Lcot$a;	g	COMMAND_BLOCK
	f	[Lcot$a;	h	$VALUES
c	cou	net/minecraft/world/entity/vehicle/EntityMinecartContainer
	m	(Lbsx;DDDLdcw;)V	<init>	<init>
		p	1		type
		p	2		x
		p	4		y
		p	6		z
		p	8		world
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()Lakq;	B	getLootTable
	m	()J	C	getLootTableSeed
	m	()Ljv;	D	getItemStacks
	m	()V	E	clearItemStacks
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Lakq;J)V	a	setLootTable
		p	1		lootTable
		p	2		lootSeed
	m	(Lbrk;)V	a	destroy
		p	1		source
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	()V	t	applyNaturalSlowdown
	f	Ljv;	c	itemStacks
	f	Lakq;	d	lootTable
	f	J	e	lootTableSeed
c	cov	net/minecraft/world/entity/vehicle/EntityBoat
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()V	B	tickBubbleColumn
	m	()V	C	tickLerp
	m	()Lcov$a;	D	getStatus
	m	()Z	E	checkInWater
	m	()I	F	getMaxPassengers
	m	()Lcov$a;	H	isUnderwater
	m	()V	I	floatBoat
	m	()V	J	controlBoat
	m	()I	K	getBubbleTime
	m	()D	P_	lerpTargetZ
	m	()F	Q_	lerpTargetXRot
	m	()Lbtk$a;	X_	getLeashData
	m	(DDDFFI)V	a	lerpTo
		p	1		x
		p	3		y
		p	5		z
		p	7		yaw
		p	8		pitch
		p	9		interpolationSteps
	m	(DZLdtc;Ljd;)V	a	checkFallDamage
		p	1		heightDifference
		p	3		onGround
		p	4		state
		p	5		landedPosition
	m	(F)F	a	getBubbleAngle
		p	1		tickDelta
	m	(IF)F	a	getRowingTime
		p	1		paddle
		p	2		tickDelta
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lbsr;Lbsr$a;)V	a	positionRider
		p	1		passenger
		p	2		positionUpdater
	m	(Lbsr;Lbsr;)Z	a	canVehicleCollide
		p	0		entity
		p	1		other
	m	(Lbsr;Lbsu;F)Lexc;	a	getPassengerAttachmentPoint
		p	1		passenger
		p	2		dimensions
		p	3		scaleFactor
	m	(Lbtk$a;)V	a	setLeashData
		p	1		leashData
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lcov$b;)V	a	setVariant
		p	1		variant
	m	(Ljava/lang/Object;)V	a	setVariant
		p	1		variant
	m	(Lji$a;Ll$a;)Lexc;	a	getRelativePortalPosition
		p	1		portalAxis
		p	2		portalRect
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(ZZZZ)V	a	setInput
		p	1		pressingLeft
		p	2		pressingRight
		p	3		pressingForward
		p	4		pressingBack
	m	()D	aZ	getDefaultGravity
	m	()Lcul;	ak_	getDropItem
	m	(I)V	b	setBubbleTime
		p	1		wobbleTicks
	m	(Lbsr;F)V	b	elasticRangeLeashBehaviour
		p	1		leashHolder
		p	2		distance
	m	(Lbtn;)Lexc;	b	getDismountLocationForPassenger
		p	1		passenger
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(ZZ)V	b	setPaddleState
		p	1		leftMoving
		p	2		rightMoving
	m	()Z	bA	isPickable
	m	()Z	bB	isPushable
	m	()Z	bG	canBeCollidedWith
	m	()Lbsr$b;	bc	getMovementEmission
	m	()Z	bk	isUnderWater
	m	(I)Z	c	getPaddleState
		p	1		paddle
	m	(Lbsr;)Z	c	hasEnoughSpaceFor
		p	1		entity
	m	()Lji;	cI	getMotionDirection
	m	()Lexc;	cM	getLeashOffset
	m	()Lbtn;	cQ	getControllingPassenger
	m	()D	c_	lerpTargetX
	m	()Lwz;	cs	getTypeName
	m	()Ljava/lang/Object;	d	getVariant
	m	(Lbsr;)V	d	clampRotation
		p	1		passenger
	m	()Lcuq;	dB	getPickResult
	m	()D	d_	lerpTargetY
	m	(Lbsr;)Z	e	lambda$tickBubbleColumn$0
		p	0		entity
	m	()F	e_	lerpTargetYRot
	m	(Lbsr;)V	h	push
		p	1		entity
	m	(Lbsr;)Z	i	canCollideWith
		p	1		other
	m	(Lbsr;)V	k	onPassengerTurned
		p	1		passenger
	m	()V	l	tick
	m	(Z)V	l	onAboveBubbleCol
		p	1		drag
	m	(F)V	n	animateHurt
		p	1		yaw
	m	(Lbsr;)Z	r	canAddPassenger
		p	1		passenger
	m	()Lavo;	s	getPaddleSound
	m	()F	t	getWaterLevelAbove
	m	()F	v	getGroundFriction
	m	()F	w	getSinglePassengerXOffset
	m	()Lcov$b;	x	getVariant
	f	D	aD	lerpYRot
	f	D	aE	lerpXRot
	f	Z	aF	inputLeft
	f	Z	aG	inputRight
	f	Z	aH	inputUp
	f	Z	aI	inputDown
	f	D	aJ	waterLevel
	f	F	aK	landFriction
	f	Lcov$a;	aL	status
	f	Lcov$a;	aM	oldStatus
	f	D	aN	lastYd
	f	Z	aO	isAboveBubbleColumn
	f	Z	aP	bubbleColumnDirectionIsDown
	f	F	aQ	bubbleMultiplier
	f	F	aR	bubbleAngle
	f	F	aS	bubbleAngleO
	f	Lbtk$a;	aT	leashData
	f	I	b	PADDLE_LEFT
	f	I	c	PADDLE_RIGHT
	f	D	d	PADDLE_SOUND_TIME
	f	I	e	BUBBLE_TIME
	f	Lajw;	i	DATA_ID_TYPE
	f	Lajw;	j	DATA_ID_PADDLE_LEFT
	f	Lajw;	k	DATA_ID_PADDLE_RIGHT
	f	Lajw;	l	DATA_ID_BUBBLE_TIME
	f	I	m	TIME_TO_EJECT
	f	F	n	PADDLE_SPEED
	f	[F	o	paddlePositions
	f	F	p	invFriction
	f	F	q	outOfControlTicks
	f	F	r	deltaRotation
	f	I	s	lerpSteps
	f	D	t	lerpX
	f	D	u	lerpY
	f	D	v	lerpZ
c	cov$a	net/minecraft/world/entity/vehicle/EntityBoat$EnumStatus
	m	()[Lcov$a;	a	$values
	f	Lcov$a;	a	IN_WATER
	f	Lcov$a;	b	UNDER_WATER
	f	Lcov$a;	c	UNDER_FLOWING_WATER
	f	Lcov$a;	d	ON_LAND
	f	Lcov$a;	e	IN_AIR
	f	[Lcov$a;	f	$VALUES
c	cov$b	net/minecraft/world/entity/vehicle/EntityBoat$EnumBoatType
	m	(Ljava/lang/String;ILdfy;Ljava/lang/String;)V	<init>	<init>
		p	3		baseBlock
		p	4		name
	m	()Ljava/lang/String;	a	getName
	m	(I)Lcov$b;	a	byId
		p	0		type
	m	(Ljava/lang/String;)Lcov$b;	a	byName
		p	0		name
	m	()Ldfy;	b	getPlanks
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcov$b;	d	$values
	f	Lcov$b;	a	OAK
	f	Lcov$b;	b	SPRUCE
	f	Lcov$b;	c	BIRCH
	f	Lcov$b;	d	JUNGLE
	f	Lcov$b;	e	ACACIA
	f	Lcov$b;	f	CHERRY
	f	Lcov$b;	g	DARK_OAK
	f	Lcov$b;	h	MANGROVE
	f	Lcov$b;	i	BAMBOO
	f	Lazk$a;	j	CODEC
	f	Ljava/lang/String;	k	name
	f	Ldfy;	l	planks
	f	Ljava/util/function/IntFunction;	m	BY_ID
	f	[Lcov$b;	n	$VALUES
c	cow	net/minecraft/world/entity/vehicle/ChestBoat
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
	m	()Lakq;	B	getLootTable
	m	()J	C	getLootTableSeed
	m	()Ljv;	D	getItemStacks
	m	()V	E	clearItemStacks
	m	()I	F	getMaxPassengers
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Lbrk;)V	a	destroy
		p	1		source
	m	(Lbsr$c;)V	a	remove
		p	1		reason
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	(I)Lbug;	a_	getSlot
		p	1		mappedIndex
	m	()Lcul;	ak_	getDropItem
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcmx;)V	b	openCustomInventoryScreen
		p	1		player
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()V	e	setChanged
	m	(Lcmx;)V	e	unpackLootTable
		p	1		player
	m	()F	w	getSinglePassengerXOffset
	f	I	i	CONTAINER_SIZE
	f	Ljv;	j	itemStacks
	f	Lakq;	k	lootTable
	f	J	l	lootTableSeed
c	cow$1	net/minecraft/world/entity/vehicle/ChestBoat$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$vehicle$Boat$Type
c	cox	net/minecraft/world/entity/vehicle/ContainerEntity
	m	()Lakq;	B	getLootTable
	m	()J	C	getLootTableSeed
	m	()Ljv;	D	getItemStacks
	m	()V	E	clearItemStacks
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Lbrk;Ldcw;Lbsr;)V	a	chestVehicleDestroyed
		p	1		source
		p	2		world
		p	3		vehicle
	m	(Lub;Ljo$a;)V	a	addChestVehicleSaveData
		p	1		nbt
		p	2		registriesLookup
	m	(II)Lcuq;	b	removeChestVehicleItem
		p	1		slot
		p	2		amount
	m	(Lub;Ljo$a;)V	b	readChestVehicleSaveData
		p	1		nbt
		p	2		registriesLookup
	m	()Z	c	isEmpty
	m	(ILcuq;)V	c	setChestVehicleItem
		p	1		slot
		p	2		stack
	m	()Lewx;	cK	getBoundingBox
	m	(Lcmx;)Lbqr;	c_	interactWithContainerVehicle
		p	1		player
	m	()Z	dJ	isRemoved
	m	()Ldcw;	dO	level
	m	()Lexc;	dm	position
	m	(I)Lcuq;	e_	removeChestVehicleItemNoUpdate
		p	1		slot
	m	()V	f	clearChestVehicleContent
	m	(Lcmx;)V	f	unpackChestVehicleLootTable
		p	1		player
	m	(I)Lcuq;	f_	getChestVehicleItem
		p	1		slot
	m	()Z	g	isChestVehicleEmpty
	m	(Lcmx;)Z	g	isChestVehicleStillValid
		p	1		player
	m	(I)Lbug;	g_	getChestVehicleSlot
		p	1		slot
c	cox$1	net/minecraft/world/entity/vehicle/ContainerEntity$1
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	I	b	val$slot
	f	Lcox;	c	this$0
c	coy	net/minecraft/world/entity/vehicle/DismountUtil
	m	(D)Z	a	isBlockFloorValid
		p	0		height
	m	(Lbsx;Ldcg;Ljd;Z)Lexc;	a	findSafeDismountLocation
		p	0		entityType
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Ldcc;Ljd;)Lexv;	a	nonClimbableShape
		p	0		world
		p	1		pos
	m	(Ldcg;Lbtn;Lewx;)Z	a	canDismountTo
		p	0		world
		p	1		entity
		p	2		targetBox
	m	(Ldcg;Lexc;Lbtn;Lbua;)Z	a	canDismountTo
		p	0		world
		p	1		offset
		p	2		entity
		p	3		pose
	m	(Ldcg;Ljd;)Lexv;	a	lambda$findSafeDismountLocation$0
	m	(Ljd;ILjava/util/function/Function;)D	a	findCeilingFrom
		p	0		pos
		p	1		maxDistance
		p	2		collisionShapeGetter
	m	(Lji;)[[I	a	offsetsForDirection
		p	0		movementDirection
c	coz	net/minecraft/world/entity/vehicle/EntityMinecartRideable
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	()Lcul;	ak_	getDropItem
	m	()Lcot$a;	v	getMinecartType
c	cpa	net/minecraft/world/entity/vehicle/EntityMinecartChest
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	()Lcul;	ak_	getDropItem
	m	()I	b	getContainerSize
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	m	()I	z	getDefaultDisplayOffset
c	cpb	net/minecraft/world/entity/vehicle/EntityMinecartCommandBlock
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldbx;	B	getCommandBlock
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lajw;)V	a	onSyncedDataUpdated
		p	1		data
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcul;	ak_	getDropItem
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	cP	onlyOpCanSetNbt
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	f	Lajw;	c	DATA_ID_COMMAND_NAME
	f	Lajw;	d	DATA_ID_LAST_OUTPUT
	f	Ldbx;	e	commandBlock
	f	I	i	ACTIVATION_DELAY
	f	I	j	lastActivated
c	cpb$a	net/minecraft/world/entity/vehicle/EntityMinecartCommandBlock$a
	m	()Laqu;	e	getLevel
	m	()V	f	onUpdated
	m	()Lexc;	g	getPosition
	m	()Lcpb;	h	getMinecart
	m	()Let;	i	createCommandSourceStack
	m	()Z	j	isValid
	f	Lcpb;	b	this$0
c	cpc	net/minecraft/world/entity/vehicle/EntityMinecartFurnace
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Z	B	hasFuel
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lcmx;Lbqq;)Lbqr;	a	interact
		p	1		player
		p	2		hand
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcul;	ak_	getDropItem
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setHasFuel
		p	1		lit
	m	(Ljd;Ldtc;)V	c	moveAlongTrack
		p	1		pos
		p	2		state
	m	()V	l	tick
	m	()D	p	getMaxSpeed
	m	()V	t	applyNaturalSlowdown
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	f	D	c	xPush
	f	D	d	zPush
	f	Lajw;	e	DATA_ID_FUEL
	f	I	i	fuel
	f	Lcyw;	j	INGREDIENT
c	cpd	net/minecraft/world/entity/vehicle/EntityMinecartHopper
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Z	F	isEnabled
	m	()D	H	getLevelX
	m	()D	I	getLevelY
	m	()D	J	getLevelZ
	m	()Z	K	isGridAligned
	m	()Z	L	suckInItems
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcul;	ak_	getDropItem
	m	()I	b	getContainerSize
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Z)V	b	setEnabled
		p	1		enabled
	m	()V	l	tick
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	m	()I	z	getDefaultDisplayOffset
	f	Z	c	enabled
c	cpe	net/minecraft/world/entity/vehicle/EntityMinecartMobSpawner
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()Ldby;	B	getSpawner
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcul;	ak_	getDropItem
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Ldcw;)Ljava/lang/Runnable;	b	createTicker
		p	1		world
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Ldcw;)V	c	lambda$createTicker$1
	m	()Z	cP	onlyOpCanSetNbt
	m	(Ldcw;)V	d	lambda$createTicker$0
	m	()V	l	tick
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	f	Ldby;	c	spawner
	f	Ljava/lang/Runnable;	d	ticker
c	cpe$1	net/minecraft/world/entity/vehicle/EntityMinecartMobSpawner$1
	m	(Ldcw;Ljd;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	f	Lcpe;	a	this$0
c	cpf	net/minecraft/world/entity/vehicle/EntityMinecartTNT
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	(Ldcw;DDD)V	<init>	<init>
		p	1		world
		p	2		x
		p	4		y
		p	6		z
	m	()V	B	primeFuse
	m	()I	C	getFuse
	m	()Z	D	isPrimed
	m	(FFLbrk;)Z	a	causeFallDamage
		p	1		fallDistance
		p	2		damageMultiplier
		p	3		damageSource
	m	(IIIZ)V	a	activateMinecart
		p	1		x
		p	2		y
		p	3		z
		p	4		powered
	m	(Lbrk;)V	a	destroy
		p	1		source
	m	(Lbrk;D)V	a	explode
		p	1		damageSource
		p	2		power
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		explosionPower
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;F)F	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
		p	6		max
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()Lcul;	ak_	getDropItem
	m	(B)V	b	handleEntityEvent
		p	1		status
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	(Lbrk;)Z	d	shouldSourceDestroy
		p	1		source
	m	(Lbrk;)Z	e	damageSourceIgnitesTnt
		p	0		source
	m	(D)V	h	explode
		p	1		power
	m	()V	l	tick
	m	()Lcot$a;	v	getMinecartType
	m	()Ldtc;	x	getDefaultDisplayBlockState
	f	B	c	EVENT_PRIME
	f	I	d	fuse
c	cpg	net/minecraft/world/entity/vehicle/VehicleEntity
	m	(Lbsx;Ldcw;)V	<init>	<init>
		p	1		type
		p	2		world
	m	()F	N	getDamage
	m	()I	O	getHurtTime
	m	()I	P	getHurtDir
	m	(Laka$a;)V	a	defineSynchedData
		p	1		builder
	m	(Lbrk;)V	a	destroy
		p	1		source
	m	(Lbrk;F)Z	a	hurt
		p	1		source
		p	2		amount
	m	()Lcul;	ak_	getDropItem
	m	(F)V	b	setDamage
		p	1		damageWobbleStrength
	m	(Lcul;)V	b	destroy
		p	1		selfAsItem
	m	(I)V	d	setHurtTime
		p	1		damageWobbleTicks
	m	(Lbrk;)Z	d	shouldSourceDestroy
		p	1		source
	m	(I)V	m	setHurtDir
		p	1		damageWobbleSide
	f	Lajw;	f	DATA_ID_HURT
	f	Lajw;	g	DATA_ID_HURTDIR
	f	Lajw;	h	DATA_ID_DAMAGE
c	cpi	net/minecraft/world/flag/FeatureElement
	m	(Lcpl;)Z	a	isEnabled
		p	1		enabledFeatures
	m	()Lcpl;	i	requiredFeatures
	f	Ljava/util/Set;	bA	FILTERED_REGISTRIES
c	cpj	net/minecraft/world/flag/FeatureFlag
	m	(Lcpm;I)V	<init>	<init>
		p	1		universe
		p	2		id
	f	Lcpm;	a	universe
	f	J	b	mask
c	cpk	net/minecraft/world/flag/FeatureFlagRegistry
	m	(Lcpm;Lcpl;Ljava/util/Map;)V	<init>	<init>
		p	1		universe
		p	2		featureSet
		p	3		featureFlags
	m	()Lcpl;	a	allFlags
	m	(Lakr;)V	a	lambda$fromNames$0
		p	0		feature
	m	(Lcpl;)Z	a	isSubset
		p	1		features
	m	(Lcpl;Ljava/util/Set;Lakr;Lcpj;)V	a	lambda$toNames$1
		p	2		identifier
		p	3		featureFlag
	m	(Ljava/lang/Iterable;)Lcpl;	a	fromNames
		p	1		features
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcpl;	a	fromNames
		p	1		features
		p	2		unknownFlagConsumer
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
		p	1		featureIds
	m	(Ljava/util/Set;)Ljava/lang/String;	a	lambda$codec$2
	m	([Lcpj;)Lcpl;	a	subset
		p	1		features
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcpl;)Ljava/util/Set;	b	toNames
		p	1		features
	m	(Lcpl;)Ljava/util/List;	c	lambda$codec$4
		p	1		features
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcpm;	b	universe
	f	Ljava/util/Map;	c	names
	f	Lcpl;	d	allFlags
c	cpk$a	net/minecraft/world/flag/FeatureFlagRegistry$a
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		universe
	m	()Lcpk;	a	build
	m	(Lakr;)Lcpj;	a	create
		p	1		feature
	m	(Ljava/lang/String;)Lcpj;	a	createVanilla
		p	1		feature
	f	Lcpm;	a	universe
	f	I	b	id
	f	Ljava/util/Map;	c	flags
c	cpl	net/minecraft/world/flag/FeatureFlagSet
	m	(Lcpm;J)V	<init>	<init>
		p	1		universe
		p	2		featuresMask
	m	()Lcpl;	a	of
	m	(Lcpj;)Lcpl;	a	of
		p	0		feature
	m	(Lcpj;[Lcpj;)Lcpl;	a	of
		p	0		feature1
		p	1		features
	m	(Lcpl;)Z	a	isSubsetOf
		p	1		features
	m	(Lcpm;JLjava/lang/Iterable;)J	a	computeMask
		p	0		universe
		p	1		featuresMask
		p	3		newFeatures
	m	(Lcpm;Ljava/util/Collection;)Lcpl;	a	create
		p	0		universe
		p	1		features
	m	()Z	b	isEmpty
	m	(Lcpj;)Z	b	contains
		p	1		feature
	m	(Lcpl;)Z	b	intersects
		p	1		features
	m	(Lcpl;)Lcpl;	c	join
		p	1		features
	m	(Lcpl;)Lcpl;	d	subtract
		p	1		features
	f	I	a	MAX_CONTAINER_SIZE
	f	Lcpl;	b	EMPTY
	f	Lcpm;	c	universe
	f	J	d	mask
c	cpm	net/minecraft/world/flag/FeatureFlagUniverse
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	f	Ljava/lang/String;	a	id
c	cpn	net/minecraft/world/flag/FeatureFlags
	m	(Lcpk;Lcpl;Lcpl;)Ljava/lang/String;	a	printMissingFlags
		p	0		featureManager
		p	1		featuresToCheck
		p	2		features
	m	(Lcpl;)Z	a	isExperimental
		p	0		features
	m	(Lcpl;Lcpl;)Ljava/lang/String;	a	printMissingFlags
		p	0		featuresToCheck
		p	1		features
	m	(Ljava/util/Set;Lakr;)Z	a	lambda$printMissingFlags$0
		p	1		id
	f	Lcpj;	a	VANILLA
	f	Lcpj;	b	BUNDLE
	f	Lcpj;	c	TRADE_REBALANCE
	f	Lcpk;	d	REGISTRY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lcpl;	f	VANILLA_SET
	f	Lcpl;	g	DEFAULT_FLAGS
c	cpp	net/minecraft/world/food/FoodConstants
	m	(IF)F	a	saturationByModifier
		p	0		nutrition
		p	1		saturationModifier
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_WALK
	f	F	w	EXHAUSTION_CROUCH
	f	F	x	EXHAUSTION_SPRINT
	f	F	y	EXHAUSTION_SWIM
c	cpq	net/minecraft/world/food/FoodMetaData
	m	()I	a	getFoodLevel
	m	(F)V	a	addExhaustion
		p	1		exhaustion
	m	(I)V	a	setFoodLevel
		p	1		foodLevel
	m	(IF)V	a	eat
		p	1		food
		p	2		saturationModifier
	m	(Lcmx;)V	a	tick
		p	1		player
	m	(Lcpr;)V	a	eat
		p	1		foodComponent
	m	(Lub;)V	a	readAdditionalSaveData
		p	1		nbt
	m	()I	b	getLastFoodLevel
	m	(F)V	b	setSaturation
		p	1		saturationLevel
	m	(IF)V	b	add
		p	1		nutrition
		p	2		saturation
	m	(Lub;)V	b	addAdditionalSaveData
		p	1		nbt
	m	()Z	c	needsFood
	m	(F)V	c	setExhaustion
		p	1		exhaustion
	m	()F	d	getExhaustionLevel
	m	()F	e	getSaturationLevel
	f	I	a	foodLevel
	f	F	b	saturationLevel
	f	F	c	exhaustionLevel
	f	I	d	tickTimer
	f	I	e	lastFoodLevel
c	cpr	net/minecraft/world/food/FoodInfo
	m	(IFZFLjava/util/Optional;Ljava/util/List;)V	<init>	<init>
		p	1		nutrition
		p	2		saturation
		p	3		canAlwaysEat
		p	4		eatSeconds
		p	5		usingConvertsTo
		p	6		effects
	m	()I	a	eatDurationTicks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	nutrition
	m	()F	c	saturation
	m	()Z	d	canAlwaysEat
	m	()F	e	eatSeconds
	m	()Ljava/util/Optional;	f	usingConvertsTo
	m	()Ljava/util/List;	g	effects
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	I	c	nutrition
	f	F	d	saturation
	f	Z	e	canAlwaysEat
	f	F	f	eatSeconds
	f	Ljava/util/Optional;	g	usingConvertsTo
	f	Ljava/util/List;	h	effects
	f	F	i	DEFAULT_EAT_SECONDS
c	cpr$a	net/minecraft/world/food/FoodInfo$a
	m	()Lcpr$a;	a	alwaysEdible
	m	(F)Lcpr$a;	a	saturationModifier
		p	1		saturationModifier
	m	(I)Lcpr$a;	a	nutrition
		p	1		nutrition
	m	(Lbrz;F)Lcpr$a;	a	effect
		p	1		effect
		p	2		chance
	m	(Ldcv;)Lcpr$a;	a	usingConvertsTo
		p	1		item
	m	()Lcpr$a;	b	fast
	m	()Lcpr;	c	build
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	canAlwaysEat
	f	F	d	eatSeconds
	f	Ljava/util/Optional;	e	usingConvertsTo
	f	Lcom/google/common/collect/ImmutableList$Builder;	f	effects
c	cpr$b	net/minecraft/world/food/FoodInfo$b
	m	()Lbrz;	a	effect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()F	b	probability
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lbrz;	c	effect
	f	F	d	probability
c	cps	net/minecraft/world/food/Foods
	m	(I)Lcpr$a;	a	stew
		p	0		hunger
	f	Lcpr;	A	POISONOUS_POTATO
	f	Lcpr;	B	PORKCHOP
	f	Lcpr;	C	POTATO
	f	Lcpr;	D	PUFFERFISH
	f	Lcpr;	E	PUMPKIN_PIE
	f	Lcpr;	F	RABBIT
	f	Lcpr;	G	RABBIT_STEW
	f	Lcpr;	H	ROTTEN_FLESH
	f	Lcpr;	I	SALMON
	f	Lcpr;	J	SPIDER_EYE
	f	Lcpr;	K	SUSPICIOUS_STEW
	f	Lcpr;	L	SWEET_BERRIES
	f	Lcpr;	M	GLOW_BERRIES
	f	Lcpr;	N	TROPICAL_FISH
	f	Lcpr;	O	OMINOUS_BOTTLE
	f	Lcpr;	a	APPLE
	f	Lcpr;	b	BAKED_POTATO
	f	Lcpr;	c	BEEF
	f	Lcpr;	d	BEETROOT
	f	Lcpr;	e	BEETROOT_SOUP
	f	Lcpr;	f	BREAD
	f	Lcpr;	g	CARROT
	f	Lcpr;	h	CHICKEN
	f	Lcpr;	i	CHORUS_FRUIT
	f	Lcpr;	j	COD
	f	Lcpr;	k	COOKED_BEEF
	f	Lcpr;	l	COOKED_CHICKEN
	f	Lcpr;	m	COOKED_COD
	f	Lcpr;	n	COOKED_MUTTON
	f	Lcpr;	o	COOKED_PORKCHOP
	f	Lcpr;	p	COOKED_RABBIT
	f	Lcpr;	q	COOKED_SALMON
	f	Lcpr;	r	COOKIE
	f	Lcpr;	s	DRIED_KELP
	f	Lcpr;	t	ENCHANTED_GOLDEN_APPLE
	f	Lcpr;	u	GOLDEN_APPLE
	f	Lcpr;	v	GOLDEN_CARROT
	f	Lcpr;	w	HONEY_BOTTLE
	f	Lcpr;	x	MELON_SLICE
	f	Lcpr;	y	MUSHROOM_STEW
	f	Lcpr;	z	MUTTON
c	cpu	net/minecraft/world/inventory/Container
	m	(Lcrc;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	()Lcrc;	a	getType
	m	(I)Z	a	isValidSlotIndex
		p	1		slot
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(IILcqe;Lcmx;)V	a	clicked
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(IILcuq;)V	a	setItem
		p	1		slot
		p	2		revision
		p	3		stack
	m	(ILcmx;)Z	a	isValidQuickcraftType
		p	0		stage
		p	1		player
	m	(ILcuq;)V	a	setRemoteSlot
		p	1		slot
		p	2		stack
	m	(ILcuq;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(ILjava/util/List;Lcuq;)V	a	initializeContents
		p	1		revision
		p	2		stacks
		p	3		cursorStack
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lbqk;I)V	a	checkContainerSize
		p	0		inventory
		p	1		expectedSize
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;I)Z	a	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcmx;Lbqk;)V	a	clearContainer
		p	1		player
		p	2		inventory
	m	(Lcmx;Lcqd;Lcrq;Lcuq;Lcuq;)Z	a	tryItemClickBehaviourOverride
		p	1		player
		p	2		clickType
		p	3		slot
		p	4		stack
		p	5		cursorStack
	m	(Lcpu;)V	a	transferState
		p	1		handler
	m	(Lcqf;)V	a	addDataSlots
		p	1		propertyDelegate
	m	(Lcqf;I)V	a	checkContainerDataCount
		p	0		data
		p	1		expectedCount
	m	(Lcqg;Lcmx;Ldfy;)Z	a	stillValid
		p	0		context
		p	1		player
		p	2		block
	m	(Lcqh;)V	a	addSlotListener
		p	1		listener
	m	(Lcqi;)V	a	setSynchronizer
		p	1		handler
	m	(Lcqn;)Lcqn;	a	addDataSlot
		p	1		property
	m	(Lcrq;)Lcrq;	a	addSlot
		p	1		slot
	m	(Lcrq;Lcmx;Lcuq;)V	a	lambda$doClick$3
		p	3		stack
	m	(Lcrq;Lcuq;Z)Z	a	canItemQuickReplace
		p	0		slot
		p	1		stack
		p	2		allowOverflow
	m	(Lcuq;)V	a	setRemoteCarried
		p	1		stack
	m	(Lcuq;IIZ)Z	a	moveItemStackTo
		p	1		stack
		p	2		startIndex
		p	3		endIndex
		p	4		fromLast
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcuq;Lcrq;Lcmx;Lcuq;)V	a	lambda$doClick$4
		p	3		stack
	m	(Ldfy;Lcmx;Ldcw;Ljd;)Ljava/lang/Boolean;	a	lambda$stillValid$0
		p	2		world
		p	3		pos
	m	(Ldqh;)I	a	getRedstoneSignalFromBlockEntity
		p	0		entity
	m	(Ljava/util/Set;ILcuq;)I	a	getQuickCraftPlaceCount
		p	0		slots
		p	1		mode
		p	2		stack
	m	()V	b	sendAllDataToRemote
	m	(I)Lcrq;	b	getSlot
		p	1		index
	m	(II)I	b	getQuickcraftMask
		p	0		quickCraftStage
		p	1		buttonId
	m	(IILcqe;Lcmx;)V	b	doClick
		p	1		slotIndex
		p	2		button
		p	3		actionType
		p	4		player
	m	(ILcuq;)V	b	setRemoteSlotNoCopy
		p	1		slot
		p	2		stack
	m	(ILcuq;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
		p	1		slot
		p	2		stack
		p	3		copySupplier
	m	(Lbqk;)I	b	getRedstoneSignalFromContainer
		p	0		inventory
	m	(Lbqk;I)Ljava/util/OptionalInt;	b	findSlot
		p	1		inventory
		p	2		index
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcqh;)V	b	removeSlotListener
		p	1		listener
	m	(Lcrq;)Z	b	canDragTo
		p	1		slot
	m	(Lcuq;)V	b	setCarried
		p	1		stack
	m	()Ljv;	c	getItems
	m	(I)I	c	getQuickcraftType
		p	0		quickCraftData
	m	(II)V	c	updateDataSlotListeners
		p	1		index
		p	2		value
	m	()V	d	broadcastChanges
	m	(I)I	d	getQuickcraftHeader
		p	0		quickCraftData
	m	(II)V	d	synchronizeDataSlotToRemote
		p	1		id
		p	2		value
	m	()V	e	broadcastFullState
	m	()V	f	resetQuickCraft
	m	()Lcuq;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	()V	l	synchronizeCarriedToRemote
	m	()Lbug;	m	createCarriedSlotAccess
	m	()Ljava/lang/String;	n	lambda$clicked$2
	m	()Ljava/lang/String;	o	lambda$clicked$1
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	Ljv;	i	slots
	f	I	j	containerId
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	Ljv;	l	lastSlots
	f	Ljava/util/List;	m	dataSlots
	f	Lcuq;	n	carried
	f	Ljv;	o	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	p	remoteDataSlots
	f	Lcuq;	q	remoteCarried
	f	I	r	stateId
	f	Lcrc;	s	menuType
	f	I	t	quickcraftType
	f	I	u	quickcraftStatus
	f	Ljava/util/Set;	v	quickcraftSlots
	f	Ljava/util/List;	w	containerListeners
	f	Lcqi;	x	synchronizer
	f	Z	y	suppressRemoteUpdates
c	cpu$1	net/minecraft/world/inventory/Container$1
	m	()Lcuq;	a	get
	m	(Lcuq;)Z	a	set
		p	1		stack
	f	Lcpu;	b	this$0
c	cpv	net/minecraft/world/inventory/ContainerFurnace
	m	(Lcrc;Lczf;Lcrj;ILcmw;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
	m	(Lcrc;Lczf;Lcrj;ILcmw;Lbqk;Lcqf;)V	<init>	<init>
		p	1		type
		p	2		recipeType
		p	3		category
		p	4		syncId
		p	5		playerInventory
		p	6		inventory
		p	7		propertyDelegate
	m	(Lcnb;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lczb;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcuq;)Z	c	canSmelt
		p	1		itemStack
	m	(Lcuq;)Z	d	isFuel
		p	1		itemStack
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()F	q	getBurnProgress
	m	()F	r	getLitProgress
	m	()Z	s	isLit
	m	()Lcrj;	t	getRecipeBookType
	f	I	k	INGREDIENT_SLOT
	f	I	l	FUEL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	Ldcw;	p	level
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbqk;	u	container
	f	Lcqf;	v	data
	f	Lczf;	w	recipeType
	f	Lcrj;	x	recipeBookType
c	cpw	net/minecraft/world/inventory/ContainerAnvil
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$onTake$2
		p	1		world
		p	2		pos
	m	(Lcmx;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Ldtc;)Z	a	isValidBlock
		p	1		state
	m	(Ljava/lang/String;)Z	a	setItemName
		p	1		newItemName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	validateName
		p	0		name
	m	(I)I	e	calculateIncreasedRepairCost
		p	0		cost
	m	(Lcuq;)Z	e	lambda$createInputSlotDefinitions$1
		p	0		stack
	m	(Lcuq;)Z	f	lambda$createInputSlotDefinitions$0
		p	0		stack
	m	()Lcqy;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getCost
	f	I	A	COST_REPAIR_MATERIAL
	f	I	B	COST_REPAIR_SACRIFICE
	f	I	C	COST_INCOMPATIBLE_PENALTY
	f	I	D	COST_RENAME
	f	I	E	INPUT_SLOT_X_PLACEMENT
	f	I	F	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	G	RESULT_SLOT_X_PLACEMENT
	f	I	H	SLOT_Y_PLACEMENT
	f	I	k	INPUT_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	MAX_NAME_LENGTH
	f	Lorg/slf4j/Logger;	s	LOGGER
	f	Z	t	DEBUG_COST
	f	I	u	repairItemCountCost
	f	Ljava/lang/String;	v	itemName
	f	Lcqn;	w	cost
	f	I	x	COST_FAIL
	f	I	y	COST_BASE
	f	I	z	COST_ADDED_BASE
c	cpx	net/minecraft/world/inventory/ArmorSlot
	m	(Lbqk;Lbtn;Lbsy;IIILakr;)V	<init>	<init>
		p	1		inventory
		p	2		entity
		p	3		equipmentSlot
		p	4		index
		p	5		x
		p	6		y
		p	7		backgroundSprite
	m	()I	a	getMaxStackSize
	m	(Lcmx;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;Lcuq;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	f	Lbtn;	a	owner
	f	Lbsy;	b	slot
	f	Lakr;	g	emptyIcon
c	cpy	net/minecraft/world/inventory/ContainerBeacon
	m	(ILbqk;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILbqk;Lcqf;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
		p	4		context
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	a	updateEffects
		p	1		primary
		p	2		secondary
	m	(Ljm;)I	a	encodeEffect
		p	0		effect
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(I)Ljm;	e	decodeEffect
		p	0		id
	m	()I	l	getLevels
	m	()Ljm;	m	getPrimaryEffect
	m	()Ljm;	n	getSecondaryEffect
	m	()Z	o	hasPayment
	f	I	k	PAYMENT_SLOT
	f	I	l	SLOT_COUNT
	f	I	m	DATA_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	NO_EFFECT
	f	Lbqk;	s	beacon
	f	Lcpy$a;	t	paymentSlot
	f	Lcqg;	u	access
	f	Lcqf;	v	beaconData
c	cpy$1	net/minecraft/world/inventory/ContainerBeacon$1
	m	(Lcpy;I)V	<init>	<init>
		p	2		size
	m	()I	al_	getMaxStackSize
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
c	cpy$a	net/minecraft/world/inventory/ContainerBeacon$SlotBeacon
	m	(Lcpy;Lbqk;III)V	<init>	<init>
		p	1		screenHandler
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cpz	net/minecraft/world/inventory/ContainerBlastFurnace
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cqa	net/minecraft/world/inventory/ContainerBrewingStand
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	f	I	k	BOTTLE_SLOT_START
	f	I	l	BOTTLE_SLOT_END
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	SLOT_COUNT
	f	I	p	DATA_COUNT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbqk;	u	brewingStand
	f	Lcqf;	v	brewingStandData
	f	Lcrq;	w	ingredientSlot
c	cqa$a	net/minecraft/world/inventory/ContainerBrewingStand$a
	m	(Lbqk;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;)Z	b	mayPlaceItem
		p	0		stack
c	cqa$b	net/minecraft/world/inventory/ContainerBrewingStand$SlotBrewing
	m	(Lcwt;Lbqk;III)V	<init>	<init>
		p	1		brewingRecipeRegistry
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	f	Lcwt;	a	potionBrewing
c	cqa$c	net/minecraft/world/inventory/ContainerBrewingStand$SlotPotionBottle
	m	(Lbqk;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;)Z	b	mayPlaceItem
		p	0		stack
c	cqb	net/minecraft/world/inventory/ContainerCartography
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcuq;Lcuq;Lcuq;)V	a	setupResultSlot
		p	1		map
		p	2		item
		p	3		oldResult
	m	(Lcuq;Lcuq;Lcuq;Ldcw;Ljd;)V	a	lambda$setupResultSlot$0
		p	4		world
		p	5		pos
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	f	I	k	MAP_SLOT
	f	I	l	ADDITIONAL_SLOT
	f	I	m	RESULT_SLOT
	f	Lbqk;	n	container
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lcqg;	s	access
	f	J	t	lastSoundTime
	f	Lcrl;	u	resultContainer
c	cqb$1	net/minecraft/world/inventory/ContainerCartography$1
	m	(Lcqb;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcqb;	b	this$0
c	cqb$2	net/minecraft/world/inventory/ContainerCartography$2
	m	()V	e	setChanged
	f	Lcqb;	b	this$0
c	cqb$3	net/minecraft/world/inventory/ContainerCartography$3
	m	(Lcqb;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cqb$4	net/minecraft/world/inventory/ContainerCartography$4
	m	(Lcqb;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cqb$5	net/minecraft/world/inventory/ContainerCartography$5
	m	(Lcqb;Lbqk;IIILcqg;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Ldcw;Ljd;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcqg;	a	val$access
	f	Lcqb;	b	this$0
c	cqc	net/minecraft/world/inventory/ContainerChest
	m	(Lcrc;ILcmw;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		rows
	m	(Lcrc;ILcmw;Lbqk;I)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		inventory
		p	5		rows
	m	(ILcmw;)Lcqc;	a	oneRow
		p	0		syncId
		p	1		playerInventory
	m	(ILcmw;Lbqk;)Lcqc;	a	threeRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(ILcmw;)Lcqc;	b	twoRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcmw;Lbqk;)Lcqc;	b	sixRows
		p	0		syncId
		p	1		playerInventory
		p	2		inventory
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(ILcmw;)Lcqc;	c	threeRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcmw;)Lcqc;	d	fourRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcmw;)Lcqc;	e	fiveRows
		p	0		syncId
		p	1		playerInventory
	m	(ILcmw;)Lcqc;	f	sixRows
		p	0		syncId
		p	1		playerInventory
	m	()Lbqk;	l	getContainer
	m	()I	m	getRowCount
	f	I	k	SLOTS_PER_ROW
	f	Lbqk;	l	container
	f	I	m	containerRows
c	cqd	net/minecraft/world/inventory/ClickAction
	m	()[Lcqd;	a	$values
	f	Lcqd;	a	PRIMARY
	f	Lcqd;	b	SECONDARY
	f	[Lcqd;	c	$VALUES
c	cqe	net/minecraft/world/inventory/InventoryClickType
	m	()[Lcqe;	a	$values
	f	Lcqe;	a	PICKUP
	f	Lcqe;	b	QUICK_MOVE
	f	Lcqe;	c	SWAP
	f	Lcqe;	d	CLONE
	f	Lcqe;	e	THROW
	f	Lcqe;	f	QUICK_CRAFT
	f	Lcqe;	g	PICKUP_ALL
	f	[Lcqe;	h	$VALUES
c	cqf	net/minecraft/world/inventory/IContainerProperties
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
c	cqg	net/minecraft/world/inventory/ContainerAccess
	m	(Ldcw;Ljd;)Lcqg;	a	create
		p	0		world
		p	1		pos
	m	(Ljava/util/function/BiConsumer;)V	a	execute
		p	1		function
	m	(Ljava/util/function/BiConsumer;Ldcw;Ljd;)Ljava/util/Optional;	a	lambda$execute$0
		p	1		world
		p	2		pos
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
		p	1		getter
		p	2		defaultValue
	f	Lcqg;	a	NULL
c	cqg$1	net/minecraft/world/inventory/ContainerAccess$1
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
c	cqg$2	net/minecraft/world/inventory/ContainerAccess$2
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
		p	1		getter
	f	Ldcw;	b	val$level
	f	Ljd;	c	val$pos
c	cqh	net/minecraft/world/inventory/ICrafting
	m	(Lcpu;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcpu;ILcuq;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
c	cqi	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lcpu;II)V	a	sendDataChange
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcpu;ILcuq;)V	a	sendSlotChange
		p	1		handler
		p	2		slot
		p	3		stack
	m	(Lcpu;Lcuq;)V	a	sendCarriedChange
		p	1		handler
		p	2		stack
	m	(Lcpu;Ljv;Lcuq;[I)V	a	sendInitialData
		p	1		handler
		p	2		stacks
		p	3		cursorStack
		p	4		properties
c	cqj	net/minecraft/world/inventory/CrafterMenu
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcql;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inputInventory
		p	4		propertyDelegate
	m	(IZ)V	a	setSlotState
		p	1		slot
		p	2		enabled
	m	(Lcmw;)V	a	addSlots
		p	1		playerInventory
	m	(Lcpu;II)V	a	dataChanged
		p	1		handler
		p	2		property
		p	3		value
	m	(Lcpu;ILcuq;)V	a	slotChanged
		p	1		handler
		p	2		slotId
		p	3		stack
	m	(Lcyp;Ldcw;Lczb;)Lcuq;	a	lambda$refreshRecipeResult$0
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(I)Z	e	isSlotDisabled
		p	1		slot
	m	()Z	l	isPowered
	m	()Lbqk;	m	getContainer
	m	()V	n	refreshRecipeResult
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lcrl;	p	resultContainer
	f	Lcqf;	q	containerData
	f	Lcmx;	r	player
	f	Lcql;	s	container
c	cqk	net/minecraft/world/inventory/CrafterSlot
	m	(Lbqk;IIILcqj;)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
		p	5		crafterScreenHandler
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	()V	c	setChanged
	f	Lcqj;	a	menu
c	cql	net/minecraft/world/inventory/InventoryCrafting
	m	()Lcyp;	aE_	asCraftInput
	m	()Lcyp$a;	aF_	asPositionedCraftInput
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
c	cqm	net/minecraft/world/inventory/ContainerWorkbench
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$2
		p	2		world
		p	3		pos
	m	(Lcnb;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcpu;Ldcw;Lcmx;Lcql;Lcrl;Lczb;)V	a	slotChangedCraftingGrid
		p	0		handler
		p	1		world
		p	2		player
		p	3		craftingInventory
		p	4		resultInventory
		p	5		recipe
	m	(Lcuq;Lcmx;Ldcw;Ljd;)V	a	lambda$quickMoveStack$3
		p	2		world
		p	3		pos
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lczb;)Z	a	recipeMatches
		p	1		recipe
	m	(Lczb;Ldcw;Ljd;)V	a	lambda$finishPlacingRecipe$1
		p	2		world
		p	3		pos
	m	(Ldcw;Ljd;)V	a	lambda$slotsChanged$0
		p	1		world
		p	2		pos
	m	()V	an_	beginPlacingRecipe
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lczb;)V	b	finishPlacingRecipe
		p	1		recipe
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcrj;	t	getRecipeBookType
	f	I	k	RESULT_SLOT
	f	I	l	CRAFT_SLOT_START
	f	I	m	CRAFT_SLOT_END
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lcql;	r	craftSlots
	f	Lcrl;	s	resultSlots
	f	Lcqg;	t	access
	f	Lcmx;	u	player
	f	Z	v	placingRecipe
c	cqn	net/minecraft/world/inventory/ContainerProperty
	m	()Lcqn;	a	standalone
	m	(I)V	a	set
		p	1		value
	m	(Lcqf;I)Lcqn;	a	forContainer
		p	0		delegate
		p	1		index
	m	([II)Lcqn;	a	shared
		p	0		array
		p	1		index
	m	()I	b	get
	m	()Z	c	checkAndClearUpdateFlag
	f	I	a	prevValue
c	cqn$1	net/minecraft/world/inventory/ContainerProperty$1
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	Lcqf;	a	val$container
	f	I	b	val$dataId
c	cqn$2	net/minecraft/world/inventory/ContainerProperty$2
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	[I	a	val$storage
	f	I	b	val$index
c	cqn$3	net/minecraft/world/inventory/ContainerProperty$3
	m	(I)V	a	set
		p	1		value
	m	()I	b	get
	f	I	a	value
c	cqo	net/minecraft/world/inventory/ContainerDispenser
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	f	I	k	SLOT_COUNT
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lbqk;	p	dispenser
c	cqp	net/minecraft/world/inventory/ContainerEnchantTable
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;I)Z	a	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$2
		p	2		world
		p	3		pos
	m	(Lcuq;ILcmx;ILcuq;Ldcw;Ljd;)V	a	lambda$clickMenuButton$1
		p	6		world
		p	7		pos
	m	(Lcuq;Ldcw;Ljd;)V	a	lambda$slotsChanged$0
		p	2		world
		p	3		pos
	m	(Lka;Lcuq;II)Ljava/util/List;	a	getEnchantmentList
		p	1		registryManager
		p	2		stack
		p	3		slot
		p	4		level
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	f	[I	k	costs
	f	[I	l	enchantClue
	f	[I	m	levelClue
	f	Lakr;	n	EMPTY_SLOT_LAPIS_LAZULI
	f	Lbqk;	o	enchantSlots
	f	Lcqg;	p	access
	f	Layw;	q	random
	f	Lcqn;	r	enchantmentSeed
c	cqp$1	net/minecraft/world/inventory/ContainerEnchantTable$1
	m	(Lcqp;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcqp;	b	this$0
c	cqp$2	net/minecraft/world/inventory/ContainerEnchantTable$2
	m	(Lcqp;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()I	a	getMaxStackSize
c	cqp$3	net/minecraft/world/inventory/ContainerEnchantTable$3
	m	(Lcqp;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
c	cqq	net/minecraft/world/inventory/SlotFurnaceFuel
	m	(Lcpv;Lbqk;III)V	<init>	<init>
		p	1		handler
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;)I	a_	getMaxStackSize
		p	1		stack
	m	(Lcuq;)Z	c	isBucket
		p	0		stack
	f	Lcpv;	a	menu
c	cqr	net/minecraft/world/inventory/ContainerFurnaceFurnace
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	cqs	net/minecraft/world/inventory/SlotFurnaceResult
	m	(Lcmx;Lbqk;III)V	<init>	<init>
		p	1		player
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(I)Lcuq;	a	remove
		p	1		amount
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcuq;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcmx;	a	player
	f	I	b	removeCount
c	cqt	net/minecraft/world/inventory/ContainerGrindstone
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$3
		p	2		world
		p	3		pos
	m	(Lcuq;Lcuq;)Lcuq;	a	computeResult
		p	1		firstInput
		p	2		secondInput
	m	(Lcuq;Ldai$a;)V	a	lambda$mergeEnchantsFrom$0
		p	1		components
	m	(Ldai$a;)V	a	lambda$removeNonCursesFrom$2
		p	0		components
	m	(Ljm;)Z	a	lambda$removeNonCursesFrom$1
		p	0		enchantment
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcuq;Lcuq;)Lcuq;	b	mergeItems
		p	1		firstInput
		p	2		secondInput
	m	(Lcuq;)Lcuq;	c	removeNonCursesFrom
		p	1		item
	m	(Lcuq;Lcuq;)V	c	mergeEnchantsFrom
		p	1		target
		p	2		source
	m	()V	l	createResult
	f	I	k	MAX_NAME_LENGTH
	f	I	l	INPUT_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	o	INV_SLOT_START
	f	I	p	INV_SLOT_END
	f	I	q	USE_ROW_SLOT_START
	f	I	r	USE_ROW_SLOT_END
	f	Lbqk;	s	resultSlots
	f	Lbqk;	t	repairSlots
	f	Lcqg;	u	access
c	cqt$1	net/minecraft/world/inventory/ContainerGrindstone$1
	m	(Lcqt;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcqt;	b	this$0
c	cqt$2	net/minecraft/world/inventory/ContainerGrindstone$2
	m	(Lcqt;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cqt$3	net/minecraft/world/inventory/ContainerGrindstone$3
	m	(Lcqt;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cqt$4	net/minecraft/world/inventory/ContainerGrindstone$4
	m	(Lcqt;Lbqk;IIILcqg;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Ldcw;)I	a	getExperienceAmount
		p	1		world
	m	(Ldcw;Ljd;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	(Lcuq;)I	g	getExperienceFromItem
		p	1		stack
	f	Lcqg;	a	val$access
	f	Lcqt;	b	this$0
c	cqu	net/minecraft/world/inventory/ContainerHopper
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	f	I	k	CONTAINER_SIZE
	f	Lbqk;	l	hopper
c	cqv	net/minecraft/world/inventory/ContainerHorse
	m	(ILcmw;Lbqk;Lchi;I)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		entity
		p	5		slotColumnCount
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	f	Lbqk;	k	horseContainer
	f	Lbqk;	l	armorContainer
	f	Lchi;	m	horse
	f	I	n	SLOT_BODY_ARMOR
	f	I	o	SLOT_HORSE_INVENTORY_START
c	cqv$1	net/minecraft/world/inventory/ContainerHorse$1
	m	(Lcqv;Lbqk;IIILchi;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	()Z	d	isActive
	f	Lchi;	a	val$horse
c	cqv$2	net/minecraft/world/inventory/ContainerHorse$2
	m	(Lcqv;Lbqk;Lbtn;Lbsy;IIILakr;Lchi;)V	<init>	<init>
		p	2		inventory
		p	3		entity
		p	4		equipmentSlot
		p	5		index
		p	6		x
		p	7		y
		p	8		backgroundSprite
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	()Z	d	isActive
	f	Lchi;	a	val$horse
c	cqw	net/minecraft/world/inventory/ContainerPlayer
	m	(Lcmw;ZLcmx;)V	<init>	<init>
		p	1		inventory
		p	2		onServer
		p	3		owner
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcnb;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lczb;)Z	a	recipeMatches
		p	1		recipe
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	(I)Z	f	isHotbarSlot
		p	0		slot
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcql;	r	getCraftSlots
	m	()Lcrj;	t	getRecipeBookType
	f	Lakr;	A	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Lakr;	B	EMPTY_ARMOR_SLOT_BOOTS
	f	Lakr;	C	EMPTY_ARMOR_SLOT_SHIELD
	f	Z	D	active
	f	Ljava/util/Map;	E	TEXTURE_EMPTY_SLOTS
	f	[Lbsy;	F	SLOT_IDS
	f	Lcql;	G	craftSlots
	f	Lcrl;	H	resultSlots
	f	Lcmx;	I	owner
	f	I	k	CONTAINER_ID
	f	I	l	RESULT_SLOT
	f	I	m	CRAFT_SLOT_START
	f	I	n	CRAFT_SLOT_COUNT
	f	I	o	CRAFT_SLOT_END
	f	I	p	ARMOR_SLOT_START
	f	I	q	ARMOR_SLOT_COUNT
	f	I	r	ARMOR_SLOT_END
	f	I	s	INV_SLOT_START
	f	I	t	INV_SLOT_END
	f	I	u	USE_ROW_SLOT_START
	f	I	v	USE_ROW_SLOT_END
	f	I	w	SHIELD_SLOT
	f	Lakr;	x	BLOCK_ATLAS
	f	Lakr;	y	EMPTY_ARMOR_SLOT_HELMET
	f	Lakr;	z	EMPTY_ARMOR_SLOT_CHESTPLATE
c	cqw$1	net/minecraft/world/inventory/ContainerPlayer$1
	m	(Lcqw;Lbqk;IIILcmx;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;Lcuq;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	f	Lcmx;	a	val$owner
c	cqx	net/minecraft/world/inventory/ContainerAnvilAbstract
	m	(Lcrc;ILcmw;Lcqg;)V	<init>	<init>
		p	1		type
		p	2		syncId
		p	3		playerInventory
		p	4		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmw;)V	a	createInventorySlots
		p	1		playerInventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcmx;Ldcw;Ljd;)Ljava/lang/Boolean;	a	lambda$stillValid$1
		p	2		world
		p	3		pos
	m	(Lcmx;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcqy;)V	a	createInputSlots
		p	1		forgingSlotsManager
	m	(Ldtc;)Z	a	isValidBlock
		p	1		state
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcmx;Ldcw;Ljd;)V	b	lambda$removed$0
		p	2		world
		p	3		pos
	m	(Lcqy;)V	b	createResultSlot
		p	1		forgingSlotsManager
	m	(Lcuq;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcuq;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(I)Lbra;	e	createContainer
		p	1		size
	m	()Lcqy;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()I	n	getInventorySlotStart
	m	()I	o	getResultSlot
	m	()I	p	getInventorySlotEnd
	m	()I	q	getUseRowStart
	m	()I	r	getUseRowEnd
	f	I	k	INVENTORY_SLOTS_PER_ROW
	f	I	l	INVENTORY_SLOTS_PER_COLUMN
	f	Ljava/util/List;	m	inputSlotIndexes
	f	I	n	resultSlotIndex
	f	Lcqg;	o	access
	f	Lcmx;	p	player
	f	Lbqk;	q	inputSlots
	f	Lcrl;	r	resultSlots
c	cqx$1	net/minecraft/world/inventory/ContainerAnvilAbstract$1
	m	(Lcqx;Lbqk;IIILcqy$b;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	f	Lcqy$b;	a	val$slot
c	cqx$2	net/minecraft/world/inventory/ContainerAnvilAbstract$2
	m	(Lcqx;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcmx;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	f	Lcqx;	a	this$0
c	cqx$3	net/minecraft/world/inventory/ContainerAnvilAbstract$3
	m	(Lcqx;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcqx;	b	this$0
c	cqy	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	m	(Ljava/util/List;Lcqy$b;)V	<init>	<init>
		p	1		inputSlots
		p	2		resultSlot
	m	()Lcqy$a;	a	create
	m	(I)Z	a	hasSlot
		p	1		index
	m	()Lcqy$b;	b	getResultSlot
	m	(I)Lcqy$b;	b	getSlot
		p	1		index
	m	()Ljava/util/List;	c	getSlots
	m	()I	d	getNumOfInputSlots
	m	()I	e	getResultSlotIndex
	m	()Ljava/util/List;	f	getInputSlotIndexes
	f	Ljava/util/List;	a	slots
	f	Lcqy$b;	b	resultSlot
c	cqy$a	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$a
	m	()Lcqy;	a	build
	m	(III)Lcqy$a;	a	withResultSlot
		p	1		slotId
		p	2		x
		p	3		y
	m	(IIILjava/util/function/Predicate;)Lcqy$a;	a	withSlot
		p	1		slotId
		p	2		x
		p	3		y
		p	4		mayPlace
	m	(Lcuq;)Z	a	lambda$withResultSlot$0
		p	0		stack
	f	Ljava/util/List;	a	slots
	f	Lcqy$b;	b	resultSlot
c	cqy$b	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$b
	m	()I	a	slotIndex
	m	(Lcuq;)Z	a	lambda$static$0
		p	0		stack
	m	()I	b	x
	m	()I	c	y
	m	()Ljava/util/function/Predicate;	d	mayPlace
	f	I	a	slotIndex
	f	I	b	x
	f	I	c	y
	f	Ljava/util/function/Predicate;	d	mayPlace
	f	Lcqy$b;	e	EMPTY
c	cqz	net/minecraft/world/inventory/ContainerLectern
	m	(I)V	<init>	<init>
		p	1		syncId
	m	(ILbqk;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		inventory
		p	3		propertyDelegate
	m	(II)V	a	setData
		p	1		id
		p	2		value
	m	(Lcmx;I)Z	a	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	()Lcuq;	l	getBook
	m	()I	m	getPage
	f	I	k	BUTTON_PREV_PAGE
	f	I	l	BUTTON_NEXT_PAGE
	f	I	m	BUTTON_TAKE_BOOK
	f	I	n	BUTTON_PAGE_JUMP_RANGE_START
	f	I	o	DATA_COUNT
	f	I	p	SLOT_COUNT
	f	Lbqk;	q	lectern
	f	Lcqf;	r	lecternData
c	cqz$1	net/minecraft/world/inventory/ContainerLectern$1
	m	(Lcqz;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	()V	c	setChanged
	f	Lcqz;	a	this$0
c	cra	net/minecraft/world/inventory/ContainerLoom
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;I)Z	a	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		inventoryChangeListener
	m	(Ljm;)V	a	setupResultSlot
		p	1		pattern
	m	(Ljm;Lcti;Ldpy;)Ldpy;	a	lambda$setupResultSlot$2
		p	2		component
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lcuq;)Ljava/util/List;	c	getSelectablePatterns
		p	1		stack
	m	(I)Z	e	isValidPatternIndex
		p	1		index
	m	()Ljava/util/List;	l	getSelectablePatterns
	m	()I	m	getSelectedBannerPatternIndex
	m	()Lcrq;	n	getBannerSlot
	m	()Lcrq;	o	getDyeSlot
	m	()Lcrq;	p	getPatternSlot
	m	()Lcrq;	q	getResultSlot
	m	()V	r	lambda$new$0
	f	Lbqk;	A	outputContainer
	f	I	k	PATTERN_NOT_SET
	f	I	l	INV_SLOT_START
	f	I	m	INV_SLOT_END
	f	I	n	USE_ROW_SLOT_START
	f	I	o	USE_ROW_SLOT_END
	f	Lcqg;	p	access
	f	Lcqn;	q	selectedBannerPatternIndex
	f	Ljava/util/List;	r	selectablePatterns
	f	Ljava/lang/Runnable;	s	slotUpdateListener
	f	Ljn;	t	patternGetter
	f	Lcrq;	u	bannerSlot
	f	Lcrq;	v	dyeSlot
	f	Lcrq;	w	patternSlot
	f	Lcrq;	x	resultSlot
	f	J	y	lastSoundTime
	f	Lbqk;	z	inputContainer
c	cra$1	net/minecraft/world/inventory/ContainerLoom$1
	m	(Lcra;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcra;	b	this$0
c	cra$2	net/minecraft/world/inventory/ContainerLoom$2
	m	(Lcra;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcra;	b	this$0
c	cra$3	net/minecraft/world/inventory/ContainerLoom$3
	m	(Lcra;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cra$4	net/minecraft/world/inventory/ContainerLoom$4
	m	(Lcra;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cra$5	net/minecraft/world/inventory/ContainerLoom$5
	m	(Lcra;Lbqk;III)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	cra$6	net/minecraft/world/inventory/ContainerLoom$6
	m	(Lcra;Lbqk;IIILcqg;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Ldcw;Ljd;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	f	Lcqg;	a	val$access
	f	Lcra;	b	this$0
c	crb	net/minecraft/world/inventory/ITileEntityContainer
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
c	crc	net/minecraft/world/inventory/Containers
	m	(Lcrc$a;Lcpl;)V	<init>	<init>
		p	1		factory
		p	2		requiredFeatures
	m	(ILcmw;)Lcpu;	a	create
		p	1		syncId
		p	2		playerInventory
	m	(Ljava/lang/String;Lcrc$a;)Lcrc;	a	register
		p	0		id
		p	1		factory
	m	(Ljava/lang/String;Lcrc$a;[Lcpj;)Lcrc;	a	register
		p	0		id
		p	1		factory
		p	2		requiredFeatures
	m	(ILcmw;)Lcqz;	b	lambda$static$0
		p	0		syncId
		p	1		playerInventory
	m	()Lcpl;	i	requiredFeatures
	f	Lcrc$a;	A	constructor
	f	Lcrc;	a	GENERIC_9x1
	f	Lcrc;	b	GENERIC_9x2
	f	Lcrc;	c	GENERIC_9x3
	f	Lcrc;	d	GENERIC_9x4
	f	Lcrc;	e	GENERIC_9x5
	f	Lcrc;	f	GENERIC_9x6
	f	Lcrc;	g	GENERIC_3x3
	f	Lcrc;	h	CRAFTER_3x3
	f	Lcrc;	i	ANVIL
	f	Lcrc;	j	BEACON
	f	Lcrc;	k	BLAST_FURNACE
	f	Lcrc;	l	BREWING_STAND
	f	Lcrc;	m	CRAFTING
	f	Lcrc;	n	ENCHANTMENT
	f	Lcrc;	o	FURNACE
	f	Lcrc;	p	GRINDSTONE
	f	Lcrc;	q	HOPPER
	f	Lcrc;	r	LECTERN
	f	Lcrc;	s	LOOM
	f	Lcrc;	t	MERCHANT
	f	Lcrc;	u	SHULKER_BOX
	f	Lcrc;	v	SMITHING
	f	Lcrc;	w	SMOKER
	f	Lcrc;	x	CARTOGRAPHY_TABLE
	f	Lcrc;	y	STONECUTTER
	f	Lcpl;	z	requiredFeatures
c	crc$a	net/minecraft/world/inventory/Containers$Supplier
	m	(ILcmw;)Lcpu;	create	create
		p	1		syncId
		p	2		playerInventory
c	crd	net/minecraft/world/inventory/InventoryMerchant
	m	(Ldbt;)V	<init>	<init>
		p	1		merchant
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	(I)V	c	setSelectionHint
		p	1		index
	m	(I)Z	d	isPaymentSlot
		p	1		slot
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Ldbu;	g	getActiveOffer
	m	()I	h	getFutureXp
	f	Ldbt;	b	merchant
	f	Ljv;	c	itemStacks
	f	Ldbu;	d	activeOffer
	f	I	e	selectionHint
	f	I	f	futureXp
c	cre	net/minecraft/world/inventory/ContainerMerchant
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Ldbt;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		merchant
	m	(ILdbs;)V	a	moveFromInventoryToPaymentSlot
		p	1		slot
		p	2		stack
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Ldbs;)V	a	lambda$tryMoveItems$0
		p	1		item
	m	(Ldbv;)V	a	setOffers
		p	1		offers
	m	(Z)V	a	setShowProgressBar
		p	1		leveled
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Z)V	b	setCanRestock
		p	1		canRefreshTrades
	m	(I)V	e	setSelectionHint
		p	1		index
	m	(I)V	f	setXp
		p	1		experience
	m	(I)V	g	setMerchantLevel
		p	1		levelProgress
	m	(I)V	h	tryMoveItems
		p	1		recipeIndex
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	()I	n	getTraderLevel
	m	()Z	o	canRestock
	m	()Ldbv;	p	getOffers
	m	()Z	q	showProgressBar
	m	()V	r	playTradeSound
	f	I	k	PAYMENT1_SLOT
	f	I	l	PAYMENT2_SLOT
	f	I	m	RESULT_SLOT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	I	r	SELLSLOT1_X
	f	I	s	SELLSLOT2_X
	f	I	t	BUYSLOT_X
	f	I	u	ROW_Y
	f	Ldbt;	v	trader
	f	Lcrd;	w	tradeContainer
	f	I	x	merchantLevel
	f	Z	y	showProgressBar
	f	Z	z	canRestock
c	crf	net/minecraft/world/inventory/SlotMerchantResult
	m	(Lcmx;Ldbt;Lcrd;III)V	<init>	<init>
		p	1		player
		p	2		merchant
		p	3		merchantInventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcuq;	a	remove
		p	1		amount
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcuq;)V	b_	checkTakeAchievements
		p	1		stack
	f	Lcrd;	a	slots
	f	Lcmx;	b	player
	f	I	g	removeCount
	f	Ldbt;	h	merchant
c	crg	net/minecraft/world/inventory/NonInteractiveResultSlot
	m	(Lbqk;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(I)Lcuq;	a	remove
		p	1		amount
	m	(IILcmx;)Ljava/util/Optional;	a	tryRemove
		p	1		min
		p	2		max
		p	3		player
	m	(Lcmx;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(IILcmx;)Lcuq;	b	safeTake
		p	1		min
		p	2		max
		p	3		player
	m	(Lcmx;)Z	b	allowModification
		p	1		player
	m	(Lcuq;I)Lcuq;	b	safeInsert
		p	1		stack
		p	2		count
	m	(Lcuq;Lcuq;)V	b	onQuickCraft
		p	1		newItem
		p	2		original
	m	(Lcuq;)Lcuq;	d	safeInsert
		p	1		stack
	m	()Z	e	isHighlightable
	m	()Z	f	isFake
c	crh	net/minecraft/world/inventory/InventoryEnderChest
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Ldrd;)V	a	setActiveChest
		p	1		blockEntity
	m	(Ljo$a;)Luh;	a	createTag
		p	1		registries
	m	(Luh;Ljo$a;)V	a	fromTag
		p	1		list
		p	2		registries
	m	(Ldrd;)Z	b	isActiveChest
		p	1		blockEntity
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	f	Ldrd;	b	activeChest
c	cri	net/minecraft/world/inventory/ContainerRecipeBook
	m	(Lcrc;I)V	<init>	<init>
		p	1		type
		p	2		syncId
	m	(Lcnb;)V	a	fillCraftSlotsStackedContents
		p	1		finder
	m	(Lczb;)Z	a	recipeMatches
		p	1		recipe
	m	(ZLczb;Laqv;)V	a	handlePlacement
		p	1		craftAll
		p	2		recipe
		p	3		player
	m	()V	an_	beginPlacingRecipe
	m	(Lczb;)V	b	finishPlacingRecipe
		p	1		recipe
	m	(I)Z	e	shouldMoveToInventory
		p	1		index
	m	()V	l	clearCraftingContent
	m	()I	m	getResultSlotIndex
	m	()I	n	getGridWidth
	m	()I	o	getGridHeight
	m	()I	p	getSize
	m	()Lcrj;	t	getRecipeBookType
c	crj	net/minecraft/world/inventory/RecipeBookType
	m	()[Lcrj;	a	$values
	f	Lcrj;	a	CRAFTING
	f	Lcrj;	b	FURNACE
	f	Lcrj;	c	BLAST_FURNACE
	f	Lcrj;	d	SMOKER
	f	[Lcrj;	e	$VALUES
c	crk	net/minecraft/world/inventory/RecipeCraftingHolder
	m	(Lcmx;Ljava/util/List;)V	a	awardUsedRecipes
		p	1		player
		p	2		ingredients
	m	(Lczb;)V	a	setRecipeUsed
		p	1		recipe
	m	(Ldcw;Laqv;Lczb;)Z	a	setRecipeUsed
		p	1		world
		p	2		player
		p	3		recipe
	m	()Lczb;	d	getRecipeUsed
c	crl	net/minecraft/world/inventory/InventoryCraftResult
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lczb;)V	a	setRecipeUsed
		p	1		recipe
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	()Lczb;	d	getRecipeUsed
	m	()V	e	setChanged
	f	Ljv;	b	itemStacks
	f	Lczb;	c	recipeUsed
c	crm	net/minecraft/world/inventory/SlotResult
	m	(Lcmx;Lcql;Lbqk;III)V	<init>	<init>
		p	1		player
		p	2		input
		p	3		inventory
		p	4		index
		p	5		x
		p	6		y
	m	(I)Lcuq;	a	remove
		p	1		amount
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(Lcuq;)V	b_	checkTakeAchievements
		p	1		stack
	m	()Z	f	isFake
	f	Lcql;	a	craftSlots
	f	Lcmx;	b	player
	f	I	g	removeCount
c	crn	net/minecraft/world/inventory/ContainerShulkerBox
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	f	I	k	CONTAINER_SIZE
	f	Lbqk;	l	container
c	cro	net/minecraft/world/inventory/SlotShulkerBox
	m	(Lbqk;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
c	crp	net/minecraft/world/inventory/ContainerProperties
	m	(I)V	<init>	<init>
		p	1		size
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	[I	a	ints
c	crq	net/minecraft/world/inventory/Slot
	m	(Lbqk;III)V	<init>	<init>
		p	1		inventory
		p	2		index
		p	3		x
		p	4		y
	m	()I	a	getMaxStackSize
	m	(I)Lcuq;	a	remove
		p	1		amount
	m	(IILcmx;)Ljava/util/Optional;	a	tryRemove
		p	1		min
		p	2		max
		p	3		player
	m	(Lcmx;)Z	a	mayPickup
		p	1		playerEntity
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Lcuq;I)V	a	onQuickCraft
		p	1		stack
		p	2		amount
	m	(Lcuq;Lcuq;)V	a	setByPlayer
		p	1		stack
		p	2		previousStack
	m	(Lcuq;)I	a_	getMaxStackSize
		p	1		stack
	m	()Lcom/mojang/datafixers/util/Pair;	b	getNoItemIcon
	m	(I)V	b	onSwapCraft
		p	1		amount
	m	(IILcmx;)Lcuq;	b	safeTake
		p	1		min
		p	2		max
		p	3		player
	m	(Lcmx;)Z	b	allowModification
		p	1		player
	m	(Lcmx;Lcuq;)V	b	lambda$safeTake$0
		p	2		stack
	m	(Lcuq;I)Lcuq;	b	safeInsert
		p	1		stack
		p	2		count
	m	(Lcuq;Lcuq;)V	b	onQuickCraft
		p	1		newItem
		p	2		original
	m	(Lcuq;)V	b_	checkTakeAchievements
		p	1		stack
	m	()V	c	setChanged
	m	()Z	d	isActive
	m	(Lcuq;)Lcuq;	d	safeInsert
		p	1		stack
	m	()Z	e	isHighlightable
	m	(Lcuq;)V	e	setByPlayer
		p	1		stack
	m	()Z	f	isFake
	m	(Lcuq;)V	f	set
		p	1		stack
	m	()Lcuq;	g	getItem
	m	()Z	h	hasItem
	m	()I	i	getContainerSlot
	f	I	a	slot
	f	Lbqk;	c	container
	f	I	d	index
	f	I	e	x
	f	I	f	y
c	crr	net/minecraft/world/inventory/SlotRange
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	slots
	m	(Ljava/lang/String;Lit/unimi/dsi/fastutil/ints/IntList;)Lcrr;	a	of
		p	0		name
		p	1		slotIds
	m	()I	b	size
c	crr$1	net/minecraft/world/inventory/SlotRange$1
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	slots
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	val$slots
	f	Ljava/lang/String;	b	val$name
c	crs	net/minecraft/world/inventory/SlotRanges
	m	()Ljava/util/stream/Stream;	a	allNames
	m	(Lcrr;)Z	a	lambda$singleSlotNames$3
		p	0		slotRange
	m	(Ljava/lang/String;)Lcrr;	a	nameToIds
		p	0		name
	m	(Ljava/lang/String;I)Lcrr;	a	create
		p	0		name
		p	1		slotId
	m	(Ljava/lang/String;Lit/unimi/dsi/fastutil/ints/IntList;)Lcrr;	a	create
		p	0		name
		p	1		slotIds
	m	(Ljava/lang/String;[I)Lcrr;	a	create
		p	0		name
		p	1		slotIds
	m	(Ljava/util/ArrayList;)V	a	lambda$static$0
		p	0		list
	m	(Ljava/util/List;Ljava/lang/String;I)V	a	addSingleSlot
		p	0		list
		p	1		name
		p	2		slotId
	m	(Ljava/util/List;Ljava/lang/String;II)V	a	addSlotRange
		p	0		list
		p	1		baseName
		p	2		firstSlotId
		p	3		lastSlotId
	m	(Ljava/util/List;Ljava/lang/String;[I)V	a	addSlots
		p	0		list
		p	1		name
		p	2		slots
	m	()Ljava/util/stream/Stream;	b	singleSlotNames
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$2
		p	0		name
	m	()[Lcrr;	c	lambda$static$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	SLOTS
	f	Ljava/util/function/Function;	c	NAME_LOOKUP
c	crt	net/minecraft/world/inventory/ContainerSmithing
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcmx;Z)Z	a	mayPickup
		p	1		player
		p	2		present
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Lcuq;Lczb;)Ljava/util/stream/IntStream;	a	lambda$findSlotToQuickMoveTo$7
		p	1		recipe
	m	(Lczr;Lcuq;)Ljava/util/OptionalInt;	a	findSlotMatchingIngredient
		p	0		recipe
		p	1		stack
	m	(Ldcw;Ljd;)V	a	lambda$onTake$6
		p	0		world
		p	1		pos
	m	(Ldtc;)Z	a	isValidBlock
		p	1		state
	m	(Lcuq;Lczb;)Z	b	lambda$createInputSlotDefinitions$4
		p	1		recipe
	m	(Lcuq;)Z	c	canMoveIntoInputSlots
		p	1		stack
	m	(Lcuq;Lczb;)Z	c	lambda$createInputSlotDefinitions$2
		p	1		recipe
	m	(Lcuq;)I	d	getSlotToQuickMoveTo
		p	1		stack
	m	(Lcuq;Lczb;)Z	d	lambda$createInputSlotDefinitions$0
		p	1		recipe
	m	(I)V	e	shrinkStackInSlot
		p	1		slot
	m	(Lcuq;)Ljava/util/OptionalInt;	e	findSlotToQuickMoveTo
		p	1		stack
	m	(I)Z	f	lambda$findSlotToQuickMoveTo$8
		p	1		slot
	m	(Lcuq;)Z	f	lambda$createInputSlotDefinitions$5
		p	1		stack
	m	(Lcuq;)Z	g	lambda$createInputSlotDefinitions$3
		p	1		stack
	m	(Lcuq;)Z	h	lambda$createInputSlotDefinitions$1
		p	1		stack
	m	()Lcqy;	l	createInputSlotDefinitions
	m	()V	m	createResult
	m	()Ljava/util/List;	n	getRelevantItems
	m	()Lczs;	p	createRecipeInput
	f	I	k	TEMPLATE_SLOT
	f	I	l	BASE_SLOT
	f	I	m	ADDITIONAL_SLOT
	f	I	n	RESULT_SLOT
	f	I	s	TEMPLATE_SLOT_X_PLACEMENT
	f	I	t	BASE_SLOT_X_PLACEMENT
	f	I	u	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	v	SLOT_Y_PLACEMENT
	f	I	w	RESULT_SLOT_X_PLACEMENT
	f	Ldcw;	x	level
	f	Lczb;	y	selectedRecipe
	f	Ljava/util/List;	z	recipes
c	cru	net/minecraft/world/inventory/ContainerSmoker
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lbqk;Lcqf;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		inventory
		p	4		propertyDelegate
c	crv	net/minecraft/world/inventory/AutoRecipeOutput
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
c	crw	net/minecraft/world/inventory/ContainerStonecutter
	m	(ILcmw;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
	m	(ILcmw;Lcqg;)V	<init>	<init>
		p	1		syncId
		p	2		playerInventory
		p	3		context
	m	()Lcrc;	a	getType
	m	(Lbqk;)V	a	slotsChanged
		p	1		inventory
	m	(Lbqk;Lcuq;)V	a	setupRecipeList
		p	1		input
		p	2		stack
	m	(Lcmx;)V	a	removed
		p	1		player
	m	(Lcmx;I)Z	a	clickMenuButton
		p	1		player
		p	2		id
	m	(Lcmx;Ldcw;Ljd;)V	a	lambda$removed$1
		p	2		world
		p	3		pos
	m	(Lcuq;Lcrq;)Z	a	canTakeItemForPickAll
		p	1		stack
		p	2		slot
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
		p	1		contentsChangedListener
	m	(Lcmx;)Z	b	stillValid
		p	1		player
	m	(Lcmx;I)Lcuq;	b	quickMoveStack
		p	1		player
		p	2		slot
	m	(Lbqk;)Lczp;	c	createRecipeInput
		p	0		inventory
	m	(I)Z	e	isValidRecipeIndex
		p	1		id
	m	()I	l	getSelectedRecipeIndex
	m	()Ljava/util/List;	m	getRecipes
	m	()I	n	getNumRecipes
	m	()Z	o	hasInputItem
	m	()V	p	setupResultSlot
	m	()V	q	lambda$new$0
	f	Lcrl;	A	resultContainer
	f	I	k	INPUT_SLOT
	f	I	l	RESULT_SLOT
	f	Lcrq;	m	inputSlot
	f	Lcrq;	n	resultSlot
	f	Lbqk;	o	container
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	Lcqg;	t	access
	f	Lcqn;	u	selectedRecipeIndex
	f	Ldcw;	v	level
	f	Ljava/util/List;	w	recipes
	f	Lcuq;	x	input
	f	J	y	lastSoundTime
	f	Ljava/lang/Runnable;	z	slotUpdateListener
c	crw$1	net/minecraft/world/inventory/ContainerStonecutter$1
	m	(Lcrw;I)V	<init>	<init>
		p	2		size
	m	()V	e	setChanged
	f	Lcrw;	b	this$0
c	crw$2	net/minecraft/world/inventory/ContainerStonecutter$2
	m	(Lcrw;Lbqk;IIILcqg;)V	<init>	<init>
		p	2		inventory
		p	3		index
		p	4		x
		p	5		y
	m	(Lcmx;Lcuq;)V	a	onTake
		p	1		player
		p	2		stack
	m	(Lcuq;)Z	a	mayPlace
		p	1		stack
	m	(Ldcw;Ljd;)V	a	lambda$onTake$0
		p	1		world
		p	2		pos
	m	()Ljava/util/List;	j	getRelevantItems
	f	Lcqg;	a	val$access
	f	Lcrw;	b	this$0
c	crx	net/minecraft/world/inventory/TransientCraftingContainer
	m	(Lcpu;II)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
	m	(Lcpu;IILjv;)V	<init>	<init>
		p	1		handler
		p	2		width
		p	3		height
		p	4		stacks
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
	f	Ljv;	b	items
	f	I	c	width
	f	I	d	height
	f	Lcpu;	e	menu
c	crz	net/minecraft/world/inventory/tooltip/BundleTooltip
	m	()Lcxf;	a	contents
	f	Lcxf;	a	contents
c	csa	net/minecraft/world/inventory/tooltip/TooltipComponent
c	csc	net/minecraft/world/item/AdventureModePredicate
	m	(Ljava/util/List;Z)V	<init>	<init>
		p	1		predicates
		p	2		showInTooltip
	m	(Ljava/util/List;ZLjava/util/List;)V	<init>	<init>
		p	1		predicates
		p	2		showInTooltip
		p	3		tooltipText
	m	()Z	a	showInTooltip
	m	(Law;)Ljava/util/stream/Stream;	a	lambda$computeTooltip$6
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lcsc;)Ljava/util/List;	a	lambda$static$5
	m	(Ldtg;)Z	a	test
		p	1		cachedPos
	m	(Ldtg;Ldtg;Z)Z	a	areSameBlocks
		p	0		pos
		p	1		cachedPos
		p	2		nbtAware
	m	(Ljava/util/List;)Ljava/util/List;	a	computeTooltip
		p	0		blockPredicates
	m	(Ljava/util/function/Consumer;)V	a	addToTooltip
		p	1		adder
	m	(Ljm;)Lwz;	a	lambda$computeTooltip$7
	m	(Z)Lcsc;	a	withTooltip
		p	1		showInTooltip
	m	()Ljava/lang/String;	b	lambda$static$1
	m	(Law;)Lcsc;	b	lambda$static$0
		p	0		predicate
	m	(Lcsc;)Ljava/util/List;	b	lambda$static$3
		p	0		checker
	m	(Lcsc;)Lcom/mojang/serialization/DataResult;	c	lambda$static$2
		p	0		checker
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lwz;	c	CAN_BREAK_HEADER
	f	Lwz;	d	CAN_PLACE_HEADER
	f	Lcom/mojang/serialization/Codec;	e	SIMPLE_CODEC
	f	Lcom/mojang/serialization/Codec;	f	FULL_CODEC
	f	Lwz;	g	UNKNOWN_USE
	f	Ljava/util/List;	h	predicates
	f	Z	i	showInTooltip
	f	Ljava/util/List;	j	tooltip
	f	Ldtg;	k	lastCheckedBlock
	f	Z	l	lastResult
	f	Z	m	checksBlockEntity
c	csd	net/minecraft/world/item/ItemAir
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	f	Ldfy;	a	block
c	cse	net/minecraft/world/item/AnimalArmorItem
	m	(Ljm;Lcse$a;ZLcul$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		hasOverlay
		p	4		settings
	m	(Lcuq;)Z	a	isEnchantable
		p	1		stack
	m	()Lakr;	b	getTexture
	m	()Lakr;	c	getOverlayTexture
	m	()Lcse$a;	d	getBodyType
	m	()Lavo;	e	getBreakingSound
	f	Lakr;	j	textureLocation
	f	Lakr;	k	overlayTextureLocation
	f	Lcse$a;	l	bodyType
c	cse$a	net/minecraft/world/item/AnimalArmorItem$a
	m	(Ljava/lang/String;ILjava/util/function/Function;Lavo;)V	<init>	<init>
		p	3		textureIdFunction
		p	4		breakSound
	m	()[Lcse$a;	a	$values
	m	(Lakr;)Lakr;	a	lambda$static$2
		p	0		id
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$0
		p	0		path
	m	(Lakr;)Lakr;	b	lambda$static$1
		p	0		id
	f	Lcse$a;	a	EQUESTRIAN
	f	Lcse$a;	b	CANINE
	f	Ljava/util/function/Function;	c	textureLocator
	f	Lavo;	d	breakingSound
	f	[Lcse$a;	e	$VALUES
c	csf	net/minecraft/world/item/ItemArmor
	m	(Ljm;Lcsf$a;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		type
		p	3		settings
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ljm;Lcsf$a;)Lcxn;	a	lambda$new$0
	m	(Lku;Lcuq;)Z	a	dispenseArmor
		p	0		pointer
		p	1		armor
	m	()Lcsf$a;	f	getType
	m	()I	g	getEnchantmentValue
	m	()Ljm;	h	getMaterial
	m	()Lcxn;	j	getDefaultAttributeModifiers
	m	()I	k	getDefense
	m	()F	l	getToughness
	m	()Lbsy;	m	getEquipmentSlot
	m	()Ljm;	n	getEquipSound
	f	Lkx;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcsf$a;	b	type
	f	Ljm;	c	material
	f	Ljava/util/function/Supplier;	j	defaultModifiers
c	csf$1	net/minecraft/world/item/ItemArmor$1
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
c	csf$a	net/minecraft/world/item/ItemArmor$a
	m	(Ljava/lang/String;ILbsy;ILjava/lang/String;)V	<init>	<init>
		p	3		equipmentSlot
		p	4		baseMaxDamage
		p	5		name
	m	()Lbsy;	a	getSlot
	m	(I)I	a	getDurability
		p	1		multiplier
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	hasTrims
	m	()[Lcsf$a;	e	$values
	f	Lcsf$a;	a	HELMET
	f	Lcsf$a;	b	CHESTPLATE
	f	Lcsf$a;	c	LEGGINGS
	f	Lcsf$a;	d	BOOTS
	f	Lcsf$a;	e	BODY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lbsy;	g	slot
	f	Ljava/lang/String;	h	name
	f	I	i	durability
	f	[Lcsf$a;	j	$VALUES
c	csg	net/minecraft/world/item/ArmorMaterial
	m	()Ljava/util/Map;	a	defense
	m	(Lcsf$a;)I	a	getDefense
		p	1		type
	m	()I	b	enchantmentValue
	m	()Ljm;	c	equipSound
	m	()Ljava/util/function/Supplier;	d	repairIngredient
	m	()Ljava/util/List;	e	layers
	m	()F	f	toughness
	m	()F	g	knockbackResistance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	defense
	f	I	c	enchantmentValue
	f	Ljm;	d	equipSound
	f	Ljava/util/function/Supplier;	e	repairIngredient
	f	Ljava/util/List;	f	layers
	f	F	g	toughness
	f	F	h	knockbackResistance
c	csg$a	net/minecraft/world/item/ArmorMaterial$a
	m	(Lakr;)V	<init>	<init>
		p	1		id
	m	(Lakr;Ljava/lang/String;Z)V	<init>	<init>
		p	1		id
		p	2		suffix
		p	3		dyeable
	m	()Z	a	dyeable
	m	(Z)Lakr;	a	texture
		p	1		secondLayer
	m	(ZLjava/lang/String;)Ljava/lang/String;	a	lambda$resolveTexture$0
		p	2		path
	m	(Z)Lakr;	b	resolveTexture
		p	1		secondLayer
	f	Lakr;	a	assetName
	f	Ljava/lang/String;	b	suffix
	f	Z	c	dyeable
	f	Lakr;	d	innerTexture
	f	Lakr;	e	outerTexture
c	csh	net/minecraft/world/item/EnumArmorMaterial
	m	()Lcyw;	a	lambda$static$15
	m	(Ljava/lang/String;Ljava/util/EnumMap;ILjm;FFLjava/util/function/Supplier;)Ljm;	a	register
		p	0		id
		p	1		defense
		p	2		enchantability
		p	3		equipSound
		p	4		toughness
		p	5		knockbackResistance
		p	6		repairIngredient
	m	(Ljava/lang/String;Ljava/util/EnumMap;ILjm;FFLjava/util/function/Supplier;Ljava/util/List;)Ljm;	a	register
		p	0		id
		p	1		defense
		p	2		enchantability
		p	3		equipSound
		p	4		toughness
		p	5		knockbackResistance
		p	6		repairIngredient
		p	7		layers
	m	(Ljava/util/EnumMap;)V	a	lambda$static$14
		p	0		map
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	m	()Lcyw;	b	lambda$static$13
	m	(Ljava/util/EnumMap;)V	b	lambda$static$12
		p	0		map
	m	()Lcyw;	c	lambda$static$11
	m	(Ljava/util/EnumMap;)V	c	lambda$static$10
		p	0		map
	m	()Lcyw;	d	lambda$static$9
	m	(Ljava/util/EnumMap;)V	d	lambda$static$8
		p	0		map
	m	()Lcyw;	e	lambda$static$7
	m	(Ljava/util/EnumMap;)V	e	lambda$static$6
		p	0		map
	m	()Lcyw;	f	lambda$static$5
	m	(Ljava/util/EnumMap;)V	f	lambda$static$4
		p	0		map
	m	()Lcyw;	g	lambda$static$3
	m	(Ljava/util/EnumMap;)V	g	lambda$static$2
		p	0		map
	m	()Lcyw;	h	lambda$static$1
	m	(Ljava/util/EnumMap;)V	h	lambda$static$0
		p	0		map
	f	Ljm;	a	LEATHER
	f	Ljm;	b	CHAIN
	f	Ljm;	c	IRON
	f	Ljm;	d	GOLD
	f	Ljm;	e	DIAMOND
	f	Ljm;	f	TURTLE
	f	Ljm;	g	NETHERITE
	f	Ljm;	h	ARMADILLO
c	csi	net/minecraft/world/item/ItemArmorStand
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
c	csj	net/minecraft/world/item/ItemArrow
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcuq;Lbtn;Lcuq;)Lcnd;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
		p	4		shotFrom
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
c	csk	net/minecraft/world/item/ItemAxe
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Ljd;Lcmx;Ldtc;)Ljava/util/Optional;	a	evaluateNewBlockState
		p	1		world
		p	2		pos
		p	3		player
		p	4		state
	m	(Ldtc;)Ljava/util/Optional;	a	getStripped
		p	1		state
	m	(Ldtc;Ldfy;)Ldtc;	a	lambda$getStripped$1
		p	1		block
	m	(Lcyf;)Z	b	playerHasShieldUseIntent
		p	0		context
	m	(Ldtc;Ldfy;)Ldtc;	b	lambda$evaluateNewBlockState$0
		p	1		block
	f	Ljava/util/Map;	a	STRIPPABLES
c	csl	net/minecraft/world/item/ItemBanner
	m	(Ldfy;Ldfy;Lcul$a;)V	<init>	<init>
		p	1		bannerBlock
		p	2		wallBannerBlock
		p	3		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ljava/util/List;)V	a	appendHoverTextFromBannerBlockEntityTag
		p	0		stack
		p	1		tooltip
	m	()Lcti;	b	getColor
c	csm	net/minecraft/world/item/ItemBannerPattern
	m	(Lawu;Lcul$a;)V	<init>	<init>
		p	1		patternItemTag
		p	2		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	()Lawu;	b	getBannerPattern
	m	()Lxn;	c	getDisplayName
	f	Lawu;	a	bannerPattern
c	csn	net/minecraft/world/item/ItemBed
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcyd;Ldtc;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cso	net/minecraft/world/item/ItemBlock
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcjh;)V	a	onDestroyed
		p	1		entity
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldqj;Lub;)V	a	setBlockEntityData
		p	0		stack
		p	1		type
		p	2		nbt
	m	(Lcyd;)Lbqr;	a	place
		p	1		context
	m	(Lcyd;Ldtc;)Z	a	placeBlock
		p	1		context
		p	2		state
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Ljd;Lcuq;)Z	a	updateCustomBlockEntityTag
		p	0		world
		p	1		player
		p	2		pos
		p	3		stack
	m	(Ldcw;Ljd;Lcuq;)V	a	updateBlockEntityComponents
		p	0		world
		p	1		pos
		p	2		stack
	m	(Ldtc;)Lavo;	a	getPlaceSound
		p	1		state
	m	(Ljava/util/Map;Lcul;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Ljd;Ldcw;Lcmx;Lcuq;Ldtc;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
	m	(Ljd;Ldcw;Lcuq;Ldtc;)Ldtc;	a	updateBlockStateFromTag
		p	1		pos
		p	2		world
		p	3		stack
		p	4		state
	m	()Z	ar_	canFitInsideContainerItems
	m	(Lcyd;)Lcyd;	b	updatePlacementContext
		p	1		context
	m	(Lcyd;Ldtc;)Z	b	canPlace
		p	1		context
		p	2		state
	m	()Z	c	mustSurvive
	m	(Lcyd;)Ldtc;	c	getPlacementState
		p	1		context
	m	()Ldfy;	d	getBlock
	m	()Lcpl;	i	requiredFeatures
	f	Ldfy;	a	block
c	csp	net/minecraft/world/item/ItemBoat
	m	(ZLcov$b;Lcul$a;)V	<init>	<init>
		p	1		chest
		p	2		type
		p	3		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Lexa;Lcuq;Lcmx;)Lcov;	a	getBoat
		p	1		world
		p	2		hitResult
		p	3		stack
		p	4		player
	f	Ljava/util/function/Predicate;	a	ENTITY_PREDICATE
	f	Lcov$b;	b	type
	f	Z	c	hasChest
c	csq	net/minecraft/world/item/ItemBoneMeal
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Ldcw;Ljd;)Z	a	growCrop
		p	0		stack
		p	1		world
		p	2		pos
	m	(Lcuq;Ldcw;Ljd;Lji;)Z	a	growWaterPlant
		p	0		stack
		p	1		world
		p	2		blockPos
		p	3		facing
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcx;Ljd;I)V	a	addGrowthParticles
		p	0		world
		p	1		pos
		p	2		count
	m	(Ldtb$a;)Z	a	lambda$growWaterPlant$2
		p	0		state
	m	(Ljm;)Ldtc;	a	lambda$growWaterPlant$1
		p	0		blockEntry
	m	(Ljm;)Ldtc;	b	lambda$growWaterPlant$0
		p	0		blockEntry
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
c	csq$1	net/minecraft/world/item/ItemBoneMeal$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$BonemealableBlock$Type
c	csr	net/minecraft/world/item/ItemBook
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;)Z	a	isEnchantable
		p	1		stack
	m	()I	g	getEnchantmentValue
c	css	net/minecraft/world/item/ItemGlassBottle
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lbsn;)Z	a	lambda$use$0
		p	0		entity
	m	(Lcuq;Lcmx;Lcuq;)Lcuq;	a	turnBottleIntoItem
		p	1		stack
		p	2		player
		p	3		outputStack
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cst	net/minecraft/world/item/ItemBow
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(I)F	a	getPowerForTime
		p	0		useTicks
	m	(Lbtn;Lcnp;IFFFLbtn;)V	a	shootProjectile
		p	1		shooter
		p	2		projectile
		p	3		index
		p	4		speed
		p	5		divergence
		p	6		yaw
		p	7		target
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	()I	c	getDefaultProjectileRange
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
c	csu	net/minecraft/world/item/BrushItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lbsr;)Z	a	lambda$calculateHitResult$0
		p	0		entity
	m	(Lcmx;)Lexa;	a	calculateHitResult
		p	1		user
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lbtn;Lcuq;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Ldcw;Lewy;Ldtc;Lexc;Lbtg;)V	a	spawnDustParticles
		p	1		world
		p	2		hitResult
		p	3		state
		p	4		userRotation
		p	5		arm
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	f	I	a	ANIMATION_DURATION
	f	I	b	USE_DURATION
c	csu$1	net/minecraft/world/item/BrushItem$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	csu$a	net/minecraft/world/item/BrushItem$a
	m	()D	a	xd
	m	(Lexc;Lji;)Lcsu$a;	a	fromDirection
		p	0		userRotation
		p	1		side
	m	()D	b	yd
	m	()D	c	zd
	f	D	a	xd
	f	D	b	yd
	f	D	c	zd
	f	D	d	ALONG_SIDE_DELTA
	f	D	e	OUT_FROM_SIDE_DELTA
c	csv	net/minecraft/world/item/ItemBucket
	m	(Lepd;Lcul$a;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	(Lcmx;Lavo;)V	a	lambda$use$0
		p	1		sound
	m	(Lcmx;Ldcw;Lcuq;Ljd;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcmx;Ldcw;Ljd;Lewy;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lcmx;Ldcx;Ljd;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcuq;Lcmx;)Lcuq;	a	getEmptySuccessItem
		p	0		stack
		p	1		player
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lepd;	a	content
c	csw	net/minecraft/world/item/BundleItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lbsr;)V	a	playRemoveOneSound
		p	1		entity
	m	(Lcjh;)V	a	onDestroyed
		p	1		entity
	m	(Lcmx;Lcuq;)V	a	lambda$dropContents$0
		p	1		stack
	m	(Lcuq;Lcmx;)Z	a	dropContents
		p	0		stack
		p	1		player
	m	(Lcuq;Lcrq;Lcqd;Lcmx;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Lcuq;Lcrq;Lcqd;Lcmx;Lbug;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lbsr;)V	b	playInsertSound
		p	1		entity
	m	(Lbsr;)V	c	playDropContentsSound
		p	1		entity
	m	(Lcuq;)F	c	getFullnessDisplay
		p	0		stack
	m	(Lcuq;)Z	d	isBarVisible
		p	1		stack
	m	(Lcuq;)I	e	getBarWidth
		p	1		stack
	m	(Lcuq;)I	f	getBarColor
		p	1		stack
	m	(Lcuq;)Ljava/util/Optional;	g	getTooltipImage
		p	1		stack
	f	I	a	BAR_COLOR
	f	I	b	TOOLTIP_MAX_WEIGHT
c	csx	net/minecraft/world/item/ItemChorusFruit
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
c	csy	net/minecraft/world/item/ItemCompass
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Ldcw;Lbsr;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;)Ljl;	a	getSpawnPosition
		p	0		world
	m	(Lcuq;)Z	d_	isFoil
		p	1		stack
	m	(Lcuq;)Ljava/lang/String;	h	getDescriptionId
		p	1		stack
c	csz	net/minecraft/world/item/ItemWorldMapBase
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Ldcw;Lcmx;)Lzg;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	()Z	ao_	isComplex
c	cta	net/minecraft/world/item/CreativeModeTab
	m	(Lcta$f;ILcta$h;Lwz;Ljava/util/function/Supplier;Lcta$b;)V	<init>	<init>
		p	1		row
		p	2		column
		p	3		type
		p	4		displayName
		p	5		iconSupplier
		p	6		entryCollector
	m	()Lwz;	a	getDisplayName
	m	(Lcta$d;)V	a	buildContents
		p	1		displayContext
	m	(Lcta$f;I)Lcta$a;	a	builder
		p	0		location
		p	1		column
	m	(Lcuq;)Z	a	contains
		p	1		stack
	m	(Ljava/lang/String;)Lakr;	a	createTextureLocation
		p	0		name
	m	()Lcuq;	b	getIconItem
	m	()Lakr;	c	getBackgroundTexture
	m	()Z	d	showTitle
	m	()Z	e	canScroll
	m	()I	f	column
	m	()Lcta$f;	g	row
	m	()Z	h	hasAnyItems
	m	()Z	i	shouldDisplay
	m	()Z	j	isAlignedRight
	m	()Lcta$h;	k	getType
	m	()Ljava/util/Collection;	l	getDisplayItems
	m	()Ljava/util/Collection;	m	getSearchTabDisplayItems
	m	()Ljava/lang/IllegalStateException;	n	lambda$buildContents$0
	f	Lakr;	a	DEFAULT_BACKGROUND
	f	Lwz;	b	displayName
	f	Lakr;	c	backgroundTexture
	f	Z	d	canScroll
	f	Z	e	showTitle
	f	Z	f	alignedRight
	f	Lcta$f;	g	row
	f	I	h	column
	f	Lcta$h;	i	type
	f	Lcuq;	j	iconItemStack
	f	Ljava/util/Collection;	k	displayItems
	f	Ljava/util/Set;	l	displayItemsSearchTab
	f	Ljava/util/function/Supplier;	m	iconGenerator
	f	Lcta$b;	n	displayItemsGenerator
c	cta$a	net/minecraft/world/item/CreativeModeTab$a
	m	(Lcta$f;I)V	<init>	<init>
		p	1		row
		p	2		column
	m	()Lcta$a;	a	alignedRight
	m	(Lakr;)Lcta$a;	a	backgroundTexture
	m	(Lcta$b;)Lcta$a;	a	displayItems
		p	1		entryCollector
	m	(Lcta$d;Lcta$e;)V	a	lambda$static$0
		p	0		displayContext
		p	1		entries
	m	(Lcta$h;)Lcta$a;	a	type
		p	1		type
	m	(Ljava/util/function/Supplier;)Lcta$a;	a	icon
		p	1		iconSupplier
	m	(Lwz;)Lcta$a;	a	title
		p	1		displayName
	m	()Lcta$a;	b	hideTitle
	m	()Lcta$a;	c	noScrollBar
	m	()Lcta;	d	build
	m	()Lcuq;	e	lambda$new$1
	f	Lcta$b;	a	EMPTY_GENERATOR
	f	Lcta$f;	b	row
	f	I	c	column
	f	Lwz;	d	displayName
	f	Ljava/util/function/Supplier;	e	iconGenerator
	f	Lcta$b;	f	displayItemsGenerator
	f	Z	g	canScroll
	f	Z	h	showTitle
	f	Z	i	alignedRight
	f	Lcta$h;	j	type
	f	Lakr;	k	backgroundTexture
c	cta$b	net/minecraft/world/item/CreativeModeTab$b
	m	(Lcta$d;Lcta$e;)V	accept	accept
		p	1		displayContext
		p	2		entries
c	cta$c	net/minecraft/world/item/CreativeModeTab$c
	m	(Lcta;Lcpl;)V	<init>	<init>
		p	1		group
		p	2		enabledFeatures
	m	(Lcuq;Lcta$g;)V	a	accept
		p	1		stack
		p	2		visibility
	f	Ljava/util/Collection;	a	tabContents
	f	Ljava/util/Set;	b	searchTabContents
	f	Lcta;	c	tab
	f	Lcpl;	d	featureFlagSet
c	cta$d	net/minecraft/world/item/CreativeModeTab$d
	m	()Lcpl;	a	enabledFeatures
	m	(Lcpl;ZLjo$a;)Z	a	needsUpdate
		p	1		enabledFeatures
		p	2		hasPermissions
		p	3		lookup
	m	()Z	b	hasPermissions
	m	()Ljo$a;	c	holders
	f	Lcpl;	a	enabledFeatures
	f	Z	b	hasPermissions
	f	Ljo$a;	c	holders
c	cta$e	net/minecraft/world/item/CreativeModeTab$e
	m	(Lcta$g;Lcuq;)V	a	lambda$acceptAll$0
		p	2		stack
	m	(Lcuq;)V	a	accept
		p	1		stack
	m	(Lcuq;Lcta$g;)V	a	accept
		p	1		stack
		p	2		visibility
	m	(Ldcv;)V	a	accept
		p	1		item
	m	(Ldcv;Lcta$g;)V	a	accept
		p	1		item
		p	2		visibility
	m	(Ljava/util/Collection;)V	a	acceptAll
		p	1		stacks
	m	(Ljava/util/Collection;Lcta$g;)V	a	acceptAll
		p	1		stacks
		p	2		visibility
c	cta$f	net/minecraft/world/item/CreativeModeTab$f
	m	()[Lcta$f;	a	$values
	f	Lcta$f;	a	TOP
	f	Lcta$f;	b	BOTTOM
	f	[Lcta$f;	c	$VALUES
c	cta$g	net/minecraft/world/item/CreativeModeTab$g
	m	()[Lcta$g;	a	$values
	f	Lcta$g;	a	PARENT_AND_SEARCH_TABS
	f	Lcta$g;	b	PARENT_TAB_ONLY
	f	Lcta$g;	c	SEARCH_TAB_ONLY
	f	[Lcta$g;	d	$VALUES
c	cta$h	net/minecraft/world/item/CreativeModeTab$h
	m	()[Lcta$h;	a	$values
	f	Lcta$h;	a	CATEGORY
	f	Lcta$h;	b	INVENTORY
	f	Lcta$h;	c	HOTBAR
	f	Lcta$h;	d	SEARCH
	f	[Lcta$h;	e	$VALUES
c	ctb	net/minecraft/world/item/CreativeModeTabs
	m	()V	a	validate
	m	(Lakp;Lcta$e;Lcta$g;Ljm$c;)V	a	lambda$generatePresetPaintings$46
		p	3		paintingVariantEntry
	m	(Lcpl;Ljm$c;)Z	a	lambda$generatePotionEffectTypes$34
		p	1		potionEntry
	m	(Lcpl;ZLjo$a;)Z	a	tryRebuildTabContents
		p	0		enabledFeatures
		p	1		operatorEnabled
		p	2		lookup
	m	(Lcta$d;)V	a	buildAllTabContents
		p	0		displayContext
	m	(Lcta$d;Lcta$e;)V	a	lambda$bootstrap$32
		p	0		displayContext
		p	1		entries
	m	(Lcta$d;Lcta;)V	a	lambda$buildAllTabContents$50
		p	1		group
	m	(Lcta$e;Lcta$d;Ljo$b;)V	a	lambda$bootstrap$31
		p	2		registryWrapper
	m	(Lcta$e;Lcta$g;)V	a	generateSuspiciousStews
		p	0		entries
		p	1		visibility
	m	(Lcta$e;Lcta$g;Lcuq;)V	a	lambda$generateInstrumentTypes$43
		p	2		stack
	m	(Lcta$e;Ljo$a;Ljo$b;Ljava/util/function/Predicate;Lcta$g;)V	a	generatePresetPaintings
		p	0		entries
		p	1		registryLookup
		p	2		registryWrapper
		p	3		filter
		p	4		stackVisibility
	m	(Lcta$e;Ljo$b;)V	a	lambda$bootstrap$25
		p	1		registryWrapper
	m	(Lcta$e;Ljo;Lcta$g;)V	a	generateEnchantmentBookTypesOnlyMaxLevel
		p	0		entries
		p	1		registryWrapper
		p	2		stackVisibility
	m	(Lcta$e;Ljo;Lcul;Lawu;Lcta$g;)V	a	generateInstrumentTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		instrumentTag
		p	4		visibility
	m	(Lcta$e;Ljo;Lcul;Lcta$g;Lcpl;)V	a	generatePotionEffectTypes
		p	0		entries
		p	1		registryWrapper
		p	2		item
		p	3		visibility
		p	4		enabledFeatures
	m	(Lcta;)Z	a	lambda$buildAllTabContents$49
		p	0		group
	m	(Lcul;Lcta$e;Lcta$g;Ljq$c;)V	a	lambda$generateInstrumentTypes$44
		p	3		entryList
	m	(Lcul;Ljm$c;)Lcuq;	a	lambda$generatePotionEffectTypes$35
		p	1		entry
	m	(Lcul;Ljm;)Lcuq;	a	lambda$generateInstrumentTypes$42
		p	1		instrument
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljm$c;)Ljava/util/stream/Stream;	a	lambda$generateEnchantmentBookTypesAllLevels$40
		p	0		enchantmentEntry
	m	(Ljm$c;I)Lcuq;	a	lambda$generateEnchantmentBookTypesAllLevels$39
		p	1		level
	m	(Ljm;)Z	a	lambda$bootstrap$30
		p	0		registryEntry
	m	(Ljz;)Lcta;	a	bootstrap
		p	0		registry
	m	(Ljz;Lcta$d;Lcta$e;)V	a	lambda$bootstrap$14
		p	1		displayContext
		p	2		entries
	m	(Lub;)V	a	lambda$generatePresetPaintings$45
		p	0		nbt
	m	()Lcta;	b	getDefaultTab
	m	(Lcta$d;Lcta$e;)V	b	lambda$bootstrap$28
		p	0		displayContext
		p	1		entries
	m	(Lcta$d;Lcta;)V	b	lambda$buildAllTabContents$48
		p	1		group
	m	(Lcta$e;Lcta$d;Ljo$b;)V	b	lambda$bootstrap$22
		p	2		registryWrapper
	m	(Lcta$e;Lcta$g;)V	b	generateOminousVials
		p	0		entries
		p	1		visibility
	m	(Lcta$e;Lcta$g;Lcuq;)V	b	lambda$generateEnchantmentBookTypesAllLevels$41
		p	2		stack
	m	(Lcta$e;Ljo$b;)V	b	lambda$bootstrap$16
		p	1		wrapper
	m	(Lcta$e;Ljo;Lcta$g;)V	b	generateEnchantmentBookTypesAllLevels
		p	0		entries
		p	1		registryWrapper
		p	2		stackVisibility
	m	(Lcta;)Z	b	lambda$buildAllTabContents$47
		p	0		group
	m	(Ljm$c;)Lcuq;	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$37
		p	0		enchantmentEntry
	m	(Ljm;)Z	b	lambda$bootstrap$7
		p	0		registryEntry
	m	()Ljava/util/List;	c	tabs
	m	(Lcta$d;Lcta$e;)V	c	lambda$bootstrap$26
		p	0		displayContext
		p	1		entries
	m	(Lcta$e;Lcta$d;Ljo$b;)V	c	lambda$bootstrap$19
		p	2		registryWrapper
	m	(Lcta$e;Lcta$g;)V	c	generateFireworksAllDurations
		p	0		entries
		p	1		visibility
	m	(Lcta$e;Lcta$g;Lcuq;)V	c	lambda$generateEnchantmentBookTypesOnlyMaxLevel$38
		p	2		stack
	m	()Ljava/util/List;	d	allTabs
	m	(Lcta$d;Lcta$e;)V	d	lambda$bootstrap$23
		p	0		displayContext
		p	1		entries
	m	(Lcta$e;Lcta$d;Ljo$b;)V	d	lambda$bootstrap$8
		p	2		registryWrapper
	m	(Lcta$e;Lcta$g;Lcuq;)V	d	lambda$generatePotionEffectTypes$36
		p	2		stack
	m	()Lcta;	e	searchTab
	m	(Lcta$d;Lcta$e;)V	e	lambda$bootstrap$20
		p	0		displayContext
		p	1		entries
	m	()Ljava/util/stream/Stream;	f	streamAllTabs
	m	(Lcta$d;Lcta$e;)V	f	lambda$bootstrap$17
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	g	lambda$bootstrap$33
	m	(Lcta$d;Lcta$e;)V	g	lambda$bootstrap$11
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	h	lambda$bootstrap$29
	m	(Lcta$d;Lcta$e;)V	h	lambda$bootstrap$9
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	i	lambda$bootstrap$27
	m	(Lcta$d;Lcta$e;)V	i	lambda$bootstrap$5
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	j	lambda$bootstrap$24
	m	(Lcta$d;Lcta$e;)V	j	lambda$bootstrap$3
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	k	lambda$bootstrap$21
	m	(Lcta$d;Lcta$e;)V	k	lambda$bootstrap$1
		p	0		displayContext
		p	1		entries
	m	()Lcuq;	l	lambda$bootstrap$18
	m	()Lcuq;	m	lambda$bootstrap$15
	m	()Lcuq;	n	lambda$bootstrap$13
	m	()Lcuq;	o	lambda$bootstrap$12
	m	()Lcuq;	p	lambda$bootstrap$10
	m	()Lcuq;	q	lambda$bootstrap$6
	m	()Lcuq;	r	lambda$bootstrap$4
	m	()Lcuq;	s	lambda$bootstrap$2
	m	()Lcuq;	t	lambda$bootstrap$0
	f	Lakr;	a	INVENTORY_BACKGROUND
	f	Lakr;	b	SEARCH_BACKGROUND
	f	Lakq;	c	BUILDING_BLOCKS
	f	Lakq;	d	COLORED_BLOCKS
	f	Lakq;	e	NATURAL_BLOCKS
	f	Lakq;	f	FUNCTIONAL_BLOCKS
	f	Lakq;	g	REDSTONE_BLOCKS
	f	Lakq;	h	HOTBAR
	f	Lakq;	i	SEARCH
	f	Lakq;	j	TOOLS_AND_UTILITIES
	f	Lakq;	k	COMBAT
	f	Lakq;	l	FOOD_AND_DRINKS
	f	Lakq;	m	INGREDIENTS
	f	Lakq;	n	SPAWN_EGGS
	f	Lakq;	o	OP_BLOCKS
	f	Lakq;	p	INVENTORY
	f	Ljava/util/Comparator;	q	PAINTING_COMPARATOR
	f	Lcta$d;	r	CACHED_PARAMETERS
c	ctc	net/minecraft/world/item/ItemCrossbow
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(ILcuq;Lbtn;)F	a	getPowerForTime
		p	0		useTicks
		p	1		stack
		p	2		user
	m	(Layw;I)F	a	getShotPitch
		p	0		random
		p	1		index
	m	(Lbtn;Lcnp;IFFFLbtn;)V	a	shootProjectile
		p	1		shooter
		p	2		projectile
		p	3		index
		p	4		speed
		p	5		divergence
		p	6		yaw
		p	7		target
	m	(Lbtn;Lcuq;)Z	a	tryLoadProjectiles
		p	0		shooter
		p	1		crossbow
	m	(Lbtn;Lexc;F)Lorg/joml/Vector3f;	a	getProjectileShotVector
		p	0		shooter
		p	1		direction
		p	2		yaw
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcxg;)F	a	getShootingPower
		p	0		stack
	m	(Ldcw;Lbtn;Lbqq;Lcuq;FFLbtn;)V	a	performShooting
		p	1		world
		p	2		shooter
		p	3		hand
		p	4		stack
		p	5		speed
		p	6		divergence
		p	7		target
	m	(Ldcw;Lbtn;Lcuq;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Ldcw;Lbtn;Lcuq;Lcuq;Z)Lcnp;	a	createProjectile
		p	1		world
		p	2		shooter
		p	3		weaponStack
		p	4		projectileStack
		p	5		critical
	m	(Ldcw;Lbtn;Ljm;)V	a	lambda$onUseTick$2
		p	2		sound
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(ZLayw;)F	a	getRandomShotPitch
		p	0		flag
		p	1		random
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;Lbtn;)I	b	getChargeDuration
		p	0		stack
		p	1		user
	m	(Ldcw;Lbtn;Ljm;)V	b	lambda$onUseTick$1
		p	2		sound
	m	()I	c	getDefaultProjectileRange
	m	(Ldcw;Lbtn;Ljm;)V	c	lambda$releaseUsing$0
		p	2		sound
	m	()Ljava/util/function/Predicate;	d	getSupportedHeldProjectiles
	m	(Lcuq;)Z	i	isCharged
		p	0		stack
	m	(Lcuq;)I	j	getDurabilityUse
		p	1		projectile
	m	(Lcuq;)Lctc$a;	k	getChargingSounds
		p	1		stack
	m	(Lcuq;)Z	l	useOnRelease
		p	1		stack
	f	I	a	DEFAULT_RANGE
	f	F	b	MOB_ARROW_POWER
	f	F	k	MAX_CHARGE_DURATION
	f	Z	l	startSoundPlayed
	f	Z	m	midLoadSoundPlayed
	f	F	n	START_SOUND_PERCENT
	f	F	o	MID_SOUND_PERCENT
	f	F	p	ARROW_POWER
	f	F	q	FIREWORK_POWER
	f	Lctc$a;	r	DEFAULT_SOUNDS
c	ctc$a	net/minecraft/world/item/ItemCrossbow$a
	m	()Ljava/util/Optional;	a	start
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	mid
	m	()Ljava/util/Optional;	c	end
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	start
	f	Ljava/util/Optional;	c	mid
	f	Ljava/util/Optional;	d	end
c	ctd	net/minecraft/world/item/ItemDebugStick
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmx;Ldtc;Ldcx;Ljd;ZLcuq;)Z	a	handleInteraction
		p	1		player
		p	2		state
		p	3		world
		p	4		pos
		p	5		update
		p	6		stack
	m	(Lcmx;Lwz;)V	a	message
		p	0		player
		p	1		message
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Ldtc;Lduf;)Ljava/lang/String;	a	getNameHelper
		p	0		state
		p	1		property
	m	(Ldtc;Lduf;Z)Ldtc;	a	cycleState
		p	0		state
		p	1		property
		p	2		inverse
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
		p	0		elements
		p	1		current
		p	2		inverse
c	cte	net/minecraft/world/item/ItemTool
	m	(Lcwi;Lawu;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		effectiveBlocks
		p	3		settings
	m	(Lcuq;Lbtn;Lbtn;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcwi;FF)Lcxn;	a	createAttributes
		p	0		material
		p	1		baseAttackDamage
		p	2		attackSpeed
	m	(Lcuq;Lbtn;Lbtn;)V	b	postHurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
c	ctf	net/minecraft/world/item/DiscFragmentItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	()Lxn;	c	getDisplayName
c	ctg	net/minecraft/world/item/DispensibleContainerItem
	m	(Lcmx;Ldcw;Lcuq;Ljd;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcmx;Ldcw;Ljd;Lewy;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
c	cth	net/minecraft/world/item/ItemBisected
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcyd;Ldtc;)Z	a	placeBlock
		p	1		context
		p	2		state
c	cti	net/minecraft/world/item/EnumColor
	m	(Ljava/lang/String;IILjava/lang/String;ILepi;II)V	<init>	<init>
		p	3		id
		p	4		name
		p	5		entityColor
		p	6		mapColor
		p	7		fireworkColor
		p	8		signColor
	m	()I	a	getId
	m	(I)Lcti;	a	byId
		p	0		id
	m	(Lcti;)Lcti;	a	lambda$static$1
		p	0		color
	m	(Ljava/lang/String;Lcti;)Lcti;	a	byName
		p	0		name
		p	1		defaultColor
	m	()Ljava/lang/String;	b	getName
	m	(I)Lcti;	b	byFireworkColor
		p	0		color
	m	(Lcti;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		color
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	d	getTextureDiffuseColor
	m	()Lepi;	e	getMapColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	()[Lcti;	h	$values
	f	[Lcti;	A	$VALUES
	f	Lcti;	a	WHITE
	f	Lcti;	b	ORANGE
	f	Lcti;	c	MAGENTA
	f	Lcti;	d	LIGHT_BLUE
	f	Lcti;	e	YELLOW
	f	Lcti;	f	LIME
	f	Lcti;	g	PINK
	f	Lcti;	h	GRAY
	f	Lcti;	i	LIGHT_GRAY
	f	Lcti;	j	CYAN
	f	Lcti;	k	PURPLE
	f	Lcti;	l	BLUE
	f	Lcti;	m	BROWN
	f	Lcti;	n	GREEN
	f	Lcti;	o	RED
	f	Lcti;	p	BLACK
	f	Lazk$a;	q	CODEC
	f	Lyx;	r	STREAM_CODEC
	f	Ljava/util/function/IntFunction;	s	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	t	BY_FIREWORK_COLOR
	f	I	u	id
	f	Ljava/lang/String;	v	name
	f	Lepi;	w	mapColor
	f	I	x	textureDiffuseColor
	f	I	y	fireworkColor
	f	I	z	textColor
c	ctj	net/minecraft/world/item/ItemDye
	m	(Lcti;Lcul$a;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	(Lcti;)Lctj;	a	byColor
		p	0		color
	m	(Lcuq;Lcmx;Lbtn;Lbqq;)Lbqr;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Ldcw;Ldrs;ZLcmx;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldrt;)Ldrt;	a	lambda$tryApplyToSign$0
		p	1		text
	m	()Lcti;	c	getDyeColor
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Lcti;	b	dyeColor
c	ctk	net/minecraft/world/item/ItemEgg
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
c	ctl	net/minecraft/world/item/EitherHolder
	m	(Lakq;)V	<init>	<init>
		p	1		key
	m	(Ljm;)V	<init>	<init>
		p	1		entry
	m	()Lcom/mojang/datafixers/util/Either;	a	asEither
	m	(Lakq;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$1
	m	(Lakq;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		registryRef
		p	1		entryCodec
	m	(Lakq;Lyx;)Lyx;	a	streamCodec
		p	0		registryRef
		p	1		entryPacketCodec
	m	(Lcom/mojang/datafixers/util/Either;)Lctl;	a	fromEither
		p	0		entryOrKey
	m	(Ljo$a;)Ljava/util/Optional;	a	unwrap
		p	1		registryLookup
	m	(Ljz;)Ljava/util/Optional;	a	unwrap
		p	1		registry
	m	()Ljava/util/Optional;	b	holder
	m	(Ljo$a;)Ljava/util/Optional;	b	lambda$unwrap$4
	m	(Ljz;)Ljava/util/Optional;	b	lambda$unwrap$3
	m	()Lakq;	c	key
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$asEither$2
	m	()Ljava/lang/String;	e	lambda$codec$0
	f	Ljava/util/Optional;	a	holder
	f	Lakq;	b	key
c	ctm	net/minecraft/world/item/ItemElytra
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Z	i	isFlyEnabled
		p	0		stack
	m	()Lbsy;	m	getEquipmentSlot
	m	()Ljm;	n	getEquipSound
c	ctn	net/minecraft/world/item/ItemMapEmpty
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cto	net/minecraft/world/item/ItemEnchantedBook
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;)Z	a	isEnchantable
		p	1		stack
	m	(Ldaf;)Lcuq;	a	createForEnchantment
		p	0		info
c	ctp	net/minecraft/world/item/ItemEndCrystal
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
c	ctq	net/minecraft/world/item/ItemEnderEye
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	ctr	net/minecraft/world/item/ItemEnderPearl
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cts	net/minecraft/world/item/Equipable
	m	(Lcul;Ldcw;Lcmx;Lbqq;)Lbqs;	a	swapWithEquipmentSlot
		p	1		item
		p	2		world
		p	3		user
		p	4		hand
	m	(Lcuq;)Lcts;	c_	get
		p	0		stack
	m	()Lbsy;	m	getEquipmentSlot
	m	()Ljm;	n	getEquipSound
c	ctt	net/minecraft/world/item/ItemExpBottle
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	()Lcvm$a;	c	createDispenseConfig
c	ctu	net/minecraft/world/item/ItemFireball
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcnp;DDDFF)V	a	shoot
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		uncertainty
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Ljd;)V	a	playSound
		p	1		world
		p	2		pos
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	(Lku;Lji;)Ljw;	a	lambda$createDispenseConfig$0
		p	0		pointer
		p	1		facing
	m	()Lcvm$a;	c	createDispenseConfig
c	ctv	net/minecraft/world/item/ItemFireworks
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	(Lku;Lji;)Lexc;	a	getEntityPokingOutOfBlockPos
		p	0		pointer
		p	1		facing
	m	()Lcvm$a;	c	createDispenseConfig
	f	[B	a	CRAFTABLE_DURATIONS
	f	D	b	ROCKET_PLACEMENT_OFFSET
c	ctw	net/minecraft/world/item/ItemFireworksCharge
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
c	ctx	net/minecraft/world/item/ItemFishingRod
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()I	g	getEnchantmentValue
c	cty	net/minecraft/world/item/ItemFlintAndSteel
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
c	ctz	net/minecraft/world/item/ItemCarrotStick
	m	(Lcul$a;Lbsx;I)V	<init>	<init>
		p	1		settings
		p	2		target
		p	3		damagePerUse
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lbsx;	a	canInteractWith
	f	I	b	consumeItemDamage
c	cua	net/minecraft/world/item/ItemRestricted
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcyd;)Ldtc;	c	getPlacementState
		p	1		context
c	cub	net/minecraft/world/item/GlowInkSacItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Ldrs;ZLcmx;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldrt;)Ldrt;	a	lambda$tryApplyToSign$0
		p	0		text
c	cuc	net/minecraft/world/item/ItemHanging
	m	(Lbsx;Lcul$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcmx;Lji;Lcuq;Ljd;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ljava/util/List;)V	a	lambda$appendHoverText$2
	m	(Ljava/util/List;Lakq;)V	a	lambda$appendHoverText$0
		p	1		key
	m	(Ljava/util/List;Ljm;)V	a	lambda$appendHoverText$1
		p	1		variant
	f	Lwz;	a	TOOLTIP_RANDOM_VARIANT
	f	Lbsx;	b	type
c	cud	net/minecraft/world/item/HangingSignItem
	m	(Ldfy;Ldfy;Lcul$a;)V	<init>	<init>
		p	1		hangingSign
		p	2		wallHangingSign
		p	3		settings
	m	(Ldcz;Ldtc;Ljd;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
c	cue	net/minecraft/world/item/ItemHoe
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldtc;)Ljava/util/function/Consumer;	a	changeIntoState
		p	0		result
	m	(Ldtc;Lcyf;)V	a	lambda$changeIntoState$1
		p	1		context
	m	(Ldtc;Ldcv;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
		p	0		result
		p	1		droppedItem
	m	(Ldtc;Ldcv;Lcyf;)V	a	lambda$changeIntoStateAndDropItem$2
		p	2		context
	m	(Lcyf;)Z	b	onlyIfAirAbove
		p	0		context
	m	(Lcyf;)Z	c	lambda$static$0
	f	Ljava/util/Map;	a	TILLABLES
c	cuf	net/minecraft/world/item/ItemHoneyBottle
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Lavo;	ap_	getDrinkingSound
	m	()Lavo;	aq_	getEatingSound
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cug	net/minecraft/world/item/HoneycombItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Lcyf;Ljd;Ldcw;Ldtc;)Lbqr;	a	lambda$useOn$2
		p	3		state
	m	(Ldcw;Ldrs;ZLcmx;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldrt;Lcmx;)Z	a	canApplyToSign
		p	1		signText
		p	2		player
	m	(Ldtc;)Ljava/util/Optional;	a	getWaxed
		p	0		state
	m	(Ldtc;Ldfy;)Ldtc;	a	lambda$getWaxed$3
		p	1		block
	m	()Lcom/google/common/collect/BiMap;	h	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	k	lambda$static$0
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
c	cuh	net/minecraft/world/item/InkSacItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Ldrs;ZLcmx;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldrt;)Ldrt;	a	lambda$tryApplyToSign$0
		p	0		text
c	cui	net/minecraft/world/item/Instrument
	m	()Ljm;	a	soundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	useDuration
	m	()F	c	range
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Ljm;	e	soundEvent
	f	I	f	useDuration
	f	F	g	range
c	cuj	net/minecraft/world/item/InstrumentItem
	m	(Lcul$a;Lawu;)V	<init>	<init>
		p	1		settings
		p	2		instrumentTag
	m	(Lcul;Ljm;)Lcuq;	a	create
		p	0		item
		p	1		instrument
	m	(Lcuq;Lawu;Layw;)V	a	setRandom
		p	0		stack
		p	1		instrumentTag
		p	2		random
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ljm;)V	a	lambda$setRandom$0
		p	1		instrument
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Lcmx;Lcui;)V	a	play
		p	0		world
		p	1		player
		p	2		instrument
	m	(Ljm;)Ljava/lang/Integer;	a	lambda$getUseDuration$1
		p	0		instrument
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;)Ljava/util/Optional;	i	getInstrument
		p	1		stack
	f	Lawu;	a	instruments
c	cuk	net/minecraft/world/item/Instruments
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Ljz;)Lcui;	a	bootstrap
		p	0		registry
	f	I	a	GOAT_HORN_RANGE_BLOCKS
	f	I	b	GOAT_HORN_DURATION
	f	Lakq;	c	PONDER_GOAT_HORN
	f	Lakq;	d	SING_GOAT_HORN
	f	Lakq;	e	SEEK_GOAT_HORN
	f	Lakq;	f	FEEL_GOAT_HORN
	f	Lakq;	g	ADMIRE_GOAT_HORN
	f	Lakq;	h	CALL_GOAT_HORN
	f	Lakq;	i	YEARN_GOAT_HORN
	f	Lakq;	j	DREAM_GOAT_HORN
c	cul	net/minecraft/world/item/Item
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lbsr;FLbrk;)F	a	getAttackDamageBonus
		p	1		target
		p	2		baseAttackDamage
		p	3		damageSource
	m	(Lcjh;)V	a	onDestroyed
		p	1		entity
	m	(Lcul;)I	a	getId
		p	0		item
	m	(Lcuq;)Z	a	isEnchantable
		p	1		stack
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lbtn;Lbtn;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcuq;Lcmx;Lbtn;Lbqq;)Lbqr;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
	m	(Lcuq;Lcrq;Lcqd;Lcmx;)Z	a	overrideStackedOnOther
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Lcuq;Lcuq;Lcrq;Lcqd;Lcmx;Lbug;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		otherStack
		p	3		slot
		p	4		clickType
		p	5		player
		p	6		cursorStackReference
	m	(Lcuq;Ldcw;)V	a	onCraftedPostProcess
		p	1		stack
		p	2		world
	m	(Lcuq;Ldcw;Lbsr;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcuq;Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Lcuq;Ldcw;Ldtc;Ljd;Lbtn;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcuq;Ldtc;)F	a	getDestroySpeed
		p	1		stack
		p	2		state
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lbtn;Lcuq;I)V	a	onUseTick
		p	1		world
		p	2		user
		p	3		stack
		p	4		remainingUseTicks
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Lcmx;Ldcf$b;)Lewy;	a	getPlayerPOVHitResult
		p	0		world
		p	1		player
		p	2		fluidHandling
	m	(Ldfy;)Lcul;	a	byBlock
		p	0		block
	m	(Ldtc;Ldcw;Ljd;Lcmx;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	()Z	ao_	isComplex
	m	()Lavo;	ap_	getDrinkingSound
	m	()Lavo;	aq_	getEatingSound
	m	()Z	ar_	canFitInsideContainerItems
	m	(I)Lcul;	b	byId
		p	0		id
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;Lbtn;Lbtn;)V	b	postHurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcuq;Ldcw;Lcmx;)V	b	onCraftedBy
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcuq;Ldtc;)Z	b	isCorrectToolForDrops
		p	1		stack
		p	2		state
	m	(Lcuq;)Z	d	isBarVisible
		p	1		stack
	m	(Lcuq;)Z	d_	isFoil
		p	1		stack
	m	()Lavo;	e	getBreakingSound
	m	(Lcuq;)I	e	getBarWidth
		p	1		stack
	m	(Lcuq;)I	f	getBarColor
		p	1		stack
	m	()I	g	getEnchantmentValue
	m	(Lcuq;)Ljava/util/Optional;	g	getTooltipImage
		p	1		stack
	m	(Lcuq;)Ljava/lang/String;	h	getDescriptionId
		p	1		stack
	m	()Lcpl;	i	requiredFeatures
	m	()Lcxn;	j	getDefaultAttributeModifiers
	m	(Lcuq;)Z	l	useOnRelease
		p	1		stack
	m	(Lcuq;)V	m	verifyComponentsAfterLoad
		p	1		stack
	m	(Lcuq;)Lwz;	n	getName
		p	1		stack
	m	()Ljm$c;	o	builtInRegistryHolder
	m	()Lkm;	p	components
	m	()I	q	getDefaultMaxStackSize
	m	()Lcul;	r	asItem
	m	()Lwz;	s	getDescription
	m	()Ljava/lang/String;	t	getOrCreateDescriptionId
	m	()Lcul;	u	getCraftingRemainingItem
	m	()Z	v	hasCraftingRemainingItem
	m	()Lcuq;	w	getDefaultInstance
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljm$c;	b	builtInRegistryHolder
	f	Lkm;	c	components
	f	Ljava/util/Map;	d	BY_BLOCK
	f	Lakr;	e	BASE_ATTACK_DAMAGE_ID
	f	Lakr;	f	BASE_ATTACK_SPEED_ID
	f	I	g	DEFAULT_MAX_STACK_SIZE
	f	I	h	ABSOLUTE_MAX_STACK_SIZE
	f	I	i	MAX_BAR_WIDTH
	f	Lcul;	j	craftingRemainingItem
	f	Ljava/lang/String;	k	descriptionId
	f	Lcpl;	l	requiredFeatures
c	cul$a	net/minecraft/world/item/Item$Info
	m	()Lcul$a;	a	fireResistant
	m	(I)Lcul$a;	a	stacksTo
		p	1		maxCount
	m	(Lakq;)Lcul$a;	a	jukeboxPlayable
		p	1		songKey
	m	(Lcpr;)Lcul$a;	a	food
		p	1		foodComponent
	m	(Lcul;)Lcul$a;	a	craftRemainder
		p	1		recipeRemainder
	m	(Lcvo;)Lcul$a;	a	rarity
		p	1		rarity
	m	(Lcxn;)Lcul$a;	a	attributes
		p	1		attributeModifiersComponent
	m	(Lkp;Ljava/lang/Object;)Lcul$a;	a	component
		p	1		type
		p	2		value
	m	([Lcpj;)Lcul$a;	a	requiredFeatures
		p	1		features
	m	()Lkm;	b	buildAndValidateComponents
	m	(I)Lcul$a;	b	durability
		p	1		maxDamage
	m	()Lkm;	c	buildComponents
	f	Lcom/google/common/collect/Interner;	a	COMPONENT_INTERNER
	f	Lkm$a;	b	components
	f	Lcul;	c	craftingRemainingItem
	f	Lcpl;	d	requiredFeatures
c	cul$b	net/minecraft/world/item/Item$b
	m	()Ljo$a;	a	registries
	m	(Ldcw;)Lcul$b;	a	of
		p	0		world
	m	(Leqr;)Leqt;	a	mapData
		p	1		mapIdComponent
	m	(Ljo$a;)Lcul$b;	a	of
		p	0		registryLookup
	m	()F	b	tickRate
	f	Lcul$b;	a	EMPTY
c	cul$b$1	net/minecraft/world/item/Item$b$1
	m	()Ljo$a;	a	registries
	m	(Leqr;)Leqt;	a	mapData
		p	1		mapIdComponent
	m	()F	b	tickRate
c	cul$b$2	net/minecraft/world/item/Item$b$2
	m	()Ljo$a;	a	registries
	m	(Leqr;)Leqt;	a	mapData
		p	1		mapIdComponent
	m	()F	b	tickRate
	f	Ldcw;	b	val$level
c	cul$b$3	net/minecraft/world/item/Item$b$3
	m	()Ljo$a;	a	registries
	m	(Leqr;)Leqt;	a	mapData
		p	1		mapIdComponent
	m	()F	b	tickRate
	f	Ljo$a;	b	val$registries
c	cum	net/minecraft/world/item/ItemCooldown
	m	()V	a	tick
	m	(Lcul;)Z	a	isOnCooldown
		p	1		item
	m	(Lcul;F)F	a	getCooldownPercent
		p	1		item
		p	2		tickDelta
	m	(Lcul;I)V	a	addCooldown
		p	1		item
		p	2		duration
	m	(Lcul;)V	b	removeCooldown
		p	1		item
	m	(Lcul;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcul;)V	c	onCooldownEnded
		p	1		item
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
c	cum$a	net/minecraft/world/item/ItemCooldown$Info
	m	(II)V	<init>	<init>
		p	1		startTick
		p	2		endTick
	f	I	a	startTime
	f	I	b	endTime
c	cun	net/minecraft/world/item/ItemDisplayContext
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		index
		p	4		name
	m	()B	a	getId
	m	()Z	b	firstPerson
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcun;	d	$values
	f	Lcun;	a	NONE
	f	Lcun;	b	THIRD_PERSON_LEFT_HAND
	f	Lcun;	c	THIRD_PERSON_RIGHT_HAND
	f	Lcun;	d	FIRST_PERSON_LEFT_HAND
	f	Lcun;	e	FIRST_PERSON_RIGHT_HAND
	f	Lcun;	f	HEAD
	f	Lcun;	g	GUI
	f	Lcun;	h	GROUND
	f	Lcun;	i	FIXED
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	B	l	id
	f	Ljava/lang/String;	m	name
	f	[Lcun;	n	$VALUES
c	cuo	net/minecraft/world/item/ItemItemFrame
	m	(Lbsx;Lcul$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcmx;Lji;Lcuq;Ljd;)Z	a	mayPlace
		p	1		player
		p	2		side
		p	3		stack
		p	4		pos
c	cup	net/minecraft/world/item/ItemNamedBlock
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	()Ljava/lang/String;	a	getDescriptionId
c	cuq	net/minecraft/world/item/ItemStack
	m	(Ldcv;)V	<init>	<init>
		p	1		item
	m	(Ldcv;I)V	<init>	<init>
		p	1		item
		p	2		count
	m	(Ldcv;ILkr;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		components
	m	(Ljava/lang/Void;)V	<init>	<init>
		p	1		v
	m	(Ljm;)V	<init>	<init>
		p	1		entry
	m	(Ljm;I)V	<init>	<init>
		p	1		itemEntry
		p	2		count
	m	(Ljm;ILkn;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		changes
	m	()Z	A	isEnchanted
	m	()Ldai;	B	getEnchantments
	m	()Z	C	isFramed
	m	()Lcja;	D	getFrame
	m	()Lbsr;	E	getEntityRepresentation
	m	()Lwz;	F	getDisplayName
	m	()I	G	getPopTime
	m	()I	H	getCount
	m	()Lavo;	I	getDrinkingSound
	m	()Lavo;	J	getEatingSound
	m	()Lavo;	K	getBreakingSound
	m	()Ljava/lang/String;	L	lambda$validateComponents$13
	m	()Lcom/mojang/serialization/Codec;	M	lambda$static$8
	m	()Lcom/mojang/serialization/Codec;	N	lambda$static$4
	m	()Ljava/lang/String;	O	lambda$static$0
	m	()Lkm;	a	getComponents
	m	(I)Lcuq;	a	split
		p	1		amount
	m	(II)Ljava/lang/String;	a	lambda$validateComponents$14
	m	(ILaqu;Laqv;Ljava/util/function/Consumer;)V	a	hurtAndBreak
		p	1		amount
		p	2		world
		p	3		player
		p	4		breakCallback
	m	(ILbtn;)V	a	consume
		p	1		amount
		p	2		entity
	m	(ILbtn;Lbsy;)V	a	hurtAndBreak
		p	1		amount
		p	2		entity
		p	3		slot
	m	(ILdcv;Lbtn;Lbsy;)Lcuq;	a	hurtAndConvertOnBreak
		p	1		amount
		p	2		itemAfterBreaking
		p	3		entity
		p	4		slot
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Lbrk;)Z	a	canBeHurtBy
		p	1		source
	m	(Lbsr;)V	a	setEntityRepresentation
		p	1		holder
	m	(Lbsy;Ljava/util/function/BiConsumer;)V	a	forEachModifier
		p	1		slot
		p	2		attributeModifierConsumer
	m	(Lbsz;Ljava/util/function/BiConsumer;)V	a	forEachModifier
		p	1		slot
		p	2		attributeModifierConsumer
	m	(Lbtn;)I	a	getUseDuration
		p	1		user
	m	(Lbtn;Lbsy;Lcul;)V	a	lambda$hurtAndBreak$16
		p	2		item
	m	(Lbtn;Lcmx;)Z	a	hurtEnemy
		p	1		target
		p	2		player
	m	(Lcjh;)V	a	onDestroyed
		p	1		entity
	m	(Lcmx;Lbtn;Lbqq;)Lbqr;	a	interactLivingEntity
		p	1		user
		p	2		entity
		p	3		hand
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Lcpl;)Z	a	isItemEnabled
		p	1		enabledFeatures
	m	(Lcrq;Lcqd;Lcmx;)Z	a	overrideStackedOnOther
		p	1		slot
		p	2		clickType
		p	3		player
	m	(Lcul$b;Lcmx;Lcwm;)Ljava/util/List;	a	getTooltipLines
		p	1		context
		p	2		player
		p	3		type
	m	(Lcul;)Z	a	is
		p	1		item
	m	(Lcuq;)I	a	hashItemAndComponents
		p	0		stack
	m	(Lcuq;Lazs;)Lcuq;	a	lambda$validateStrict$9
		p	1		v
	m	(Lcuq;Lcrq;Lcqd;Lcmx;Lbug;)Z	a	overrideOtherStackedOnMe
		p	1		stack
		p	2		slot
		p	3		clickType
		p	4		player
		p	5		cursorStackReference
	m	(Lcuq;Lcuq;)Z	a	matches
		p	0		left
		p	1		right
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcv;)Lcuq;	a	transmuteCopy
		p	1		item
	m	(Ldcv;I)Lcuq;	a	transmuteCopy
		p	1		item
		p	2		count
	m	(Ldcw;)V	a	onCraftedBySystem
		p	1		world
	m	(Ldcw;Lbsr;IZ)V	a	inventoryTick
		p	1		world
		p	2		entity
		p	3		slot
		p	4		selected
	m	(Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		world
		p	2		user
	m	(Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Ldcw;Lcmx;I)V	a	onCraftedBy
		p	1		world
		p	2		player
		p	3		amount
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ldtc;Ljd;Lcmx;)V	a	mineBlock
		p	1		world
		p	2		state
		p	3		pos
		p	4		miner
	m	(Ldtc;)F	a	getDestroySpeed
		p	1		state
	m	(Ldtg;)Z	a	canPlaceOnBlockInAdventureMode
		p	1		pos
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	lenientOptionalFieldOf
		p	0		fieldName
	m	(Ljava/util/List;)I	a	hashStackList
		p	0		stacks
	m	(Ljava/util/List;Ljava/util/List;)Z	a	listMatches
		p	0		left
		p	1		right
	m	(Ljava/util/Optional;)Lcuq;	a	lambda$lenientOptionalFieldOf$17
		p	0		optional
	m	(Ljava/util/function/Consumer;Lcmx;)V	a	addAttributeTooltips
		p	1		textConsumer
		p	2		player
	m	(Ljava/util/function/Consumer;Lcmx;Ljm;Lbuu;)V	a	addModifierTooltip
		p	1		textConsumer
		p	2		player
		p	3		attribute
		p	4		modifier
	m	(Ljava/util/function/Predicate;)Z	a	is
		p	1		predicate
	m	(Ljm;)Z	a	is
		p	1		itemEntry
	m	(Ljm;I)V	a	enchant
		p	1		enchantment
		p	2		level
	m	(Ljm;ILdai$a;)V	a	lambda$enchant$20
		p	2		builder
	m	(Ljm;Lkn;)Lcuq;	a	lambda$static$6
		p	0		item
		p	1		components
	m	(Ljo$a;)Luy;	a	save
		p	1		registries
	m	(Ljo$a;Lub;)Lcuq;	a	parseOptional
		p	0		registries
		p	1		nbt
	m	(Ljo$a;Luy;)Ljava/util/Optional;	a	parse
		p	0		registries
		p	1		nbt
	m	(Ljq;)Z	a	is
		p	1		registryEntryList
	m	(Lkm;)Lcom/mojang/serialization/DataResult;	a	validateComponents
		p	0		components
	m	(Lkn;)V	a	applyComponentsAndValidate
		p	1		changes
	m	(Lkp;Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		componentType
		p	2		context
		p	3		textConsumer
		p	4		type
	m	(Lkp;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	update
		p	1		type
		p	2		defaultValue
		p	3		change
		p	4		applier
	m	(Lkp;Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;	a	update
		p	1		type
		p	2		defaultValue
		p	3		applier
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Consumer;Lbsz;Lcmx;Ljm;Lbuu;)V	a	lambda$addAttributeTooltips$19
		p	5		attribute
		p	6		modifier
	m	(Lxw;)Lxw;	a	lambda$getDisplayName$21
		p	1		style
	m	(Lyx;)Lyx;	a	validatedStreamCodec
		p	0		basePacketCodec
	m	()Ljava/util/Optional;	b	getTooltipImage
	m	(I)V	b	setDamageValue
		p	1		damage
	m	(ILbtn;)Lcuq;	b	consumeAndReturn
		p	1		amount
		p	2		entity
	m	(Lbtn;Lcmx;)V	b	postHurtEnemy
		p	1		target
		p	2		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Lcuq;)Lcom/mojang/serialization/DataResult;	b	validateStrict
		p	0		stack
	m	(Lcuq;Lcuq;)Z	b	isSameItem
		p	0		left
		p	1		right
	m	(Ldcv;I)Lcuq;	b	transmuteCopyIgnoreEmpty
		p	1		item
		p	2		count
	m	(Ldcw;Lbtn;I)V	b	onUseTick
		p	1		world
		p	2		user
		p	3		remainingUseTicks
	m	(Ldtc;)Z	b	isCorrectToolForDrops
		p	1		state
	m	(Ldtg;)Z	b	canBreakBlockInAdventureMode
		p	1		pos
	m	(Ljava/lang/String;)V	b	lambda$parse$15
		p	0		error
	m	(Ljava/util/Optional;)Lcuq;	b	lambda$static$11
		p	0		optional
	m	(Ljm;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
		p	0		entry
	m	(Ljo$a;)Luy;	b	saveOptional
		p	1		registries
	m	(Ljo$a;Luy;)Luy;	b	save
		p	1		registries
		p	2		prefix
	m	(Lkm;)V	b	applyComponents
		p	1		components
	m	(Lkn;)V	b	applyComponents
		p	1		changes
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	b	set
		p	1		type
		p	2		value
	m	()Lkm;	c	getPrototype
	m	(I)Lcuq;	c	copyWithCount
		p	1		count
	m	(Lcuq;)Ljava/util/Optional;	c	lambda$lenientOptionalFieldOf$18
		p	0		stack
	m	(Lcuq;Lcuq;)Z	c	isSameItemSameComponents
		p	0		stack
		p	1		otherStack
	m	(Lkp;)Ljava/lang/Object;	c	remove
		p	1		type
	m	()Lkn;	d	getComponentsPatch
	m	(I)V	d	setPopTime
		p	1		bobbingAnimationTime
	m	(Lcuq;)Ljava/util/Optional;	d	lambda$static$12
		p	0		stack
	m	()Z	e	isEmpty
	m	(I)V	e	setCount
		p	1		count
	m	(Lcuq;)Ljava/lang/String;	e	lambda$validateStrict$10
	m	()Lcuq;	f	copyAndClear
	m	(I)V	f	limitSize
		p	1		maxCount
	m	(Lcuq;)Lkn;	f	lambda$static$5
		p	0		stack
	m	()Lcul;	g	getItem
	m	(I)V	g	grow
		p	1		amount
	m	(Lcuq;)Lkn;	g	lambda$static$2
		p	0		stack
	m	()Ljm;	h	getItemHolder
	m	(I)V	h	shrink
		p	1		amount
	m	()Ljava/util/stream/Stream;	i	getTags
	m	()I	j	getMaxStackSize
	m	()Z	k	isStackable
	m	()Z	l	isDamageableItem
	m	()Z	m	isDamaged
	m	()I	n	getDamageValue
	m	()I	o	getMaxDamage
	m	()Z	p	isBarVisible
	m	()I	q	getBarWidth
	m	()I	r	getBarColor
	m	()Lcuq;	s	copy
	m	()Ljava/lang/String;	t	getDescriptionId
	m	()Lcwo;	u	getUseAnimation
	m	()Z	v	useOnRelease
	m	()Lwz;	w	getHoverName
	m	()Z	x	hasFoil
	m	()Lcvo;	y	getRarity
	m	()Z	z	isEnchantable
	f	Lcom/mojang/serialization/Codec;	a	ITEM_NON_AIR_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	SINGLE_ITEM_CODEC
	f	Lcom/mojang/serialization/Codec;	d	STRICT_CODEC
	f	Lcom/mojang/serialization/Codec;	e	STRICT_SINGLE_ITEM_CODEC
	f	Lcom/mojang/serialization/Codec;	f	OPTIONAL_CODEC
	f	Lcom/mojang/serialization/Codec;	g	SIMPLE_ITEM_CODEC
	f	Lyx;	h	OPTIONAL_STREAM_CODEC
	f	Lyx;	i	STREAM_CODEC
	f	Lyx;	j	OPTIONAL_LIST_STREAM_CODEC
	f	Lyx;	k	LIST_STREAM_CODEC
	f	Lcuq;	l	EMPTY
	f	Lorg/slf4j/Logger;	m	LOGGER
	f	Lwz;	n	DISABLED_ITEM_TOOLTIP
	f	I	o	count
	f	I	p	popTime
	f	Lcul;	q	item
	f	Lkr;	r	components
	f	Lbsr;	s	entityRepresentation
c	cuq$1	net/minecraft/world/item/ItemStack$1
	m	(Lwk;)Lcuq;	a	decode
	m	(Lwk;Lcuq;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	ITEM_STREAM_CODEC
c	cuq$2	net/minecraft/world/item/ItemStack$2
	m	(Lwk;)Lcuq;	a	decode
	m	(Lwk;Lcuq;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
c	cuq$3	net/minecraft/world/item/ItemStack$3
	m	(Lwk;)Lcuq;	a	decode
	m	(Lwk;Lcuq;)V	a	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
		p	1		buf
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
		p	1		buf
		p	2		value
	f	Lyx;	a	val$codec
c	cuq$4	net/minecraft/world/item/ItemStack$4
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
c	cur	net/minecraft/world/item/ItemStackLinkedSet
	m	()Ljava/util/Set;	a	createTypeAndComponentsSet
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	TYPE_AND_TAG
c	cur$1	net/minecraft/world/item/ItemStackLinkedSet$1
	m	(Lcuq;)I	a	hashCode
	m	(Lcuq;Lcuq;)Z	a	equals
c	cus	net/minecraft/world/item/ItemLiquidUtil
	m	(Lcjh;Ljava/lang/Iterable;)V	a	onContainerDestroyed
		p	0		itemEntity
		p	1		contents
	m	(Lcuq;Lcmx;Lcuq;)Lcuq;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
	m	(Lcuq;Lcmx;Lcuq;Z)Lcuq;	a	createFilledResult
		p	0		inputStack
		p	1		player
		p	2		outputStack
		p	3		creativeOverride
	m	(Ldcw;Lcjh;Lcuq;)V	a	lambda$onContainerDestroyed$0
		p	2		stack
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	startUsingInstantly
		p	0		world
		p	1		player
		p	2		hand
c	cut	net/minecraft/world/item/Items
	m	(Lakq;Lcul;)Lcul;	a	registerItem
		p	0		key
		p	1		item
	m	(Lakr;Lcul;)Lcul;	a	registerItem
		p	0		id
		p	1		item
	m	(Lcso;)Lcul;	a	registerBlock
		p	0		item
	m	(Lcul$a;)Lcul$a;	a	lambda$static$14
		p	0		settings
	m	(Ldfy;)Lcul;	a	registerBlock
		p	0		block
	m	(Ldfy;Lcul;)Lcul;	a	registerBlock
		p	0		block
		p	1		item
	m	(Ldfy;Ljava/util/function/UnaryOperator;)Lcul;	a	registerBlock
		p	0		block
		p	1		settingsOperator
	m	(Ldfy;[Ldfy;)Lcul;	a	registerBlock
		p	0		block
		p	1		blocks
	m	(Ljava/lang/String;Lcul;)Lcul;	a	registerItem
		p	0		id
		p	1		item
	m	(Lcul$a;)Lcul$a;	b	lambda$static$13
		p	0		settings
	m	(Lcul$a;)Lcul$a;	c	lambda$static$12
		p	0		settings
	m	(Lcul$a;)Lcul$a;	d	lambda$static$11
		p	0		settings
	m	(Lcul$a;)Lcul$a;	e	lambda$static$10
		p	0		settings
	m	(Lcul$a;)Lcul$a;	f	lambda$static$9
		p	0		settings
	m	(Lcul$a;)Lcul$a;	g	lambda$static$8
		p	0		settings
	m	(Lcul$a;)Lcul$a;	h	lambda$static$7
		p	0		settings
	m	(Lcul$a;)Lcul$a;	i	lambda$static$6
		p	0		settings
	m	(Lcul$a;)Lcul$a;	j	lambda$static$5
		p	0		settings
	m	(Lcul$a;)Lcul$a;	k	lambda$static$4
		p	0		settings
	m	(Lcul$a;)Lcul$a;	l	lambda$static$3
		p	0		settings
	m	(Lcul$a;)Lcul$a;	m	lambda$static$2
		p	0		settings
	m	(Lcul$a;)Lcul$a;	n	lambda$static$1
		p	0		settings
	m	(Lcul$a;)Lcul$a;	o	lambda$static$0
		p	0		settings
	f	Lcul;	A	DRIPSTONE_BLOCK
	f	Lcul;	B	GRASS_BLOCK
	f	Lcul;	C	DIRT
	f	Lcul;	D	COARSE_DIRT
	f	Lcul;	E	PODZOL
	f	Lcul;	F	ROOTED_DIRT
	f	Lcul;	G	MUD
	f	Lcul;	H	CRIMSON_NYLIUM
	f	Lcul;	I	WARPED_NYLIUM
	f	Lcul;	J	COBBLESTONE
	f	Lcul;	K	OAK_PLANKS
	f	Lcul;	L	SPRUCE_PLANKS
	f	Lcul;	M	BIRCH_PLANKS
	f	Lcul;	N	JUNGLE_PLANKS
	f	Lcul;	O	ACACIA_PLANKS
	f	Lcul;	P	CHERRY_PLANKS
	f	Lcul;	Q	DARK_OAK_PLANKS
	f	Lcul;	R	MANGROVE_PLANKS
	f	Lcul;	S	BAMBOO_PLANKS
	f	Lcul;	T	CRIMSON_PLANKS
	f	Lcul;	U	WARPED_PLANKS
	f	Lcul;	V	BAMBOO_MOSAIC
	f	Lcul;	W	OAK_SAPLING
	f	Lcul;	X	SPRUCE_SAPLING
	f	Lcul;	Y	BIRCH_SAPLING
	f	Lcul;	Z	JUNGLE_SAPLING
	f	Lcul;	aA	NETHER_GOLD_ORE
	f	Lcul;	aB	NETHER_QUARTZ_ORE
	f	Lcul;	aC	ANCIENT_DEBRIS
	f	Lcul;	aD	COAL_BLOCK
	f	Lcul;	aE	RAW_IRON_BLOCK
	f	Lcul;	aF	RAW_COPPER_BLOCK
	f	Lcul;	aG	RAW_GOLD_BLOCK
	f	Lcul;	aH	HEAVY_CORE
	f	Lcul;	aI	AMETHYST_BLOCK
	f	Lcul;	aJ	BUDDING_AMETHYST
	f	Lcul;	aK	IRON_BLOCK
	f	Lcul;	aL	COPPER_BLOCK
	f	Lcul;	a	AIR
	f	Lcul;	aM	GOLD_BLOCK
	f	Lcul;	aN	DIAMOND_BLOCK
	f	Lcul;	aO	NETHERITE_BLOCK
	f	Lcul;	aP	EXPOSED_COPPER
	f	Lcul;	aQ	WEATHERED_COPPER
	f	Lcul;	aR	OXIDIZED_COPPER
	f	Lcul;	aS	CHISELED_COPPER
	f	Lcul;	aT	EXPOSED_CHISELED_COPPER
	f	Lcul;	aU	WEATHERED_CHISELED_COPPER
	f	Lcul;	aV	OXIDIZED_CHISELED_COPPER
	f	Lcul;	aW	CUT_COPPER
	f	Lcul;	aX	EXPOSED_CUT_COPPER
	f	Lcul;	aY	WEATHERED_CUT_COPPER
	f	Lcul;	aZ	OXIDIZED_CUT_COPPER
	f	Lcul;	aa	ACACIA_SAPLING
	f	Lcul;	ab	CHERRY_SAPLING
	f	Lcul;	ac	DARK_OAK_SAPLING
	f	Lcul;	ad	MANGROVE_PROPAGULE
	f	Lcul;	ae	BEDROCK
	f	Lcul;	af	SAND
	f	Lcul;	ag	SUSPICIOUS_SAND
	f	Lcul;	ah	SUSPICIOUS_GRAVEL
	f	Lcul;	ai	RED_SAND
	f	Lcul;	aj	GRAVEL
	f	Lcul;	ak	COAL_ORE
	f	Lcul;	al	DEEPSLATE_COAL_ORE
	f	Lcul;	am	IRON_ORE
	f	Lcul;	an	DEEPSLATE_IRON_ORE
	f	Lcul;	ao	COPPER_ORE
	f	Lcul;	ap	DEEPSLATE_COPPER_ORE
	f	Lcul;	aq	GOLD_ORE
	f	Lcul;	ar	DEEPSLATE_GOLD_ORE
	f	Lcul;	as	REDSTONE_ORE
	f	Lcul;	at	DEEPSLATE_REDSTONE_ORE
	f	Lcul;	au	EMERALD_ORE
	f	Lcul;	av	DEEPSLATE_EMERALD_ORE
	f	Lcul;	aw	LAPIS_ORE
	f	Lcul;	ax	DEEPSLATE_LAPIS_ORE
	f	Lcul;	ay	DIAMOND_ORE
	f	Lcul;	az	DEEPSLATE_DIAMOND_ORE
	f	Lcul;	bA	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Lcul;	bB	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Lcul;	bC	OAK_LOG
	f	Lcul;	bD	SPRUCE_LOG
	f	Lcul;	bE	BIRCH_LOG
	f	Lcul;	bF	JUNGLE_LOG
	f	Lcul;	bG	ACACIA_LOG
	f	Lcul;	bH	CHERRY_LOG
	f	Lcul;	bI	DARK_OAK_LOG
	f	Lcul;	bJ	MANGROVE_LOG
	f	Lcul;	bK	MANGROVE_ROOTS
	f	Lcul;	bL	MUDDY_MANGROVE_ROOTS
	f	Lcul;	b	STONE
	f	Lcul;	bM	CRIMSON_STEM
	f	Lcul;	bN	WARPED_STEM
	f	Lcul;	bO	BAMBOO_BLOCK
	f	Lcul;	bP	STRIPPED_OAK_LOG
	f	Lcul;	bQ	STRIPPED_SPRUCE_LOG
	f	Lcul;	bR	STRIPPED_BIRCH_LOG
	f	Lcul;	bS	STRIPPED_JUNGLE_LOG
	f	Lcul;	bT	STRIPPED_ACACIA_LOG
	f	Lcul;	bU	STRIPPED_CHERRY_LOG
	f	Lcul;	bV	STRIPPED_DARK_OAK_LOG
	f	Lcul;	bW	STRIPPED_MANGROVE_LOG
	f	Lcul;	bX	STRIPPED_CRIMSON_STEM
	f	Lcul;	bY	STRIPPED_WARPED_STEM
	f	Lcul;	bZ	STRIPPED_OAK_WOOD
	f	Lcul;	ba	CUT_COPPER_STAIRS
	f	Lcul;	bb	EXPOSED_CUT_COPPER_STAIRS
	f	Lcul;	bc	WEATHERED_CUT_COPPER_STAIRS
	f	Lcul;	bd	OXIDIZED_CUT_COPPER_STAIRS
	f	Lcul;	be	CUT_COPPER_SLAB
	f	Lcul;	bf	EXPOSED_CUT_COPPER_SLAB
	f	Lcul;	bg	WEATHERED_CUT_COPPER_SLAB
	f	Lcul;	bh	OXIDIZED_CUT_COPPER_SLAB
	f	Lcul;	bi	WAXED_COPPER_BLOCK
	f	Lcul;	bj	WAXED_EXPOSED_COPPER
	f	Lcul;	bk	WAXED_WEATHERED_COPPER
	f	Lcul;	bl	WAXED_OXIDIZED_COPPER
	f	Lcul;	bm	WAXED_CHISELED_COPPER
	f	Lcul;	bn	WAXED_EXPOSED_CHISELED_COPPER
	f	Lcul;	bo	WAXED_WEATHERED_CHISELED_COPPER
	f	Lcul;	bp	WAXED_OXIDIZED_CHISELED_COPPER
	f	Lcul;	bq	WAXED_CUT_COPPER
	f	Lcul;	br	WAXED_EXPOSED_CUT_COPPER
	f	Lcul;	bs	WAXED_WEATHERED_CUT_COPPER
	f	Lcul;	bt	WAXED_OXIDIZED_CUT_COPPER
	f	Lcul;	bu	WAXED_CUT_COPPER_STAIRS
	f	Lcul;	bv	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Lcul;	bw	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Lcul;	bx	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Lcul;	by	WAXED_CUT_COPPER_SLAB
	f	Lcul;	bz	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Lcul;	cA	DARK_OAK_LEAVES
	f	Lcul;	cB	MANGROVE_LEAVES
	f	Lcul;	cC	AZALEA_LEAVES
	f	Lcul;	cD	FLOWERING_AZALEA_LEAVES
	f	Lcul;	cE	SPONGE
	f	Lcul;	cF	WET_SPONGE
	f	Lcul;	cG	GLASS
	f	Lcul;	cH	TINTED_GLASS
	f	Lcul;	cI	LAPIS_BLOCK
	f	Lcul;	cJ	SANDSTONE
	f	Lcul;	cK	CHISELED_SANDSTONE
	f	Lcul;	cL	CUT_SANDSTONE
	f	Lcul;	c	GRANITE
	f	Lcul;	cM	COBWEB
	f	Lcul;	cN	SHORT_GRASS
	f	Lcul;	cO	FERN
	f	Lcul;	cP	AZALEA
	f	Lcul;	cQ	FLOWERING_AZALEA
	f	Lcul;	cR	DEAD_BUSH
	f	Lcul;	cS	SEAGRASS
	f	Lcul;	cT	SEA_PICKLE
	f	Lcul;	cU	WHITE_WOOL
	f	Lcul;	cV	ORANGE_WOOL
	f	Lcul;	cW	MAGENTA_WOOL
	f	Lcul;	cX	LIGHT_BLUE_WOOL
	f	Lcul;	cY	YELLOW_WOOL
	f	Lcul;	cZ	LIME_WOOL
	f	Lcul;	ca	STRIPPED_SPRUCE_WOOD
	f	Lcul;	cb	STRIPPED_BIRCH_WOOD
	f	Lcul;	cc	STRIPPED_JUNGLE_WOOD
	f	Lcul;	cd	STRIPPED_ACACIA_WOOD
	f	Lcul;	ce	STRIPPED_CHERRY_WOOD
	f	Lcul;	cf	STRIPPED_DARK_OAK_WOOD
	f	Lcul;	cg	STRIPPED_MANGROVE_WOOD
	f	Lcul;	ch	STRIPPED_CRIMSON_HYPHAE
	f	Lcul;	ci	STRIPPED_WARPED_HYPHAE
	f	Lcul;	cj	STRIPPED_BAMBOO_BLOCK
	f	Lcul;	ck	OAK_WOOD
	f	Lcul;	cl	SPRUCE_WOOD
	f	Lcul;	cm	BIRCH_WOOD
	f	Lcul;	cn	JUNGLE_WOOD
	f	Lcul;	co	ACACIA_WOOD
	f	Lcul;	cp	CHERRY_WOOD
	f	Lcul;	cq	DARK_OAK_WOOD
	f	Lcul;	cr	MANGROVE_WOOD
	f	Lcul;	cs	CRIMSON_HYPHAE
	f	Lcul;	ct	WARPED_HYPHAE
	f	Lcul;	cu	OAK_LEAVES
	f	Lcul;	cv	SPRUCE_LEAVES
	f	Lcul;	cw	BIRCH_LEAVES
	f	Lcul;	cx	JUNGLE_LEAVES
	f	Lcul;	cy	ACACIA_LEAVES
	f	Lcul;	cz	CHERRY_LEAVES
	f	Lcul;	dA	BROWN_MUSHROOM
	f	Lcul;	dB	RED_MUSHROOM
	f	Lcul;	dC	CRIMSON_FUNGUS
	f	Lcul;	dD	WARPED_FUNGUS
	f	Lcul;	dE	CRIMSON_ROOTS
	f	Lcul;	dF	WARPED_ROOTS
	f	Lcul;	dG	NETHER_SPROUTS
	f	Lcul;	dH	WEEPING_VINES
	f	Lcul;	dI	TWISTING_VINES
	f	Lcul;	dJ	SUGAR_CANE
	f	Lcul;	dK	KELP
	f	Lcul;	dL	MOSS_CARPET
	f	Lcul;	d	POLISHED_GRANITE
	f	Lcul;	dM	PINK_PETALS
	f	Lcul;	dN	MOSS_BLOCK
	f	Lcul;	dO	HANGING_ROOTS
	f	Lcul;	dP	BIG_DRIPLEAF
	f	Lcul;	dQ	SMALL_DRIPLEAF
	f	Lcul;	dR	BAMBOO
	f	Lcul;	dS	OAK_SLAB
	f	Lcul;	dT	SPRUCE_SLAB
	f	Lcul;	dU	BIRCH_SLAB
	f	Lcul;	dV	JUNGLE_SLAB
	f	Lcul;	dW	ACACIA_SLAB
	f	Lcul;	dX	CHERRY_SLAB
	f	Lcul;	dY	DARK_OAK_SLAB
	f	Lcul;	dZ	MANGROVE_SLAB
	f	Lcul;	da	PINK_WOOL
	f	Lcul;	db	GRAY_WOOL
	f	Lcul;	dc	LIGHT_GRAY_WOOL
	f	Lcul;	dd	CYAN_WOOL
	f	Lcul;	de	PURPLE_WOOL
	f	Lcul;	df	BLUE_WOOL
	f	Lcul;	dg	BROWN_WOOL
	f	Lcul;	dh	GREEN_WOOL
	f	Lcul;	di	RED_WOOL
	f	Lcul;	dj	BLACK_WOOL
	f	Lcul;	dk	DANDELION
	f	Lcul;	dl	POPPY
	f	Lcul;	dm	BLUE_ORCHID
	f	Lcul;	dn	ALLIUM
	f	Lcul;	do	AZURE_BLUET
	f	Lcul;	dp	RED_TULIP
	f	Lcul;	dq	ORANGE_TULIP
	f	Lcul;	dr	WHITE_TULIP
	f	Lcul;	ds	PINK_TULIP
	f	Lcul;	dt	OXEYE_DAISY
	f	Lcul;	du	CORNFLOWER
	f	Lcul;	dv	LILY_OF_THE_VALLEY
	f	Lcul;	dw	WITHER_ROSE
	f	Lcul;	dx	TORCHFLOWER
	f	Lcul;	dy	PITCHER_PLANT
	f	Lcul;	dz	SPORE_BLOSSOM
	f	Lcul;	eA	BOOKSHELF
	f	Lcul;	eB	CHISELED_BOOKSHELF
	f	Lcul;	eC	DECORATED_POT
	f	Lcul;	eD	MOSSY_COBBLESTONE
	f	Lcul;	eE	OBSIDIAN
	f	Lcul;	eF	TORCH
	f	Lcul;	eG	END_ROD
	f	Lcul;	eH	CHORUS_PLANT
	f	Lcul;	eI	CHORUS_FLOWER
	f	Lcul;	eJ	PURPUR_BLOCK
	f	Lcul;	eK	PURPUR_PILLAR
	f	Lcul;	eL	PURPUR_STAIRS
	f	Lcul;	e	DIORITE
	f	Lcul;	eM	SPAWNER
	f	Lcul;	eN	CHEST
	f	Lcul;	eO	CRAFTING_TABLE
	f	Lcul;	eP	FARMLAND
	f	Lcul;	eQ	FURNACE
	f	Lcul;	eR	LADDER
	f	Lcul;	eS	COBBLESTONE_STAIRS
	f	Lcul;	eT	SNOW
	f	Lcul;	eU	ICE
	f	Lcul;	eV	SNOW_BLOCK
	f	Lcul;	eW	CACTUS
	f	Lcul;	eX	CLAY
	f	Lcul;	eY	JUKEBOX
	f	Lcul;	eZ	OAK_FENCE
	f	Lcul;	ea	BAMBOO_SLAB
	f	Lcul;	eb	BAMBOO_MOSAIC_SLAB
	f	Lcul;	ec	CRIMSON_SLAB
	f	Lcul;	ed	WARPED_SLAB
	f	Lcul;	ee	STONE_SLAB
	f	Lcul;	ef	SMOOTH_STONE_SLAB
	f	Lcul;	eg	SANDSTONE_SLAB
	f	Lcul;	eh	CUT_STANDSTONE_SLAB
	f	Lcul;	ei	PETRIFIED_OAK_SLAB
	f	Lcul;	ej	COBBLESTONE_SLAB
	f	Lcul;	ek	BRICK_SLAB
	f	Lcul;	el	STONE_BRICK_SLAB
	f	Lcul;	em	MUD_BRICK_SLAB
	f	Lcul;	en	NETHER_BRICK_SLAB
	f	Lcul;	eo	QUARTZ_SLAB
	f	Lcul;	ep	RED_SANDSTONE_SLAB
	f	Lcul;	eq	CUT_RED_SANDSTONE_SLAB
	f	Lcul;	er	PURPUR_SLAB
	f	Lcul;	es	PRISMARINE_SLAB
	f	Lcul;	et	PRISMARINE_BRICK_SLAB
	f	Lcul;	eu	DARK_PRISMARINE_SLAB
	f	Lcul;	ev	SMOOTH_QUARTZ
	f	Lcul;	ew	SMOOTH_RED_SANDSTONE
	f	Lcul;	ex	SMOOTH_SANDSTONE
	f	Lcul;	ey	SMOOTH_STONE
	f	Lcul;	ez	BRICKS
	f	Lcul;	fA	INFESTED_CHISELED_STONE_BRICKS
	f	Lcul;	fB	INFESTED_DEEPSLATE
	f	Lcul;	fC	STONE_BRICKS
	f	Lcul;	fD	MOSSY_STONE_BRICKS
	f	Lcul;	fE	CRACKED_STONE_BRICKS
	f	Lcul;	fF	CHISELED_STONE_BRICKS
	f	Lcul;	fG	PACKED_MUD
	f	Lcul;	fH	MUD_BRICKS
	f	Lcul;	fI	DEEPSLATE_BRICKS
	f	Lcul;	fJ	CRACKED_DEEPSLATE_BRICKS
	f	Lcul;	fK	DEEPSLATE_TILES
	f	Lcul;	fL	CRACKED_DEEPSLATE_TILES
	f	Lcul;	f	POLISHED_DIORITE
	f	Lcul;	fM	CHISELED_DEEPSLATE
	f	Lcul;	fN	REINFORCED_DEEPSLATE
	f	Lcul;	fO	BROWN_MUSHROOM_BLOCK
	f	Lcul;	fP	RED_MUSHROOM_BLOCK
	f	Lcul;	fQ	MUSHROOM_STEM
	f	Lcul;	fR	IRON_BARS
	f	Lcul;	fS	CHAIN
	f	Lcul;	fT	GLASS_PANE
	f	Lcul;	fU	MELON
	f	Lcul;	fV	VINE
	f	Lcul;	fW	GLOW_LICHEN
	f	Lcul;	fX	BRICK_STAIRS
	f	Lcul;	fY	STONE_BRICK_STAIRS
	f	Lcul;	fZ	MUD_BRICK_STAIRS
	f	Lcul;	fa	SPRUCE_FENCE
	f	Lcul;	fb	BIRCH_FENCE
	f	Lcul;	fc	JUNGLE_FENCE
	f	Lcul;	fd	ACACIA_FENCE
	f	Lcul;	fe	CHERRY_FENCE
	f	Lcul;	ff	DARK_OAK_FENCE
	f	Lcul;	fg	MANGROVE_FENCE
	f	Lcul;	fh	BAMBOO_FENCE
	f	Lcul;	fi	CRIMSON_FENCE
	f	Lcul;	fj	WARPED_FENCE
	f	Lcul;	fk	PUMPKIN
	f	Lcul;	fl	CARVED_PUMPKIN
	f	Lcul;	fm	JACK_O_LANTERN
	f	Lcul;	fn	NETHERRACK
	f	Lcul;	fo	SOUL_SAND
	f	Lcul;	fp	SOUL_SOIL
	f	Lcul;	fq	BASALT
	f	Lcul;	fr	POLISHED_BASALT
	f	Lcul;	fs	SMOOTH_BASALT
	f	Lcul;	ft	SOUL_TORCH
	f	Lcul;	fu	GLOWSTONE
	f	Lcul;	fv	INFESTED_STONE
	f	Lcul;	fw	INFESTED_COBBLESTONE
	f	Lcul;	fx	INFESTED_STONE_BRICKS
	f	Lcul;	fy	INFESTED_MOSSY_STONE_BRICKS
	f	Lcul;	fz	INFESTED_CRACKED_STONE_BRICKS
	f	Lcul;	gA	MANGROVE_STAIRS
	f	Lcul;	gB	BAMBOO_STAIRS
	f	Lcul;	gC	BAMBOO_MOSAIC_STAIRS
	f	Lcul;	gD	CRIMSON_STAIRS
	f	Lcul;	gE	WARPED_STAIRS
	f	Lcul;	gF	COMMAND_BLOCK
	f	Lcul;	gG	BEACON
	f	Lcul;	gH	COBBLESTONE_WALL
	f	Lcul;	gI	MOSSY_COBBLESTONE_WALL
	f	Lcul;	gJ	BRICK_WALL
	f	Lcul;	gK	PRISMARINE_WALL
	f	Lcul;	gL	RED_SANDSTONE_WALL
	f	Lcul;	g	ANDESITE
	f	Lcul;	gM	MOSSY_STONE_BRICK_WALL
	f	Lcul;	gN	GRANITE_WALL
	f	Lcul;	gO	STONE_BRICK_WALL
	f	Lcul;	gP	MUD_BRICK_WALL
	f	Lcul;	gQ	NETHER_BRICK_WALL
	f	Lcul;	gR	ANDESITE_WALL
	f	Lcul;	gS	RED_NETHER_BRICK_WALL
	f	Lcul;	gT	SANDSTONE_WALL
	f	Lcul;	gU	END_STONE_BRICK_WALL
	f	Lcul;	gV	DIORITE_WALL
	f	Lcul;	gW	BLACKSTONE_WALL
	f	Lcul;	gX	POLISHED_BLACKSTONE_WALL
	f	Lcul;	gY	POLISHED_BLACKSTONE_BRICK_WALL
	f	Lcul;	gZ	COBBLED_DEEPSLATE_WALL
	f	Lcul;	ga	MYCELIUM
	f	Lcul;	gb	LILY_PAD
	f	Lcul;	gc	NETHER_BRICKS
	f	Lcul;	gd	CRACKED_NETHER_BRICKS
	f	Lcul;	ge	CHISELED_NETHER_BRICKS
	f	Lcul;	gf	NETHER_BRICK_FENCE
	f	Lcul;	gg	NETHER_BRICK_STAIRS
	f	Lcul;	gh	SCULK
	f	Lcul;	gi	SCULK_VEIN
	f	Lcul;	gj	SCULK_CATALYST
	f	Lcul;	gk	SCULK_SHRIEKER
	f	Lcul;	gl	ENCHANTING_TABLE
	f	Lcul;	gm	END_PORTAL_FRAME
	f	Lcul;	gn	END_STONE
	f	Lcul;	go	END_STONE_BRICKS
	f	Lcul;	gp	DRAGON_EGG
	f	Lcul;	gq	SANDSTONE_STAIRS
	f	Lcul;	gr	ENDER_CHEST
	f	Lcul;	gs	EMERALD_BLOCK
	f	Lcul;	gt	OAK_STAIRS
	f	Lcul;	gu	SPRUCE_STAIRS
	f	Lcul;	gv	BIRCH_STAIRS
	f	Lcul;	gw	JUNGLE_STAIRS
	f	Lcul;	gx	ACACIA_STAIRS
	f	Lcul;	gy	CHERRY_STAIRS
	f	Lcul;	gz	DARK_OAK_STAIRS
	f	Lcul;	hA	BLACK_TERRACOTTA
	f	Lcul;	hB	BARRIER
	f	Lcul;	hC	LIGHT
	f	Lcul;	hD	HAY_BLOCK
	f	Lcul;	hE	WHITE_CARPET
	f	Lcul;	hF	ORANGE_CARPET
	f	Lcul;	hG	MAGENTA_CARPET
	f	Lcul;	hH	LIGHT_BLUE_CARPET
	f	Lcul;	hI	YELLOW_CARPET
	f	Lcul;	hJ	LIME_CARPET
	f	Lcul;	hK	PINK_CARPET
	f	Lcul;	hL	GRAY_CARPET
	f	Lcul;	h	POLISHED_ANDESITE
	f	Lcul;	hM	LIGHT_GRAY_CARPET
	f	Lcul;	hN	CYAN_CARPET
	f	Lcul;	hO	PURPLE_CARPET
	f	Lcul;	hP	BLUE_CARPET
	f	Lcul;	hQ	BROWN_CARPET
	f	Lcul;	hR	GREEN_CARPET
	f	Lcul;	hS	RED_CARPET
	f	Lcul;	hT	BLACK_CARPET
	f	Lcul;	hU	TERRACOTTA
	f	Lcul;	hV	PACKED_ICE
	f	Lcul;	hW	DIRT_PATH
	f	Lcul;	hX	SUNFLOWER
	f	Lcul;	hY	LILAC
	f	Lcul;	hZ	ROSE_BUSH
	f	Lcul;	ha	POLISHED_DEEPSLATE_WALL
	f	Lcul;	hb	DEEPSLATE_BRICK_WALL
	f	Lcul;	hc	DEEPSLATE_TILE_WALL
	f	Lcul;	hd	ANVIL
	f	Lcul;	he	CHIPPED_ANVIL
	f	Lcul;	hf	DAMAGED_ANVIL
	f	Lcul;	hg	CHISELED_QUARTZ_BLOCK
	f	Lcul;	hh	QUARTZ_BLOCK
	f	Lcul;	hi	QUARTZ_BRICKS
	f	Lcul;	hj	QUARTZ_PILLAR
	f	Lcul;	hk	QUARTZ_STAIRS
	f	Lcul;	hl	WHITE_TERRACOTTA
	f	Lcul;	hm	ORANGE_TERRACOTTA
	f	Lcul;	hn	MAGENTA_TERRACOTTA
	f	Lcul;	ho	LIGHT_BLUE_TERRACOTTA
	f	Lcul;	hp	YELLOW_TERRACOTTA
	f	Lcul;	hq	LIME_TERRACOTTA
	f	Lcul;	hr	PINK_TERRACOTTA
	f	Lcul;	hs	GRAY_TERRACOTTA
	f	Lcul;	ht	LIGHT_GRAY_TERRACOTTA
	f	Lcul;	hu	CYAN_TERRACOTTA
	f	Lcul;	hv	PURPLE_TERRACOTTA
	f	Lcul;	hw	BLUE_TERRACOTTA
	f	Lcul;	hx	BROWN_TERRACOTTA
	f	Lcul;	hy	GREEN_TERRACOTTA
	f	Lcul;	hz	RED_TERRACOTTA
	f	Lcul;	iA	GRAY_STAINED_GLASS_PANE
	f	Lcul;	iB	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Lcul;	iC	CYAN_STAINED_GLASS_PANE
	f	Lcul;	iD	PURPLE_STAINED_GLASS_PANE
	f	Lcul;	iE	BLUE_STAINED_GLASS_PANE
	f	Lcul;	iF	BROWN_STAINED_GLASS_PANE
	f	Lcul;	iG	GREEN_STAINED_GLASS_PANE
	f	Lcul;	iH	RED_STAINED_GLASS_PANE
	f	Lcul;	iI	BLACK_STAINED_GLASS_PANE
	f	Lcul;	iJ	PRISMARINE
	f	Lcul;	iK	PRISMARINE_BRICKS
	f	Lcul;	iL	DARK_PRISMARINE
	f	Lcul;	i	DEEPSLATE
	f	Lcul;	iM	PRISMARINE_STAIRS
	f	Lcul;	iN	PRISMARINE_BRICK_STAIRS
	f	Lcul;	iO	DARK_PRISMARINE_STAIRS
	f	Lcul;	iP	SEA_LANTERN
	f	Lcul;	iQ	RED_SANDSTONE
	f	Lcul;	iR	CHISELED_RED_SANDSTONE
	f	Lcul;	iS	CUT_RED_SANDSTONE
	f	Lcul;	iT	RED_SANDSTONE_STAIRS
	f	Lcul;	iU	REPEATING_COMMAND_BLOCK
	f	Lcul;	iV	CHAIN_COMMAND_BLOCK
	f	Lcul;	iW	MAGMA_BLOCK
	f	Lcul;	iX	NETHER_WART_BLOCK
	f	Lcul;	iY	WARPED_WART_BLOCK
	f	Lcul;	iZ	RED_NETHER_BRICKS
	f	Lcul;	ia	PEONY
	f	Lcul;	ib	TALL_GRASS
	f	Lcul;	ic	LARGE_FERN
	f	Lcul;	id	WHITE_STAINED_GLASS
	f	Lcul;	ie	ORANGE_STAINED_GLASS
	f	Lcul;	if	MAGENTA_STAINED_GLASS
	f	Lcul;	ig	LIGHT_BLUE_STAINED_GLASS
	f	Lcul;	ih	YELLOW_STAINED_GLASS
	f	Lcul;	ii	LIME_STAINED_GLASS
	f	Lcul;	ij	PINK_STAINED_GLASS
	f	Lcul;	ik	GRAY_STAINED_GLASS
	f	Lcul;	il	LIGHT_GRAY_STAINED_GLASS
	f	Lcul;	im	CYAN_STAINED_GLASS
	f	Lcul;	in	PURPLE_STAINED_GLASS
	f	Lcul;	io	BLUE_STAINED_GLASS
	f	Lcul;	ip	BROWN_STAINED_GLASS
	f	Lcul;	iq	GREEN_STAINED_GLASS
	f	Lcul;	ir	RED_STAINED_GLASS
	f	Lcul;	is	BLACK_STAINED_GLASS
	f	Lcul;	it	WHITE_STAINED_GLASS_PANE
	f	Lcul;	iu	ORANGE_STAINED_GLASS_PANE
	f	Lcul;	iv	MAGENTA_STAINED_GLASS_PANE
	f	Lcul;	iw	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Lcul;	ix	YELLOW_STAINED_GLASS_PANE
	f	Lcul;	iy	LIME_STAINED_GLASS_PANE
	f	Lcul;	iz	PINK_STAINED_GLASS_PANE
	f	Lcul;	jA	GRAY_GLAZED_TERRACOTTA
	f	Lcul;	jB	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Lcul;	jC	CYAN_GLAZED_TERRACOTTA
	f	Lcul;	jD	PURPLE_GLAZED_TERRACOTTA
	f	Lcul;	jE	BLUE_GLAZED_TERRACOTTA
	f	Lcul;	jF	BROWN_GLAZED_TERRACOTTA
	f	Lcul;	jG	GREEN_GLAZED_TERRACOTTA
	f	Lcul;	jH	RED_GLAZED_TERRACOTTA
	f	Lcul;	jI	BLACK_GLAZED_TERRACOTTA
	f	Lcul;	jJ	WHITE_CONCRETE
	f	Lcul;	jK	ORANGE_CONCRETE
	f	Lcul;	jL	MAGENTA_CONCRETE
	f	Lcul;	j	COBBLED_DEEPSLATE
	f	Lcul;	jM	LIGHT_BLUE_CONCRETE
	f	Lcul;	jN	YELLOW_CONCRETE
	f	Lcul;	jO	LIME_CONCRETE
	f	Lcul;	jP	PINK_CONCRETE
	f	Lcul;	jQ	GRAY_CONCRETE
	f	Lcul;	jR	LIGHT_GRAY_CONCRETE
	f	Lcul;	jS	CYAN_CONCRETE
	f	Lcul;	jT	PURPLE_CONCRETE
	f	Lcul;	jU	BLUE_CONCRETE
	f	Lcul;	jV	BROWN_CONCRETE
	f	Lcul;	jW	GREEN_CONCRETE
	f	Lcul;	jX	RED_CONCRETE
	f	Lcul;	jY	BLACK_CONCRETE
	f	Lcul;	jZ	WHITE_CONCRETE_POWDER
	f	Lcul;	ja	BONE_BLOCK
	f	Lcul;	jb	STRUCTURE_VOID
	f	Lcul;	jc	SHULKER_BOX
	f	Lcul;	jd	WHITE_SHULKER_BOX
	f	Lcul;	je	ORANGE_SHULKER_BOX
	f	Lcul;	jf	MAGENTA_SHULKER_BOX
	f	Lcul;	jg	LIGHT_BLUE_SHULKER_BOX
	f	Lcul;	jh	YELLOW_SHULKER_BOX
	f	Lcul;	ji	LIME_SHULKER_BOX
	f	Lcul;	jj	PINK_SHULKER_BOX
	f	Lcul;	jk	GRAY_SHULKER_BOX
	f	Lcul;	jl	LIGHT_GRAY_SHULKER_BOX
	f	Lcul;	jm	CYAN_SHULKER_BOX
	f	Lcul;	jn	PURPLE_SHULKER_BOX
	f	Lcul;	jo	BLUE_SHULKER_BOX
	f	Lcul;	jp	BROWN_SHULKER_BOX
	f	Lcul;	jq	GREEN_SHULKER_BOX
	f	Lcul;	jr	RED_SHULKER_BOX
	f	Lcul;	js	BLACK_SHULKER_BOX
	f	Lcul;	jt	WHITE_GLAZED_TERRACOTTA
	f	Lcul;	ju	ORANGE_GLAZED_TERRACOTTA
	f	Lcul;	jv	MAGENTA_GLAZED_TERRACOTTA
	f	Lcul;	jw	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Lcul;	jx	YELLOW_GLAZED_TERRACOTTA
	f	Lcul;	jy	LIME_GLAZED_TERRACOTTA
	f	Lcul;	jz	PINK_GLAZED_TERRACOTTA
	f	Lcul;	kA	HORN_CORAL_BLOCK
	f	Lcul;	kB	TUBE_CORAL
	f	Lcul;	kC	BRAIN_CORAL
	f	Lcul;	kD	BUBBLE_CORAL
	f	Lcul;	kE	FIRE_CORAL
	f	Lcul;	kF	HORN_CORAL
	f	Lcul;	kG	DEAD_BRAIN_CORAL
	f	Lcul;	kH	DEAD_BUBBLE_CORAL
	f	Lcul;	kI	DEAD_FIRE_CORAL
	f	Lcul;	kJ	DEAD_HORN_CORAL
	f	Lcul;	kK	DEAD_TUBE_CORAL
	f	Lcul;	kL	TUBE_CORAL_FAN
	f	Lcul;	k	POLISHED_DEEPSLATE
	f	Lcul;	kM	BRAIN_CORAL_FAN
	f	Lcul;	kN	BUBBLE_CORAL_FAN
	f	Lcul;	kO	FIRE_CORAL_FAN
	f	Lcul;	kP	HORN_CORAL_FAN
	f	Lcul;	kQ	DEAD_TUBE_CORAL_FAN
	f	Lcul;	kR	DEAD_BRAIN_CORAL_FAN
	f	Lcul;	kS	DEAD_BUBBLE_CORAL_FAN
	f	Lcul;	kT	DEAD_FIRE_CORAL_FAN
	f	Lcul;	kU	DEAD_HORN_CORAL_FAN
	f	Lcul;	kV	BLUE_ICE
	f	Lcul;	kW	CONDUIT
	f	Lcul;	kX	POLISHED_GRANITE_STAIRS
	f	Lcul;	kY	SMOOTH_RED_SANDSTONE_STAIRS
	f	Lcul;	kZ	MOSSY_STONE_BRICK_STAIRS
	f	Lcul;	ka	ORANGE_CONCRETE_POWDER
	f	Lcul;	kb	MAGENTA_CONCRETE_POWDER
	f	Lcul;	kc	LIGHT_BLUE_CONCRETE_POWDER
	f	Lcul;	kd	YELLOW_CONCRETE_POWDER
	f	Lcul;	ke	LIME_CONCRETE_POWDER
	f	Lcul;	kf	PINK_CONCRETE_POWDER
	f	Lcul;	kg	GRAY_CONCRETE_POWDER
	f	Lcul;	kh	LIGHT_GRAY_CONCRETE_POWDER
	f	Lcul;	ki	CYAN_CONCRETE_POWDER
	f	Lcul;	kj	PURPLE_CONCRETE_POWDER
	f	Lcul;	kk	BLUE_CONCRETE_POWDER
	f	Lcul;	kl	BROWN_CONCRETE_POWDER
	f	Lcul;	km	GREEN_CONCRETE_POWDER
	f	Lcul;	kn	RED_CONCRETE_POWDER
	f	Lcul;	ko	BLACK_CONCRETE_POWDER
	f	Lcul;	kp	TURTLE_EGG
	f	Lcul;	kq	SNIFFER_EGG
	f	Lcul;	kr	DEAD_TUBE_CORAL_BLOCK
	f	Lcul;	ks	DEAD_BRAIN_CORAL_BLOCK
	f	Lcul;	kt	DEAD_BUBBLE_CORAL_BLOCK
	f	Lcul;	ku	DEAD_FIRE_CORAL_BLOCK
	f	Lcul;	kv	DEAD_HORN_CORAL_BLOCK
	f	Lcul;	kw	TUBE_CORAL_BLOCK
	f	Lcul;	kx	BRAIN_CORAL_BLOCK
	f	Lcul;	ky	BUBBLE_CORAL_BLOCK
	f	Lcul;	kz	FIRE_CORAL_BLOCK
	f	Lcul;	lA	POLISHED_ANDESITE_SLAB
	f	Lcul;	lB	DIORITE_SLAB
	f	Lcul;	lC	COBBLED_DEEPSLATE_SLAB
	f	Lcul;	lD	POLISHED_DEEPSLATE_SLAB
	f	Lcul;	lE	DEEPSLATE_BRICK_SLAB
	f	Lcul;	lF	DEEPSLATE_TILE_SLAB
	f	Lcul;	lG	SCAFFOLDING
	f	Lcul;	lH	REDSTONE
	f	Lcul;	lI	REDSTONE_TORCH
	f	Lcul;	lJ	REDSTONE_BLOCK
	f	Lcul;	lK	REPEATER
	f	Lcul;	lL	COMPARATOR
	f	Lcul;	l	CALCITE
	f	Lcul;	lM	PISTON
	f	Lcul;	lN	STICKY_PISTON
	f	Lcul;	lO	SLIME_BLOCK
	f	Lcul;	lP	HONEY_BLOCK
	f	Lcul;	lQ	OBSERVER
	f	Lcul;	lR	HOPPER
	f	Lcul;	lS	DISPENSER
	f	Lcul;	lT	DROPPER
	f	Lcul;	lU	LECTERN
	f	Lcul;	lV	TARGET
	f	Lcul;	lW	LEVER
	f	Lcul;	lX	LIGHTNING_ROD
	f	Lcul;	lY	DAYLIGHT_DETECTOR
	f	Lcul;	lZ	SCULK_SENSOR
	f	Lcul;	la	POLISHED_DIORITE_STAIRS
	f	Lcul;	lb	MOSSY_COBBLESTONE_STAIRS
	f	Lcul;	lc	END_STONE_BRICK_STAIRS
	f	Lcul;	ld	STONE_STAIRS
	f	Lcul;	le	SMOOTH_SANDSTONE_STAIRS
	f	Lcul;	lf	SMOOTH_QUARTZ_STAIRS
	f	Lcul;	lg	GRANITE_STAIRS
	f	Lcul;	lh	ANDESITE_STAIRS
	f	Lcul;	li	RED_NETHER_BRICK_STAIRS
	f	Lcul;	lj	POLISHED_ANDESITE_STAIRS
	f	Lcul;	lk	DIORITE_STAIRS
	f	Lcul;	ll	COBBLED_DEEPSLATE_STAIRS
	f	Lcul;	lm	POLISHED_DEEPSLATE_STAIRS
	f	Lcul;	ln	DEEPSLATE_BRICK_STAIRS
	f	Lcul;	lo	DEEPSLATE_TILE_STAIRS
	f	Lcul;	lp	POLISHED_GRANITE_SLAB
	f	Lcul;	lq	SMOOTH_RED_SANDSTONE_SLAB
	f	Lcul;	lr	MOSSY_STONE_BRICK_SLAB
	f	Lcul;	ls	POLISHED_DIORITE_SLAB
	f	Lcul;	lt	MOSSY_COBBLESTONE_SLAB
	f	Lcul;	lu	END_STONE_BRICK_SLAB
	f	Lcul;	lv	SMOOTH_SANDSTONE_SLAB
	f	Lcul;	lw	SMOOTH_QUARTZ_SLAB
	f	Lcul;	lx	GRANITE_SLAB
	f	Lcul;	ly	ANDESITE_SLAB
	f	Lcul;	lz	RED_NETHER_BRICK_SLAB
	f	Lcul;	mA	JUNGLE_PRESSURE_PLATE
	f	Lcul;	mB	ACACIA_PRESSURE_PLATE
	f	Lcul;	mC	CHERRY_PRESSURE_PLATE
	f	Lcul;	mD	DARK_OAK_PRESSURE_PLATE
	f	Lcul;	mE	MANGROVE_PRESSURE_PLATE
	f	Lcul;	mF	BAMBOO_PRESSURE_PLATE
	f	Lcul;	mG	CRIMSON_PRESSURE_PLATE
	f	Lcul;	mH	WARPED_PRESSURE_PLATE
	f	Lcul;	mI	IRON_DOOR
	f	Lcul;	mJ	OAK_DOOR
	f	Lcul;	mK	SPRUCE_DOOR
	f	Lcul;	mL	BIRCH_DOOR
	f	Lcul;	m	TUFF
	f	Lcul;	mM	JUNGLE_DOOR
	f	Lcul;	mN	ACACIA_DOOR
	f	Lcul;	mO	CHERRY_DOOR
	f	Lcul;	mP	DARK_OAK_DOOR
	f	Lcul;	mQ	MANGROVE_DOOR
	f	Lcul;	mR	BAMBOO_DOOR
	f	Lcul;	mS	CRIMSON_DOOR
	f	Lcul;	mT	WARPED_DOOR
	f	Lcul;	mU	COPPER_DOOR
	f	Lcul;	mV	EXPOSED_COPPER_DOOR
	f	Lcul;	mW	WEATHERED_COPPER_DOOR
	f	Lcul;	mX	OXIDIZED_COPPER_DOOR
	f	Lcul;	mY	WAXED_COPPER_DOOR
	f	Lcul;	mZ	WAXED_EXPOSED_COPPER_DOOR
	f	Lcul;	ma	CALIBRATED_SCULK_SENSOR
	f	Lcul;	mb	TRIPWIRE_HOOK
	f	Lcul;	mc	TRAPPED_CHEST
	f	Lcul;	md	TNT
	f	Lcul;	me	REDSTONE_LAMP
	f	Lcul;	mf	NOTE_BLOCK
	f	Lcul;	mg	STONE_BUTTON
	f	Lcul;	mh	POLISHED_BLACKSTONE_BUTTON
	f	Lcul;	mi	OAK_BUTTON
	f	Lcul;	mj	SPRUCE_BUTTON
	f	Lcul;	mk	BIRCH_BUTTON
	f	Lcul;	ml	JUNGLE_BUTTON
	f	Lcul;	mm	ACACIA_BUTTON
	f	Lcul;	mn	CHERRY_BUTTON
	f	Lcul;	mo	DARK_OAK_BUTTON
	f	Lcul;	mp	MANGROVE_BUTTON
	f	Lcul;	mq	BAMBOO_BUTTON
	f	Lcul;	mr	CRIMSON_BUTTON
	f	Lcul;	ms	WARPED_BUTTON
	f	Lcul;	mt	STONE_PRESSURE_PLATE
	f	Lcul;	mu	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Lcul;	mv	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Lcul;	mw	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Lcul;	mx	OAK_PRESSURE_PLATE
	f	Lcul;	my	SPRUCE_PRESSURE_PLATE
	f	Lcul;	mz	BIRCH_PRESSURE_PLATE
	f	Lcul;	nA	ACACIA_FENCE_GATE
	f	Lcul;	nB	CHERRY_FENCE_GATE
	f	Lcul;	nC	DARK_OAK_FENCE_GATE
	f	Lcul;	nD	MANGROVE_FENCE_GATE
	f	Lcul;	nE	BAMBOO_FENCE_GATE
	f	Lcul;	nF	CRIMSON_FENCE_GATE
	f	Lcul;	nG	WARPED_FENCE_GATE
	f	Lcul;	nH	POWERED_RAIL
	f	Lcul;	nI	DETECTOR_RAIL
	f	Lcul;	nJ	RAIL
	f	Lcul;	nK	ACTIVATOR_RAIL
	f	Lcul;	nL	SADDLE
	f	Lcul;	n	TUFF_SLAB
	f	Lcul;	nM	MINECART
	f	Lcul;	nN	CHEST_MINECART
	f	Lcul;	nO	FURNACE_MINECART
	f	Lcul;	nP	TNT_MINECART
	f	Lcul;	nQ	HOPPER_MINECART
	f	Lcul;	nR	CARROT_ON_A_STICK
	f	Lcul;	nS	WARPED_FUNGUS_ON_A_STICK
	f	Lcul;	nT	ELYTRA
	f	Lcul;	nU	OAK_BOAT
	f	Lcul;	nV	OAK_CHEST_BOAT
	f	Lcul;	nW	SPRUCE_BOAT
	f	Lcul;	nX	SPRUCE_CHEST_BOAT
	f	Lcul;	nY	BIRCH_BOAT
	f	Lcul;	nZ	BIRCH_CHEST_BOAT
	f	Lcul;	na	WAXED_WEATHERED_COPPER_DOOR
	f	Lcul;	nb	WAXED_OXIDIZED_COPPER_DOOR
	f	Lcul;	nc	IRON_TRAPDOOR
	f	Lcul;	nd	OAK_TRAPDOOR
	f	Lcul;	ne	SPRUCE_TRAPDOOR
	f	Lcul;	nf	BIRCH_TRAPDOOR
	f	Lcul;	ng	JUNGLE_TRAPDOOR
	f	Lcul;	nh	ACACIA_TRAPDOOR
	f	Lcul;	ni	CHERRY_TRAPDOOR
	f	Lcul;	nj	DARK_OAK_TRAPDOOR
	f	Lcul;	nk	MANGROVE_TRAPDOOR
	f	Lcul;	nl	BAMBOO_TRAPDOOR
	f	Lcul;	nm	CRIMSON_TRAPDOOR
	f	Lcul;	nn	WARPED_TRAPDOOR
	f	Lcul;	no	COPPER_TRAPDOOR
	f	Lcul;	np	EXPOSED_COPPER_TRAPDOOR
	f	Lcul;	nq	WEATHERED_COPPER_TRAPDOOR
	f	Lcul;	nr	OXIDIZED_COPPER_TRAPDOOR
	f	Lcul;	ns	WAXED_COPPER_TRAPDOOR
	f	Lcul;	nt	WAXED_EXPOSED_COPPER_TRAPDOOR
	f	Lcul;	nu	WAXED_WEATHERED_COPPER_TRAPDOOR
	f	Lcul;	nv	WAXED_OXIDIZED_COPPER_TRAPDOOR
	f	Lcul;	nw	OAK_FENCE_GATE
	f	Lcul;	nx	SPRUCE_FENCE_GATE
	f	Lcul;	ny	BIRCH_FENCE_GATE
	f	Lcul;	nz	JUNGLE_FENCE_GATE
	f	Lcul;	oA	EMERALD
	f	Lcul;	oB	LAPIS_LAZULI
	f	Lcul;	oC	QUARTZ
	f	Lcul;	oD	AMETHYST_SHARD
	f	Lcul;	oE	RAW_IRON
	f	Lcul;	oF	IRON_INGOT
	f	Lcul;	oG	RAW_COPPER
	f	Lcul;	oH	COPPER_INGOT
	f	Lcul;	oI	RAW_GOLD
	f	Lcul;	oJ	GOLD_INGOT
	f	Lcul;	oK	NETHERITE_INGOT
	f	Lcul;	oL	NETHERITE_SCRAP
	f	Lcul;	o	TUFF_STAIRS
	f	Lcul;	oM	WOODEN_SWORD
	f	Lcul;	oN	WOODEN_SHOVEL
	f	Lcul;	oO	WOODEN_PICKAXE
	f	Lcul;	oP	WOODEN_AXE
	f	Lcul;	oQ	WOODEN_HOE
	f	Lcul;	oR	STONE_SWORD
	f	Lcul;	oS	STONE_SHOVEL
	f	Lcul;	oT	STONE_PICKAXE
	f	Lcul;	oU	STONE_AXE
	f	Lcul;	oV	STONE_HOE
	f	Lcul;	oW	GOLDEN_SWORD
	f	Lcul;	oX	GOLDEN_SHOVEL
	f	Lcul;	oY	GOLDEN_PICKAXE
	f	Lcul;	oZ	GOLDEN_AXE
	f	Lcul;	oa	JUNGLE_BOAT
	f	Lcul;	ob	JUNGLE_CHEST_BOAT
	f	Lcul;	oc	ACACIA_BOAT
	f	Lcul;	od	ACACIA_CHEST_BOAT
	f	Lcul;	oe	CHERRY_BOAT
	f	Lcul;	of	CHERRY_CHEST_BOAT
	f	Lcul;	og	DARK_OAK_BOAT
	f	Lcul;	oh	DARK_OAK_CHEST_BOAT
	f	Lcul;	oi	MANGROVE_BOAT
	f	Lcul;	oj	MANGROVE_CHEST_BOAT
	f	Lcul;	ok	BAMBOO_RAFT
	f	Lcul;	ol	BAMBOO_CHEST_RAFT
	f	Lcul;	om	STRUCTURE_BLOCK
	f	Lcul;	on	JIGSAW
	f	Lcul;	oo	TURTLE_HELMET
	f	Lcul;	op	TURTLE_SCUTE
	f	Lcul;	oq	ARMADILLO_SCUTE
	f	Lcul;	or	WOLF_ARMOR
	f	Lcul;	os	FLINT_AND_STEEL
	f	Lcul;	ot	BOWL
	f	Lcul;	ou	APPLE
	f	Lcul;	ov	BOW
	f	Lcul;	ow	ARROW
	f	Lcul;	ox	COAL
	f	Lcul;	oy	CHARCOAL
	f	Lcul;	oz	DIAMOND
	f	Lcul;	pA	LEATHER_LEGGINGS
	f	Lcul;	pB	LEATHER_BOOTS
	f	Lcul;	pC	CHAINMAIL_HELMET
	f	Lcul;	pD	CHAINMAIL_CHESTPLATE
	f	Lcul;	pE	CHAINMAIL_LEGGINGS
	f	Lcul;	pF	CHAINMAIL_BOOTS
	f	Lcul;	pG	IRON_HELMET
	f	Lcul;	pH	IRON_CHESTPLATE
	f	Lcul;	pI	IRON_LEGGINGS
	f	Lcul;	pJ	IRON_BOOTS
	f	Lcul;	pK	DIAMOND_HELMET
	f	Lcul;	pL	DIAMOND_CHESTPLATE
	f	Lcul;	p	TUFF_WALL
	f	Lcul;	pM	DIAMOND_LEGGINGS
	f	Lcul;	pN	DIAMOND_BOOTS
	f	Lcul;	pO	GOLDEN_HELMET
	f	Lcul;	pP	GOLDEN_CHESTPLATE
	f	Lcul;	pQ	GOLDEN_LEGGINGS
	f	Lcul;	pR	GOLDEN_BOOTS
	f	Lcul;	pS	NETHERITE_HELMET
	f	Lcul;	pT	NETHERITE_CHESTPLATE
	f	Lcul;	pU	NETHERITE_LEGGINGS
	f	Lcul;	pV	NETHERITE_BOOTS
	f	Lcul;	pW	FLINT
	f	Lcul;	pX	PORKCHOP
	f	Lcul;	pY	COOKED_PORKCHOP
	f	Lcul;	pZ	PAINTING
	f	Lcul;	pa	GOLDEN_HOE
	f	Lcul;	pb	IRON_SWORD
	f	Lcul;	pc	IRON_SHOVEL
	f	Lcul;	pd	IRON_PICKAXE
	f	Lcul;	pe	IRON_AXE
	f	Lcul;	pf	IRON_HOE
	f	Lcul;	pg	DIAMOND_SWORD
	f	Lcul;	ph	DIAMOND_SHOVEL
	f	Lcul;	pi	DIAMOND_PICKAXE
	f	Lcul;	pj	DIAMOND_AXE
	f	Lcul;	pk	DIAMOND_HOE
	f	Lcul;	pl	NETHERITE_SWORD
	f	Lcul;	pm	NETHERITE_SHOVEL
	f	Lcul;	pn	NETHERITE_PICKAXE
	f	Lcul;	po	NETHERITE_AXE
	f	Lcul;	pp	NETHERITE_HOE
	f	Lcul;	pq	STICK
	f	Lcul;	pr	MUSHROOM_STEW
	f	Lcul;	ps	STRING
	f	Lcul;	pt	FEATHER
	f	Lcul;	pu	GUNPOWDER
	f	Lcul;	pv	WHEAT_SEEDS
	f	Lcul;	pw	WHEAT
	f	Lcul;	px	BREAD
	f	Lcul;	py	LEATHER_HELMET
	f	Lcul;	pz	LEATHER_CHESTPLATE
	f	Lcul;	qA	LAVA_BUCKET
	f	Lcul;	qB	POWDER_SNOW_BUCKET
	f	Lcul;	qC	SNOWBALL
	f	Lcul;	qD	LEATHER
	f	Lcul;	qE	MILK_BUCKET
	f	Lcul;	qF	PUFFERFISH_BUCKET
	f	Lcul;	qG	SALMON_BUCKET
	f	Lcul;	qH	COD_BUCKET
	f	Lcul;	qI	TROPICAL_FISH_BUCKET
	f	Lcul;	qJ	AXOLOTL_BUCKET
	f	Lcul;	qK	TADPOLE_BUCKET
	f	Lcul;	qL	BRICK
	f	Lcul;	q	CHISELED_TUFF
	f	Lcul;	qM	CLAY_BALL
	f	Lcul;	qN	DRIED_KELP_BLOCK
	f	Lcul;	qO	PAPER
	f	Lcul;	qP	BOOK
	f	Lcul;	qQ	SLIME_BALL
	f	Lcul;	qR	EGG
	f	Lcul;	qS	COMPASS
	f	Lcul;	qT	RECOVERY_COMPASS
	f	Lcul;	qU	BUNDLE
	f	Lcul;	qV	FISHING_ROD
	f	Lcul;	qW	CLOCK
	f	Lcul;	qX	SPYGLASS
	f	Lcul;	qY	GLOWSTONE_DUST
	f	Lcul;	qZ	COD
	f	Lcul;	qa	GOLDEN_APPLE
	f	Lcul;	qb	ENCHANTED_GOLDEN_APPLE
	f	Lcul;	qc	OAK_SIGN
	f	Lcul;	qd	SPRUCE_SIGN
	f	Lcul;	qe	BIRCH_SIGN
	f	Lcul;	qf	JUNGLE_SIGN
	f	Lcul;	qg	ACACIA_SIGN
	f	Lcul;	qh	CHERRY_SIGN
	f	Lcul;	qi	DARK_OAK_SIGN
	f	Lcul;	qj	MANGROVE_SIGN
	f	Lcul;	qk	BAMBOO_SIGN
	f	Lcul;	ql	CRIMSON_SIGN
	f	Lcul;	qm	WARPED_SIGN
	f	Lcul;	qn	OAK_HANGING_SIGN
	f	Lcul;	qo	SPRUCE_HANGING_SIGN
	f	Lcul;	qp	BIRCH_HANGING_SIGN
	f	Lcul;	qq	JUNGLE_HANGING_SIGN
	f	Lcul;	qr	ACACIA_HANGING_SIGN
	f	Lcul;	qs	CHERRY_HANGING_SIGN
	f	Lcul;	qt	DARK_OAK_HANGING_SIGN
	f	Lcul;	qu	MANGROVE_HANGING_SIGN
	f	Lcul;	qv	BAMBOO_HANGING_SIGN
	f	Lcul;	qw	CRIMSON_HANGING_SIGN
	f	Lcul;	qx	WARPED_HANGING_SIGN
	f	Lcul;	qy	BUCKET
	f	Lcul;	qz	WATER_BUCKET
	f	Lcul;	rA	SUGAR
	f	Lcul;	rB	CAKE
	f	Lcul;	rC	WHITE_BED
	f	Lcul;	rD	ORANGE_BED
	f	Lcul;	rE	MAGENTA_BED
	f	Lcul;	rF	LIGHT_BLUE_BED
	f	Lcul;	rG	YELLOW_BED
	f	Lcul;	rH	LIME_BED
	f	Lcul;	rI	PINK_BED
	f	Lcul;	rJ	GRAY_BED
	f	Lcul;	rK	LIGHT_GRAY_BED
	f	Lcul;	rL	CYAN_BED
	f	Lcul;	r	POLISHED_TUFF
	f	Lcul;	rM	PURPLE_BED
	f	Lcul;	rN	BLUE_BED
	f	Lcul;	rO	BROWN_BED
	f	Lcul;	rP	GREEN_BED
	f	Lcul;	rQ	RED_BED
	f	Lcul;	rR	BLACK_BED
	f	Lcul;	rS	COOKIE
	f	Lcul;	rT	CRAFTER
	f	Lcul;	rU	FILLED_MAP
	f	Lcul;	rV	SHEARS
	f	Lcul;	rW	MELON_SLICE
	f	Lcul;	rX	DRIED_KELP
	f	Lcul;	rY	PUMPKIN_SEEDS
	f	Lcul;	rZ	MELON_SEEDS
	f	Lcul;	ra	SALMON
	f	Lcul;	rb	TROPICAL_FISH
	f	Lcul;	rc	PUFFERFISH
	f	Lcul;	rd	COOKED_COD
	f	Lcul;	re	COOKED_SALMON
	f	Lcul;	rf	INK_SAC
	f	Lcul;	rg	GLOW_INK_SAC
	f	Lcul;	rh	COCOA_BEANS
	f	Lcul;	ri	WHITE_DYE
	f	Lcul;	rj	ORANGE_DYE
	f	Lcul;	rk	MAGENTA_DYE
	f	Lcul;	rl	LIGHT_BLUE_DYE
	f	Lcul;	rm	YELLOW_DYE
	f	Lcul;	rn	LIME_DYE
	f	Lcul;	ro	PINK_DYE
	f	Lcul;	rp	GRAY_DYE
	f	Lcul;	rq	LIGHT_GRAY_DYE
	f	Lcul;	rr	CYAN_DYE
	f	Lcul;	rs	PURPLE_DYE
	f	Lcul;	rt	BLUE_DYE
	f	Lcul;	ru	BROWN_DYE
	f	Lcul;	rv	GREEN_DYE
	f	Lcul;	rw	RED_DYE
	f	Lcul;	rx	BLACK_DYE
	f	Lcul;	ry	BONE_MEAL
	f	Lcul;	rz	BONE
	f	Lcul;	sA	BOGGED_SPAWN_EGG
	f	Lcul;	sB	BREEZE_SPAWN_EGG
	f	Lcul;	sC	CAT_SPAWN_EGG
	f	Lcul;	sD	CAMEL_SPAWN_EGG
	f	Lcul;	sE	CAVE_SPIDER_SPAWN_EGG
	f	Lcul;	sF	CHICKEN_SPAWN_EGG
	f	Lcul;	sG	COD_SPAWN_EGG
	f	Lcul;	sH	COW_SPAWN_EGG
	f	Lcul;	sI	CREEPER_SPAWN_EGG
	f	Lcul;	sJ	DOLPHIN_SPAWN_EGG
	f	Lcul;	sK	DONKEY_SPAWN_EGG
	f	Lcul;	sL	DROWNED_SPAWN_EGG
	f	Lcul;	s	POLISHED_TUFF_SLAB
	f	Lcul;	sM	ELDER_GUARDIAN_SPAWN_EGG
	f	Lcul;	sN	ENDER_DRAGON_SPAWN_EGG
	f	Lcul;	sO	ENDERMAN_SPAWN_EGG
	f	Lcul;	sP	ENDERMITE_SPAWN_EGG
	f	Lcul;	sQ	EVOKER_SPAWN_EGG
	f	Lcul;	sR	FOX_SPAWN_EGG
	f	Lcul;	sS	FROG_SPAWN_EGG
	f	Lcul;	sT	GHAST_SPAWN_EGG
	f	Lcul;	sU	GLOW_SQUID_SPAWN_EGG
	f	Lcul;	sV	GOAT_SPAWN_EGG
	f	Lcul;	sW	GUARDIAN_SPAWN_EGG
	f	Lcul;	sX	HOGLIN_SPAWN_EGG
	f	Lcul;	sY	HORSE_SPAWN_EGG
	f	Lcul;	sZ	HUSK_SPAWN_EGG
	f	Lcul;	sa	BEEF
	f	Lcul;	sb	COOKED_BEEF
	f	Lcul;	sc	CHICKEN
	f	Lcul;	sd	COOKED_CHICKEN
	f	Lcul;	se	ROTTEN_FLESH
	f	Lcul;	sf	ENDER_PEARL
	f	Lcul;	sg	BLAZE_ROD
	f	Lcul;	sh	GHAST_TEAR
	f	Lcul;	si	GOLD_NUGGET
	f	Lcul;	sj	NETHER_WART
	f	Lcul;	sk	POTION
	f	Lcul;	sl	GLASS_BOTTLE
	f	Lcul;	sm	SPIDER_EYE
	f	Lcul;	sn	FERMENTED_SPIDER_EYE
	f	Lcul;	so	BLAZE_POWDER
	f	Lcul;	sp	MAGMA_CREAM
	f	Lcul;	sq	BREWING_STAND
	f	Lcul;	sr	CAULDRON
	f	Lcul;	ss	ENDER_EYE
	f	Lcul;	st	GLISTERING_MELON_SLICE
	f	Lcul;	su	ARMADILLO_SPAWN_EGG
	f	Lcul;	sv	ALLAY_SPAWN_EGG
	f	Lcul;	sw	AXOLOTL_SPAWN_EGG
	f	Lcul;	sx	BAT_SPAWN_EGG
	f	Lcul;	sy	BEE_SPAWN_EGG
	f	Lcul;	sz	BLAZE_SPAWN_EGG
	f	Lcul;	tA	SPIDER_SPAWN_EGG
	f	Lcul;	tB	SQUID_SPAWN_EGG
	f	Lcul;	tC	STRAY_SPAWN_EGG
	f	Lcul;	tD	STRIDER_SPAWN_EGG
	f	Lcul;	tE	TADPOLE_SPAWN_EGG
	f	Lcul;	tF	TRADER_LLAMA_SPAWN_EGG
	f	Lcul;	tG	TROPICAL_FISH_SPAWN_EGG
	f	Lcul;	tH	TURTLE_SPAWN_EGG
	f	Lcul;	tI	VEX_SPAWN_EGG
	f	Lcul;	tJ	VILLAGER_SPAWN_EGG
	f	Lcul;	tK	VINDICATOR_SPAWN_EGG
	f	Lcul;	tL	WANDERING_TRADER_SPAWN_EGG
	f	Lcul;	t	POLISHED_TUFF_STAIRS
	f	Lcul;	tM	WARDEN_SPAWN_EGG
	f	Lcul;	tN	WITCH_SPAWN_EGG
	f	Lcul;	tO	WITHER_SPAWN_EGG
	f	Lcul;	tP	WITHER_SKELETON_SPAWN_EGG
	f	Lcul;	tQ	WOLF_SPAWN_EGG
	f	Lcul;	tR	ZOGLIN_SPAWN_EGG
	f	Lcul;	tS	ZOMBIE_SPAWN_EGG
	f	Lcul;	tT	ZOMBIE_HORSE_SPAWN_EGG
	f	Lcul;	tU	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Lcul;	tV	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Lcul;	tW	EXPERIENCE_BOTTLE
	f	Lcul;	tX	FIRE_CHARGE
	f	Lcul;	tY	WIND_CHARGE
	f	Lcul;	tZ	WRITABLE_BOOK
	f	Lcul;	ta	IRON_GOLEM_SPAWN_EGG
	f	Lcul;	tb	LLAMA_SPAWN_EGG
	f	Lcul;	tc	MAGMA_CUBE_SPAWN_EGG
	f	Lcul;	td	MOOSHROOM_SPAWN_EGG
	f	Lcul;	te	MULE_SPAWN_EGG
	f	Lcul;	tf	OCELOT_SPAWN_EGG
	f	Lcul;	tg	PANDA_SPAWN_EGG
	f	Lcul;	th	PARROT_SPAWN_EGG
	f	Lcul;	ti	PHANTOM_SPAWN_EGG
	f	Lcul;	tj	PIG_SPAWN_EGG
	f	Lcul;	tk	PIGLIN_SPAWN_EGG
	f	Lcul;	tl	PIGLIN_BRUTE_SPAWN_EGG
	f	Lcul;	tm	PILLAGER_SPAWN_EGG
	f	Lcul;	tn	POLAR_BEAR_SPAWN_EGG
	f	Lcul;	to	PUFFERFISH_SPAWN_EGG
	f	Lcul;	tp	RABBIT_SPAWN_EGG
	f	Lcul;	tq	RAVAGER_SPAWN_EGG
	f	Lcul;	tr	SALMON_SPAWN_EGG
	f	Lcul;	ts	SHEEP_SPAWN_EGG
	f	Lcul;	tt	SHULKER_SPAWN_EGG
	f	Lcul;	tu	SILVERFISH_SPAWN_EGG
	f	Lcul;	tv	SKELETON_SPAWN_EGG
	f	Lcul;	tw	SKELETON_HORSE_SPAWN_EGG
	f	Lcul;	tx	SLIME_SPAWN_EGG
	f	Lcul;	ty	SNIFFER_SPAWN_EGG
	f	Lcul;	tz	SNOW_GOLEM_SPAWN_EGG
	f	Lcul;	uA	RABBIT
	f	Lcul;	uB	COOKED_RABBIT
	f	Lcul;	uC	RABBIT_STEW
	f	Lcul;	uD	RABBIT_FOOT
	f	Lcul;	uE	RABBIT_HIDE
	f	Lcul;	uF	ARMOR_STAND
	f	Lcul;	uG	IRON_HORSE_ARMOR
	f	Lcul;	uH	GOLDEN_HORSE_ARMOR
	f	Lcul;	uI	DIAMOND_HORSE_ARMOR
	f	Lcul;	uJ	LEATHER_HORSE_ARMOR
	f	Lcul;	uK	LEAD
	f	Lcul;	uL	NAME_TAG
	f	Lcul;	u	POLISHED_TUFF_WALL
	f	Lcul;	uM	COMMAND_BLOCK_MINECART
	f	Lcul;	uN	MUTTON
	f	Lcul;	uO	COOKED_MUTTON
	f	Lcul;	uP	WHITE_BANNER
	f	Lcul;	uQ	ORANGE_BANNER
	f	Lcul;	uR	MAGENTA_BANNER
	f	Lcul;	uS	LIGHT_BLUE_BANNER
	f	Lcul;	uT	YELLOW_BANNER
	f	Lcul;	uU	LIME_BANNER
	f	Lcul;	uV	PINK_BANNER
	f	Lcul;	uW	GRAY_BANNER
	f	Lcul;	uX	LIGHT_GRAY_BANNER
	f	Lcul;	uY	CYAN_BANNER
	f	Lcul;	uZ	PURPLE_BANNER
	f	Lcul;	ua	WRITTEN_BOOK
	f	Lcul;	ub	MACE
	f	Lcul;	uc	ITEM_FRAME
	f	Lcul;	ud	GLOW_ITEM_FRAME
	f	Lcul;	ue	FLOWER_POT
	f	Lcul;	uf	CARROT
	f	Lcul;	ug	POTATO
	f	Lcul;	uh	BAKED_POTATO
	f	Lcul;	ui	POISONOUS_POTATO
	f	Lcul;	uj	MAP
	f	Lcul;	uk	GOLDEN_CARROT
	f	Lcul;	ul	SKELETON_SKULL
	f	Lcul;	um	WITHER_SKELETON_SKULL
	f	Lcul;	un	PLAYER_HEAD
	f	Lcul;	uo	ZOMBIE_HEAD
	f	Lcul;	up	CREEPER_HEAD
	f	Lcul;	uq	DRAGON_HEAD
	f	Lcul;	ur	PIGLIN_HEAD
	f	Lcul;	us	NETHER_STAR
	f	Lcul;	ut	PUMPKIN_PIE
	f	Lcul;	uu	FIREWORK_ROCKET
	f	Lcul;	uv	FIREWORK_STAR
	f	Lcul;	uw	ENCHANTED_BOOK
	f	Lcul;	ux	NETHER_BRICK
	f	Lcul;	uy	PRISMARINE_SHARD
	f	Lcul;	uz	PRISMARINE_CRYSTALS
	f	Lcul;	vA	MUSIC_DISC_BLOCKS
	f	Lcul;	vB	MUSIC_DISC_CHIRP
	f	Lcul;	vC	MUSIC_DISC_CREATOR
	f	Lcul;	vD	MUSIC_DISC_CREATOR_MUSIC_BOX
	f	Lcul;	vE	MUSIC_DISC_FAR
	f	Lcul;	vF	MUSIC_DISC_MALL
	f	Lcul;	vG	MUSIC_DISC_MELLOHI
	f	Lcul;	vH	MUSIC_DISC_STAL
	f	Lcul;	vI	MUSIC_DISC_STRAD
	f	Lcul;	vJ	MUSIC_DISC_WARD
	f	Lcul;	vK	MUSIC_DISC_11
	f	Lcul;	vL	MUSIC_DISC_WAIT
	f	Lcul;	v	TUFF_BRICKS
	f	Lcul;	vM	MUSIC_DISC_OTHERSIDE
	f	Lcul;	vN	MUSIC_DISC_RELIC
	f	Lcul;	vO	MUSIC_DISC_5
	f	Lcul;	vP	MUSIC_DISC_PIGSTEP
	f	Lcul;	vQ	MUSIC_DISC_PRECIPICE
	f	Lcul;	vR	DISC_FRAGMENT_5
	f	Lcul;	vS	TRIDENT
	f	Lcul;	vT	PHANTOM_MEMBRANE
	f	Lcul;	vU	NAUTILUS_SHELL
	f	Lcul;	vV	HEART_OF_THE_SEA
	f	Lcul;	vW	CROSSBOW
	f	Lcul;	vX	SUSPICIOUS_STEW
	f	Lcul;	vY	LOOM
	f	Lcul;	vZ	FLOWER_BANNER_PATTERN
	f	Lcul;	va	BLUE_BANNER
	f	Lcul;	vb	BROWN_BANNER
	f	Lcul;	vc	GREEN_BANNER
	f	Lcul;	vd	RED_BANNER
	f	Lcul;	ve	BLACK_BANNER
	f	Lcul;	vf	END_CRYSTAL
	f	Lcul;	vg	CHORUS_FRUIT
	f	Lcul;	vh	POPPED_CHORUS_FRUIT
	f	Lcul;	vi	TORCHFLOWER_SEEDS
	f	Lcul;	vj	PITCHER_POD
	f	Lcul;	vk	BEETROOT
	f	Lcul;	vl	BEETROOT_SEEDS
	f	Lcul;	vm	BEETROOT_SOUP
	f	Lcul;	vn	DRAGON_BREATH
	f	Lcul;	vo	SPLASH_POTION
	f	Lcul;	vp	SPECTRAL_ARROW
	f	Lcul;	vq	TIPPED_ARROW
	f	Lcul;	vr	LINGERING_POTION
	f	Lcul;	vs	SHIELD
	f	Lcul;	vt	TOTEM_OF_UNDYING
	f	Lcul;	vu	SHULKER_SHELL
	f	Lcul;	vv	IRON_NUGGET
	f	Lcul;	vw	KNOWLEDGE_BOOK
	f	Lcul;	vx	DEBUG_STICK
	f	Lcul;	vy	MUSIC_DISC_13
	f	Lcul;	vz	MUSIC_DISC_CAT
	f	Lcul;	wA	BEE_NEST
	f	Lcul;	wB	BEEHIVE
	f	Lcul;	wC	HONEY_BOTTLE
	f	Lcul;	wD	HONEYCOMB_BLOCK
	f	Lcul;	wE	LODESTONE
	f	Lcul;	wF	CRYING_OBSIDIAN
	f	Lcul;	wG	BLACKSTONE
	f	Lcul;	wH	BLACKSTONE_SLAB
	f	Lcul;	wI	BLACKSTONE_STAIRS
	f	Lcul;	wJ	GILDED_BLACKSTONE
	f	Lcul;	wK	POLISHED_BLACKSTONE
	f	Lcul;	wL	POLISHED_BLACKSTONE_SLAB
	f	Lcul;	w	TUFF_BRICK_SLAB
	f	Lcul;	wM	POLISHED_BLACKSTONE_STAIRS
	f	Lcul;	wN	CHISELED_POLISHED_BLACKSTONE
	f	Lcul;	wO	POLISHED_BLACKSTONE_BRICKS
	f	Lcul;	wP	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Lcul;	wQ	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Lcul;	wR	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Lcul;	wS	RESPAWN_ANCHOR
	f	Lcul;	wT	CANDLE
	f	Lcul;	wU	WHITE_CANDLE
	f	Lcul;	wV	ORANGE_CANDLE
	f	Lcul;	wW	MAGENTA_CANDLE
	f	Lcul;	wX	LIGHT_BLUE_CANDLE
	f	Lcul;	wY	YELLOW_CANDLE
	f	Lcul;	wZ	LIME_CANDLE
	f	Lcul;	wa	CREEPER_BANNER_PATTERN
	f	Lcul;	wb	SKULL_BANNER_PATTERN
	f	Lcul;	wc	MOJANG_BANNER_PATTERN
	f	Lcul;	wd	GLOBE_BANNER_PATTERN
	f	Lcul;	we	PIGLIN_BANNER_PATTERN
	f	Lcul;	wf	FLOW_BANNER_PATTERN
	f	Lcul;	wg	GUSTER_BANNER_PATTERN
	f	Lcul;	wh	GOAT_HORN
	f	Lcul;	wi	COMPOSTER
	f	Lcul;	wj	BARREL
	f	Lcul;	wk	SMOKER
	f	Lcul;	wl	BLAST_FURNACE
	f	Lcul;	wm	CARTOGRAPHY_TABLE
	f	Lcul;	wn	FLETCHING_TABLE
	f	Lcul;	wo	GRINDSTONE
	f	Lcul;	wp	SMITHING_TABLE
	f	Lcul;	wq	STONECUTTER
	f	Lcul;	wr	BELL
	f	Lcul;	ws	LANTERN
	f	Lcul;	wt	SOUL_LANTERN
	f	Lcul;	wu	SWEET_BERRIES
	f	Lcul;	wv	GLOW_BERRIES
	f	Lcul;	ww	CAMPFIRE
	f	Lcul;	wx	SOUL_CAMPFIRE
	f	Lcul;	wy	SHROOMLIGHT
	f	Lcul;	wz	HONEYCOMB
	f	Lcul;	xA	WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xB	EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xC	VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xD	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xE	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xF	RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xG	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xH	WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xI	SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xJ	SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xK	RAISER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xL	HOST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	x	TUFF_BRICK_STAIRS
	f	Lcul;	xM	FLOW_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xN	BOLT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xO	ANGLER_POTTERY_SHERD
	f	Lcul;	xP	ARCHER_POTTERY_SHERD
	f	Lcul;	xQ	ARMS_UP_POTTERY_SHERD
	f	Lcul;	xR	BLADE_POTTERY_SHERD
	f	Lcul;	xS	BREWER_POTTERY_SHERD
	f	Lcul;	xT	BURN_POTTERY_SHERD
	f	Lcul;	xU	DANGER_POTTERY_SHERD
	f	Lcul;	xV	EXPLORER_POTTERY_SHERD
	f	Lcul;	xW	FLOW_POTTERY_SHERD
	f	Lcul;	xX	FRIEND_POTTERY_SHERD
	f	Lcul;	xY	GUSTER_POTTERY_SHERD
	f	Lcul;	xZ	HEART_POTTERY_SHERD
	f	Lcul;	xa	PINK_CANDLE
	f	Lcul;	xb	GRAY_CANDLE
	f	Lcul;	xc	LIGHT_GRAY_CANDLE
	f	Lcul;	xd	CYAN_CANDLE
	f	Lcul;	xe	PURPLE_CANDLE
	f	Lcul;	xf	BLUE_CANDLE
	f	Lcul;	xg	BROWN_CANDLE
	f	Lcul;	xh	GREEN_CANDLE
	f	Lcul;	xi	RED_CANDLE
	f	Lcul;	xj	BLACK_CANDLE
	f	Lcul;	xk	SMALL_AMETHYST_BUD
	f	Lcul;	xl	MEDIUM_AMETHYST_BUD
	f	Lcul;	xm	LARGE_AMETHYST_BUD
	f	Lcul;	xn	AMETHYST_CLUSTER
	f	Lcul;	xo	POINTED_DRIPSTONE
	f	Lcul;	xp	OCHRE_FROGLIGHT
	f	Lcul;	xq	VERDANT_FROGLIGHT
	f	Lcul;	xr	PEARLESCENT_FROGLIGHT
	f	Lcul;	xs	FROGSPAWN
	f	Lcul;	xt	ECHO_SHARD
	f	Lcul;	xu	BRUSH
	f	Lcul;	xv	NETHERITE_UPGRADE_SMITHING_TEMPLATE
	f	Lcul;	xw	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xx	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xy	COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	xz	WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Lcul;	yA	WAXED_OXIDIZED_COPPER_BULB
	f	Lcul;	yB	TRIAL_SPAWNER
	f	Lcul;	yC	TRIAL_KEY
	f	Lcul;	yD	OMINOUS_TRIAL_KEY
	f	Lcul;	yE	VAULT
	f	Lcul;	yF	OMINOUS_BOTTLE
	f	Lcul;	yG	BREEZE_ROD
	f	Lcul;	y	TUFF_BRICK_WALL
	f	Lcul;	ya	HEARTBREAK_POTTERY_SHERD
	f	Lcul;	yb	HOWL_POTTERY_SHERD
	f	Lcul;	yc	MINER_POTTERY_SHERD
	f	Lcul;	yd	MOURNER_POTTERY_SHERD
	f	Lcul;	ye	PLENTY_POTTERY_SHERD
	f	Lcul;	yf	PRIZE_POTTERY_SHERD
	f	Lcul;	yg	SCRAPE_POTTERY_SHERD
	f	Lcul;	yh	SHEAF_POTTERY_SHERD
	f	Lcul;	yi	SHELTER_POTTERY_SHERD
	f	Lcul;	yj	SKULL_POTTERY_SHERD
	f	Lcul;	yk	SNORT_POTTERY_SHERD
	f	Lcul;	yl	COPPER_GRATE
	f	Lcul;	ym	EXPOSED_COPPER_GRATE
	f	Lcul;	yn	WEATHERED_COPPER_GRATE
	f	Lcul;	yo	OXIDIZED_COPPER_GRATE
	f	Lcul;	yp	WAXED_COPPER_GRATE
	f	Lcul;	yq	WAXED_EXPOSED_COPPER_GRATE
	f	Lcul;	yr	WAXED_WEATHERED_COPPER_GRATE
	f	Lcul;	ys	WAXED_OXIDIZED_COPPER_GRATE
	f	Lcul;	yt	COPPER_BULB
	f	Lcul;	yu	EXPOSED_COPPER_BULB
	f	Lcul;	yv	WEATHERED_COPPER_BULB
	f	Lcul;	yw	OXIDIZED_COPPER_BULB
	f	Lcul;	yx	WAXED_COPPER_BULB
	f	Lcul;	yy	WAXED_EXPOSED_COPPER_BULB
	f	Lcul;	yz	WAXED_WEATHERED_COPPER_BULB
	f	Lcul;	z	CHISELED_TUFF_BRICKS
c	cuu	net/minecraft/world/item/JukeboxPlayable
	m	()Lctl;	a	song
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Ldcw;Ljd;Lcuq;Lcmx;)Lbqt;	a	tryInsertIntoJukebox
		p	0		world
		p	1		pos
		p	2		stack
		p	3		player
	m	(Ljava/util/function/Consumer;Ljm;)V	a	lambda$addToTooltip$1
	m	(Z)Lcuu;	a	withTooltip
		p	1		showInTooltip
	m	()Z	b	showInTooltip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lctl;	c	song
	f	Z	d	showInTooltip
c	cuv	net/minecraft/world/item/JukeboxSong
	m	()I	a	lengthInTicks
	m	(J)Z	a	hasFinished
		p	1		ticksSinceSongStarted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljo$a;Lcuq;)Ljava/util/Optional;	a	fromStack
		p	0		registryLookup
		p	1		stack
	m	()Ljm;	b	soundEvent
	m	()Lwz;	c	description
	m	()F	d	lengthInSeconds
	m	()I	e	comparatorOutput
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Ljm;	e	soundEvent
	f	Lwz;	f	description
	f	F	g	lengthInSeconds
	f	I	h	comparatorOutput
	f	I	i	SONG_END_PADDING_TICKS
c	cuw	net/minecraft/world/item/JukeboxSongPlayer
	m	(Lcuw$a;Ljd;)V	<init>	<init>
		p	1		changeNotifier
		p	2		pos
	m	()Z	a	isPlaying
	m	(Ldcx;Ldtc;)V	a	stop
		p	1		world
		p	2		state
	m	(Ldcx;Ljd;)V	a	spawnMusicParticles
		p	0		world
		p	1		pos
	m	(Ldcx;Ljm;)V	a	play
		p	1		world
		p	2		song
	m	(Ljm;J)V	a	setSongWithoutPlaying
		p	1		song
		p	2		ticksPlaying
	m	()Lcuv;	b	getSong
	m	(Ldcx;Ldtc;)V	b	tick
		p	1		world
		p	2		state
	m	()J	c	getTicksSinceSongStarted
	m	()Z	d	shouldEmitJukeboxPlayingEvent
	f	I	a	PLAY_EVENT_INTERVAL_TICKS
	f	J	b	ticksSinceSongStarted
	f	Ljm;	c	song
	f	Ljd;	d	blockPos
	f	Lcuw$a;	e	onSongChanged
c	cuw$a	net/minecraft/world/item/JukeboxSongPlayer$a
c	cux	net/minecraft/world/item/JukeboxSongs
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;Ljm$c;II)V	a	register
		p	0		registry
		p	1		key
		p	2		soundEvent
		p	3		lengthInSeconds
		p	4		comparatorOutput
	f	Lakq;	a	THIRTEEN
	f	Lakq;	b	CAT
	f	Lakq;	c	BLOCKS
	f	Lakq;	d	CHIRP
	f	Lakq;	e	FAR
	f	Lakq;	f	MALL
	f	Lakq;	g	MELLOHI
	f	Lakq;	h	STAL
	f	Lakq;	i	STRAD
	f	Lakq;	j	WARD
	f	Lakq;	k	ELEVEN
	f	Lakq;	l	WAIT
	f	Lakq;	m	PIGSTEP
	f	Lakq;	n	OTHERSIDE
	f	Lakq;	o	FIVE
	f	Lakq;	p	RELIC
	f	Lakq;	q	PRECIPICE
	f	Lakq;	r	CREATOR
	f	Lakq;	s	CREATOR_MUSIC_BOX
c	cuy	net/minecraft/world/item/ItemKnowledgeBook
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	f	Lorg/slf4j/Logger;	a	LOGGER
c	cuz	net/minecraft/world/item/ItemLeash
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmx;Lbtk;)Z	a	lambda$bindPlayerMobs$0
		p	1		entity
	m	(Lcmx;Ldcw;Ljd;)Lbqr;	a	bindPlayerMobs
		p	0		player
		p	1		world
		p	2		pos
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Ljd;Ljava/util/function/Predicate;)Ljava/util/List;	a	leashableInArea
		p	0		world
		p	1		pos
		p	2		predicate
	m	(Ljava/util/function/Predicate;Lbsr;)Z	a	lambda$leashableInArea$1
		p	1		entity
c	cva	net/minecraft/world/item/ItemLingeringPotion
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cvb	net/minecraft/world/item/MaceItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lbsr;FLbrk;)F	a	getAttackDamageBonus
		p	1		target
		p	2		baseAttackDamage
		p	3		damageSource
	m	(Lbsr;Lcmx;Lbtn;)V	a	lambda$knockback$0
		p	2		entity
	m	(Lbtn;)Z	a	canSmashAttack
		p	0		attacker
	m	(Lcmx;Lbsr;)Ljava/util/function/Predicate;	a	knockbackPredicate
		p	0		player
		p	1		attacked
	m	(Lcmx;Lbsr;Lbtn;)Z	a	lambda$knockbackPredicate$1
		p	2		entity
	m	(Lcmx;Lbtn;Lexc;)D	a	getKnockbackPower
		p	0		player
		p	1		attacked
		p	2		distance
	m	(Lcuq;Lbtn;Lbtn;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Ldcw;Lcmx;Lbsr;)V	a	knockback
		p	0		world
		p	1		player
		p	2		attacked
	m	(Ldtc;Ldcw;Ljd;Lcmx;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcuq;Lbtn;Lbtn;)V	b	postHurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	()I	g	getEnchantmentValue
	m	()Lcxn;	h	createAttributes
	m	()Lcxx;	k	createToolProperties
	f	F	a	SMASH_ATTACK_FALL_THRESHOLD
	f	F	b	SMASH_ATTACK_KNOCKBACK_RADIUS
	f	I	c	DEFAULT_ATTACK_DAMAGE
	f	F	j	DEFAULT_ATTACK_SPEED
	f	F	k	SMASH_ATTACK_HEAVY_THRESHOLD
	f	F	l	SMASH_ATTACK_KNOCKBACK_POWER
c	cvc	net/minecraft/world/item/ItemWorldMap
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Laqu;Lcuq;)V	a	renderBiomePreviewMap
		p	0		world
		p	1		map
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldcw;)V	a	onCraftedPostProcess
		p	1		stack
		p	2		world
	m	(Lcuq;Ldcw;Lbsr;IZ)V	a	inventoryTick
		p	1		stack
		p	2		world
		p	3		entity
		p	4		slot
		p	5		selected
	m	(Lcuq;Ldcw;Lcmx;)Lzg;	a	getUpdatePacket
		p	1		stack
		p	2		world
		p	3		player
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;IIBZZ)Lcuq;	a	create
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
	m	(Ldcw;IIIZZLakq;)Leqr;	a	createNewSavedData
		p	0		world
		p	1		x
		p	2		z
		p	3		scale
		p	4		showIcons
		p	5		unlimitedTracking
		p	6		dimension
	m	(Ldcw;Lbsr;Leqt;)V	a	update
		p	1		world
		p	2		entity
		p	3		state
	m	(Ldcw;Lcuq;)V	a	lockMap
		p	0		world
		p	1		stack
	m	(Ldcw;Ldtc;Ljd;)Ldtc;	a	getCorrectStateForFluidBlock
		p	1		world
		p	2		state
		p	3		pos
	m	(Leqr;)Lwz;	a	getTooltipForId
		p	0		id
	m	(Leqr;Ldcw;)Leqt;	a	getSavedData
		p	0		id
		p	1		world
	m	([ZII)Z	a	isBiomeWatery
		p	0		biomes
		p	1		x
		p	2		z
	m	(Lcuq;Ldcw;)Leqt;	b	getSavedData
		p	0		map
		p	1		world
	m	(Lcuq;Ldcw;)V	c	scaleMap
		p	0		map
		p	1		world
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
c	cvc$1	net/minecraft/world/item/ItemWorldMap$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$component$MapPostProcessing
c	cvd	net/minecraft/world/item/ItemMilkBucket
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	f	I	a	DRINK_DURATION
c	cve	net/minecraft/world/item/ItemMinecart
	m	(Lcot$a;Lcul$a;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	f	Lkx;	a	DISPENSE_ITEM_BEHAVIOR
	f	Lcot$a;	b	type
c	cve$1	net/minecraft/world/item/ItemMinecart$1
	m	(Lku;)V	a	playSound
		p	1		pointer
	m	(Lku;Lcuq;)Lcuq;	a	execute
		p	1		pointer
		p	2		stack
	f	Lkw;	c	defaultDispenseItemBehavior
c	cvf	net/minecraft/world/item/MobBucketItem
	m	(Lbsx;Lepd;Lavo;Lcul$a;)V	<init>	<init>
		p	1		type
		p	2		fluid
		p	3		emptyingSound
		p	4		settings
	m	(Laqu;Lcuq;Ljd;)V	a	spawn
		p	1		world
		p	2		stack
		p	3		pos
	m	(Lcmx;Ldcw;Lcuq;Ljd;)V	a	checkExtraContent
		p	1		player
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lcmx;Ldcx;Ljd;)V	a	playEmptySound
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	f	Lcom/mojang/serialization/MapCodec;	a	VARIANT_FIELD_CODEC
	f	Lbsx;	b	type
	f	Lavo;	c	emptySound
c	cvg	net/minecraft/world/item/ItemNameTag
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcmx;Lbtn;Lbqq;)Lbqr;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cvh	net/minecraft/world/item/OminousBottleItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	f	I	a	EFFECT_DURATION
	f	I	b	MIN_AMPLIFIER
	f	I	c	MAX_AMPLIFIER
	f	I	j	DRINK_DURATION
c	cvi	net/minecraft/world/item/ItemPickaxe
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
c	cvj	net/minecraft/world/item/PlaceOnWaterBlockItem
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cvk	net/minecraft/world/item/ItemSkullPlayer
	m	(Ldfy;Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		wallBlock
		p	3		settings
	m	(Lcuq;Lcxu;)V	a	lambda$verifyComponentsAfterLoad$0
		p	1		profile
	m	(Lcuq;)V	m	verifyComponentsAfterLoad
		p	1		stack
	m	(Lcuq;)Lwz;	n	getName
		p	1		stack
c	cvl	net/minecraft/world/item/ItemPotion
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcmx;Lbtn;Lbrz;)V	a	lambda$finishUsingItem$0
		p	2		effect
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;)Ljava/lang/String;	h	getDescriptionId
		p	1		stack
	m	()Lcuq;	w	getDefaultInstance
	f	I	a	DRINK_DURATION
c	cvm	net/minecraft/world/item/ProjectileItem
	m	(Lcnp;DDDFF)V	a	shoot
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		uncertainty
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	()Lcvm$a;	c	createDispenseConfig
c	cvm$a	net/minecraft/world/item/ProjectileItem$a
	m	()Lcvm$a$a;	a	builder
	m	()Lcvm$b;	b	positionFunction
	m	()F	c	uncertainty
	m	()F	d	power
	m	()Ljava/util/OptionalInt;	e	overrideDispenseEvent
	f	Lcvm$a;	a	DEFAULT
	f	Lcvm$b;	b	positionFunction
	f	F	c	uncertainty
	f	F	d	power
	f	Ljava/util/OptionalInt;	e	overrideDispenseEvent
c	cvm$a$a	net/minecraft/world/item/ProjectileItem$a$a
	m	()Lcvm$a;	a	build
	m	(F)Lcvm$a$a;	a	uncertainty
		p	1		uncertainty
	m	(I)Lcvm$a$a;	a	overrideDispenseEvent
		p	1		overrideDispenseEvent
	m	(Lcvm$b;)Lcvm$a$a;	a	positionFunction
		p	1		positionFunction
	m	(Lku;Lji;)Ljw;	a	lambda$new$0
		p	0		pointer
		p	1		direction
	m	(F)Lcvm$a$a;	b	power
		p	1		power
	f	Lcvm$b;	a	positionFunction
	f	F	b	uncertainty
	f	F	c	power
	f	Ljava/util/OptionalInt;	d	overrideDispenseEvent
c	cvm$b	net/minecraft/world/item/ProjectileItem$b
	m	(Lku;Lji;)Ljw;	getDispensePosition	getDispensePosition
		p	1		pointer
		p	2		facing
c	cvn	net/minecraft/world/item/ItemProjectileWeapon
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Laqu;Lbtn;Lbqq;Lcuq;Ljava/util/List;FFZLbtn;)V	a	shoot
		p	1		world
		p	2		shooter
		p	3		hand
		p	4		stack
		p	5		projectiles
		p	6		speed
		p	7		divergence
		p	8		critical
		p	9		target
	m	(Lbtn;Lcnp;IFFFLbtn;)V	a	shootProjectile
		p	1		shooter
		p	2		projectile
		p	3		index
		p	4		speed
		p	5		divergence
		p	6		yaw
		p	7		target
	m	(Lbtn;Ljava/util/function/Predicate;)Lcuq;	a	getHeldProjectile
		p	0		entity
		p	1		predicate
	m	(Lcuq;Lcuq;Lbtn;)Ljava/util/List;	a	draw
		p	0		stack
		p	1		projectileStack
		p	2		shooter
	m	(Lcuq;Lcuq;Lbtn;Z)Lcuq;	a	useAmmo
		p	0		stack
		p	1		projectileStack
		p	2		shooter
		p	3		multishot
	m	(Ldcw;Lbtn;Lcuq;Lcuq;Z)Lcnp;	a	createProjectile
		p	1		world
		p	2		shooter
		p	3		weaponStack
		p	4		projectileStack
		p	5		critical
	m	()Ljava/util/function/Predicate;	b	getAllSupportedProjectiles
	m	()I	c	getDefaultProjectileRange
	m	()Ljava/util/function/Predicate;	d	getSupportedHeldProjectiles
	m	()I	g	getEnchantmentValue
	m	(Lcuq;)Z	i	lambda$static$1
		p	0		stack
	m	(Lcuq;)I	j	getDurabilityUse
		p	1		projectile
	m	(Lcuq;)Z	k	lambda$static$0
		p	0		stack
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	j	ARROW_OR_FIREWORK
c	cvo	net/minecraft/world/item/EnumItemRarity
	m	(Ljava/lang/String;IILjava/lang/String;Ln;)V	<init>	<init>
		p	3		index
		p	4		name
		p	5		formatting
	m	()Ln;	a	color
	m	(Lcvo;)I	a	lambda$static$1
		p	0		value
	m	()[Lcvo;	b	$values
	m	(Lcvo;)I	b	lambda$static$0
		p	0		value
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcvo;	a	COMMON
	f	Lcvo;	b	UNCOMMON
	f	Lcvo;	c	RARE
	f	Lcvo;	d	EPIC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lyx;	g	STREAM_CODEC
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Ln;	j	color
	f	[Lcvo;	k	$VALUES
c	cvp	net/minecraft/world/item/ItemSaddle
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcmx;Lbtn;Lbqq;)Lbqr;	a	interactLivingEntity
		p	1		stack
		p	2		user
		p	3		entity
		p	4		hand
c	cvq	net/minecraft/world/item/ItemScaffolding
	m	(Ldfy;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		settings
	m	(Lcyd;)Lcyd;	b	updatePlacementContext
		p	1		context
	m	()Z	c	mustSurvive
c	cvr	net/minecraft/world/item/ItemCooldownPlayer
	m	(Laqv;)V	<init>	<init>
		p	1		player
	m	(Lcul;I)V	b	onCooldownStarted
		p	1		item
		p	2		duration
	m	(Lcul;)V	c	onCooldownEnded
		p	1		item
	f	Laqv;	a	player
c	cvs	net/minecraft/world/item/ItemShears
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Ldcw;Ldtc;Ljd;Lbtn;)Z	a	mineBlock
		p	1		stack
		p	2		world
		p	3		state
		p	4		pos
		p	5		miner
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	()Lcxx;	h	createToolProperties
c	cvt	net/minecraft/world/item/ItemShield
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;)Ljava/lang/String;	h	getDescriptionId
		p	1		stack
	m	()Lbsy;	m	getEquipmentSlot
	f	I	a	EFFECTIVE_BLOCK_DELAY
	f	F	b	MINIMUM_DURABILITY_DAMAGE
c	cvu	net/minecraft/world/item/ItemSpade
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	f	Ljava/util/Map;	a	FLATTENABLES
c	cvv	net/minecraft/world/item/SignApplicator
	m	(Ldcw;Ldrs;ZLcmx;)Z	a	tryApplyToSign
		p	1		world
		p	2		signBlockEntity
		p	3		front
		p	4		player
	m	(Ldrt;Lcmx;)Z	a	canApplyToSign
		p	1		signText
		p	2		player
c	cvw	net/minecraft/world/item/ItemSign
	m	(Lcul$a;Ldfy;Ldfy;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
	m	(Lcul$a;Ldfy;Ldfy;Lji;)V	<init>	<init>
		p	1		settings
		p	2		standingBlock
		p	3		wallBlock
		p	4		verticalAttachmentDirection
	m	(Ljd;Ldcw;Lcmx;Lcuq;Ldtc;)Z	a	updateCustomBlockEntityTag
		p	1		pos
		p	2		world
		p	3		player
		p	4		stack
		p	5		state
c	cvx	net/minecraft/world/item/SmithingTemplateItem
	m	(Lwz;Lwz;Lwz;Lwz;Lwz;Ljava/util/List;Ljava/util/List;[Lcpj;)V	<init>	<init>
		p	1		appliesToText
		p	2		ingredientsText
		p	3		titleText
		p	4		baseSlotDescriptionText
		p	5		additionsSlotDescriptionText
		p	6		emptyBaseSlotTextures
		p	7		emptyAdditionsSlotTextures
		p	8		requiredFeatures
	m	()Ljava/util/List;	A	createNetheriteUpgradeMaterialList
	m	(Lakq;[Lcpj;)Lcvx;	a	createArmorTrimTemplate
		p	0		trimPattern
		p	1		requiredFeatures
	m	(Lakr;[Lcpj;)Lcvx;	a	createArmorTrimTemplate
		p	0		trimPatternIn
		p	1		requiredFeatures
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	()Lcvx;	h	createNetheriteUpgradeTemplate
	m	()Lwz;	k	getBaseSlotDescription
	m	()Lwz;	l	getAdditionSlotDescription
	m	()Ljava/util/List;	m	getBaseSlotEmptyIcons
	m	()Ljava/util/List;	n	getAdditionalSlotEmptyIcons
	m	()Ljava/util/List;	x	createTrimmableArmorIconList
	m	()Ljava/util/List;	y	createTrimmableMaterialIconList
	m	()Ljava/util/List;	z	createNetheriteUpgradeIconList
	f	Lakr;	A	EMPTY_SLOT_SHOVEL
	f	Lakr;	B	EMPTY_SLOT_PICKAXE
	f	Lakr;	C	EMPTY_SLOT_INGOT
	f	Lakr;	D	EMPTY_SLOT_REDSTONE_DUST
	f	Lakr;	E	EMPTY_SLOT_QUARTZ
	f	Lakr;	F	EMPTY_SLOT_EMERALD
	f	Lakr;	G	EMPTY_SLOT_DIAMOND
	f	Lakr;	H	EMPTY_SLOT_LAPIS_LAZULI
	f	Lakr;	I	EMPTY_SLOT_AMETHYST_SHARD
	f	Lwz;	J	appliesTo
	f	Lwz;	K	ingredients
	f	Lwz;	L	upgradeDescription
	f	Lwz;	M	baseSlotDescription
	f	Lwz;	N	additionsSlotDescription
	f	Ljava/util/List;	O	baseSlotEmptyIcons
	f	Ljava/util/List;	P	additionalSlotEmptyIcons
	f	Ln;	a	TITLE_FORMAT
	f	Ln;	b	DESCRIPTION_FORMAT
	f	Lwz;	c	INGREDIENTS_TITLE
	f	Lwz;	j	APPLIES_TO_TITLE
	f	Lwz;	k	NETHERITE_UPGRADE
	f	Lwz;	l	ARMOR_TRIM_APPLIES_TO
	f	Lwz;	m	ARMOR_TRIM_INGREDIENTS
	f	Lwz;	n	ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	f	Lwz;	o	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	f	Lwz;	p	NETHERITE_UPGRADE_APPLIES_TO
	f	Lwz;	q	NETHERITE_UPGRADE_INGREDIENTS
	f	Lwz;	r	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	f	Lwz;	s	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	f	Lakr;	t	EMPTY_SLOT_HELMET
	f	Lakr;	u	EMPTY_SLOT_CHESTPLATE
	f	Lakr;	v	EMPTY_SLOT_LEGGINGS
	f	Lakr;	w	EMPTY_SLOT_BOOTS
	f	Lakr;	x	EMPTY_SLOT_HOE
	f	Lakr;	y	EMPTY_SLOT_AXE
	f	Lakr;	z	EMPTY_SLOT_SWORD
c	cvy	net/minecraft/world/item/ItemSnowball
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
c	cvz	net/minecraft/world/item/SolidBucketItem
	m	(Ldfy;Lavo;Lcul$a;)V	<init>	<init>
		p	1		block
		p	2		placeSound
		p	3		settings
	m	()Ljava/lang/String;	a	getDescriptionId
	m	(Lcmx;Ldcw;Ljd;Lewy;)Z	a	emptyContents
		p	1		player
		p	2		world
		p	3		pos
		p	4		hitResult
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldtc;)Lavo;	a	getPlaceSound
		p	1		state
	f	Lavo;	a	placeSound
c	cwa	net/minecraft/world/item/ItemMonsterEgg
	m	(Lbsx;IILcul$a;)V	<init>	<init>
		p	1		type
		p	2		primaryColor
		p	3		secondaryColor
		p	4		settings
	m	(I)I	a	getColor
		p	1		tintIndex
	m	(Lbsx;)Lcwa;	a	byId
		p	0		type
	m	(Lcmx;Lbtp;Lbsx;Laqu;Lexc;Lcuq;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
		p	1		user
		p	2		entity
		p	3		entityType
		p	4		world
		p	5		pos
		p	6		stack
	m	(Lcuq;Lbsx;)Z	a	spawnsEntity
		p	1		stack
		p	2		type
	m	(Lcyf;)Lbqr;	a	useOn
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	()Ljava/lang/Iterable;	h	eggs
	m	()Lcpl;	i	requiredFeatures
	m	(Lcuq;)Lbsx;	i	getType
		p	1		stack
	f	Ljava/util/Map;	a	BY_ID
	f	Lcom/mojang/serialization/MapCodec;	b	ENTITY_TYPE_FIELD_CODEC
	f	I	c	backgroundColor
	f	I	j	highlightColor
	f	Lbsx;	k	defaultType
c	cwb	net/minecraft/world/item/ItemSpectralArrow
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcuq;Lbtn;Lcuq;)Lcnd;	a	createArrow
		p	1		world
		p	2		stack
		p	3		shooter
		p	4		shotFrom
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
c	cwc	net/minecraft/world/item/ItemSplashPotion
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cwd	net/minecraft/world/item/SpyglassItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lbtn;)V	a	stopUsing
		p	1		user
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	m	(Lcuq;Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
c	cwe	net/minecraft/world/item/ItemBlockWallable
	m	(Ldfy;Ldfy;Lcul$a;Lji;)V	<init>	<init>
		p	1		standingBlock
		p	2		wallBlock
		p	3		settings
		p	4		verticalAttachmentDirection
	m	(Ldcz;Ldtc;Ljd;)Z	a	canPlace
		p	1		world
		p	2		state
		p	3		pos
	m	(Ljava/util/Map;Lcul;)V	a	registerBlocks
		p	1		map
		p	2		item
	m	(Lcyd;)Ldtc;	c	getPlacementState
		p	1		context
	f	Ldfy;	a	wallBlock
	f	Lji;	b	attachmentDirection
c	cwf	net/minecraft/world/item/ItemSuspiciousStew
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Ldcw;Lbtn;)Lcuq;	a	finishUsingItem
		p	1		stack
		p	2		world
		p	3		user
	f	I	a	DEFAULT_DURATION
c	cwg	net/minecraft/world/item/ItemSword
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcuq;Lbtn;Lbtn;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcwi;IF)Lcxn;	a	createAttributes
		p	0		material
		p	1		baseAttackDamage
		p	2		attackSpeed
	m	(Ldtc;Ldcw;Ljd;Lcmx;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcuq;Lbtn;Lbtn;)V	b	postHurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	()Lcxx;	k	createToolProperties
c	cwh	net/minecraft/world/item/ItemPotionThrowable
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	()Lcvm$a;	c	createDispenseConfig
c	cwi	net/minecraft/world/item/ToolMaterial
	m	()I	a	getUses
	m	(Lawu;)Lcxx;	a	createToolProperties
		p	1		tag
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()Lawu;	d	getIncorrectBlocksForDrops
	m	()I	e	getEnchantmentValue
	m	()Lcyw;	f	getRepairIngredient
c	cwj	net/minecraft/world/item/ItemToolMaterial
	m	(Lcwi;Lcul$a;)V	<init>	<init>
		p	1		material
		p	2		settings
	m	(Lcuq;Lcuq;)Z	a	isValidRepairItem
		p	1		stack
		p	2		ingredient
	m	()I	g	getEnchantmentValue
	m	()Lcwi;	h	getTier
	f	Lcwi;	a	tier
c	cwk	net/minecraft/world/item/EnumToolMaterial
	m	(Ljava/lang/String;ILawu;IFFILjava/util/function/Supplier;)V	<init>	<init>
		p	3		inverseTag
		p	4		itemDurability
		p	5		miningSpeed
		p	6		attackDamage
		p	7		enchantability
		p	8		repairIngredient
	m	()I	a	getUses
	m	()F	b	getSpeed
	m	()F	c	getAttackDamageBonus
	m	()Lawu;	d	getIncorrectBlocksForDrops
	m	()I	e	getEnchantmentValue
	m	()Lcyw;	f	getRepairIngredient
	m	()Lcyw;	g	lambda$static$5
	m	()Lcyw;	h	lambda$static$4
	m	()Lcyw;	i	lambda$static$3
	m	()Lcyw;	j	lambda$static$2
	m	()Lcyw;	k	lambda$static$1
	m	()Lcyw;	l	lambda$static$0
	m	()[Lcwk;	m	$values
	f	Lcwk;	a	WOOD
	f	Lcwk;	b	STONE
	f	Lcwk;	c	IRON
	f	Lcwk;	d	DIAMOND
	f	Lcwk;	e	GOLD
	f	Lcwk;	f	NETHERITE
	f	Lawu;	g	incorrectBlocksForDrops
	f	I	h	uses
	f	F	i	speed
	f	F	j	damage
	f	I	k	enchantmentValue
	f	Ljava/util/function/Supplier;	l	repairIngredient
	f	[Lcwk;	m	$VALUES
c	cwl	net/minecraft/world/item/ItemTippedArrow
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;)Ljava/lang/String;	h	getDescriptionId
		p	1		stack
	m	()Lcuq;	w	getDefaultInstance
c	cwm	net/minecraft/world/item/TooltipFlag
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	f	Lcwm$a;	a	NORMAL
	f	Lcwm$a;	b	ADVANCED
c	cwm$a	net/minecraft/world/item/TooltipFlag$a
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	m	()Lcwm$a;	c	asCreative
	m	()Z	d	advanced
	m	()Z	e	creative
	f	Z	c	advanced
	f	Z	d	creative
c	cwn	net/minecraft/world/item/ItemTrident
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lbtn;)I	a	getUseDuration
		p	1		stack
		p	2		user
	m	(Lcuq;Lbtn;Lbtn;)Z	a	hurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	(Lcuq;Ldcw;Lbtn;I)V	a	releaseUsing
		p	1		stack
		p	2		world
		p	3		user
		p	4		remainingUseTicks
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Lcmx;)Z	a	canAttackBlock
		p	1		state
		p	2		world
		p	3		pos
		p	4		miner
	m	(Lcuq;)Lcwo;	b	getUseAnimation
		p	1		stack
	m	(Lcuq;Lbtn;Lbtn;)V	b	postHurtEnemy
		p	1		stack
		p	2		target
		p	3		attacker
	m	()I	g	getEnchantmentValue
	m	()Lcxn;	h	createAttributes
	m	(Lcuq;)Z	i	isTooDamagedToUse
		p	0		stack
	m	()Lcxx;	k	createToolProperties
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	SHOOT_POWER
c	cwo	net/minecraft/world/item/EnumAnimation
	m	()[Lcwo;	a	$values
	f	Lcwo;	a	NONE
	f	Lcwo;	b	EAT
	f	Lcwo;	c	DRINK
	f	Lcwo;	d	BLOCK
	f	Lcwo;	e	BOW
	f	Lcwo;	f	SPEAR
	f	Lcwo;	g	CROSSBOW
	f	Lcwo;	h	SPYGLASS
	f	Lcwo;	i	TOOT_HORN
	f	Lcwo;	j	BRUSH
	f	[Lcwo;	k	$VALUES
c	cwp	net/minecraft/world/item/WindChargeItem
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcnp;DDDFF)V	a	shoot
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		uncertainty
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Ldcw;Ljw;Lcuq;Lji;)Lcnp;	a	asProjectile
		p	1		world
		p	2		pos
		p	3		stack
		p	4		direction
	m	(Lku;Lji;)Ljw;	a	lambda$createDispenseConfig$0
		p	0		pointer
		p	1		facing
	m	()Lcvm$a;	c	createDispenseConfig
	f	I	a	COOLDOWN
c	cwq	net/minecraft/world/item/ItemBookAndQuill
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
c	cwr	net/minecraft/world/item/ItemWrittenBook
	m	(Lcul$a;)V	<init>	<init>
		p	1		settings
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		type
	m	(Lcuq;Let;Lcmx;)Z	a	resolveBookComponents
		p	0		book
		p	1		commandSource
		p	2		player
	m	(Ldcw;Lcmx;Lbqq;)Lbqs;	a	use
		p	1		world
		p	2		user
		p	3		hand
	m	(Lcuq;)Lwz;	n	getName
		p	1		stack
c	cws	net/minecraft/world/item/alchemy/PotionRegistry
	m	(Ljava/lang/String;[Lbrz;)V	<init>	<init>
		p	1		baseName
		p	2		effects
	m	([Lbrz;)V	<init>	<init>
		p	1		effects
	m	()Ljava/util/List;	a	getEffects
	m	(Lakq;)Ljava/lang/String;	a	lambda$getName$0
		p	0		key
	m	(Ljava/util/Optional;Ljava/lang/String;)Ljava/lang/String;	a	getName
		p	0		potion
		p	1		prefix
	m	([Lcpj;)Lcws;	a	requiredFeatures
		p	1		requiredFeatures
	m	()Z	b	hasInstantEffects
	m	()Lcpl;	i	requiredFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/lang/String;	c	name
	f	Ljava/util/List;	d	effects
	f	Lcpl;	e	requiredFeatures
c	cwt	net/minecraft/world/item/alchemy/PotionBrewer
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		potionTypes
		p	2		potionRecipes
		p	3		itemRecipes
	m	(Lcpl;)Lcwt;	a	bootstrap
		p	0		enabledFeatures
	m	(Lcuq;)Z	a	isIngredient
		p	1		stack
	m	(Lcuq;Lcuq;)Z	a	hasMix
		p	1		input
		p	2		ingredient
	m	(Lcwt$a;)V	a	addVanillaMixes
		p	0		builder
	m	(Ljm;)Z	a	isBrewablePotion
		p	1		potion
	m	(Lcuq;)Z	b	isContainerIngredient
		p	1		stack
	m	(Lcuq;Lcuq;)Z	b	hasContainerMix
		p	1		input
		p	2		ingredient
	m	(Lcuq;)Z	c	isPotionIngredient
		p	1		stack
	m	(Lcuq;Lcuq;)Z	c	hasPotionMix
		p	1		input
		p	2		ingredient
	m	(Lcuq;)Z	d	isContainer
		p	1		stack
	m	(Lcuq;Lcuq;)Lcuq;	d	mix
		p	1		ingredient
		p	2		input
	f	I	a	BREWING_TIME_SECONDS
	f	Lcwt;	b	EMPTY
	f	Ljava/util/List;	c	containers
	f	Ljava/util/List;	d	potionMixes
	f	Ljava/util/List;	e	containerMixes
c	cwt$a	net/minecraft/world/item/alchemy/PotionBrewer$a
	m	(Lcpl;)V	<init>	<init>
		p	1		enabledFeatures
	m	()Lcwt;	a	build
	m	(Lcul;)V	a	addContainer
		p	1		item
	m	(Lcul;Lcul;Lcul;)V	a	addContainerRecipe
		p	1		input
		p	2		ingredient
		p	3		output
	m	(Lcul;Ljm;)V	a	addStartMix
		p	1		ingredient
		p	2		potion
	m	(Ljm;Lcul;Ljm;)V	a	addMix
		p	1		input
		p	2		ingredient
		p	3		output
	m	(Lcul;)V	b	expectPotion
		p	0		potionType
	f	Ljava/util/List;	a	containers
	f	Ljava/util/List;	b	potionMixes
	f	Ljava/util/List;	c	containerMixes
	f	Lcpl;	d	enabledFeatures
c	cwt$b	net/minecraft/world/item/alchemy/PotionBrewer$PredicatedCombination
	m	(Ljm;Lcyw;Ljm;)V	<init>	<init>
		p	2		ingredient
	m	()Ljm;	a	from
	m	()Lcyw;	b	ingredient
	m	()Ljm;	c	to
	f	Ljm;	a	from
	f	Lcyw;	b	ingredient
	f	Ljm;	c	to
c	cwu	net/minecraft/world/item/alchemy/PotionContents
	m	(Ljm;)V	<init>	<init>
		p	1		potion
	m	()Ljava/lang/Iterable;	a	getAllEffects
	m	(Lbrz;)Lcwu;	a	withEffectAdded
		p	1		customEffect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul;Ljm;)Lcuq;	a	createItemStack
		p	0		item
		p	1		potion
	m	(Ljava/lang/Iterable;)I	a	getColor
		p	0		effects
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;FF)V	a	addPotionTooltip
		p	0		effects
		p	1		textConsumer
		p	2		durationMultiplier
		p	3		tickRate
	m	(Ljava/util/List;Ljm;Lbuu;)V	a	lambda$addPotionTooltip$1
		p	1		attribute
		p	2		modifier
	m	(Ljava/util/function/Consumer;)V	a	forEachEffect
		p	1		effectConsumer
	m	(Ljava/util/function/Consumer;FF)V	a	addPotionTooltip
		p	1		textConsumer
		p	2		durationMultiplier
		p	3		tickRate
	m	(Ljm;)Z	a	is
		p	1		potion
	m	()I	b	getColor
	m	(Ljava/lang/Iterable;)Ljava/util/OptionalInt;	b	getColorOptional
		p	0		effects
	m	(Ljm;)Lcwu;	b	withPotion
		p	1		potion
	m	()Z	c	hasEffects
	m	(Ljm;)I	c	getColor
		p	0		potion
	m	()Ljava/util/List;	d	customEffects
	m	()Ljava/util/Optional;	e	potion
	m	()Ljava/util/Optional;	f	customColor
	f	Lcwu;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/Optional;	d	potion
	f	Ljava/util/Optional;	e	customColor
	f	Ljava/util/List;	f	customEffects
	f	Lwz;	g	NO_EFFECT
	f	I	h	BASE_POTION_COLOR
	f	Lcom/mojang/serialization/Codec;	i	FULL_CODEC
c	cwv	net/minecraft/world/item/alchemy/Potions
	m	(Ljava/lang/String;Lcws;)Ljm;	a	register
		p	0		name
		p	1		potion
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	f	Ljm;	A	HARMING
	f	Ljm;	B	STRONG_HARMING
	f	Ljm;	C	POISON
	f	Ljm;	D	LONG_POISON
	f	Ljm;	E	STRONG_POISON
	f	Ljm;	F	REGENERATION
	f	Ljm;	G	LONG_REGENERATION
	f	Ljm;	H	STRONG_REGENERATION
	f	Ljm;	I	STRENGTH
	f	Ljm;	J	LONG_STRENGTH
	f	Ljm;	K	STRONG_STRENGTH
	f	Ljm;	L	WEAKNESS
	f	Ljm;	M	LONG_WEAKNESS
	f	Ljm;	N	LUCK
	f	Ljm;	O	SLOW_FALLING
	f	Ljm;	P	LONG_SLOW_FALLING
	f	Ljm;	Q	WIND_CHARGED
	f	Ljm;	R	WEAVING
	f	Ljm;	S	OOZING
	f	Ljm;	T	INFESTED
	f	Ljm;	a	WATER
	f	Ljm;	b	MUNDANE
	f	Ljm;	c	THICK
	f	Ljm;	d	AWKWARD
	f	Ljm;	e	NIGHT_VISION
	f	Ljm;	f	LONG_NIGHT_VISION
	f	Ljm;	g	INVISIBILITY
	f	Ljm;	h	LONG_INVISIBILITY
	f	Ljm;	i	LEAPING
	f	Ljm;	j	LONG_LEAPING
	f	Ljm;	k	STRONG_LEAPING
	f	Ljm;	l	FIRE_RESISTANCE
	f	Ljm;	m	LONG_FIRE_RESISTANCE
	f	Ljm;	n	SWIFTNESS
	f	Ljm;	o	LONG_SWIFTNESS
	f	Ljm;	p	STRONG_SWIFTNESS
	f	Ljm;	q	SLOWNESS
	f	Ljm;	r	LONG_SLOWNESS
	f	Ljm;	s	STRONG_SLOWNESS
	f	Ljm;	t	TURTLE_MASTER
	f	Ljm;	u	LONG_TURTLE_MASTER
	f	Ljm;	v	STRONG_TURTLE_MASTER
	f	Ljm;	w	WATER_BREATHING
	f	Ljm;	x	LONG_WATER_BREATHING
	f	Ljm;	y	HEALING
	f	Ljm;	z	STRONG_HEALING
c	cwx	net/minecraft/world/item/armortrim/ArmorTrim
	m	(Ljm;Ljm;)V	<init>	<init>
		p	1		material
		p	2		pattern
	m	(Ljm;Ljm;Z)V	<init>	<init>
		p	1		material
		p	2		pattern
		p	3		showInTooltip
	m	(Ljm;Ljm;ZLjava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
		p	1		material
		p	2		pattern
		p	3		showInTooltip
		p	4		leggingsModelIdGetter
		p	5		genericModelIdGetter
	m	()Ljm;	a	pattern
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Lcwx;)Ljava/lang/Boolean;	a	lambda$static$2
		p	0		trim
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$5
		p	1		materialName
	m	(Ljm;)Lakr;	a	innerTexture
		p	1		armorMaterial
	m	(Ljm;Ljm;)Z	a	hasPatternAndMaterial
		p	1		pattern
		p	2		material
	m	(Ljm;Ljm;Ljm;)Lakr;	a	lambda$new$6
		p	2		materialEntry
	m	(Z)Lcwx;	a	withTooltip
		p	1		showInTooltip
	m	()Ljm;	b	material
	m	(Lcwx;)Ljava/lang/Boolean;	b	lambda$static$0
		p	0		trim
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$new$3
		p	1		materialName
	m	(Ljm;)Lakr;	b	outerTexture
		p	1		armorMaterial
	m	(Ljm;Ljm;)Ljava/lang/String;	b	getColorPaletteSuffix
		p	0		material
		p	1		armorMaterial
	m	(Ljm;Ljm;Ljm;)Lakr;	b	lambda$new$4
		p	2		materialEntry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lwz;	c	UPGRADE_TITLE
	f	Ljm;	d	material
	f	Ljm;	e	pattern
	f	Z	f	showInTooltip
	f	Ljava/util/function/Function;	g	innerTexture
	f	Ljava/util/function/Function;	h	outerTexture
c	cwy	net/minecraft/world/item/armortrim/TrimMaterial
	m	()Ljava/lang/String;	a	assetName
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;Lcul;FLwz;Ljava/util/Map;)Lcwy;	a	create
		p	0		assetName
		p	1		ingredient
		p	2		itemModelIndex
		p	3		description
		p	4		overrideArmorMaterials
	m	()Ljm;	b	ingredient
	m	()F	c	itemModelIndex
	m	()Ljava/util/Map;	d	overrideArmorMaterials
	m	()Lwz;	e	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Ljava/lang/String;	e	assetName
	f	Ljm;	f	ingredient
	f	F	g	itemModelIndex
	f	Ljava/util/Map;	h	overrideArmorMaterials
	f	Lwz;	i	description
c	cwz	net/minecraft/world/item/armortrim/TrimMaterials
	m	(Lcuq;Ljm$c;)Z	a	lambda$getFromIngredient$0
		p	1		recipe
	m	(Ljava/lang/String;)Lakq;	a	registryKey
		p	0		id
	m	(Ljo$a;Lcuq;)Ljava/util/Optional;	a	getFromIngredient
		p	0		registriesLookup
		p	1		stack
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;Lcul;Lxw;F)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
	m	(Lqq;Lakq;Lcul;Lxw;FLjava/util/Map;)V	a	register
		p	0		registry
		p	1		key
		p	2		ingredient
		p	3		style
		p	4		itemModelIndex
		p	5		overrideArmorMaterials
	f	Lakq;	a	QUARTZ
	f	Lakq;	b	IRON
	f	Lakq;	c	NETHERITE
	f	Lakq;	d	REDSTONE
	f	Lakq;	e	COPPER
	f	Lakq;	f	GOLD
	f	Lakq;	g	EMERALD
	f	Lakq;	h	DIAMOND
	f	Lakq;	i	LAPIS
	f	Lakq;	j	AMETHYST
c	cxa	net/minecraft/world/item/armortrim/TrimPattern
	m	()Lakr;	a	assetId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljm;)Lwz;	a	copyWithStyle
		p	1		material
	m	()Ljm;	b	templateItem
	m	()Lwz;	c	description
	m	()Z	d	decal
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lakr;	e	assetId
	f	Ljm;	f	templateItem
	f	Lwz;	g	description
	f	Z	h	decal
c	cxb	net/minecraft/world/item/armortrim/TrimPatterns
	m	(Lcuq;Ljm$c;)Z	a	lambda$getFromTemplate$0
		p	1		pattern
	m	(Ljava/lang/String;)Lakq;	a	registryKey
		p	0		id
	m	(Ljo$a;Lcuq;)Ljava/util/Optional;	a	getFromTemplate
		p	0		registriesLookup
		p	1		stack
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lcul;Lakq;)V	a	register
		p	0		registry
		p	1		template
		p	2		key
	f	Lakq;	a	SENTRY
	f	Lakq;	b	DUNE
	f	Lakq;	c	COAST
	f	Lakq;	d	WILD
	f	Lakq;	e	WARD
	f	Lakq;	f	EYE
	f	Lakq;	g	VEX
	f	Lakq;	h	TIDE
	f	Lakq;	i	SNOUT
	f	Lakq;	j	RIB
	f	Lakq;	k	SPIRE
	f	Lakq;	l	WAYFINDER
	f	Lakq;	m	SHAPER
	f	Lakq;	n	SILENCE
	f	Lakq;	o	RAISER
	f	Lakq;	p	HOST
	f	Lakq;	q	FLOW
	f	Lakq;	r	BOLT
c	cxd	net/minecraft/world/item/component/BlockItemStateProperties
	m	()Z	a	isEmpty
	m	(Ldtc;)Ldtc;	a	apply
		p	1		state
	m	(Ldtc;Lduf;Ljava/lang/Comparable;)Ldtc;	a	lambda$updateState$0
		p	2		valuex
	m	(Ldtc;Lduf;Ljava/lang/String;)Ldtc;	a	updateState
		p	0		state
		p	1		property
		p	2		value
	m	(Lduf;)Ljava/lang/Comparable;	a	get
		p	1		property
	m	(Lduf;Ldtc;)Lcxd;	a	with
		p	1		property
		p	2		fromState
	m	(Lduf;Ljava/lang/Comparable;)Lcxd;	a	with
		p	1		property
		p	2		value
	m	()Ljava/util/Map;	b	properties
	f	Lcxd;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/Map;	d	properties
	f	Lyx;	e	PROPERTIES_STREAM_CODEC
c	cxe	net/minecraft/world/item/component/BookContent
	m	()Ljava/util/List;	a	pages
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
		p	1		pages
c	cxf	net/minecraft/world/item/component/BundleContents
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		stacks
	m	(Ljava/util/List;Lorg/apache/commons/lang3/math/Fraction;)V	<init>	<init>
		p	1		stacks
		p	2		occupancy
	m	()Ljava/util/stream/Stream;	a	itemCopyStream
	m	(I)Lcuq;	a	getItemUnsafe
		p	1		index
	m	(Lcuq;)Lorg/apache/commons/lang3/math/Fraction;	a	getWeight
		p	0		stack
	m	(Lcxf;)Ljava/util/List;	a	lambda$static$1
		p	0		component
	m	(Ljava/util/List;)Lorg/apache/commons/lang3/math/Fraction;	a	computeContentWeight
		p	0		stacks
	m	()Ljava/lang/Iterable;	b	items
	m	(Lcxf;)Ljava/util/List;	b	lambda$static$0
		p	0		component
	m	()Ljava/lang/Iterable;	c	itemsCopy
	m	()I	d	size
	m	()Lorg/apache/commons/lang3/math/Fraction;	e	weight
	m	()Z	f	isEmpty
	f	Lcxf;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lorg/apache/commons/lang3/math/Fraction;	d	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	e	NO_STACK_INDEX
	f	Ljava/util/List;	f	items
	f	Lorg/apache/commons/lang3/math/Fraction;	g	weight
c	cxf$a	net/minecraft/world/item/component/BundleContents$a
	m	(Lcxf;)V	<init>	<init>
		p	1		base
	m	()Lcxf$a;	a	clearItems
	m	(Lcrq;Lcmx;)I	a	tryTransfer
		p	1		slot
		p	2		player
	m	(Lcuq;)I	a	tryInsert
		p	1		stack
	m	()Lcuq;	b	removeOne
	m	(Lcuq;)I	b	findStackIndex
		p	1		stack
	m	()Lorg/apache/commons/lang3/math/Fraction;	c	weight
	m	(Lcuq;)I	c	getMaxAmountToAdd
		p	1		stack
	m	()Lcxf;	d	toImmutable
	f	Ljava/util/List;	a	items
	f	Lorg/apache/commons/lang3/math/Fraction;	b	weight
c	cxg	net/minecraft/world/item/component/ChargedProjectiles
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		projectiles
	m	()Ljava/util/List;	a	getItems
	m	(Lcul;)Z	a	contains
		p	1		item
	m	(Lcuq;)Lcxg;	a	of
		p	0		projectile
	m	(Lcxg;)Ljava/util/List;	a	lambda$static$1
	m	(Ljava/util/List;)Lcxg;	a	of
		p	0		projectiles
	m	()Z	b	isEmpty
	m	(Lcxg;)Ljava/util/List;	b	lambda$static$0
	f	Lcxg;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/List;	d	items
c	cxh	net/minecraft/world/item/component/CustomData
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	()I	a	size
	m	(Lbsr;)V	a	loadInto
		p	1		entity
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapDecoder;)Lcom/mojang/serialization/DataResult;	a	read
		p	1		ops
		p	2		decoder
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapEncoder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	update
		p	1		ops
		p	2		encoder
		p	3		value
	m	(Lcom/mojang/serialization/MapDecoder;)Lcom/mojang/serialization/DataResult;	a	read
		p	1		decoder
	m	(Lcxh;)Lub;	a	lambda$static$3
		p	0		component
	m	(Ldqh;Ljo$a;)Z	a	loadInto
		p	1		blockEntity
		p	2		registryLookup
	m	(Ljava/lang/String;)Z	a	contains
		p	1		key
	m	(Ljava/util/function/Consumer;)Lcxh;	a	update
		p	1		nbtConsumer
	m	(Lkp;Lcuq;Ljava/util/function/Consumer;)V	a	update
		p	0		type
		p	1		stack
		p	2		nbtSetter
	m	(Lkp;Lcuq;Lub;)V	a	set
		p	0		type
		p	1		stack
		p	2		nbt
	m	(Lkp;Lub;)Ljava/util/function/Predicate;	a	itemMatcher
		p	0		type
		p	1		nbt
	m	(Lkp;Lub;Lcuq;)Z	a	lambda$itemMatcher$4
		p	2		stack
	m	(Lub;)Lcxh;	a	of
		p	0		nbt
	m	(Luy;)Lcxh;	a	lambda$update$5
		p	0		nbt
	m	()Z	b	isEmpty
	m	(Lcxh;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
		p	0		component
	m	(Lub;)Z	b	matchedBy
		p	1		nbt
	m	()Lub;	c	copyTag
	m	(Lcxh;)Ljava/lang/String;	c	lambda$static$1
	m	()Lub;	d	getUnsafe
	m	(Lcxh;)Lub;	d	lambda$static$0
		p	0		component
	f	Lcxh;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC_WITH_ID
	f	Lyx;	d	STREAM_CODEC
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lub;	f	tag
c	cxi	net/minecraft/world/item/component/CustomModelData
	m	()I	a	value
	f	Lcxi;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	I	d	value
c	cxj	net/minecraft/world/item/component/DebugStickState
	m	()Ljava/util/Map;	a	properties
	m	(Ljm;)Lcom/mojang/serialization/Codec;	a	lambda$static$2
		p	0		block
	m	(Ljm;Lduf;)Lcxj;	a	withProperty
		p	1		block
		p	2		property
	m	(Ljm;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	1		property
	m	(Ljm;Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
	f	Lcxj;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	properties
c	cxk	net/minecraft/world/item/component/DyedItemColor
	m	()I	a	rgb
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Lcuq;I)I	a	getOrDefault
		p	0		stack
		p	1		defaultColor
	m	(Lcuq;Ljava/util/List;)Lcuq;	a	applyDyes
		p	0		stack
		p	1		dyes
	m	(Ljava/lang/Integer;)Lcxk;	a	lambda$static$1
		p	0		rgb
	m	(Z)Lcxk;	a	withTooltip
		p	1		showInTooltip
	m	()Z	b	showInTooltip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	LEATHER_COLOR
	f	I	d	rgb
	f	Z	e	showInTooltip
	f	Lcom/mojang/serialization/Codec;	f	FULL_CODEC
c	cxl	net/minecraft/world/item/component/FireworkExplosion
	m	()Lcxl$a;	a	shape
	m	(I)Lwz;	a	getColorName
		p	0		color
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)Lcxl;	a	withFadeColors
		p	1		fadeColors
	m	(Ljava/util/function/Consumer;)V	a	addShapeNameTooltip
		p	1		textConsumer
	m	(Lxn;Lit/unimi/dsi/fastutil/ints/IntList;)Lwz;	a	appendColors
		p	0		text
		p	1		colors
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	colors
	m	(Ljava/util/function/Consumer;)V	b	addAdditionalTooltip
		p	1		textConsumer
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	c	fadeColors
	m	()Z	d	hasTrail
	m	()Z	e	hasTwinkle
	f	Lcxl;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	COLOR_LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lcxl$a;	e	shape
	f	Lit/unimi/dsi/fastutil/ints/IntList;	f	colors
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	fadeColors
	f	Z	h	hasTrail
	f	Z	i	hasTwinkle
	f	Lyx;	j	COLOR_LIST_STREAM_CODEC
	f	Lwz;	k	CUSTOM_COLOR_NAME
c	cxl$a	net/minecraft/world/item/component/FireworkExplosion$a
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()Lxn;	a	getName
	m	(I)Lcxl$a;	a	byId
		p	0		id
	m	()I	b	getId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcxl$a;	d	$values
	f	Lcxl$a;	a	SMALL_BALL
	f	Lcxl$a;	b	LARGE_BALL
	f	Lcxl$a;	c	STAR
	f	Lcxl$a;	d	CREEPER
	f	Lcxl$a;	e	BURST
	f	Lyx;	f	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/function/IntFunction;	h	BY_ID
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	[Lcxl$a;	k	$VALUES
c	cxm	net/minecraft/world/item/component/Fireworks
	m	()I	a	flightDuration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Ljava/util/function/Consumer;Lwz;)V	a	lambda$addToTooltip$1
		p	1		text
	m	()Ljava/util/List;	b	explosions
	f	I	a	MAX_EXPLOSIONS
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	I	d	flightDuration
	f	Ljava/util/List;	e	explosions
c	cxn	net/minecraft/world/item/component/ItemAttributeModifiers
	m	()Lcxn$a;	a	builder
	m	(DLbsy;)D	a	compute
		p	1		base
		p	3		slot
	m	(Lbsy;Ljava/util/function/BiConsumer;)V	a	forEach
		p	1		slot
		p	2		attributeConsumer
	m	(Lbsz;Ljava/util/function/BiConsumer;)V	a	forEach
		p	1		slot
		p	2		attributeConsumer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$2
		p	0		format
	m	(Ljava/util/List;)Lcxn;	a	lambda$static$1
		p	0		attributeModifiers
	m	(Ljm;Lbuu;Lbsz;)Lcxn;	a	withModifierAdded
		p	1		attribute
		p	2		modifier
		p	3		slot
	m	(Z)Lcxn;	a	withTooltip
		p	1		showInTooltip
	m	()Ljava/util/List;	b	modifiers
	m	()Z	c	showInTooltip
	f	Lcxn;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/text/DecimalFormat;	d	ATTRIBUTE_MODIFIER_FORMAT
	f	Ljava/util/List;	e	modifiers
	f	Z	f	showInTooltip
	f	Lcom/mojang/serialization/Codec;	g	FULL_CODEC
c	cxn$1	net/minecraft/world/item/component/ItemAttributeModifiers$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
c	cxn$a	net/minecraft/world/item/component/ItemAttributeModifiers$a
	m	()Lcxn;	a	build
	m	(Ljm;Lbuu;Lbsz;)Lcxn$a;	a	add
		p	1		attribute
		p	2		modifier
		p	3		slot
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	cxn$b	net/minecraft/world/item/component/ItemAttributeModifiers$b
	m	()Ljm;	a	attribute
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljm;Lakr;)Z	a	matches
		p	1		attribute
		p	2		modifierId
	m	()Lbuu;	b	modifier
	m	()Lbsz;	c	slot
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljm;	c	attribute
	f	Lbuu;	d	modifier
	f	Lbsz;	e	slot
c	cxo	net/minecraft/world/item/component/ItemContainerContents
	m	(I)V	<init>	<init>
		p	1		size
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		stacks
	m	(Ljv;)V	<init>	<init>
		p	1		stacks
	m	()Lcuq;	a	copyOne
	m	(Lcuq;)Z	a	lambda$nonEmptyItems$2
		p	0		stack
	m	(Lcxo;)Ljava/util/List;	a	lambda$static$0
		p	0		component
	m	(Ljava/util/List;)Lcxo;	a	fromItems
		p	0		stacks
	m	(Ljv;)V	a	copyInto
		p	1		stacks
	m	()Ljava/util/stream/Stream;	b	stream
	m	(Lcuq;)Z	b	lambda$nonEmptyStream$1
		p	0		stack
	m	(Ljava/util/List;)Lcxo;	b	fromSlots
		p	0		slots
	m	()Ljava/util/stream/Stream;	c	nonEmptyStream
	m	(Ljava/util/List;)I	c	findLastNonEmptySlot
		p	0		stacks
	m	()Ljava/lang/Iterable;	d	nonEmptyItems
	m	()Ljava/lang/Iterable;	e	nonEmptyItemsCopy
	m	()Ljava/util/List;	f	asSlots
	f	Lcxo;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	I	d	NO_SLOT
	f	I	e	MAX_SIZE
	f	Ljv;	f	items
	f	I	g	hashCode
c	cxo$a	net/minecraft/world/item/component/ItemContainerContents$a
	m	()I	a	index
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcuq;	b	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	index
	f	Lcuq;	c	item
c	cxp	net/minecraft/world/item/component/ItemLore
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		lines
	m	()Ljava/util/List;	a	lines
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Lwz;)Lcxp;	a	withLineAdded
		p	1		line
	m	()Ljava/util/List;	b	styledLines
	m	(Lwz;)Lwz;	b	lambda$new$0
		p	0		style
	f	Lcxp;	a	EMPTY
	f	I	b	MAX_LINES
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Ljava/util/List;	e	lines
	f	Ljava/util/List;	f	styledLines
	f	Lxw;	g	LORE_STYLE
c	cxq	net/minecraft/world/item/component/LodestoneTracker
	m	()Ljava/util/Optional;	a	target
	m	(Laqu;)Lcxq;	a	tick
		p	1		world
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	tracked
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/Optional;	c	target
	f	Z	d	tracked
c	cxr	net/minecraft/world/item/component/MapDecorations
	m	()Ljava/util/Map;	a	decorations
	m	(Ljava/lang/String;Lcxr$a;)Lcxr;	a	withDecoration
		p	1		id
		p	2		decoration
	f	Lcxr;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	decorations
c	cxr$a	net/minecraft/world/item/component/MapDecorations$a
	m	()Ljm;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()D	b	x
	m	()D	c	z
	m	()F	d	rotation
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	type
	f	D	c	x
	f	D	d	z
	f	F	e	rotation
c	cxs	net/minecraft/world/item/component/MapItemColor
	m	()I	a	rgb
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lcxs;	c	DEFAULT
	f	I	d	rgb
c	cxt	net/minecraft/world/item/component/MapPostProcessing
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		id
	m	()I	a	id
	m	()[Lcxt;	b	$values
	f	Lcxt;	a	LOCK
	f	Lcxt;	b	SCALE
	f	Ljava/util/function/IntFunction;	c	ID_MAP
	f	Lyx;	d	STREAM_CODEC
	f	I	e	id
	f	[Lcxt;	f	$VALUES
c	cxu	net/minecraft/world/item/component/ResolvableProfile
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
		p	1		gameProfile
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/authlib/properties/PropertyMap;)V	<init>	<init>
		p	1		name
		p	2		id
		p	3		properties
	m	()Ljava/util/concurrent/CompletableFuture;	a	resolve
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/lang/String;)Lcxu;	a	lambda$static$1
		p	0		name
	m	(Ljava/util/Optional;)Lcxu;	a	lambda$resolve$5
		p	1		profile
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	createProfile
		p	0		name
		p	1		id
		p	2		properties
	m	()Z	b	isResolved
	m	(Ljava/util/Optional;)Lcxu;	b	lambda$resolve$3
	m	()Ljava/util/Optional;	c	name
	m	()Ljava/util/Optional;	d	id
	m	()Lcom/mojang/authlib/properties/PropertyMap;	e	properties
	m	()Lcom/mojang/authlib/GameProfile;	f	gameProfile
	m	()Lcom/mojang/authlib/GameProfile;	g	lambda$resolve$4
	m	()Lcom/mojang/authlib/GameProfile;	h	lambda$resolve$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/Optional;	c	name
	f	Ljava/util/Optional;	d	id
	f	Lcom/mojang/authlib/properties/PropertyMap;	e	properties
	f	Lcom/mojang/authlib/GameProfile;	f	gameProfile
	f	Lcom/mojang/serialization/Codec;	g	FULL_CODEC
c	cxv	net/minecraft/world/item/component/SeededContainerLoot
	m	()Lakq;	a	lootTable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()J	b	seed
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakq;	b	lootTable
	f	J	c	seed
c	cxw	net/minecraft/world/item/component/SuspiciousStewEffects
	m	()Ljava/util/List;	a	effects
	m	(Lcxw$a;)Lcxw;	a	withEffectAdded
		p	1		stewEffect
	f	Lcxw;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/List;	d	effects
c	cxw$a	net/minecraft/world/item/component/SuspiciousStewEffects$a
	m	()Lbrz;	a	createEffectInstance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljm;	b	effect
	m	()I	c	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljm;	c	effect
	f	I	d	duration
c	cxx	net/minecraft/world/item/component/Tool
	m	()Ljava/util/List;	a	rules
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;)F	a	getMiningSpeed
		p	1		state
	m	()F	b	defaultMiningSpeed
	m	(Ldtc;)Z	b	isCorrectForDrops
		p	1		state
	m	()I	c	damagePerBlock
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljava/util/List;	c	rules
	f	F	d	defaultMiningSpeed
	f	I	e	damagePerBlock
c	cxx$a	net/minecraft/world/item/component/Tool$a
	m	()Ljq;	a	blocks
	m	(Lawu;)Lcxx$a;	a	deniesDrops
		p	0		tag
	m	(Lawu;F)Lcxx$a;	a	minesAndDrops
		p	0		blocks
		p	1		speed
	m	(Lawu;Ljava/util/Optional;Ljava/util/Optional;)Lcxx$a;	a	forTag
		p	0		tag
		p	1		speed
		p	2		correctForDrops
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/List;F)Lcxx$a;	a	minesAndDrops
		p	0		blocks
		p	1		speed
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)Lcxx$a;	a	forBlocks
		p	0		blocks
		p	1		speed
		p	2		correctForDrops
	m	()Ljava/util/Optional;	b	speed
	m	(Lawu;F)Lcxx$a;	b	overrideSpeed
		p	0		tag
		p	1		speed
	m	(Ljava/util/List;F)Lcxx$a;	b	overrideSpeed
		p	0		blocks
		p	1		speed
	m	()Ljava/util/Optional;	c	correctForDrops
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljq;	c	blocks
	f	Ljava/util/Optional;	d	speed
	f	Ljava/util/Optional;	e	correctForDrops
c	cxy	net/minecraft/world/item/component/TooltipProvider
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
c	cxz	net/minecraft/world/item/component/Unbreakable
	m	()Z	a	showInTooltip
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Z)Lcxz;	a	withTooltip
		p	1		showInTooltip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Z	c	showInTooltip
	f	Lwz;	d	TOOLTIP
c	cya	net/minecraft/world/item/component/WritableBookContent
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		pages
	m	()Ljava/util/List;	a	pages
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
		p	1		pages
	m	(Z)Ljava/util/stream/Stream;	a	getPages
		p	1		shouldFilter
	m	(ZLarl;)Ljava/lang/String;	a	lambda$getPages$1
		p	1		page
	m	(Ljava/util/List;)Lcya;	b	withReplacedPages
	f	Lcya;	a	EMPTY
	f	I	b	PAGE_EDIT_LENGTH
	f	I	c	MAX_PAGES
	f	Lcom/mojang/serialization/Codec;	d	PAGES_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lyx;	f	STREAM_CODEC
	f	Ljava/util/List;	g	pages
	f	Lcom/mojang/serialization/Codec;	h	PAGE_CODEC
c	cyb	net/minecraft/world/item/component/WrittenBookContent
	m	()Ljava/util/List;	a	pages
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	pagesCodec
		p	0		textCodec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Let;Lcmx;)Lcyb;	a	resolve
		p	1		source
		p	2		player
	m	(Let;Lcmx;Larl;)Ljava/util/Optional;	a	resolvePage
		p	0		source
		p	1		player
		p	2		page
	m	(Let;Lcmx;Lwz;)Ljava/util/Optional;	a	lambda$resolvePage$1
		p	2		text
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
		p	1		pages
	m	(Lwz;Ljo$a;)Z	a	isPageTooLarge
		p	0		text
		p	1		lookup
	m	(Z)Ljava/util/List;	a	getPages
		p	1		shouldFilter
	m	(ZLarl;)Lwz;	a	lambda$getPages$2
		p	1		page
	m	()Lcyb;	b	tryCraftCopy
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	pageCodec
		p	0		textCodec
	m	(Ljava/util/List;)Lcyb;	b	withReplacedPages
	m	()Lcyb;	c	markResolved
	m	()Larl;	d	title
	m	()Ljava/lang/String;	e	author
	m	()I	f	generation
	m	()Z	g	resolved
	f	Lcyb;	a	EMPTY
	f	I	b	PAGE_LENGTH
	f	I	c	TITLE_LENGTH
	f	I	d	TITLE_MAX_LENGTH
	f	I	e	MAX_GENERATION
	f	I	f	MAX_CRAFTABLE_GENERATION
	f	Lcom/mojang/serialization/Codec;	g	CONTENT_CODEC
	f	Lcom/mojang/serialization/Codec;	h	PAGES_CODEC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	Lyx;	j	STREAM_CODEC
	f	Larl;	k	title
	f	Ljava/lang/String;	l	author
	f	I	m	generation
	f	Ljava/util/List;	n	pages
	f	Z	o	resolved
c	cyd	net/minecraft/world/item/context/BlockActionContext
	m	(Lcmx;Lbqq;Lcuq;Lewy;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		stack
		p	4		hitResult
	m	(Lcyf;)V	<init>	<init>
		p	1		context
	m	(Ldcw;Lcmx;Lbqq;Lcuq;Lewy;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Ljd;	a	getClickedPos
	m	(Lcyd;Ljd;Lji;)Lcyd;	a	at
		p	0		context
		p	1		pos
		p	2		side
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lji;	d	getNearestLookingDirection
	m	()Lji;	e	getNearestLookingVerticalDirection
	m	()[Lji;	f	getNearestLookingDirections
	f	Z	a	replaceClicked
	f	Ljd;	b	relativePos
c	cye	net/minecraft/world/item/context/BlockActionContextDirectional
	m	(Ldcw;Ljd;Lji;Lcuq;Lji;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		facing
		p	4		stack
		p	5		side
	m	()Ljd;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Lji;	d	getNearestLookingDirection
	m	()[Lji;	f	getNearestLookingDirections
	m	()Lji;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	f	Lji;	b	direction
c	cye$1	net/minecraft/world/item/context/BlockActionContextDirectional$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	cyf	net/minecraft/world/item/context/ItemActionContext
	m	(Lcmx;Lbqq;Lewy;)V	<init>	<init>
		p	1		player
		p	2		hand
		p	3		hit
	m	(Ldcw;Lcmx;Lbqq;Lcuq;Lewy;)V	<init>	<init>
		p	1		world
		p	2		player
		p	3		hand
		p	4		stack
		p	5		hit
	m	()Ljd;	a	getClickedPos
	m	()Lji;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
	m	()Lewy;	j	getHitResult
	m	()Lji;	k	getClickedFace
	m	()Lexc;	l	getClickLocation
	m	()Z	m	isInside
	m	()Lcuq;	n	getItemInHand
	m	()Lcmx;	o	getPlayer
	m	()Lbqq;	p	getHand
	m	()Ldcw;	q	getLevel
	f	Lcmx;	a	player
	f	Lbqq;	b	hand
	f	Lewy;	c	hitResult
	f	Ldcw;	d	level
	f	Lcuq;	e	itemStack
c	cyh	net/minecraft/world/item/crafting/RecipeCooking
	m	(Lczf;Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)V	<init>	<init>
		p	1		type
		p	2		group
		p	3		category
		p	4		ingredient
		p	5		result
		p	6		experience
		p	7		cookingTime
	m	()Ljv;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()F	b	getExperience
	m	()Ljava/lang/String;	c	getGroup
	m	()I	d	getCookingTime
	m	()Lczf;	e	getType
	m	()Lcyn;	f	category
	f	Lczf;	a	type
	f	Lcyn;	b	category
	f	Ljava/lang/String;	c	group
	f	Lcyw;	d	ingredient
	f	Lcuq;	e	result
	f	F	f	experience
	f	I	g	cookingTime
c	cyh$a	net/minecraft/world/item/crafting/RecipeCooking$a
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)Lcyh;	create	create
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
c	cyi	net/minecraft/world/item/crafting/RecipeArmorDye
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	cyj	net/minecraft/world/item/crafting/RecipeBannerDuplicate
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;)Ljv;	a	getRemainingItems
		p	1		input
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;)Ljv;	a	getRemainingItems
		p	1		input
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	cyk	net/minecraft/world/item/crafting/RecipeBlasting
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcze;	at_	getSerializer
	m	()Lcuq;	g	getToastSymbol
c	cyl	net/minecraft/world/item/crafting/RecipeBookClone
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;)Ljv;	a	getRemainingItems
		p	1		input
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;)Ljv;	a	getRemainingItems
		p	1		input
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	cym	net/minecraft/world/item/crafting/RecipeCampfire
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcze;	at_	getSerializer
	m	()Lcuq;	g	getToastSymbol
c	cyn	net/minecraft/world/item/crafting/CookingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lcyn;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcyn;	a	FOOD
	f	Lcyn;	b	BLOCKS
	f	Lcyn;	c	MISC
	f	Lazk$a;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcyn;	f	$VALUES
c	cyo	net/minecraft/world/item/crafting/CraftingBookCategory
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		id
		p	4		index
	m	()I	a	id
	m	()[Lcyo;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lcyo;	a	BUILDING
	f	Lcyo;	b	REDSTONE
	f	Lcyo;	c	EQUIPMENT
	f	Lcyo;	d	MISC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lyx;	g	STREAM_CODEC
	f	Ljava/lang/String;	h	name
	f	I	i	id
	f	[Lcyo;	j	$VALUES
c	cyp	net/minecraft/world/item/crafting/CraftingInput
	m	(IILjava/util/List;)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		stacks
	m	()I	a	size
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	getItem
		p	1		x
		p	2		y
	m	(IILjava/util/List;)Lcyp;	a	of
		p	0		width
		p	1		height
		p	2		stacks
	m	()Z	b	isEmpty
	m	(IILjava/util/List;)Lcyp$a;	b	ofPositioned
		p	0		width
		p	1		height
		p	2		stacks
	m	()Lcnb;	c	stackedContents
	m	()Ljava/util/List;	d	items
	m	()I	e	ingredientCount
	m	()I	f	width
	m	()I	g	height
	f	Lcyp;	a	EMPTY
	f	I	b	width
	f	I	c	height
	f	Ljava/util/List;	d	items
	f	Lcnb;	e	stackedContents
	f	I	f	ingredientCount
c	cyp$a	net/minecraft/world/item/crafting/CraftingInput$a
	m	()Lcyp;	a	input
	m	()I	b	left
	m	()I	c	top
	f	Lcyp$a;	a	EMPTY
	f	Lcyp;	b	input
	f	I	c	left
	f	I	d	top
c	cyq	net/minecraft/world/item/crafting/RecipeCrafting
	m	()Lcyo;	d	category
	m	()Lczf;	e	getType
c	cyr	net/minecraft/world/item/crafting/IRecipeComplex
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Z	as_	isSpecial
	m	()Lcyo;	d	category
	f	Lcyo;	a	category
c	cys	net/minecraft/world/item/crafting/DecoratedPotRecipe
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	cyt	net/minecraft/world/item/crafting/RecipeFireworks
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	f	Lcyw;	a	PAPER_INGREDIENT
	f	Lcyw;	b	GUNPOWDER_INGREDIENT
	f	Lcyw;	c	STAR_INGREDIENT
c	cyu	net/minecraft/world/item/crafting/RecipeFireworksFade
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
	f	Lcyw;	a	STAR_INGREDIENT
c	cyv	net/minecraft/world/item/crafting/RecipeFireworksStar
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
		p	0		typeModifiers
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	f	Lcyw;	a	SHAPE_INGREDIENT
	f	Lcyw;	b	TRAIL_INGREDIENT
	f	Lcyw;	c	TWINKLE_INGREDIENT
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Lcyw;	e	GUNPOWDER_INGREDIENT
c	cyw	net/minecraft/world/item/crafting/RecipeItemStack
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		entries
	m	([Lcyw$c;)V	<init>	<init>
		p	1		entries
	m	()[Lcuq;	a	getItems
	m	(I)[Lcuq;	a	lambda$getItems$4
	m	(Lawu;)Lcyw;	a	of
		p	0		tag
	m	(Lcom/mojang/datafixers/util/Either;)Lcyw;	a	lambda$codec$9
		p	0		either
	m	(Lcuq;)Z	a	test
	m	(Lcyw$c;)Lcyw;	a	lambda$codec$8
		p	0		entry
	m	(Lcyw;)Ljava/util/List;	a	lambda$static$1
	m	(Ljava/util/List;)Lcyw;	a	lambda$static$0
	m	(Ljava/util/stream/Stream;)Lcyw;	a	of
		p	0		stacks
	m	(Z)Lcom/mojang/serialization/Codec;	a	codec
		p	0		allowEmpty
	m	(ZLcyw;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$11
		p	1		ingredient
	m	(ZLjava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$7
		p	1		entries
	m	([Lcuq;)Lcyw;	a	of
		p	0		stacks
	m	([Ldcv;)Lcyw;	a	of
		p	0		items
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getStackingIds
	m	(I)[Lcyw$c;	b	lambda$new$2
	m	(Lcuq;)Z	b	lambda$of$5
		p	0		stack
	m	(Lcyw$c;)Ljava/util/stream/Stream;	b	lambda$getItems$3
		p	0		entry
	m	(Ljava/util/stream/Stream;)Lcyw;	b	fromValues
		p	0		entries
	m	()Z	c	isEmpty
	m	()Lcyw;	d	of
	m	()Ljava/lang/String;	e	lambda$codec$10
	m	()Ljava/lang/String;	f	lambda$codec$6
	f	Lcyw;	a	EMPTY
	f	Lyx;	b	CONTENTS_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	CODEC_NONEMPTY
	f	[Lcyw$c;	e	values
	f	[Lcuq;	f	itemStacks
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	stackingIds
c	cyw$a	net/minecraft/world/item/crafting/RecipeItemStack$StackProvider
	m	(Lcuq;)V	<init>	<init>
		p	1		stack
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyw$a;)Lcuq;	a	lambda$static$0
		p	0		entry
	m	()Lcuq;	b	item
	f	Lcuq;	b	item
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cyw$b	net/minecraft/world/item/crafting/RecipeItemStack$b
	m	(Lawu;)V	<init>	<init>
		p	1		tag
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyw$b;)Lawu;	a	lambda$static$0
		p	0		entry
	m	()Lawu;	b	tag
	f	Lawu;	b	tag
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	cyw$c	net/minecraft/world/item/crafting/RecipeItemStack$Provider
	m	()Ljava/util/Collection;	a	getItems
	m	(Lcom/mojang/datafixers/util/Either;)Lcyw$c;	a	lambda$static$2
		p	0		either
	m	(Lcyw$a;)Ljava/lang/Record;	a	lambda$static$0
		p	0		stackEntry
	m	(Lcyw$b;)Ljava/lang/Record;	a	lambda$static$1
		p	0		tagEntry
	m	(Lcyw$c;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$3
		p	0		entry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	cyx	net/minecraft/world/item/crafting/RecipeMapClone
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	cyy	net/minecraft/world/item/crafting/RecipeMapExtend
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(Lcyp;)Lcuq;	a	findFilledMap
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Z	as_	isSpecial
	m	()Lcze;	at_	getSerializer
c	cyz	net/minecraft/world/item/crafting/IRecipe
	m	()Ljv;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyw;)Z	a	lambda$isIncomplete$0
		p	0		ingredient
	m	(Lczc;)Ljv;	a	getRemainingItems
		p	1		input
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Z	as_	isSpecial
	m	()Lcze;	at_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lczf;	e	getType
	m	()Lcuq;	g	getToastSymbol
	m	()Z	h	showNotification
	m	()Z	i	isIncomplete
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Lyx;	i	STREAM_CODEC
c	cza	net/minecraft/world/item/crafting/RecipeCache
	m	(I)V	<init>	<init>
		p	1		size
	m	(I)V	a	moveEntryToFront
		p	1		index
	m	(Lcyp;Lczb;)V	a	insert
		p	1		input
		p	2		recipe
	m	(Lcyp;Ldcw;)Ljava/util/Optional;	a	compute
		p	1		input
		p	2		world
	m	(Ldcw;)V	a	validateRecipeManager
		p	1		world
	m	(Ldcw;Lcyp;)Ljava/util/Optional;	a	get
		p	1		world
		p	2		input
	f	[Lcza$a;	a	entries
	f	Ljava/lang/ref/WeakReference;	b	cachedRecipeManager
c	cza$a	net/minecraft/world/item/crafting/RecipeCache$a
	m	()Ljv;	a	key
	m	(Lcyp;)Z	a	matches
		p	1		input
	m	()I	b	width
	m	()I	c	height
	m	()Lczb;	d	value
	f	Ljv;	a	key
	f	I	b	width
	f	I	c	height
	f	Lczb;	d	value
c	czb	net/minecraft/world/item/crafting/RecipeHolder
	m	()Lakr;	a	id
	m	()Lcyz;	b	value
	f	Lyx;	a	STREAM_CODEC
	f	Lakr;	b	id
	f	Lcyz;	c	value
c	czc	net/minecraft/world/item/crafting/RecipeInput
	m	()I	a	size
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	()Z	b	isEmpty
c	czd	net/minecraft/world/item/crafting/CraftingManager
	m	(Ljo$a;)V	<init>	<init>
		p	1		registryLookup
	m	()Z	a	hadErrorsLoading
	m	(Lakr;)Ljava/util/Optional;	a	byKey
		p	1		id
	m	(Lakr;Lcom/google/gson/JsonObject;Ljo$a;)Lczb;	a	fromJson
		p	0		id
		p	1		json
		p	2		registryLookup
	m	(Lczc;Ldcw;Lczb;)Z	a	lambda$getRecipesFor$1
		p	2		recipe
	m	(Lczf;)Ljava/util/List;	a	getAllRecipesFor
		p	1		type
	m	(Lczf;Lakr;)Lczb;	a	byKeyTyped
		p	1		type
		p	2		id
	m	(Lczf;Lczc;Ldcw;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		input
		p	3		world
	m	(Lczf;Lczc;Ldcw;Lakr;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		input
		p	3		world
		p	4		id
	m	(Lczf;Lczc;Ldcw;Lczb;)Ljava/util/Optional;	a	getRecipeFor
		p	1		type
		p	2		input
		p	3		world
		p	4		recipe
	m	(Ldcw;Lczb;)Ljava/lang/String;	a	lambda$getRecipesFor$2
		p	1		entry
	m	(Ljava/lang/Iterable;)V	a	replaceRecipes
		p	1		recipes
	m	(Ljava/lang/Object;Laue;Lbnf;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	(Ljava/util/Map;Laue;Lbnf;)V	a	apply
		p	1		prepared
		p	2		manager
		p	3		profiler
	m	()Ljava/util/Collection;	b	getOrderedRecipes
	m	(Lczc;Ldcw;Lczb;)Z	b	lambda$getRecipeFor$0
		p	2		recipe
	m	(Lczf;)Lczd$a;	b	createCheck
		p	0		type
	m	(Lczf;Lczc;Ldcw;)Ljava/util/List;	b	getRecipesFor
		p	1		type
		p	2		input
		p	3		world
	m	(Lczf;)Ljava/util/Collection;	c	byType
		p	1		type
	m	(Lczf;Lczc;Ldcw;)Ljv;	c	getRemainingItemsFor
		p	1		type
		p	2		input
		p	3		world
	m	()Ljava/util/Collection;	d	getRecipes
	m	()Ljava/util/stream/Stream;	e	getRecipeIds
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljo$a;	c	registries
	f	Lcom/google/common/collect/Multimap;	d	byType
	f	Ljava/util/Map;	e	byName
	f	Z	f	hasErrors
c	czd$1	net/minecraft/world/item/crafting/CraftingManager$1
	m	(Lczc;Ldcw;)Ljava/util/Optional;	a	getRecipeFor
		p	1		input
		p	2		world
	f	Lczf;	a	val$type
	f	Lakr;	b	lastRecipe
c	czd$a	net/minecraft/world/item/crafting/CraftingManager$a
	m	(Lczc;Ldcw;)Ljava/util/Optional;	a	getRecipeFor
		p	1		input
		p	2		world
c	cze	net/minecraft/world/item/crafting/RecipeSerializer
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcze;)Lcze;	a	register
		p	0		id
		p	1		serializer
	m	()Lyx;	b	streamCodec
	f	Lcze;	a	SHAPED_RECIPE
	f	Lcze;	b	SHAPELESS_RECIPE
	f	Lcze;	c	ARMOR_DYE
	f	Lcze;	d	BOOK_CLONING
	f	Lcze;	e	MAP_CLONING
	f	Lcze;	f	MAP_EXTENDING
	f	Lcze;	g	FIREWORK_ROCKET
	f	Lcze;	h	FIREWORK_STAR
	f	Lcze;	i	FIREWORK_STAR_FADE
	f	Lcze;	j	TIPPED_ARROW
	f	Lcze;	k	BANNER_DUPLICATE
	f	Lcze;	l	SHIELD_DECORATION
	f	Lcze;	m	SHULKER_BOX_COLORING
	f	Lcze;	n	SUSPICIOUS_STEW
	f	Lcze;	o	REPAIR_ITEM
	f	Lcze;	p	SMELTING_RECIPE
	f	Lcze;	q	BLASTING_RECIPE
	f	Lcze;	r	SMOKING_RECIPE
	f	Lcze;	s	CAMPFIRE_COOKING_RECIPE
	f	Lcze;	t	STONECUTTER
	f	Lcze;	u	SMITHING_TRANSFORM
	f	Lcze;	v	SMITHING_TRIM
	f	Lcze;	w	DECORATED_POT_RECIPE
c	czf	net/minecraft/world/item/crafting/Recipes
	m	(Ljava/lang/String;)Lczf;	a	register
		p	0		id
	f	Lczf;	a	CRAFTING
	f	Lczf;	b	SMELTING
	f	Lczf;	c	BLASTING
	f	Lczf;	d	SMOKING
	f	Lczf;	e	CAMPFIRE_COOKING
	f	Lczf;	f	STONECUTTING
	f	Lczf;	g	SMITHING
c	czf$1	net/minecraft/world/item/crafting/Recipes$1
	f	Ljava/lang/String;	h	val$name
c	czg	net/minecraft/world/item/crafting/RecipeRepair
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcuq;Lcuq;)Z	a	canCombine
		p	0		first
		p	1		second
	m	(Lcyp;)Lcom/mojang/datafixers/util/Pair;	a	getItemsToCombine
		p	1		input
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ldai;Ldai;Ldai$a;Ljm$c;)V	a	lambda$assemble$1
		p	3		enchantment
	m	(Ljm$c;)Z	a	lambda$assemble$0
		p	0		enchantment
	m	(Ljo$a;Ldai;Ldai;Ldai$a;)V	a	lambda$assemble$2
		p	3		builder
	m	()Lcze;	at_	getSerializer
c	czh	net/minecraft/world/item/crafting/ShapedRecipes
	m	(Ljava/lang/String;Lcyo;Lczi;Lcuq;)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		raw
		p	4		result
	m	(Ljava/lang/String;Lcyo;Lczi;Lcuq;Z)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		raw
		p	4		result
		p	5		showNotification
	m	()Ljv;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lcyw;)Z	a	lambda$isIncomplete$1
		p	0		ingredient
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	m	(Lcyw;)Z	b	lambda$isIncomplete$0
		p	0		ingredient
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcyo;	d	category
	m	()Z	h	showNotification
	m	()Z	i	isIncomplete
	m	()I	j	getWidth
	m	()I	k	getHeight
	f	Lczi;	a	pattern
	f	Lcuq;	b	result
	f	Ljava/lang/String;	c	group
	f	Lcyo;	d	category
	f	Z	e	showNotification
c	czh$a	net/minecraft/world/item/crafting/ShapedRecipes$Serializer
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lczh;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		recipe
	m	(Lwk;)Lczh;	a	fromNetwork
		p	0		buf
	m	(Lwk;Lczh;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	()Lyx;	b	streamCodec
	m	(Lczh;)Lcuq;	b	lambda$static$3
		p	0		recipe
	m	(Lczh;)Lczi;	c	lambda$static$2
		p	0		recipe
	m	(Lczh;)Lcyo;	d	lambda$static$1
		p	0		recipe
	m	(Lczh;)Ljava/lang/String;	e	lambda$static$0
		p	0		recipe
	f	Lcom/mojang/serialization/MapCodec;	x	CODEC
	f	Lyx;	y	STREAM_CODEC
c	czi	net/minecraft/world/item/crafting/ShapedRecipePattern
	m	(IILjv;Ljava/util/Optional;)V	<init>	<init>
		p	1		width
		p	2		height
		p	3		ingredients
		p	4		data
	m	()I	a	width
	m	(C)Ljava/lang/String;	a	lambda$unpack$3
	m	(Lcyp;)Z	a	matches
		p	1		input
	m	(Lcyp;Z)Z	a	matches
		p	1		input
		p	2		mirrored
	m	(Lczi$a;)Lcom/mojang/serialization/DataResult;	a	unpack
		p	0		data
	m	(Lczi;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		recipe
	m	(Lit/unimi/dsi/fastutil/chars/CharSet;)Ljava/lang/String;	a	lambda$unpack$4
	m	(Ljava/lang/String;)I	a	firstNonSpace
		p	0		line
	m	(Ljava/util/List;)[Ljava/lang/String;	a	shrink
		p	0		pattern
	m	(Ljava/util/Map;Ljava/util/List;)Lczi;	a	of
		p	0		key
		p	1		pattern
	m	(Ljava/util/Map;[Ljava/lang/String;)Lczi;	a	of
		p	0		key
		p	1		pattern
	m	(Lwk;)V	a	toNetwork
		p	1		buf
	m	(Lwk;Lcyw;)Lcyw;	a	lambda$fromNetwork$5
		p	1		ingredient
	m	()I	b	height
	m	(Ljava/lang/String;)I	b	lastNonSpace
		p	0		line
	m	(Lwk;)Lczi;	b	fromNetwork
		p	0		buf
	m	()Ljv;	c	ingredients
	m	()Lcom/mojang/serialization/DataResult;	d	lambda$static$1
	m	()Ljava/lang/String;	e	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	MAX_SIZE
	f	I	d	width
	f	I	e	height
	f	Ljv;	f	ingredients
	f	Ljava/util/Optional;	g	data
	f	I	h	ingredientCount
	f	Z	i	symmetrical
c	czi$a	net/minecraft/world/item/crafting/ShapedRecipePattern$a
	m	()Ljava/util/Map;	a	key
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Lczi$a;)Ljava/util/List;	a	lambda$static$9
		p	0		data
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$7
		p	0		keyEntry
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
		p	0		pattern
	m	()Ljava/util/List;	b	pattern
	m	(Lczi$a;)Ljava/util/Map;	b	lambda$static$8
		p	0		data
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$5
	m	()Ljava/lang/String;	c	lambda$static$6
	m	()Ljava/lang/String;	d	lambda$static$3
	m	()Ljava/lang/String;	e	lambda$static$2
	m	()Ljava/lang/String;	f	lambda$static$1
	m	()Ljava/lang/String;	g	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/util/Map;	b	key
	f	Ljava/util/List;	c	pattern
	f	Lcom/mojang/serialization/Codec;	d	PATTERN_CODEC
	f	Lcom/mojang/serialization/Codec;	e	SYMBOL_CODEC
c	czj	net/minecraft/world/item/crafting/ShapelessRecipes
	m	(Ljava/lang/String;Lcyo;Lcuq;Ljv;)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		result
		p	4		ingredients
	m	()Ljv;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lcyo;	d	category
	f	Ljava/lang/String;	a	group
	f	Lcyo;	b	category
	f	Lcuq;	c	result
	f	Ljv;	d	ingredients
c	czj$a	net/minecraft/world/item/crafting/ShapelessRecipes$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)[Lcyw;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Lcyw;)Z	a	lambda$static$3
		p	0		ingredient
	m	(Lczj;)Ljv;	a	lambda$static$8
		p	0		recipe
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$7
		p	0		ingredients
	m	(Lwk;)Lczj;	a	fromNetwork
		p	0		buf
	m	(Lwk;Lcyw;)Lcyw;	a	lambda$fromNetwork$10
		p	1		empty
	m	(Lwk;Lczj;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	()Lyx;	b	streamCodec
	m	(Lczj;)Lcuq;	b	lambda$static$2
		p	0		recipe
	m	()Ljava/lang/String;	c	lambda$static$6
	m	(Lczj;)Lcyo;	c	lambda$static$1
		p	0		recipe
	m	()Ljava/lang/String;	d	lambda$static$5
	m	(Lczj;)Ljava/lang/String;	d	lambda$static$0
		p	0		recipe
	f	Lyx;	x	STREAM_CODEC
	f	Lcom/mojang/serialization/MapCodec;	y	CODEC
c	czk	net/minecraft/world/item/crafting/RecipiesShield
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	czl	net/minecraft/world/item/crafting/RecipeShulkerBox
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	czm	net/minecraft/world/item/crafting/RecipeSerializerCooking
	m	(Lcyh$a;I)V	<init>	<init>
		p	1		recipeFactory
		p	2		cookingTime
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILcyh$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$6
		p	2		instance
	m	(Lcyh;)Ljava/lang/Integer;	a	lambda$new$5
		p	0		recipe
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)Lcyh;	a	create
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	(Lwk;)Lcyh;	a	fromNetwork
		p	1		buf
	m	(Lwk;Lcyh;)V	a	toNetwork
		p	1		buf
		p	2		recipe
	m	()Lyx;	b	streamCodec
	m	(Lcyh;)Ljava/lang/Float;	b	lambda$new$4
		p	0		recipe
	m	(Lcyh;)Lcuq;	c	lambda$new$3
		p	0		recipe
	m	(Lcyh;)Lcyw;	d	lambda$new$2
		p	0		recipe
	m	(Lcyh;)Lcyn;	e	lambda$new$1
		p	0		recipe
	m	(Lcyh;)Ljava/lang/String;	f	lambda$new$0
		p	0		recipe
	f	Lcyh$a;	x	factory
	f	Lcom/mojang/serialization/MapCodec;	y	codec
	f	Lyx;	z	streamCodec
c	czn	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer
	m	(Lczn$a;)V	<init>	<init>
		p	1		factory
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lczn$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
		p	1		instance
	m	()Lyx;	b	streamCodec
	f	Lcom/mojang/serialization/MapCodec;	x	codec
	f	Lyx;	y	streamCodec
c	czn$a	net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$a
	m	(Lcyo;)Lcyq;	create	create
		p	1		category
c	czo	net/minecraft/world/item/crafting/RecipeSingleItem
	m	(Lczf;Lcze;Ljava/lang/String;Lcyw;Lcuq;)V	<init>	<init>
		p	1		type
		p	2		serializer
		p	3		group
		p	4		ingredient
		p	5		result
	m	()Ljv;	a	getIngredients
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	m	()Ljava/lang/String;	c	getGroup
	m	()Lczf;	e	getType
	f	Lcyw;	a	ingredient
	f	Lcuq;	b	result
	f	Ljava/lang/String;	c	group
	f	Lczf;	d	type
	f	Lcze;	e	serializer
c	czo$a	net/minecraft/world/item/crafting/RecipeSingleItem$a
	m	(Ljava/lang/String;Lcyw;Lcuq;)Lczo;	create	create
		p	1		group
		p	2		ingredient
		p	3		result
c	czo$b	net/minecraft/world/item/crafting/RecipeSingleItem$b
	m	(Lczo$a;)V	<init>	<init>
		p	1		recipeFactory
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lczo$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$3
		p	1		instance
	m	(Lczo;)Lcuq;	a	lambda$new$6
		p	0		recipe
	m	()Lyx;	b	streamCodec
	m	(Lczo;)Lcyw;	b	lambda$new$5
		p	0		recipe
	m	(Lczo;)Ljava/lang/String;	c	lambda$new$4
		p	0		recipe
	m	(Lczo;)Lcuq;	d	lambda$new$2
		p	0		recipe
	m	(Lczo;)Lcyw;	e	lambda$new$1
		p	0		recipe
	m	(Lczo;)Ljava/lang/String;	f	lambda$new$0
		p	0		recipe
	f	Lczo$a;	x	factory
	f	Lcom/mojang/serialization/MapCodec;	y	codec
	f	Lyx;	z	streamCodec
c	czp	net/minecraft/world/item/crafting/SingleRecipeInput
	m	()I	a	size
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	()Lcuq;	c	item
	f	Lcuq;	a	item
c	czq	net/minecraft/world/item/crafting/FurnaceRecipe
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcze;	at_	getSerializer
	m	()Lcuq;	g	getToastSymbol
c	czr	net/minecraft/world/item/crafting/SmithingRecipe
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcuq;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lcuq;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcuq;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Lczf;	e	getType
	m	()Lcuq;	g	getToastSymbol
c	czs	net/minecraft/world/item/crafting/SmithingRecipeInput
	m	()I	a	size
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	()Z	b	isEmpty
	m	()Lcuq;	c	template
	m	()Lcuq;	d	base
	m	()Lcuq;	e	addition
	f	Lcuq;	a	template
	f	Lcuq;	b	base
	f	Lcuq;	c	addition
c	czt	net/minecraft/world/item/crafting/SmithingTransformRecipe
	m	(Lcyw;Lcyw;Lcyw;Lcuq;)V	<init>	<init>
		p	1		template
		p	2		base
		p	3		addition
		p	4		result
	m	(Lcuq;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczs;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczs;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	m	(Lcuq;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcuq;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Z	i	isIncomplete
	f	Lcyw;	a	template
	f	Lcyw;	b	base
	f	Lcyw;	c	addition
	f	Lcuq;	d	result
c	czt$a	net/minecraft/world/item/crafting/SmithingTransformRecipe$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lczt;)Lcuq;	a	lambda$static$3
		p	0		recipe
	m	(Lwk;)Lczt;	a	fromNetwork
		p	0		buf
	m	(Lwk;Lczt;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	()Lyx;	b	streamCodec
	m	(Lczt;)Lcyw;	b	lambda$static$2
		p	0		recipe
	m	(Lczt;)Lcyw;	c	lambda$static$1
		p	0		recipe
	m	(Lczt;)Lcyw;	d	lambda$static$0
		p	0		recipe
	f	Lyx;	x	STREAM_CODEC
	f	Lcom/mojang/serialization/MapCodec;	y	CODEC
c	czu	net/minecraft/world/item/crafting/SmithingTrimRecipe
	m	(Lcyw;Lcyw;Lcyw;)V	<init>	<init>
		p	1		template
		p	2		base
		p	3		addition
	m	(Lcuq;)Z	a	isTemplateIngredient
		p	1		stack
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczs;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczs;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Ljo$a;)Lcuq;	a	getResultItem
		p	1		registriesLookup
	m	()Lcze;	at_	getSerializer
	m	(Lcuq;)Z	b	isBaseIngredient
		p	1		stack
	m	(Lcuq;)Z	c	isAdditionIngredient
		p	1		stack
	m	()Z	i	isIncomplete
	f	Lcyw;	a	template
	f	Lcyw;	b	base
	f	Lcyw;	c	addition
c	czu$a	net/minecraft/world/item/crafting/SmithingTrimRecipe$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lczu;)Lcyw;	a	lambda$static$2
		p	0		recipe
	m	(Lwk;)Lczu;	a	fromNetwork
		p	0		buf
	m	(Lwk;Lczu;)V	a	toNetwork
		p	0		buf
		p	1		recipe
	m	()Lyx;	b	streamCodec
	m	(Lczu;)Lcyw;	b	lambda$static$1
		p	0		recipe
	m	(Lczu;)Lcyw;	c	lambda$static$0
		p	0		recipe
	f	Lyx;	x	STREAM_CODEC
	f	Lcom/mojang/serialization/MapCodec;	y	CODEC
c	czv	net/minecraft/world/item/crafting/RecipeSmoking
	m	(Ljava/lang/String;Lcyn;Lcyw;Lcuq;FI)V	<init>	<init>
		p	1		group
		p	2		category
		p	3		ingredient
		p	4		result
		p	5		experience
		p	6		cookingTime
	m	()Lcze;	at_	getSerializer
	m	()Lcuq;	g	getToastSymbol
c	czw	net/minecraft/world/item/crafting/RecipeStonecutting
	m	(Ljava/lang/String;Lcyw;Lcuq;)V	<init>	<init>
		p	1		group
		p	2		ingredient
		p	3		result
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	()Lcuq;	g	getToastSymbol
c	czx	net/minecraft/world/item/crafting/RecipeSuspiciousStew
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	czy	net/minecraft/world/item/crafting/RecipeTippedArrow
	m	(Lcyo;)V	<init>	<init>
		p	1		category
	m	(II)Z	a	canCraftInDimensions
		p	1		width
		p	2		height
	m	(Lcyp;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lcyp;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	(Lczc;Ldcw;)Z	a	matches
		p	1		input
		p	2		world
	m	(Lczc;Ljo$a;)Lcuq;	a	assemble
		p	1		input
		p	2		lookup
	m	()Lcze;	at_	getSerializer
c	daa	net/minecraft/world/item/enchantment/ConditionalEffect
	m	()Ljava/lang/Object;	a	effect
	m	(Lcom/mojang/serialization/Codec;Leul;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		effectCodec
		p	1		lootContextType
	m	(Lcom/mojang/serialization/Codec;Leul;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$4
		p	2		instance
	m	(Lerr;)Z	a	matches
		p	1		context
	m	(Leul;)Lcom/mojang/serialization/Codec;	a	conditionCodec
		p	0		lootContextType
	m	(Leul;Levc;)Lcom/mojang/serialization/DataResult;	a	lambda$conditionCodec$3
		p	1		condition
	m	(Levc;)Lcom/mojang/serialization/DataResult;	a	lambda$conditionCodec$2
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$conditionCodec$1
		p	0		errors
	m	()Ljava/util/Optional;	b	requirements
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$conditionCodec$0
	f	Ljava/lang/Object;	a	effect
	f	Ljava/util/Optional;	b	requirements
c	dab	net/minecraft/world/item/enchantment/EnchantedItemInUse
	m	(Lcuq;Lbsy;Lbtn;)V	<init>	<init>
		p	1		stack
		p	2		slot
		p	3		owner
	m	()Lcuq;	a	itemStack
	m	(Lbtn;Lbsy;Lcul;)V	a	lambda$new$0
		p	2		item
	m	()Lbsy;	b	inSlot
	m	()Lbtn;	c	owner
	m	()Ljava/util/function/Consumer;	d	onBreak
	f	Lcuq;	a	itemStack
	f	Lbsy;	b	inSlot
	f	Lbtn;	c	owner
	f	Ljava/util/function/Consumer;	d	onBreak
c	dac	net/minecraft/world/item/enchantment/Enchantment
	m	()Ljq;	a	getSupportedItems
	m	(I)Ldac$b;	a	constantCost
		p	0		base
	m	(II)Ldac$b;	a	dynamicCost
		p	0		base
		p	1		perLevel
	m	(ILdab;Lbtn;)V	a	stopLocationBasedEffects
		p	1		level
		p	2		context
		p	3		user
	m	(Laqu;ILbsr;Lbrk;)Z	a	isImmuneToDamage
		p	1		world
		p	2		level
		p	3		user
		p	4		damageSource
	m	(Laqu;ILbsr;Lexc;)Lerr;	a	entityContext
		p	0		world
		p	1		level
		p	2		entity
		p	3		pos
	m	(Laqu;ILbsr;Lexc;Ldtc;)Lerr;	a	blockHitContext
		p	0		world
		p	1		level
		p	2		entity
		p	3		pos
		p	4		state
	m	(Laqu;ILbsr;Z)Lerr;	a	locationContext
		p	0		world
		p	1		level
		p	2		entity
		p	3		enchantmentActive
	m	(Laqu;ILcuq;)Lerr;	a	itemContext
		p	0		world
		p	1		level
		p	2		stack
	m	(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDamageProtection
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		damageSource
		p	6		damageProtection
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyMobExperience
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		mobExperience
	m	(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDurabilityChange
		p	1		world
		p	2		level
		p	3		stack
		p	4		itemDamage
	m	(Laqu;ILdab;Lbsr;)V	a	tick
		p	1		world
		p	2		level
		p	3		context
		p	4		user
	m	(Laqu;ILdab;Lbsr;Ldas;)V	a	lambda$onProjectileSpawned$3
		p	4		effect
	m	(Laqu;ILdab;Lbsr;Lexc;Ldas;)V	a	lambda$onHitBlock$4
		p	5		effect
	m	(Laqu;ILdab;Lbsr;Lexc;Ldtc;)V	a	onHitBlock
		p	1		world
		p	2		level
		p	3		context
		p	4		enchantedEntity
		p	5		pos
		p	6		state
	m	(Laqu;ILdab;Lbtn;)V	a	runLocationChangedEffects
		p	1		world
		p	2		level
		p	3		context
		p	4		user
	m	(Laqu;ILdab;Ldag;Lbsr;Lbrk;)V	a	doPostAttack
		p	1		world
		p	2		level
		p	3		context
		p	4		target
		p	5		user
		p	6		damageSource
	m	(Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyTridentSpinAttackStrength
		p	1		random
		p	2		level
		p	3		tridentSpinAttackStrength
	m	(Lbsy;)Z	a	matchingSlot
		p	1		slot
	m	(Lbsy;Lbsz;)Z	a	lambda$matchingSlot$1
		p	1		slotx
	m	(Lbtn;)Ljava/util/Map;	a	getSlotItems
		p	1		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;)Z	a	isPrimaryItem
		p	1		stack
	m	(Ldab;Lbtn;ILdat;)V	a	lambda$runLocationChangedEffects$8
		p	3		effect
	m	(Ldac$c;)Ldac$a;	a	enchantment
		p	0		definition
	m	(Ldak;Laqu;ILdab;Lbsr;Lbrk;)V	a	doPostAttack
		p	0		effect
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		damageSource
	m	(Ljava/util/List;Lerr;Ljava/util/function/Consumer;)V	a	applyEffects
		p	0		entries
		p	1		lootContext
		p	2		effectConsumer
	m	(Ljm;I)Lwz;	a	getFullname
		p	0		enchantment
		p	1		level
	m	(Ljm;Ljm;)Z	a	areCompatible
		p	0		first
		p	1		second
	m	(Ljq;IILdac$b;Ldac$b;I[Lbsz;)Ldac$c;	a	definition
		p	0		supportedItems
		p	1		weight
		p	2		maxLevel
		p	3		minCost
		p	4		maxCost
		p	5		anvilCost
		p	6		slots
	m	(Ljq;Ljq;IILdac$b;Ldac$b;I[Lbsz;)Ldac$c;	a	definition
		p	0		supportedItems
		p	1		primaryItems
		p	2		weight
		p	3		maxLevel
		p	4		minCost
		p	5		maxCost
		p	6		anvilCost
		p	7		slots
	m	(Lkp;)Ljava/util/List;	a	getEffects
		p	1		type
	m	(Lkp;Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDamageFilteredValue
		p	1		type
		p	2		world
		p	3		level
		p	4		stack
		p	5		user
		p	6		damageSource
		p	7		value
	m	(Lkp;Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyEntityFilteredValue
		p	1		type
		p	2		world
		p	3		level
		p	4		stack
		p	5		user
		p	6		value
	m	(Lkp;Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyItemFilteredCount
		p	1		type
		p	2		world
		p	3		level
		p	4		stack
		p	5		value
	m	(Lkp;Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyUnfilteredValue
		p	1		type
		p	2		random
		p	3		level
		p	4		value
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILaqu;Ldau;)V	a	lambda$modifyItemFilteredCount$5
		p	3		effect
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILbsr;Ldau;)V	a	lambda$modifyDamageFilteredValue$7
		p	3		effect
	m	()I	b	getWeight
	m	(I)I	b	getMinCost
		p	1		level
	m	(Laqu;ILbsr;Lbrk;)Lerr;	b	damageContext
		p	0		world
		p	1		level
		p	2		entity
		p	3		damageSource
	m	(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyDamage
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		damageSource
		p	6		damage
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyTridentReturnToOwnerAcceleration
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		tridentReturnAcceleration
	m	(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyAmmoCount
		p	1		world
		p	2		level
		p	3		projectileStack
		p	4		ammoUse
	m	(Laqu;ILdab;Lbsr;)V	b	onProjectileSpawned
		p	1		world
		p	2		level
		p	3		context
		p	4		user
	m	(Laqu;ILdab;Lbsr;Ldas;)V	b	lambda$tick$2
		p	4		effect
	m	(Layw;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyCrossbowChargeTime
		p	1		random
		p	2		level
		p	3		crossbowChargeTime
	m	(Lcuq;)Z	b	isSupportedItem
		p	1		stack
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILbsr;Ldau;)V	b	lambda$modifyEntityFilteredValue$6
		p	3		effect
	m	()I	c	getAnvilCost
	m	(I)I	c	getMaxCost
		p	1		level
	m	(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyFallBasedDamage
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		damageSource
		p	6		smashDamagePerFallenBlock
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyFishingTimeReduction
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		fishingTimeReduction
	m	(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyPiercingCount
		p	1		world
		p	2		level
		p	3		stack
		p	4		projectilePiercing
	m	(Lcuq;)Z	c	canEnchant
		p	1		stack
	m	()I	d	getMinLevel
	m	(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyKnockback
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		damageSource
		p	6		knockback
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyFishingLuckBonus
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		fishingLuckBonus
	m	(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyBlockExperience
		p	1		world
		p	2		level
		p	3		stack
		p	4		blockExperience
	m	()I	e	getMaxLevel
	m	(Laqu;ILcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyArmorEffectivness
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		damageSource
		p	6		armorEffectiveness
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyProjectileCount
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		projectileCount
	m	(Laqu;ILcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyDurabilityToRepairFromXp
		p	1		world
		p	2		level
		p	3		stack
		p	4		repairWithXp
	m	()Lwz;	f	description
	m	(Laqu;ILcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	f	modifyProjectileSpread
		p	1		world
		p	2		level
		p	3		stack
		p	4		user
		p	5		projectileSpread
	m	()Ldac$c;	g	definition
	m	()Ljq;	h	exclusiveSet
	m	()Lkm;	i	effects
	f	I	a	MAX_LEVEL
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lwz;	e	description
	f	Ldac$c;	f	definition
	f	Ljq;	g	exclusiveSet
	f	Lkm;	h	effects
c	dac$1	net/minecraft/world/item/enchantment/Enchantment$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$EnchantmentTarget
c	dac$a	net/minecraft/world/item/enchantment/Enchantment$a
	m	(Ldac$c;)V	<init>	<init>
		p	1		properties
	m	(Lakr;)Ldac;	a	build
		p	1		id
	m	(Ljq;)Ldac$a;	a	exclusiveWith
		p	1		exclusiveSet
	m	(Lkp;)Ldac$a;	a	withEffect
		p	1		type
	m	(Lkp;Ldag;Ldag;Ljava/lang/Object;)Ldac$a;	a	withEffect
		p	1		type
		p	2		enchanted
		p	3		affected
		p	4		effect
	m	(Lkp;Ldag;Ldag;Ljava/lang/Object;Levc$a;)Ldac$a;	a	withEffect
		p	1		type
		p	2		enchanted
		p	3		affected
		p	4		effect
		p	5		requirements
	m	(Lkp;Ldar;)Ldac$a;	a	withEffect
		p	1		type
		p	2		effect
	m	(Lkp;Ljava/lang/Object;)Ldac$a;	a	withEffect
		p	1		effectType
		p	2		effect
	m	(Lkp;Ljava/lang/Object;Levc$a;)Ldac$a;	a	withEffect
		p	1		effectType
		p	2		effect
		p	3		requirements
	m	(Lkp;Lkp;)Ljava/util/List;	a	lambda$getEffectsList$0
		p	2		type
	m	(Lkp;)Ljava/util/List;	b	getEffectsList
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Ldac$a;	b	withSpecialEffect
		p	1		type
		p	2		effect
	f	Ldac$c;	a	definition
	f	Ljq;	b	exclusiveSet
	f	Ljava/util/Map;	c	effectLists
	f	Lkm$a;	d	effectMapBuilder
c	dac$b	net/minecraft/world/item/enchantment/Enchantment$b
	m	()I	a	base
	m	(I)I	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	perLevelAboveFirst
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	base
	f	I	c	perLevelAboveFirst
c	dac$c	net/minecraft/world/item/enchantment/Enchantment$c
	m	()Ljq;	a	supportedItems
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Optional;	b	primaryItems
	m	()I	c	weight
	m	()I	d	maxLevel
	m	()Ldac$b;	e	minCost
	m	()Ldac$b;	f	maxCost
	m	()I	g	anvilCost
	m	()Ljava/util/List;	h	slots
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	b	supportedItems
	f	Ljava/util/Optional;	c	primaryItems
	f	I	d	weight
	f	I	e	maxLevel
	f	Ldac$b;	f	minCost
	f	Ldac$b;	g	maxCost
	f	I	h	anvilCost
	f	Ljava/util/List;	i	slots
c	dad	net/minecraft/world/item/enchantment/EnchantmentEffectComponents
	m	(Lkp$a;)Lkp$a;	A	lambda$static$4
		p	0		builder
	m	(Lkp$a;)Lkp$a;	B	lambda$static$3
		p	0		builder
	m	(Lkp$a;)Lkp$a;	C	lambda$static$2
		p	0		builder
	m	(Lkp$a;)Lkp$a;	D	lambda$static$1
		p	0		builder
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lkp;	a	register
		p	0		id
		p	1		builderOperator
	m	(Ljz;)Lkp;	a	bootstrap
		p	0		registry
	m	(Lkp$a;)Lkp$a;	a	lambda$static$30
		p	0		builder
	m	(Lkp$a;)Lkp$a;	b	lambda$static$29
		p	0		builder
	m	(Lkp$a;)Lkp$a;	c	lambda$static$28
		p	0		builder
	m	(Lkp$a;)Lkp$a;	d	lambda$static$27
		p	0		builder
	m	(Lkp$a;)Lkp$a;	e	lambda$static$26
		p	0		builder
	m	(Lkp$a;)Lkp$a;	f	lambda$static$25
		p	0		builder
	m	(Lkp$a;)Lkp$a;	g	lambda$static$24
		p	0		builder
	m	(Lkp$a;)Lkp$a;	h	lambda$static$23
		p	0		builder
	m	(Lkp$a;)Lkp$a;	i	lambda$static$22
		p	0		builder
	m	(Lkp$a;)Lkp$a;	j	lambda$static$21
		p	0		builder
	m	(Lkp$a;)Lkp$a;	k	lambda$static$20
		p	0		builder
	m	(Lkp$a;)Lkp$a;	l	lambda$static$19
		p	0		builder
	m	(Lkp$a;)Lkp$a;	m	lambda$static$18
		p	0		builder
	m	(Lkp$a;)Lkp$a;	n	lambda$static$17
		p	0		builder
	m	(Lkp$a;)Lkp$a;	o	lambda$static$16
		p	0		builder
	m	(Lkp$a;)Lkp$a;	p	lambda$static$15
		p	0		builder
	m	(Lkp$a;)Lkp$a;	q	lambda$static$14
		p	0		builder
	m	(Lkp$a;)Lkp$a;	r	lambda$static$13
		p	0		builder
	m	(Lkp$a;)Lkp$a;	s	lambda$static$12
		p	0		builder
	m	(Lkp$a;)Lkp$a;	t	lambda$static$11
		p	0		builder
	m	(Lkp$a;)Lkp$a;	u	lambda$static$10
		p	0		builder
	m	(Lkp$a;)Lkp$a;	v	lambda$static$9
		p	0		builder
	m	(Lkp$a;)Lkp$a;	w	lambda$static$8
		p	0		builder
	m	(Lkp$a;)Lkp$a;	x	lambda$static$7
		p	0		builder
	m	(Lkp$a;)Lkp$a;	y	lambda$static$6
		p	0		builder
	m	(Lkp$a;)Lkp$a;	z	lambda$static$5
		p	0		builder
	f	Lkp;	A	CROSSBOW_CHARGE_TIME
	f	Lkp;	B	CROSSBOW_CHARGING_SOUNDS
	f	Lkp;	C	TRIDENT_SOUND
	f	Lkp;	D	PREVENT_EQUIPMENT_DROP
	f	Lkp;	E	PREVENT_ARMOR_CHANGE
	f	Lkp;	F	TRIDENT_SPIN_ATTACK_STRENGTH
	f	Lcom/mojang/serialization/Codec;	a	COMPONENT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lkp;	c	DAMAGE_PROTECTION
	f	Lkp;	d	DAMAGE_IMMUNITY
	f	Lkp;	e	DAMAGE
	f	Lkp;	f	SMASH_DAMAGE_PER_FALLEN_BLOCK
	f	Lkp;	g	KNOCKBACK
	f	Lkp;	h	ARMOR_EFFECTIVENESS
	f	Lkp;	i	POST_ATTACK
	f	Lkp;	j	HIT_BLOCK
	f	Lkp;	k	ITEM_DAMAGE
	f	Lkp;	l	ATTRIBUTES
	f	Lkp;	m	EQUIPMENT_DROPS
	f	Lkp;	n	LOCATION_CHANGED
	f	Lkp;	o	TICK
	f	Lkp;	p	AMMO_USE
	f	Lkp;	q	PROJECTILE_PIERCING
	f	Lkp;	r	PROJECTILE_SPAWNED
	f	Lkp;	s	PROJECTILE_SPREAD
	f	Lkp;	t	PROJECTILE_COUNT
	f	Lkp;	u	TRIDENT_RETURN_ACCELERATION
	f	Lkp;	v	FISHING_TIME_REDUCTION
	f	Lkp;	w	FISHING_LUCK_BONUS
	f	Lkp;	x	BLOCK_EXPERIENCE
	f	Lkp;	y	MOB_EXPERIENCE
	f	Lkp;	z	REPAIR_WITH_XP
c	dae	net/minecraft/world/item/enchantment/EnchantmentManager
	m	(ILcuq;Ljava/util/stream/Stream;)Ljava/util/List;	a	getAvailableEnchantmentResults
		p	0		level
		p	1		stack
		p	2		possibleEnchantments
	m	(ILjava/util/List;Ljm;)V	a	lambda$getAvailableEnchantmentResults$42
		p	2		enchantmentx
	m	(Laqu;Lbsr;Lbrk;)V	a	doPostAttackEffects
		p	0		world
		p	1		target
		p	2		damageSource
	m	(Laqu;Lbsr;Lbrk;Lcuq;)V	a	doPostAttackEffectsWithItemSource
		p	0		world
		p	1		target
		p	2		damageSource
		p	3		weapon
	m	(Laqu;Lbsr;Lbrk;Ljm;ILdab;)V	a	lambda$doPostAttackEffectsWithItemSource$11
		p	3		enchantment
		p	4		level
		p	5		context
	m	(Laqu;Lbsr;Lbsr;I)I	a	processMobExperience
		p	0		world
		p	1		attacker
		p	2		mob
		p	3		baseMobExperience
	m	(Laqu;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;ILdab;)V	a	lambda$processMobExperience$3
		p	3		enchantment
		p	4		level
		p	5		context
	m	(Laqu;Lbtn;)V	a	runLocationChangedEffects
		p	0		world
		p	1		user
	m	(Laqu;Lbtn;Lbrk;)Z	a	isImmuneToDamage
		p	0		world
		p	1		user
		p	2		damageSource
	m	(Laqu;Lbtn;Lbrk;F)F	a	processEquipmentDropChance
		p	0		world
		p	1		attacker
		p	2		damageSource
		p	3		baseEquipmentDropChance
	m	(Laqu;Lbtn;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Layw;Ljm;ILdab;)V	a	lambda$processEquipmentDropChance$26
		p	5		enchantment
		p	6		level
		p	7		context
	m	(Laqu;Lbtn;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;ILdab;)V	a	lambda$getDamageProtection$5
		p	4		enchantment
		p	5		level
		p	6		context
	m	(Laqu;Lbtn;Ljm;ILdab;)V	a	lambda$tickEffects$16
		p	2		enchantment
		p	3		level
		p	4		context
	m	(Laqu;Lcuq;I)I	a	processDurabilityChange
		p	0		world
		p	1		stack
		p	2		baseItemDamage
	m	(Laqu;Lcuq;Lbsr;)I	a	getFishingLuckBonus
		p	0		world
		p	1		stack
		p	2		user
	m	(Laqu;Lcuq;Lbsr;F)F	a	processProjectileSpread
		p	0		world
		p	1		stack
		p	2		user
		p	3		baseProjectileSpread
	m	(Laqu;Lcuq;Lbsr;I)I	a	processProjectileCount
		p	0		world
		p	1		stack
		p	2		user
		p	3		baseProjectileCount
	m	(Laqu;Lcuq;Lbsr;Lbrk;F)F	a	modifyDamage
		p	0		world
		p	1		stack
		p	2		target
		p	3		damageSource
		p	4		baseDamage
	m	(Laqu;Lcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	a	lambda$modifyKnockback$9
		p	5		enchantment
		p	6		level
	m	(Laqu;Lcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	a	lambda$getTridentReturnToOwnerAcceleration$33
		p	4		enchantment
		p	5		level
	m	(Laqu;Lcuq;Lbtn;Lbsr;Lbsy;Lexc;Ldtc;Ljava/util/function/Consumer;)V	a	onHitBlock
		p	0		world
		p	1		stack
		p	2		user
		p	3		enchantedEntity
		p	4		slot
		p	5		pos
		p	6		state
		p	7		onBreak
	m	(Laqu;Lcuq;Lbtn;Lbsy;)V	a	runLocationChangedEffects
		p	0		world
		p	1		stack
		p	2		user
		p	3		slot
	m	(Laqu;Lcuq;Lcnd;Ljava/util/function/Consumer;)V	a	onProjectileSpawned
		p	0		world
		p	1		weaponStack
		p	2		projectileEntity
		p	3		onBreak
	m	(Laqu;Lcuq;Lcuq;)I	a	getPiercingCount
		p	0		world
		p	1		weaponStack
		p	2		projectileStack
	m	(Laqu;Lcuq;Lcuq;I)I	a	processAmmoUse
		p	0		world
		p	1		rangedWeaponStack
		p	2		projectileStack
		p	3		baseAmmoUse
	m	(Laqu;Lcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	a	lambda$modifyDurabilityToRepairFromXp$22
		p	3		enchantment
		p	4		level
	m	(Laqu;Ldab;Lbsr;Lexc;Ldtc;Ljm;I)V	a	lambda$onHitBlock$21
		p	5		enchantment
		p	6		level
	m	(Laqu;Ldab;Lcnd;Ljm;I)V	a	lambda$onProjectileSpawned$20
		p	3		enchantment
		p	4		level
	m	(Layw;IILcuq;)I	a	getEnchantmentCost
		p	0		random
		p	1		slotIndex
		p	2		bookshelfCount
		p	3		stack
	m	(Layw;Lcuq;ILjava/util/stream/Stream;)Lcuq;	a	enchantItem
		p	0		random
		p	1		stack
		p	2		level
		p	3		possibleEnchantments
	m	(Layw;Lcuq;ILka;Ljava/util/Optional;)Lcuq;	a	enchantItem
		p	0		random
		p	1		stack
		p	2		level
		p	3		dynamicRegistryManager
		p	4		enchantments
	m	(Lbsy;Ljava/util/function/BiConsumer;Ljm;I)V	a	lambda$forEachModifier$30
		p	2		enchantment
		p	3		level
	m	(Lbsz;Ljava/util/function/BiConsumer;Ljm;I)V	a	lambda$forEachModifier$28
		p	2		enchantment
		p	3		level
	m	(Lbtn;)V	a	stopLocationBasedEffects
		p	0		user
	m	(Lbtn;Ldae$a;)V	a	runIterationOnEquipment
		p	0		entity
		p	1		contextAwareConsumer
	m	(Lbtn;Ljm;ILdab;)V	a	lambda$stopLocationBasedEffects$15
		p	1		enchantment
		p	2		level
		p	3		context
	m	(Lbtn;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	a	lambda$getTridentSpinAttackStrength$35
		p	2		enchantment
		p	3		level
	m	(Lcuq;)Z	a	canStoreEnchantments
		p	0		stack
	m	(Lcuq;Lawu;)Z	a	hasTag
		p	0		stack
		p	1		tag
	m	(Lcuq;Lbsy;Lbtn;Ldae$a;)V	a	runIterationOnItem
		p	0		stack
		p	1		slot
		p	2		entity
		p	3		contextAwareConsumer
	m	(Lcuq;Lbsy;Ljava/util/function/BiConsumer;)V	a	forEachModifier
		p	0		stack
		p	1		slot
		p	2		attributeModifierConsumer
	m	(Lcuq;Lbsz;Ljava/util/function/BiConsumer;)V	a	forEachModifier
		p	0		stack
		p	1		slot
		p	2		attributeModifierConsumer
	m	(Lcuq;Lbtn;)F	a	getTridentSpinAttackStrength
		p	0		stack
		p	1		user
	m	(Lcuq;Lbtn;F)F	a	modifyCrossbowChargingTime
		p	0		stack
		p	1		user
		p	2		baseCrossbowChargeTime
	m	(Lcuq;Lbtn;Lbsy;)V	a	stopLocationBasedEffects
		p	0		stack
		p	1		user
		p	2		slot
	m	(Lcuq;Ldae$b;)V	a	runIterationOnItem
		p	0		stack
		p	1		consumer
	m	(Lcuq;Ldai;)V	a	setEnchantments
		p	0		stack
		p	1		enchantments
	m	(Lcuq;Ljava/util/function/Consumer;)Ldai;	a	updateEnchantments
		p	0		stack
		p	1		applier
	m	(Lcuq;Lka;Lakq;Lbqp;Layw;)V	a	enchantItemFromProvider
		p	0		stack
		p	1		registryManager
		p	2		providerKey
		p	3		localDifficulty
		p	4		random
	m	(Lcuq;Lkp;)Z	a	has
		p	0		stack
		p	1		componentType
	m	(Lcuq;ZLjm;)Z	a	lambda$getAvailableEnchantmentResults$41
		p	2		enchantment
	m	(Ldaf;Ldaf;)Z	a	lambda$filterCompatibleEnchantments$40
		p	1		entry
	m	(Ldbj;Lcuq;Layw;Lbqp;Ldai$a;)V	a	lambda$enchantItemFromProvider$43
		p	4		componentBuilder
	m	(Lerr;Lorg/apache/commons/lang3/mutable/MutableFloat;ILayw;Ldak;)V	a	lambda$processEquipmentDropChance$25
		p	4		effect
	m	(Ljava/util/Collection;Ljm;)Z	a	isEnchantmentCompatible
		p	0		existing
		p	1		candidate
	m	(Ljava/util/List;Ldaf;)V	a	filterCompatibleEnchantments
		p	0		possibleEntries
		p	1		pickedEntry
	m	(Ljm$c;)Ljm;	a	lambda$enchantItem$38
	m	(Ljm;Lbsy;Ljava/util/function/BiConsumer;ILdar;)V	a	lambda$forEachModifier$29
		p	4		effect
	m	(Ljm;Lbsz;Ljava/util/function/BiConsumer;ILdar;)V	a	lambda$forEachModifier$27
		p	4		effect
	m	(Ljm;Lbtn;)I	a	getEnchantmentLevel
		p	0		enchantment
		p	1		entity
	m	(Ljm;Lcuq;)I	a	getItemEnchantmentLevel
		p	0		enchantment
		p	1		stack
	m	(Lka;)Ljava/util/stream/Stream;	a	lambda$enchantItem$39
	m	(Lkp;Lbtn;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getRandomItemWith
		p	0		componentType
		p	1		entity
		p	2		stackPredicate
	m	(Lkp;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljm;I)V	a	lambda$has$36
		p	2		enchantment
		p	3		level
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Laqu;Lbtn;Lbrk;Ljm;ILdab;)V	a	lambda$isImmuneToDamage$4
		p	4		enchantment
		p	5		level
		p	6		context
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lkp;Ljm;I)V	a	lambda$getHighestLevel$37
		p	2		enchantment
		p	3		level
	m	(Laqu;Lbsr;Lbrk;Ljm;ILdab;)V	b	lambda$doPostAttackEffectsWithItemSource$10
		p	3		enchantment
		p	4		level
		p	5		context
	m	(Laqu;Lbtn;)V	b	tickEffects
		p	0		world
		p	1		user
	m	(Laqu;Lbtn;Lbrk;)F	b	getDamageProtection
		p	0		world
		p	1		user
		p	2		damageSource
	m	(Laqu;Lbtn;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Layw;Ljm;ILdab;)V	b	lambda$processEquipmentDropChance$24
		p	5		enchantment
		p	6		level
		p	7		context
	m	(Laqu;Lbtn;Ljm;ILdab;)V	b	lambda$runLocationChangedEffects$13
		p	2		enchantment
		p	3		level
		p	4		context
	m	(Laqu;Lcuq;I)I	b	processBlockExperience
		p	0		world
		p	1		stack
		p	2		baseBlockExperience
	m	(Laqu;Lcuq;Lbsr;)F	b	getFishingTimeReduction
		p	0		world
		p	1		stack
		p	2		user
	m	(Laqu;Lcuq;Lbsr;Lbrk;F)F	b	modifyFallBasedDamage
		p	0		world
		p	1		stack
		p	2		target
		p	3		damageSource
		p	4		baseSmashDamagePerFallenBlock
	m	(Laqu;Lcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	b	lambda$modifyArmorEffectiveness$8
		p	5		enchantment
		p	6		level
	m	(Laqu;Lcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	b	lambda$getFishingTimeReduction$32
		p	4		enchantment
		p	5		level
	m	(Laqu;Lcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	b	lambda$getPiercingCount$19
		p	3		enchantment
		p	4		level
	m	(Layw;Lcuq;ILjava/util/stream/Stream;)Ljava/util/List;	b	selectEnchantment
		p	0		random
		p	1		stack
		p	2		level
		p	3		possibleEnchantments
	m	(Lbtn;Ljm;ILdab;)V	b	lambda$stopLocationBasedEffects$14
		p	1		enchantment
		p	2		level
		p	3		context
	m	(Lbtn;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	b	lambda$modifyCrossbowChargingTime$34
		p	2		enchantment
		p	3		level
	m	(Lcuq;)Ldai;	b	getEnchantmentsForCrafting
		p	0		stack
	m	(Lcuq;Lkp;)Ljava/util/Optional;	b	pickHighestLevel
		p	0		stack
		p	1		componentType
	m	(Lerr;Lorg/apache/commons/lang3/mutable/MutableFloat;ILayw;Ldak;)V	b	lambda$processEquipmentDropChance$23
		p	4		effect
	m	(Laqu;Lbtn;Ljm;ILdab;)V	c	lambda$runLocationChangedEffects$12
		p	2		enchantment
		p	3		level
		p	4		context
	m	(Laqu;Lcuq;I)I	c	modifyDurabilityToRepairFromXp
		p	0		world
		p	1		stack
		p	2		baseRepairWithXp
	m	(Laqu;Lcuq;Lbsr;)I	c	getTridentReturnToOwnerAcceleration
		p	0		world
		p	1		stack
		p	2		user
	m	(Laqu;Lcuq;Lbsr;Lbrk;F)F	c	modifyArmorEffectiveness
		p	0		world
		p	1		stack
		p	2		user
		p	3		damageSource
		p	4		baseArmorEffectiveness
	m	(Laqu;Lcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	c	lambda$modifyFallBasedDamage$7
		p	5		enchantment
		p	6		level
	m	(Laqu;Lcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	c	lambda$getFishingLuckBonus$31
		p	4		enchantment
		p	5		level
	m	(Laqu;Lcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	c	lambda$processBlockExperience$2
		p	3		enchantment
		p	4		level
	m	(Lcuq;)Z	c	hasAnyEnchantments
		p	0		stack
	m	(Lcuq;Lkp;)Lcom/mojang/datafixers/util/Pair;	c	getHighestLevel
		p	0		stack
		p	1		componentType
	m	(Laqu;Lcuq;Lbsr;Lbrk;F)F	d	modifyKnockback
		p	0		world
		p	1		stack
		p	2		target
		p	3		damageSource
		p	4		baseKnockback
	m	(Laqu;Lcuq;Lbsr;Lbrk;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	d	lambda$modifyDamage$6
		p	5		enchantment
		p	6		level
	m	(Laqu;Lcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	d	lambda$processProjectileSpread$18
		p	4		enchantment
		p	5		level
	m	(Laqu;Lcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	d	lambda$processAmmoUse$1
		p	3		enchantment
		p	4		level
	m	(Lcuq;)Lkp;	d	getComponentType
		p	0		stack
	m	(Laqu;Lcuq;Lbsr;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	e	lambda$processProjectileCount$17
		p	4		enchantment
		p	5		level
	m	(Laqu;Lcuq;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljm;I)V	e	lambda$processDurabilityChange$0
		p	3		enchantment
		p	4		level
c	dae$a	net/minecraft/world/item/enchantment/EnchantmentManager$a
	m	(Ljm;ILdab;)V	accept	accept
		p	1		enchantment
		p	2		level
		p	3		context
c	dae$b	net/minecraft/world/item/enchantment/EnchantmentManager$b
	m	(Ljm;I)V	accept	accept
		p	1		enchantment
		p	2		level
c	daf	net/minecraft/world/item/enchantment/WeightedRandomEnchant
	m	(Ljm;I)V	<init>	<init>
		p	1		enchantment
		p	2		level
	f	Ljm;	a	enchantment
	f	I	b	level
c	dag	net/minecraft/world/item/enchantment/EnchantmentTarget
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Ldag;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldag;	a	ATTACKER
	f	Ldag;	b	DAMAGING_ENTITY
	f	Ldag;	c	VICTIM
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Ldag;	f	$VALUES
c	dah	net/minecraft/world/item/enchantment/Enchantments
	m	(Ljava/lang/String;)Lakq;	a	key
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;Ldac$a;)V	a	register
		p	0		registry
		p	1		key
		p	2		builder
	f	Lakq;	A	FLAME
	f	Lakq;	B	INFINITY
	f	Lakq;	C	LUCK_OF_THE_SEA
	f	Lakq;	D	LURE
	f	Lakq;	E	LOYALTY
	f	Lakq;	F	IMPALING
	f	Lakq;	G	RIPTIDE
	f	Lakq;	H	CHANNELING
	f	Lakq;	I	MULTISHOT
	f	Lakq;	J	QUICK_CHARGE
	f	Lakq;	K	PIERCING
	f	Lakq;	L	DENSITY
	f	Lakq;	M	BREACH
	f	Lakq;	N	WIND_BURST
	f	Lakq;	O	MENDING
	f	Lakq;	P	VANISHING_CURSE
	f	Lakq;	a	PROTECTION
	f	Lakq;	b	FIRE_PROTECTION
	f	Lakq;	c	FEATHER_FALLING
	f	Lakq;	d	BLAST_PROTECTION
	f	Lakq;	e	PROJECTILE_PROTECTION
	f	Lakq;	f	RESPIRATION
	f	Lakq;	g	AQUA_AFFINITY
	f	Lakq;	h	THORNS
	f	Lakq;	i	DEPTH_STRIDER
	f	Lakq;	j	FROST_WALKER
	f	Lakq;	k	BINDING_CURSE
	f	Lakq;	l	SOUL_SPEED
	f	Lakq;	m	SWIFT_SNEAK
	f	Lakq;	n	SHARPNESS
	f	Lakq;	o	SMITE
	f	Lakq;	p	BANE_OF_ARTHROPODS
	f	Lakq;	q	KNOCKBACK
	f	Lakq;	r	FIRE_ASPECT
	f	Lakq;	s	LOOTING
	f	Lakq;	t	SWEEPING_EDGE
	f	Lakq;	u	EFFICIENCY
	f	Lakq;	v	SILK_TOUCH
	f	Lakq;	w	UNBREAKING
	f	Lakq;	x	FORTUNE
	f	Lakq;	y	POWER
	f	Lakq;	z	PUNCH
c	dai	net/minecraft/world/item/enchantment/ItemEnchantments
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Z)V	<init>	<init>
		p	1		enchantments
		p	2		showInTooltip
	m	()Ljava/util/Set;	a	keySet
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcul$b;Ljava/util/function/Consumer;Lcwm;)V	a	addToTooltip
		p	1		context
		p	2		tooltip
		p	3		type
	m	(Ldai;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		component
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)Ldai;	a	lambda$static$3
		p	0		map
	m	(Ljm;)I	a	getLevel
		p	1		enchantment
	m	(Ljo$a;Lakq;Lawu;)Ljq;	a	getTagOrEmpty
		p	0		registryLookup
		p	1		registryRef
		p	2		tooltipOrderTag
	m	(Z)Ldai;	a	withTooltip
		p	1		showInTooltip
	m	()Ljava/util/Set;	b	entrySet
	m	(Ldai;)Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	lambda$static$4
		p	0		component
	m	()I	c	size
	m	(Ldai;)Ljava/lang/Boolean;	c	lambda$static$1
		p	0		component
	m	()Z	d	isEmpty
	m	(Ldai;)Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	d	lambda$static$0
		p	0		component
	f	Ldai;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LEVEL_CODEC
	f	Lcom/mojang/serialization/Codec;	e	LEVELS_CODEC
	f	Lcom/mojang/serialization/Codec;	f	FULL_CODEC
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	g	enchantments
	f	Z	h	showInTooltip
c	dai$a	net/minecraft/world/item/enchantment/ItemEnchantments$a
	m	(Ldai;)V	<init>	<init>
		p	1		enchantmentsComponent
	m	()Ljava/util/Set;	a	keySet
	m	(Ljava/util/function/Predicate;)V	a	removeIf
		p	1		predicate
	m	(Ljm;)I	a	getLevel
		p	1		enchantment
	m	(Ljm;I)V	a	set
		p	1		enchantment
		p	2		level
	m	()Ldai;	b	toImmutable
	m	(Ljm;I)V	b	upgrade
		p	1		enchantment
		p	2		level
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	a	enchantments
	f	Z	b	showInTooltip
c	daj	net/minecraft/world/item/enchantment/LevelBasedValue
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(F)Ldaj$b;	a	constant
		p	0		value
	m	(FF)Ldaj$e;	a	perLevel
		p	0		base
		p	1		perLevelAboveFirst
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/datafixers/util/Either;)Ldaj;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
		p	0		codec
	m	(Ldaj$b;)Ldaj;	a	lambda$static$1
		p	0		type
	m	(Ldaj;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		type
	m	(Ljava/util/List;Ldaj;)Ldaj$f;	a	lookup
		p	0		values
		p	1		fallback
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	m	(F)Ldaj$e;	b	perLevel
		p	0		base
	m	(Ldaj;)Ldaj;	b	lambda$static$2
		p	0		type
	f	Lcom/mojang/serialization/Codec;	a	DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	daj$a	net/minecraft/world/item/enchantment/LevelBasedValue$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldaj$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		type
	m	()Ldaj;	b	value
	m	(Ldaj$a;)Ljava/lang/String;	b	lambda$static$1
	m	()F	c	min
	m	()F	d	max
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldaj;	d	value
	f	F	e	min
	f	F	f	max
c	daj$b	net/minecraft/world/item/enchantment/LevelBasedValue$b
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()F	b	value
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	TYPED_CODEC
	f	F	e	value
c	daj$c	net/minecraft/world/item/enchantment/LevelBasedValue$c
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	numerator
	m	()Ldaj;	c	denominator
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldaj;	d	numerator
	f	Ldaj;	e	denominator
c	daj$d	net/minecraft/world/item/enchantment/LevelBasedValue$d
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()F	b	added
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	F	d	added
c	daj$e	net/minecraft/world/item/enchantment/LevelBasedValue$e
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()F	b	base
	m	()F	c	perLevelAboveFirst
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	F	d	base
	f	F	e	perLevelAboveFirst
c	daj$f	net/minecraft/world/item/enchantment/LevelBasedValue$f
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(I)F	a	calculate
		p	1		level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/List;	b	values
	m	()Ldaj;	c	fallback
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ljava/util/List;	d	values
	f	Ldaj;	e	fallback
c	dak	net/minecraft/world/item/enchantment/TargetedConditionalEffect
	m	()Ldag;	a	enchanted
	m	(Lcom/mojang/serialization/Codec;Leul;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		effectCodec
		p	1		lootContextType
	m	(Lcom/mojang/serialization/Codec;Leul;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$equipmentDropsCodec$4
		p	2		instance
	m	(Ldag;)Lcom/mojang/serialization/DataResult;	a	lambda$equipmentDropsCodec$2
		p	0		enchanted
	m	(Ldag;Ljava/lang/Object;Ljava/util/Optional;)Ldak;	a	lambda$equipmentDropsCodec$3
		p	0		enchantedx
		p	1		effect
		p	2		requirements
	m	(Lerr;)Z	a	matches
		p	1		lootContext
	m	()Ldag;	b	affected
	m	(Lcom/mojang/serialization/Codec;Leul;)Lcom/mojang/serialization/Codec;	b	equipmentDropsCodec
		p	0		effectCodec
		p	1		lootContextType
	m	(Lcom/mojang/serialization/Codec;Leul;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$codec$0
		p	2		instance
	m	()Ljava/lang/Object;	c	effect
	m	()Ljava/util/Optional;	d	requirements
	m	()Ljava/lang/String;	e	lambda$equipmentDropsCodec$1
	f	Ldag;	a	enchanted
	f	Ldag;	b	affected
	f	Ljava/lang/Object;	c	effect
	f	Ljava/util/Optional;	d	requirements
c	dal	net/minecraft/world/item/enchantment/effects/AddValue
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	c	value
c	dam	net/minecraft/world/item/enchantment/effects/AllOf
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		baseCodec
		p	1		fromList
		p	2		toList
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	3		instance
	m	([Ldas;)Ldam$a;	a	entityEffects
		p	0		entityEffects
	m	([Ldat;)Ldam$b;	a	locationBasedEffects
		p	0		locationBasedEffects
	m	([Ldau;)Ldam$c;	a	valueEffects
		p	0		valueEffects
c	dam$a	net/minecraft/world/item/enchantment/effects/AllOf$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	()Ljava/util/List;	b	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	d	effects
c	dam$b	net/minecraft/world/item/enchantment/effects/AllOf$b
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;Z)V	a	onChangedBlock
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
		p	6		newlyApplied
	m	(Ldab;Lbsr;Lexc;I)V	a	onDeactivated
		p	1		context
		p	2		user
		p	3		pos
		p	4		level
	m	()Ljava/util/List;	b	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	effects
c	dam$c	net/minecraft/world/item/enchantment/effects/AllOf$c
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	()Ljava/util/List;	b	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	c	effects
c	dan	net/minecraft/world/item/enchantment/effects/ApplyMobEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljq;	b	toApply
	m	()Ldaj;	c	minDuration
	m	()Ldaj;	d	maxDuration
	m	()Ldaj;	e	minAmplifier
	m	()Ldaj;	f	maxAmplifier
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	d	toApply
	f	Ldaj;	e	minDuration
	f	Ldaj;	f	maxDuration
	f	Ldaj;	g	minAmplifier
	f	Ldaj;	h	maxAmplifier
c	dao	net/minecraft/world/item/enchantment/effects/DamageEntity
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	minDamage
	m	()Ldaj;	c	maxDamage
	m	()Ljm;	d	damageType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	d	minDamage
	f	Ldaj;	e	maxDamage
	f	Ljm;	f	damageType
c	dap	net/minecraft/world/item/enchantment/effects/DamageImmunity
	m	()Ldap;	a	lambda$static$0
	f	Ldap;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	daq	net/minecraft/world/item/enchantment/effects/DamageItem
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldaq;)Ldaj;	a	lambda$static$0
	m	()Ldaj;	b	amount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	d	amount
c	dar	net/minecraft/world/item/enchantment/effects/EnchantmentAttributeEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILazk;)Lbuu;	a	getModifier
		p	1		value
		p	2		suffix
	m	(ILbsy;)Lcom/google/common/collect/HashMultimap;	a	makeAttributeMap
		p	1		level
		p	2		slot
	m	(Laqu;ILdab;Lbsr;Lexc;Z)V	a	onChangedBlock
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
		p	6		newlyApplied
	m	(Lazk;)Lakr;	a	idForSlot
		p	1		suffix
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldab;Lbsr;Lexc;I)V	a	onDeactivated
		p	1		context
		p	2		user
		p	3		pos
		p	4		level
	m	()Lakr;	b	id
	m	()Ljm;	c	attribute
	m	()Ldaj;	d	amount
	m	()Lbuu$a;	e	operation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	b	id
	f	Ljm;	d	attribute
	f	Ldaj;	e	amount
	f	Lbuu$a;	f	operation
c	das	net/minecraft/world/item/enchantment/effects/EnchantmentEntityEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Laqu;ILdab;Lbsr;Lexc;Z)V	a	onChangedBlock
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
		p	6		newlyApplied
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dat	net/minecraft/world/item/enchantment/effects/EnchantmentLocationBasedEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;Z)V	a	onChangedBlock
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
		p	6		newlyApplied
	m	(Ldab;Lbsr;Lexc;I)V	a	onDeactivated
		p	1		context
		p	2		user
		p	3		pos
		p	4		level
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	b	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	dau	net/minecraft/world/item/enchantment/effects/EnchantmentValueEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dav	net/minecraft/world/item/enchantment/effects/ExplodeEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILdaj;)Ljava/lang/Float;	a	lambda$apply$1
		p	1		knockbackMultiplier
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lbsr;Lexc;)Lbrk;	a	getDamageSource
		p	1		user
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	attributeToUser
	m	()Ljava/util/Optional;	c	damageType
	m	()Ljava/util/Optional;	d	knockbackMultiplier
	m	()Ljava/util/Optional;	e	immuneBlocks
	m	()Lexc;	f	offset
	m	()Ldaj;	g	radius
	m	()Z	h	createFire
	m	()Ldcw$a;	i	blockInteraction
	m	()Llk;	j	smallParticle
	m	()Llk;	k	largeParticle
	m	()Ljm;	l	sound
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	d	attributeToUser
	f	Ljava/util/Optional;	e	damageType
	f	Ljava/util/Optional;	f	knockbackMultiplier
	f	Ljava/util/Optional;	g	immuneBlocks
	f	Lexc;	h	offset
	f	Ldaj;	i	radius
	f	Z	j	createFire
	f	Ldcw$a;	k	blockInteraction
	f	Llk;	l	smallParticle
	f	Llk;	m	largeParticle
	f	Ljm;	n	sound
c	daw	net/minecraft/world/item/enchantment/effects/Ignite
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldaw;)Ldaj;	a	lambda$static$0
	m	()Ldaj;	b	duration
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	d	duration
c	dax	net/minecraft/world/item/enchantment/effects/MultiplyValue
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	factor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	c	factor
c	day	net/minecraft/world/item/enchantment/effects/PlaySoundEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljm;	b	soundEvent
	m	()Lbpu;	c	volume
	m	()Lbpu;	d	pitch
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	d	soundEvent
	f	Lbpu;	e	volume
	f	Lbpu;	f	pitch
c	daz	net/minecraft/world/item/enchantment/effects/RemoveBinomial
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	chance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	c	chance
c	dba	net/minecraft/world/item/enchantment/effects/ReplaceBlock
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Laqu;Lbsr;Ljd;Ljm;)V	a	lambda$apply$2
		p	3		gameEvent
	m	(Laqu;Ljd;Leaf;)Ljava/lang/Boolean;	a	lambda$apply$1
		p	2		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lkh;	b	offset
	m	()Ljava/util/Optional;	c	predicate
	m	()Legj;	d	blockState
	m	()Ljava/util/Optional;	e	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkh;	d	offset
	f	Ljava/util/Optional;	e	predicate
	f	Legj;	f	blockState
	f	Ljava/util/Optional;	g	triggerGameEvent
c	dbb	net/minecraft/world/item/enchantment/effects/ReplaceDisk
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Laqu;Lbsr;Ljd;Ljm;)V	a	lambda$apply$2
		p	3		gameEvent
	m	(Laqu;Ljd;Leaf;)Ljava/lang/Boolean;	a	lambda$apply$1
		p	2		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	radius
	m	()Ldaj;	c	height
	m	()Lkh;	d	offset
	m	()Ljava/util/Optional;	e	predicate
	m	()Legj;	f	blockState
	m	()Ljava/util/Optional;	g	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	d	radius
	f	Ldaj;	e	height
	f	Lkh;	f	offset
	f	Ljava/util/Optional;	g	predicate
	f	Legj;	h	blockState
	f	Ljava/util/Optional;	i	triggerGameEvent
c	dbc	net/minecraft/world/item/enchantment/effects/RunFunction
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lakr;	b	function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	d	function
	f	Lorg/slf4j/Logger;	e	LOGGER
c	dbd	net/minecraft/world/item/enchantment/effects/SetBlockProperties
	m	(Lcxd;)V	<init>	<init>
		p	1		properties
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Laqu;Lbsr;Ljd;Ljm;)V	a	lambda$apply$1
		p	3		gameEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcxd;	b	properties
	m	()Lkh;	c	offset
	m	()Ljava/util/Optional;	d	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcxd;	d	properties
	f	Lkh;	e	offset
	f	Ljava/util/Optional;	f	triggerGameEvent
c	dbe	net/minecraft/world/item/enchantment/effects/SetValue
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILayw;F)F	a	process
		p	1		level
		p	2		random
		p	3		inputValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldaj;	b	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	c	value
c	dbf	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(F)Ldbf$a;	a	offsetFromEntityPosition
		p	0		offset
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lbpu;)Ldbf$c;	a	fixedVelocity
		p	0		base
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldbf$a;	b	inBoundingBox
	m	(F)Ldbf$c;	b	movementScaled
		p	0		movementScale
	m	()Llk;	c	particle
	m	()Ldbf$a;	d	horizontalPosition
	m	()Ldbf$a;	e	verticalPosition
	m	()Ldbf$c;	f	horizontalVelocity
	m	()Ldbf$c;	g	verticalVelocity
	m	()Lbpu;	h	speed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Llk;	d	particle
	f	Ldbf$a;	e	horizontalPosition
	f	Ldbf$a;	f	verticalPosition
	f	Ldbf$c;	g	horizontalVelocity
	f	Ldbf$c;	h	verticalVelocity
	f	Lbpu;	i	speed
c	dbf$a	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$a
	m	()Ldbf$b;	a	type
	m	(DDFLayw;)D	a	getCoordinate
		p	1		entityPosition
		p	3		boundingBoxCenter
		p	5		boundingBoxSize
		p	6		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldbf$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		source
	m	()F	b	offset
	m	()F	c	scale
	m	()Ljava/lang/String;	d	lambda$static$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldbf$b;	b	type
	f	F	c	offset
	f	F	d	scale
c	dbf$b	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$b
	m	(Ljava/lang/String;ILjava/lang/String;Ldbf$b$a;)V	<init>	<init>
		p	3		id
		p	4		coordinateSource
	m	()[Ldbf$b;	a	$values
	m	(DDFLayw;)D	a	getCoordinate
		p	1		entityPosition
		p	3		boundingBoxCenter
		p	5		boundingBoxSize
		p	6		random
	m	(DDFLayw;)D	b	lambda$static$1
		p	0		entityPosition
		p	2		boundingBoxCenter
		p	4		boundingBoxSize
		p	5		random
	m	()Ljava/lang/String;	c	getSerializedName
	m	(DDFLayw;)D	c	lambda$static$0
		p	0		entityPosition
		p	2		boundingBoxCenter
		p	4		boundingBoxSize
		p	5		random
	f	Ldbf$b;	a	ENTITY_POSITION
	f	Ldbf$b;	b	BOUNDING_BOX
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	Ldbf$b$a;	e	source
	f	[Ldbf$b;	f	$VALUES
c	dbf$b$a	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$b$a
	m	(DDFLayw;)D	getCoordinate	getCoordinate
		p	1		entityPosition
		p	3		boundingBoxCenter
		p	5		boundingBoxSize
		p	6		random
c	dbf$c	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$c
	m	()F	a	movementScale
	m	(DLayw;)D	a	getVelocity
		p	1		entityVelocity
		p	3		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbpu;	b	base
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	movementScale
	f	Lbpu;	c	base
c	dbg	net/minecraft/world/item/enchantment/effects/SummonEntityEffect
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;ILdab;Lbsr;Lexc;)V	a	apply
		p	1		world
		p	2		level
		p	3		context
		p	4		user
		p	5		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljq;	b	entityTypes
	m	()Z	c	joinTeam
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	d	entityTypes
	f	Z	e	joinTeam
c	dbj	net/minecraft/world/item/enchantment/providers/EnchantmentProvider
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldai$a;Layw;Lbqp;)V	a	enchant
		p	1		stack
		p	2		componentBuilder
		p	3		random
		p	4		localDifficulty
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
c	dbk	net/minecraft/world/item/enchantment/providers/EnchantmentProviderTypes
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
c	dbl	net/minecraft/world/item/enchantment/providers/EnchantmentsByCost
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ldai$a;Layw;Lbqp;)V	a	enchant
		p	1		stack
		p	2		componentBuilder
		p	3		random
		p	4		localDifficulty
	m	()Ljq;	b	enchantments
	m	()Lbpw;	c	cost
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljq;	c	enchantments
	f	Lbpw;	d	cost
c	dbm	net/minecraft/world/item/enchantment/providers/EnchantmentsByCostWithDifficulty
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ldai$a;Layw;Lbqp;)V	a	enchant
		p	1		stack
		p	2		componentBuilder
		p	3		random
		p	4		localDifficulty
	m	()Ljq;	b	enchantments
	m	()I	c	minCost
	m	()I	d	maxCostSpan
	f	I	b	MAX_ALLOWED_VALUE_PART
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ljq;	d	enchantments
	f	I	e	minCost
	f	I	f	maxCostSpan
c	dbn	net/minecraft/world/item/enchantment/providers/SingleEnchantment
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ldai$a;Layw;Lbqp;)V	a	enchant
		p	1		stack
		p	2		componentBuilder
		p	3		random
		p	4		localDifficulty
	m	()Ljm;	b	enchantment
	m	()Lbpw;	c	level
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljm;	c	enchantment
	f	Lbpw;	d	level
c	dbo	net/minecraft/world/item/enchantment/providers/TradeRebalanceEnchantmentProviders
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	f	Lakq;	A	TRADES_JUNGLE_ARMORER_BOOTS_5
	f	Lakq;	B	TRADES_JUNGLE_ARMORER_HELMET_5
	f	Lakq;	C	TRADES_SWAMP_ARMORER_BOOTS_4
	f	Lakq;	D	TRADES_SWAMP_ARMORER_LEGGINGS_4
	f	Lakq;	E	TRADES_SWAMP_ARMORER_CHESTPLATE_4
	f	Lakq;	F	TRADES_SWAMP_ARMORER_HELMET_4
	f	Lakq;	G	TRADES_SWAMP_ARMORER_BOOTS_5
	f	Lakq;	H	TRADES_SWAMP_ARMORER_HELMET_5
	f	Lakq;	I	TRADES_TAIGA_ARMORER_LEGGINGS_5
	f	Lakq;	J	TRADES_TAIGA_ARMORER_CHESTPLATE_5
	f	Lakq;	a	TRADES_DESERT_ARMORER_BOOTS_4
	f	Lakq;	b	TRADES_DESERT_ARMORER_LEGGINGS_4
	f	Lakq;	c	TRADES_DESERT_ARMORER_CHESTPLATE_4
	f	Lakq;	d	TRADES_DESERT_ARMORER_HELMET_4
	f	Lakq;	e	TRADES_DESERT_ARMORER_LEGGINGS_5
	f	Lakq;	f	TRADES_DESERT_ARMORER_CHESTPLATE_5
	f	Lakq;	g	TRADES_PLAINS_ARMORER_BOOTS_4
	f	Lakq;	h	TRADES_PLAINS_ARMORER_LEGGINGS_4
	f	Lakq;	i	TRADES_PLAINS_ARMORER_CHESTPLATE_4
	f	Lakq;	j	TRADES_PLAINS_ARMORER_HELMET_4
	f	Lakq;	k	TRADES_PLAINS_ARMORER_BOOTS_5
	f	Lakq;	l	TRADES_PLAINS_ARMORER_LEGGINGS_5
	f	Lakq;	m	TRADES_SAVANNA_ARMORER_BOOTS_4
	f	Lakq;	n	TRADES_SAVANNA_ARMORER_LEGGINGS_4
	f	Lakq;	o	TRADES_SAVANNA_ARMORER_CHESTPLATE_4
	f	Lakq;	p	TRADES_SAVANNA_ARMORER_HELMET_4
	f	Lakq;	q	TRADES_SAVANNA_ARMORER_CHESTPLATE_5
	f	Lakq;	r	TRADES_SAVANNA_ARMORER_HELMET_5
	f	Lakq;	s	TRADES_SNOW_ARMORER_BOOTS_4
	f	Lakq;	t	TRADES_SNOW_ARMORER_HELMET_4
	f	Lakq;	u	TRADES_SNOW_ARMORER_BOOTS_5
	f	Lakq;	v	TRADES_SNOW_ARMORER_HELMET_5
	f	Lakq;	w	TRADES_JUNGLE_ARMORER_BOOTS_4
	f	Lakq;	x	TRADES_JUNGLE_ARMORER_LEGGINGS_4
	f	Lakq;	y	TRADES_JUNGLE_ARMORER_CHESTPLATE_4
	f	Lakq;	z	TRADES_JUNGLE_ARMORER_HELMET_4
c	dbp	net/minecraft/world/item/enchantment/providers/VanillaEnchantmentProviders
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	f	Lakq;	a	MOB_SPAWN_EQUIPMENT
	f	Lakq;	b	PILLAGER_SPAWN_CROSSBOW
	f	Lakq;	c	RAID_PILLAGER_POST_WAVE_3
	f	Lakq;	d	RAID_PILLAGER_POST_WAVE_5
	f	Lakq;	e	RAID_VINDICATOR
	f	Lakq;	f	RAID_VINDICATOR_POST_WAVE_5
	f	Lakq;	g	ENDERMAN_LOOT_DROP
c	dbs	net/minecraft/world/item/trading/ItemCost
	m	(Ldcv;)V	<init>	<init>
		p	1		item
	m	(Ldcv;I)V	<init>	<init>
		p	1		item
		p	2		count
	m	(Ljm;ILko;)V	<init>	<init>
		p	1		item
		p	2		count
		p	3		components
	m	()Ljm;	a	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;)Z	a	test
		p	1		stack
	m	(Ljava/util/function/UnaryOperator;)Ldbs;	a	withComponents
		p	1		builderCallback
	m	(Ljm;ILko;)Lcuq;	a	createStack
		p	0		item
		p	1		count
		p	2		components
	m	()I	b	count
	m	()Lko;	c	components
	m	()Lcuq;	d	itemStack
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lyx;	c	OPTIONAL_STREAM_CODEC
	f	Ljm;	d	item
	f	I	e	count
	f	Lko;	f	components
	f	Lcuq;	g	itemStack
c	dbt	net/minecraft/world/item/trading/IMerchant
	m	(ILcmw;Lcmx;)Lcpu;	a	lambda$openTradingScreen$0
		p	1		syncId
		p	2		playerInventory
		p	3		playerx
	m	(Lcmx;)V	a	setTradingPlayer
		p	1		customer
	m	(Lcmx;Lwz;I)V	a	openTradingScreen
		p	1		player
		p	2		name
		p	3		levelProgress
	m	(Ldbu;)V	a	notifyTrade
		p	1		offer
	m	(Ldbv;)V	a	overrideOffers
		p	1		offers
	m	()Lcmx;	gk	getTradingPlayer
	m	()Ldbv;	gm	getOffers
	m	()Z	gn	showProgressBar
	m	()Lavo;	go	getNotifyTradeSound
	m	()Z	gs	isClientSide
	m	()Z	gw	canRestock
	m	(Lcuq;)V	n	notifyTradeUpdated
		p	1		stack
	m	()I	t	getVillagerXp
	m	(I)V	t	overrideXp
		p	1		experience
c	dbu	net/minecraft/world/item/trading/MerchantRecipe
	m	(Ldbs;Lcuq;IIF)V	<init>	<init>
		p	1		buyItem
		p	2		sellItem
		p	3		maxUses
		p	4		merchantExperience
		p	5		priceMultiplier
	m	(Ldbs;Ljava/util/Optional;Lcuq;IIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		maxUses
		p	5		merchantExperience
		p	6		priceMultiplier
	m	(Ldbs;Ljava/util/Optional;Lcuq;IIIF)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
	m	(Ldbs;Ljava/util/Optional;Lcuq;IIIFI)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		merchantExperience
		p	7		priceMultiplier
		p	8		demandBonus
	m	(Ldbs;Ljava/util/Optional;Lcuq;IIZIIFI)V	<init>	<init>
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		sellItem
		p	4		uses
		p	5		maxUses
		p	6		rewardingPlayerExperience
		p	7		specialPrice
		p	8		demandBonus
		p	9		priceMultiplier
		p	10		merchantExperience
	m	(Ldbu;)V	<init>	<init>
		p	1		offer
	m	()Lcuq;	a	getBaseCostA
	m	(I)V	a	addToSpecialPriceDiff
		p	1		increment
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Lcuq;Lcuq;)Z	a	satisfiedBy
		p	1		stack
		p	2		buyItem
	m	(Ldbs;)I	a	getModifiedCostCount
		p	1		firstBuyItem
	m	(Ldbu;)Ljava/lang/Integer;	a	lambda$static$9
		p	0		tradeOffer
	m	(Lwk;)Ldbu;	a	createFromStream
		p	0		buf
	m	(Lwk;Ldbu;)V	a	writeToStream
		p	0		buf
		p	1		offer
	m	()Lcuq;	b	getCostA
	m	(I)V	b	setSpecialPriceDiff
		p	1		specialPrice
	m	(Lcuq;Lcuq;)Z	b	take
		p	1		firstBuyStack
		p	2		secondBuyStack
	m	(Ldbu;)Ljava/lang/Float;	b	lambda$static$8
		p	0		tradeOffer
	m	()Lcuq;	c	getCostB
	m	(Ldbu;)Ljava/lang/Integer;	c	lambda$static$7
		p	0		tradeOffer
	m	()Ldbs;	d	getItemCostA
	m	(Ldbu;)Ljava/lang/Integer;	d	lambda$static$6
		p	0		tradeOffer
	m	()Ljava/util/Optional;	e	getItemCostB
	m	(Ldbu;)Ljava/lang/Boolean;	e	lambda$static$5
		p	0		tradeOffer
	m	()Lcuq;	f	getResult
	m	(Ldbu;)Ljava/lang/Integer;	f	lambda$static$4
		p	0		tradeOffer
	m	()V	g	updateDemand
	m	(Ldbu;)Ljava/lang/Integer;	g	lambda$static$3
		p	0		tradeOffer
	m	()Lcuq;	h	assemble
	m	(Ldbu;)Lcuq;	h	lambda$static$2
		p	0		tradeOffer
	m	()I	i	getUses
	m	(Ldbu;)Ljava/util/Optional;	i	lambda$static$1
		p	0		tradeOffer
	m	()V	j	resetUses
	m	(Ldbu;)Ldbs;	j	lambda$static$0
		p	0		tradeOffer
	m	()I	k	getMaxUses
	m	()V	l	increaseUses
	m	()I	m	getDemand
	m	()V	n	resetSpecialPriceDiff
	m	()I	o	getSpecialPriceDiff
	m	()F	p	getPriceMultiplier
	m	()I	q	getXp
	m	()Z	r	isOutOfStock
	m	()V	s	setToOutOfStock
	m	()Z	t	needsRestock
	m	()Z	u	shouldRewardExp
	m	()Ldbu;	v	copy
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ldbs;	c	baseCostA
	f	Ljava/util/Optional;	d	costB
	f	Lcuq;	e	result
	f	I	f	uses
	f	I	g	maxUses
	f	Z	h	rewardExp
	f	I	i	specialPriceDiff
	f	I	j	demand
	f	F	k	priceMultiplier
	f	I	l	xp
c	dbv	net/minecraft/world/item/trading/MerchantRecipeList
	m	(I)V	<init>	<init>
		p	1		size
	m	(Ljava/util/Collection;)V	<init>	<init>
		p	1		tradeOffers
	m	()Ldbv;	a	copy
	m	(Lcuq;Lcuq;I)Ldbu;	a	getRecipeFor
		p	1		firstBuyItem
		p	2		secondBuyItem
		p	3		index
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
c	dbx	net/minecraft/world/level/CommandBlockListenerAbstract
	m	()Z	M_	shouldInformAdmins
	m	(I)V	a	setSuccessCount
		p	1		successCount
	m	(Lcmx;)Lbqr;	a	usedBy
		p	1		player
	m	(Ldcw;)Z	a	performCommand
		p	1		world
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registries
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(Z)V	a	setTrackOutput
		p	1		trackOutput
	m	(ZI)V	a	lambda$performCommand$0
		p	1		successful
		p	2		returnValue
	m	(Lub;Ljo$a;)V	b	load
		p	1		nbt
		p	2		registries
	m	(Lwz;)V	b	setCustomName
		p	1		customName
	m	(Lwz;)V	c	setLastOutput
		p	1		lastOutput
	m	()Laqu;	e	getLevel
	m	()V	f	onUpdated
	m	()Lexc;	g	getPosition
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	()Let;	i	createCommandSourceStack
	m	()Z	j	isValid
	m	()I	k	getSuccessCount
	m	()Z	k_	acceptsSuccess
	m	()Lwz;	l	getLastOutput
	m	()Ljava/lang/String;	m	getCommand
	m	()Lwz;	n	getName
	m	()Lwz;	o	getCustomName
	m	()Z	p	isTrackOutput
	m	()Z	w_	acceptsFailure
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Lwz;	c	DEFAULT_NAME
	f	J	d	lastExecution
	f	Z	e	updateLastExecution
	f	I	f	successCount
	f	Z	g	trackOutput
	f	Lwz;	h	lastOutput
	f	Ljava/lang/String;	i	command
	f	Lwz;	j	customName
c	dby	net/minecraft/world/level/MobSpawnerAbstract
	m	()D	a	getSpin
	m	(DDDLbsr;)Lbsr;	a	lambda$serverTick$0
		p	6		entity
	m	(Laqu;Ljd;)V	a	serverTick
		p	1		world
		p	2		pos
	m	(Lbsx;Ldcw;Layw;Ljd;)V	a	setEntityId
		p	1		type
		p	2		world
		p	3		random
		p	4		pos
	m	(Ldcw;I)Z	a	onEventTriggered
		p	1		world
		p	2		status
	m	(Ldcw;Layw;Ljd;)Lddo;	a	getOrCreateNextSpawnData
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldcw;Ljd;)V	a	clientTick
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Ldcw;Ljd;Lbpd$b;)V	a	lambda$delay$1
		p	3		spawnPotential
	m	(Ldcw;Ljd;Lddo;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
	m	(Ldcw;Ljd;Lub;)V	a	load
		p	1		world
		p	2		pos
		p	3		nbt
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$save$4
	m	(Lub;)Lub;	a	save
		p	1		nbt
	m	()D	b	getoSpin
	m	(Ldcw;Ljd;)Lbsr;	b	getOrCreateDisplayEntity
		p	1		world
		p	2		pos
	m	(Ljava/lang/String;)V	b	lambda$load$3
		p	0		error
	m	(Ldcw;Ljd;)Z	c	isNearPlayer
		p	1		world
		p	2		pos
	m	(Ljava/lang/String;)V	c	lambda$load$2
	m	(Ldcw;Ljd;)V	d	delay
		p	1		world
		p	2		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SPAWN_DATA_TAG
	f	I	c	EVENT_SPAWN
	f	I	d	spawnDelay
	f	Lbpb;	e	spawnPotentials
	f	Lddo;	f	nextSpawnData
	f	D	g	spin
	f	D	h	oSpin
	f	I	i	minSpawnDelay
	f	I	j	maxSpawnDelay
	f	I	k	spawnCount
	f	Lbsr;	l	displayEntity
	f	I	m	maxNearbyEntities
	f	I	n	requiredPlayerRange
	f	I	o	spawnRange
c	dbz	net/minecraft/world/level/IBlockLightAccess
	m	(Lddf;Ljd;)I	a	getBrightness
		p	1		type
		p	2		pos
	m	(Ljd;Ldch;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Lji;Z)F	a	getShade
		p	1		direction
		p	2		shaded
	m	(Ljd;I)I	b	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Ljd;)Z	h	canSeeSky
		p	1		pos
	m	()Leot;	y_	getLightEngine
c	dca	net/minecraft/world/level/VoxelShapeSpliterator
	m	(Ldcg;Lbsr;Lewx;ZLjava/util/function/BiFunction;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		box
		p	4		forEntity
		p	5		resultFunction
	m	(II)Ldcc;	a	getChunk
		p	1		x
		p	2		z
	f	Lewx;	a	box
	f	Lexh;	b	context
	f	Ljf;	c	cursor
	f	Ljd$a;	d	pos
	f	Lexv;	e	entityShape
	f	Ldcg;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Ldcc;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
	f	Ljava/util/function/BiFunction;	j	resultProvider
c	dcb	net/minecraft/world/level/BlockActionData
	m	(Ljd;Ldfy;II)V	<init>	<init>
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	()Ljd;	a	pos
	m	()Ldfy;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
	f	Ljd;	a	pos
	f	Ldfy;	b	block
	f	I	c	paramA
	f	I	d	paramB
c	dcc	net/minecraft/world/level/IBlockAccess
	m	()I	Q	getMaxLightLevel
	m	(Ldce;)Lewy;	a	isBlockInLine
		p	1		context
	m	(Ldce;Ljd;)Lewy;	a	lambda$isBlockInLine$0
		p	1		innerContext
		p	2		pos
	m	(Ldcf;)Lewy;	a	clip
		p	1		context
	m	(Ldcf;Ljd;)Lewy;	a	lambda$clip$2
		p	1		innerContext
		p	2		pos
	m	(Lewx;)Ljava/util/stream/Stream;	a	getBlockStates
		p	1		box
	m	(Lexc;Lexc;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
		p	0		start
		p	1		end
		p	2		context
		p	3		blockHitFactory
		p	4		missFactory
	m	(Lexc;Lexc;Ljd;Lexv;Ldtc;)Lewy;	a	clipWithInteractionOverride
		p	1		start
		p	2		end
		p	3		pos
		p	4		shape
		p	5		state
	m	(Lexv;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
		p	1		blockCollisionShape
		p	2		belowBlockCollisionShapeGetter
	m	(Ljd;Ldqj;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(Ldce;)Lewy;	b	lambda$isBlockInLine$1
		p	0		innerContext
	m	(Ldcf;)Lewy;	b	lambda$clip$3
		p	0		innerContext
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(Ljd;)Lexv;	f	lambda$getBlockFloorHeight$4
	m	(Ljd;)I	i	getLightEmission
		p	1		pos
	m	(Ljd;)D	j	getBlockFloorHeight
		p	1		pos
c	dcd	net/minecraft/world/level/ChunkCoordIntPair
	m	(II)V	<init>	<init>
		p	1		x
		p	2		z
	m	(J)V	<init>	<init>
		p	1		pos
	m	(Ljd;)V	<init>	<init>
		p	1		pos
	m	()J	a	toLong
	m	(I)I	a	getBlockX
		p	1		offset
	m	(II)Ldcd;	a	minFromRegion
		p	0		x
		p	1		z
	m	(III)Ljd;	a	getBlockAt
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(J)I	a	getX
		p	0		pos
	m	(Ldcd;)I	a	getChessboardDistance
		p	1		pos
	m	(Ldcd;I)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		center
		p	1		radius
	m	(Ldcd;Ldcd;)Ljava/util/stream/Stream;	a	rangeClosed
		p	0		pos1
		p	1		pos2
	m	(Ljd;)J	a	asLong
		p	0		pos
	m	()I	b	getMiddleBlockX
	m	(I)I	b	getBlockZ
		p	1		offset
	m	(II)Ldcd;	b	maxFromRegion
		p	0		x
		p	1		z
	m	(J)I	b	getZ
		p	0		pos
	m	(Ldcd;)I	b	distanceSquared
		p	1		pos
	m	()I	c	getMiddleBlockZ
	m	(I)Ljd;	c	getMiddleBlockPosition
		p	1		y
	m	(II)J	c	asLong
		p	0		chunkX
		p	1		chunkZ
	m	(J)I	c	distanceSquared
		p	1		pos
	m	()I	d	getMinBlockX
	m	(II)I	d	hash
		p	0		x
		p	1		z
	m	()I	e	getMinBlockZ
	m	(II)I	e	getChessboardDistance
		p	1		x
		p	2		z
	m	()I	f	getMaxBlockX
	m	(II)I	f	distanceSquared
		p	1		x
		p	2		z
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	()Ljd;	l	getWorldPosition
	f	J	a	INVALID_CHUNK_POS
	f	Ldcd;	b	ZERO
	f	I	c	REGION_SIZE
	f	I	d	REGION_MAX_INDEX
	f	I	e	x
	f	I	f	z
	f	I	g	SAFETY_MARGIN
	f	J	h	COORD_BITS
	f	J	i	COORD_MASK
	f	I	j	REGION_BITS
	f	I	k	REGION_MASK
	f	I	l	HASH_A
	f	I	m	HASH_C
	f	I	n	HASH_Z_XOR
c	dcd$1	net/minecraft/world/level/ChunkCoordIntPair$1
	f	Ldcd;	a	val$from
	f	Ldcd;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	f	Ldcd;	e	pos
c	dce	net/minecraft/world/level/ClipBlockStateContext
	m	(Lexc;Lexc;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		statePredicate
	m	()Lexc;	a	getTo
	m	()Lexc;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
	f	Lexc;	a	from
	f	Lexc;	b	to
	f	Ljava/util/function/Predicate;	c	block
c	dcf	net/minecraft/world/level/RayTrace
	m	(Lexc;Lexc;Ldcf$a;Ldcf$b;Lbsr;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		shapeType
		p	4		fluidHandling
		p	5		entity
	m	(Lexc;Lexc;Ldcf$a;Ldcf$b;Lexh;)V	<init>	<init>
		p	1		start
		p	2		end
		p	3		shapeType
		p	4		fluidHandling
		p	5		shapeContext
	m	()Lexc;	a	getTo
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getBlockShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Lepe;Ldcc;Ljd;)Lexv;	a	getFluidShape
		p	1		state
		p	2		world
		p	3		pos
	m	()Lexc;	b	getFrom
	f	Lexc;	a	from
	f	Lexc;	b	to
	f	Ldcf$a;	c	block
	f	Ldcf$b;	d	fluid
	f	Lexh;	e	collisionContext
c	dcf$a	net/minecraft/world/level/RayTrace$BlockCollisionOption
	m	(Ljava/lang/String;ILdcf$c;)V	<init>	<init>
		p	3		provider
	m	()[Ldcf$a;	a	$values
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Ldcf$a;	a	COLLIDER
	f	Ldcf$a;	b	OUTLINE
	f	Ldcf$a;	c	VISUAL
	f	Ldcf$a;	d	FALLDAMAGE_RESETTING
	f	Ldcf$c;	e	shapeGetter
	f	[Ldcf$a;	f	$VALUES
c	dcf$b	net/minecraft/world/level/RayTrace$FluidCollisionOption
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
		p	3		predicate
	m	()[Ldcf$b;	a	$values
	m	(Lepe;)Z	a	canPick
		p	1		state
	m	(Lepe;)Z	b	lambda$static$2
		p	0		state
	m	(Lepe;)Z	c	lambda$static$1
		p	0		state
	m	(Lepe;)Z	d	lambda$static$0
		p	0		state
	f	Ldcf$b;	a	NONE
	f	Ldcf$b;	b	SOURCE_ONLY
	f	Ldcf$b;	c	ANY
	f	Ldcf$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Ldcf$b;	f	$VALUES
c	dcf$c	net/minecraft/world/level/RayTrace$c
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	get	get
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
c	dcg	net/minecraft/world/level/ICollisionAccess
	m	()Ldut;	C_	getWorldBorder
	m	(DDDLewx;)Lewx;	a	lambda$findFreePosition$6
	m	(Lbsr;Lewx;)Z	a	noCollision
		p	1		entity
		p	2		box
	m	(Lbsr;Lexv;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbsr;Lexv;Lexc;DDD)Ljava/util/Optional;	a	findFreePosition
		p	1		entity
		p	2		shape
		p	3		target
		p	4		x
		p	6		y
		p	8		z
	m	(Ldtc;Ljd;Lexh;)Z	a	isUnobstructed
		p	1		state
		p	2		pos
		p	3		context
	m	(Lexv;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$5
	m	(Ljd$a;Lexv;)Ljd;	a	lambda$findSupportingBlock$3
		p	0		pos
		p	1		voxelShape
	m	(Lbsr;Lewx;)Z	b	noBlockCollision
		p	1		entity
		p	2		box
	m	(Lewx;)Z	b	noCollision
		p	1		box
	m	(Lexv;)Z	b	lambda$findFreePosition$4
	m	(Ljd$a;Lexv;)Lexv;	b	lambda$collidesWithSuffocatingBlock$2
		p	0		pos
		p	1		voxelShape
	m	(II)Ldcc;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbsr;Lewx;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Ljd$a;Lexv;)Lexv;	c	lambda$getBlockCollisions$0
		p	0		pos
		p	1		voxelShape
	m	(Lbsr;Lewx;)Ljava/lang/Iterable;	d	getCollisions
		p	1		entity
		p	2		box
	m	(Lbsr;Lewx;)Ljava/lang/Iterable;	e	getBlockCollisions
		p	1		entity
		p	2		box
	m	(Lbsr;)Z	f	isUnobstructed
		p	1		entity
	m	(Lbsr;Lewx;)Z	f	collidesWithSuffocatingBlock
		p	1		entity
		p	2		box
	m	(Lbsr;)Z	g	noCollision
		p	1		entity
	m	(Lbsr;Lewx;)Ljava/util/Optional;	g	findSupportingBlock
		p	1		entity
		p	2		box
	m	(Lbsr;Lewx;)Lexv;	h	borderCollision
		p	1		entity
		p	2		box
	m	(Lbsr;Lewx;)Ljava/util/Iterator;	i	lambda$getBlockCollisions$1
c	dch	net/minecraft/world/level/ColorResolver
	m	(Lddw;DD)I	getColor	getColor
		p	1		biome
		p	2		x
		p	4		z
c	dci	net/minecraft/world/level/ICombinedAccess
	m	(Lbsr;Lexv;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Ldyy$a;Ljd;)Ljd;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Ljd;Ldqj;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Lbsr;Lewx;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
c	dcj	net/minecraft/world/level/MobSpawner
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
c	dck	net/minecraft/world/level/DataPackConfiguration
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		enabled
		p	2		disabled
	m	()Ljava/util/List;	a	getEnabled
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldck;)Ljava/util/List;	a	lambda$static$1
		p	0		settings
	m	()Ljava/util/List;	b	getDisabled
	m	(Ldck;)Ljava/util/List;	b	lambda$static$0
		p	0		settings
	f	Ldck;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
c	dcl	net/minecraft/world/level/BlockAccessAir
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
	m	()[Ldcl;	a	$values
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	f	Ldcl;	a	INSTANCE
	f	[Ldcl;	b	$VALUES
c	dcm	net/minecraft/world/level/ExplosionDamageCalculatorEntity
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
		p	6		max
	f	Lbsr;	a	source
c	dcn	net/minecraft/world/level/IEntityAccess
	m	(DDDD)Z	a	hasNearbyAlivePlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		range
	m	(DDDDLjava/util/function/Predicate;)Lcmx;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		targetPredicate
	m	(DDDDZ)Lcmx;	a	getNearestPlayer
		p	1		x
		p	3		y
		p	5		z
		p	7		maxDistance
		p	9		ignoreCreative
	m	(Lbsr;D)Lcmx;	a	getNearestPlayer
		p	1		entity
		p	2		maxDistance
	m	(Lbsr;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbsr;Lexv;)Z	a	isUnobstructed
		p	1		except
		p	2		shape
	m	(Lbtn;)Z	a	lambda$getNearbyEntities$1
	m	(Lcef;DDD)Lcmx;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		x
		p	4		y
		p	6		z
	m	(Lcef;Lbtn;)Lcmx;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
	m	(Lcef;Lbtn;DDD)Lcmx;	a	getNearestPlayer
		p	1		targetPredicate
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
	m	(Lcef;Lbtn;Lewx;)Ljava/util/List;	a	getNearbyPlayers
		p	1		targetPredicate
		p	2		entity
		p	3		box
	m	(Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ljava/lang/Class;Lcef;Lbtn;DDDLewx;)Lbtn;	a	getNearestEntity
		p	1		entityClass
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
		p	10		box
	m	(Ljava/lang/Class;Lcef;Lbtn;Lewx;)Ljava/util/List;	a	getNearbyEntities
		p	1		entityClass
		p	2		targetPredicate
		p	3		targetingEntity
		p	4		box
	m	(Ljava/lang/Class;Lewx;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
	m	(Ljava/lang/Class;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
		p	1		entityClass
		p	2		box
		p	3		predicate
	m	(Ljava/util/List;Lcef;Lbtn;DDD)Lbtn;	a	getNearestEntity
		p	1		entityList
		p	2		targetPredicate
		p	3		entity
		p	4		x
		p	6		y
		p	8		z
	m	(Lbsr;Lewx;)Ljava/util/List;	a_	getEntities
		p	1		except
		p	2		box
	m	(Lbtn;)Z	b	lambda$getNearestEntity$0
		p	0		entityOfClass
	m	(Ljava/util/UUID;)Lcmx;	b	getPlayerByUUID
		p	1		uuid
	m	(Lbsr;Lewx;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	()Ljava/util/List;	x	players
c	dco	net/minecraft/world/level/Explosion
	m	(Ldcw;Lbsr;DDDFLjava/util/List;Ldco$a;Llk;Llk;Ljm;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		affectedBlocks
		p	11		destructionType
		p	12		particle
		p	13		emitterParticle
		p	14		soundEvent
	m	(Ldcw;Lbsr;DDDFZLdco$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
	m	(Ldcw;Lbsr;DDDFZLdco$a;Ljava/util/List;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		x
		p	5		y
		p	7		z
		p	9		power
		p	10		createFire
		p	11		destructionType
		p	12		affectedBlocks
	m	(Ldcw;Lbsr;Lbrk;Ldcp;DDDFZLdco$a;Llk;Llk;Ljm;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		damageSource
		p	4		behavior
		p	5		x
		p	7		y
		p	9		z
		p	11		power
		p	12		createFire
		p	13		destructionType
		p	14		particle
		p	15		emitterParticle
		p	16		soundEvent
	m	()F	a	radius
	m	(Lbsr;)Ldcp;	a	makeDamageCalculator
		p	1		entity
	m	(Ldcw;Lbsr;)Lbrk;	a	getDefaultDamageSource
		p	0		world
		p	1		source
	m	(Lexc;Lbsr;)F	a	getSeenPercent
		p	0		source
		p	1		entity
	m	(Ljava/util/List;Lcuq;Ljd;)V	a	addOrAppendStack
		p	0		stacks
		p	1		stack
		p	2		pos
	m	(Z)V	a	finalizeExplosion
		p	1		particles
	m	()Lexc;	b	center
	m	(Lbsr;)Lbtn;	b	getIndirectSourceEntityInternal
		p	0		from
	m	(Ljava/util/List;Lcuq;Ljd;)V	b	lambda$finalizeExplosion$0
		p	1		stack
		p	2		pos
	m	()V	c	explode
	m	()Z	d	interactsWithBlocks
	m	()Ljava/util/Map;	e	getHitPlayers
	m	()Lbtn;	f	getIndirectSourceEntity
	m	()Lbsr;	g	getDirectSourceEntity
	m	()V	h	clearToBlow
	m	()Ljava/util/List;	i	getToBlow
	m	()Ldco$a;	j	getBlockInteraction
	m	()Llk;	k	getSmallExplosionParticles
	m	()Llk;	l	getLargeExplosionParticles
	m	()Ljm;	m	getExplosionSound
	m	()Z	n	canTriggerBlocks
	f	Ldcp;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	Z	c	fire
	f	Ldco$a;	d	blockInteraction
	f	Layw;	e	random
	f	Ldcw;	f	level
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	Lbsr;	j	source
	f	F	k	radius
	f	Lbrk;	l	damageSource
	f	Ldcp;	m	damageCalculator
	f	Llk;	n	smallExplosionParticles
	f	Llk;	o	largeExplosionParticles
	f	Ljm;	p	explosionSound
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	q	toBlow
	f	Ljava/util/Map;	r	hitPlayers
c	dco$a	net/minecraft/world/level/Explosion$Effect
	m	()[Ldco$a;	a	$values
	f	Ldco$a;	a	KEEP
	f	Ldco$a;	b	DESTROY
	f	Ldco$a;	c	DESTROY_WITH_DECAY
	f	Ldco$a;	d	TRIGGER_BLOCK
	f	[Ldco$a;	e	$VALUES
c	dcp	net/minecraft/world/level/ExplosionDamageCalculator
	m	(Lbsr;)F	a	getKnockbackMultiplier
		p	1		entity
	m	(Ldco;Lbsr;)Z	a	shouldDamageEntity
		p	1		explosion
		p	2		entity
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Ldco;Lbsr;)F	b	getEntityDamageAmount
		p	1		explosion
		p	2		entity
c	dcq	net/minecraft/world/level/FoliageColor
	m	()I	a	getEvergreenColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		pixels
	m	()I	b	getBirchColor
	m	()I	c	getDefaultColor
	m	()I	d	getMangroveColor
	f	[I	a	pixels
c	dcr	net/minecraft/world/level/ForcedChunk
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		chunks
	m	()Leql$a;	a	factory
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	b	getChunks
	m	(Lub;Ljo$a;)Ldcr;	b	load
		p	0		nbt
		p	1		registryLookup
	f	Ljava/lang/String;	a	FILE_ID
	f	Ljava/lang/String;	b	TAG_FORCED
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunks
c	dcs	net/minecraft/world/level/GameRules
	m	(Lcom/mojang/serialization/DynamicLike;)V	<init>	<init>
		p	1		dynamic
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		rules
	m	()Lub;	a	createTag
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
		p	1		dynamic
	m	(Lcom/mojang/serialization/DynamicLike;Ldcs$e;Ldcs$g;)V	a	lambda$loadFromTag$7
		p	1		key
		p	2		rule
	m	(Ldcs$c;)V	a	visitGameRuleTypes
		p	0		visitor
	m	(Ldcs$c;Ldcs$e;Ldcs$f;)V	a	callVisitorCap
		p	0		consumer
		p	1		key
		p	2		type
	m	(Ldcs$e;)Ldcs$g;	a	getRule
		p	1		key
	m	(Ldcs$e;Ldcs;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
		p	1		key
		p	2		rules
		p	3		server
	m	(Ldcs;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
		p	1		rules
		p	2		server
	m	(Ldcs;Lnet/minecraft/server/MinecraftServer;Ldcs$e;)V	a	lambda$assignFrom$10
		p	3		key
	m	(Ljava/lang/String;Ldcs$b;Ldcs$f;)Ldcs$e;	a	register
		p	0		name
		p	1		category
		p	2		type
	m	(Ljava/util/Map$Entry;)Ldcs$g;	a	lambda$copy$8
		p	0		entry
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$a;)V	a	lambda$static$3
		p	0		server
		p	1		rule
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$d;)V	a	lambda$static$4
		p	0		server
		p	1		value
	m	(Lub;Ldcs$e;Ldcs$g;)V	a	lambda$createTag$6
		p	1		key
		p	2		rule
	m	()Ldcs;	b	copy
	m	(Ldcs$c;Ldcs$e;Ldcs$f;)V	b	lambda$visitGameRuleTypes$9
		p	1		key
		p	2		type
	m	(Ldcs$e;)Z	b	getBoolean
		p	1		rule
	m	(Ljava/util/Map$Entry;)Ldcs$g;	b	lambda$new$5
		p	0		e
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$a;)V	b	lambda$static$2
		p	0		server
		p	1		rule
	m	(Ldcs$e;)I	c	getInt
		p	1		rule
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$a;)V	c	lambda$static$1
		p	0		server
		p	1		rule
	m	(Ldcs$e;)Ljava/lang/String;	d	lambda$static$0
		p	0		key
	f	Ldcs$e;	A	RULE_ANNOUNCE_ADVANCEMENTS
	f	Ldcs$e;	B	RULE_DISABLE_RAIDS
	f	Ldcs$e;	C	RULE_DOINSOMNIA
	f	Ldcs$e;	D	RULE_DO_IMMEDIATE_RESPAWN
	f	Ldcs$e;	E	RULE_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY
	f	Ldcs$e;	F	RULE_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY
	f	Ldcs$e;	G	RULE_DROWNING_DAMAGE
	f	Ldcs$e;	H	RULE_FALL_DAMAGE
	f	Ldcs$e;	I	RULE_FIRE_DAMAGE
	f	Ldcs$e;	J	RULE_FREEZE_DAMAGE
	f	Ldcs$e;	K	RULE_DO_PATROL_SPAWNING
	f	Ldcs$e;	L	RULE_DO_TRADER_SPAWNING
	f	Ldcs$e;	M	RULE_DO_WARDEN_SPAWNING
	f	Ldcs$e;	N	RULE_FORGIVE_DEAD_PLAYERS
	f	Ldcs$e;	O	RULE_UNIVERSAL_ANGER
	f	Ldcs$e;	P	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Ldcs$e;	Q	RULE_BLOCK_EXPLOSION_DROP_DECAY
	f	Ldcs$e;	R	RULE_MOB_EXPLOSION_DROP_DECAY
	f	Ldcs$e;	S	RULE_TNT_EXPLOSION_DROP_DECAY
	f	Ldcs$e;	T	RULE_SNOW_ACCUMULATION_HEIGHT
	f	Ldcs$e;	U	RULE_WATER_SOURCE_CONVERSION
	f	Ldcs$e;	V	RULE_LAVA_SOURCE_CONVERSION
	f	Ldcs$e;	W	RULE_GLOBAL_SOUND_EVENTS
	f	Ldcs$e;	X	RULE_DO_VINES_SPREAD
	f	Ldcs$e;	Y	RULE_ENDER_PEARLS_VANISH_ON_DEATH
	f	Ldcs$e;	Z	RULE_SPAWN_CHUNK_RADIUS
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lorg/slf4j/Logger;	aa	LOGGER
	f	Ljava/util/Map;	ab	GAME_RULE_TYPES
	f	Ljava/util/Map;	ac	rules
	f	Ldcs$e;	b	RULE_DOFIRETICK
	f	Ldcs$e;	c	RULE_MOBGRIEFING
	f	Ldcs$e;	d	RULE_KEEPINVENTORY
	f	Ldcs$e;	e	RULE_DOMOBSPAWNING
	f	Ldcs$e;	f	RULE_DOMOBLOOT
	f	Ldcs$e;	g	RULE_PROJECTILESCANBREAKBLOCKS
	f	Ldcs$e;	h	RULE_DOBLOCKDROPS
	f	Ldcs$e;	i	RULE_DOENTITYDROPS
	f	Ldcs$e;	j	RULE_COMMANDBLOCKOUTPUT
	f	Ldcs$e;	k	RULE_NATURAL_REGENERATION
	f	Ldcs$e;	l	RULE_DAYLIGHT
	f	Ldcs$e;	m	RULE_LOGADMINCOMMANDS
	f	Ldcs$e;	n	RULE_SHOWDEATHMESSAGES
	f	Ldcs$e;	o	RULE_RANDOMTICKING
	f	Ldcs$e;	p	RULE_SENDCOMMANDFEEDBACK
	f	Ldcs$e;	q	RULE_REDUCEDDEBUGINFO
	f	Ldcs$e;	r	RULE_SPECTATORSGENERATECHUNKS
	f	Ldcs$e;	s	RULE_SPAWN_RADIUS
	f	Ldcs$e;	t	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Ldcs$e;	u	RULE_MAX_ENTITY_CRAMMING
	f	Ldcs$e;	v	RULE_WEATHER_CYCLE
	f	Ldcs$e;	w	RULE_LIMITED_CRAFTING
	f	Ldcs$e;	x	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Ldcs$e;	y	RULE_MAX_COMMAND_FORK_COUNT
	f	Ldcs$e;	z	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
c	dcs$a	net/minecraft/world/level/GameRules$GameRuleBoolean
	m	(Ldcs$f;Z)V	<init>	<init>
		p	1		type
		p	2		initialValue
	m	()Z	a	get
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ldcs$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ldcs$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$a;)V	a	lambda$create$1
		p	0		server
		p	1		rule
	m	(Z)Ldcs$f;	a	create
		p	0		initialValue
	m	(ZLdcs$f;)Ldcs$a;	a	lambda$create$0
		p	1		type
	m	(ZLjava/util/function/BiConsumer;)Ldcs$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	()Ljava/lang/String;	b	serialize
	m	()I	c	getCommandResult
	m	()Ldcs$a;	d	getSelf
	m	()Ldcs$a;	e	copy
	m	()Ldcs$g;	f	copy
	m	()Ldcs$g;	g	getSelf
	f	Z	b	value
c	dcs$b	net/minecraft/world/level/GameRules$GameRuleCategory
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		category
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Ldcs$b;	b	$values
	f	Ldcs$b;	a	PLAYER
	f	Ldcs$b;	b	MOBS
	f	Ldcs$b;	c	SPAWNING
	f	Ldcs$b;	d	DROPS
	f	Ldcs$b;	e	UPDATES
	f	Ldcs$b;	f	CHAT
	f	Ldcs$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Ldcs$b;	i	$VALUES
c	dcs$c	net/minecraft/world/level/GameRules$GameRuleVisitor
	m	(Ldcs$e;Ldcs$f;)V	a	visit
		p	1		key
		p	2		type
	m	(Ldcs$e;Ldcs$f;)V	b	visitBoolean
		p	1		key
		p	2		type
	m	(Ldcs$e;Ldcs$f;)V	c	visitInteger
		p	1		key
		p	2		type
c	dcs$d	net/minecraft/world/level/GameRules$GameRuleInt
	m	(Ldcs$f;I)V	<init>	<init>
		p	1		rule
		p	2		initialValue
	m	()I	a	get
	m	(I)Ldcs$f;	a	create
		p	0		initialValue
	m	(II)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$create$1
	m	(IIILjava/util/function/BiConsumer;)Ldcs$f;	a	create
		p	0		initialValue
		p	1		min
		p	2		max
		p	3		changeCallback
	m	(ILdcs$f;)Ldcs$d;	a	lambda$create$2
		p	1		type
	m	(ILjava/util/function/BiConsumer;)Ldcs$f;	a	create
		p	0		initialValue
		p	1		changeCallback
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
		p	1		value
		p	2		server
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ldcs$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ldcs$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;Ldcs$d;)V	a	lambda$create$3
		p	0		server
		p	1		rule
	m	()Ljava/lang/String;	b	serialize
	m	(ILdcs$f;)Ldcs$d;	b	lambda$create$0
		p	1		type
	m	(Ljava/lang/String;)Z	b	tryDeserialize
		p	1		input
	m	()I	c	getCommandResult
	m	(Ljava/lang/String;)I	c	safeParse
		p	0		input
	m	()Ldcs$d;	d	getSelf
	m	()Ldcs$d;	e	copy
	m	()Ldcs$g;	f	copy
	m	()Ldcs$g;	g	getSelf
	f	I	b	value
c	dcs$e	net/minecraft/world/level/GameRules$GameRuleKey
	m	(Ljava/lang/String;Ldcs$b;)V	<init>	<init>
		p	1		name
		p	2		category
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Ldcs$b;	c	getCategory
	f	Ljava/lang/String;	a	id
	f	Ldcs$b;	b	category
c	dcs$f	net/minecraft/world/level/GameRules$GameRuleDefinition
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ldcs$h;)V	<init>	<init>
		p	1		argumentType
		p	2		ruleFactory
		p	3		changeCallback
		p	4		ruleAcceptor
	m	()Ldcs$g;	a	createRule
	m	(Ldcs$c;Ldcs$e;)V	a	callVisitor
		p	1		consumer
		p	2		key
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
		p	1		name
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Ldcs$h;	d	visitorCaller
c	dcs$g	net/minecraft/world/level/GameRules$GameRuleValue
	m	(Ldcs$f;)V	<init>	<init>
		p	1		type
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
		p	1		context
		p	2		name
	m	(Ldcs$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
		p	1		rule
		p	2		server
	m	(Ljava/lang/String;)V	a	deserialize
		p	1		value
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
		p	1		server
	m	()Ljava/lang/String;	b	serialize
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
		p	1		context
		p	2		name
	m	()I	c	getCommandResult
	m	()Ldcs$g;	f	copy
	m	()Ldcs$g;	g	getSelf
	f	Ldcs$f;	a	type
c	dcs$h	net/minecraft/world/level/GameRules$h
	m	(Ldcs$c;Ldcs$e;Ldcs$f;)V	call	call
		p	1		consumer
		p	2		key
		p	3		type
c	dct	net/minecraft/world/level/EnumGamemode
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	getId
	m	(I)Ldct;	a	byId
		p	0		id
	m	(Lcmu;)V	a	updatePlayerAbilities
		p	1		abilities
	m	(Ldct;)I	a	getNullableId
		p	0		gameMode
	m	(Ljava/lang/String;)Ldct;	a	byName
		p	0		name
	m	(Ljava/lang/String;Ldct;)Ldct;	a	byName
		p	0		name
		p	1		defaultMode
	m	()Ljava/lang/String;	b	getName
	m	(I)Ldct;	b	byNullableId
		p	0		id
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lwz;	d	getLongDisplayName
	m	()Lwz;	e	getShortDisplayName
	m	()Z	f	isBlockPlacingRestricted
	m	()Z	g	isCreative
	m	()Z	h	isSurvival
	m	()[Ldct;	i	$values
	f	Ldct;	a	SURVIVAL
	f	Ldct;	b	CREATIVE
	f	Ldct;	c	ADVENTURE
	f	Ldct;	d	SPECTATOR
	f	Ldct;	e	DEFAULT_MODE
	f	Lazk$a;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	NOT_SET
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	Lwz;	k	shortName
	f	Lwz;	l	longName
	f	[Ldct;	m	$VALUES
c	dcu	net/minecraft/world/level/GrassColor
	m	()I	a	getDefaultColor
	m	(DD)I	a	get
		p	0		temperature
		p	2		humidity
	m	([I)V	a	init
		p	0		map
	f	[I	a	pixels
c	dcv	net/minecraft/world/level/IMaterial
	m	()Lcul;	r	asItem
c	dcw	net/minecraft/world/level/World
	m	(Lerm;Lakq;Lka;Ljm;Ljava/util/function/Supplier;ZZJI)V	<init>	<init>
		p	1		properties
		p	2		registryRef
		p	3		registryManager
		p	4		dimensionEntry
		p	5		profiler
		p	6		isClient
		p	7		debugWorld
		p	8		biomeAccess
		p	10		maxChainedNeighborUpdates
	m	()Lerb;	A_	getLevelData
	m	()I	B_	getSkyDarken
	m	()Ldut;	C_	getWorldBorder
	m	()Ldwy;	D_	dimensionType
	m	()Layw;	E_	getRandom
	m	()Lddy;	F_	getBiomeManager
	m	()Ldxp;	G	getEntities
	m	()J	G_	nextSubTickCount
	m	()Lka;	H_	registryAccess
	m	()Ljava/lang/String;	I	gatherChunkSourceStats
	m	()Lcwt;	K	potionBrewing
	m	()Leyg;	M	getScoreboard
	m	()Z	R	isDay
	m	()Z	S	isNight
	m	()V	T	tickBlockEntities
	m	()V	U	updateSkyBrightness
	m	()Ljd;	V	getSharedSpawnPos
	m	()F	W	getSharedSpawnAngle
	m	()V	X	prepareWeather
	m	()V	Y	disconnect
	m	()J	Z	getGameTime
	m	()Ljava/lang/String;	a	lambda$fillReportDetails$3
	m	(DDDDDDLjava/util/List;)V	a	createFireworks
		p	1		x
		p	3		y
		p	5		z
		p	7		velocityX
		p	9		velocityY
		p	11		velocityZ
		p	13		explosions
	m	(DDDLavo;Lavq;FFZ)V	a	playLocalSound
		p	1		x
		p	3		y
		p	5		z
		p	7		sound
		p	8		category
		p	9		volume
		p	10		pitch
		p	11		useDistance
	m	(F)F	a	getSunAngle
		p	1		tickDelta
	m	(I)Lbsr;	a	getEntity
		p	1		id
	m	(II)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Ljd;	a	getBlockRandomPos
		p	1		x
		p	2		y
		p	3		z
	m	(IILdvz;Z)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(ILjd;I)V	a	destroyBlockProgress
		p	1		entityId
		p	2		pos
		p	3		progress
	m	(J)Z	a	shouldTickBlocksAt
		p	1		chunkPos
	m	(Lbsr;B)V	a	broadcastEntityEvent
		p	1		entity
		p	2		status
	m	(Lbsr;DDDFLdcw$a;)Ldco;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		explosionSourceType
	m	(Lbsr;DDDFZLdcw$a;)Ldco;	a	explode
		p	1		entity
		p	2		x
		p	4		y
		p	6		z
		p	8		power
		p	9		createFire
		p	10		explosionSourceType
	m	(Lbsr;Lavo;Lavq;FF)V	a	playLocalSound
		p	1		entity
		p	2		sound
		p	3		category
		p	4		volume
		p	5		pitch
	m	(Lbsr;Lbrk;)V	a	broadcastDamageEvent
		p	1		entity
		p	2		damageSource
	m	(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;)Ldco;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
	m	(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;Llk;Llk;Ljm;)Ldco;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
		p	13		particle
		p	14		emitterParticle
		p	15		soundEvent
	m	(Lbsr;Lbrk;Ldcp;DDDFZLdcw$a;ZLlk;Llk;Ljm;)Ldco;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		x
		p	6		y
		p	8		z
		p	10		power
		p	11		createFire
		p	12		explosionSourceType
		p	13		particles
		p	14		particle
		p	15		emitterParticle
		p	16		soundEvent
	m	(Lbsr;Lbrk;Ldcp;Lexc;FZLdcw$a;)Ldco;	a	explode
		p	1		entity
		p	2		damageSource
		p	3		behavior
		p	4		pos
		p	5		power
		p	6		createFire
		p	7		explosionSourceType
	m	(Lbsr;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		except
		p	2		box
		p	3		predicate
	m	(Lbsr;Ljava/util/function/Predicate;Ljava/util/List;Lbsr;)V	a	lambda$getEntities$0
		p	3		entity
	m	(Lbsr;Ljd;Lavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcmx;DDDLavo;Lavq;)V	a	playSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
	m	(Lcmx;DDDLavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
	m	(Lcmx;DDDLavo;Lavq;FFJ)V	a	playSeededSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcmx;DDDLjm;Lavq;FF)V	a	playSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
	m	(Lcmx;DDDLjm;Lavq;FFJ)V	a	playSeededSound
		p	1		source
		p	2		x
		p	4		y
		p	6		z
		p	8		sound
		p	9		category
		p	10		volume
		p	11		pitch
		p	12		seed
	m	(Lcmx;Lbsr;Lavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Lcmx;Lbsr;Ljm;Lavq;FFJ)V	a	playSeededSound
		p	1		source
		p	2		entity
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
		p	7		seed
	m	(Lcmx;Ljd;)Z	a	mayInteract
		p	1		player
		p	2		pos
	m	(Lcmx;Ljd;Lavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Ldcs$e;)Ldco$a;	a	getDestroyType
		p	1		gameRuleKey
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldsa;)V	a	addBlockEntityTicker
		p	1		ticker
	m	(Ldtc;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
	m	(Ldxn;Lewx;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
	m	(Ldxn;Lewx;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		predicate
		p	4		result
		p	5		limit
	m	(Ldyy$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Leqr;)Leqt;	a	getMapData
		p	1		id
	m	(Leqr;Leqt;)V	a	setMapData
		p	1		id
		p	2		state
	m	(Ljava/util/function/Consumer;Lbsr;)V	a	guardEntityTick
		p	1		tickConsumer
		p	2		entity
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILdxn;Lbsr;)Laxa$a;	a	lambda$getEntities$1
		p	4		entity
	m	(Ljd;Lavo;Lavq;FFZ)V	a	playLocalSound
		p	1		pos
		p	2		sound
		p	3		category
		p	4		volume
		p	5		pitch
		p	6		useDistance
	m	(Ljd;Lbsr;)Z	a	loadedAndEntityCanStandOn
		p	1		pos
		p	2		entity
	m	(Ljd;Lbsr;Lji;)Z	a	loadedAndEntityCanStandOnFace
		p	1		pos
		p	2		entity
		p	3		direction
	m	(Ljd;Ldfy;)V	a	updateNeighborsAt
		p	1		pos
		p	2		sourceBlock
	m	(Ljd;Ldfy;II)V	a	blockEvent
		p	1		pos
		p	2		block
		p	3		type
		p	4		data
	m	(Ljd;Ldfy;Ljd;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Ljd;Ldfy;Lji;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		direction
	m	(Ljd;Ldtc;)V	a	addDestroyBlockEffect
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Ljd;Ldtc;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Ljd;Ldtc;Ldtc;)V	a	onBlockStateChange
		p	1		pos
		p	2		oldBlock
		p	3		newBlock
	m	(Ljd;Ldtc;Ldtc;I)V	a	sendBlockUpdated
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		flags
	m	(Ljd;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Ljd;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Ljd;ZLbsr;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lji;Ldtc;Ljd;Ljd;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Llk;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Llk;ZDDDDDD)V	a	addParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(Lo;)Lp;	a	fillReportDetails
		p	1		report
	m	(Lzg;)V	a	sendPacketToServer
		p	1		packet
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	()J	aa	getDayTime
	m	()Ldcs;	ab	getGameRules
	m	()Z	ac	isThundering
	m	()Z	ad	isRaining
	m	()Ljm;	ae	dimensionTypeRegistration
	m	()Lakq;	af	dimension
	m	()Lbnf;	ag	getProfiler
	m	()Ljava/util/function/Supplier;	ah	getProfilerSupplier
	m	()Z	ai	isDebug
	m	()Lbrl;	aj	damageSources
	m	(F)F	b	getThunderLevel
		p	1		delta
	m	(I)Z	b	isOutsideSpawnableHeight
		p	0		y
	m	(ILjd;I)V	b	globalLevelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Ljd;Ldtc;)Z	b	setBlockAndUpdate
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;Ldtc;)V	b	setBlocksDirty
		p	1		pos
		p	2		old
		p	3		updated
	m	(Ljd;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
	m	(Llk;DDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	(Llk;ZDDDDDD)V	b	addAlwaysVisibleParticle
		p	1		parameters
		p	2		alwaysSpawn
		p	3		x
		p	5		y
		p	7		z
		p	9		velocityX
		p	11		velocityY
		p	13		velocityZ
	m	(ZZ)V	b	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(F)V	c	setThunderLevel
		p	1		thunderGradient
	m	(I)V	c	setSkyFlashTime
		p	1		lightningTicksLeft
	m	(II)Ldcc;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Ljd;Ldfy;)V	c	updateNeighbourForOutputSignal
		p	1		pos
		p	2		block
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(F)F	d	getRainLevel
		p	1		delta
	m	(II)Ldvi;	d	getChunk
	m	(Ljd;)Lbqp;	d_	getCurrentDifficultyAt
		p	1		pos
	m	(F)V	e	setRainLevel
		p	1		rainGradient
	m	(Ljd;)Z	g	isInWorldBoundsHorizontal
		p	0		pos
	m	(Lbsr;)Z	h	shouldTickDeath
		p	1		entity
	m	(Ljd;)Z	k	isInWorldBounds
		p	1		pos
	m	(Ljd;)Z	l	isInSpawnableBounds
		p	0		pos
	m	(Ljd;)Ldvi;	m	getChunkAt
		p	1		pos
	m	(Ljd;)Z	n	shouldTickBlocksAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	o	getServer
	m	(Ljd;)V	o	removeBlockEntity
		p	1		pos
	m	()Ljava/lang/String;	p	lambda$fillReportDetails$2
	m	(Ljd;)Z	p	isLoaded
		p	1		pos
	m	(Ljd;)V	q	blockEntityChanged
		p	1		pos
	m	()Lczd;	r	getRecipeManager
	m	(Ljd;)Z	r	isRainingAt
		p	1		pos
	m	()Lbrc;	s	tickRateManager
	m	()Z	t	noSave
	m	()Leqr;	v	getFreeMapId
	m	()Z	x_	isClientSide
	m	()Leot;	y_	getLightEngine
	m	()I	z_	getSeaLevel
	f	Lerm;	A	levelData
	f	Z	B	isClientSide
	f	Ljm;	D	dimensionTypeRegistration
	f	Ljava/util/function/Supplier;	E	profiler
	f	Ldut;	F	worldBorder
	f	Lddy;	G	biomeManager
	f	Lakq;	H	dimension
	f	Lka;	I	registryAccess
	f	Lbrl;	J	damageSources
	f	J	K	subTickCount
	f	Ljava/util/List;	a	pendingBlockEntityTickers
	f	Z	b	tickingBlockEntities
	f	Ljava/lang/Thread;	c	thread
	f	Z	d	isDebug
	f	I	e	skyDarken
	f	Layw;	f	threadSafeRandom
	f	Lcom/mojang/serialization/Codec;	g	RESOURCE_KEY_CODEC
	f	Lakq;	h	OVERWORLD
	f	Lakq;	i	NETHER
	f	Lakq;	j	END
	f	I	k	MAX_LEVEL_SIZE
	f	I	l	LONG_PARTICLE_CLIP_RANGE
	f	I	m	SHORT_PARTICLE_CLIP_RANGE
	f	I	n	MAX_BRIGHTNESS
	f	I	o	TICKS_PER_DAY
	f	I	p	MAX_ENTITY_SPAWN_Y
	f	I	q	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	r	blockEntityTickers
	f	Leqi;	s	neighborUpdater
	f	I	t	randValue
	f	I	u	addend
	f	F	v	oRainLevel
	f	F	w	rainLevel
	f	F	x	oThunderLevel
	f	F	y	thunderLevel
	f	Layw;	z	random
c	dcw$1	net/minecraft/world/level/World$1
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	f	Ldwy;	a	val$dimensionType
c	dcw$a	net/minecraft/world/level/World$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Ldcw$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldcw$a;	a	NONE
	f	Ldcw$a;	b	BLOCK
	f	Ldcw$a;	c	MOB
	f	Ldcw$a;	d	TNT
	f	Ldcw$a;	e	TRIGGER
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	id
	f	[Ldcw$a;	h	$VALUES
c	dcx	net/minecraft/world/level/GeneratorAccess
	m	()Lerb;	A_	getLevelData
	m	()Layw;	E_	getRandom
	m	()J	G_	nextSubTickCount
	m	()Ldvc;	N	getChunkSource
	m	()Leyp;	O	getFluidTicks
	m	()Leyp;	P	getBlockTicks
	m	(Lakq;Ljd;Ldxz$a;)V	a	gameEvent
		p	1		event
		p	2		pos
		p	3		emitter
	m	(Lbsr;Ljm;Lexc;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lbsr;Ljm;Ljd;)V	a	gameEvent
		p	1		entity
		p	2		event
		p	3		pos
	m	(Lcmx;ILjd;I)V	a	levelEvent
		p	1		player
		p	2		eventId
		p	3		pos
		p	4		data
	m	(Lcmx;Ljd;Lavo;Lavq;)V	a	playSound
		p	1		except
		p	2		pos
		p	3		sound
		p	4		category
	m	(Lcmx;Ljd;Lavo;Lavq;FF)V	a	playSound
		p	1		source
		p	2		pos
		p	3		sound
		p	4		category
		p	5		volume
		p	6		pitch
	m	(Ljd;Ldfy;I)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
	m	(Ljd;Ldfy;ILeyx;)V	a	scheduleTick
		p	1		pos
		p	2		block
		p	3		delay
		p	4		priority
	m	(Ljd;Lepd;I)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
	m	(Ljd;Lepd;ILeyx;)V	a	scheduleTick
		p	1		pos
		p	2		fluid
		p	3		delay
		p	4		priority
	m	(Ljd;Ljava/lang/Object;I)Leyt;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
	m	(Ljd;Ljava/lang/Object;ILeyx;)Leyt;	a	createTick
		p	1		pos
		p	2		type
		p	3		delay
		p	4		priority
	m	(Lji;Ldtc;Ljd;Ljd;II)V	a	neighborShapeChanged
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Ljm;Lexc;Ldxz$a;)V	a	gameEvent
		p	1		event
		p	2		emitterPos
		p	3		emitter
	m	(Ljm;Ljd;Ldxz$a;)V	a	gameEvent
		p	1		event
		p	2		pos
		p	3		emitter
	m	(Llk;DDDDDD)V	a	addParticle
		p	1		parameters
		p	2		x
		p	4		y
		p	6		z
		p	8		velocityX
		p	10		velocityY
		p	12		velocityZ
	m	()J	ak	dayTime
	m	()Lbqo;	al	getDifficulty
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Ljd;Ldfy;)V	b	blockUpdated
		p	1		pos
		p	2		block
	m	(ILjd;I)V	c	levelEvent
		p	1		eventId
		p	2		pos
		p	3		data
	m	(Ljd;)Lbqp;	d_	getCurrentDifficultyAt
		p	1		pos
	m	()Lnet/minecraft/server/MinecraftServer;	o	getServer
c	dcy	net/minecraft/world/level/LevelHeightAccessor
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
	m	()I	am	getMaxBuildHeight
	m	()I	an	getSectionsCount
	m	()I	ao	getMinSection
	m	()I	ap	getMaxSection
	m	(I)Z	d	isOutsideBuildHeight
		p	1		y
	m	(I)I	e	getSectionIndex
		p	1		y
	m	(II)Ldcy;	e	create
		p	0		bottomY
		p	1		height
	m	(I)I	f	getSectionIndexFromSectionY
		p	1		coord
	m	(I)I	g	getSectionYFromSectionIndex
		p	1		index
	m	(Ljd;)Z	s	isOutsideBuildHeight
		p	1		pos
c	dcy$1	net/minecraft/world/level/LevelHeightAccessor$1
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
	f	I	a	val$height
	f	I	b	val$minBuildHeight
c	dcz	net/minecraft/world/level/IWorldReader
	m	(Ljd;)I	A	getMaxLocalRawBrightness
		p	1		pos
	m	(Ljd;)Z	B	hasChunkAt
		p	1		pos
	m	()I	B_	getSkyDarken
	m	()Ldwy;	D_	dimensionType
	m	()Lddy;	F_	getBiomeManager
	m	()Lka;	H_	registryAccess
	m	()I	I_	getMinBuildHeight
	m	()Lcpl;	J	enabledFeatures
	m	()I	J_	getHeight
	m	(II)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(III)Ljm;	a	getUncachedNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIIII)Z	a	hasChunksAt
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(IILdvz;)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		status
	m	(IILdvz;Z)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		leastStatus
		p	4		create
	m	(Lakq;)Ljo;	a	holderLookup
		p	1		registryRef
	m	(Ldyy$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ldyy$a;Ljd;)Ljd;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Ljd;Ldch;)I	a	getBlockTint
		p	1		pos
		p	2		colorResolver
	m	(Ljd;Ljd;)Z	a	hasChunksAt
		p	1		min
		p	2		max
	m	(II)Z	b	hasChunk
		p	1		chunkX
		p	2		chunkZ
	m	(IIII)Z	b	hasChunksAt
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(II)Ldcc;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lewx;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
		p	1		box
	m	(Ljd;I)I	c	getMaxLocalRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lewx;)Z	d	containsAnyLiquid
		p	1		box
	m	(II)Z	f	hasChunkAt
		p	1		x
		p	2		z
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Ljd;)Ljm;	t	getBiome
		p	1		pos
	m	(Ljd;)Z	u	isEmptyBlock
		p	1		pos
	m	(Ljd;)Z	v	canSeeSkyFromBelowWater
		p	1		pos
	m	(Ljd;)F	w	getPathfindingCostFromLightLevels
		p	1		pos
	m	(Ljd;)F	x	getLightLevelDependentMagicValue
		p	1		pos
	m	()Z	x_	isClientSide
	m	(Ljd;)Lduy;	y	getChunk
		p	1		pos
	m	(Ljd;)Z	z	isWaterAt
		p	1		pos
	m	()I	z_	getSeaLevel
c	dda	net/minecraft/world/level/WorldSettings
	m	(Ljava/lang/String;Ldct;ZLbqo;ZLdcs;Lddr;)V	<init>	<init>
		p	1		name
		p	2		gameMode
		p	3		hardcore
		p	4		difficulty
		p	5		allowCommands
		p	6		gameRules
		p	7		dataConfiguration
	m	()Ljava/lang/String;	a	levelName
	m	(Lbqo;)Ldda;	a	withDifficulty
		p	1		difficulty
	m	(Lcom/mojang/serialization/Dynamic;Lddr;)Ldda;	a	parse
		p	0		dynamic
		p	1		dataConfiguration
	m	(Ldct;)Ldda;	a	withGameType
		p	1		mode
	m	(Lddr;)Ldda;	a	withDataConfiguration
		p	1		dataConfiguration
	m	(Ljava/lang/Number;)Lbqo;	a	lambda$parse$0
		p	0		difficulty
	m	()Ldct;	b	gameType
	m	()Z	c	hardcore
	m	()Lbqo;	d	difficulty
	m	()Z	e	allowCommands
	m	()Ldcs;	f	gameRules
	m	()Lddr;	g	getDataConfiguration
	m	()Ldda;	h	copy
	f	Ljava/lang/String;	a	levelName
	f	Ldct;	b	gameType
	f	Z	c	hardcore
	f	Lbqo;	d	difficulty
	f	Z	e	allowCommands
	f	Ldcs;	f	gameRules
	f	Lddr;	g	dataConfiguration
c	ddb	net/minecraft/world/level/VirtualLevelWritable
c	ddc	net/minecraft/world/level/VirtualLevelReadable
	m	(Ldyy$a;Ljd;)Ljd;	a	getHeightmapPos
		p	1		heightmap
		p	2		pos
	m	(Ljd;Ldqj;)Ljava/util/Optional;	a	getBlockEntity
		p	1		pos
		p	2		type
	m	(Ljd;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
		p	1		pos
		p	2		state
	m	(Ljd;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
		p	1		pos
		p	2		state
c	ddd	net/minecraft/world/level/IWorldTime
	m	()J	ak	dayTime
	m	()F	aq	getMoonBrightness
	m	()I	ar	getMoonPhase
	m	(F)F	f	getTimeOfDay
		p	1		tickDelta
c	dde	net/minecraft/world/level/IWorldWriter
	m	(Ljd;Ldtc;I)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
	m	(Ljd;Ldtc;II)Z	a	setBlock
		p	1		pos
		p	2		state
		p	3		flags
		p	4		maxUpdateDepth
	m	(Ljd;Z)Z	a	removeBlock
		p	1		pos
		p	2		move
	m	(Ljd;ZLbsr;)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
	m	(Ljd;ZLbsr;I)Z	a	destroyBlock
		p	1		pos
		p	2		drop
		p	3		breakingEntity
		p	4		maxUpdateDepth
	m	(Lbsr;)Z	b	addFreshEntity
		p	1		entity
	m	(Ljd;Z)Z	b	destroyBlock
		p	1		pos
		p	2		drop
c	ddf	net/minecraft/world/level/EnumSkyBlock
	m	()[Lddf;	a	$values
	f	Lddf;	a	SKY
	f	Lddf;	b	BLOCK
	f	[Lddf;	c	$VALUES
c	ddg	net/minecraft/world/level/LocalMobCapCalculator
	m	(Laqb;)V	<init>	<init>
		p	1		chunkLoadingManager
	m	(Laqv;)Lddg$a;	a	lambda$addMob$1
		p	0		player
	m	(Lbtq;Ldcd;)Z	a	canSpawn
		p	1		spawnGroup
		p	2		chunkPos
	m	(Ldcd;)Ljava/util/List;	a	getPlayersNear
		p	1		chunkPos
	m	(Ldcd;J)Ljava/util/List;	a	lambda$getPlayersNear$0
		p	2		pos
	m	(Ldcd;Lbtq;)V	a	addMob
		p	1		chunkPos
		p	2		spawnGroup
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Laqb;	c	chunkMap
c	ddg$a	net/minecraft/world/level/LocalMobCapCalculator$a
	m	(Lbtq;)V	a	add
		p	1		spawnGroup
	m	(Lbtq;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
		p	0		group
		p	1		density
	m	(Lbtq;)Z	b	canSpawn
		p	1		spawnGroup
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
c	ddh	net/minecraft/world/level/SpawnerCreature
	m	(I)[Lbtq;	a	lambda$static$1
	m	(ILjava/lang/Iterable;Lddh$b;Lddg;)Lddh$d;	a	createState
		p	0		spawningChunkCount
		p	1		entities
		p	2		chunkSource
		p	3		densityCapper
	m	(Laqu;Lbsx;)Lbtp;	a	getMobForSpawn
		p	0		world
		p	1		type
	m	(Laqu;Lbtp;D)Z	a	isValidPositionForMob
		p	0		world
		p	1		entity
		p	2		squaredDistance
	m	(Laqu;Lbtq;Lddq;Lduz;Ldei$c;Ljd$a;D)Z	a	isValidSpawnPostitionForType
		p	0		world
		p	1		group
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		spawnEntry
		p	5		pos
		p	6		squaredDistance
	m	(Laqu;Lddq;Lduz;Lbtq;Layw;Ljd;)Ljava/util/Optional;	a	getRandomSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		random
		p	5		pos
	m	(Laqu;Lddq;Lduz;Lbtq;Ldei$c;Ljd;)Z	a	canSpawnMobAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		spawnEntry
		p	5		pos
	m	(Laqu;Lddq;Lduz;Lbtq;Ljd;Ljm;)Lbpf;	a	mobsAt
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		spawnGroup
		p	4		pos
		p	5		biomeEntry
	m	(Laqu;Lduy;Ljd$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
		p	0		world
		p	1		chunk
		p	2		pos
		p	3		squaredDistance
	m	(Laqu;Ldvi;Lddh$d;ZZZ)V	a	spawnForChunk
		p	0		world
		p	1		chunk
		p	2		info
		p	3		spawnAnimals
		p	4		spawnMonsters
		p	5		rareSpawn
	m	(Lbsx;Ljd;Lduy;)Z	a	lambda$spawnCategoryForPosition$3
		p	0		type
		p	1		posx
		p	2		chunk
	m	(Lbtp;Lduy;)V	a	lambda$spawnCategoryForPosition$4
		p	0		entity
		p	1		chunk
	m	(Lbtq;)Z	a	lambda$static$0
		p	0		spawnGroup
	m	(Lbtq;Laqu;Lduy;Ljd;Lddh$c;Lddh$a;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		chunk
		p	3		pos
		p	4		checker
		p	5		runner
	m	(Lbtq;Laqu;Ldvi;Lddh$c;Lddh$a;)V	a	spawnCategoryForChunk
		p	0		group
		p	1		world
		p	2		chunk
		p	3		checker
		p	4		runner
	m	(Lbtq;Laqu;Ljd;)V	a	spawnCategoryForPosition
		p	0		group
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Ldtc;Lepe;Lbsx;)Z	a	isValidEmptySpawnBlock
		p	0		blockView
		p	1		pos
		p	2		state
		p	3		fluidState
		p	4		entityType
	m	(Ldcw;Ldvi;)Ljd;	a	getRandomPosWithin
		p	0		world
		p	1		chunk
	m	(Ldcz;Lbsx;II)Ljd;	a	getTopNonCollidingPos
		p	0		world
		p	1		entityType
		p	2		x
		p	3		z
	m	(Lddl;Ljm;Ldcd;Layw;)V	a	spawnMobsForChunkGeneration
		p	0		world
		p	1		biomeEntry
		p	2		chunkPos
		p	3		random
	m	(Ljd;Laqu;Lbtq;Lddq;)Z	a	isInNetherFortressBounds
		p	0		pos
		p	1		world
		p	2		spawnGroup
		p	3		structureAccessor
	m	(Ljd;Lbsr;Lddk;Lddg;Lbtq;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Ldvi;)V	a	lambda$createState$2
		p	6		chunk
	m	(Ljd;Lduy;)Lddw;	a	getRoughBiome
		p	0		pos
		p	1		chunk
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MIN_SPAWN_DISTANCE
	f	I	e	MAGIC_NUMBER
	f	[Lbtq;	f	SPAWNING_CATEGORIES
c	ddh$a	net/minecraft/world/level/SpawnerCreature$a
	m	(Lbtp;Lduy;)V	run	run
		p	1		entity
		p	2		chunk
c	ddh$b	net/minecraft/world/level/SpawnerCreature$b
	m	(JLjava/util/function/Consumer;)V	query	query
		p	1		pos
		p	3		chunkConsumer
c	ddh$c	net/minecraft/world/level/SpawnerCreature$c
	m	(Lbsx;Ljd;Lduy;)Z	test	test
		p	1		type
		p	2		pos
		p	3		chunk
c	ddh$d	net/minecraft/world/level/SpawnerCreature$d
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Lddk;Lddg;)V	<init>	<init>
		p	1		spawningChunkCount
		p	2		groupToCount
		p	3		densityField
		p	4		densityCapper
	m	()I	a	getSpawnableChunkCount
	m	(Lbsx;Ljd;Lduy;)Z	a	canSpawn
		p	1		type
		p	2		pos
		p	3		chunk
	m	(Lbtp;Lduy;)V	a	afterSpawn
		p	1		entity
		p	2		chunk
	m	(Lbtq;Ldcd;)Z	a	canSpawnForCategory
		p	1		group
		p	2		chunkPos
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Lddk;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Lddg;	e	localMobCapCalculator
	f	Ljd;	f	lastCheckedPos
	f	Lbsx;	g	lastCheckedType
	f	D	h	lastCharge
c	ddi	net/minecraft/world/level/BlockColumn
	m	(I[Ldtc;)V	<init>	<init>
		p	1		startY
		p	2		states
	m	(I)Ldtc;	a	getBlock
		p	1		y
	m	(ILdtc;)V	a	setBlock
		p	1		y
		p	2		state
	f	I	a	minY
	f	[Ldtc;	b	column
c	ddj	net/minecraft/world/level/ChunkCache
	m	(Ldcw;Ljd;Ljd;)V	<init>	<init>
		p	1		world
		p	2		minPos
		p	3		maxPos
	m	()Ldut;	C_	getWorldBorder
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
	m	()Lbnf;	a	getProfiler
	m	(II)Lduy;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(Ldcw;)Ljm;	a	lambda$new$0
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(II)Ldcc;	c	getChunkForCollisions
		p	1		chunkX
		p	2		chunkZ
	m	(Lbsr;Lewx;)Ljava/util/List;	c	getEntityCollisions
		p	1		entity
		p	2		box
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(Ljd;)Lduy;	d	getChunk
		p	1		pos
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Lduy;	c	chunks
	f	Z	d	allEmpty
	f	Ldcw;	e	level
	f	Ljava/util/function/Supplier;	f	plains
c	ddk	net/minecraft/world/level/SpawnerCreatureProbabilities
	m	(Ljd;D)V	a	addCharge
		p	1		pos
		p	2		mass
	m	(Ljd;D)D	b	getPotentialEnergyChange
		p	1		pos
		p	2		mass
	f	Ljava/util/List;	a	charges
c	ddk$a	net/minecraft/world/level/SpawnerCreatureProbabilities$a
	m	(Ljd;D)V	<init>	<init>
		p	1		pos
		p	2		mass
	m	(Ljd;)D	a	getPotentialChange
		p	1		pos
	f	Ljd;	a	pos
	f	D	b	charge
c	ddl	net/minecraft/world/level/WorldAccess
	m	()Laqu;	E	getLevel
	m	(Lbsr;)V	a_	addFreshEntityWithPassengers
		p	1		entity
c	ddm	net/minecraft/world/level/SignalGetter
	m	(Ljd;)Z	C	hasNeighborSignal
		p	1		pos
	m	(Ljd;)I	D	getBestNeighborSignal
		p	1		pos
	m	(Ljd;Lji;)I	a	getDirectSignal
		p	1		pos
		p	2		direction
	m	(Ljd;Lji;Z)I	a	getControlInputSignal
		p	1		pos
		p	2		direction
		p	3		onlyFromGate
	m	(Ljd;Lji;)Z	b	hasSignal
		p	1		pos
		p	2		direction
	m	(Ljd;Lji;)I	c	getSignal
		p	1		pos
		p	2		direction
	m	(Ljd;)I	e_	getDirectSignalTo
		p	1		pos
	f	[Lji;	C	DIRECTIONS
c	ddn	net/minecraft/world/level/SimpleExplosionDamageCalculator
	m	(ZZLjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		destroyBlocks
		p	2		damageEntities
		p	3		knockbackModifier
		p	4		immuneBlocks
	m	(Lbsr;)F	a	getKnockbackMultiplier
		p	1		entity
	m	(Ldco;Lbsr;)Z	a	shouldDamageEntity
		p	1		explosion
		p	2		entity
	m	(Ldco;Ldcc;Ljd;Ldtc;F)Z	a	shouldBlockExplode
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	m	(Lbsr;)Ljava/lang/Float;	b	lambda$getKnockbackMultiplier$0
	f	Z	a	explodesBlocks
	f	Z	b	damagesEntities
	f	Ljava/util/Optional;	c	knockbackMultiplier
	f	Ljava/util/Optional;	d	immuneBlocks
c	ddo	net/minecraft/world/level/MobSpawnerData
	m	()Lub;	a	getEntityToSpawn
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lddo;)Ljava/util/Optional;	a	lambda$static$2
		p	0		entry
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	(Lddo;)Ljava/util/Optional;	b	lambda$static$1
		p	0		entry
	m	()Ljava/util/Optional;	c	getEquipment
	m	(Lddo;)Lub;	c	lambda$static$0
		p	0		entry
	m	()Lub;	d	entityToSpawn
	m	()Ljava/util/Optional;	e	customSpawnRules
	m	()Ljava/util/Optional;	f	equipment
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lub;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
	f	Ljava/util/Optional;	f	equipment
c	ddo$a	net/minecraft/world/level/MobSpawnerData$a
	m	()Layg;	a	blockLightLimit
	m	(Layg;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
		p	0		provider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lddo$a;)Layg;	a	lambda$static$2
		p	0		rules
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	lightLimit
		p	0		name
	m	(Ljd;Laqu;)Z	a	isValidPosition
		p	1		pos
		p	2		world
	m	()Layg;	b	skyLightLimit
	m	(Lddo$a;)Layg;	b	lambda$static$1
		p	0		rules
	m	()Ljava/lang/String;	c	lambda$checkLightBoundaries$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Layg;	b	blockLightLimit
	f	Layg;	c	skyLightLimit
	f	Layg;	d	LIGHT_RANGE
c	ddp	net/minecraft/world/level/Spawner
	m	(Lbsx;)Lxn;	a	lambda$getSpawnEntityDisplayName$0
		p	0		entityType
	m	(Lbsx;Layw;)V	a	setEntityId
		p	1		type
		p	2		random
	m	(Lcuq;Ljava/lang/String;)Lwz;	a	getSpawnEntityDisplayName
		p	0		stack
		p	1		spawnDataKey
	m	(Lcuq;Ljava/util/List;Ljava/lang/String;)V	a	appendHoverText
		p	0		stack
		p	1		tooltip
		p	2		spawnDataKey
	m	(Lub;Ljava/lang/String;)Lakr;	a	getEntityKey
		p	0		nbt
		p	1		spawnDataKey
c	ddq	net/minecraft/world/level/StructureManager
	m	(Ldcx;Ldzw;Lejs;)V	<init>	<init>
		p	1		world
		p	2		options
		p	3		locator
	m	()Z	a	shouldGenerateStructures
	m	(Larb;)Lddq;	a	forWorldGenRegion
		p	1		region
	m	(Lawu;Ljm;)Z	a	lambda$getStructureWithPieceAt$0
		p	1		structure
	m	(Ldcd;Lejr;Leko;Z)Lejt;	a	checkStructurePresence
		p	1		chunkPos
		p	2		structure
		p	3		placement
		p	4		skipReferencedStructures
	m	(Ldcd;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForStructure
		p	1		pos
		p	2		predicate
	m	(Lejr;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForStructure
		p	1		structure
		p	2		structureStartPositions
		p	3		consumer
	m	(Lejz;)V	a	addReference
		p	1		structureStart
	m	(Ljd;)Z	a	hasAnyStructureAt
		p	1		pos
	m	(Ljd;Lawu;)Lejz;	a	getStructureWithPieceAt
		p	1		pos
		p	2		tag
	m	(Ljd;Lejr;)Lejz;	a	getStructureAt
		p	1		pos
		p	2		structure
	m	(Ljd;Lejz;)Z	a	structureHasPieceAt
		p	1		pos
		p	2		structureStart
	m	(Ljd;Ljava/util/function/Predicate;)Lejz;	a	getStructureWithPieceAt
		p	1		pos
		p	2		predicate
	m	(Ljd;Ljq;)Lejz;	a	getStructureWithPieceAt
		p	1		pos
		p	2		structures
	m	(Ljz;Ljava/util/function/Predicate;Lejr;)Z	a	lambda$getStructureWithPieceAt$1
		p	2		structure
	m	(Lkf;Lejr;)Ljava/util/List;	a	startsForStructure
		p	1		sectionPos
		p	2		structure
	m	(Lkf;Lejr;JLdvu;)V	a	addReferenceForStructure
		p	1		pos
		p	2		structure
		p	3		reference
		p	5		holder
	m	(Lkf;Lejr;Ldvu;)Lejz;	a	getStartForStructure
		p	1		pos
		p	2		structure
		p	3		holder
	m	(Lkf;Lejr;Lejz;Ldvu;)V	a	setStartForStructure
		p	1		pos
		p	2		structure
		p	3		structureStart
		p	4		holder
	m	()Lka;	b	registryAccess
	m	(Ljd;)Ljava/util/Map;	b	getAllStructuresAt
		p	1		pos
	m	(Ljd;Lejr;)Lejz;	b	getStructureWithPieceAt
		p	1		pos
		p	2		structure
	f	Ldcx;	a	level
	f	Ldzw;	b	worldOptions
	f	Lejs;	c	structureCheck
c	ddr	net/minecraft/world/level/WorldDataConfiguration
	m	()Ldck;	a	dataPacks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcpl;)Lddr;	a	expandFeatures
		p	1		features
	m	()Lcpl;	b	enabledFeatures
	f	Ljava/lang/String;	a	ENABLED_FEATURES_ID
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lddr;	c	DEFAULT
	f	Ldck;	d	dataPacks
	f	Lcpl;	e	enabledFeatures
c	dds	net/minecraft/world/level/GeneratorAccessSeed
	m	()J	C	getSeed
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
		p	1		structureName
	m	(Ljd;)Z	f_	ensureCanWrite
		p	1		pos
c	ddt	net/minecraft/world/level/biome/CaveSound
	m	(Ljm;D)V	<init>	<init>
		p	1		sound
		p	2		chance
	m	()Ljm;	a	getSoundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddt;)Ljava/lang/Double;	a	lambda$static$1
		p	0		sound
	m	()D	b	getTickChance
	m	(Lddt;)Ljm;	b	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	soundEvent
	f	D	c	tickChance
c	ddu	net/minecraft/world/level/biome/CaveSoundSettings
	m	(Ljm;IID)V	<init>	<init>
		p	1		sound
		p	2		cultivationTicks
		p	3		spawnRange
		p	4		extraDistance
	m	()Ljm;	a	getSoundEvent
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lddu;)Ljava/lang/Double;	a	lambda$static$3
		p	0		sound
	m	()I	b	getTickDelay
	m	(Lddu;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		sound
	m	()I	c	getBlockSearchExtent
	m	(Lddu;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		sound
	m	()D	d	getSoundPositionOffset
	m	(Lddu;)Ljm;	d	lambda$static$0
		p	0		sound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lddu;	b	LEGACY_CAVE_SETTINGS
	f	Ljm;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
c	ddv	net/minecraft/world/level/biome/BiomeParticles
	m	(Llk;F)V	<init>	<init>
		p	1		particle
		p	2		probability
	m	()Llk;	a	getOptions
	m	(Layw;)Z	a	canSpawn
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddv;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Lddv;)Llk;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Llk;	b	options
	f	F	c	probability
c	ddw	net/minecraft/world/level/biome/BiomeBase
	m	(Lddw$b;Ldec;Lddx;Ldei;)V	<init>	<init>
		p	1		weather
		p	2		effects
		p	3		generationSettings
		p	4		spawnSettings
	m	()I	a	getSkyColor
	m	(DD)I	a	getGrassColor
		p	1		x
		p	3		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ldcz;Ljd;)Z	a	shouldFreeze
		p	1		world
		p	2		blockPos
	m	(Ldcz;Ljd;Z)Z	a	shouldFreeze
		p	1		world
		p	2		pos
		p	3		doWaterCheck
	m	(Lddw$b;Ldec;)Lddw;	a	lambda$static$7
		p	0		weather
		p	1		effects
	m	(Lddw;)Ldec;	a	lambda$static$6
		p	0		biome
	m	(Ljd;)Lddw$c;	a	getPrecipitationAt
		p	1		pos
	m	()Ldei;	b	getMobSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Ldcz;Ljd;)Z	b	shouldSnow
		p	1		world
		p	2		pos
	m	(Lddw;)Lddw$b;	b	lambda$static$5
		p	0		biome
	m	(Ljd;)Z	b	coldEnoughToSnow
		p	1		pos
	m	()Z	c	hasPrecipitation
	m	(Lddw;)Ldei;	c	lambda$static$3
		p	0		biome
	m	(Ljd;)Z	c	warmEnoughToRain
		p	1		pos
	m	()Lddx;	d	getGenerationSettings
	m	(Lddw;)Lddx;	d	lambda$static$2
		p	0		biome
	m	(Ljd;)Z	d	shouldMeltFrozenOceanIcebergSlightly
		p	1		pos
	m	()I	e	getFogColor
	m	(Lddw;)Ldec;	e	lambda$static$1
		p	0		biome
	m	(Ljd;)F	e	getHeightAdjustedTemperature
		p	1		pos
	m	()I	f	getFoliageColor
	m	(Lddw;)Lddw$b;	f	lambda$static$0
		p	0		biome
	m	(Ljd;)F	f	getTemperature
		p	1		blockPos
	m	()F	g	getBaseTemperature
	m	()Ldec;	h	getSpecialEffects
	m	()I	i	getWaterColor
	m	()I	j	getWaterFogColor
	m	()Ljava/util/Optional;	k	getAmbientParticle
	m	()Ljava/util/Optional;	l	getAmbientLoop
	m	()Ljava/util/Optional;	m	getAmbientMood
	m	()Ljava/util/Optional;	n	getAmbientAdditions
	m	()Ljava/util/Optional;	o	getBackgroundMusic
	m	()I	p	getGrassColorFromTexture
	m	()I	q	getFoliageColorFromTexture
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	r	lambda$new$10
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	s	lambda$new$9
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Leoj;	e	BIOME_INFO_NOISE
	f	Leoj;	f	TEMPERATURE_NOISE
	f	Leoj;	g	FROZEN_TEMPERATURE_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Lddw$b;	i	climateSettings
	f	Lddx;	j	generationSettings
	f	Ldei;	k	mobSettings
	f	Ldec;	l	specialEffects
	f	Ljava/lang/ThreadLocal;	m	temperatureCache
c	ddw$1	net/minecraft/world/level/biome/BiomeBase$1
	f	Lddw;	a	this$0
c	ddw$a	net/minecraft/world/level/biome/BiomeBase$a
	m	()Lddw;	a	build
	m	(F)Lddw$a;	a	temperature
		p	1		temperature
	m	(Lddw$d;)Lddw$a;	a	temperatureAdjustment
		p	1		temperatureModifier
	m	(Lddx;)Lddw$a;	a	generationSettings
		p	1		generationSettings
	m	(Ldec;)Lddw$a;	a	specialEffects
		p	1		effects
	m	(Ldei;)Lddw$a;	a	mobSpawnSettings
		p	1		spawnSettings
	m	(Z)Lddw$a;	a	hasPrecipitation
		p	1		precipitation
	m	(F)Lddw$a;	b	downfall
		p	1		downfall
	f	Z	a	hasPrecipitation
	f	Ljava/lang/Float;	b	temperature
	f	Lddw$d;	c	temperatureModifier
	f	Ljava/lang/Float;	d	downfall
	f	Ldec;	e	specialEffects
	f	Ldei;	f	mobSpawnSettings
	f	Lddx;	g	generationSettings
c	ddw$b	net/minecraft/world/level/biome/BiomeBase$ClimateSettings
	m	(ZFLddw$d;F)V	<init>	<init>
		p	2		temperature
		p	3		temperatureModifier
		p	4		downfall
	m	()Z	a	hasPrecipitation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lddw$b;)Ljava/lang/Float;	a	lambda$static$3
		p	0		weather
	m	()F	b	temperature
	m	(Lddw$b;)Lddw$d;	b	lambda$static$2
		p	0		weather
	m	()Lddw$d;	c	temperatureModifier
	m	(Lddw$b;)Ljava/lang/Float;	c	lambda$static$1
		p	0		weather
	m	()F	d	downfall
	m	(Lddw$b;)Ljava/lang/Boolean;	d	lambda$static$0
		p	0		weather
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	hasPrecipitation
	f	F	c	temperature
	f	Lddw$d;	d	temperatureModifier
	f	F	e	downfall
c	ddw$c	net/minecraft/world/level/biome/BiomeBase$Precipitation
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lddw$c;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddw$c;	a	NONE
	f	Lddw$c;	b	RAIN
	f	Lddw$c;	c	SNOW
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lddw$c;	f	$VALUES
c	ddw$d	net/minecraft/world/level/biome/BiomeBase$TemperatureModifier
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(Ljd;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
	m	()[Lddw$d;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lddw$d;	a	NONE
	f	Lddw$d;	b	FROZEN
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lddw$d;	e	$VALUES
c	ddw$d$1	net/minecraft/world/level/biome/BiomeBase$TemperatureModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljd;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	ddw$d$2	net/minecraft/world/level/biome/BiomeBase$TemperatureModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljd;F)F	a	modifyTemperature
		p	1		pos
		p	2		temperature
c	ddx	net/minecraft/world/level/biome/BiomeSettingsGeneration
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
		p	1		carvers
		p	2		features
	m	()Ljava/util/List;	a	getFlowerFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddx;)Ljava/util/List;	a	lambda$static$1
		p	0		generationSettings
	m	(Ldyu$a;)Ljava/lang/Iterable;	a	getCarvers
		p	1		carverStep
	m	(Lebq;)Z	a	lambda$new$3
		p	0		feature
	m	(Leiv;)Z	a	hasFeature
		p	1		feature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	()Ljava/util/List;	b	features
	m	(Lddx;)Ljava/util/Map;	b	lambda$static$0
		p	0		generationSettings
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	f	Lddx;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
c	ddx$a	net/minecraft/world/level/biome/BiomeSettingsGeneration$a
	m	(Ljn;Ljn;)V	<init>	<init>
		p	1		placedFeatureLookup
		p	2		configuredCarverLookup
	m	(Ldyu$a;Lakq;)Lddx$a;	a	addCarver
		p	1		carverStep
		p	2		carverKey
	m	(Ldyu$b;Lakq;)Lddx$a;	a	addFeature
		p	1		featureStep
		p	2		featureKey
	f	Ljn;	a	placedFeatures
	f	Ljn;	b	worldCarvers
c	ddx$b	net/minecraft/world/level/biome/BiomeSettingsGeneration$b
	m	()Lddx;	a	build
	m	(I)V	a	addFeatureStepsUpTo
		p	1		size
	m	(ILjm;)Lddx$b;	a	addFeature
		p	1		ordinal
		p	2		featureEntry
	m	(Ldyu$a;)Ljava/util/List;	a	lambda$addCarver$0
		p	0		step
	m	(Ldyu$a;Ljm;)Lddx$b;	a	addCarver
		p	1		carverStep
		p	2		carverEntry
	m	(Ldyu$b;Ljm;)Lddx$b;	a	addFeature
		p	1		featureStep
		p	2		featureEntry
	m	(Ljava/util/Map$Entry;)Ljq;	a	lambda$build$1
	f	Ljava/util/Map;	a	carvers
	f	Ljava/util/List;	b	features
c	ddy	net/minecraft/world/level/biome/BiomeManager
	m	(Lddy$a;J)V	<init>	<init>
		p	1		storage
		p	2		seed
	m	(DDD)Ljm;	a	getNoiseBiomeAtPosition
		p	1		x
		p	3		y
		p	5		z
	m	(III)Ljm;	a	getNoiseBiomeAtQuart
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(J)J	a	obfuscateSeed
		p	0		seed
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(Lddy$a;)Lddy;	a	withDifferentSource
		p	1		storage
	m	(Ljd;)Ljm;	a	getBiome
		p	1		pos
	m	(J)D	b	getFiddle
	m	(Ljd;)Ljm;	b	getNoiseBiomeAtPosition
		p	1		pos
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Lddy$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
c	ddy$a	net/minecraft/world/level/biome/BiomeManager$Provider
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
c	ddz	net/minecraft/world/level/biome/BiomeResolver
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
c	dea	net/minecraft/world/level/biome/WorldChunkManager
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Layw;ZLdef$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILdef$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(IIIILjava/util/function/Predicate;Layw;Ldef$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		predicate
		p	6		random
		p	7		noiseSampler
	m	(Ljava/util/List;Ljd;Ldef$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	(Ljd;IIILjava/util/function/Predicate;Ldef$f;Ldcz;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Ljava/util/Set;	c	possibleBiomes
	m	()Ljava/util/Set;	d	lambda$new$0
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Supplier;	b	possibleBiomes
c	deb	net/minecraft/world/level/biome/BiomeSources
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
c	dec	net/minecraft/world/level/biome/BiomeFog
	m	(IIIILjava/util/Optional;Ljava/util/Optional;Ldec$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		fogColor
		p	2		waterColor
		p	3		waterFogColor
		p	4		skyColor
		p	5		foliageColor
		p	6		grassColor
		p	7		grassColorModifier
		p	8		particleConfig
		p	9		loopSound
		p	10		moodSound
		p	11		additionsSound
		p	12		music
	m	()I	a	getFogColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
		p	0		instance
	m	(Ldec;)Ljava/util/Optional;	a	lambda$static$11
		p	0		effects
	m	()I	b	getWaterColor
	m	(Ldec;)Ljava/util/Optional;	b	lambda$static$10
		p	0		effects
	m	()I	c	getWaterFogColor
	m	(Ldec;)Ljava/util/Optional;	c	lambda$static$9
		p	0		effects
	m	()I	d	getSkyColor
	m	(Ldec;)Ljava/util/Optional;	d	lambda$static$8
		p	0		effects
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	(Ldec;)Ljava/util/Optional;	e	lambda$static$7
		p	0		effects
	m	()Ljava/util/Optional;	f	getGrassColorOverride
	m	(Ldec;)Ldec$b;	f	lambda$static$6
		p	0		effects
	m	()Ldec$b;	g	getGrassColorModifier
	m	(Ldec;)Ljava/util/Optional;	g	lambda$static$5
		p	0		effects
	m	()Ljava/util/Optional;	h	getAmbientParticleSettings
	m	(Ldec;)Ljava/util/Optional;	h	lambda$static$4
		p	0		effects
	m	()Ljava/util/Optional;	i	getAmbientLoopSoundEvent
	m	(Ldec;)Ljava/lang/Integer;	i	lambda$static$3
		p	0		effects
	m	()Ljava/util/Optional;	j	getAmbientMoodSettings
	m	(Ldec;)Ljava/lang/Integer;	j	lambda$static$2
		p	0		effects
	m	()Ljava/util/Optional;	k	getAmbientAdditionsSettings
	m	(Ldec;)Ljava/lang/Integer;	k	lambda$static$1
		p	0		effects
	m	()Ljava/util/Optional;	l	getBackgroundMusic
	m	(Ldec;)Ljava/lang/Integer;	l	lambda$static$0
		p	0		effects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Ldec$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticleSettings
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
c	dec$a	net/minecraft/world/level/biome/BiomeFog$a
	m	()Ldec;	a	build
	m	(I)Ldec$a;	a	fogColor
		p	1		fogColor
	m	(Lavm;)Ldec$a;	a	backgroundMusic
		p	1		music
	m	(Lddt;)Ldec$a;	a	ambientAdditionsSound
		p	1		additionsSound
	m	(Lddu;)Ldec$a;	a	ambientMoodSound
		p	1		moodSound
	m	(Lddv;)Ldec$a;	a	ambientParticle
		p	1		particleConfig
	m	(Ldec$b;)Ldec$a;	a	grassColorModifier
		p	1		grassColorModifier
	m	(Ljm;)Ldec$a;	a	ambientLoopSound
		p	1		loopSound
	m	()Ljava/lang/IllegalStateException;	b	lambda$build$3
	m	(I)Ldec$a;	b	waterColor
		p	1		waterColor
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$2
	m	(I)Ldec$a;	c	waterFogColor
		p	1		waterFogColor
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$1
	m	(I)Ldec$a;	d	skyColor
		p	1		skyColor
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$0
	m	(I)Ldec$a;	e	foliageColorOverride
		p	1		foliageColor
	m	(I)Ldec$a;	f	grassColorOverride
		p	1		grassColor
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	grassColorOverride
	f	Ldec$b;	g	grassColorModifier
	f	Ljava/util/Optional;	h	ambientParticle
	f	Ljava/util/Optional;	i	ambientLoopSoundEvent
	f	Ljava/util/Optional;	j	ambientMoodSettings
	f	Ljava/util/Optional;	k	ambientAdditionsSettings
	f	Ljava/util/Optional;	l	backgroundMusic
c	dec$b	net/minecraft/world/level/biome/BiomeFog$GrassColor
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
	m	()[Ldec$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldec$b;	a	NONE
	f	Ldec$b;	b	DARK_FOREST
	f	Ldec$b;	c	SWAMP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Ldec$b;	f	$VALUES
c	dec$b$1	net/minecraft/world/level/biome/BiomeFog$GrassColor$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	dec$b$2	net/minecraft/world/level/biome/BiomeFog$GrassColor$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	dec$b$3	net/minecraft/world/level/biome/BiomeFog$GrassColor$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(DDI)I	a	modifyColor
		p	1		x
		p	3		z
		p	5		color
c	ded	net/minecraft/world/level/biome/Biomes
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		name
	f	Lakq;	A	BADLANDS
	f	Lakq;	B	ERODED_BADLANDS
	f	Lakq;	C	WOODED_BADLANDS
	f	Lakq;	D	MEADOW
	f	Lakq;	E	CHERRY_GROVE
	f	Lakq;	F	GROVE
	f	Lakq;	G	SNOWY_SLOPES
	f	Lakq;	H	FROZEN_PEAKS
	f	Lakq;	I	JAGGED_PEAKS
	f	Lakq;	J	STONY_PEAKS
	f	Lakq;	K	RIVER
	f	Lakq;	L	FROZEN_RIVER
	f	Lakq;	M	BEACH
	f	Lakq;	N	SNOWY_BEACH
	f	Lakq;	O	STONY_SHORE
	f	Lakq;	P	WARM_OCEAN
	f	Lakq;	Q	LUKEWARM_OCEAN
	f	Lakq;	R	DEEP_LUKEWARM_OCEAN
	f	Lakq;	S	OCEAN
	f	Lakq;	T	DEEP_OCEAN
	f	Lakq;	U	COLD_OCEAN
	f	Lakq;	V	DEEP_COLD_OCEAN
	f	Lakq;	W	FROZEN_OCEAN
	f	Lakq;	X	DEEP_FROZEN_OCEAN
	f	Lakq;	Y	MUSHROOM_FIELDS
	f	Lakq;	Z	DRIPSTONE_CAVES
	f	Lakq;	a	THE_VOID
	f	Lakq;	aa	LUSH_CAVES
	f	Lakq;	ab	DEEP_DARK
	f	Lakq;	ac	NETHER_WASTES
	f	Lakq;	ad	WARPED_FOREST
	f	Lakq;	ae	CRIMSON_FOREST
	f	Lakq;	af	SOUL_SAND_VALLEY
	f	Lakq;	ag	BASALT_DELTAS
	f	Lakq;	ah	THE_END
	f	Lakq;	ai	END_HIGHLANDS
	f	Lakq;	aj	END_MIDLANDS
	f	Lakq;	ak	SMALL_END_ISLANDS
	f	Lakq;	al	END_BARRENS
	f	Lakq;	b	PLAINS
	f	Lakq;	c	SUNFLOWER_PLAINS
	f	Lakq;	d	SNOWY_PLAINS
	f	Lakq;	e	ICE_SPIKES
	f	Lakq;	f	DESERT
	f	Lakq;	g	SWAMP
	f	Lakq;	h	MANGROVE_SWAMP
	f	Lakq;	i	FOREST
	f	Lakq;	j	FLOWER_FOREST
	f	Lakq;	k	BIRCH_FOREST
	f	Lakq;	l	DARK_FOREST
	f	Lakq;	m	OLD_GROWTH_BIRCH_FOREST
	f	Lakq;	n	OLD_GROWTH_PINE_TAIGA
	f	Lakq;	o	OLD_GROWTH_SPRUCE_TAIGA
	f	Lakq;	p	TAIGA
	f	Lakq;	q	SNOWY_TAIGA
	f	Lakq;	r	SAVANNA
	f	Lakq;	s	SAVANNA_PLATEAU
	f	Lakq;	t	WINDSWEPT_HILLS
	f	Lakq;	u	WINDSWEPT_GRAVELLY_HILLS
	f	Lakq;	v	WINDSWEPT_FOREST
	f	Lakq;	w	WINDSWEPT_SAVANNA
	f	Lakq;	x	JUNGLE
	f	Lakq;	y	SPARSE_JUNGLE
	f	Lakq;	z	BAMBOO_JUNGLE
c	dee	net/minecraft/world/level/biome/WorldChunkManagerCheckerBoard
	m	(Ljq;I)V	<init>	<init>
		p	1		biomes
		p	2		size
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldee;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		biomeSource
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Ldee;)Ljq;	b	lambda$static$0
		p	0		biomeSource
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljq;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
c	def	net/minecraft/world/level/biome/Climate
	m	()Ldef$f;	a	empty
	m	(F)J	a	quantizeCoord
		p	0		value
	m	(FFFFFF)Ldef$h;	a	target
		p	0		temperatureNoise
		p	1		humidityNoise
		p	2		continentalnessNoise
		p	3		erosionNoise
		p	4		depth
		p	5		weirdnessNoise
	m	(FFFFFFF)Ldef$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(J)F	a	unquantizeCoord
		p	0		value
	m	(Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;F)Ldef$d;	a	parameters
		p	0		temperature
		p	1		humidity
		p	2		continentalness
		p	3		erosion
		p	4		depth
		p	5		weirdness
		p	6		offset
	m	(Ljava/util/List;Ldef$f;)Ljd;	a	findSpawnPosition
		p	0		noises
		p	1		sampler
	f	I	a	PARAMETER_COUNT
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
c	def$a	net/minecraft/world/level/biome/Climate$a
	m	(Ldef$e$b;[J)J	distance	distance
		p	1		node
		p	2		otherParameters
c	def$b	net/minecraft/world/level/biome/Climate$b
	m	()J	a	min
	m	(F)Ldef$b;	a	point
		p	0		point
	m	(FF)Ldef$b;	a	span
		p	0		min
		p	1		max
	m	(J)J	a	distance
		p	1		noise
	m	(Ldef$b;)J	a	distance
		p	1		other
	m	(Ldef$b;Ldef$b;)Ldef$b;	a	span
		p	0		min
		p	1		max
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		min
		p	1		max
	m	()J	b	max
	m	(Ldef$b;)Ldef$b;	b	span
		p	1		other
	m	(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	(Ldef$b;)Ljava/lang/Float;	c	lambda$static$3
	m	(Ldef$b;)Ljava/lang/Float;	d	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	min
	f	J	c	max
c	def$c	net/minecraft/world/level/biome/Climate$c
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		entries
	m	()Ljava/util/List;	a	values
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		entryCodec
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
		p	1		instance
	m	(Ldef$h;)Ljava/lang/Object;	a	findValue
		p	1		point
	m	(Ldef$h;Ldef$a;)Ljava/lang/Object;	a	findValueIndex
		p	1		point
		p	2		distanceFunction
	m	(Ldef$h;)Ljava/lang/Object;	b	findValueBruteForce
		p	1		point
	m	(Ldef$h;)Ljava/lang/Object;	c	findValueIndex
		p	1		point
	f	Ljava/util/List;	a	values
	f	Ldef$e;	b	index
c	def$d	net/minecraft/world/level/biome/Climate$d
	m	(Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;J)V	<init>	<init>
		p	1		temperature
		p	2		humidity
		p	3		continentalness
		p	4		erosion
		p	5		depth
		p	6		weirdness
	m	()Ljava/util/List;	a	parameterSpace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Ldef$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Ldef$h;)J	a	fitness
		p	1		point
	m	()Ldef$b;	b	temperature
	m	(Ldef$d;)Ldef$b;	b	lambda$static$5
	m	()Ldef$b;	c	humidity
	m	(Ldef$d;)Ldef$b;	c	lambda$static$4
	m	()Ldef$b;	d	continentalness
	m	(Ldef$d;)Ldef$b;	d	lambda$static$3
	m	()Ldef$b;	e	erosion
	m	(Ldef$d;)Ldef$b;	e	lambda$static$2
	m	()Ldef$b;	f	depth
	m	(Ldef$d;)Ldef$b;	f	lambda$static$1
	m	()Ldef$b;	g	weirdness
	m	(Ldef$d;)Ldef$b;	g	lambda$static$0
	m	()J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldef$b;	b	temperature
	f	Ldef$b;	c	humidity
	f	Ldef$b;	d	continentalness
	f	Ldef$b;	e	erosion
	f	Ldef$b;	f	depth
	f	Ldef$b;	g	weirdness
	f	J	h	offset
c	def$e	net/minecraft/world/level/biome/Climate$e
	m	(Ldef$e$b;)V	<init>	<init>
		p	1		firstNode
	m	(ILdef$e$b;)J	a	lambda$build$1
		p	1		node
	m	(ILdef$e$c;)Ldef$e$b;	a	lambda$build$2
		p	1		node
	m	(ILjava/util/List;)Ldef$e$b;	a	build
		p	0		parameterNumber
		p	1		subTree
	m	(IZ)Ljava/util/Comparator;	a	comparator
		p	0		currentParameter
		p	1		abs
	m	(IZLdef$e$b;)J	a	lambda$comparator$3
	m	(Lcom/mojang/datafixers/util/Pair;)Ldef$e$a;	a	lambda$create$0
		p	0		entry
	m	(Ldef$h;Ldef$a;)Ljava/lang/Object;	a	search
		p	1		point
		p	2		distanceFunction
	m	(Ljava/util/List;)Ldef$e;	a	create
		p	0		entries
	m	(Ljava/util/List;IIZ)V	a	sort
		p	0		subTree
		p	1		parameterNumber
		p	2		currentParameter
		p	3		abs
	m	([Ldef$b;)J	a	cost
		p	0		parameters
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
		p	0		nodes
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
		p	0		subTree
	f	I	a	CHILDREN_PER_NODE
	f	Ldef$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
c	def$e$a	net/minecraft/world/level/biome/Climate$e$a
	m	(Ldef$d;Ljava/lang/Object;)V	<init>	<init>
		p	1		parameters
		p	2		value
	m	([JLdef$e$a;Ldef$a;)Ldef$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	Ljava/lang/Object;	b	value
c	def$e$b	net/minecraft/world/level/biome/Climate$e$b
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		parameters
	m	([J)J	a	distance
		p	1		otherParameters
	m	([JLdef$e$a;Ldef$a;)Ldef$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Ldef$b;	a	parameterSpace
c	def$e$c	net/minecraft/world/level/biome/Climate$e$c
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		subTree
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		parameters
		p	2		subTree
	m	([JLdef$e$a;Ldef$a;)Ldef$e$a;	a	search
		p	1		otherParameters
		p	2		alternative
		p	3		distanceFunction
	f	[Ldef$e$b;	b	children
c	def$f	net/minecraft/world/level/biome/Climate$Sampler
	m	()Ljd;	a	findSpawnPosition
	m	(III)Ldef$h;	a	sample
		p	1		x
		p	2		y
		p	3		z
	m	()Ldyr;	b	temperature
	m	()Ldyr;	c	humidity
	m	()Ldyr;	d	continentalness
	m	()Ldyr;	e	erosion
	m	()Ldyr;	f	depth
	m	()Ldyr;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
	f	Ldyr;	a	temperature
	f	Ldyr;	b	humidity
	f	Ldyr;	c	continentalness
	f	Ldyr;	d	erosion
	f	Ldyr;	e	depth
	f	Ldyr;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
c	def$g	net/minecraft/world/level/biome/Climate$g
	m	(Ljava/util/List;Ldef$f;)V	<init>	<init>
		p	1		noises
		p	2		sampler
	m	(Ljava/util/List;Ldef$f;FF)V	a	radialSearch
		p	1		noises
		p	2		sampler
		p	3		maxDistance
		p	4		step
	m	(Ljava/util/List;Ldef$f;II)Ldef$g$a;	a	getSpawnPositionAndFitness
		p	0		noises
		p	1		sampler
		p	2		x
		p	3		z
	f	Ldef$g$a;	a	result
c	def$g$a	net/minecraft/world/level/biome/Climate$g$a
	m	()Ljd;	a	location
	m	()J	b	fitness
	f	Ljd;	a	location
	f	J	b	fitness
c	def$h	net/minecraft/world/level/biome/Climate$h
	m	()[J	a	toParameterArray
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
c	deg	net/minecraft/world/level/biome/FeatureSorter
	m	(ILdeg$a;)Z	a	lambda$buildFeaturesPerStep$2
		p	1		feature
	m	(Ljava/util/Comparator;Ldeg$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$1
		p	1		feature
	m	(Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List;	a	buildFeaturesPerStep
		p	0		biomes
		p	1		biomesToPlacedFeaturesList
		p	2		listInvolvedBiomesOnFailure
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$0
		p	1		feature
c	deg$a	net/minecraft/world/level/biome/FeatureSorter$a
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Leiv;	c	feature
	f	I	a	featureIndex
	f	I	b	step
	f	Leiv;	c	feature
c	deg$b	net/minecraft/world/level/biome/FeatureSorter$b
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		features
	m	()Ljava/util/List;	a	features
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
c	deh	net/minecraft/world/level/biome/WorldChunkManagerHell
	m	(Ljm;)V	<init>	<init>
		p	1		biome
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(IIIIILjava/util/function/Predicate;Layw;ZLdef$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		blockCheckInterval
		p	6		predicate
		p	7		random
		p	9		noiseSampler
	m	(IIIILdef$f;)Ljava/util/Set;	a	getBiomesWithin
		p	1		x
		p	2		y
		p	3		z
		p	4		radius
		p	5		sampler
	m	(Ldeh;)Ljm;	a	lambda$static$0
		p	0		biomeSource
	m	(Ljd;IIILjava/util/function/Predicate;Ldef$f;Ldcz;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
		p	1		origin
		p	2		radius
		p	3		horizontalBlockCheckInterval
		p	4		verticalBlockCheckInterval
		p	5		predicate
		p	6		noiseSampler
		p	7		world
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljm;	c	biome
c	dei	net/minecraft/world/level/biome/BiomeSettingsMobs
	m	(FLjava/util/Map;Ljava/util/Map;)V	<init>	<init>
		p	1		creatureSpawnProbability
		p	2		spawners
		p	3		spawnCosts
	m	()F	a	getCreatureProbability
	m	(Lbsx;)Ldei$b;	a	getMobSpawnCost
		p	1		entityType
	m	(Lbtq;)Lbpf;	a	getMobs
		p	1		spawnGroup
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldei;)Ljava/util/Map;	a	lambda$static$2
	m	(Ldei;)Ljava/util/Map;	b	lambda$static$1
	m	(Ldei;)Ljava/lang/Float;	c	lambda$static$0
	f	Lbpf;	a	EMPTY_MOB_LIST
	f	Ldei;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
c	dei$a	net/minecraft/world/level/biome/BiomeSettingsMobs$a
	m	()Ldei;	a	build
	m	(F)Ldei$a;	a	creatureGenerationProbability
		p	1		probability
	m	(Lbsx;DD)Ldei$a;	a	addMobCharge
		p	1		entityType
		p	2		mass
		p	4		gravityLimit
	m	(Lbtq;)Ljava/util/List;	a	lambda$new$1
	m	(Lbtq;Ldei$c;)Ldei$a;	a	addSpawn
		p	1		spawnGroup
		p	2		spawnEntry
	m	(Ljava/util/Map$Entry;)Lbpf;	a	lambda$build$2
	m	(Lbtq;)Lbtq;	b	lambda$new$0
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
c	dei$b	net/minecraft/world/level/biome/BiomeSettingsMobs$b
	m	(DD)V	<init>	<init>
		p	1		gravityLimit
		p	3		mass
	m	()D	a	energyBudget
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldei$b;)Ljava/lang/Double;	a	lambda$static$1
		p	0		spawnDensity
	m	()D	b	charge
	m	(Ldei$b;)Ljava/lang/Double;	b	lambda$static$0
		p	0		spawnDensity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	energyBudget
	f	D	c	charge
c	dei$c	net/minecraft/world/level/biome/BiomeSettingsMobs$c
	m	(Lbsx;III)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lbsx;Lbpc;II)V	<init>	<init>
		p	1		type
		p	2		weight
		p	3		minGroupSize
		p	4		maxGroupSize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldei$c;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
		p	0		spawnEntry
	m	()Ljava/lang/String;	b	lambda$static$4
	m	(Ldei$c;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		spawnEntry
	m	(Ldei$c;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		spawnEntry
	m	(Ldei$c;)Lbsx;	d	lambda$static$0
		p	0		spawnEntry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbsx;	b	type
	f	I	c	minCount
	f	I	d	maxCount
c	dej	net/minecraft/world/level/biome/WorldChunkManagerMultiNoise
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
		p	1		biomeEntries
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lakq;)Z	a	stable
		p	1		parameterList
	m	(Ldef$c;)Ldej;	a	createFromList
		p	0		biomeEntries
	m	(Ldef$h;)Ljm;	a	getNoiseBiome
		p	1		point
	m	(Ldej;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		source
	m	(Ljava/util/List;Ljd;Ldef$f;)V	a	addDebugInfo
		p	1		info
		p	2		pos
		p	3		noiseSampler
	m	(Ljm;)Ldej;	a	createFromPreset
		p	0		biomeEntries
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(Ldef$c;)Ldef$c;	b	lambda$parameters$1
		p	0		entries
	m	(Ljm;)Ldef$c;	b	lambda$parameters$2
		p	0		parameterListEntry
	m	()Ldef$c;	d	parameters
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	ENTRY_CODEC
	f	Lcom/mojang/serialization/MapCodec;	e	PRESET_CODEC
	f	Lcom/mojang/datafixers/util/Either;	f	parameters
c	dek	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	m	(Ldek$a;Ljn;)V	<init>	<init>
		p	1		preset
		p	2		biomeLookup
	m	()Ldef$c;	a	parameters
	m	(Lakq;)Lakq;	a	lambda$knownPresets$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldek$a;)Ldef$c;	a	lambda$knownPresets$4
		p	0		preset
	m	(Ldek;)Ldek$a;	a	lambda$static$0
	m	()Ljava/util/Map;	b	knownPresets
	m	(Ldek$a;)Ldek$a;	b	lambda$knownPresets$2
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldek$a;	c	preset
	f	Ldef$c;	d	parameters
c	dek$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$a
	m	(Lakr;Ldek$a$a;)V	<init>	<init>
		p	1		id
		p	2		biomeSourceFunction
	m	()Ljava/util/stream/Stream;	a	usedBiomes
	m	(Lakq;)Lakq;	a	lambda$usedBiomes$6
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lcom/google/common/collect/ImmutableList$Builder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$generateOverworldBiomes$5
		p	2		pair
	m	(Ldek$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Ljava/util/function/Function;)Ldef$c;	a	generateOverworldBiomes
		p	0		biomeEntryGetter
	m	()Lakr;	b	id
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Ldek$a;)Ldek$a;	b	lambda$static$0
	m	()Ldek$a$a;	c	provider
	m	(Lakr;)Ljava/lang/String;	c	lambda$static$1
	f	Ldek$a;	a	NETHER
	f	Ldek$a;	b	OVERWORLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lakr;	d	id
	f	Ldek$a$a;	e	provider
	f	Ljava/util/Map;	f	BY_NAME
c	dek$a$1	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$a$1
	m	(Ljava/util/function/Function;)Ldef$c;	apply	apply
		p	1		biomeEntryGetter
c	dek$a$2	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$a$2
	m	(Ljava/util/function/Function;)Ldef$c;	apply	apply
		p	1		biomeEntryGetter
c	dek$a$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$a$a
	m	(Ljava/util/function/Function;)Ldef$c;	apply	apply
		p	1		biomeEntryGetter
c	del	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	f	Lakq;	a	NETHER
	f	Lakq;	b	OVERWORLD
c	dem	net/minecraft/world/level/biome/OverworldBiomeBuilder
	m	()Ljava/util/List;	a	spawnTarget
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
		p	0		weirdness
	m	(D[Ldef$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
		p	0		noisePoint
		p	2		noiseRanges
	m	(II)Lakq;	a	pickBeachBiome
		p	1		temperature
		p	2		humidity
	m	(IILdef$b;)Lakq;	a	pickMiddleBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILdef$b;Lakq;)Lakq;	a	maybePickWindsweptSavannaBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
		p	4		biomeKey
	m	(ILdef$b;)Lakq;	a	pickBadlandsBiome
		p	1		humidity
		p	2		weirdness
	m	(Ldyr;Ldyr;Ldyr$b;)Z	a	isDeepDarkRegion
		p	0		erosion
		p	1		depth
		p	2		pos
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Ldef$b;)V	a	addPeaks
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;FLakq;)V	a	addSurfaceBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Ldef$b;	b	getTemperatureThresholds
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
		p	1		continentalness
	m	(IILdef$b;)Lakq;	b	pickMiddleBiomeOrBadlandsIfHot
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	b	addDebugBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Ldef$b;)V	b	addHighSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;FLakq;)V	b	addUndergroundBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Ldef$b;	c	getHumidityThresholds
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
		p	1		erosion
	m	(IILdef$b;)Lakq;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	c	addOffCoastBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Ldef$b;)V	c	addMidSlice
		p	1		parameters
		p	2		weirdness
	m	(Ljava/util/function/Consumer;Ldef$b;Ldef$b;Ldef$b;Ldef$b;Ldef$b;FLakq;)V	c	addBottomBiome
		p	1		parameters
		p	2		temperature
		p	3		humidity
		p	4		continentalness
		p	5		erosion
		p	6		weirdness
		p	7		offset
		p	8		biome
	m	()[Ldef$b;	d	getErosionThresholds
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
		p	1		temperature
	m	(IILdef$b;)Lakq;	d	pickShatteredCoastBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	d	addInlandBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Ldef$b;)V	d	addLowSlice
		p	1		parameters
		p	2		weirdness
	m	()[Ldef$b;	e	getContinentalnessThresholds
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
		p	1		humidity
	m	(IILdef$b;)Lakq;	e	pickPlateauBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(Ljava/util/function/Consumer;)V	e	addUndergroundBiomes
		p	1		parameters
	m	(Ljava/util/function/Consumer;Ldef$b;)V	e	addValleys
		p	1		parameters
		p	2		weirdness
	m	()[Ldef$b;	f	getPeaksAndValleysThresholds
	m	(IILdef$b;)Lakq;	f	pickPeakBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	()[Ldef$b;	g	getWeirdnessThresholds
	m	(IILdef$b;)Lakq;	g	pickSlopeBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	m	(IILdef$b;)Lakq;	h	pickShatteredBiome
		p	1		temperature
		p	2		humidity
		p	3		weirdness
	f	Ldef$b;	A	midInlandContinentalness
	f	Ldef$b;	B	farInlandContinentalness
	f	[[Lakq;	C	OCEANS
	f	[[Lakq;	D	MIDDLE_BIOMES
	f	[[Lakq;	E	MIDDLE_BIOMES_VARIANT
	f	[[Lakq;	F	PLATEAU_BIOMES
	f	[[Lakq;	G	PLATEAU_BIOMES_VARIANT
	f	[[Lakq;	H	SHATTERED_BIOMES
	f	F	a	HIGH_START
	f	F	b	PEAK_START
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	l	PEAK_END
	f	F	m	EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	f	F	n	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	f	Ldef$b;	o	FULL_RANGE
	f	[Ldef$b;	p	temperatures
	f	[Ldef$b;	q	humidities
	f	[Ldef$b;	r	erosions
	f	Ldef$b;	s	FROZEN_RANGE
	f	Ldef$b;	t	UNFROZEN_RANGE
	f	Ldef$b;	u	mushroomFieldsContinentalness
	f	Ldef$b;	v	deepOceanContinentalness
	f	Ldef$b;	w	oceanContinentalness
	f	Ldef$b;	x	coastContinentalness
	f	Ldef$b;	y	inlandContinentalness
	f	Ldef$b;	z	nearInlandContinentalness
c	den	net/minecraft/world/level/biome/WorldChunkManagerTheEnd
	m	(Ljm;Ljm;Ljm;Ljm;Ljm;)V	<init>	<init>
		p	1		centerBiome
		p	2		highlandsBiome
		p	3		midlandsBiome
		p	4		smallIslandsBiome
		p	5		barrensBiome
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljn;)Lden;	a	create
		p	0		biomeLookup
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	(IIILdef$f;)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
		p	4		noise
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljm;	c	end
	f	Ljm;	d	highlands
	f	Ljm;	e	midlands
	f	Ljm;	f	islands
	f	Ljm;	g	barrens
c	dep	net/minecraft/world/level/block/BlockBannerAbstract
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Lcti;	b	getColor
	f	Lcti;	a	color
c	deq	net/minecraft/world/level/block/AbstractCandleBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldtc;Ldcx;Ljd;)V	a	extinguish
		p	0		player
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Lexc;Layw;)V	a	addParticlesAndSound
		p	0		world
		p	1		vec3d
		p	2		random
	m	(Ldcw;Ljd;Layw;Lexc;)V	a	lambda$animateTick$0
		p	3		offset
	m	(Ldcx;Ldtc;Ljd;Z)V	a	setLit
		p	0		world
		p	1		state
		p	2		pos
		p	3		lit
	m	(Ldcx;Ljd;Lexc;)V	a	lambda$extinguish$1
		p	2		offset
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldtc;)Z	c	isLit
		p	0		state
	m	(Ldtc;)Z	d	canBeLit
		p	1		state
	f	I	a	LIGHT_PER_CANDLE
	f	Ldtt;	b	LIT
c	der	net/minecraft/world/level/block/AbstractCauldronBlock
	m	(Ldtb$d;Lkj$a;)V	<init>	<init>
		p	1		settings
		p	2		behaviorMap
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lepd;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Ljd;Lbsr;)Z	a	isEntityInsideContent
		p	1		state
		p	2		pos
		p	3		entity
	m	(Lepd;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldtc;)D	b	getContentHeight
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	d	isFull
		p	1		state
	f	I	a	FLOOR_LEVEL
	f	Lexv;	b	SHAPE
	f	Lkj$a;	c	interactions
	f	I	d	SIDE_THICKNESS
	f	I	e	LEG_WIDTH
	f	I	f	LEG_HEIGHT
	f	I	g	LEG_DEPTH
	f	Lexv;	h	INSIDE
c	des	net/minecraft/world/level/block/BlockChestAbstract
	m	(Ldtb$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Z)Ldif$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	f	Ljava/util/function/Supplier;	a	blockEntityType
c	det	net/minecraft/world/level/block/BlockFurnace
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldqj;Ldqj;)Ldqi;	a	createFurnaceTicker
		p	0		world
		p	1		givenType
		p	2		expectedType
	m	(Ldcw;Ljd;Lcmx;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Ldtw;	a	FACING
	f	Ldtt;	b	LIT
c	deu	net/minecraft/world/level/block/BlockSkullAbstract
	m	(Ldnb$a;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()Ldnb$a;	b	getType
	m	()Lbsy;	m	getEquipmentSlot
	f	Ldtt;	a	POWERED
	f	Ldnb$a;	b	type
c	dev	net/minecraft/world/level/block/BlockAir
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dew	net/minecraft/world/level/block/AmethystBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dex	net/minecraft/world/level/block/AmethystClusterBlock
	m	(FFLdtb$d;)V	<init>	<init>
		p	1		height
		p	2		xzOffset
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldex;)Ljava/lang/Float;	a	lambda$static$1
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldex;)Ljava/lang/Float;	b	lambda$static$0
		p	0		block
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtt;	c	WATERLOGGED
	f	Ldtw;	d	FACING
	f	Lexv;	e	northAabb
	f	Lexv;	f	southAabb
	f	Lexv;	g	eastAabb
	f	Lexv;	h	westAabb
	f	Lexv;	i	upAabb
	f	Lexv;	j	downAabb
	f	F	k	height
	f	F	l	aabbOffset
c	dex$1	net/minecraft/world/level/block/AmethystClusterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dey	net/minecraft/world/level/block/BlockAnvil
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)Lbrk;	a	getFallDamageSource
		p	1		attacker
	m	(Lcjg;)V	a	falling
		p	1		entity
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldcw;Ljd;Lcjg;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldcw;Ljd;Ldtc;Ldtc;Lcjg;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;)I	b	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Ldtc;	e	damage
		p	0		fallingState
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Lexv;	c	BASE
	f	Lexv;	d	X_LEG1
	f	Lexv;	e	X_LEG2
	f	Lexv;	f	X_TOP
	f	Lexv;	g	Z_LEG1
	f	Lexv;	h	Z_LEG2
	f	Lexv;	i	Z_TOP
	f	Lexv;	j	X_AXIS_AABB
	f	Lexv;	k	Z_AXIS_AABB
	f	Lwz;	l	CONTAINER_TITLE
	f	F	m	FALL_DAMAGE_PER_DISTANCE
	f	I	n	FALL_DAMAGE_MAX
c	dez	net/minecraft/world/level/block/BlockStemAttached
	m	(Lakq;Lakq;Lakq;Ldtb$d;)V	<init>	<init>
		p	1		stemBlock
		p	2		gourdBlock
		p	3		pickBlockItem
		p	4		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldez;)Lakq;	a	lambda$static$2
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldez;)Lakq;	b	lambda$static$1
		p	0		block
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldez;)Lakq;	c	lambda$static$0
		p	0		block
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	F	c	AABB_OFFSET
	f	Ljava/util/Map;	d	AABBS
	f	Lakq;	e	fruit
	f	Lakq;	f	stem
	f	Lakq;	g	seed
c	dfa	net/minecraft/world/level/block/AzaleaBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	dfb	net/minecraft/world/level/block/BlockBambooSapling
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;)V	a	growBamboo
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Lcmx;Ldcc;Ljd;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	SAPLING_AABB_OFFSET
	f	Lexv;	c	SAPLING_SHAPE
c	dfc	net/minecraft/world/level/block/BlockBamboo
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)I	a	getHeightAboveUpToMax
		p	1		world
		p	2		pos
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lcmx;Ldcc;Ljd;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;I)V	a	growBamboo
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
		p	5		height
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcc;Ljd;)I	b	getHeightBelowUpToMax
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Z	c	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	SMALL_LEAVES_AABB_OFFSET
	f	F	c	LARGE_LEAVES_AABB_OFFSET
	f	F	d	COLLISION_AABB_OFFSET
	f	Lexv;	e	SMALL_SHAPE
	f	Lexv;	f	LARGE_SHAPE
	f	Lexv;	g	COLLISION_SHAPE
	f	Lduc;	h	AGE
	f	Ldua;	i	LEAVES
	f	Lduc;	j	STAGE
	f	I	k	MAX_HEIGHT
	f	I	l	STAGE_GROWING
	f	I	m	STAGE_DONE_GROWING
	f	I	n	AGE_THIN_BAMBOO
	f	I	o	AGE_THICK_BAMBOO
c	dfd	net/minecraft/world/level/block/BlockBanner
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcti;)Ldfy;	a	byColor
		p	0		color
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	ROTATION
	f	Ljava/util/Map;	c	BY_COLOR
	f	Lexv;	d	SHAPE
c	dfe	net/minecraft/world/level/block/BlockBarrel
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	OPEN
c	dff	net/minecraft/world/level/block/BlockBarrier
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	WATERLOGGED
c	dfg	net/minecraft/world/level/block/BlockCoralFanAbstract
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	AABB
c	dfh	net/minecraft/world/level/block/BlockCoralDead
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
c	dfi	net/minecraft/world/level/block/BlockCoralBase
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcx;Ljd;)V	a	tryScheduleDieTick
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	e	scanForWater
		p	0		state
		p	1		world
		p	2		pos
	f	Lexv;	a	AABB
	f	Ldtt;	d	WATERLOGGED
c	dfj	net/minecraft/world/level/block/BlockCoralFanWallAbstract
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtw;	c	FACING
	f	Ljava/util/Map;	e	SHAPES
c	dfk	net/minecraft/world/level/block/BlockTileEntity
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldqj;Ldqj;Ldqi;)Ldqi;	a	createTickerHelper
		p	0		givenType
		p	1		expectedType
		p	2		ticker
	m	(Ldtc;Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
c	dfl	net/minecraft/world/level/block/BlockFireAbstract
	m	(Ldtb$d;F)V	<init>	<init>
		p	1		settings
		p	2		damage
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Ldtc;	a	getState
		p	0		world
		p	1		pos
	m	(Ldcw;)Z	a	inPortalDimension
		p	0		world
	m	(Ldcw;Lcmx;Ljd;Ldtc;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcw;Ljd;Lji;)Z	a	canBePlacedAt
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldcw;Ljd;Lji;)Z	b	isPortal
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	f	canBurn
		p	1		state
	f	F	a	AABB_OFFSET
	f	Lexv;	b	DOWN_AABB
	f	I	c	SECONDS_ON_FIRE
	f	F	d	fireDamage
c	dfm	net/minecraft/world/level/block/BlockPressurePlateAbstract
	m	(Ldtb$d;Ldtr;)V	<init>	<init>
		p	1		settings
		p	2		blockSetType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)Z	a	lambda$getEntityCount$0
		p	0		entity
	m	(Lbsr;Ldcw;Ljd;Ldtc;I)V	a	checkPressed
		p	1		entity
		p	2		world
		p	3		pos
		p	4		state
		p	5		output
	m	(Ldcw;Lewx;Ljava/lang/Class;)I	a	getEntityCount
		p	0		world
		p	1		box
		p	2		entityClass
	m	(Ldcw;Ljd;)V	a	updateNeighbours
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldtc;I)Ldtc;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()I	b	getPressedTime
	m	(Ldcw;Ljd;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;)I	g	getSignalForState
		p	1		state
	f	Lexv;	a	PRESSED_AABB
	f	Lexv;	b	AABB
	f	Lewx;	c	TOUCH_AABB
	f	Ldtr;	d	type
c	dfn	net/minecraft/world/level/block/BlockMinecartTrackAbstract
	m	(ZLdtb$d;)V	<init>	<init>
		p	1		forbidCurves
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;)Z	a	isRail
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Z)Ldtc;	a	updateDir
		p	1		world
		p	2		pos
		p	3		state
		p	4		forceUpdate
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldfy;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcw;Ljd;Z)Ldtc;	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		notify
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ljd;Ldcw;Ldug;)Z	a	shouldBeRemoved
		p	0		pos
		p	1		world
		p	2		shape
	m	()Z	b	isStraight
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Lduf;	c	getShapeProperty
	m	(Ldtc;)Z	g	isRail
		p	0		state
	f	Lexv;	a	FLAT_AABB
	f	Lexv;	b	HALF_BLOCK_AABB
	f	Ldtt;	c	WATERLOGGED
	f	Z	d	isStraight
c	dfn$1	net/minecraft/world/level/block/BlockMinecartTrackAbstract$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	dfo	net/minecraft/world/level/block/BaseTorchBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	I	a	AABB_STANDING_OFFSET
	f	Lexv;	b	AABB
c	dfp	net/minecraft/world/level/block/IBeaconBeam
	m	()Lcti;	b	getColor
c	dfq	net/minecraft/world/level/block/BlockBeacon
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	()Lcti;	b	getColor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dfr	net/minecraft/world/level/block/BlockBed
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)V	a	bounceUp
		p	1		entity
	m	(Lbsx;Ldcg;Ljd;Lji;F)Ljava/util/Optional;	a	findStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		spawnAngle
	m	(Lbsx;Ldcg;Ljd;Lji;Lji;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
		p	0		type
		p	1		world
		p	2		pos
		p	3		bedDirection
		p	4		respawnDirection
	m	(Lbsx;Ldcg;Ljd;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
		p	0		type
		p	1		world
		p	2		pos
		p	3		possibleOffsets
		p	4		ignoreInvalidPos
	m	(Lcmx;Lcmx$a;)V	a	lambda$useWithoutItem$1
		p	1		reason
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Lbsr;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Ldcc;Ljd;)Lji;	a	getBedOrientation
		p	0		world
		p	1		pos
	m	(Ldcw;)Z	a	canSetSpawn
		p	0		world
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcw;Ljd;)Z	a	kickVillagerOutOfBed
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Ljd;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtp;Lji;)Lji;	a	getNeighbourDirection
		p	0		part
		p	1		direction
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lji;)[[I	a	bedAboveStandUpOffsets
		p	0		bedDirection
	m	(Lji;Lji;)[[I	a	bedStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	()Lcti;	b	getColor
	m	(Ldcc;Ljd;)Z	b	isBunkBed
		p	0		world
		p	1		pos
	m	(Lji;Lji;)[[I	b	bedSurroundStandUpOffsets
		p	0		bedDirection
		p	1		respawnDirection
	m	(Ldtc;)Lji;	g	getConnectedDirection
		p	0		state
	m	(Ldtc;)Ldif$a;	h	getBlockType
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	PART
	f	Ldtt;	c	OCCUPIED
	f	I	d	HEIGHT
	f	Lexv;	e	BASE
	f	Lexv;	f	LEG_NORTH_WEST
	f	Lexv;	g	LEG_SOUTH_WEST
	f	Lexv;	h	LEG_NORTH_EAST
	f	Lexv;	i	LEG_SOUTH_EAST
	f	Lexv;	j	NORTH_SHAPE
	f	Lexv;	k	SOUTH_SHAPE
	f	Lexv;	l	WEST_SHAPE
	f	Lexv;	m	EAST_SHAPE
	f	I	n	LEG_WIDTH
	f	Lcti;	o	color
c	dfr$1	net/minecraft/world/level/block/BlockBed$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dfs	net/minecraft/world/level/block/BlockBeehive
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;DDDDD)V	a	spawnFluidParticle
		p	1		world
		p	2		minX
		p	4		maxX
		p	6		minZ
		p	8		maxZ
		p	10		height
	m	(Ldcw;Lcmx;Ljd;Ldtc;Ldqh;Lcuq;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ldtc;Ljd;)V	a	resetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
	m	(Ldcw;Ldtc;Ljd;Lcmx;Ldqe$b;)V	a	releaseBeesAndResetHoneyLevel
		p	1		world
		p	2		state
		p	3		pos
		p	4		player
		p	5		beeState
	m	(Ldcw;Ljd;)V	a	dropHoneycomb
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;)V	a	trySpawnDripParticles
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcw;Ljd;Lexv;D)V	a	spawnParticle
		p	1		world
		p	2		pos
		p	3		shape
		p	4		height
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldcw;Ljd;)V	b	angerNearbyBees
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;)Z	c	hiveContainsBees
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Lduc;	c	HONEY_LEVEL
	f	I	d	MAX_HONEY_LEVELS
	f	I	e	SHEARED_HONEYCOMB_COUNT
c	dft	net/minecraft/world/level/block/BlockBeetroot
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lduc;	b	getAgeProperty
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Ldcv;	d	getBaseSeedId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	[Lexv;	g	SHAPE_BY_AGE
c	dfu	net/minecraft/world/level/block/BlockBell
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcw;Ljd;Lji;)Z	a	attemptToRing
		p	1		entity
		p	2		world
		p	3		pos
		p	4		direction
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ldtc;Lewy;Lcmx;Z)Z	a	onHit
		p	1		world
		p	2		state
		p	3		hitResult
		p	4		player
		p	5		checkHitPos
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;Lji;)Z	a	attemptToRing
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;D)Z	a	isProperHit
		p	1		state
		p	2		side
		p	3		y
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Lexv;	m	getVoxelShape
		p	1		state
	m	(Ldtc;)Lji;	n	getConnectedDirection
		p	0		state
	f	Lexv;	F	TO_SOUTH
	f	Lexv;	G	CEILING_SHAPE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldua;	c	ATTACHMENT
	f	Ldtt;	d	POWERED
	f	I	e	EVENT_BELL_RING
	f	Lexv;	f	NORTH_SOUTH_FLOOR_SHAPE
	f	Lexv;	g	EAST_WEST_FLOOR_SHAPE
	f	Lexv;	h	BELL_TOP_SHAPE
	f	Lexv;	i	BELL_BOTTOM_SHAPE
	f	Lexv;	j	BELL_SHAPE
	f	Lexv;	k	NORTH_SOUTH_BETWEEN
	f	Lexv;	l	EAST_WEST_BETWEEN
	f	Lexv;	m	TO_WEST
	f	Lexv;	n	TO_EAST
	f	Lexv;	o	TO_NORTH
c	dfu$1	net/minecraft/world/level/block/BlockBell$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
c	dfv	net/minecraft/world/level/block/BigDripleafBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;Lavo;)V	a	playTiltSound
		p	0		world
		p	1		pos
		p	2		soundEvent
	m	(Ldcx;Layw;Ljd;Lji;)V	a	placeWithRandomHeight
		p	0		world
		p	1		random
		p	2		pos
		p	3		direction
	m	(Ldcx;Ljd;Lepe;Lji;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Ldcy;Ljd;Ldtc;)Z	a	canPlaceAt
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldun;)V	a	setTilt
		p	0		state
		p	1		world
		p	2		pos
		p	3		tilt
	m	(Ldtc;Ldcw;Ljd;Ldun;Lavo;)V	a	setTiltAndScheduleTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		tilt
		p	5		sound
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
		p	0		delays
	m	(Ljd;Lbsr;)Z	a	canEntityTilt
		p	0		pos
		p	1		entity
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	resetTilt
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;)Lexv;	m	calculateShape
		p	0		state
	m	(Ldtc;)Z	n	canReplace
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	WATERLOGGED
	f	Ldua;	c	TILT
	f	I	d	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	f	MAX_GEN_HEIGHT
	f	I	g	STEM_WIDTH
	f	I	h	ENTITY_DETECTION_MIN_Y
	f	I	i	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	j	LEAF_SHAPES
	f	Lexv;	k	STEM_SLICER
	f	Ljava/util/Map;	l	STEM_SHAPES
	f	Ljava/util/Map;	m	shapesCache
c	dfw	net/minecraft/world/level/block/BigDripleafStemBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcx;Ljd;Lepe;Lji;)Z	a	place
		p	0		world
		p	1		pos
		p	2		fluidState
		p	3		direction
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	NORTH_SHAPE
	f	Lexv;	c	SOUTH_SHAPE
	f	Lexv;	d	EAST_SHAPE
	f	Lexv;	e	WEST_SHAPE
	f	Ldtt;	f	WATERLOGGED
	f	I	g	STEM_WIDTH
c	dfw$1	net/minecraft/world/level/block/BigDripleafStemBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dfx	net/minecraft/world/level/block/BlockBlastFurnace
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Lcmx;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dfy	net/minecraft/world/level/block/Block
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(DDDDDD)Lexv;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(I)Ldtc;	a	stateById
		p	0		stateId
	m	(Laqu;Ljd;I)V	a	popExperience
		p	1		world
		p	2		pos
		p	3		size
	m	(Laqu;Ljd;Lcuq;Lbpw;)V	a	tryDropExperience
		p	1		world
		p	2		pos
		p	3		tool
		p	4		experience
	m	(Lcul;)Ldfy;	a	byItem
		p	0		item
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		options
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Lbsr;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Ldco;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Ldcw;DDDLcuq;)Lcjh;	a	lambda$popResource$4
	m	(Ldcw;DDDLcuq;DDD)Lcjh;	a	lambda$popResourceFromFace$5
	m	(Ldcw;Lcmx;Ljd;Ldtc;)V	a	spawnDestroyParticles
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
	m	(Ldcw;Lcmx;Ljd;Ldtc;Ldqh;Lcuq;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcw;Ljava/util/function/Supplier;Lcuq;)V	a	popResource
		p	0		world
		p	1		itemEntitySupplier
		p	2		stack
	m	(Ldcw;Ljd;Lcuq;)V	a	popResource
		p	0		world
		p	1		pos
		p	2		stack
	m	(Ldcw;Ljd;Ldco;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcw;Ljd;Lji;Lcuq;)V	a	popResourceFromFace
		p	0		world
		p	1		pos
		p	2		direction
		p	3		stack
	m	(Ldcx;Ljd;Lcuq;)V	a	lambda$dropResources$2
		p	2		stack
	m	(Ldcx;Ljd;Ldtc;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;Lji;)Z	a	canSupportCenter
		p	0		world
		p	1		pos
		p	2		side
	m	(Ldtc;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldtc;Laqu;Ljd;Ldqh;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldtc;Laqu;Ljd;Ldqh;Lbsr;Lcuq;)Ljava/util/List;	a	getDrops
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		stack
	m	(Ldtc;Ldcc;Ljd;Lji;Ljd;)Z	a	shouldRenderFace
		p	0		state
		p	1		world
		p	2		pos
		p	3		side
		p	4		otherPos
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lddw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldtc;Ldcw;Ljd;Ldqh;Lbsr;Lcuq;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		entity
		p	5		tool
	m	(Ldtc;Ldcx;Ljd;Ldqh;)V	a	dropResources
		p	0		state
		p	1		world
		p	2		pos
		p	3		blockEntity
	m	(Ldtc;Ldtc;Ldcx;Ljd;)Ldtc;	a	pushEntitiesUp
		p	0		from
		p	1		to
		p	2		world
		p	3		pos
	m	(Ldtc;Ldtc;Ldcx;Ljd;I)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
	m	(Ldtc;Ldtc;Ldcx;Ljd;II)V	a	updateOrDestroy
		p	0		state
		p	1		newState
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldtc;Ldtc;Lduf;)Ldtc;	a	copyProperty
		p	0		source
		p	1		target
		p	2		property
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lexv;)Z	a	isShapeFullBlock
		p	0		shape
	m	(Lexv;Lji;)Z	a	isFaceFull
		p	0		shape
		p	1		side
	m	(Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap;	a	getShapeForEachState
		p	1		stateToShape
	m	(Ldcw;Ljd;Lcuq;)V	b	lambda$dropResources$3
		p	2		stack
	m	(Ldtc;Ldcx;Ljd;)Ldtc;	b	updateFromNeighbourShapes
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;)Z	c	canSupportRigidBlock
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Lcuq;)V	c	lambda$dropResources$1
		p	2		stack
	m	(Ldtc;Ldcw;Ljd;)V	c	dropResources
		p	0		state
		p	1		world
		p	2		pos
	m	()F	e	getExplosionResistance
	m	()Lxn;	f	getName
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()F	h	getFriction
	m	(Ldtc;)I	i	getId
		p	0		state
	m	()F	j	getSpeedFactor
	m	(Ldtc;)Z	j	isExceptionForConnection
		p	0		state
	m	()F	k	getJumpFactor
	m	(Ldtc;)V	k	registerDefaultState
		p	1		state
	m	()Ldtd;	l	getStateDefinition
	m	(Ldtc;)Ldtc;	l	withPropertiesOf
		p	1		state
	m	()Ldtc;	o	defaultBlockState
	m	()Z	p	hasDynamicShape
	m	()Ldfy;	q	asBlock
	m	()Lcul;	r	asItem
	m	()Ljm$c;	s	builtInRegistryHolder
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	y	lambda$static$0
	f	I	A	UPDATE_ALL_IMMEDIATE
	f	F	B	INDESTRUCTIBLE
	f	F	C	INSTANT
	f	I	D	UPDATE_LIMIT
	f	Ldtd;	E	stateDefinition
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljm$c;	b	builtInRegistryHolder
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	Ldtc;	d	defaultBlockState
	f	Ljava/lang/String;	e	descriptionId
	f	Lcul;	f	item
	f	I	g	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	h	OCCLUSION_CACHE
	f	Lcom/mojang/serialization/MapCodec;	p	CODEC
	f	Ljs;	q	BLOCK_STATE_REGISTRY
	f	I	r	UPDATE_NEIGHBORS
	f	I	s	UPDATE_CLIENTS
	f	I	t	UPDATE_INVISIBLE
	f	I	u	UPDATE_IMMEDIATE
	f	I	v	UPDATE_KNOWN_SHAPE
	f	I	w	UPDATE_SUPPRESS_DROPS
	f	I	x	UPDATE_MOVE_BY_PISTON
	f	I	y	UPDATE_NONE
	f	I	z	UPDATE_ALL
c	dfy$1	net/minecraft/world/level/block/Block$1
	m	(Lexv;)Ljava/lang/Boolean;	a	load
c	dfy$2	net/minecraft/world/level/block/Block$2
c	dfy$a	net/minecraft/world/level/block/Block$a
	m	(Ldtc;Ldtc;Lji;)V	<init>	<init>
		p	1		self
		p	2		other
		p	3		facing
	f	Ldtc;	a	first
	f	Ldtc;	b	second
	f	Lji;	c	direction
c	dfz	net/minecraft/world/level/block/BlockTypes
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dga	net/minecraft/world/level/block/Blocks
	m	(Ldtc;)I	A	lambda$static$25
		p	0		state
	m	(Ldtc;)I	B	lambda$static$24
		p	0		state
	m	(Ldtc;)I	C	lambda$static$23
		p	0		state
	m	(Ldtc;)I	D	lambda$static$22
		p	0		state
	m	(Ldtc;)I	E	lambda$static$21
		p	0		state
	m	(Ldtc;)I	F	lambda$static$20
		p	0		state
	m	(Ldtc;)I	G	lambda$static$19
		p	0		state
	m	(Ldtc;)I	H	lambda$static$18
		p	0		state
	m	(Ldtc;)I	I	lambda$static$17
		p	0		state
	m	(Ldtc;)I	J	lambda$static$13
		p	0		state
	m	(Ldtc;)I	K	lambda$static$12
		p	0		state
	m	(Ldtc;)I	L	lambda$static$11
		p	0		state
	m	(Ldtc;)I	M	lambda$static$10
		p	0		state
	m	(Ldtc;)I	N	lambda$static$9
		p	0		state
	m	(Ldtc;)I	O	lambda$static$8
		p	0		state
	m	()V	a	rebuildCache
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
		p	0		litLevel
	m	(ILdtc;)I	a	lambda$litBlockEmission$1
		p	1		state
	m	(Lakq;Ldfy;)Ldfy;	a	register
		p	0		key
		p	1		block
	m	(Lcti;)Ldfy;	a	bed
		p	0		color
	m	(Lcti;Ldtc;)Lepi;	a	lambda$bed$3
		p	1		state
	m	(Lcti;Lepi;)Ldfy;	a	shulkerBox
		p	0		color
		p	1		mapColor
	m	(Ldfy;)Ldfy;	a	flowerPot
		p	0		flower
	m	(Ldnm;)Ldfy;	a	leaves
		p	0		soundGroup
	m	(Ldtc;)I	a	lambda$static$54
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	a	always
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;	a	never
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldtr;)Ldfy;	a	woodenButton
		p	0		blockSetType
	m	(Lepi;)Ljava/util/function/Function;	a	waterloggedMapColor
		p	0		mapColor
	m	(Lepi;Ldtc;)Lepi;	a	lambda$netherStem$6
		p	1		state
	m	(Lepi;Lepi;)Ldfy;	a	log
		p	0		topMapColor
		p	1		sideMapColor
	m	(Lepi;Lepi;Ldnm;)Ldfy;	a	log
		p	0		topMapColor
		p	1		sideMapColor
		p	2		soundGroup
	m	(Lepi;Lepi;Ldtc;)Lepi;	a	lambda$log$5
		p	2		state
	m	(Ljava/lang/String;Ldfy;)Ldfy;	a	register
		p	0		id
		p	1		block
	m	(Z)Ldfy;	a	pistonBase
		p	0		sticky
	m	()Ldfy;	b	stoneButton
	m	(Lcti;)Ldfy;	b	stainedGlass
		p	0		color
	m	(Ldfy;)Ldfy;	b	legacyStair
		p	0		block
	m	(Ldtc;)I	b	lambda$static$53
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	b	never
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;	b	always
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Lepi;)Ldfy;	b	netherStem
		p	0		mapColor
	m	(Lepi;Ldtc;)Lepi;	b	lambda$waterloggedMapColor$2
		p	1		state
	m	(Lepi;Lepi;Ldtc;)Lepi;	b	lambda$log$4
		p	2		state
	m	()Ldqj;	c	lambda$static$14
	m	(Ldfy;)Ldfy;	c	stair
		p	0		base
	m	(Ldtc;)I	c	lambda$static$52
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	c	lambda$static$48
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Ljava/lang/Boolean;	c	ocelotOrParrot
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Lepi;)Ldfy;	c	candle
		p	0		color
	m	(Ldtc;)I	d	lambda$static$51
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	d	lambda$static$15
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Z	d	lambda$static$35
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Ldtc;)I	e	lambda$static$50
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	e	lambda$pistonBase$7
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Z	e	lambda$static$33
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Ldtc;)I	f	lambda$static$49
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	f	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Z	f	lambda$static$16
		p	0		state
		p	1		world
		p	2		pos
		p	3		entityType
	m	(Ldtc;)I	g	lambda$static$47
		p	0		state
	m	(Ldtc;)I	h	lambda$static$46
		p	0		state
	m	(Ldtc;)I	i	lambda$static$45
		p	0		state
	m	(Ldtc;)I	j	lambda$static$44
		p	0		state
	m	(Ldtc;)I	k	lambda$static$43
		p	0		state
	m	(Ldtc;)I	l	lambda$static$42
		p	0		state
	m	(Ldtc;)I	m	lambda$static$41
		p	0		state
	m	(Ldtc;)I	n	lambda$static$40
		p	0		state
	m	(Ldtc;)I	o	lambda$static$39
		p	0		state
	m	(Ldtc;)I	p	lambda$static$38
		p	0		state
	m	(Ldtc;)I	q	lambda$static$37
		p	0		state
	m	(Ldtc;)I	r	lambda$static$36
		p	0		state
	m	(Ldtc;)I	s	lambda$static$34
		p	0		state
	m	(Ldtc;)I	t	lambda$static$32
		p	0		state
	m	(Ldtc;)I	u	lambda$static$31
		p	0		state
	m	(Ldtc;)I	v	lambda$static$30
		p	0		state
	m	(Ldtc;)I	w	lambda$static$29
		p	0		state
	m	(Ldtc;)I	x	lambda$static$28
		p	0		state
	m	(Ldtc;)I	y	lambda$static$27
		p	0		state
	m	(Ldtc;)I	z	lambda$static$26
		p	0		state
	f	Ldfy;	A	JUNGLE_SAPLING
	f	Ldfy;	B	ACACIA_SAPLING
	f	Ldfy;	C	CHERRY_SAPLING
	f	Ldfy;	D	DARK_OAK_SAPLING
	f	Ldfy;	E	MANGROVE_PROPAGULE
	f	Ldfy;	F	BEDROCK
	f	Ldfy;	G	WATER
	f	Ldfy;	H	LAVA
	f	Ldfy;	I	SAND
	f	Ldfy;	J	SUSPICIOUS_SAND
	f	Ldfy;	K	RED_SAND
	f	Ldfy;	L	GRAVEL
	f	Ldfy;	M	SUSPICIOUS_GRAVEL
	f	Ldfy;	N	GOLD_ORE
	f	Ldfy;	O	DEEPSLATE_GOLD_ORE
	f	Ldfy;	P	IRON_ORE
	f	Ldfy;	Q	DEEPSLATE_IRON_ORE
	f	Ldfy;	R	COAL_ORE
	f	Ldfy;	S	DEEPSLATE_COAL_ORE
	f	Ldfy;	T	NETHER_GOLD_ORE
	f	Ldfy;	U	OAK_LOG
	f	Ldfy;	V	SPRUCE_LOG
	f	Ldfy;	W	BIRCH_LOG
	f	Ldfy;	X	JUNGLE_LOG
	f	Ldfy;	Y	ACACIA_LOG
	f	Ldfy;	Z	CHERRY_LOG
	f	Ldfy;	aA	STRIPPED_ACACIA_WOOD
	f	Ldfy;	aB	STRIPPED_CHERRY_WOOD
	f	Ldfy;	aC	STRIPPED_DARK_OAK_WOOD
	f	Ldfy;	aD	STRIPPED_MANGROVE_WOOD
	f	Ldfy;	aE	OAK_LEAVES
	f	Ldfy;	aF	SPRUCE_LEAVES
	f	Ldfy;	aG	BIRCH_LEAVES
	f	Ldfy;	aH	JUNGLE_LEAVES
	f	Ldfy;	aI	ACACIA_LEAVES
	f	Ldfy;	aJ	CHERRY_LEAVES
	f	Ldfy;	aK	DARK_OAK_LEAVES
	f	Ldfy;	aL	MANGROVE_LEAVES
	f	Ldfy;	a	AIR
	f	Ldfy;	aM	AZALEA_LEAVES
	f	Ldfy;	aN	FLOWERING_AZALEA_LEAVES
	f	Ldfy;	aO	SPONGE
	f	Ldfy;	aP	WET_SPONGE
	f	Ldfy;	aQ	GLASS
	f	Ldfy;	aR	LAPIS_ORE
	f	Ldfy;	aS	DEEPSLATE_LAPIS_ORE
	f	Ldfy;	aT	LAPIS_BLOCK
	f	Ldfy;	aU	DISPENSER
	f	Ldfy;	aV	SANDSTONE
	f	Ldfy;	aW	CHISELED_SANDSTONE
	f	Ldfy;	aX	CUT_SANDSTONE
	f	Ldfy;	aY	NOTE_BLOCK
	f	Ldfy;	aZ	WHITE_BED
	f	Ldfy;	aa	DARK_OAK_LOG
	f	Ldfy;	ab	MANGROVE_LOG
	f	Ldfy;	ac	MANGROVE_ROOTS
	f	Ldfy;	ad	MUDDY_MANGROVE_ROOTS
	f	Ldfy;	ae	BAMBOO_BLOCK
	f	Ldfy;	af	STRIPPED_SPRUCE_LOG
	f	Ldfy;	ag	STRIPPED_BIRCH_LOG
	f	Ldfy;	ah	STRIPPED_JUNGLE_LOG
	f	Ldfy;	ai	STRIPPED_ACACIA_LOG
	f	Ldfy;	aj	STRIPPED_CHERRY_LOG
	f	Ldfy;	ak	STRIPPED_DARK_OAK_LOG
	f	Ldfy;	al	STRIPPED_OAK_LOG
	f	Ldfy;	am	STRIPPED_MANGROVE_LOG
	f	Ldfy;	an	STRIPPED_BAMBOO_BLOCK
	f	Ldfy;	ao	OAK_WOOD
	f	Ldfy;	ap	SPRUCE_WOOD
	f	Ldfy;	aq	BIRCH_WOOD
	f	Ldfy;	ar	JUNGLE_WOOD
	f	Ldfy;	as	ACACIA_WOOD
	f	Ldfy;	at	CHERRY_WOOD
	f	Ldfy;	au	DARK_OAK_WOOD
	f	Ldfy;	av	MANGROVE_WOOD
	f	Ldfy;	aw	STRIPPED_OAK_WOOD
	f	Ldfy;	ax	STRIPPED_SPRUCE_WOOD
	f	Ldfy;	ay	STRIPPED_BIRCH_WOOD
	f	Ldfy;	az	STRIPPED_JUNGLE_WOOD
	f	Ldfy;	bA	WHITE_WOOL
	f	Ldfy;	bB	ORANGE_WOOL
	f	Ldfy;	bC	MAGENTA_WOOL
	f	Ldfy;	bD	LIGHT_BLUE_WOOL
	f	Ldfy;	bE	YELLOW_WOOL
	f	Ldfy;	bF	LIME_WOOL
	f	Ldfy;	bG	PINK_WOOL
	f	Ldfy;	bH	GRAY_WOOL
	f	Ldfy;	bI	LIGHT_GRAY_WOOL
	f	Ldfy;	bJ	CYAN_WOOL
	f	Ldfy;	bK	PURPLE_WOOL
	f	Ldfy;	bL	BLUE_WOOL
	f	Ldfy;	b	STONE
	f	Ldfy;	bM	BROWN_WOOL
	f	Ldfy;	bN	GREEN_WOOL
	f	Ldfy;	bO	RED_WOOL
	f	Ldfy;	bP	BLACK_WOOL
	f	Ldfy;	bQ	MOVING_PISTON
	f	Ldfy;	bR	DANDELION
	f	Ldfy;	bS	TORCHFLOWER
	f	Ldfy;	bT	POPPY
	f	Ldfy;	bU	BLUE_ORCHID
	f	Ldfy;	bV	ALLIUM
	f	Ldfy;	bW	AZURE_BLUET
	f	Ldfy;	bX	RED_TULIP
	f	Ldfy;	bY	ORANGE_TULIP
	f	Ldfy;	bZ	WHITE_TULIP
	f	Ldfy;	ba	ORANGE_BED
	f	Ldfy;	bb	MAGENTA_BED
	f	Ldfy;	bc	LIGHT_BLUE_BED
	f	Ldfy;	bd	YELLOW_BED
	f	Ldfy;	be	LIME_BED
	f	Ldfy;	bf	PINK_BED
	f	Ldfy;	bg	GRAY_BED
	f	Ldfy;	bh	LIGHT_GRAY_BED
	f	Ldfy;	bi	CYAN_BED
	f	Ldfy;	bj	PURPLE_BED
	f	Ldfy;	bk	BLUE_BED
	f	Ldfy;	bl	BROWN_BED
	f	Ldfy;	bm	GREEN_BED
	f	Ldfy;	bn	RED_BED
	f	Ldfy;	bo	BLACK_BED
	f	Ldfy;	bp	POWERED_RAIL
	f	Ldfy;	bq	DETECTOR_RAIL
	f	Ldfy;	br	STICKY_PISTON
	f	Ldfy;	bs	COBWEB
	f	Ldfy;	bt	SHORT_GRASS
	f	Ldfy;	bu	FERN
	f	Ldfy;	bv	DEAD_BUSH
	f	Ldfy;	bw	SEAGRASS
	f	Ldfy;	bx	TALL_SEAGRASS
	f	Ldfy;	by	PISTON
	f	Ldfy;	bz	PISTON_HEAD
	f	Ldfy;	cA	CRAFTING_TABLE
	f	Ldfy;	cB	WHEAT
	f	Ldfy;	cC	FARMLAND
	f	Ldfy;	cD	FURNACE
	f	Ldfy;	cE	OAK_SIGN
	f	Ldfy;	cF	SPRUCE_SIGN
	f	Ldfy;	cG	BIRCH_SIGN
	f	Ldfy;	cH	ACACIA_SIGN
	f	Ldfy;	cI	CHERRY_SIGN
	f	Ldfy;	cJ	JUNGLE_SIGN
	f	Ldfy;	cK	DARK_OAK_SIGN
	f	Ldfy;	cL	MANGROVE_SIGN
	f	Ldfy;	c	GRANITE
	f	Ldfy;	cM	BAMBOO_SIGN
	f	Ldfy;	cN	OAK_DOOR
	f	Ldfy;	cO	LADDER
	f	Ldfy;	cP	RAIL
	f	Ldfy;	cQ	COBBLESTONE_STAIRS
	f	Ldfy;	cR	OAK_WALL_SIGN
	f	Ldfy;	cS	SPRUCE_WALL_SIGN
	f	Ldfy;	cT	BIRCH_WALL_SIGN
	f	Ldfy;	cU	ACACIA_WALL_SIGN
	f	Ldfy;	cV	CHERRY_WALL_SIGN
	f	Ldfy;	cW	JUNGLE_WALL_SIGN
	f	Ldfy;	cX	DARK_OAK_WALL_SIGN
	f	Ldfy;	cY	MANGROVE_WALL_SIGN
	f	Ldfy;	cZ	BAMBOO_WALL_SIGN
	f	Ldfy;	ca	PINK_TULIP
	f	Ldfy;	cb	OXEYE_DAISY
	f	Ldfy;	cc	CORNFLOWER
	f	Ldfy;	cd	WITHER_ROSE
	f	Ldfy;	ce	LILY_OF_THE_VALLEY
	f	Ldfy;	cf	BROWN_MUSHROOM
	f	Ldfy;	cg	RED_MUSHROOM
	f	Ldfy;	ch	GOLD_BLOCK
	f	Ldfy;	ci	IRON_BLOCK
	f	Ldfy;	cj	BRICKS
	f	Ldfy;	ck	TNT
	f	Ldfy;	cl	BOOKSHELF
	f	Ldfy;	cm	CHISELED_BOOKSHELF
	f	Ldfy;	cn	MOSSY_COBBLESTONE
	f	Ldfy;	co	OBSIDIAN
	f	Ldfy;	cp	TORCH
	f	Ldfy;	cq	WALL_TORCH
	f	Ldfy;	cr	FIRE
	f	Ldfy;	cs	SOUL_FIRE
	f	Ldfy;	ct	SPAWNER
	f	Ldfy;	cu	OAK_STAIRS
	f	Ldfy;	cv	CHEST
	f	Ldfy;	cw	REDSTONE_WIRE
	f	Ldfy;	cx	DIAMOND_ORE
	f	Ldfy;	cy	DEEPSLATE_DIAMOND_ORE
	f	Ldfy;	cz	DIAMOND_BLOCK
	f	Ldfy;	dA	SPRUCE_PRESSURE_PLATE
	f	Ldfy;	dB	BIRCH_PRESSURE_PLATE
	f	Ldfy;	dC	JUNGLE_PRESSURE_PLATE
	f	Ldfy;	dD	ACACIA_PRESSURE_PLATE
	f	Ldfy;	dE	CHERRY_PRESSURE_PLATE
	f	Ldfy;	dF	DARK_OAK_PRESSURE_PLATE
	f	Ldfy;	dG	MANGROVE_PRESSURE_PLATE
	f	Ldfy;	dH	BAMBOO_PRESSURE_PLATE
	f	Ldfy;	dI	REDSTONE_ORE
	f	Ldfy;	dJ	DEEPSLATE_REDSTONE_ORE
	f	Ldfy;	dK	REDSTONE_TORCH
	f	Ldfy;	dL	REDSTONE_WALL_TORCH
	f	Ldfy;	d	POLISHED_GRANITE
	f	Ldfy;	dM	STONE_BUTTON
	f	Ldfy;	dN	SNOW
	f	Ldfy;	dO	ICE
	f	Ldfy;	dP	SNOW_BLOCK
	f	Ldfy;	dQ	CACTUS
	f	Ldfy;	dR	CLAY
	f	Ldfy;	dS	SUGAR_CANE
	f	Ldfy;	dT	JUKEBOX
	f	Ldfy;	dU	OAK_FENCE
	f	Ldfy;	dV	NETHERRACK
	f	Ldfy;	dW	SOUL_SAND
	f	Ldfy;	dX	SOUL_SOIL
	f	Ldfy;	dY	BASALT
	f	Ldfy;	dZ	POLISHED_BASALT
	f	Ldfy;	da	OAK_HANGING_SIGN
	f	Ldfy;	db	SPRUCE_HANGING_SIGN
	f	Ldfy;	dc	BIRCH_HANGING_SIGN
	f	Ldfy;	dd	ACACIA_HANGING_SIGN
	f	Ldfy;	de	CHERRY_HANGING_SIGN
	f	Ldfy;	df	JUNGLE_HANGING_SIGN
	f	Ldfy;	dg	DARK_OAK_HANGING_SIGN
	f	Ldfy;	dh	CRIMSON_HANGING_SIGN
	f	Ldfy;	di	WARPED_HANGING_SIGN
	f	Ldfy;	dj	MANGROVE_HANGING_SIGN
	f	Ldfy;	dk	BAMBOO_HANGING_SIGN
	f	Ldfy;	dl	OAK_WALL_HANGING_SIGN
	f	Ldfy;	dm	SPRUCE_WALL_HANGING_SIGN
	f	Ldfy;	dn	BIRCH_WALL_HANGING_SIGN
	f	Ldfy;	do	ACACIA_WALL_HANGING_SIGN
	f	Ldfy;	dp	CHERRY_WALL_HANGING_SIGN
	f	Ldfy;	dq	JUNGLE_WALL_HANGING_SIGN
	f	Ldfy;	dr	DARK_OAK_WALL_HANGING_SIGN
	f	Ldfy;	ds	MANGROVE_WALL_HANGING_SIGN
	f	Ldfy;	dt	CRIMSON_WALL_HANGING_SIGN
	f	Ldfy;	du	WARPED_WALL_HANGING_SIGN
	f	Ldfy;	dv	BAMBOO_WALL_HANGING_SIGN
	f	Ldfy;	dw	LEVER
	f	Ldfy;	dx	STONE_PRESSURE_PLATE
	f	Ldfy;	dy	IRON_DOOR
	f	Ldfy;	dz	OAK_PRESSURE_PLATE
	f	Ldfy;	eA	BIRCH_TRAPDOOR
	f	Ldfy;	eB	JUNGLE_TRAPDOOR
	f	Ldfy;	eC	ACACIA_TRAPDOOR
	f	Ldfy;	eD	CHERRY_TRAPDOOR
	f	Ldfy;	eE	DARK_OAK_TRAPDOOR
	f	Ldfy;	eF	MANGROVE_TRAPDOOR
	f	Ldfy;	eG	BAMBOO_TRAPDOOR
	f	Ldfy;	eH	STONE_BRICKS
	f	Ldfy;	eI	MOSSY_STONE_BRICKS
	f	Ldfy;	eJ	CRACKED_STONE_BRICKS
	f	Ldfy;	eK	CHISELED_STONE_BRICKS
	f	Ldfy;	eL	PACKED_MUD
	f	Ldfy;	e	DIORITE
	f	Ldfy;	eM	MUD_BRICKS
	f	Ldfy;	eN	INFESTED_STONE
	f	Ldfy;	eO	INFESTED_COBBLESTONE
	f	Ldfy;	eP	INFESTED_STONE_BRICKS
	f	Ldfy;	eQ	INFESTED_MOSSY_STONE_BRICKS
	f	Ldfy;	eR	INFESTED_CRACKED_STONE_BRICKS
	f	Ldfy;	eS	INFESTED_CHISELED_STONE_BRICKS
	f	Ldfy;	eT	BROWN_MUSHROOM_BLOCK
	f	Ldfy;	eU	RED_MUSHROOM_BLOCK
	f	Ldfy;	eV	MUSHROOM_STEM
	f	Ldfy;	eW	IRON_BARS
	f	Ldfy;	eX	CHAIN
	f	Ldfy;	eY	GLASS_PANE
	f	Ldfy;	eZ	PUMPKIN
	f	Ldfy;	ea	SOUL_TORCH
	f	Ldfy;	eb	SOUL_WALL_TORCH
	f	Ldfy;	ec	GLOWSTONE
	f	Ldfy;	ed	NETHER_PORTAL
	f	Ldfy;	ee	CARVED_PUMPKIN
	f	Ldfy;	ef	JACK_O_LANTERN
	f	Ldfy;	eg	CAKE
	f	Ldfy;	eh	REPEATER
	f	Ldfy;	ei	WHITE_STAINED_GLASS
	f	Ldfy;	ej	ORANGE_STAINED_GLASS
	f	Ldfy;	ek	MAGENTA_STAINED_GLASS
	f	Ldfy;	el	LIGHT_BLUE_STAINED_GLASS
	f	Ldfy;	em	YELLOW_STAINED_GLASS
	f	Ldfy;	en	LIME_STAINED_GLASS
	f	Ldfy;	eo	PINK_STAINED_GLASS
	f	Ldfy;	ep	GRAY_STAINED_GLASS
	f	Ldfy;	eq	LIGHT_GRAY_STAINED_GLASS
	f	Ldfy;	er	CYAN_STAINED_GLASS
	f	Ldfy;	es	PURPLE_STAINED_GLASS
	f	Ldfy;	et	BLUE_STAINED_GLASS
	f	Ldfy;	eu	BROWN_STAINED_GLASS
	f	Ldfy;	ev	GREEN_STAINED_GLASS
	f	Ldfy;	ew	RED_STAINED_GLASS
	f	Ldfy;	ex	BLACK_STAINED_GLASS
	f	Ldfy;	ey	OAK_TRAPDOOR
	f	Ldfy;	ez	SPRUCE_TRAPDOOR
	f	Ldfy;	fA	DRAGON_EGG
	f	Ldfy;	fB	REDSTONE_LAMP
	f	Ldfy;	fC	COCOA
	f	Ldfy;	fD	SANDSTONE_STAIRS
	f	Ldfy;	fE	EMERALD_ORE
	f	Ldfy;	fF	DEEPSLATE_EMERALD_ORE
	f	Ldfy;	fG	ENDER_CHEST
	f	Ldfy;	fH	TRIPWIRE_HOOK
	f	Ldfy;	fI	TRIPWIRE
	f	Ldfy;	fJ	EMERALD_BLOCK
	f	Ldfy;	fK	SPRUCE_STAIRS
	f	Ldfy;	fL	BIRCH_STAIRS
	f	Ldfy;	f	POLISHED_DIORITE
	f	Ldfy;	fM	JUNGLE_STAIRS
	f	Ldfy;	fN	COMMAND_BLOCK
	f	Ldfy;	fO	BEACON
	f	Ldfy;	fP	COBBLESTONE_WALL
	f	Ldfy;	fQ	MOSSY_COBBLESTONE_WALL
	f	Ldfy;	fR	FLOWER_POT
	f	Ldfy;	fS	POTTED_TORCHFLOWER
	f	Ldfy;	fT	POTTED_OAK_SAPLING
	f	Ldfy;	fU	POTTED_SPRUCE_SAPLING
	f	Ldfy;	fV	POTTED_BIRCH_SAPLING
	f	Ldfy;	fW	POTTED_JUNGLE_SAPLING
	f	Ldfy;	fX	POTTED_ACACIA_SAPLING
	f	Ldfy;	fY	POTTED_CHERRY_SAPLING
	f	Ldfy;	fZ	POTTED_DARK_OAK_SAPLING
	f	Ldfy;	fa	MELON
	f	Ldfy;	fb	ATTACHED_PUMPKIN_STEM
	f	Ldfy;	fc	ATTACHED_MELON_STEM
	f	Ldfy;	fd	PUMPKIN_STEM
	f	Ldfy;	fe	MELON_STEM
	f	Ldfy;	ff	VINE
	f	Ldfy;	fg	GLOW_LICHEN
	f	Ldfy;	fh	OAK_FENCE_GATE
	f	Ldfy;	fi	BRICK_STAIRS
	f	Ldfy;	fj	STONE_BRICK_STAIRS
	f	Ldfy;	fk	MUD_BRICK_STAIRS
	f	Ldfy;	fl	MYCELIUM
	f	Ldfy;	fm	LILY_PAD
	f	Ldfy;	fn	NETHER_BRICKS
	f	Ldfy;	fo	NETHER_BRICK_FENCE
	f	Ldfy;	fp	NETHER_BRICK_STAIRS
	f	Ldfy;	fq	NETHER_WART
	f	Ldfy;	fr	ENCHANTING_TABLE
	f	Ldfy;	fs	BREWING_STAND
	f	Ldfy;	ft	CAULDRON
	f	Ldfy;	fu	WATER_CAULDRON
	f	Ldfy;	fv	LAVA_CAULDRON
	f	Ldfy;	fw	POWDER_SNOW_CAULDRON
	f	Ldfy;	fx	END_PORTAL
	f	Ldfy;	fy	END_PORTAL_FRAME
	f	Ldfy;	fz	END_STONE
	f	Ldfy;	gA	CHERRY_BUTTON
	f	Ldfy;	gB	DARK_OAK_BUTTON
	f	Ldfy;	gC	MANGROVE_BUTTON
	f	Ldfy;	gD	BAMBOO_BUTTON
	f	Ldfy;	gE	SKELETON_SKULL
	f	Ldfy;	gF	SKELETON_WALL_SKULL
	f	Ldfy;	gG	WITHER_SKELETON_SKULL
	f	Ldfy;	gH	WITHER_SKELETON_WALL_SKULL
	f	Ldfy;	gI	ZOMBIE_HEAD
	f	Ldfy;	gJ	ZOMBIE_WALL_HEAD
	f	Ldfy;	gK	PLAYER_HEAD
	f	Ldfy;	gL	PLAYER_WALL_HEAD
	f	Ldfy;	g	ANDESITE
	f	Ldfy;	gM	CREEPER_HEAD
	f	Ldfy;	gN	CREEPER_WALL_HEAD
	f	Ldfy;	gO	DRAGON_HEAD
	f	Ldfy;	gP	DRAGON_WALL_HEAD
	f	Ldfy;	gQ	PIGLIN_HEAD
	f	Ldfy;	gR	PIGLIN_WALL_HEAD
	f	Ldfy;	gS	ANVIL
	f	Ldfy;	gT	CHIPPED_ANVIL
	f	Ldfy;	gU	DAMAGED_ANVIL
	f	Ldfy;	gV	TRAPPED_CHEST
	f	Ldfy;	gW	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Ldfy;	gX	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Ldfy;	gY	COMPARATOR
	f	Ldfy;	gZ	DAYLIGHT_DETECTOR
	f	Ldfy;	ga	POTTED_MANGROVE_PROPAGULE
	f	Ldfy;	gb	POTTED_FERN
	f	Ldfy;	gc	POTTED_DANDELION
	f	Ldfy;	gd	POTTED_POPPY
	f	Ldfy;	ge	POTTED_BLUE_ORCHID
	f	Ldfy;	gf	POTTED_ALLIUM
	f	Ldfy;	gg	POTTED_AZURE_BLUET
	f	Ldfy;	gh	POTTED_RED_TULIP
	f	Ldfy;	gi	POTTED_ORANGE_TULIP
	f	Ldfy;	gj	POTTED_WHITE_TULIP
	f	Ldfy;	gk	POTTED_PINK_TULIP
	f	Ldfy;	gl	POTTED_OXEYE_DAISY
	f	Ldfy;	gm	POTTED_CORNFLOWER
	f	Ldfy;	gn	POTTED_LILY_OF_THE_VALLEY
	f	Ldfy;	go	POTTED_WITHER_ROSE
	f	Ldfy;	gp	POTTED_RED_MUSHROOM
	f	Ldfy;	gq	POTTED_BROWN_MUSHROOM
	f	Ldfy;	gr	POTTED_DEAD_BUSH
	f	Ldfy;	gs	POTTED_CACTUS
	f	Ldfy;	gt	CARROTS
	f	Ldfy;	gu	POTATOES
	f	Ldfy;	gv	OAK_BUTTON
	f	Ldfy;	gw	SPRUCE_BUTTON
	f	Ldfy;	gx	BIRCH_BUTTON
	f	Ldfy;	gy	JUNGLE_BUTTON
	f	Ldfy;	gz	ACACIA_BUTTON
	f	Ldfy;	hA	ORANGE_STAINED_GLASS_PANE
	f	Ldfy;	hB	MAGENTA_STAINED_GLASS_PANE
	f	Ldfy;	hC	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Ldfy;	hD	YELLOW_STAINED_GLASS_PANE
	f	Ldfy;	hE	LIME_STAINED_GLASS_PANE
	f	Ldfy;	hF	PINK_STAINED_GLASS_PANE
	f	Ldfy;	hG	GRAY_STAINED_GLASS_PANE
	f	Ldfy;	hH	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Ldfy;	hI	CYAN_STAINED_GLASS_PANE
	f	Ldfy;	hJ	PURPLE_STAINED_GLASS_PANE
	f	Ldfy;	hK	BLUE_STAINED_GLASS_PANE
	f	Ldfy;	hL	BROWN_STAINED_GLASS_PANE
	f	Ldfy;	h	POLISHED_ANDESITE
	f	Ldfy;	hM	GREEN_STAINED_GLASS_PANE
	f	Ldfy;	hN	RED_STAINED_GLASS_PANE
	f	Ldfy;	hO	BLACK_STAINED_GLASS_PANE
	f	Ldfy;	hP	ACACIA_STAIRS
	f	Ldfy;	hQ	CHERRY_STAIRS
	f	Ldfy;	hR	DARK_OAK_STAIRS
	f	Ldfy;	hS	MANGROVE_STAIRS
	f	Ldfy;	hT	BAMBOO_STAIRS
	f	Ldfy;	hU	BAMBOO_MOSAIC_STAIRS
	f	Ldfy;	hV	SLIME_BLOCK
	f	Ldfy;	hW	BARRIER
	f	Ldfy;	hX	LIGHT
	f	Ldfy;	hY	IRON_TRAPDOOR
	f	Ldfy;	hZ	PRISMARINE
	f	Ldfy;	ha	REDSTONE_BLOCK
	f	Ldfy;	hb	NETHER_QUARTZ_ORE
	f	Ldfy;	hc	HOPPER
	f	Ldfy;	hd	QUARTZ_BLOCK
	f	Ldfy;	he	CHISELED_QUARTZ_BLOCK
	f	Ldfy;	hf	QUARTZ_PILLAR
	f	Ldfy;	hg	QUARTZ_STAIRS
	f	Ldfy;	hh	ACTIVATOR_RAIL
	f	Ldfy;	hi	DROPPER
	f	Ldfy;	hj	WHITE_TERRACOTTA
	f	Ldfy;	hk	ORANGE_TERRACOTTA
	f	Ldfy;	hl	MAGENTA_TERRACOTTA
	f	Ldfy;	hm	LIGHT_BLUE_TERRACOTTA
	f	Ldfy;	hn	YELLOW_TERRACOTTA
	f	Ldfy;	ho	LIME_TERRACOTTA
	f	Ldfy;	hp	PINK_TERRACOTTA
	f	Ldfy;	hq	GRAY_TERRACOTTA
	f	Ldfy;	hr	LIGHT_GRAY_TERRACOTTA
	f	Ldfy;	hs	CYAN_TERRACOTTA
	f	Ldfy;	ht	PURPLE_TERRACOTTA
	f	Ldfy;	hu	BLUE_TERRACOTTA
	f	Ldfy;	hv	BROWN_TERRACOTTA
	f	Ldfy;	hw	GREEN_TERRACOTTA
	f	Ldfy;	hx	RED_TERRACOTTA
	f	Ldfy;	hy	BLACK_TERRACOTTA
	f	Ldfy;	hz	WHITE_STAINED_GLASS_PANE
	f	Ldfy;	iA	TERRACOTTA
	f	Ldfy;	iB	COAL_BLOCK
	f	Ldfy;	iC	PACKED_ICE
	f	Ldfy;	iD	SUNFLOWER
	f	Ldfy;	iE	LILAC
	f	Ldfy;	iF	ROSE_BUSH
	f	Ldfy;	iG	PEONY
	f	Ldfy;	iH	TALL_GRASS
	f	Ldfy;	iI	LARGE_FERN
	f	Ldfy;	iJ	WHITE_BANNER
	f	Ldfy;	iK	ORANGE_BANNER
	f	Ldfy;	iL	MAGENTA_BANNER
	f	Ldfy;	i	GRASS_BLOCK
	f	Ldfy;	iM	LIGHT_BLUE_BANNER
	f	Ldfy;	iN	YELLOW_BANNER
	f	Ldfy;	iO	LIME_BANNER
	f	Ldfy;	iP	PINK_BANNER
	f	Ldfy;	iQ	GRAY_BANNER
	f	Ldfy;	iR	LIGHT_GRAY_BANNER
	f	Ldfy;	iS	CYAN_BANNER
	f	Ldfy;	iT	PURPLE_BANNER
	f	Ldfy;	iU	BLUE_BANNER
	f	Ldfy;	iV	BROWN_BANNER
	f	Ldfy;	iW	GREEN_BANNER
	f	Ldfy;	iX	RED_BANNER
	f	Ldfy;	iY	BLACK_BANNER
	f	Ldfy;	iZ	WHITE_WALL_BANNER
	f	Ldfy;	ia	PRISMARINE_BRICKS
	f	Ldfy;	ib	DARK_PRISMARINE
	f	Ldfy;	ic	PRISMARINE_STAIRS
	f	Ldfy;	id	PRISMARINE_BRICK_STAIRS
	f	Ldfy;	ie	DARK_PRISMARINE_STAIRS
	f	Ldfy;	if	PRISMARINE_SLAB
	f	Ldfy;	ig	PRISMARINE_BRICK_SLAB
	f	Ldfy;	ih	DARK_PRISMARINE_SLAB
	f	Ldfy;	ii	SEA_LANTERN
	f	Ldfy;	ij	HAY_BLOCK
	f	Ldfy;	ik	WHITE_CARPET
	f	Ldfy;	il	ORANGE_CARPET
	f	Ldfy;	im	MAGENTA_CARPET
	f	Ldfy;	in	LIGHT_BLUE_CARPET
	f	Ldfy;	io	YELLOW_CARPET
	f	Ldfy;	ip	LIME_CARPET
	f	Ldfy;	iq	PINK_CARPET
	f	Ldfy;	ir	GRAY_CARPET
	f	Ldfy;	is	LIGHT_GRAY_CARPET
	f	Ldfy;	it	CYAN_CARPET
	f	Ldfy;	iu	PURPLE_CARPET
	f	Ldfy;	iv	BLUE_CARPET
	f	Ldfy;	iw	BROWN_CARPET
	f	Ldfy;	ix	GREEN_CARPET
	f	Ldfy;	iy	RED_CARPET
	f	Ldfy;	iz	BLACK_CARPET
	f	Ldfy;	jA	MANGROVE_SLAB
	f	Ldfy;	jB	BAMBOO_SLAB
	f	Ldfy;	jC	BAMBOO_MOSAIC_SLAB
	f	Ldfy;	jD	STONE_SLAB
	f	Ldfy;	jE	SMOOTH_STONE_SLAB
	f	Ldfy;	jF	SANDSTONE_SLAB
	f	Ldfy;	jG	CUT_SANDSTONE_SLAB
	f	Ldfy;	jH	PETRIFIED_OAK_SLAB
	f	Ldfy;	jI	COBBLESTONE_SLAB
	f	Ldfy;	jJ	BRICK_SLAB
	f	Ldfy;	jK	STONE_BRICK_SLAB
	f	Ldfy;	jL	MUD_BRICK_SLAB
	f	Ldfy;	j	DIRT
	f	Ldfy;	jM	NETHER_BRICK_SLAB
	f	Ldfy;	jN	QUARTZ_SLAB
	f	Ldfy;	jO	RED_SANDSTONE_SLAB
	f	Ldfy;	jP	CUT_RED_SANDSTONE_SLAB
	f	Ldfy;	jQ	PURPUR_SLAB
	f	Ldfy;	jR	SMOOTH_STONE
	f	Ldfy;	jS	SMOOTH_SANDSTONE
	f	Ldfy;	jT	SMOOTH_QUARTZ
	f	Ldfy;	jU	SMOOTH_RED_SANDSTONE
	f	Ldfy;	jV	SPRUCE_FENCE_GATE
	f	Ldfy;	jW	BIRCH_FENCE_GATE
	f	Ldfy;	jX	JUNGLE_FENCE_GATE
	f	Ldfy;	jY	ACACIA_FENCE_GATE
	f	Ldfy;	jZ	CHERRY_FENCE_GATE
	f	Ldfy;	ja	ORANGE_WALL_BANNER
	f	Ldfy;	jb	MAGENTA_WALL_BANNER
	f	Ldfy;	jc	LIGHT_BLUE_WALL_BANNER
	f	Ldfy;	jd	YELLOW_WALL_BANNER
	f	Ldfy;	je	LIME_WALL_BANNER
	f	Ldfy;	jf	PINK_WALL_BANNER
	f	Ldfy;	jg	GRAY_WALL_BANNER
	f	Ldfy;	jh	LIGHT_GRAY_WALL_BANNER
	f	Ldfy;	ji	CYAN_WALL_BANNER
	f	Ldfy;	jj	PURPLE_WALL_BANNER
	f	Ldfy;	jk	BLUE_WALL_BANNER
	f	Ldfy;	jl	BROWN_WALL_BANNER
	f	Ldfy;	jm	GREEN_WALL_BANNER
	f	Ldfy;	jn	RED_WALL_BANNER
	f	Ldfy;	jo	BLACK_WALL_BANNER
	f	Ldfy;	jp	RED_SANDSTONE
	f	Ldfy;	jq	CHISELED_RED_SANDSTONE
	f	Ldfy;	jr	CUT_RED_SANDSTONE
	f	Ldfy;	js	RED_SANDSTONE_STAIRS
	f	Ldfy;	jt	OAK_SLAB
	f	Ldfy;	ju	SPRUCE_SLAB
	f	Ldfy;	jv	BIRCH_SLAB
	f	Ldfy;	jw	JUNGLE_SLAB
	f	Ldfy;	jx	ACACIA_SLAB
	f	Ldfy;	jy	CHERRY_SLAB
	f	Ldfy;	jz	DARK_OAK_SLAB
	f	Ldfy;	kA	TORCHFLOWER_CROP
	f	Ldfy;	kB	PITCHER_CROP
	f	Ldfy;	kC	PITCHER_PLANT
	f	Ldfy;	kD	BEETROOTS
	f	Ldfy;	kE	DIRT_PATH
	f	Ldfy;	kF	END_GATEWAY
	f	Ldfy;	kG	REPEATING_COMMAND_BLOCK
	f	Ldfy;	kH	CHAIN_COMMAND_BLOCK
	f	Ldfy;	kI	FROSTED_ICE
	f	Ldfy;	kJ	MAGMA_BLOCK
	f	Ldfy;	kK	NETHER_WART_BLOCK
	f	Ldfy;	kL	RED_NETHER_BRICKS
	f	Ldfy;	k	COARSE_DIRT
	f	Ldfy;	kM	BONE_BLOCK
	f	Ldfy;	kN	STRUCTURE_VOID
	f	Ldfy;	kO	OBSERVER
	f	Ldfy;	kP	SHULKER_BOX
	f	Ldfy;	kQ	WHITE_SHULKER_BOX
	f	Ldfy;	kR	ORANGE_SHULKER_BOX
	f	Ldfy;	kS	MAGENTA_SHULKER_BOX
	f	Ldfy;	kT	LIGHT_BLUE_SHULKER_BOX
	f	Ldfy;	kU	YELLOW_SHULKER_BOX
	f	Ldfy;	kV	LIME_SHULKER_BOX
	f	Ldfy;	kW	PINK_SHULKER_BOX
	f	Ldfy;	kX	GRAY_SHULKER_BOX
	f	Ldfy;	kY	LIGHT_GRAY_SHULKER_BOX
	f	Ldfy;	kZ	CYAN_SHULKER_BOX
	f	Ldfy;	ka	DARK_OAK_FENCE_GATE
	f	Ldfy;	kb	MANGROVE_FENCE_GATE
	f	Ldfy;	kc	BAMBOO_FENCE_GATE
	f	Ldfy;	kd	SPRUCE_FENCE
	f	Ldfy;	ke	BIRCH_FENCE
	f	Ldfy;	kf	JUNGLE_FENCE
	f	Ldfy;	kg	ACACIA_FENCE
	f	Ldfy;	kh	CHERRY_FENCE
	f	Ldfy;	ki	DARK_OAK_FENCE
	f	Ldfy;	kj	MANGROVE_FENCE
	f	Ldfy;	kk	BAMBOO_FENCE
	f	Ldfy;	kl	SPRUCE_DOOR
	f	Ldfy;	km	BIRCH_DOOR
	f	Ldfy;	kn	JUNGLE_DOOR
	f	Ldfy;	ko	ACACIA_DOOR
	f	Ldfy;	kp	CHERRY_DOOR
	f	Ldfy;	kq	DARK_OAK_DOOR
	f	Ldfy;	kr	MANGROVE_DOOR
	f	Ldfy;	ks	BAMBOO_DOOR
	f	Ldfy;	kt	END_ROD
	f	Ldfy;	ku	CHORUS_PLANT
	f	Ldfy;	kv	CHORUS_FLOWER
	f	Ldfy;	kw	PURPUR_BLOCK
	f	Ldfy;	kx	PURPUR_PILLAR
	f	Ldfy;	ky	PURPUR_STAIRS
	f	Ldfy;	kz	END_STONE_BRICKS
	f	Ldfy;	lA	YELLOW_CONCRETE
	f	Ldfy;	lB	LIME_CONCRETE
	f	Ldfy;	lC	PINK_CONCRETE
	f	Ldfy;	lD	GRAY_CONCRETE
	f	Ldfy;	lE	LIGHT_GRAY_CONCRETE
	f	Ldfy;	lF	CYAN_CONCRETE
	f	Ldfy;	lG	PURPLE_CONCRETE
	f	Ldfy;	lH	BLUE_CONCRETE
	f	Ldfy;	lI	BROWN_CONCRETE
	f	Ldfy;	lJ	GREEN_CONCRETE
	f	Ldfy;	lK	RED_CONCRETE
	f	Ldfy;	lL	BLACK_CONCRETE
	f	Ldfy;	l	PODZOL
	f	Ldfy;	lM	WHITE_CONCRETE_POWDER
	f	Ldfy;	lN	ORANGE_CONCRETE_POWDER
	f	Ldfy;	lO	MAGENTA_CONCRETE_POWDER
	f	Ldfy;	lP	LIGHT_BLUE_CONCRETE_POWDER
	f	Ldfy;	lQ	YELLOW_CONCRETE_POWDER
	f	Ldfy;	lR	LIME_CONCRETE_POWDER
	f	Ldfy;	lS	PINK_CONCRETE_POWDER
	f	Ldfy;	lT	GRAY_CONCRETE_POWDER
	f	Ldfy;	lU	LIGHT_GRAY_CONCRETE_POWDER
	f	Ldfy;	lV	CYAN_CONCRETE_POWDER
	f	Ldfy;	lW	PURPLE_CONCRETE_POWDER
	f	Ldfy;	lX	BLUE_CONCRETE_POWDER
	f	Ldfy;	lY	BROWN_CONCRETE_POWDER
	f	Ldfy;	lZ	GREEN_CONCRETE_POWDER
	f	Ldfy;	la	PURPLE_SHULKER_BOX
	f	Ldfy;	lb	BLUE_SHULKER_BOX
	f	Ldfy;	lc	BROWN_SHULKER_BOX
	f	Ldfy;	ld	GREEN_SHULKER_BOX
	f	Ldfy;	le	RED_SHULKER_BOX
	f	Ldfy;	lf	BLACK_SHULKER_BOX
	f	Ldfy;	lg	WHITE_GLAZED_TERRACOTTA
	f	Ldfy;	lh	ORANGE_GLAZED_TERRACOTTA
	f	Ldfy;	li	MAGENTA_GLAZED_TERRACOTTA
	f	Ldfy;	lj	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Ldfy;	lk	YELLOW_GLAZED_TERRACOTTA
	f	Ldfy;	ll	LIME_GLAZED_TERRACOTTA
	f	Ldfy;	lm	PINK_GLAZED_TERRACOTTA
	f	Ldfy;	ln	GRAY_GLAZED_TERRACOTTA
	f	Ldfy;	lo	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Ldfy;	lp	CYAN_GLAZED_TERRACOTTA
	f	Ldfy;	lq	PURPLE_GLAZED_TERRACOTTA
	f	Ldfy;	lr	BLUE_GLAZED_TERRACOTTA
	f	Ldfy;	ls	BROWN_GLAZED_TERRACOTTA
	f	Ldfy;	lt	GREEN_GLAZED_TERRACOTTA
	f	Ldfy;	lu	RED_GLAZED_TERRACOTTA
	f	Ldfy;	lv	BLACK_GLAZED_TERRACOTTA
	f	Ldfy;	lw	WHITE_CONCRETE
	f	Ldfy;	lx	ORANGE_CONCRETE
	f	Ldfy;	ly	MAGENTA_CONCRETE
	f	Ldfy;	lz	LIGHT_BLUE_CONCRETE
	f	Ldfy;	mA	HORN_CORAL
	f	Ldfy;	mB	DEAD_TUBE_CORAL_FAN
	f	Ldfy;	mC	DEAD_BRAIN_CORAL_FAN
	f	Ldfy;	mD	DEAD_BUBBLE_CORAL_FAN
	f	Ldfy;	mE	DEAD_FIRE_CORAL_FAN
	f	Ldfy;	mF	DEAD_HORN_CORAL_FAN
	f	Ldfy;	mG	TUBE_CORAL_FAN
	f	Ldfy;	mH	BRAIN_CORAL_FAN
	f	Ldfy;	mI	BUBBLE_CORAL_FAN
	f	Ldfy;	mJ	FIRE_CORAL_FAN
	f	Ldfy;	mK	HORN_CORAL_FAN
	f	Ldfy;	mL	DEAD_TUBE_CORAL_WALL_FAN
	f	Ldfy;	m	COBBLESTONE
	f	Ldfy;	mM	DEAD_BRAIN_CORAL_WALL_FAN
	f	Ldfy;	mN	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Ldfy;	mO	DEAD_FIRE_CORAL_WALL_FAN
	f	Ldfy;	mP	DEAD_HORN_CORAL_WALL_FAN
	f	Ldfy;	mQ	TUBE_CORAL_WALL_FAN
	f	Ldfy;	mR	BRAIN_CORAL_WALL_FAN
	f	Ldfy;	mS	BUBBLE_CORAL_WALL_FAN
	f	Ldfy;	mT	FIRE_CORAL_WALL_FAN
	f	Ldfy;	mU	HORN_CORAL_WALL_FAN
	f	Ldfy;	mV	SEA_PICKLE
	f	Ldfy;	mW	BLUE_ICE
	f	Ldfy;	mX	CONDUIT
	f	Ldfy;	mY	BAMBOO_SAPLING
	f	Ldfy;	mZ	BAMBOO
	f	Ldfy;	ma	RED_CONCRETE_POWDER
	f	Ldfy;	mb	BLACK_CONCRETE_POWDER
	f	Ldfy;	mc	KELP
	f	Ldfy;	md	KELP_PLANT
	f	Ldfy;	me	DRIED_KELP_BLOCK
	f	Ldfy;	mf	TURTLE_EGG
	f	Ldfy;	mg	SNIFFER_EGG
	f	Ldfy;	mh	DEAD_TUBE_CORAL_BLOCK
	f	Ldfy;	mi	DEAD_BRAIN_CORAL_BLOCK
	f	Ldfy;	mj	DEAD_BUBBLE_CORAL_BLOCK
	f	Ldfy;	mk	DEAD_FIRE_CORAL_BLOCK
	f	Ldfy;	ml	DEAD_HORN_CORAL_BLOCK
	f	Ldfy;	mm	TUBE_CORAL_BLOCK
	f	Ldfy;	mn	BRAIN_CORAL_BLOCK
	f	Ldfy;	mo	BUBBLE_CORAL_BLOCK
	f	Ldfy;	mp	FIRE_CORAL_BLOCK
	f	Ldfy;	mq	HORN_CORAL_BLOCK
	f	Ldfy;	mr	DEAD_TUBE_CORAL
	f	Ldfy;	ms	DEAD_BRAIN_CORAL
	f	Ldfy;	mt	DEAD_BUBBLE_CORAL
	f	Ldfy;	mu	DEAD_FIRE_CORAL
	f	Ldfy;	mv	DEAD_HORN_CORAL
	f	Ldfy;	mw	TUBE_CORAL
	f	Ldfy;	mx	BRAIN_CORAL
	f	Ldfy;	my	BUBBLE_CORAL
	f	Ldfy;	mz	FIRE_CORAL
	f	Ldfy;	nA	GRANITE_SLAB
	f	Ldfy;	nB	ANDESITE_SLAB
	f	Ldfy;	nC	RED_NETHER_BRICK_SLAB
	f	Ldfy;	nD	POLISHED_ANDESITE_SLAB
	f	Ldfy;	nE	DIORITE_SLAB
	f	Ldfy;	nF	BRICK_WALL
	f	Ldfy;	nG	PRISMARINE_WALL
	f	Ldfy;	nH	RED_SANDSTONE_WALL
	f	Ldfy;	nI	MOSSY_STONE_BRICK_WALL
	f	Ldfy;	nJ	GRANITE_WALL
	f	Ldfy;	nK	STONE_BRICK_WALL
	f	Ldfy;	nL	MUD_BRICK_WALL
	f	Ldfy;	n	OAK_PLANKS
	f	Ldfy;	nM	NETHER_BRICK_WALL
	f	Ldfy;	nN	ANDESITE_WALL
	f	Ldfy;	nO	RED_NETHER_BRICK_WALL
	f	Ldfy;	nP	SANDSTONE_WALL
	f	Ldfy;	nQ	END_STONE_BRICK_WALL
	f	Ldfy;	nR	DIORITE_WALL
	f	Ldfy;	nS	SCAFFOLDING
	f	Ldfy;	nT	LOOM
	f	Ldfy;	nU	BARREL
	f	Ldfy;	nV	SMOKER
	f	Ldfy;	nW	BLAST_FURNACE
	f	Ldfy;	nX	CARTOGRAPHY_TABLE
	f	Ldfy;	nY	FLETCHING_TABLE
	f	Ldfy;	nZ	GRINDSTONE
	f	Ldfy;	na	POTTED_BAMBOO
	f	Ldfy;	nb	VOID_AIR
	f	Ldfy;	nc	CAVE_AIR
	f	Ldfy;	nd	BUBBLE_COLUMN
	f	Ldfy;	ne	POLISHED_GRANITE_STAIRS
	f	Ldfy;	nf	SMOOTH_RED_SANDSTONE_STAIRS
	f	Ldfy;	ng	MOSSY_STONE_BRICK_STAIRS
	f	Ldfy;	nh	POLISHED_DIORITE_STAIRS
	f	Ldfy;	ni	MOSSY_COBBLESTONE_STAIRS
	f	Ldfy;	nj	END_STONE_BRICK_STAIRS
	f	Ldfy;	nk	STONE_STAIRS
	f	Ldfy;	nl	SMOOTH_SANDSTONE_STAIRS
	f	Ldfy;	nm	SMOOTH_QUARTZ_STAIRS
	f	Ldfy;	nn	GRANITE_STAIRS
	f	Ldfy;	no	ANDESITE_STAIRS
	f	Ldfy;	np	RED_NETHER_BRICK_STAIRS
	f	Ldfy;	nq	POLISHED_ANDESITE_STAIRS
	f	Ldfy;	nr	DIORITE_STAIRS
	f	Ldfy;	ns	POLISHED_GRANITE_SLAB
	f	Ldfy;	nt	SMOOTH_RED_SANDSTONE_SLAB
	f	Ldfy;	nu	MOSSY_STONE_BRICK_SLAB
	f	Ldfy;	nv	POLISHED_DIORITE_SLAB
	f	Ldfy;	nw	MOSSY_COBBLESTONE_SLAB
	f	Ldfy;	nx	END_STONE_BRICK_SLAB
	f	Ldfy;	ny	SMOOTH_SANDSTONE_SLAB
	f	Ldfy;	nz	SMOOTH_QUARTZ_SLAB
	f	Ldfy;	oA	WEEPING_VINES_PLANT
	f	Ldfy;	oB	TWISTING_VINES
	f	Ldfy;	oC	TWISTING_VINES_PLANT
	f	Ldfy;	oD	CRIMSON_ROOTS
	f	Ldfy;	oE	CRIMSON_PLANKS
	f	Ldfy;	oF	WARPED_PLANKS
	f	Ldfy;	oG	CRIMSON_SLAB
	f	Ldfy;	oH	WARPED_SLAB
	f	Ldfy;	oI	CRIMSON_PRESSURE_PLATE
	f	Ldfy;	oJ	WARPED_PRESSURE_PLATE
	f	Ldfy;	oK	CRIMSON_FENCE
	f	Ldfy;	oL	WARPED_FENCE
	f	Ldfy;	o	SPRUCE_PLANKS
	f	Ldfy;	oM	CRIMSON_TRAPDOOR
	f	Ldfy;	oN	WARPED_TRAPDOOR
	f	Ldfy;	oO	CRIMSON_FENCE_GATE
	f	Ldfy;	oP	WARPED_FENCE_GATE
	f	Ldfy;	oQ	CRIMSON_STAIRS
	f	Ldfy;	oR	WARPED_STAIRS
	f	Ldfy;	oS	CRIMSON_BUTTON
	f	Ldfy;	oT	WARPED_BUTTON
	f	Ldfy;	oU	CRIMSON_DOOR
	f	Ldfy;	oV	WARPED_DOOR
	f	Ldfy;	oW	CRIMSON_SIGN
	f	Ldfy;	oX	WARPED_SIGN
	f	Ldfy;	oY	CRIMSON_WALL_SIGN
	f	Ldfy;	oZ	WARPED_WALL_SIGN
	f	Ldfy;	oa	LECTERN
	f	Ldfy;	ob	SMITHING_TABLE
	f	Ldfy;	oc	STONECUTTER
	f	Ldfy;	od	BELL
	f	Ldfy;	oe	LANTERN
	f	Ldfy;	of	SOUL_LANTERN
	f	Ldfy;	og	CAMPFIRE
	f	Ldfy;	oh	SOUL_CAMPFIRE
	f	Ldfy;	oi	SWEET_BERRY_BUSH
	f	Ldfy;	oj	WARPED_STEM
	f	Ldfy;	ok	STRIPPED_WARPED_STEM
	f	Ldfy;	ol	WARPED_HYPHAE
	f	Ldfy;	om	STRIPPED_WARPED_HYPHAE
	f	Ldfy;	on	WARPED_NYLIUM
	f	Ldfy;	oo	WARPED_FUNGUS
	f	Ldfy;	op	WARPED_WART_BLOCK
	f	Ldfy;	oq	WARPED_ROOTS
	f	Ldfy;	or	NETHER_SPROUTS
	f	Ldfy;	os	CRIMSON_STEM
	f	Ldfy;	ot	STRIPPED_CRIMSON_STEM
	f	Ldfy;	ou	CRIMSON_HYPHAE
	f	Ldfy;	ov	STRIPPED_CRIMSON_HYPHAE
	f	Ldfy;	ow	CRIMSON_NYLIUM
	f	Ldfy;	ox	CRIMSON_FUNGUS
	f	Ldfy;	oy	SHROOMLIGHT
	f	Ldfy;	oz	WEEPING_VINES
	f	Ldfy;	pA	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Ldfy;	pB	POLISHED_BLACKSTONE_BRICK_WALL
	f	Ldfy;	pC	GILDED_BLACKSTONE
	f	Ldfy;	pD	POLISHED_BLACKSTONE_STAIRS
	f	Ldfy;	pE	POLISHED_BLACKSTONE_SLAB
	f	Ldfy;	pF	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Ldfy;	pG	POLISHED_BLACKSTONE_BUTTON
	f	Ldfy;	pH	POLISHED_BLACKSTONE_WALL
	f	Ldfy;	pI	CHISELED_NETHER_BRICKS
	f	Ldfy;	pJ	CRACKED_NETHER_BRICKS
	f	Ldfy;	pK	QUARTZ_BRICKS
	f	Ldfy;	pL	CANDLE
	f	Ldfy;	p	BIRCH_PLANKS
	f	Ldfy;	pM	WHITE_CANDLE
	f	Ldfy;	pN	ORANGE_CANDLE
	f	Ldfy;	pO	MAGENTA_CANDLE
	f	Ldfy;	pP	LIGHT_BLUE_CANDLE
	f	Ldfy;	pQ	YELLOW_CANDLE
	f	Ldfy;	pR	LIME_CANDLE
	f	Ldfy;	pS	PINK_CANDLE
	f	Ldfy;	pT	GRAY_CANDLE
	f	Ldfy;	pU	LIGHT_GRAY_CANDLE
	f	Ldfy;	pV	CYAN_CANDLE
	f	Ldfy;	pW	PURPLE_CANDLE
	f	Ldfy;	pX	BLUE_CANDLE
	f	Ldfy;	pY	BROWN_CANDLE
	f	Ldfy;	pZ	GREEN_CANDLE
	f	Ldfy;	pa	STRUCTURE_BLOCK
	f	Ldfy;	pb	JIGSAW
	f	Ldfy;	pc	COMPOSTER
	f	Ldfy;	pd	TARGET
	f	Ldfy;	pe	BEE_NEST
	f	Ldfy;	pf	BEEHIVE
	f	Ldfy;	pg	HONEY_BLOCK
	f	Ldfy;	ph	HONEYCOMB_BLOCK
	f	Ldfy;	pi	NETHERITE_BLOCK
	f	Ldfy;	pj	ANCIENT_DEBRIS
	f	Ldfy;	pk	CRYING_OBSIDIAN
	f	Ldfy;	pl	RESPAWN_ANCHOR
	f	Ldfy;	pm	POTTED_CRIMSON_FUNGUS
	f	Ldfy;	pn	POTTED_WARPED_FUNGUS
	f	Ldfy;	po	POTTED_CRIMSON_ROOTS
	f	Ldfy;	pp	POTTED_WARPED_ROOTS
	f	Ldfy;	pq	LODESTONE
	f	Ldfy;	pr	BLACKSTONE
	f	Ldfy;	ps	BLACKSTONE_STAIRS
	f	Ldfy;	pt	BLACKSTONE_WALL
	f	Ldfy;	pu	BLACKSTONE_SLAB
	f	Ldfy;	pv	POLISHED_BLACKSTONE
	f	Ldfy;	pw	POLISHED_BLACKSTONE_BRICKS
	f	Ldfy;	px	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Ldfy;	py	CHISELED_POLISHED_BLACKSTONE
	f	Ldfy;	pz	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Ldfy;	qA	TUFF_SLAB
	f	Ldfy;	qB	TUFF_STAIRS
	f	Ldfy;	qC	TUFF_WALL
	f	Ldfy;	qD	POLISHED_TUFF
	f	Ldfy;	qE	POLISHED_TUFF_SLAB
	f	Ldfy;	qF	POLISHED_TUFF_STAIRS
	f	Ldfy;	qG	POLISHED_TUFF_WALL
	f	Ldfy;	qH	CHISELED_TUFF
	f	Ldfy;	qI	TUFF_BRICKS
	f	Ldfy;	qJ	TUFF_BRICK_SLAB
	f	Ldfy;	qK	TUFF_BRICK_STAIRS
	f	Ldfy;	qL	TUFF_BRICK_WALL
	f	Ldfy;	q	JUNGLE_PLANKS
	f	Ldfy;	qM	CHISELED_TUFF_BRICKS
	f	Ldfy;	qN	CALCITE
	f	Ldfy;	qO	TINTED_GLASS
	f	Ldfy;	qP	POWDER_SNOW
	f	Ldfy;	qQ	SCULK_SENSOR
	f	Ldfy;	qR	CALIBRATED_SCULK_SENSOR
	f	Ldfy;	qS	SCULK
	f	Ldfy;	qT	SCULK_VEIN
	f	Ldfy;	qU	SCULK_CATALYST
	f	Ldfy;	qV	SCULK_SHRIEKER
	f	Ldfy;	qW	COPPER_BLOCK
	f	Ldfy;	qX	EXPOSED_COPPER
	f	Ldfy;	qY	WEATHERED_COPPER
	f	Ldfy;	qZ	OXIDIZED_COPPER
	f	Ldfy;	qa	RED_CANDLE
	f	Ldfy;	qb	BLACK_CANDLE
	f	Ldfy;	qc	CANDLE_CAKE
	f	Ldfy;	qd	WHITE_CANDLE_CAKE
	f	Ldfy;	qe	ORANGE_CANDLE_CAKE
	f	Ldfy;	qf	MAGENTA_CANDLE_CAKE
	f	Ldfy;	qg	LIGHT_BLUE_CANDLE_CAKE
	f	Ldfy;	qh	YELLOW_CANDLE_CAKE
	f	Ldfy;	qi	LIME_CANDLE_CAKE
	f	Ldfy;	qj	PINK_CANDLE_CAKE
	f	Ldfy;	qk	GRAY_CANDLE_CAKE
	f	Ldfy;	ql	LIGHT_GRAY_CANDLE_CAKE
	f	Ldfy;	qm	CYAN_CANDLE_CAKE
	f	Ldfy;	qn	PURPLE_CANDLE_CAKE
	f	Ldfy;	qo	BLUE_CANDLE_CAKE
	f	Ldfy;	qp	BROWN_CANDLE_CAKE
	f	Ldfy;	qq	GREEN_CANDLE_CAKE
	f	Ldfy;	qr	RED_CANDLE_CAKE
	f	Ldfy;	qs	BLACK_CANDLE_CAKE
	f	Ldfy;	qt	AMETHYST_BLOCK
	f	Ldfy;	qu	BUDDING_AMETHYST
	f	Ldfy;	qv	AMETHYST_CLUSTER
	f	Ldfy;	qw	LARGE_AMETHYST_BUD
	f	Ldfy;	qx	MEDIUM_AMETHYST_BUD
	f	Ldfy;	qy	SMALL_AMETHYST_BUD
	f	Ldfy;	qz	TUFF
	f	Ldfy;	rA	WAXED_OXIDIZED_CUT_COPPER
	f	Ldfy;	rB	WAXED_WEATHERED_CUT_COPPER
	f	Ldfy;	rC	WAXED_EXPOSED_CUT_COPPER
	f	Ldfy;	rD	WAXED_CUT_COPPER
	f	Ldfy;	rE	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Ldfy;	rF	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Ldfy;	rG	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Ldfy;	rH	WAXED_CUT_COPPER_STAIRS
	f	Ldfy;	rI	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Ldfy;	rJ	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Ldfy;	rK	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Ldfy;	rL	WAXED_CUT_COPPER_SLAB
	f	Ldfy;	r	ACACIA_PLANKS
	f	Ldfy;	rM	COPPER_DOOR
	f	Ldfy;	rN	EXPOSED_COPPER_DOOR
	f	Ldfy;	rO	OXIDIZED_COPPER_DOOR
	f	Ldfy;	rP	WEATHERED_COPPER_DOOR
	f	Ldfy;	rQ	WAXED_COPPER_DOOR
	f	Ldfy;	rR	WAXED_EXPOSED_COPPER_DOOR
	f	Ldfy;	rS	WAXED_OXIDIZED_COPPER_DOOR
	f	Ldfy;	rT	WAXED_WEATHERED_COPPER_DOOR
	f	Ldfy;	rU	COPPER_TRAPDOOR
	f	Ldfy;	rV	EXPOSED_COPPER_TRAPDOOR
	f	Ldfy;	rW	OXIDIZED_COPPER_TRAPDOOR
	f	Ldfy;	rX	WEATHERED_COPPER_TRAPDOOR
	f	Ldfy;	rY	WAXED_COPPER_TRAPDOOR
	f	Ldfy;	rZ	WAXED_EXPOSED_COPPER_TRAPDOOR
	f	Ldfy;	ra	COPPER_ORE
	f	Ldfy;	rb	DEEPSLATE_COPPER_ORE
	f	Ldfy;	rc	OXIDIZED_CUT_COPPER
	f	Ldfy;	rd	WEATHERED_CUT_COPPER
	f	Ldfy;	re	EXPOSED_CUT_COPPER
	f	Ldfy;	rf	CUT_COPPER
	f	Ldfy;	rg	OXIDIZED_CHISELED_COPPER
	f	Ldfy;	rh	WEATHERED_CHISELED_COPPER
	f	Ldfy;	ri	EXPOSED_CHISELED_COPPER
	f	Ldfy;	rj	CHISELED_COPPER
	f	Ldfy;	rk	WAXED_OXIDIZED_CHISELED_COPPER
	f	Ldfy;	rl	WAXED_WEATHERED_CHISELED_COPPER
	f	Ldfy;	rm	WAXED_EXPOSED_CHISELED_COPPER
	f	Ldfy;	rn	WAXED_CHISELED_COPPER
	f	Ldfy;	ro	OXIDIZED_CUT_COPPER_STAIRS
	f	Ldfy;	rp	WEATHERED_CUT_COPPER_STAIRS
	f	Ldfy;	rq	EXPOSED_CUT_COPPER_STAIRS
	f	Ldfy;	rr	CUT_COPPER_STAIRS
	f	Ldfy;	rs	OXIDIZED_CUT_COPPER_SLAB
	f	Ldfy;	rt	WEATHERED_CUT_COPPER_SLAB
	f	Ldfy;	ru	EXPOSED_CUT_COPPER_SLAB
	f	Ldfy;	rv	CUT_COPPER_SLAB
	f	Ldfy;	rw	WAXED_COPPER_BLOCK
	f	Ldfy;	rx	WAXED_WEATHERED_COPPER
	f	Ldfy;	ry	WAXED_EXPOSED_COPPER
	f	Ldfy;	rz	WAXED_OXIDIZED_COPPER
	f	Ldfy;	sA	MOSS_CARPET
	f	Ldfy;	sB	PINK_PETALS
	f	Ldfy;	sC	MOSS_BLOCK
	f	Ldfy;	sD	BIG_DRIPLEAF
	f	Ldfy;	sE	BIG_DRIPLEAF_STEM
	f	Ldfy;	sF	SMALL_DRIPLEAF
	f	Ldfy;	sG	HANGING_ROOTS
	f	Ldfy;	sH	ROOTED_DIRT
	f	Ldfy;	sI	MUD
	f	Ldfy;	sJ	DEEPSLATE
	f	Ldfy;	sK	COBBLED_DEEPSLATE
	f	Ldfy;	sL	COBBLED_DEEPSLATE_STAIRS
	f	Ldfy;	s	CHERRY_PLANKS
	f	Ldfy;	sM	COBBLED_DEEPSLATE_SLAB
	f	Ldfy;	sN	COBBLED_DEEPSLATE_WALL
	f	Ldfy;	sO	POLISHED_DEEPSLATE
	f	Ldfy;	sP	POLISHED_DEEPSLATE_STAIRS
	f	Ldfy;	sQ	POLISHED_DEEPSLATE_SLAB
	f	Ldfy;	sR	POLISHED_DEEPSLATE_WALL
	f	Ldfy;	sS	DEEPSLATE_TILES
	f	Ldfy;	sT	DEEPSLATE_TILE_STAIRS
	f	Ldfy;	sU	DEEPSLATE_TILE_SLAB
	f	Ldfy;	sV	DEEPSLATE_TILE_WALL
	f	Ldfy;	sW	DEEPSLATE_BRICKS
	f	Ldfy;	sX	DEEPSLATE_BRICK_STAIRS
	f	Ldfy;	sY	DEEPSLATE_BRICK_SLAB
	f	Ldfy;	sZ	DEEPSLATE_BRICK_WALL
	f	Ldfy;	sa	WAXED_OXIDIZED_COPPER_TRAPDOOR
	f	Ldfy;	sb	WAXED_WEATHERED_COPPER_TRAPDOOR
	f	Ldfy;	sc	COPPER_GRATE
	f	Ldfy;	sd	EXPOSED_COPPER_GRATE
	f	Ldfy;	se	WEATHERED_COPPER_GRATE
	f	Ldfy;	sf	OXIDIZED_COPPER_GRATE
	f	Ldfy;	sg	WAXED_COPPER_GRATE
	f	Ldfy;	sh	WAXED_EXPOSED_COPPER_GRATE
	f	Ldfy;	si	WAXED_WEATHERED_COPPER_GRATE
	f	Ldfy;	sj	WAXED_OXIDIZED_COPPER_GRATE
	f	Ldfy;	sk	COPPER_BULB
	f	Ldfy;	sl	EXPOSED_COPPER_BULB
	f	Ldfy;	sm	WEATHERED_COPPER_BULB
	f	Ldfy;	sn	OXIDIZED_COPPER_BULB
	f	Ldfy;	so	WAXED_COPPER_BULB
	f	Ldfy;	sp	WAXED_EXPOSED_COPPER_BULB
	f	Ldfy;	sq	WAXED_WEATHERED_COPPER_BULB
	f	Ldfy;	sr	WAXED_OXIDIZED_COPPER_BULB
	f	Ldfy;	ss	LIGHTNING_ROD
	f	Ldfy;	st	POINTED_DRIPSTONE
	f	Ldfy;	su	DRIPSTONE_BLOCK
	f	Ldfy;	sv	CAVE_VINES
	f	Ldfy;	sw	CAVE_VINES_PLANT
	f	Ldfy;	sx	SPORE_BLOSSOM
	f	Ldfy;	sy	AZALEA
	f	Ldfy;	sz	FLOWERING_AZALEA
	f	Ldfy;	t	DARK_OAK_PLANKS
	f	Ldfy;	ta	CHISELED_DEEPSLATE
	f	Ldfy;	tb	CRACKED_DEEPSLATE_BRICKS
	f	Ldfy;	tc	CRACKED_DEEPSLATE_TILES
	f	Ldfy;	td	INFESTED_DEEPSLATE
	f	Ldfy;	te	SMOOTH_BASALT
	f	Ldfy;	tf	RAW_IRON_BLOCK
	f	Ldfy;	tg	RAW_COPPER_BLOCK
	f	Ldfy;	th	RAW_GOLD_BLOCK
	f	Ldfy;	ti	POTTED_AZALEA
	f	Ldfy;	tj	POTTED_FLOWERING_AZALEA
	f	Ldfy;	tk	OCHRE_FROGLIGHT
	f	Ldfy;	tl	VERDANT_FROGLIGHT
	f	Ldfy;	tm	PEARLESCENT_FROGLIGHT
	f	Ldfy;	tn	FROGSPAWN
	f	Ldfy;	to	REINFORCED_DEEPSLATE
	f	Ldfy;	tp	DECORATED_POT
	f	Ldfy;	tq	CRAFTER
	f	Ldfy;	tr	TRIAL_SPAWNER
	f	Ldfy;	ts	VAULT
	f	Ldfy;	tt	HEAVY_CORE
	f	Ldtb$f;	tu	NOT_CLOSED_SHULKER
	f	Ldfy;	u	MANGROVE_PLANKS
	f	Ldfy;	v	BAMBOO_PLANKS
	f	Ldfy;	w	BAMBOO_MOSAIC
	f	Ldfy;	x	OAK_SAPLING
	f	Ldfy;	y	SPRUCE_SAPLING
	f	Ldfy;	z	BIRCH_SAPLING
c	dgb	net/minecraft/world/level/block/IBlockFragilePlantElement
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ljd;)Ljd;	a	getParticlePos
		p	1		pos
	m	()Ldgb$a;	au_	getType
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	dgb$a	net/minecraft/world/level/block/IBlockFragilePlantElement$a
	m	()[Ldgb$a;	a	$values
	f	Ldgb$a;	a	NEIGHBOR_SPREADER
	f	Ldgb$a;	b	GROWER
	f	[Ldgb$a;	c	$VALUES
c	dgc	net/minecraft/world/level/block/BlockBrewingStand
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Ldtt;	b	HAS_BOTTLE
	f	Lexv;	c	SHAPE
c	dgd	net/minecraft/world/level/block/BrushableBlock
	m	(Ldfy;Lavo;Lavo;Ldtb$d;)V	<init>	<init>
		p	1		baseBlock
		p	2		brushingSound
		p	3		brushingCompleteSound
		p	4		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldcw;Ljd;Lcjg;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	()Ldfy;	b	getTurnsInto
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Lavo;	c	getBrushSound
	m	()Lavo;	d	getBrushCompletedSound
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	TICK_DELAY
	f	Lduc;	c	DUSTED
	f	Ldfy;	d	turnsInto
	f	Lavo;	e	brushSound
	f	Lavo;	f	brushCompletedSound
c	dge	net/minecraft/world/level/block/BlockBubbleColumn
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Ldcx;Ljd;Ldtc;Ldtc;)V	a	updateColumn
		p	0		world
		p	1		pos
		p	2		water
		p	3		bubbleSource
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	()Ljava/util/Optional;	aw_	getPickupSound
	m	(Ldcx;Ljd;Ldtc;)V	b	updateColumn
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	m	canExistIn
		p	0		state
	m	(Ldtc;)Ldtc;	n	getColumnState
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	DRAG_DOWN
	f	I	c	CHECK_PERIOD
c	dgf	net/minecraft/world/level/block/IFluidSource
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	()Ljava/util/Optional;	aw_	getPickupSound
c	dgg	net/minecraft/world/level/block/BuddingAmethystBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Z	g	canClusterGrowAtState
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	c	GROWTH_CHANCE
	f	[Lji;	d	DIRECTIONS
c	dgh	net/minecraft/world/level/block/BlockPlant
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
c	dgi	net/minecraft/world/level/block/BlockButtonAbstract
	m	(Ldtr;ILdtb$d;)V	<init>	<init>
		p	1		blockSetType
		p	2		pressTicks
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcx;Ljd;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		powered
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldgi;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	a	press
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Z)Lavo;	a	getSound
		p	1		powered
	m	(Ldgi;)Ldtr;	b	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)V	d	checkPressed
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lexv;	F	PRESSED_FLOOR_AABB_Z
	f	Lexv;	G	PRESSED_NORTH_AABB
	f	Lexv;	H	PRESSED_SOUTH_AABB
	f	Lexv;	I	PRESSED_WEST_AABB
	f	Lexv;	J	PRESSED_EAST_AABB
	f	I	L	PRESSED_DEPTH
	f	I	M	UNPRESSED_DEPTH
	f	Ldtr;	N	type
	f	I	O	ticksToStayPressed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	POWERED
	f	I	c	HALF_AABB_HEIGHT
	f	I	d	HALF_AABB_WIDTH
	f	Lexv;	e	CEILING_AABB_X
	f	Lexv;	f	CEILING_AABB_Z
	f	Lexv;	g	FLOOR_AABB_X
	f	Lexv;	h	FLOOR_AABB_Z
	f	Lexv;	i	NORTH_AABB
	f	Lexv;	j	SOUTH_AABB
	f	Lexv;	k	WEST_AABB
	f	Lexv;	l	EAST_AABB
	f	Lexv;	m	PRESSED_CEILING_AABB_X
	f	Lexv;	n	PRESSED_CEILING_AABB_Z
	f	Lexv;	o	PRESSED_FLOOR_AABB_X
c	dgi$1	net/minecraft/world/level/block/BlockButtonAbstract$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	dgj	net/minecraft/world/level/block/BlockCactus
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	AGE
	f	I	c	MAX_AGE
	f	I	d	AABB_OFFSET
	f	Lexv;	e	COLLISION_SHAPE
	f	Lexv;	f	OUTLINE_SHAPE
c	dgk	net/minecraft/world/level/block/BlockCake
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcx;Ljd;Ldtc;Lcmx;)Lbqr;	a	eat
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)I	b	getOutputSignal
		p	0		bites
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_BITES
	f	Lduc;	c	BITES
	f	I	d	FULL_CAKE_SIGNAL
	f	F	e	AABB_OFFSET
	f	F	f	AABB_SIZE_PER_BITE
	f	[Lexv;	g	SHAPE_BY_BITE
c	dgl	net/minecraft/world/level/block/CalibratedSculkSensorBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Ldqm;)V	a	lambda$getTicker$0
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	()I	c	getActiveTicks
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
c	dgm	net/minecraft/world/level/block/BlockCampfire
	m	(ZILdtb$d;)V	<init>	<init>
		p	1		emitsParticles
		p	2		fireDamage
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcx;Ljd;Ldtc;)V	a	dowse
		p	0		entity
		p	1		world
		p	2		pos
		p	3		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;)Z	a	isSmokeyPos
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;ZZ)V	a	makeParticles
		p	0		world
		p	1		pos
		p	2		isSignal
		p	3		lotsOfSmoke
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldgm;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		block
	m	(Ldtb$a;)Z	a	lambda$canLight$3
		p	0		statex
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldgm;)Ljava/lang/Boolean;	b	lambda$static$0
		p	0		block
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	g	isLitCampfire
		p	0		state
	m	(Ldtc;)Z	h	canLight
		p	0		state
	m	(Ldtc;)Z	m	isSmokeSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	Ldtt;	c	LIT
	f	Ldtt;	d	SIGNAL_FIRE
	f	Ldtt;	e	WATERLOGGED
	f	Ldtw;	f	FACING
	f	Lexv;	g	VIRTUAL_FENCE_POST
	f	I	h	SMOKE_DISTANCE
	f	Z	i	spawnParticles
	f	I	j	fireDamage
c	dgn	net/minecraft/world/level/block/CandleBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldtb$a;)Z	a	lambda$canLight$2
		p	0		statex
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	d	canBeLit
		p	1		state
	m	(Ldtc;)Z	g	canLight
		p	0		state
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	m	lambda$static$1
	m	(Ldtc;)I	m	lambda$static$0
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MIN_CANDLES
	f	I	e	MAX_CANDLES
	f	Lduc;	f	CANDLES
	f	Ldtt;	g	LIT
	f	Ldtt;	h	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	i	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	j	PARTICLE_OFFSETS
	f	Lexv;	k	ONE_AABB
	f	Lexv;	l	TWO_AABB
	f	Lexv;	m	THREE_AABB
	f	Lexv;	n	FOUR_AABB
c	dgo	net/minecraft/world/level/block/CandleCakeBlock
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		candle
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldgn;)Ldtc;	a	byCandle
		p	0		candle
	m	(Ldgo;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldtb$a;)Z	a	lambda$canLight$2
		p	1		statex
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lewy;)Z	a	candleHit
		p	0		hitResult
	m	(Ldtc;)Ljava/lang/Iterable;	b	getParticleOffsets
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	g	canLight
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtt;	d	LIT
	f	F	e	AABB_OFFSET
	f	Lexv;	f	CAKE_SHAPE
	f	Lexv;	g	CANDLE_SHAPE
	f	Lexv;	h	SHAPE
	f	Ljava/util/Map;	i	BY_CANDLE
	f	Ljava/lang/Iterable;	j	PARTICLE_OFFSETS
	f	Ldgn;	k	candleBlock
c	dgp	net/minecraft/world/level/block/CarpetBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	dgq	net/minecraft/world/level/block/BlockCarrots
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Ldcv;	d	getBaseSeedId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Lexv;	b	SHAPE_BY_AGE
c	dgr	net/minecraft/world/level/block/BlockCartographyTable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lwz;	b	CONTAINER_TITLE
c	dgs	net/minecraft/world/level/block/BlockPumpkinCarved
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldth$b;)V	a	clearPatternBlocks
		p	0		world
		p	1		patternResult
	m	(Ldcw;Ldth$b;Lbsr;Ljd;)V	a	spawnGolemInWorld
		p	0		world
		p	1		patternResult
		p	2		entity
		p	3		pos
	m	(Ldcw;Ljd;)V	a	trySpawnGolem
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;)Z	a	canSpawnGolem
		p	1		world
		p	2		pos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtg;)Z	a	lambda$getOrCreateIronGolemFull$2
		p	0		pos
	m	()Ldth;	b	getOrCreateSnowGolemBase
	m	(Ldcw;Ldth$b;)V	b	updatePatternBlocks
		p	0		world
		p	1		patternResult
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtg;)Z	b	lambda$getOrCreateIronGolemBase$1
		p	0		pos
	m	()Ldth;	m	getOrCreateSnowGolemFull
	m	(Ldtc;)Z	m	lambda$static$0
		p	0		state
	m	()Ldth;	y	getOrCreateIronGolemBase
	m	()Ldth;	z	getOrCreateIronGolemFull
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldth;	c	snowGolemBase
	f	Ldth;	d	snowGolemFull
	f	Ldth;	e	ironGolemBase
	f	Ldth;	f	ironGolemFull
	f	Ljava/util/function/Predicate;	g	PUMPKINS_PREDICATE
c	dgt	net/minecraft/world/level/block/BlockCauldron
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Lddw$c;)Z	a	shouldHandlePrecipitation
		p	0		world
		p	1		precipitation
	m	(Ldtc;Ldcw;Ljd;Lddw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldtc;Ldcw;Ljd;Lepd;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Lepd;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldtc;)Z	d	isFull
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	F	e	RAIN_FILL_CHANCE
	f	F	f	POWDER_SNOW_FILL_CHANCE
c	dgu	net/minecraft/world/level/block/CaveVines
	m	(ILdtc;)I	a	lambda$emission$0
		p	1		state
	m	(Lbsr;Ldtc;Ldcw;Ljd;)Lbqr;	a	use
		p	0		picker
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	h_	hasGlowBerries
		p	0		state
	m	(I)Ljava/util/function/ToIntFunction;	i_	emission
		p	0		luminance
	f	Lexv;	t_	SHAPE
	f	Ldtt;	u_	BERRIES
c	dgv	net/minecraft/world/level/block/CaveVinesBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Layw;)Ldtc;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldtc;)Ldtc;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldfy;	b	getBodyBlock
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Z	g	canGrowInto
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	F	g	CHANCE_OF_BERRIES_ON_GROWTH
c	dgw	net/minecraft/world/level/block/CaveVinesPlantBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldtc;)Ldtc;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	()Ldjn;	c	getHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dgx	net/minecraft/world/level/block/CeilingHangingSignBlock
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Lewy;Ldrs;Lcuq;)Z	a	shouldTryToChainAnotherHangingSign
		p	1		player
		p	2		hitResult
		p	3		sign
		p	4		stack
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)F	g	getYRotationDegrees
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	ROTATION
	f	Ldtt;	c	ATTACHED
	f	F	d	AABB_OFFSET
	f	Lexv;	e	SHAPE
	f	Ljava/util/Map;	i	AABBS
c	dgy	net/minecraft/world/level/block/BlockChain
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	WATERLOGGED
	f	F	c	AABB_MIN
	f	F	d	AABB_MAX
	f	Lexv;	e	Y_AXIS_AABB
	f	Lexv;	f	Z_AXIS_AABB
	f	Lexv;	g	X_AXIS_AABB
c	dgy$1	net/minecraft/world/level/block/BlockChain$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	dgz	net/minecraft/world/level/block/ChangeOverTimeBlock
	m	(Laqu;Ljd;Ldtc;)V	a	lambda$changeOverTime$0
		p	2		degraded
	m	(Ldtc;Laqu;Ljd;Layw;)V	a_	changeOverTime
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()F	ay_	getChanceModifier
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;Laqu;Ljd;Layw;)Ljava/util/Optional;	c	getNextState
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Ljava/util/Optional;	i_	getNext
		p	1		state
	f	I	y_	SCAN_DISTANCE
c	dha	net/minecraft/world/level/block/CherryLeavesBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dhb	net/minecraft/world/level/block/BlockChest
	m	(Ldtb$d;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		settings
		p	2		entityTypeSupplier
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Lcyd;Lji;)Lji;	a	candidatePartnerFacing
		p	1		ctx
		p	2		dir
	m	(Ldcc;Ljd;)Z	a	isBlockedChestByBlock
		p	0		world
		p	1		pos
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcx;Ljd;)Z	a	isChestBlockedAt
		p	0		world
		p	1		pos
	m	(Ldhb;Ldtc;Ldcw;Ljd;Z)Lbqk;	a	getContainer
		p	0		block
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldrl;)Ldif$b;	a	opennessCombiner
		p	0		progress
	m	(Ldtb$d;)Ldhb;	a	lambda$static$1
		p	0		settings
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcw;Ljd;Z)Ldif$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldcx;Ljd;)Z	b	isCatSittingOnChest
		p	0		world
		p	1		pos
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Lavw;	c	getOpenChestStat
	m	(Ldcx;Ljd;)Z	c	lambda$combine$2
		p	0		worldx
		p	1		posx
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	()Ldqj;	d	blockEntityType
	m	(Ldtc;)Ldif$a;	g	getBlockType
		p	0		state
	m	(Ldtc;)Lji;	h	getConnectedDirection
		p	0		state
	m	()Ldqj;	m	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtw;	c	FACING
	f	Ldua;	d	TYPE
	f	Ldtt;	e	WATERLOGGED
	f	I	f	EVENT_SET_OPEN_COUNT
	f	I	g	AABB_OFFSET
	f	I	h	AABB_HEIGHT
	f	Lexv;	i	NORTH_AABB
	f	Lexv;	j	SOUTH_AABB
	f	Lexv;	k	WEST_AABB
	f	Lexv;	l	EAST_AABB
	f	Lexv;	m	AABB
	f	Ldif$b;	n	CHEST_COMBINER
	f	Ldif$b;	o	MENU_PROVIDER_COMBINER
c	dhb$1	net/minecraft/world/level/block/BlockChest$1
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Ldqo;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Ldqo;Ldqo;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	dhb$2	net/minecraft/world/level/block/BlockChest$2
	m	()Ljava/util/Optional;	a	acceptNone
	m	(Ldqo;)Ljava/util/Optional;	a	acceptSingle
		p	1		single
	m	(Ldqo;Ldqo;)Ljava/util/Optional;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	dhb$2$1	net/minecraft/world/level/block/BlockChest$2$1
	m	()Lwz;	S_	getDisplayName
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Ldqo;	a	val$first
	f	Ldqo;	b	val$second
	f	Lbqk;	c	val$container
c	dhb$3	net/minecraft/world/level/block/BlockChest$3
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	(Ldqo;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
		p	1		single
	m	(Ldqo;Ldqo;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
		p	1		first
		p	2		second
	m	(Ldqo;Ldqo;F)F	a	lambda$acceptDouble$0
		p	2		tickDelta
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
	f	Ldrl;	a	val$entity
c	dhb$4	net/minecraft/world/level/block/BlockChest$4
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dhc	net/minecraft/world/level/block/ChiseledBookShelfBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(F)I	a	getSection
		p	0		x
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Lcmx;Ldqq;I)V	a	removeBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		slot
	m	(Ldcw;Ljd;Lcmx;Ldqq;Lcuq;I)V	a	addBook
		p	0		world
		p	1		pos
		p	2		player
		p	3		blockEntity
		p	4		stack
		p	5		slot
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtd$a;Lduf;)V	a	lambda$createBlockStateDefinition$1
		p	1		property
	m	(Lewy;Ldtc;)Ljava/util/OptionalInt;	a	getHitSlot
		p	1		hit
		p	2		state
	m	(Lewy;Lji;)Ljava/util/Optional;	a	getRelativeHitCoordinatesForBlockFace
		p	0		hit
		p	1		facing
	m	(Lexb;)Ljava/util/OptionalInt;	a	lambda$getHitSlot$0
		p	0		hitPos
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	BOOKS_PER_ROW
	f	Ljava/util/List;	c	SLOT_OCCUPIED_PROPERTIES
	f	I	d	MAX_BOOKS_IN_STORAGE
c	dhc$1	net/minecraft/world/level/block/ChiseledBookShelfBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dhd	net/minecraft/world/level/block/BlockChorusFlower
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		plantBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;)V	a	placeDeadFlower
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;I)V	a	placeGrownFlower
		p	1		world
		p	2		pos
		p	3		age
	m	(Ldcx;Ljd;Layw;I)V	a	generatePlant
		p	0		world
		p	1		pos
		p	2		random
		p	3		size
	m	(Ldcx;Ljd;Layw;Ljd;II)V	a	growTreeRecursive
		p	0		world
		p	1		pos
		p	2		random
		p	3		rootPos
		p	4		size
		p	5		layer
	m	(Ldhd;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Lji;)Z	b	allNeighborsEmpty
		p	0		world
		p	1		pos
		p	2		exceptDirection
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	DEAD_AGE
	f	Lduc;	c	AGE
	f	Lexv;	d	BLOCK_SUPPORT_SHAPE
	f	Ldfy;	e	plant
c	dhe	net/minecraft/world/level/block/BlockChorusFruit
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;Ldtc;)Ldtc;	a	getStateWithConnections
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dhf	net/minecraft/world/level/block/BlockCocoa
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	[Lexv;	F	SOUTH_AABB
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	I	d	AGE_0_WIDTH
	f	I	e	AGE_0_HEIGHT
	f	I	f	AGE_0_HALFWIDTH
	f	I	g	AGE_1_WIDTH
	f	I	h	AGE_1_HEIGHT
	f	I	i	AGE_1_HALFWIDTH
	f	I	j	AGE_2_WIDTH
	f	I	k	AGE_2_HEIGHT
	f	I	l	AGE_2_HALFWIDTH
	f	[Lexv;	m	EAST_AABB
	f	[Lexv;	n	WEST_AABB
	f	[Lexv;	o	NORTH_AABB
c	dhf$1	net/minecraft/world/level/block/BlockCocoa$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dhg	net/minecraft/world/level/block/ColoredFallingBlock
	m	(Laxh;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldhg;)Laxh;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;)I	b	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Laxh;	b	dustColor
c	dhh	net/minecraft/world/level/block/BlockCommand
	m	(ZLdtb$d;)V	<init>	<init>
		p	1		auto
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Lji;)V	a	executeChain
		p	0		world
		p	1		pos
		p	2		facing
	m	(Ldhh;)Ljava/lang/Boolean;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldbx;Z)V	a	execute
		p	1		state
		p	2		world
		p	3		pos
		p	4		executor
		p	5		hasCommand
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	CONDITIONAL
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Z	e	automatic
c	dhi	net/minecraft/world/level/block/BlockRedstoneComparator
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcc;Ljd;Ldtc;)I	a	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Lji;Ljd;)Lcja;	a	getItemFrame
		p	1		world
		p	2		facing
		p	3		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lji;Lcja;)Z	a	lambda$getItemFrame$0
		p	1		itemFrame
	m	(Ldcw;Ljd;Ldtc;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)I	e	calculateOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	f	refreshOutputState
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)I	g	getDelay
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	MODE
c	dhj	net/minecraft/world/level/block/BlockComposter
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FLdcv;)V	a	add
		p	0		levelIncreaseChance
		p	1		item
	m	(Lbsr;Ldtc;Laqu;Lcuq;Ljd;)Ldtc;	a	insertItem
		p	0		user
		p	1		state
		p	2		world
		p	3		stack
		p	4		pos
	m	(Lbsr;Ldtc;Ldcw;Ljd;)Ldtc;	a	extractProduce
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbsr;Ldtc;Ldcx;Ljd;)Ldtc;	a	empty
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
	m	(Lbsr;Ldtc;Ldcx;Ljd;Lcuq;)Ldtc;	a	addItem
		p	0		user
		p	1		state
		p	2		world
		p	3		pos
		p	4		stack
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Ljd;Z)V	a	handleFill
		p	0		world
		p	1		pos
		p	2		fill
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcx;Ljd;)Lbrd;	a	getContainer
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Lexv;)V	a	lambda$static$0
		p	0		shapes
	m	()V	b	bootStrap
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	READY
	f	I	c	MIN_LEVEL
	f	I	d	MAX_LEVEL
	f	Lduc;	e	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	f	COMPOSTABLES
	f	I	g	AABB_SIDE_THICKNESS
	f	Lexv;	h	OUTER_SHAPE
	f	[Lexv;	i	SHAPES
c	dhj$a	net/minecraft/world/level/block/BlockComposter$ContainerEmpty
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
c	dhj$b	net/minecraft/world/level/block/BlockComposter$ContainerInput
	m	(Ldtc;Ldcx;Ljd;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	()I	al_	getMaxStackSize
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldtc;	b	state
	f	Ldcx;	c	level
	f	Ljd;	d	pos
	f	Z	e	changed
c	dhj$c	net/minecraft/world/level/block/BlockComposter$ContainerOutput
	m	(Ldtc;Ldcx;Ljd;Lcuq;)V	<init>	<init>
		p	1		state
		p	2		world
		p	3		pos
		p	4		outputItem
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	()I	al_	getMaxStackSize
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	()V	e	setChanged
	f	Ldtc;	b	state
	f	Ldcx;	c	level
	f	Ljd;	d	pos
	f	Z	e	changed
c	dhk	net/minecraft/world/level/block/BlockConcretePowder
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		hardened
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Z	a	touchesLiquid
		p	0		world
		p	1		pos
	m	(Ldcc;Ljd;Ldtc;)Z	a	shouldSolidify
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Ldtc;Lcjg;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
	m	(Ldhk;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcc;Ljd;)I	b	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	n	canSolidify
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfy;	b	concrete
c	dhl	net/minecraft/world/level/block/BlockConduit
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	WATERLOGGED
	f	Lexv;	c	SHAPE
	f	I	d	SIZE
c	dhm	net/minecraft/world/level/block/CopperBulbBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;)V	a	checkAndFlip
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	POWERED
	f	Ldtt;	c	LIT
c	dhn	net/minecraft/world/level/block/BlockCoral
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Z	a	scanForWater
		p	1		world
		p	2		pos
	m	(Ldhn;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lcom/mojang/serialization/MapCodec;	a	DEAD_CORAL_FIELD
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldfy;	c	deadBlock
c	dho	net/minecraft/world/level/block/BlockCoralFan
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldho;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldfy;	c	deadBlock
c	dhp	net/minecraft/world/level/block/BlockCoralPlant
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldhp;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
	f	Ldfy;	e	deadBlock
c	dhq	net/minecraft/world/level/block/BlockCoralFanWall
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		deadCoralBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldhq;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldfy;	f	deadBlock
c	dhr	net/minecraft/world/level/block/CrafterBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ljd;Ldqv;Lcuq;Ldtc;Lczb;)V	a	dispenseItem
		p	1		world
		p	2		pos
		p	3		blockEntity
		p	4		stack
		p	5		state
		p	6		recipe
	m	(Lcuq;)V	a	lambda$dispenseFrom$0
		p	0		stack
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Lcyp;)Ljava/util/Optional;	a	getPotentialResults
		p	0		world
		p	1		input
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldqh;Z)V	a	setBlockEntityTriggered
		p	1		blockEntity
		p	2		triggered
	m	(Ldtc;Laqu;Ljd;)V	a	dispenseFrom
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	CRAFTING
	f	Ldtt;	c	TRIGGERED
	f	Ldua;	d	ORIENTATION
	f	I	e	MAX_CRAFTING_TICKS
	f	I	f	CRAFTING_TICK_DELAY
	f	Lcza;	g	RECIPE_CACHE
	f	I	h	CRAFTER_ADVANCEMENT_DIAMETER
c	dhr$1	net/minecraft/world/level/block/CrafterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dhs	net/minecraft/world/level/block/BlockWorkbench
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lwz;	b	CONTAINER_TITLE
c	dht	net/minecraft/world/level/block/BlockCrops
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;Ldtc;)V	a	growCrops
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;)Z	a	hasSufficientLight
		p	0		world
		p	1		pos
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfy;Ldcc;Ljd;)F	a	getGrowthSpeed
		p	0		block
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lduc;	b	getAgeProperty
	m	(I)Ldtc;	b	getStateForAge
		p	1		age
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	()I	c	getMaxAge
	m	()Ldcv;	d	getBaseSeedId
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	(Ldtc;)I	g	getAge
		p	1		state
	m	(Ldtc;)Z	h	isMaxAge
		p	1		state
	f	[Lexv;	a	SHAPE_BY_AGE
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	MAX_AGE
	f	Lduc;	f	AGE
c	dhu	net/minecraft/world/level/block/BlockTall
	m	(FFFFFLdtb$d;)V	<init>	<init>
		p	1		radius1
		p	2		radius2
		p	3		boundingHeight1
		p	4		boundingHeight2
		p	5		collisionHeight
		p	6		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FFFFF)[Lexv;	a	makeShapes
		p	1		radius1
		p	2		radius2
		p	3		height1
		p	4		offset2
		p	5		height2
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lji;)I	a	indexFor
		p	0		dir
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)I	g	getAABBIndex
		p	1		state
	m	(Ldtc;)I	m	lambda$getAABBIndex$1
		p	0		statex
	f	Ldtt;	a	NORTH
	f	Ldtt;	b	EAST
	f	Ldtt;	c	SOUTH
	f	Ldtt;	d	WEST
	f	Ldtt;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	[Lexv;	g	collisionShapeByIndex
	f	[Lexv;	h	shapeByIndex
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	i	stateToIndex
c	dhu$1	net/minecraft/world/level/block/BlockTall$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dhv	net/minecraft/world/level/block/BlockCryingObsidian
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dhw	net/minecraft/world/level/block/BlockDaylightDetector
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Ldqw;)V	a	tickEntity
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	updateSignalStrength
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	POWER
	f	Ldtt;	c	INVERTED
	f	Lexv;	d	SHAPE
c	dhx	net/minecraft/world/level/block/BlockDeadBush
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
c	dhy	net/minecraft/world/level/block/DecoratedPotBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		options
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldqx;Ljava/util/function/Consumer;)V	a	lambda$getDrops$0
		p	1		lootConsumer
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/List;Ljava/util/Optional;)V	a	lambda$appendHoverText$1
		p	1		sherd
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Ldnm;	g_	getSoundType
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	b	SHERDS_DYNAMIC_DROP_ID
	f	Ldtt;	c	CRACKED
	f	Lexv;	d	BOUNDING_BOX
	f	Ldtw;	e	HORIZONTAL_FACING
	f	Ldtt;	f	WATERLOGGED
c	dhz	net/minecraft/world/level/block/BlockMinecartDetector
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)Z	a	lambda$getAnalogOutputSignal$1
		p	0		cart
	m	(Ldcw;Ljd;Ldtc;)V	a	checkPressed
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
		p	1		world
		p	2		pos
		p	3		entityClass
		p	4		entityPredicate
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;)Lewx;	a	getSearchBB
		p	1		pos
	m	(Lbsr;)Z	b	lambda$checkPressed$0
		p	0		entity
	m	(Ldcw;Ljd;Ldtc;Z)V	b	updatePowerToConnected
		p	1		world
		p	2		pos
		p	3		state
		p	4		unpowering
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	()Lduf;	c	getShapeProperty
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldua;	e	SHAPE
	f	Ldtt;	f	POWERED
	f	I	g	PRESSED_CHECK_PERIOD
c	dhz$1	net/minecraft/world/level/block/BlockMinecartDetector$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dia	net/minecraft/world/level/block/BlockDiodeAbstract
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;Ldtc;)I	a	getOutputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)Z	a	shouldTurnOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Lddm;Ljd;Ldtc;)I	a	getAlternateSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	()Z	b	sideInputDiodesOnly
	m	(Ldcc;Ljd;Ldtc;)Z	b	shouldPrioritize
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)I	b	getInputSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;Ldtc;)Z	b	canSurviveOn
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldcw;Ljd;Ldtc;)V	c	checkTickOnNeighbor
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;Ldtc;)Z	c	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	d	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;)I	g	getDelay
		p	1		state
	m	(Ldtc;)Z	m	isDiode
		p	0		state
	f	Lexv;	c	SHAPE
	f	Ldtt;	d	POWERED
c	dib	net/minecraft/world/level/block/BlockDirectional
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ldtw;	a	FACING
c	dic	net/minecraft/world/level/block/BlockGrassPath
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	did	net/minecraft/world/level/block/BlockDispenser
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ldtc;Ljd;)V	a	dispenseFrom
		p	1		world
		p	2		state
		p	3		pos
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcv;)V	a	registerProjectileBehavior
		p	0		projectile
	m	(Ldcv;Lkx;)V	a	registerBehavior
		p	0		provider
		p	1		behavior
	m	(Ldcw;Lcuq;)Lkx;	a	getDispenseMethod
		p	1		world
		p	2		stack
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		map
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lku;)Ljw;	a	getDispensePosition
		p	0		pointer
	m	(Lku;DLexc;)Ljw;	a	getDispensePosition
		p	0		pointer
		p	1		facingOffset
		p	3		constantOffset
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	TRIGGERED
	f	Ljava/util/Map;	d	DISPENSER_REGISTRY
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lkw;	f	DEFAULT_BEHAVIOR
	f	I	g	TRIGGER_DURATION
c	die	net/minecraft/world/level/block/BlockDoor
	m	(Ldtr;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcw;Ldtc;Ljd;Z)V	a	setOpen
		p	1		entity
		p	2		world
		p	3		state
		p	4		pos
		p	5		open
	m	(Lbsr;Ldcw;Ljd;Z)V	a	playSound
		p	1		entity
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;)Z	a	isWoodenDoor
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Ljd;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldtr;	b	type
	m	(Lcyd;)Ldtx;	b	getHinge
		p	1		ctx
	m	(Ldtc;)Z	m	isOpen
		p	1		state
	m	(Ldtc;)Z	n	isWoodenDoor
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	OPEN
	f	Ldua;	d	HINGE
	f	Ldtt;	e	POWERED
	f	Ldua;	f	HALF
	f	F	g	AABB_DOOR_THICKNESS
	f	Lexv;	h	SOUTH_AABB
	f	Lexv;	i	NORTH_AABB
	f	Lexv;	j	WEST_AABB
	f	Lexv;	k	EAST_AABB
	f	Ldtr;	l	type
c	die$1	net/minecraft/world/level/block/BlockDoor$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	dif	net/minecraft/world/level/block/DoubleBlockFinder
	m	(Ldqj;Ljava/util/function/Function;Ljava/util/function/Function;Ldtw;Ldtc;Ldcx;Ljd;Ljava/util/function/BiPredicate;)Ldif$c;	a	combineWithNeigbour
		p	0		blockEntityType
		p	1		typeMapper
		p	2		directionMapper
		p	3		directionProperty
		p	4		state
		p	5		world
		p	6		pos
		p	7		fallbackTester
c	dif$a	net/minecraft/world/level/block/DoubleBlockFinder$BlockType
	m	()[Ldif$a;	a	$values
	f	Ldif$a;	a	SINGLE
	f	Ldif$a;	b	FIRST
	f	Ldif$a;	c	SECOND
	f	[Ldif$a;	d	$VALUES
c	dif$b	net/minecraft/world/level/block/DoubleBlockFinder$Combiner
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
		p	1		single
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
		p	1		first
		p	2		second
	m	()Ljava/lang/Object;	b	acceptNone
c	dif$c	net/minecraft/world/level/block/DoubleBlockFinder$Result
	m	(Ldif$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
c	dif$c$a	net/minecraft/world/level/block/DoubleBlockFinder$Result$Double
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
		p	1		first
		p	2		second
	m	(Ldif$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
c	dif$c$b	net/minecraft/world/level/block/DoubleBlockFinder$Result$Single
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		single
	m	(Ldif$b;)Ljava/lang/Object;	apply	apply
		p	1		retriever
	f	Ljava/lang/Object;	a	single
c	dig	net/minecraft/world/level/block/BlockTallPlant
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Lcmx;Ljd;Ldtc;Ldqh;Lcuq;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcx;Ldtc;Ljd;I)V	a	placeAt
		p	0		world
		p	1		state
		p	2		pos
		p	3		flags
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ljd;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcw;Ljd;Ldtc;Lcmx;)V	b	preventDropFromBottomPart
		p	0		world
		p	1		pos
		p	2		state
		p	3		player
	m	(Ldcz;Ljd;Ldtc;)Ldtc;	c	copyWaterloggedFrom
		p	0		world
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	HALF
c	dih	net/minecraft/world/level/block/BlockDragonEgg
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	a_	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	()I	b	getDelayAfterPlace
	m	(Ldtc;Ldcw;Ljd;)V	d	teleport
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	dii	net/minecraft/world/level/block/DropExperienceBlock
	m	(Lbpw;Ldtb$d;)V	<init>	<init>
		p	1		experienceDropped
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldii;)Lbpw;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	xpRange
c	dij	net/minecraft/world/level/block/BlockDropper
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ldtc;Ljd;)V	a	dispenseFrom
		p	1		world
		p	2		state
		p	3		pos
	m	(Ldcw;Lcuq;)Lkx;	a	getDispenseMethod
		p	1		world
		p	2		stack
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lkx;	g	DISPENSE_BEHAVIOUR
c	dik	net/minecraft/world/level/block/BlockEnchantmentTable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$1
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldcw;Ljd;Ljd;)Z	a	isValidBookShelf
		p	0		world
		p	1		tablePos
		p	2		providerOffset
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ljd;)Z	a	lambda$static$0
		p	0		pos
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	Ljava/util/List;	c	BOOKSHELF_OFFSETS
c	dil	net/minecraft/world/level/block/BlockEndGateway
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Lbsr;Ljd;)Leqc;	a	getPortalDestination
		p	1		world
		p	2		entity
		p	3		pos
	m	(Lbsr;)Lexc;	a	calculateExitMovement
		p	0		entity
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Lepd;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dim	net/minecraft/world/level/block/BlockEnderPortal
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Lbsr;Ljd;)Leqc;	a	getPortalDestination
		p	1		world
		p	2		entity
		p	3		pos
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Lepd;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	din	net/minecraft/world/level/block/BlockEnderPortalFrame
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ldth;	b	getOrCreatePortalShape
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	HAS_EYE
	f	Lexv;	d	BASE_SHAPE
	f	Lexv;	e	EYE_SHAPE
	f	Lexv;	f	FULL_SHAPE
	f	Ldth;	g	portalShape
c	dio	net/minecraft/world/level/block/BlockEndRod
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dip	net/minecraft/world/level/block/BlockEnderChest
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcrh;ILcmw;Lcmx;)Lcpu;	a	lambda$useWithoutItem$1
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Z)Ldif$c;	a	combine
		p	1		state
		p	2		world
		p	3		pos
		p	4		ignoreBlocked
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldqj;	m	lambda$new$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtw;	c	FACING
	f	Ldtt;	d	WATERLOGGED
	f	Lexv;	e	SHAPE
	f	Lwz;	f	CONTAINER_TITLE
c	diq	net/minecraft/world/level/block/ITileEntity
	m	(Laqu;Ldqh;)Ldyb;	a	getListener
		p	1		world
		p	2		blockEntity
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
c	dir	net/minecraft/world/level/block/EquipableCarvedPumpkinBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lbsy;	m	getEquipmentSlot
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dis	net/minecraft/world/level/block/BlockAttachable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldcz;Ljd;Lji;)Z	b	canAttach
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;)Lji;	m	getConnectedDirection
		p	0		state
	f	Ldua;	K	FACE
c	dis$1	net/minecraft/world/level/block/BlockAttachable$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	dit	net/minecraft/world/level/block/Fallable
	m	(Lbsr;)Lbrk;	a	getFallDamageSource
		p	1		attacker
	m	(Ldcw;Ljd;Lcjg;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldcw;Ljd;Ldtc;Ldtc;Lcjg;)V	a	onLand
		p	1		world
		p	2		pos
		p	3		fallingBlockState
		p	4		currentStateInPos
		p	5		fallingBlockEntity
c	diu	net/minecraft/world/level/block/BlockFalling
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcjg;)V	a	falling
		p	1		entity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()I	b	getDelayAfterPlace
	m	(Ldtc;Ldcc;Ljd;)I	b	getDustColor
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	m	isFree
		p	0		state
c	div	net/minecraft/world/level/block/BlockSoil
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldtc;Ldcw;Ljd;)V	a	turnToDirt
		p	0		entity
		p	1		state
		p	2		world
		p	3		pos
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Z	a	shouldMaintainFarmland
		p	0		world
		p	1		pos
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcz;Ljd;)Z	a	isNearWater
		p	0		world
		p	1		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	MOISTURE
	f	Lexv;	c	SHAPE
	f	I	d	MAX_MOISTURE
c	diw	net/minecraft/world/level/block/BlockFence
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;ZLji;)Z	a	connectsTo
		p	1		state
		p	2		neighborIsFullSquare
		p	3		dir
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	m	isSameFence
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	i	CODEC
	f	[Lexv;	j	occlusionByIndex
c	dix	net/minecraft/world/level/block/BlockFenceGate
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldix;)Ldup;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;)Z	a	connectsToDirection
		p	0		state
		p	1		side
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	m	isWall
		p	1		state
	f	Lexv;	F	X_OCCLUSION_SHAPE_LOW
	f	Ldup;	G	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	OPEN
	f	Ldtt;	c	POWERED
	f	Ldtt;	d	IN_WALL
	f	Lexv;	e	Z_SHAPE
	f	Lexv;	f	X_SHAPE
	f	Lexv;	g	Z_SHAPE_LOW
	f	Lexv;	h	X_SHAPE_LOW
	f	Lexv;	i	Z_COLLISION_SHAPE
	f	Lexv;	j	X_COLLISION_SHAPE
	f	Lexv;	k	Z_SUPPORT_SHAPE
	f	Lexv;	l	X_SUPPORT_SHAPE
	f	Lexv;	m	Z_OCCLUSION_SHAPE
	f	Lexv;	n	X_OCCLUSION_SHAPE
	f	Lexv;	o	Z_OCCLUSION_SHAPE_LOW
c	dix$1	net/minecraft/world/level/block/BlockFenceGate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	diy	net/minecraft/world/level/block/BlockFire
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Layw;)I	a	getFireTickDelay
		p	0		random
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;)Z	a	isNearRain
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;ILayw;I)V	a	checkBurnOut
		p	1		world
		p	2		pos
		p	3		spreadFactor
		p	4		random
		p	5		currentAge
	m	(Ldcx;Ljd;I)Ldtc;	a	getStateWithAge
		p	1		world
		p	2		pos
		p	3		age
	m	(Ldcz;Ljd;)I	a	getIgniteOdds
		p	1		world
		p	2		pos
	m	(Ldfy;II)V	a	setFlammable
		p	1		block
		p	2		burnChance
		p	3		spreadChance
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	()V	b	bootStrap
	m	(Ldcc;Ljd;)Ldtc;	b	getStateForPlacement
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldcc;Ljd;)Z	d	isValidFireLocation
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	f	canBurn
		p	1		state
	m	(Ldtc;)Lexv;	m	calculateShape
		p	0		state
	m	(Ldtc;)I	n	getBurnOdds
		p	1		state
	m	(Ldtc;)I	o	getIgniteOdds
		p	1		state
	m	(Ldtc;)Z	p	lambda$new$1
		p	0		state
	f	Lexv;	F	SOUTH_AABB
	f	Ljava/util/Map;	G	shapesCache
	f	I	H	IGNITE_INSTANT
	f	I	I	IGNITE_EASY
	f	I	J	IGNITE_MEDIUM
	f	I	K	IGNITE_HARD
	f	I	L	BURN_INSTANT
	f	I	M	BURN_EASY
	f	I	N	BURN_MEDIUM
	f	I	O	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	P	igniteOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	Q	burnOdds
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MAX_AGE
	f	Lduc;	e	AGE
	f	Ldtt;	f	NORTH
	f	Ldtt;	g	EAST
	f	Ldtt;	h	SOUTH
	f	Ldtt;	i	WEST
	f	Ldtt;	j	UP
	f	Ljava/util/Map;	k	PROPERTY_BY_DIRECTION
	f	Lexv;	l	UP_AABB
	f	Lexv;	m	WEST_AABB
	f	Lexv;	n	EAST_AABB
	f	Lexv;	o	NORTH_AABB
c	diz	net/minecraft/world/level/block/BlockFletchingTable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dja	net/minecraft/world/level/block/BlockFlowers
	m	(Lcxw;Ldtb$d;)V	<init>	<init>
		p	1		stewEffects
		p	2		settings
	m	(Ljm;FLdtb$d;)V	<init>	<init>
		p	1		stewEffect
		p	2		effectLengthInSeconds
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ljm;F)Lcxw;	a	makeEffectList
		p	0		effect
		p	1		effectLengthInSeconds
	m	()Lcxw;	b	getSuspiciousEffects
	f	Lcom/mojang/serialization/MapCodec;	a	EFFECTS_FIELD
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	F	c	AABB_OFFSET
	f	Lexv;	d	SHAPE
	f	Lcxw;	e	suspiciousStewEffects
c	djb	net/minecraft/world/level/block/BlockFlowerPot
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		content
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldjb;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Ldfy;	b	getPotted
	m	()Z	m	isEmpty
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_SIZE
	f	Lexv;	c	SHAPE
	f	Ljava/util/Map;	d	POTTED_BY_CONTENT
	f	Ldfy;	e	potted
c	djc	net/minecraft/world/level/block/FrogspawnBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(II)V	a	setHatchDelay
		p	0		min
		p	1		max
	m	(Laqu;Ljd;Layw;)V	a	hatchFrogspawn
		p	1		world
		p	2		pos
		p	3		random
	m	(Layw;)I	a	getFrogspawnHatchDelay
		p	0		random
	m	(Ldcc;Ljd;)Z	a	mayPlaceOn
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;)V	a	destroyBlock
		p	1		world
		p	2		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()V	b	setDefaultHatchDelay
	m	(Laqu;Ljd;Layw;)V	b	spawnTadpoles
		p	1		world
		p	2		pos
		p	3		random
	m	(Layw;)D	b	getRandomTadpolePositionOffset
		p	1		random
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	I	c	MIN_TADPOLES_SPAWN
	f	I	d	MAX_TADPOLES_SPAWN
	f	I	e	DEFAULT_MIN_HATCH_TICK_DELAY
	f	I	f	DEFAULT_MAX_HATCH_TICK_DELAY
	f	I	g	minHatchTickDelay
	f	I	h	maxHatchTickDelay
c	djd	net/minecraft/world/level/block/BlockIceFrost
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcc;Ljd;I)Z	a	fewerNeigboursThan
		p	1		world
		p	2		pos
		p	3		maxNeighbors
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;Ldcw;Ljd;)Z	e	slightlyMelt
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	I	f	NEIGHBORS_TO_AGE
	f	I	g	NEIGHBORS_TO_MELT
c	dje	net/minecraft/world/level/block/BlockFungi
	m	(Lakq;Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		featureKey
		p	2		nylium
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Layw;Ljd;Ljm;)V	a	lambda$performBonemeal$3
		p	3		featureEntry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;)Ljava/util/Optional;	a	getFeature
		p	1		world
	m	(Ldje;)Ldfy;	a	lambda$static$1
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldje;)Lakq;	b	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	D	c	BONEMEAL_SUCCESS_PROBABILITY
	f	Ldfy;	d	requiredBlock
	f	Lakq;	e	feature
c	djf	net/minecraft/world/level/block/BlockFurnaceFurace
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Lcmx;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	djg	net/minecraft/world/level/block/GameMasterBlock
c	djh	net/minecraft/world/level/block/BlockGlazedTerracotta
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dji	net/minecraft/world/level/block/GlowLichenBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILdtc;)I	a	lambda$emission$0
		p	1		state
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcz;Ljd;Lji;)Z	a	lambda$isValidBonemealTarget$1
		p	4		direction
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
		p	0		luminance
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldkz;	c	getSpreader
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	c	WATERLOGGED
	f	Ldkz;	d	spreader
c	djj	net/minecraft/world/level/block/BlockGrass
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	()Ldgb$a;	au_	getType
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	djk	net/minecraft/world/level/block/BlockGrindstone
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Lexv;	n	getVoxelShape
		p	1		state
	f	Lexv;	F	FLOOR_EAST_WEST_ALL_LEGS
	f	Lexv;	G	FLOOR_EAST_WEST_GRINDSTONE
	f	Lexv;	H	WALL_SOUTH_LEFT_POST
	f	Lexv;	I	WALL_SOUTH_RIGHT_POST
	f	Lexv;	J	WALL_SOUTH_LEFT_PIVOT
	f	Lexv;	L	WALL_SOUTH_RIGHT_PIVOT
	f	Lexv;	M	WALL_SOUTH_LEFT_LEG
	f	Lexv;	N	WALL_SOUTH_RIGHT_LEG
	f	Lexv;	O	WALL_SOUTH_ALL_LEGS
	f	Lexv;	P	WALL_SOUTH_GRINDSTONE
	f	Lexv;	Q	WALL_NORTH_LEFT_POST
	f	Lexv;	R	WALL_NORTH_RIGHT_POST
	f	Lexv;	S	WALL_NORTH_LEFT_PIVOT
	f	Lexv;	T	WALL_NORTH_RIGHT_PIVOT
	f	Lexv;	U	WALL_NORTH_LEFT_LEG
	f	Lexv;	V	WALL_NORTH_RIGHT_LEG
	f	Lexv;	W	WALL_NORTH_ALL_LEGS
	f	Lexv;	X	WALL_NORTH_GRINDSTONE
	f	Lexv;	Y	WALL_WEST_LEFT_POST
	f	Lexv;	Z	WALL_WEST_RIGHT_POST
	f	Lexv;	aA	CEILING_EAST_WEST_LEFT_LEG
	f	Lexv;	aB	CEILING_EAST_WEST_RIGHT_LEG
	f	Lexv;	aC	CEILING_EAST_WEST_ALL_LEGS
	f	Lexv;	aD	CEILING_EAST_WEST_GRINDSTONE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lwz;	aR	CONTAINER_TITLE
	f	Lexv;	aa	WALL_WEST_LEFT_PIVOT
	f	Lexv;	ab	WALL_WEST_RIGHT_PIVOT
	f	Lexv;	ac	WALL_WEST_LEFT_LEG
	f	Lexv;	ad	WALL_WEST_RIGHT_LEG
	f	Lexv;	ae	WALL_WEST_ALL_LEGS
	f	Lexv;	af	WALL_WEST_GRINDSTONE
	f	Lexv;	ag	WALL_EAST_LEFT_POST
	f	Lexv;	ah	WALL_EAST_RIGHT_POST
	f	Lexv;	ai	WALL_EAST_LEFT_PIVOT
	f	Lexv;	aj	WALL_EAST_RIGHT_PIVOT
	f	Lexv;	ak	WALL_EAST_LEFT_LEG
	f	Lexv;	al	WALL_EAST_RIGHT_LEG
	f	Lexv;	am	WALL_EAST_ALL_LEGS
	f	Lexv;	an	WALL_EAST_GRINDSTONE
	f	Lexv;	ao	CEILING_NORTH_SOUTH_LEFT_POST
	f	Lexv;	ap	CEILING_NORTH_SOUTH_RIGHT_POST
	f	Lexv;	aq	CEILING_NORTH_SOUTH_LEFT_PIVOT
	f	Lexv;	ar	CEILING_NORTH_SOUTH_RIGHT_PIVOT
	f	Lexv;	as	CEILING_NORTH_SOUTH_LEFT_LEG
	f	Lexv;	at	CEILING_NORTH_SOUTH_RIGHT_LEG
	f	Lexv;	au	CEILING_NORTH_SOUTH_ALL_LEGS
	f	Lexv;	av	CEILING_NORTH_SOUTH_GRINDSTONE
	f	Lexv;	aw	CEILING_EAST_WEST_LEFT_POST
	f	Lexv;	ax	CEILING_EAST_WEST_RIGHT_POST
	f	Lexv;	ay	CEILING_EAST_WEST_LEFT_PIVOT
	f	Lexv;	az	CEILING_EAST_WEST_RIGHT_PIVOT
	f	Lexv;	b	FLOOR_NORTH_SOUTH_LEFT_POST
	f	Lexv;	c	FLOOR_NORTH_SOUTH_RIGHT_POST
	f	Lexv;	d	FLOOR_NORTH_SOUTH_LEFT_PIVOT
	f	Lexv;	e	FLOOR_NORTH_SOUTH_RIGHT_PIVOT
	f	Lexv;	f	FLOOR_NORTH_SOUTH_LEFT_LEG
	f	Lexv;	g	FLOOR_NORTH_SOUTH_RIGHT_LEG
	f	Lexv;	h	FLOOR_NORTH_SOUTH_ALL_LEGS
	f	Lexv;	i	FLOOR_NORTH_SOUTH_GRINDSTONE
	f	Lexv;	j	FLOOR_EAST_WEST_LEFT_POST
	f	Lexv;	k	FLOOR_EAST_WEST_RIGHT_POST
	f	Lexv;	l	FLOOR_EAST_WEST_LEFT_PIVOT
	f	Lexv;	m	FLOOR_EAST_WEST_RIGHT_PIVOT
	f	Lexv;	n	FLOOR_EAST_WEST_LEFT_LEG
	f	Lexv;	o	FLOOR_EAST_WEST_RIGHT_LEG
c	djk$1	net/minecraft/world/level/block/BlockGrindstone$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	djl	net/minecraft/world/level/block/BlockGrowingAbstract
	m	(Ldtb$d;Lji;Lexv;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcx;)Ldtc;	a	getStateForPlacement
		p	1		world
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	()Ldfy;	b	getBodyBlock
	m	()Ldjn;	c	getHeadBlock
	m	(Ldtc;)Z	m	canAttachTo
		p	1		state
	f	Lji;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Lexv;	d	shape
c	djm	net/minecraft/world/level/block/BlockGrowingStem
	m	(Ldtb$d;Lji;Lexv;Z)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcc;Ljd;Ldfy;)Ljava/util/Optional;	a	getHeadPos
		p	1		world
		p	2		pos
		p	3		block
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldtc;)Ldtc;	a	updateHeadAfterConvertedFromBody
		p	1		from
		p	2		to
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	()Ldfy;	b	getBodyBlock
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
c	djn	net/minecraft/world/level/block/BlockGrowingTop
	m	(Ldtb$d;Lji;Lexv;ZD)V	<init>	<init>
		p	1		settings
		p	2		growthDirection
		p	3		outlineShape
		p	4		tickWater
		p	5		growthChance
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcx;)Ldtc;	a	getStateForPlacement
		p	1		world
	m	(Ldtc;Layw;)Ldtc;	a	getGrowIntoState
		p	1		state
		p	2		random
	m	(Ldtc;Ldtc;)Ldtc;	a	updateBodyAfterConvertedFromHead
		p	1		from
		p	2		to
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ldjn;	c	getHeadBlock
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	(Ldtc;)Z	g	canGrowInto
		p	1		state
	m	(Ldtc;)Ldtc;	n	getMaxAgeState
		p	1		state
	m	(Ldtc;)Z	o	isMaxAge
		p	1		state
	f	D	c	growPerTickProbability
	f	Lduc;	e	AGE
	f	I	f	MAX_AGE
c	djo	net/minecraft/world/level/block/BlockHalfTransparent
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	djp	net/minecraft/world/level/block/HangingRootsBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	Ldtt;	c	WATERLOGGED
c	djq	net/minecraft/world/level/block/BlockHay
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	djr	net/minecraft/world/level/block/HeavyCoreBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	djs	net/minecraft/world/level/block/BlockHoney
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)V	a	showSlideParticles
		p	0		entity
	m	(Lbsr;I)V	a	showParticles
		p	0		entity
		p	1		count
	m	(Lbsr;Ljd;)V	a	maybeDoSlideAchievement
		p	1		entity
		p	2		pos
	m	(Ldcw;Lbsr;)V	a	maybeDoSlideEffects
		p	1		world
		p	2		entity
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ljd;Lbsr;)Z	a	isSlidingDown
		p	1		pos
		p	2		entity
	m	(Lbsr;)V	b	showJumpParticles
		p	0		entity
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Lbsr;)Z	c	doesEntityDoHoneyBlockSlideEffects
		p	0		entity
	m	(Lbsr;)V	d	doSlideMovement
		p	1		entity
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	D	c	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	e	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	f	THROTTLE_SLIDE_SPEED_TO
	f	I	g	SLIDE_ADVANCEMENT_CHECK_INTERVAL
c	djt	net/minecraft/world/level/block/BlockHopper
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;)V	a	checkPoweredState
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lexv;	F	NORTH_INTERACTION_SHAPE
	f	Lexv;	G	SOUTH_INTERACTION_SHAPE
	f	Lexv;	H	WEST_INTERACTION_SHAPE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	ENABLED
	f	Lexv;	d	TOP
	f	Lexv;	e	FUNNEL
	f	Lexv;	f	CONVEX_BASE
	f	Lexv;	g	INSIDE
	f	Lexv;	h	BASE
	f	Lexv;	i	DOWN_SHAPE
	f	Lexv;	j	EAST_SHAPE
	f	Lexv;	k	NORTH_SHAPE
	f	Lexv;	l	SOUTH_SHAPE
	f	Lexv;	m	WEST_SHAPE
	f	Lexv;	n	DOWN_INTERACTION_SHAPE
	f	Lexv;	o	EAST_INTERACTION_SHAPE
c	djt$1	net/minecraft/world/level/block/BlockHopper$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dju	net/minecraft/world/level/block/BlockFacingHorizontal
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	f	Ldtw;	aE	FACING
c	djv	net/minecraft/world/level/block/BlockHugeMushroom
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	NORTH
	f	Ldtt;	c	EAST
	f	Ldtt;	d	SOUTH
	f	Ldtt;	e	WEST
	f	Ldtt;	f	UP
	f	Ldtt;	g	DOWN
	f	Ljava/util/Map;	h	PROPERTY_BY_DIRECTION
c	djw	net/minecraft/world/level/block/BlockIce
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Lcmx;Ljd;Ldtc;Ldqh;Lcuq;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	()Ldtc;	b	meltsInto
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)V	d	melt
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
c	djx	net/minecraft/world/level/block/BlockMonsterEggs
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ljd;)V	a	spawnInfestation
		p	1		world
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ljava/util/Map;Ldtc;Ljava/util/function/Supplier;)Ldtc;	a	getNewStateWithProperties
		p	0		stateMap
		p	1		fromState
		p	2		toStateSupplier
	m	(Ljava/util/function/Supplier;Ldtc;)Ldtc;	a	lambda$getNewStateWithProperties$3
		p	1		infestedState
	m	()Ldfy;	b	getHostBlock
	m	()Ldtc;	m	lambda$hostStateByInfested$2
	m	(Ldtc;)Z	m	isCompatibleHostBlock
		p	0		block
	m	(Ldtc;)Ldtc;	n	infestedStateByHost
		p	0		regularState
	m	(Ldtc;)Ldtc;	o	hostStateByInfested
		p	1		infestedState
	m	(Ldtc;)Ldtc;	p	lambda$infestedStateByHost$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfy;	b	hostBlock
	f	Ljava/util/Map;	c	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	d	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	e	INFESTED_TO_HOST_STATES
c	djy	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		regularBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	djz	net/minecraft/world/level/block/BlockIronBars
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Z)Z	a	attachsTo
		p	1		state
		p	2		sideSolidFullSquare
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	i	CODEC
c	dka	net/minecraft/world/level/block/BlockJigsaw
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lent$c;Lent$c;)Z	a	canAttach
		p	0		info1
		p	1		info2
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lji;)Ldri$a;	a	lambda$canAttach$0
	m	(Ldtc;)Lji;	m	getFrontFacing
		p	0		state
	m	(Ldtc;)Lji;	n	getTopFacing
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	ORIENTATION
c	dkb	net/minecraft/world/level/block/BlockJukeBox
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	HAS_RECORD
c	dkc	net/minecraft/world/level/block/BlockKelp
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Ldfy;	b	getBodyBlock
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	g	canGrowInto
		p	1		state
	m	(Ldtc;)Z	m	canAttachTo
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lexv;	g	SHAPE
	f	D	h	GROW_PER_TICK_PROBABILITY
c	dkd	net/minecraft/world/level/block/BlockKelpPlant
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldjn;	c	getHeadBlock
	m	(Ldtc;)Z	m	canAttachTo
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dke	net/minecraft/world/level/block/BlockLadder
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;Lji;)Z	a	canAttachTo
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	WATERLOGGED
	f	F	d	AABB_OFFSET
	f	Lexv;	e	EAST_AABB
	f	Lexv;	f	WEST_AABB
	f	Lexv;	g	SOUTH_AABB
	f	Lexv;	h	NORTH_AABB
c	dke$1	net/minecraft/world/level/block/BlockLadder$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dkf	net/minecraft/world/level/block/BlockLantern
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Lji;	m	getConnectedDirection
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	HANGING
	f	Ldtt;	c	WATERLOGGED
	f	Lexv;	d	AABB
	f	Lexv;	e	HANGING_AABB
c	dkg	net/minecraft/world/level/block/LavaCauldronBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;)D	b	getContentHeight
		p	1		state
	m	(Ldtc;)Z	d	isFull
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	dkh	net/minecraft/world/level/block/LayeredCauldronBlock
	m	(Lddw$c;Lkj$a;Ldtb$d;)V	<init>	<init>
		p	1		precipitation
		p	2		behaviorMap
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldkh;)Lkj$a;	a	lambda$static$1
		p	0		block
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Lddw$c;)V	a	handlePrecipitation
		p	1		state
		p	2		world
		p	3		pos
		p	4		precipitation
	m	(Ldtc;Ldcw;Ljd;Lepd;)V	a	receiveStalactiteDrip
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lepd;)Z	a	canReceiveStalactiteDrip
		p	1		fluid
	m	(Ldkh;)Lddw$c;	b	lambda$static$0
		p	0		block
	m	(Ldtc;)D	b	getContentHeight
		p	1		state
	m	(Ldtc;)Z	d	isFull
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	lowerFillLevel
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcw;Ljd;)V	e	handleEntityOnFireInside
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	MIN_FILL_LEVEL
	f	I	f	MAX_FILL_LEVEL
	f	Lduc;	g	LEVEL
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	Lddw$c;	j	precipitationType
c	dki	net/minecraft/world/level/block/BlockLeaves
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcx;Ljd;)Ldtc;	a	updateDistance
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	m	decaying
		p	1		state
	m	(Ldtc;)Ljava/util/OptionalInt;	n	getOptionalDistanceAt
		p	0		state
	m	(Ldtc;)I	o	getDistanceAt
		p	0		state
	f	I	a	TICK_DELAY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	c	DECAY_DISTANCE
	f	Lduc;	d	DISTANCE
	f	Ldtt;	e	PERSISTENT
	f	Ldtt;	f	WATERLOGGED
c	dkj	net/minecraft/world/level/block/BlockLectern
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcw;Ljd;Ldtc;Z)V	a	resetBookState
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		hasBook
	m	(Lbtn;Ldcw;Ljd;Ldtc;Lcuq;)Z	a	tryPlaceBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Lcmx;)V	a	openScreen
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldcw;Ljd;Ldtc;)V	a	signalPageChange
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Z)V	a	changePowered
		p	0		world
		p	1		pos
		p	2		state
		p	3		powered
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Lbtn;Ldcw;Ljd;Ldtc;Lcuq;)V	b	placeBook
		p	0		user
		p	1		world
		p	2		pos
		p	3		state
		p	4		stack
	m	(Ldcw;Ljd;Ldtc;)V	b	updateBelow
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	popBook
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	POWERED
	f	Ldtt;	d	HAS_BOOK
	f	Lexv;	e	SHAPE_BASE
	f	Lexv;	f	SHAPE_POST
	f	Lexv;	g	SHAPE_COMMON
	f	Lexv;	h	SHAPE_TOP_PLATE
	f	Lexv;	i	SHAPE_COLLISION
	f	Lexv;	j	SHAPE_WEST
	f	Lexv;	k	SHAPE_NORTH
	f	Lexv;	l	SHAPE_EAST
	f	Lexv;	m	SHAPE_SOUTH
	f	I	n	PAGE_CHANGE_IMPULSE_TICKS
c	dkj$1	net/minecraft/world/level/block/BlockLectern$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dkk	dkk
	f	I	A	SOUND_CHORUS_DEATH
	f	I	B	SOUND_BREWING_STAND_BREW
	f	I	C	SOUND_END_PORTAL_SPAWN
	f	I	D	SOUND_PHANTOM_BITE
	f	I	E	SOUND_ZOMBIE_TO_DROWNED
	f	I	F	SOUND_HUSK_TO_ZOMBIE
	f	I	G	SOUND_GRINDSTONE_USED
	f	I	H	SOUND_PAGE_TURN
	f	I	I	SOUND_SMITHING_TABLE_USED
	f	I	J	SOUND_POINTED_DRIPSTONE_LAND
	f	I	K	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	L	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	M	SOUND_SKELETON_TO_STRAY
	f	I	N	SOUND_CRAFTER_CRAFT
	f	I	O	SOUND_CRAFTER_FAIL
	f	I	P	SOUND_WIND_CHARGE_SHOOT
	f	I	Q	COMPOSTER_FILL
	f	I	R	LAVA_FIZZ
	f	I	S	REDSTONE_TORCH_BURNOUT
	f	I	T	END_PORTAL_FRAME_FILL
	f	I	U	DRIPSTONE_DRIP
	f	I	V	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	W	PARTICLES_SHOOT_SMOKE
	f	I	X	PARTICLES_DESTROY_BLOCK
	f	I	Y	PARTICLES_SPELL_POTION_SPLASH
	f	I	Z	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	aA	ANIMATION_SPAWN_COBWEB
	f	I	aB	PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER_OMINOUS
	f	I	aC	PARTICLES_TRIAL_SPAWNER_BECOME_OMINOUS
	f	I	aD	PARTICLES_TRIAL_SPAWNER_SPAWN_ITEM
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	aa	PARTICLES_MOBBLOCK_SPAWN
	f	I	ab	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ac	PARTICLES_INSTANT_POTION_SPLASH
	f	I	ad	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	ae	PARTICLES_WATER_EVAPORATING
	f	I	af	PARTICLES_SHOOT_WHITE_SMOKE
	f	I	ag	PARTICLES_BEE_GROWTH
	f	I	ah	PARTICLES_TURTLE_EGG_PLACEMENT
	f	I	ai	PARTICLES_SMASH_ATTACK
	f	I	aj	ANIMATION_END_GATEWAY_SPAWN
	f	I	ak	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	al	PARTICLES_ELECTRIC_SPARK
	f	I	am	PARTICLES_AND_SOUND_WAX_ON
	f	I	an	PARTICLES_WAX_OFF
	f	I	ao	PARTICLES_SCRAPE
	f	I	ap	PARTICLES_SCULK_CHARGE
	f	I	aq	PARTICLES_SCULK_SHRIEK
	f	I	ar	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	f	I	as	PARTICLES_EGG_CRACK
	f	I	at	PARTICLES_TRIAL_SPAWNER_SPAWN
	f	I	au	PARTICLES_TRIAL_SPAWNER_SPAWN_MOB_AT
	f	I	av	PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER
	f	I	aw	ANIMATION_TRIAL_SPAWNER_EJECT_ITEM
	f	I	ax	ANIMATION_VAULT_ACTIVATE
	f	I	ay	ANIMATION_VAULT_DEACTIVATE
	f	I	az	ANIMATION_VAULT_EJECT_ITEM
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_FIREWORK_SHOOT
	f	I	e	SOUND_EXTINGUISH_FIRE
	f	I	f	SOUND_PLAY_JUKEBOX_SONG
	f	I	g	SOUND_STOP_JUKEBOX_SONG
	f	I	h	SOUND_GHAST_WARNING
	f	I	i	SOUND_GHAST_FIREBALL
	f	I	j	SOUND_DRAGON_FIREBALL
	f	I	k	SOUND_BLAZE_FIREBALL
	f	I	l	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	m	SOUND_ZOMBIE_IRON_DOOR
	f	I	n	SOUND_ZOMBIE_DOOR_CRASH
	f	I	o	SOUND_WITHER_BLOCK_BREAK
	f	I	p	SOUND_WITHER_BOSS_SPAWN
	f	I	q	SOUND_WITHER_BOSS_SHOOT
	f	I	r	SOUND_BAT_LIFTOFF
	f	I	s	SOUND_ZOMBIE_INFECTED
	f	I	t	SOUND_ZOMBIE_CONVERTED
	f	I	u	SOUND_DRAGON_DEATH
	f	I	v	SOUND_ANVIL_BROKEN
	f	I	w	SOUND_ANVIL_USED
	f	I	x	SOUND_ANVIL_LAND
	f	I	y	SOUND_PORTAL_TRAVEL
	f	I	z	SOUND_CHORUS_GROW
c	dkl	net/minecraft/world/level/block/BlockLever
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcx;Ljd;Ldtc;)V	a	playSound
		p	0		player
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcx;Ljd;F)V	a	makeParticle
		p	0		state
		p	1		world
		p	2		pos
		p	3		alpha
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	b	pull
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldtc;Ldcw;Ljd;)V	d	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	POWERED
	f	I	c	DEPTH
	f	I	d	WIDTH
	f	I	e	HEIGHT
	f	Lexv;	f	NORTH_AABB
	f	Lexv;	g	SOUTH_AABB
	f	Lexv;	h	WEST_AABB
	f	Lexv;	i	EAST_AABB
	f	Lexv;	j	UP_AABB_Z
	f	Lexv;	k	UP_AABB_X
	f	Lexv;	l	DOWN_AABB_Z
	f	Lexv;	m	DOWN_AABB_X
c	dkl$1	net/minecraft/world/level/block/BlockLever$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
c	dkm	net/minecraft/world/level/block/LightBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;I)Lcuq;	a	setLightOnStack
		p	0		stack
		p	1		level
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)I	m	lambda$static$0
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_LEVEL
	f	Lduc;	c	LEVEL
	f	Ldtt;	d	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	e	LIGHT_EMISSION
c	dkn	net/minecraft/world/level/block/LightningRodBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	onLightningStrike
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;)V	e	updateNeighbours
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtt;	c	WATERLOGGED
	f	Ldtt;	d	POWERED
	f	I	e	RANGE
	f	I	k	ACTIVATION_TICKS
	f	I	l	SPARK_CYCLE
c	dko	net/minecraft/world/level/block/BlockFluids
	m	(Lepc;Ldtb$d;)V	<init>	<init>
		p	1		fluid
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldcw;Ljd;Ldtc;)Z	a	shouldSpreadLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcx;Ljd;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Ldko;)Lepc;	a	lambda$static$3
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lepc;)Lepd;	a	lambda$static$2
		p	0		fluid
	m	(Lepd;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		fluid
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	()Ljava/util/Optional;	aw_	getPickupSound
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Lepd;)Ljava/lang/String;	b	lambda$static$0
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	LEVEL
	f	Lepc;	c	fluid
	f	Lexv;	d	STABLE_SHAPE
	f	Lcom/google/common/collect/ImmutableList;	e	POSSIBLE_FLOW_DIRECTIONS
	f	Lcom/mojang/serialization/Codec;	f	FLOWING_FLUID
	f	Ljava/util/List;	g	stateCache
c	dkp	net/minecraft/world/level/block/IFluidContainer
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
c	dkq	net/minecraft/world/level/block/BlockLoom
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lwz;	b	CONTAINER_TITLE
c	dkr	net/minecraft/world/level/block/BlockMagma
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
c	dks	net/minecraft/world/level/block/MangroveLeavesBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ljd;)Ljd;	a	getParticlePos
		p	1		pos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dkt	net/minecraft/world/level/block/MangrovePropaguleBlock
	m	(Ldsr;Ldtb$d;)V	<init>	<init>
		p	1		generator
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldkt;)Ldsr;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Ldtc;	b	createNewHangingPropagule
		p	0		age
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldtc;	c	createNewHangingPropagule
	m	(Ldtc;)Z	m	isHanging
		p	0		state
	m	(Ldtc;)Z	n	isFullyGrown
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	AGE
	f	I	c	MAX_AGE
	f	Ldtt;	d	HANGING
	f	[Lexv;	j	SHAPE_PER_AGE
	f	Ldtt;	k	WATERLOGGED
c	dku	net/minecraft/world/level/block/MangroveRootsBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	WATERLOGGED
c	dkv	net/minecraft/world/level/block/EnumBlockMirror
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	mirror
		p	1		rotation
		p	2		fullTurn
	m	(Lji;)Ldmm;	a	getRotation
		p	1		direction
	m	()Lwz;	b	symbol
	m	(Lji;)Lji;	b	mirror
		p	1		direction
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldkv;	d	$values
	f	Ldkv;	a	NONE
	f	Ldkv;	b	LEFT_RIGHT
	f	Ldkv;	c	FRONT_BACK
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	Lwz;	f	symbol
	f	Lh;	g	rotation
	f	[Ldkv;	h	$VALUES
c	dkw	net/minecraft/world/level/block/MossBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Layw;Ljd;Ljm$c;)V	a	lambda$performBonemeal$1
		p	3		entry
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ljz;)Ljava/util/Optional;	a	lambda$performBonemeal$0
		p	0		key
	m	()Ldgb$a;	au_	getType
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dkx	net/minecraft/world/level/block/MudBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	dky	net/minecraft/world/level/block/MultifaceBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(B)Ljava/util/Set;	a	unpack
		p	0		flag
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ldtc;Ljd;Lji;)Z	a	isValidStateForPlacement
		p	1		world
		p	2		state
		p	3		pos
		p	4		direction
	m	(Ldcc;Lji;Ljd;Ldtc;)Z	a	canAttachTo
		p	0		world
		p	1		direction
		p	2		pos
		p	3		state
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lji;)Ldtc;	a	lambda$getStateForPlacement$1
		p	4		direction
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Ldtt;)Ldtc;	a	removeFace
		p	0		state
		p	1		direction
	m	(Ldtc;Ljava/util/function/Function;)Ldtc;	a	mapDirections
		p	1		state
		p	2		mirror
	m	(Ldtc;Lji;)Z	a	hasFace
		p	0		state
		p	1		direction
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtd;)Ldtc;	a	getDefaultMultifaceState
		p	0		stateManager
	m	(Ljava/util/Collection;)B	a	pack
		p	0		directions
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		shapes
	m	(Lji;)Z	a	isFaceSupported
		p	1		direction
	m	(Ldtc;Lji;)Z	b	lambda$hasAnyVacantFace$3
		p	1		direction
	m	(Lji;)Ldtt;	b	getFaceProperty
		p	0		direction
	m	()Ldkz;	c	getSpreader
	m	(Ldtc;Ldcc;Ljd;Lji;)Ldtc;	c	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Lji;)Z	c	lambda$hasAnyFace$2
		p	1		direction
	m	()Z	m	isWaterloggable
	m	(Ldtc;)Ljava/util/Set;	m	availableFaces
		p	0		state
	m	(Ldtc;)Z	n	hasAnyFace
		p	0		state
	m	(Ldtc;)Lexv;	o	calculateMultifaceShape
		p	0		state
	m	(Ldtc;)Z	p	hasAnyVacantFace
		p	0		state
	f	F	a	AABB_OFFSET
	f	[Lji;	b	DIRECTIONS
	f	Lexv;	c	UP_AABB
	f	Lexv;	d	DOWN_AABB
	f	Lexv;	e	WEST_AABB
	f	Lexv;	f	EAST_AABB
	f	Lexv;	g	NORTH_AABB
	f	Lexv;	h	SOUTH_AABB
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Ljava/util/Map;	j	SHAPE_BY_DIRECTION
	f	Lcom/google/common/collect/ImmutableMap;	k	shapesCache
	f	Z	l	canRotate
	f	Z	m	canMirrorX
	f	Z	n	canMirrorZ
c	dkz	net/minecraft/world/level/block/MultifaceSpreader
	m	(Ldky;)V	<init>	<init>
		p	1		lichen
	m	(Ldkz$b;)V	<init>	<init>
		p	1		growChecker
	m	(Ldcx;Ldkz$c;Z)Ljava/util/Optional;	a	spreadToFace
		p	1		world
		p	2		pos
		p	3		markForPostProcessing
	m	(Ldcx;ZLdkz$c;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardDirection$7
		p	3		growPos
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	a	canSpreadInAnyDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcc;Ljd;Lji;Lji;)Z	a	lambda$canSpreadInAnyDirection$0
		p	5		direction2
	m	(Ldtc;Ldcc;Ljd;Lji;Lji;Ldkz$d;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		predicate
	m	(Ldtc;Ldcx;Ljd;Layw;)Ljava/util/Optional;	a	spreadFromRandomFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcx;Ljd;Layw;Lji;)Ljava/util/Optional;	a	lambda$spreadFromRandomFaceTowardRandomDirection$2
		p	5		direction
	m	(Ldtc;Ldcx;Ljd;Lji;Layw;Z)Ljava/util/Optional;	a	spreadFromFaceTowardRandomDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		random
		p	6		markForPostProcessing
	m	(Ldtc;Ldcx;Ljd;Lji;Lji;Z)Ljava/util/Optional;	a	spreadFromFaceTowardDirection
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldDirection
		p	5		newDirection
		p	6		markForPostProcessing
	m	(Ldtc;Ldcx;Ljd;Lji;Z)J	a	spreadFromFaceTowardAllDirections
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
		p	5		markForPostProcessing
	m	(Ldtc;Ldcx;Ljd;Lji;ZLji;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardAllDirections$6
		p	6		direction2
	m	(Ldtc;Ldcx;Ljd;Z)J	a	spreadAll
		p	1		state
		p	2		world
		p	3		pos
		p	4		markForPostProcessing
	m	(Ldtc;Ldcx;Ljd;ZLji;)Ljava/lang/Long;	a	lambda$spreadAll$4
		p	5		direction
	m	(Ldtc;Lji;)Z	a	lambda$spreadAll$3
		p	2		direction
	m	(Ldtc;Ldcx;Ljd;Lji;ZLji;)Ljava/util/Optional;	b	lambda$spreadFromFaceTowardRandomDirection$5
		p	6		direction2
	m	(Ldtc;Lji;)Z	b	lambda$spreadFromRandomFaceTowardRandomDirection$1
		p	2		direction
	f	[Ldkz$e;	a	DEFAULT_SPREAD_ORDER
	f	Ldkz$b;	b	config
c	dkz$a	net/minecraft/world/level/block/MultifaceSpreader$a
	m	(Ldky;)V	<init>	<init>
		p	1		lichen
	m	(Ldcc;Ljd;Ldkz$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Ldcc;Ljd;Ljd;Lji;Ldtc;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldtc;Ldcc;Ljd;Lji;)Ldtc;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Ldky;	a	block
c	dkz$b	net/minecraft/world/level/block/MultifaceSpreader$b
	m	()[Ldkz$e;	a	getSpreadTypes
	m	(Ldcc;Ljd;Ldkz$c;)Z	a	canSpreadInto
		p	1		world
		p	2		pos
		p	3		growPos
	m	(Ldcx;Ldkz$c;Ldtc;Z)Z	a	placeBlock
		p	1		world
		p	2		growPos
		p	3		state
		p	4		markForPostProcessing
	m	(Ldtc;)Z	a	isOtherBlockValidAsSource
		p	1		state
	m	(Ldtc;Ldcc;Ljd;Lji;)Ldtc;	a	getStateForPlacement
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Lji;)Z	a	hasFace
		p	1		state
		p	2		direction
	m	(Ldtc;Lji;)Z	b	canSpreadFrom
		p	1		state
		p	2		direction
c	dkz$c	net/minecraft/world/level/block/MultifaceSpreader$c
	m	()Ljd;	a	pos
	m	()Lji;	b	face
	f	Ljd;	a	pos
	f	Lji;	b	face
c	dkz$d	net/minecraft/world/level/block/MultifaceSpreader$d
	m	(Ldcc;Ljd;Ldkz$c;)Z	test	test
		p	1		world
		p	2		pos
		p	3		growPos
c	dkz$e	net/minecraft/world/level/block/MultifaceSpreader$e
	m	()[Ldkz$e;	a	$values
	m	(Ljd;Lji;Lji;)Ldkz$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
	f	Ldkz$e;	a	SAME_POSITION
	f	Ldkz$e;	b	SAME_PLANE
	f	Ldkz$e;	c	WRAP_AROUND
	f	[Ldkz$e;	d	$VALUES
c	dkz$e$1	net/minecraft/world/level/block/MultifaceSpreader$e$1
	m	(Ljd;Lji;Lji;)Ldkz$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	dkz$e$2	net/minecraft/world/level/block/MultifaceSpreader$e$2
	m	(Ljd;Lji;Lji;)Ldkz$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	dkz$e$3	net/minecraft/world/level/block/MultifaceSpreader$e$3
	m	(Ljd;Lji;Lji;)Ldkz$c;	a	getSpreadPos
		p	1		pos
		p	2		newDirection
		p	3		oldDirection
c	dla	net/minecraft/world/level/block/BlockMushroom
	m	(Lakq;Ldtb$d;)V	<init>	<init>
		p	1		featureKey
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Ljd;Ldtc;Layw;)Z	a	growMushroom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldla;)Lakq;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
	f	Lakq;	d	feature
c	dlb	net/minecraft/world/level/block/BlockMycel
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dlc	net/minecraft/world/level/block/BlockPortal
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Lbsr;)I	a	getPortalTransitionTime
		p	1		world
		p	2		entity
	m	(Laqu;Lbsr;Ljd;)Leqc;	a	getPortalDestination
		p	1		world
		p	2		entity
		p	3		pos
	m	(Laqu;Lbsr;Ljd;Ljd;ZLdut;)Leqc;	a	getExitPortal
		p	1		world
		p	2		entity
		p	3		pos
		p	4		scaledPos
		p	5		inNether
		p	6		worldBorder
	m	(Laqu;Ldtc;Ljd;)Z	a	lambda$getExitPortal$0
		p	2		posx
	m	(Laqu;Ll$a;Lji$a;Lexc;Lbsr;Lexc;FFLeqc$a;)Leqc;	a	createDimensionTransition
		p	0		world
		p	1		exitPortalRectangle
		p	2		axis
		p	3		positionInPortal
		p	4		entity
		p	5		velocity
		p	6		yaw
		p	7		pitch
		p	8		postDimensionTransition
	m	(Lbsr;Ldtc;Ljd;)Z	a	lambda$getDimensionTransitionFromExit$2
		p	2		posx
	m	(Lbsr;Ljd;Ll$a;Laqu;Leqc$a;)Leqc;	a	getDimensionTransitionFromExit
		p	0		entity
		p	1		pos
		p	2		exitPortalRectangle
		p	3		world
		p	4		postDimensionTransition
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Lbsr;)V	a	lambda$getExitPortal$1
		p	1		entity
	m	()Ldlr$a;	b	getLocalTransition
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	AXIS
	f	I	c	AABB_OFFSET
	f	Lexv;	d	X_AXIS_AABB
	f	Lexv;	e	Z_AXIS_AABB
	f	Lorg/slf4j/Logger;	f	LOGGER
c	dlc$1	net/minecraft/world/level/block/BlockPortal$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	dld	net/minecraft/world/level/block/BlockNetherSprouts
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
c	dle	net/minecraft/world/level/block/BlockNetherVinesUtil
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	0		random
	m	(Ldtc;)Z	a	isValidGrowthState
		p	0		state
	f	D	a	GROW_PER_TICK_PROBABILITY
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
c	dlf	net/minecraft/world/level/block/BlockNetherWart
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	[Lexv;	d	SHAPE_BY_AGE
c	dlg	net/minecraft/world/level/block/BlockNetherrack
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	()Ldgb$a;	au_	getType
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dlh	net/minecraft/world/level/block/BlockNote
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldtc;Ldcw;Ljd;)V	a	playNote
		p	1		entity
		p	2		state
		p	3		world
		p	4		pos
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;)Lakr;	a	getCustomSoundId
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	a_	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(I)F	b	getPitchFromNote
		p	0		note
	m	(Ldcx;Ljd;Ldtc;)Ldtc;	b	setInstrument
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	INSTRUMENT
	f	Ldtt;	c	POWERED
	f	Lduc;	d	NOTE
	f	I	e	NOTE_VOLUME
c	dli	net/minecraft/world/level/block/BlockNylium
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Lduz;Layw;Ljd;Ljm$c;)V	a	lambda$place$0
		p	4		entry
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ljz;Lakq;Laqu;Lduz;Layw;Ljd;)V	a	place
		p	1		registry
		p	2		key
		p	3		world
		p	4		chunkGenerator
		p	5		random
		p	6		pos
	m	()Ldgb$a;	au_	getType
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	b	canBeNylium
		p	0		state
		p	1		world
		p	2		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dlj	net/minecraft/world/level/block/BlockObserver
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Ldtc;)V	a	updateNeighborsInFront
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcx;Ljd;)V	a	startSignal
		p	1		world
		p	2		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtt;	c	POWERED
c	dlk	net/minecraft/world/level/block/PiglinWallSkullBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljava/util/Map;	e	AABBS
c	dll	net/minecraft/world/level/block/PinkPetalsBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lji;Ljava/lang/Integer;)Lexv;	a	lambda$static$0
		p	0		facing
		p	1		flowerAmount
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MIN_FLOWERS
	f	I	c	MAX_FLOWERS
	f	Ldtw;	d	FACING
	f	Lduc;	e	AMOUNT
	f	Ljava/util/function/BiFunction;	f	SHAPE_BY_PROPERTIES
c	dlm	net/minecraft/world/level/block/BlockSprawling
	m	(FLdtb$d;)V	<init>	<init>
		p	1		radius
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(F)[Lexv;	a	makeShapes
		p	1		radius
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ljava/util/EnumMap;)V	a	lambda$static$0
		p	0		directions
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)I	m	getAABBIndex
		p	1		state
	f	[Lji;	a	DIRECTIONS
	f	Ldtt;	b	NORTH
	f	Ldtt;	c	EAST
	f	Ldtt;	d	SOUTH
	f	Ldtt;	e	WEST
	f	Ldtt;	f	UP
	f	Ldtt;	g	DOWN
	f	Ljava/util/Map;	h	PROPERTY_BY_DIRECTION
	f	[Lexv;	i	shapeByIndex
c	dln	net/minecraft/world/level/block/PitcherCropBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Ldtc;Ljd;I)V	a	grow
		p	1		world
		p	2		state
		p	3		pos
		p	4		amount
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcz;Ljd;)Z	a	canGrowInto
		p	0		world
		p	1		pos
	m	(Ldcz;Ljd;Ldtc;I)Z	a	canGrow
		p	1		world
		p	2		pos
		p	3		state
		p	4		age
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(I)Z	b	isDouble
		p	0		age
	m	(Ldcz;Ljd;)Z	b	sufficientLight
		p	0		world
		p	1		pos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldcz;Ljd;Ldtc;)Ldln$a;	d	getLowerHalf
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	(Ldtc;)Z	m	isLower
		p	0		state
	m	(Ldtc;)Z	n	isMaxAge
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lduc;	d	AGE
	f	I	e	MAX_AGE
	f	I	f	DOUBLE_PLANT_AGE_INTERSECTION
	f	I	g	BONEMEAL_INCREASE
	f	Lexv;	h	FULL_UPPER_SHAPE
	f	Lexv;	i	FULL_LOWER_SHAPE
	f	Lexv;	j	COLLISION_SHAPE_BULB
	f	Lexv;	k	COLLISION_SHAPE_CROP
	f	[Lexv;	l	UPPER_SHAPE_BY_AGE
	f	[Lexv;	m	LOWER_SHAPE_BY_AGE
c	dln$a	net/minecraft/world/level/block/PitcherCropBlock$a
	m	()Ljd;	a	pos
	m	()Ldtc;	b	state
	f	Ljd;	a	pos
	f	Ldtc;	b	state
c	dlo	net/minecraft/world/level/block/BlockSkullPlayer
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dlp	net/minecraft/world/level/block/BlockSkullPlayerWall
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dlq	net/minecraft/world/level/block/PointedDripstoneBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FLdlq$a;)Z	a	lambda$animateTick$0
		p	1		fluid
	m	(Laqu;Ljd;)Lepd;	a	getCauldronFillFluidType
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;Lji;)V	a	grow
		p	0		world
		p	1		pos
		p	2		direction
	m	(Lbsr;)Lbrk;	a	getFallDamageSource
		p	1		attacker
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;Ldtc;)Z	a	canDripThrough
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcw;Lepd;)Lepd;	a	getDripFluid
		p	0		world
		p	1		fluid
	m	(Ldcw;Ljd;)Ljd;	a	findStalactiteTipAboveCauldron
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Lcjg;)V	a	onBrokenAfterFall
		p	1		world
		p	2		pos
		p	3		fallingBlockEntity
	m	(Ldcw;Ljd;Ldtc;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;I)Ljava/util/Optional;	a	findRootBlock
		p	0		world
		p	1		pos
		p	2		state
		p	3		range
	m	(Ldcw;Ljd;Ldtc;Ldlq$a;)V	a	lambda$spawnDripParticle$2
		p	3		fluid
	m	(Ldcw;Ljd;Ldtc;Lepd;)V	a	spawnDripParticle
		p	0		world
		p	1		pos
		p	2		state
		p	3		fluid
	m	(Ldcw;Ljd;Lepd;)Ljd;	a	findFillableCauldronBelowStalactiteTip
		p	0		world
		p	1		pos
		p	2		fluid
	m	(Ldcx;Ljd;Lji$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
		p	0		world
		p	1		pos
		p	2		direction
		p	3		continuePredicate
		p	4		stopPredicate
		p	5		range
	m	(Ldcx;Ljd;Lji;Ldtz;)V	a	createDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		thickness
	m	(Ldcz;Ljd;Lji;Z)Ldtz;	a	calculateDripstoneThickness
		p	0		world
		p	1		pos
		p	2		direction
		p	3		tryMerge
	m	(Ldlq$a;)Lepd;	a	lambda$getCauldronFillFluidType$10
		p	0		fluid
	m	(Ldtc;Laqu;Ljd;)V	a	spawnFallingStalactite
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Laqu;Ljd;F)V	a	maybeTransferFluid
		p	0		state
		p	1		world
		p	2		pos
		p	3		dripChance
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcx;Ljd;)V	a	createMergedTips
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcx;Ljd;IZ)Ljd;	a	findTip
		p	0		state
		p	1		world
		p	2		pos
		p	3		range
		p	4		allowMerged
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldtc;)Z	a	canGrow
		p	0		dripstoneBlockState
		p	1		waterState
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;)Z	a	isUnmergedTipWithDirection
		p	0		state
		p	1		direction
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Z)Z	a	isTip
		p	0		state
		p	1		allowMerged
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lepd;)Z	a	canFillCauldron
		p	0		fluid
	m	(Lepd;Ldtc;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
		p	1		state
	m	(Lji;Ljd;Ldtc;)Z	a	lambda$findRootBlock$5
		p	1		posx
		p	2		statex
	m	(ZLdtc;)Z	a	lambda$findTip$4
		p	1		statex
	m	()F	av_	getMaxHorizontalOffset
	m	(Laqu;Ljd;)V	b	growStalagmiteBelow
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;)Ldlq$a;	b	lambda$getFluidAboveStalactite$11
		p	1		posx
	m	(Ldcw;Ljd;Ldtc;)Ljava/util/Optional;	b	getFluidAboveStalactite
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Ldlq$a;)V	b	lambda$animateTick$1
		p	3		fluid
	m	(Ldcz;Ljd;Lji;)Lji;	b	calculateTipDirection
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;Laqu;Ljd;)Z	b	canTipGrow
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	b	isStalactiteStartPos
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Lji;)Z	b	isPointedDripstoneWithDirection
		p	0		state
		p	1		direction
	m	(Lji;Ljd;Ldtc;)Z	b	lambda$findTip$3
		p	1		posx
		p	2		statex
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldcw;Ljd;Ldtc;)Z	c	lambda$findStalactiteTipAboveCauldron$9
		p	1		posx
		p	2		state
	m	(Ldcz;Ljd;Lji;)Z	c	isValidPointedDripstonePlacement
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;Laqu;Ljd;Layw;)V	c	growStalactiteOrStalagmiteIfPossible
		p	0		state
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldtc;Ldcc;Ljd;)Z	c	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcw;Ljd;Ldtc;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
		p	1		posx
		p	2		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	m	canDrip
		p	0		state
	m	(Ldtc;)Z	n	isStalactite
		p	0		state
	m	(Ldtc;)Z	o	isStalagmite
		p	0		state
	m	(Ldtc;)Z	p	lambda$findRootBlock$6
		p	0		statex
	f	F	F	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	G	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	H	AVERAGE_DAYS_PER_GROWTH
	f	F	I	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	J	MAX_GROWTH_LENGTH
	f	I	K	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	F	L	STALACTITE_DRIP_START_PIXEL
	f	Lexv;	M	TIP_MERGE_SHAPE
	f	Lexv;	N	TIP_SHAPE_UP
	f	Lexv;	O	TIP_SHAPE_DOWN
	f	Lexv;	P	FRUSTUM_SHAPE
	f	Lexv;	Q	MIDDLE_SHAPE
	f	Lexv;	R	BASE_SHAPE
	f	F	S	MAX_HORIZONTAL_OFFSET
	f	Lexv;	T	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	TIP_DIRECTION
	f	Ldua;	c	THICKNESS
	f	Ldtt;	d	WATERLOGGED
	f	I	e	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	f	DELAY_BEFORE_FALLING
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	h	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	i	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	j	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	F	k	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	D	l	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	m	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	n	STALACTITE_MAX_DAMAGE
	f	I	o	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
c	dlq$a	net/minecraft/world/level/block/PointedDripstoneBlock$a
	m	()Ljd;	a	pos
	m	()Lepd;	b	fluid
	m	()Ldtc;	c	sourceState
	f	Ljd;	a	pos
	f	Lepd;	b	fluid
	f	Ldtc;	c	sourceState
c	dlr	net/minecraft/world/level/block/Portal
	m	(Laqu;Lbsr;)I	a	getPortalTransitionTime
		p	1		world
		p	2		entity
	m	(Laqu;Lbsr;Ljd;)Leqc;	a	getPortalDestination
		p	1		world
		p	2		entity
		p	3		pos
	m	()Ldlr$a;	b	getLocalTransition
c	dlr$a	net/minecraft/world/level/block/Portal$a
	m	()[Ldlr$a;	a	$values
	f	Ldlr$a;	a	CONFUSION
	f	Ldlr$a;	b	NONE
	f	[Ldlr$a;	c	$VALUES
c	dls	net/minecraft/world/level/block/BlockPotatoes
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	()Ldcv;	d	getBaseSeedId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Lexv;	b	SHAPE_BY_AGE
c	dlt	net/minecraft/world/level/block/PowderSnowBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)Z	a	canEntityWalkOnPowderSnow
		p	0		entity
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	()Ljava/util/Optional;	aw_	getPickupSound
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	c	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	d	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	e	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Lexv;	f	FALLING_COLLISION_SHAPE
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	h	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
c	dlu	net/minecraft/world/level/block/BlockPowered
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dlv	net/minecraft/world/level/block/BlockPoweredRail
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;Ldtc;ZI)Z	a	findPoweredRailSignal
		p	1		world
		p	2		pos
		p	3		state
		p	5		distance
	m	(Ldcw;Ljd;ZILdug;)Z	a	isSameRailWithPower
		p	1		world
		p	2		pos
		p	4		distance
		p	5		shape
	m	(Ldtc;Ldcw;Ljd;Ldfy;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lduf;	c	getShapeProperty
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldua;	e	SHAPE
	f	Ldtt;	f	POWERED
c	dlv$1	net/minecraft/world/level/block/BlockPoweredRail$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dlw	net/minecraft/world/level/block/BlockPressurePlateBinary
	m	(Ldtr;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldlw;)Ldtr;	a	lambda$static$0
		p	0		block
	m	(Ldtc;I)Ldtc;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcw;Ljd;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldtc;)I	g	getSignalForState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldtt;	f	POWERED
c	dlw$1	net/minecraft/world/level/block/BlockPressurePlateBinary$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BlockSetType$PressurePlateSensitivity
c	dlx	net/minecraft/world/level/block/BlockPumpkin
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dly	net/minecraft/world/level/block/BlockMinecartTrack
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Ldfy;)V	a	updateState
		p	1		state
		p	2		world
		p	3		pos
		p	4		neighbor
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lduf;	c	getShapeProperty
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldua;	e	SHAPE
c	dly$1	net/minecraft/world/level/block/BlockMinecartTrack$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dlz	net/minecraft/world/level/block/MinecartTrackLogic
	m	(Ldcw;Ljd;Ldtc;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		state
	m	()Ljava/util/List;	a	getConnections
	m	(Ldlz;)Z	a	connectsTo
		p	1		other
	m	(Ldug;)V	a	updateConnections
		p	1		shape
	m	(Ljd;)Z	a	hasRail
		p	1		pos
	m	(ZZLdug;)Ldlz;	a	place
		p	1		powered
		p	2		forceUpdate
		p	3		railShape
	m	()I	b	countPotentialConnections
	m	(Ldlz;)Z	b	canConnectTo
		p	1		placementHelper
	m	(Ljd;)Ldlz;	b	getRail
		p	1		pos
	m	()Ldtc;	c	getState
	m	(Ldlz;)V	c	connectTo
		p	1		placementHelper
	m	(Ljd;)Z	c	hasConnection
		p	1		pos
	m	()V	d	removeSoftConnections
	m	(Ljd;)Z	d	hasNeighborRail
		p	1		pos
	f	Ldcw;	a	level
	f	Ljd;	b	pos
	f	Ldfn;	c	block
	f	Ldtc;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
c	dlz$1	net/minecraft/world/level/block/MinecartTrackLogic$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
c	dma	net/minecraft/world/level/block/BlockRedstoneOre
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Ljd;)V	a	spawnParticles
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	a_	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;)V	d	interact
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	LIT
c	dmb	net/minecraft/world/level/block/BlockRedstoneWire
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ldtc;Ljd;)Ldtc;	a	getConnectionState
		p	1		world
		p	2		state
		p	3		pos
	m	(Ldcc;Ljd;Ldtc;)Z	a	canSurviveOn
		p	1		world
		p	2		pos
		p	3		floor
	m	(Ldcc;Ljd;Lji;)Lduh;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldcc;Ljd;Lji;Z)Lduh;	a	getConnectingSide
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldcw;Layw;Ljd;Lexc;Lji;Lji;FF)V	a	spawnParticlesAlongLine
		p	1		world
		p	2		random
		p	3		pos
		p	4		color
	m	(Ldcw;Ljd;)I	a	calculateTargetStrength
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Ldtc;)V	a	updatePowerStrength
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Ldtc;)V	a	updatesOnShapeChange
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcx;Ljd;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;)Z	a	shouldConnectTo
		p	0		state
		p	1		dir
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	([Lexc;)V	a	lambda$static$0
		p	0		colors
	m	(I)I	b	getColorForPower
		p	0		powerLevel
	m	(Ldcc;Ldtc;Ljd;)Ldtc;	b	getMissingConnections
		p	1		world
		p	2		state
		p	3		pos
	m	(Ldcw;Ljd;)V	b	checkCornerChangeAt
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldcw;Ljd;)V	c	updateNeighborsOfNeighboringWires
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;)Z	m	shouldConnectTo
		p	0		state
	m	(Ldtc;)Lexv;	n	calculateShape
		p	1		state
	m	(Ldtc;)Z	o	isCross
		p	0		state
	m	(Ldtc;)Z	p	isDot
		p	0		state
	m	(Ldtc;)I	q	getWireSignal
		p	1		state
	f	Ljava/util/Map;	F	SHAPES_CACHE
	f	[Lexc;	G	COLORS
	f	F	H	PARTICLE_DENSITY
	f	Ldtc;	I	crossState
	f	Z	J	shouldSignal
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	NORTH
	f	Ldua;	c	EAST
	f	Ldua;	d	SOUTH
	f	Ldua;	e	WEST
	f	Lduc;	f	POWER
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	I	h	H
	f	I	i	W
	f	I	j	E
	f	I	k	N
	f	I	l	S
	f	Lexv;	m	SHAPE_DOT
	f	Ljava/util/Map;	n	SHAPES_FLOOR
	f	Ljava/util/Map;	o	SHAPES_UP
c	dmb$1	net/minecraft/world/level/block/BlockRedstoneWire$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dmc	net/minecraft/world/level/block/BlockRedstoneLamp
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	LIT
c	dmd	net/minecraft/world/level/block/BlockRedstoneTorch
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcc;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
		p	0		worldx
	m	(Ldcw;Ljd;Ldtc;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Z)Z	a	isToggledTooFrequently
		p	0		world
		p	1		pos
		p	2		addNew
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtt;	d	LIT
	f	I	e	RECENT_TOGGLE_TIMER
	f	I	f	MAX_RECENT_TOGGLES
	f	I	g	RESTART_DELAY
	f	Ljava/util/Map;	h	RECENT_TOGGLES
	f	I	i	TOGGLE_DELAY
c	dmd$a	net/minecraft/world/level/block/BlockRedstoneTorch$RedstoneUpdateInfo
	m	(Ljd;J)V	<init>	<init>
		p	1		pos
		p	2		time
	f	Ljd;	a	pos
	f	J	b	when
c	dme	net/minecraft/world/level/block/BlockRedstoneTorchWall
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Ldtc;)Z	a	hasNeighborSignal
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcom/mojang/serialization/MapCodec;	h	CODEC
	f	Ldtw;	i	FACING
	f	Ldtt;	j	LIT
c	dmf	net/minecraft/world/level/block/EnumRenderType
	m	()[Ldmf;	a	$values
	f	Ldmf;	a	INVISIBLE
	f	Ldmf;	b	ENTITYBLOCK_ANIMATED
	f	Ldmf;	c	MODEL
	f	[Ldmf;	d	$VALUES
c	dmg	net/minecraft/world/level/block/BlockRepeater
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Z	b	sideInputDiodesOnly
	m	(Ldcz;Ljd;Ldtc;)Z	c	isLocked
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;)I	g	getDelay
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	LOCKED
	f	Lduc;	e	DELAY
c	dmh	net/minecraft/world/level/block/BlockRespawnAnchor
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcw;Ljd;Ldtc;)V	a	charge
		p	0		charger
		p	1		world
		p	2		pos
		p	3		state
	m	(Lbsx;Ldcg;Ljd;)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
	m	(Lbsx;Ldcg;Ljd;Z)Ljava/util/Optional;	a	findStandUpPosition
		p	0		entity
		p	1		world
		p	2		pos
		p	3		ignoreInvalidPos
	m	(Lcuq;)Z	a	isRespawnFuel
		p	0		stack
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;)Z	a	canSetSpawn
		p	0		world
	m	(Ldcw;Ljd;)Z	a	lambda$explode$0
		p	1		pos
	m	(Ldtc;I)I	a	getScaledChargeLevel
		p	0		state
		p	1		maxLevel
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldcw;)Z	a	isWaterThatWouldFlow
		p	0		pos
		p	1		world
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)V	d	explode
		p	1		state
		p	2		world
		p	3		explodedPos
	m	(Ldtc;)Z	m	canBeCharged
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MIN_CHARGES
	f	I	c	MAX_CHARGES
	f	Lduc;	d	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	f	RESPAWN_OFFSETS
c	dmh$1	net/minecraft/world/level/block/BlockRespawnAnchor$1
	m	(Ldco;Ldcc;Ljd;Ldtc;Lepe;)Ljava/util/Optional;	a	getBlockExplosionResistance
		p	1		explosion
		p	2		world
		p	3		pos
		p	4		blockState
		p	5		fluidState
	f	Ljd;	a	val$pos
	f	Z	b	val$inWater
c	dmi	net/minecraft/world/level/block/RodBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	f	F	f	AABB_MIN
	f	F	g	AABB_MAX
	f	Lexv;	h	Y_AXIS_AABB
	f	Lexv;	i	Z_AXIS_AABB
	f	Lexv;	j	X_AXIS_AABB
c	dmi$1	net/minecraft/world/level/block/RodBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	dmj	net/minecraft/world/level/block/RootedDirtBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ljd;)Ljd;	a	getParticlePos
		p	1		pos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dmk	net/minecraft/world/level/block/BlockRoots
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
c	dml	net/minecraft/world/level/block/BlockRotatable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldmm;)Ldtc;	b	rotatePillar
		p	0		state
		p	1		rotation
	f	Lcom/mojang/serialization/MapCodec;	h	CODEC
	f	Ldua;	i	AXIS
c	dml$1	net/minecraft/world/level/block/BlockRotatable$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
c	dmm	net/minecraft/world/level/block/EnumBlockRotation
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
		p	3		id
		p	4		directionTransformation
	m	()Lh;	a	rotation
	m	(II)I	a	rotate
		p	1		rotation
		p	2		fullTurn
	m	(Layw;)Ldmm;	a	getRandom
		p	0		random
	m	(Ldmm;)Ldmm;	a	getRotated
		p	1		rotation
	m	(Lji;)Lji;	a	rotate
		p	1		direction
	m	()[Ldmm;	b	$values
	m	(Layw;)Ljava/util/List;	b	getShuffled
		p	0		random
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldmm;	a	NONE
	f	Ldmm;	b	CLOCKWISE_90
	f	Ldmm;	c	CLOCKWISE_180
	f	Ldmm;	d	COUNTERCLOCKWISE_90
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lh;	g	rotation
	f	[Ldmm;	h	$VALUES
c	dmn	net/minecraft/world/level/block/BlockSapling
	m	(Ldsr;Ldtb$d;)V	<init>	<init>
		p	1		generator
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Laqu;Ljd;Ldtc;Layw;)V	a	advanceTree
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldmn;)Ldsr;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Lduc;	f	STAGE
	f	F	g	AABB_OFFSET
	f	Lexv;	h	SHAPE
	f	Ldsr;	i	treeGrower
c	dmo	net/minecraft/world/level/block/BlockScaffolding
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)I	a	getDistance
		p	0		world
		p	1		pos
	m	(Ldcc;Ljd;I)Z	a	isBottom
		p	1		world
		p	2		pos
		p	3		distance
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	STABILITY_MAX_DISTANCE
	f	Lduc;	c	DISTANCE
	f	Ldtt;	d	WATERLOGGED
	f	Ldtt;	e	BOTTOM
	f	I	f	TICK_DELAY
	f	Lexv;	g	STABLE_SHAPE
	f	Lexv;	h	UNSTABLE_SHAPE
	f	Lexv;	i	UNSTABLE_SHAPE_BOTTOM
	f	Lexv;	j	BELOW_BLOCK
c	dmp	net/minecraft/world/level/block/SculkBehaviour
	m	(Ldcx;Ldtc;Ljd;Layw;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Ldcx;Ljd;Layw;)Z	a	depositCharge
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldcx;Ljd;Ldtc;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Ldmu$a;Ldcx;Ljd;Layw;Ldmu;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	()B	b	getSculkSpreadDelay
	m	()Z	d	canChangeBlockStateOnSpread
	m	(I)I	j_	updateDecayDelay
		p	1		oldDecay
	f	Ldmp;	v_	DEFAULT
c	dmp$1	net/minecraft/world/level/block/SculkBehaviour$1
	m	(Ldcx;Ljd;Ldtc;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
		p	1		world
		p	2		pos
		p	3		state
		p	4		directions
		p	5		markForPostProcessing
	m	(Ldmu$a;Ldcx;Ljd;Layw;Ldmu;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(I)I	j_	updateDecayDelay
		p	1		oldDecay
c	dmq	net/minecraft/world/level/block/SculkBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcx;Ljd;)Z	a	canPlaceGrowth
		p	0		world
		p	1		pos
	m	(Ldcx;Ljd;Layw;Z)Ldtc;	a	getRandomGrowthState
		p	1		world
		p	2		pos
		p	3		random
		p	4		allowShrieker
	m	(Ldmu$a;Ldcx;Ljd;Layw;Ldmu;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Ldmu;Ljd;Ljd;I)I	a	getDecayPenalty
		p	0		spreadManager
		p	1		cursorPos
		p	2		catalystPos
		p	3		charge
	m	()Z	d	canChangeBlockStateOnSpread
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dmr	net/minecraft/world/level/block/SculkCatalystBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	PULSE
	f	Lbpw;	c	xpRange
c	dms	net/minecraft/world/level/block/SculkSensorBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;Ldcw;Ljd;I)V	a	tryResonateVibration
		p	0		sourceEntity
		p	1		world
		p	2		pos
		p	3		frequency
	m	(Lbsr;Ldcw;Ljd;Ldtc;II)V	a	activate
		p	1		sourceEntity
		p	2		world
		p	3		pos
		p	4		state
		p	5		power
		p	6		frequency
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;)V	a	deactivate
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldcw;Ljd;Ldtc;Ldrp;)V	a	lambda$getTicker$1
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	([F)V	a	lambda$static$0
		p	0		frequency
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldcw;Ljd;Ldtc;)V	b	updateNeighbours
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()I	c	getActiveTicks
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	m	(Ldtc;)Lduj;	m	getPhase
		p	0		state
	m	(Ldtc;)Z	n	canActivate
		p	0		state
	f	[F	a	RESONANCE_PITCH_BEND
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	ACTIVE_TICKS
	f	I	e	COOLDOWN_TICKS
	f	Ldua;	f	PHASE
	f	Lduc;	g	POWER
	f	Ldtt;	h	WATERLOGGED
	f	Lexv;	i	SHAPE
c	dmt	net/minecraft/world/level/block/SculkShriekerBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Laqv;Ldrq;)V	a	lambda$stepOn$0
		p	2		blockEntity
	m	(Laqu;Ldrq;)V	a	lambda$tick$2
		p	1		blockEntity
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldcw;Ljd;Ldtc;Ldrq;)V	a	lambda$getTicker$3
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Laqu;Ldrq;)V	b	lambda$onRemove$1
		p	1		blockEntity
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	SHRIEKING
	f	Ldtt;	c	WATERLOGGED
	f	Ldtt;	d	CAN_SUMMON
	f	Lexv;	e	COLLIDER
	f	D	f	TOP_Y
c	dmu	net/minecraft/world/level/block/SculkSpreader
	m	(ZLawu;IIII)V	<init>	<init>
		p	1		worldGen
		p	2		replaceableTag
		p	3		extraBlockChance
		p	4		maxDistance
		p	5		spreadChance
		p	6		decayChance
	m	()Ldmu;	a	createLevelSpreader
	m	(Ldcx;Ljd;Layw;Z)V	a	updateCursors
		p	1		world
		p	2		pos
		p	3		random
		p	4		shouldConvertToBlock
	m	(Ldmu$a;)V	a	addCursor
		p	1		cursor
	m	(Ldmu$a;Ljd;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateCursors$2
		p	1		posx
		p	2		charge
	m	(Ljd;I)V	a	addCursors
		p	1		pos
		p	2		charge
	m	(Lub;)V	a	load
		p	1		nbt
	m	(Lub;Luy;)V	a	lambda$save$0
		p	1		cursorsNbt
	m	()Ldmu;	b	createWorldGenSpreader
	m	(Ldmu$a;)Ljava/lang/Integer;	b	lambda$save$1
	m	(Lub;)V	b	save
		p	1		nbt
	m	()Lawu;	c	replaceableBlocks
	m	()I	d	growthSpawnCost
	m	()I	e	noGrowthRadius
	m	()I	f	chargeDecayRate
	m	()I	g	additionalDecayRate
	m	()Z	h	isWorldGeneration
	m	()Ljava/util/List;	i	getCursors
	m	()V	j	clear
	f	I	a	MAX_GROWTH_RATE_RADIUS
	f	I	b	MAX_CHARGE
	f	F	c	MAX_DECAY_FACTOR
	f	I	d	SHRIEKER_PLACEMENT_RATE
	f	I	e	MAX_CURSORS
	f	Z	f	isWorldGeneration
	f	Lawu;	g	replaceableBlocks
	f	I	h	growthSpawnCost
	f	I	i	noGrowthRadius
	f	I	j	chargeDecayRate
	f	I	k	additionalDecayRate
	f	Ljava/util/List;	l	cursors
	f	Lorg/slf4j/Logger;	m	LOGGER
c	dmu$a	net/minecraft/world/level/block/SculkSpreader$a
	m	(Ljd;I)V	<init>	<init>
		p	1		pos
		p	2		charge
	m	(Ljd;IIILjava/util/Optional;)V	<init>	<init>
		p	1		pos
		p	2		charge
		p	3		decay
		p	4		update
		p	5		faces
	m	()Ljd;	a	getPos
	m	(Layw;)Ljava/util/List;	a	getRandomizedNonCornerNeighbourOffsets
		p	0		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldcx;Ljd;Layw;)Ljd;	a	getValidMovementPos
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldcx;Ljd;Layw;Ldmu;Z)V	a	update
		p	1		world
		p	2		pos
		p	3		random
		p	4		spreadManager
		p	5		shouldConvertToBlock
	m	(Ldcx;Ljd;Ljd;)Z	a	isMovementUnobstructed
		p	0		world
		p	1		sourcePos
		p	2		targetPos
	m	(Ldcx;Ljd;Lji;)Z	a	isUnobstructed
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldcx;Ljd;Z)Z	a	shouldUpdate
		p	1		world
		p	2		pos
		p	3		worldGen
	m	(Ldmu$a;)V	a	mergeWith
		p	1		cursor
	m	(Ldtc;)Ldmp;	a	getBlockBehaviour
		p	0		state
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$static$1
		p	0		list
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$static$2
		p	0		directions
	m	(Ljd;)Z	a	lambda$static$0
		p	0		pos
	m	()I	b	getCharge
	m	(Ldmu$a;)Ljava/util/Optional;	b	lambda$static$4
		p	0		cursor
	m	()I	c	getDecayDelay
	m	(Ldmu$a;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		cursor
	m	()Ljava/util/Set;	d	getFacingData
	f	I	a	MAX_CURSOR_DECAY_DELAY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	NON_CORNER_NEIGHBOURS
	f	Ljd;	d	pos
	f	I	e	charge
	f	I	f	updateDelay
	f	I	g	decayDelay
	f	Ljava/util/Set;	h	facings
	f	Lcom/mojang/serialization/Codec;	i	DIRECTION_SET
c	dmv	net/minecraft/world/level/block/SculkVeinBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcx;Ldtc;Ljd;)Z	a	hasSubstrateAccess
		p	0		world
		p	1		state
		p	2		pos
	m	(Ldcx;Ldtc;Ljd;Layw;)V	a	onDischarged
		p	1		world
		p	2		state
		p	3		pos
		p	4		random
	m	(Ldcx;Ljd;Ldtc;Ljava/util/Collection;)Z	a	regrow
		p	0		world
		p	1		pos
		p	2		state
		p	3		directions
	m	(Ldmu$a;Ldcx;Ljd;Layw;Ldmu;Z)I	a	attemptUseCharge
		p	1		cursor
		p	2		world
		p	3		catalystPos
		p	4		random
		p	5		spreadManager
		p	6		shouldConvertToBlock
	m	(Ldmu;Ldcx;Ljd;Layw;)Z	a	attemptPlaceSculk
		p	1		spreadManager
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldkz;	c	getSpreader
	m	()Ldkz;	m	getSameSpaceSpreader
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtt;	d	WATERLOGGED
	f	Ldkz;	e	veinSpreader
	f	Ldkz;	f	sameSpaceSpreader
c	dmv$a	net/minecraft/world/level/block/SculkVeinBlock$a
	m	(Ldmv;[Ldkz$e;)V	<init>	<init>
		p	2		growTypes
	m	()[Ldkz$e;	a	getSpreadTypes
	m	(Ldcc;Ljd;Ljd;Lji;Ldtc;)Z	a	stateCanBeReplaced
		p	1		world
		p	2		pos
		p	3		growPos
		p	4		direction
		p	5		state
	m	(Ldtc;)Z	a	isOtherBlockValidAsSource
		p	1		state
	f	[Ldkz$e;	b	spreadTypes
c	dmw	net/minecraft/world/level/block/BlockSeaPickle
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	m	isDead
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_PICKLES
	f	Lduc;	c	PICKLES
	f	Ldtt;	d	WATERLOGGED
	f	Lexv;	e	ONE_AABB
	f	Lexv;	f	TWO_AABB
	f	Lexv;	g	THREE_AABB
	f	Lexv;	h	FOUR_AABB
c	dmx	net/minecraft/world/level/block/SeagrassBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
c	dmy	net/minecraft/world/level/block/BlockShulkerBox
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lcti;)Ldfy;	a	getBlockByColor
		p	0		dyeColor
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		options
	m	(Lcuq;Ldcz;Ldrr;)V	a	lambda$getCloneItemStack$5
		p	2		blockEntity
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldfy;)Lcti;	a	getColorFromBlock
		p	0		block
	m	(Ldmy;)Ljava/util/Optional;	a	lambda$static$0
		p	0		block
	m	(Ldrr;Ljava/util/function/Consumer;)V	a	lambda$getDrops$4
		p	1		lootConsumer
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldrr;)Z	a	canOpen
		p	0		state
		p	1		world
		p	2		pos
		p	3		entity
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/EnumMap;)V	a	lambda$static$3
		p	0		map
	m	(Ljava/util/Optional;Ldtb$d;)Ldmy;	a	lambda$static$1
		p	0		color
		p	1		settings
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcti;	b	getColor
	m	(Lcti;)Lcuq;	b	getColoredItemStack
		p	0		color
	m	(Lcul;)Lcti;	b	getColorFromItem
		p	0		item
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	FACING
	f	Lakr;	c	CONTENTS
	f	Lwz;	d	UNKNOWN_CONTENTS
	f	F	e	OPEN_AABB_SIZE
	f	Lexv;	f	UP_OPEN_AABB
	f	Lexv;	g	DOWN_OPEN_AABB
	f	Lexv;	h	WES_OPEN_AABB
	f	Lexv;	i	EAST_OPEN_AABB
	f	Lexv;	j	NORTH_OPEN_AABB
	f	Lexv;	k	SOUTH_OPEN_AABB
	f	Ljava/util/Map;	l	OPEN_SHAPE_BY_DIRECTION
	f	Lcti;	m	color
c	dmy$1	net/minecraft/world/level/block/BlockShulkerBox$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	dmz	net/minecraft/world/level/block/BlockSign
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldrs;)Z	a	otherPlayerIsEditingSign
		p	1		player
		p	2		blockEntity
	m	(Lcmx;Ldrs;Z)V	a	openTextEdit
		p	1		player
		p	2		blockEntity
		p	3		front
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldfy;)Ldup;	a	getWoodType
		p	0		block
	m	(Ldtc;)Z	a	isPossibleToRespawnInThis
		p	1		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Lwz;)Z	a	lambda$hasEditableText$0
		p	0		message
	m	(Lcmx;Ldrs;Z)Z	b	hasEditableText
		p	1		player
		p	2		blockEntity
		p	3		front
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldup;	d	type
	m	(Ldtc;)F	g	getYRotationDegrees
		p	1		state
	m	(Ldtc;)Lexc;	m	getSignHitboxCenterPosition
		p	1		state
	f	Ldup;	a	type
	f	Ldtt;	f	WATERLOGGED
	f	F	g	AABB_OFFSET
	f	Lexv;	h	SHAPE
c	dna	net/minecraft/world/level/block/IBlockWaterlogged
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcmx;Ldcx;Ljd;Ldtc;)Lcuq;	a	pickupBlock
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	()Ljava/util/Optional;	aw_	getPickupSound
c	dnb	net/minecraft/world/level/block/BlockSkull
	m	(Ldnb$a;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	f	I	b	ROTATIONS
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MAX
	f	Lduc;	e	ROTATION
	f	Lexv;	f	SHAPE
	f	Lexv;	g	PIGLIN_SHAPE
c	dnb$a	net/minecraft/world/level/block/BlockSkull$a
	f	Ljava/util/Map;	a	TYPES
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dnb$b	net/minecraft/world/level/block/BlockSkull$Type
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Ldnb$b;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldnb$b;	c	SKELETON
	f	Ldnb$b;	d	WITHER_SKELETON
	f	Ldnb$b;	e	PLAYER
	f	Ldnb$b;	f	ZOMBIE
	f	Ldnb$b;	g	CREEPER
	f	Ldnb$b;	h	PIGLIN
	f	Ldnb$b;	i	DRAGON
	f	Ljava/lang/String;	j	name
	f	[Ldnb$b;	k	$VALUES
c	dnc	net/minecraft/world/level/block/BlockStepAbstract
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	TYPE
	f	Ldtt;	c	WATERLOGGED
	f	Lexv;	d	BOTTOM_AABB
	f	Lexv;	e	TOP_AABB
c	dnc$1	net/minecraft/world/level/block/BlockStepAbstract$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	dnd	net/minecraft/world/level/block/BlockSlime
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbsr;)V	a	bounceUp
		p	1		entity
	m	(Ldcc;Lbsr;)V	a	updateEntityAfterFallOn
		p	1		world
		p	2		entity
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dne	net/minecraft/world/level/block/SmallDripleafBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()F	ax_	getMaxVerticalOffset
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtw;	d	FACING
	f	F	e	AABB_OFFSET
	f	Lexv;	f	SHAPE
	f	Ldtt;	g	WATERLOGGED
c	dnf	net/minecraft/world/level/block/BlockSmithingTable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		inventory
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lwz;	c	CONTAINER_TITLE
c	dng	net/minecraft/world/level/block/BlockSmoker
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Lcmx;)V	a	openContainer
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dnh	net/minecraft/world/level/block/SnifferEggBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcc;Ljd;)Z	a	hatchBoost
		p	0		world
		p	1		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)I	m	getHatchLevel
		p	1		state
	m	(Ldtc;)Z	n	isReadyToHatch
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HATCH_LEVEL
	f	Lduc;	c	HATCH
	f	I	d	REGULAR_HATCH_TIME_TICKS
	f	I	e	BOOSTED_HATCH_TIME_TICKS
	f	I	f	RANDOM_HATCH_OFFSET_TICKS
	f	Lexv;	g	SHAPE
c	dni	net/minecraft/world/level/block/BlockSnow
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HEIGHT
	f	Lduc;	c	LAYERS
	f	[Lexv;	d	SHAPE_BY_LAYER
	f	I	e	HEIGHT_IMPASSABLE
c	dni$1	net/minecraft/world/level/block/BlockSnow$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	dnj	net/minecraft/world/level/block/BlockDirtSnow
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Z	m	isSnowySetting
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtt;	c	SNOWY
c	dnk	net/minecraft/world/level/block/BlockSoulFire
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;)Z	f	canBurn
		p	1		state
	m	(Ldtc;)Z	m	canSurviveOnBlock
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	dnl	net/minecraft/world/level/block/BlockSlowSand
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	I	c	BUBBLE_COLUMN_CHECK_DELAY
c	dnm	net/minecraft/world/level/block/SoundEffectType
	m	(FFLavo;Lavo;Lavo;Lavo;Lavo;)V	<init>	<init>
		p	1		volume
		p	2		pitch
		p	3		breakSound
		p	4		stepSound
		p	5		placeSound
		p	6		hitSound
		p	7		fallSound
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Lavo;	c	getBreakSound
	m	()Lavo;	d	getStepSound
	m	()Lavo;	e	getPlaceSound
	m	()Lavo;	f	getHitSound
	m	()Lavo;	g	getFallSound
	f	Ldnm;	A	LANTERN
	f	Ldnm;	B	STEM
	f	Ldnm;	C	NYLIUM
	f	Ldnm;	D	FUNGUS
	f	Ldnm;	E	ROOTS
	f	Ldnm;	F	SHROOMLIGHT
	f	Ldnm;	G	WEEPING_VINES
	f	Ldnm;	H	TWISTING_VINES
	f	Ldnm;	I	SOUL_SAND
	f	Ldnm;	J	SOUL_SOIL
	f	Ldnm;	K	BASALT
	f	Ldnm;	L	WART_BLOCK
	f	Ldnm;	M	NETHERRACK
	f	Ldnm;	N	NETHER_BRICKS
	f	Ldnm;	O	NETHER_SPROUTS
	f	Ldnm;	P	NETHER_ORE
	f	Ldnm;	Q	BONE_BLOCK
	f	Ldnm;	R	NETHERITE_BLOCK
	f	Ldnm;	S	ANCIENT_DEBRIS
	f	Ldnm;	T	LODESTONE
	f	Ldnm;	U	CHAIN
	f	Ldnm;	V	NETHER_GOLD_ORE
	f	Ldnm;	W	GILDED_BLACKSTONE
	f	Ldnm;	X	CANDLE
	f	Ldnm;	Y	AMETHYST
	f	Ldnm;	Z	AMETHYST_CLUSTER
	f	Ldnm;	aA	SCULK
	f	Ldnm;	aB	SCULK_VEIN
	f	Ldnm;	aC	SCULK_SHRIEKER
	f	Ldnm;	aD	GLOW_LICHEN
	f	Ldnm;	aE	DEEPSLATE
	f	Ldnm;	aF	DEEPSLATE_BRICKS
	f	Ldnm;	aG	DEEPSLATE_TILES
	f	Ldnm;	aH	POLISHED_DEEPSLATE
	f	Ldnm;	aI	FROGLIGHT
	f	Ldnm;	aJ	FROGSPAWN
	f	Ldnm;	aK	MANGROVE_ROOTS
	f	Ldnm;	aL	MUDDY_MANGROVE_ROOTS
	f	Ldnm;	a	EMPTY
	f	Ldnm;	aM	MUD
	f	Ldnm;	aN	MUD_BRICKS
	f	Ldnm;	aO	PACKED_MUD
	f	Ldnm;	aP	HANGING_SIGN
	f	Ldnm;	aQ	NETHER_WOOD_HANGING_SIGN
	f	Ldnm;	aR	BAMBOO_WOOD_HANGING_SIGN
	f	Ldnm;	aS	BAMBOO_WOOD
	f	Ldnm;	aT	NETHER_WOOD
	f	Ldnm;	aU	CHERRY_WOOD
	f	Ldnm;	aV	CHERRY_SAPLING
	f	Ldnm;	aW	CHERRY_LEAVES
	f	Ldnm;	aX	CHERRY_WOOD_HANGING_SIGN
	f	Ldnm;	aY	CHISELED_BOOKSHELF
	f	Ldnm;	aZ	SUSPICIOUS_SAND
	f	Ldnm;	aa	SMALL_AMETHYST_BUD
	f	Ldnm;	ab	MEDIUM_AMETHYST_BUD
	f	Ldnm;	ac	LARGE_AMETHYST_BUD
	f	Ldnm;	ad	TUFF
	f	Ldnm;	ae	TUFF_BRICKS
	f	Ldnm;	af	POLISHED_TUFF
	f	Ldnm;	ag	CALCITE
	f	Ldnm;	ah	DRIPSTONE_BLOCK
	f	Ldnm;	ai	POINTED_DRIPSTONE
	f	Ldnm;	aj	COPPER
	f	Ldnm;	ak	COPPER_BULB
	f	Ldnm;	al	COPPER_GRATE
	f	Ldnm;	am	CAVE_VINES
	f	Ldnm;	an	SPORE_BLOSSOM
	f	Ldnm;	ao	AZALEA
	f	Ldnm;	ap	FLOWERING_AZALEA
	f	Ldnm;	aq	MOSS_CARPET
	f	Ldnm;	ar	PINK_PETALS
	f	Ldnm;	as	MOSS
	f	Ldnm;	at	BIG_DRIPLEAF
	f	Ldnm;	au	SMALL_DRIPLEAF
	f	Ldnm;	av	ROOTED_DIRT
	f	Ldnm;	aw	HANGING_ROOTS
	f	Ldnm;	ax	AZALEA_LEAVES
	f	Ldnm;	ay	SCULK_SENSOR
	f	Ldnm;	az	SCULK_CATALYST
	f	Ldnm;	b	WOOD
	f	Ldnm;	ba	SUSPICIOUS_GRAVEL
	f	Ldnm;	bb	DECORATED_POT
	f	Ldnm;	bc	DECORATED_POT_CRACKED
	f	Ldnm;	bd	TRIAL_SPAWNER
	f	Ldnm;	be	SPONGE
	f	Ldnm;	bf	WET_SPONGE
	f	Ldnm;	bg	VAULT
	f	Ldnm;	bh	HEAVY_CORE
	f	Ldnm;	bi	COBWEB
	f	F	bj	volume
	f	F	bk	pitch
	f	Lavo;	bl	breakSound
	f	Lavo;	bm	stepSound
	f	Lavo;	bn	placeSound
	f	Lavo;	bo	hitSound
	f	Lavo;	bp	fallSound
	f	Ldnm;	c	GRAVEL
	f	Ldnm;	d	GRASS
	f	Ldnm;	e	LILY_PAD
	f	Ldnm;	f	STONE
	f	Ldnm;	g	METAL
	f	Ldnm;	h	GLASS
	f	Ldnm;	i	WOOL
	f	Ldnm;	j	SAND
	f	Ldnm;	k	SNOW
	f	Ldnm;	l	POWDER_SNOW
	f	Ldnm;	m	LADDER
	f	Ldnm;	n	ANVIL
	f	Ldnm;	o	SLIME_BLOCK
	f	Ldnm;	p	HONEY_BLOCK
	f	Ldnm;	q	WET_GRASS
	f	Ldnm;	r	CORAL_BLOCK
	f	Ldnm;	s	BAMBOO
	f	Ldnm;	t	BAMBOO_SAPLING
	f	Ldnm;	u	SCAFFOLDING
	f	Ldnm;	v	SWEET_BERRY_BUSH
	f	Ldnm;	w	CROP
	f	Ldnm;	x	HARD_CROP
	f	Ldnm;	y	VINE
	f	Ldnm;	z	NETHER_WART
c	dnn	net/minecraft/world/level/block/BlockMobSpawner
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		options
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dno	net/minecraft/world/level/block/BlockSponge
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;)V	a	tryAbsorbWater
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ljd;Ldcw;Ljd;)Z	a	lambda$removeWaterBreadthFirstSearch$1
		p	2		currentPos
	m	(Ljd;Ljava/util/function/Consumer;)V	a	lambda$removeWaterBreadthFirstSearch$0
		p	0		currentPos
		p	1		queuer
	m	(Ldcw;Ljd;)Z	b	removeWaterBreadthFirstSearch
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_DEPTH
	f	I	c	MAX_COUNT
	f	[Lji;	d	ALL_DIRECTIONS
c	dnp	net/minecraft/world/level/block/SporeBlossomBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	SHAPE
	f	I	c	ADD_PARTICLE_ATTEMPTS
	f	I	d	PARTICLE_XZ_RADIUS
	f	I	e	PARTICLE_Y_MAX
c	dnq	net/minecraft/world/level/block/BlockDirtSnowSpreadable
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	b	canBeGrass
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcz;Ljd;)Z	c	canPropagate
		p	0		state
		p	1		world
		p	2		pos
c	dnr	net/minecraft/world/level/block/BlockStainedGlass
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcti;	b	getColor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcti;	c	color
c	dns	net/minecraft/world/level/block/BlockStainedGlassPane
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcti;	b	getColor
	f	Lcom/mojang/serialization/MapCodec;	j	CODEC
	f	Lcti;	k	color
c	dnt	net/minecraft/world/level/block/BlockStairs
	m	(Ldtc;Ldtb$d;)V	<init>	<init>
		p	1		baseBlockState
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILexv;Lexv;Lexv;Lexv;Lexv;)Lexv;	a	makeStairShape
		p	0		i
		p	1		base
		p	2		northWest
		p	3		northEast
		p	4		southWest
		p	5		southEast
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldnt;)Ldtc;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lexv;Lexv;Lexv;Lexv;Lexv;)[Lexv;	a	makeShapes
		p	0		base
		p	1		northWest
		p	2		northEast
		p	3		southWest
		p	4		southEast
	m	(Lexv;Lexv;Lexv;Lexv;Lexv;I)Lexv;	a	lambda$makeShapes$2
		p	5		i
	m	(I)[Lexv;	b	lambda$makeShapes$3
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	c	canTakeShape
		p	0		state
		p	1		world
		p	2		pos
		p	3		dir
	m	()F	e	getExplosionResistance
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Ldul;	i	getStairsShape
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	m	isStairs
		p	0		state
	m	(Ldtc;)I	n	getShapeIndex
		p	1		state
	f	[Lexv;	F	TOP_SHAPES
	f	[Lexv;	G	BOTTOM_SHAPES
	f	Ldtc;	H	baseState
	f	[I	I	SHAPE_BY_STATE
	f	Ldfy;	J	base
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldua;	c	HALF
	f	Ldua;	d	SHAPE
	f	Ldtt;	e	WATERLOGGED
	f	Lexv;	f	TOP_AABB
	f	Lexv;	g	BOTTOM_AABB
	f	Lexv;	h	OCTET_NNN
	f	Lexv;	i	OCTET_NNP
	f	Lexv;	j	OCTET_NPN
	f	Lexv;	k	OCTET_NPP
	f	Lexv;	l	OCTET_PNN
	f	Lexv;	m	OCTET_PNP
	f	Lexv;	n	OCTET_PPN
	f	Lexv;	o	OCTET_PPP
c	dnt$1	net/minecraft/world/level/block/BlockStairs$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dnu	net/minecraft/world/level/block/BlockFloorSign
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)F	g	getYRotationDegrees
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	ROTATION
c	dnv	net/minecraft/world/level/block/BlockStem
	m	(Lakq;Lakq;Lakq;Ldtb$d;)V	<init>	<init>
		p	1		gourdBlock
		p	2		attachedStemBlock
		p	3		pickBlockItem
		p	4		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldnv;)Lakq;	a	lambda$static$2
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldnv;)Lakq;	b	lambda$static$1
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldnv;)Lakq;	c	lambda$static$0
		p	0		block
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	F	d	AABB_OFFSET
	f	[Lexv;	e	SHAPE_BY_AGE
	f	Lakq;	f	fruit
	f	Lakq;	g	attachedStem
	f	Lakq;	h	seed
c	dnw	net/minecraft/world/level/block/BlockStonecutter
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;ILcmw;Lcmx;)Lcpu;	a	lambda$getMenuProvider$0
		p	2		syncId
		p	3		playerInventory
		p	4		player
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Lexv;	c	SHAPE
	f	Lwz;	d	CONTAINER_TITLE
c	dnx	net/minecraft/world/level/block/BlockStructure
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ldrx;)V	a	trigger
		p	1		world
		p	2		blockEntity
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	MODE
c	dnx$1	net/minecraft/world/level/block/BlockStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
c	dny	net/minecraft/world/level/block/BlockStructureVoid
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	b	SIZE
	f	Lexv;	c	SHAPE
c	dnz	net/minecraft/world/level/block/BlockReed
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	AGE
	f	F	c	AABB_OFFSET
	f	Lexv;	d	SHAPE
c	doa	net/minecraft/world/level/block/EnumBlockSupport
	m	()[Ldoa;	a	$values
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	Ldoa;	a	FULL
	f	Ldoa;	b	CENTER
	f	Ldoa;	c	RIGID
	f	[Ldoa;	d	$VALUES
c	doa$1	net/minecraft/world/level/block/EnumBlockSupport$1
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
c	doa$2	net/minecraft/world/level/block/EnumBlockSupport$2
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	CENTER_SUPPORT_WIDTH
	f	Lexv;	e	CENTER_SUPPORT_SHAPE
c	doa$3	net/minecraft/world/level/block/EnumBlockSupport$3
	m	(Ldtc;Ldcc;Ljd;Lji;)Z	a	isSupporting
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	f	I	d	RIGID_SUPPORT_WIDTH
	f	Lexv;	e	RIGID_SUPPORT_SHAPE
c	dob	net/minecraft/world/level/block/SuspiciousEffectHolder
	m	(Ldcv;)Ldob;	a	tryGet
		p	0		item
	m	()Lcxw;	b	getSuspiciousEffects
	m	()Ljava/util/List;	c	getAllEffectHolders
c	doc	net/minecraft/world/level/block/BlockSweetBerryBush
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	F	d	HURT_SPEED_THRESHOLD
	f	Lexv;	e	SAPLING_SHAPE
	f	Lexv;	f	MID_GROWTH_SHAPE
c	dod	net/minecraft/world/level/block/BlockTallPlantFlower
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	doe	net/minecraft/world/level/block/BlockLongGrass
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Layw;Ljd;Ldtc;)V	a	performBonemeal
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcw;Layw;Ljd;Ldtc;)Z	a	isBonemealSuccess
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldcz;Ljd;Ldtc;)Z	b	isValidBonemealTarget
		p	1		world
		p	2		pos
		p	3		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	AABB_OFFSET
	f	Lexv;	c	SHAPE
c	dof	net/minecraft/world/level/block/TallSeagrassBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcc;Ljd;Ldtc;Lepd;)Z	a	canPlaceLiquid
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
		p	5		fluid
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcx;Ljd;Ldtc;Lepe;)Z	a	placeLiquid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluidState
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldua;	d	HALF
	f	F	e	AABB_OFFSET
	f	Lexv;	f	SHAPE
c	dog	net/minecraft/world/level/block/BlockTarget
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcx;Ldtc;ILjd;I)V	a	setOutputPower
		p	0		world
		p	1		state
		p	2		power
		p	3		pos
		p	4		delay
	m	(Ldcx;Ldtc;Lewy;Lbsr;)I	a	updateRedstoneOutput
		p	0		world
		p	1		state
		p	2		hitResult
		p	3		entity
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lewy;Lexc;)I	a	getRedstoneStrength
		p	0		hitResult
		p	1		pos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduc;	b	OUTPUT_POWER
	f	I	c	ACTIVATION_TICKS_ARROWS
	f	I	d	ACTIVATION_TICKS_OTHER
c	doh	net/minecraft/world/level/block/TintedGlassBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	doi	net/minecraft/world/level/block/BlockTNT
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldco;)Z	a	dropFromExplosion
		p	1		explosion
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;)V	a	explode
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Lbtn;)V	a	explode
		p	0		world
		p	1		pos
		p	2		igniter
	m	(Ldcw;Ljd;Ldco;)V	a	wasExploded
		p	1		world
		p	2		pos
		p	3		explosion
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	UNSTABLE
c	doj	net/minecraft/world/level/block/BlockTorch
	m	(Llq;Ldtb$d;)V	<init>	<init>
		p	1		particle
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldoj;)Llq;	a	lambda$static$3
		p	0		block
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Lll;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		particleType
	m	(Llq;)Lll;	a	lambda$static$2
		p	0		particleType
	m	(Lll;)Ljava/lang/String;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	c	PARTICLE_OPTIONS_FIELD
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Llq;	e	flameParticle
c	dok	net/minecraft/world/level/block/TorchflowerCropBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;)I	a	getBonemealAgeIncrease
		p	1		world
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Lduc;	b	getAgeProperty
	m	(I)Ldtc;	b	getStateForAge
		p	1		age
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()I	c	getMaxAge
	m	()Ldcv;	d	getBaseSeedId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lduc;	c	AGE
	f	F	g	AABB_OFFSET
	f	[Lexv;	h	SHAPE_BY_AGE
	f	I	i	BONEMEAL_INCREASE
c	dol	net/minecraft/world/level/block/BlockGlassAbstract
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dom	net/minecraft/world/level/block/BlockTrapdoor
	m	(Ldtr;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcmx;Ldcw;Ljd;Z)V	a	playSound
		p	1		player
		p	2		world
		p	3		pos
		p	4		open
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldom;)Ldtr;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	b	toggle
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	()Ldtr;	m	getType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	OPEN
	f	Ldua;	c	HALF
	f	Ldtt;	d	POWERED
	f	Ldtt;	e	WATERLOGGED
	f	I	f	AABB_THICKNESS
	f	Lexv;	g	EAST_OPEN_AABB
	f	Lexv;	h	WEST_OPEN_AABB
	f	Lexv;	i	SOUTH_OPEN_AABB
	f	Lexv;	j	NORTH_OPEN_AABB
	f	Lexv;	k	BOTTOM_AABB
	f	Lexv;	l	TOP_AABB
	f	Ldtr;	m	type
c	dom$1	net/minecraft/world/level/block/BlockTrapdoor$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	don	net/minecraft/world/level/block/BlockChestTrapped
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	()Lavw;	c	getOpenChestStat
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	()Ldqj;	m	lambda$new$0
	f	Lcom/mojang/serialization/MapCodec;	n	CODEC
c	doo	net/minecraft/world/level/block/TrialSpawnerBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ldcw;Ljd;Ldtc;Ldsc;)V	a	lambda$getTicker$0
		p	1		world
		p	2		pos
		p	3		state
		p	4		blockEntity
	m	(Lcuq;Lcul$b;Ljava/util/List;Lcwm;)V	a	appendHoverText
		p	1		stack
		p	2		context
		p	3		tooltip
		p	4		options
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Ldsc;)V	a	lambda$getTicker$1
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldua;	b	STATE
	f	Ldtt;	c	OMINOUS
c	dop	net/minecraft/world/level/block/BlockTripwire
	m	(Ldfy;Ldtb$d;)V	<init>	<init>
		p	1		hookBlock
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;)V	a	checkPressed
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Ldtc;)V	a	updateSource
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldop;)Ldfy;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;)Z	a	shouldConnectTo
		p	1		state
		p	2		facing
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	POWERED
	f	Ldtt;	c	ATTACHED
	f	Ldtt;	d	DISARMED
	f	Ldtt;	e	NORTH
	f	Ldtt;	f	EAST
	f	Ldtt;	g	SOUTH
	f	Ldtt;	h	WEST
	f	Lexv;	i	AABB
	f	Lexv;	j	NOT_ATTACHED_AABB
	f	Ljava/util/Map;	k	PROPERTY_BY_DIRECTION
	f	I	l	RECHECK_PERIOD
	f	Ldfy;	m	hook
c	dop$1	net/minecraft/world/level/block/BlockTripwire$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	doq	net/minecraft/world/level/block/BlockTripwireHook
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Ldtc;ZZILdtc;)V	a	calculateState
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;ZZZZ)V	a	emitState
		p	0		world
		p	1		pos
		p	2		attached
		p	3		on
		p	4		detached
		p	5		off
	m	(Ldfy;Ldcw;Ljd;Lji;)V	a	notifyNeighbors
		p	0		block
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldtt;	c	POWERED
	f	Ldtt;	d	ATTACHED
	f	I	e	WIRE_DIST_MIN
	f	I	f	WIRE_DIST_MAX
	f	I	g	AABB_OFFSET
	f	Lexv;	h	NORTH_AABB
	f	Lexv;	i	SOUTH_AABB
	f	Lexv;	j	WEST_AABB
	f	Lexv;	k	EAST_AABB
	f	I	l	RECHECK_PERIOD
c	doq$1	net/minecraft/world/level/block/BlockTripwireHook$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dor	net/minecraft/world/level/block/BlockTurtleEgg
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Z	a	onSand
		p	0		world
		p	1		pos
	m	(Ldcw;)Z	a	shouldUpdateHatchLevel
		p	1		world
	m	(Ldcw;Lbsr;)Z	a	canDestroyEgg
		p	1		world
		p	2		entity
	m	(Ldcw;Lcmx;Ljd;Ldtc;Ldqh;Lcuq;)V	a	playerDestroy
		p	1		world
		p	2		player
		p	3		pos
		p	4		state
		p	5		blockEntity
		p	6		tool
	m	(Ldcw;Ldtc;Ljd;Lbsr;F)V	a	fallOn
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		fallDistance
	m	(Ldcw;Ldtc;Ljd;Lbsr;I)V	a	destroyEgg
		p	1		world
		p	2		state
		p	3		pos
		p	4		entity
		p	5		inverseChance
	m	(Ldcw;Ljd;Ldtc;)V	a	decreaseEggs
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Lbsr;)V	a	stepOn
		p	1		world
		p	2		pos
		p	3		state
		p	4		entity
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcc;Ljd;)Z	b	isSand
		p	0		world
		p	1		pos
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HATCH_LEVEL
	f	I	c	MIN_EGGS
	f	I	d	MAX_EGGS
	f	Lduc;	e	HATCH
	f	Lduc;	f	EGGS
	f	Lexv;	g	ONE_EGG_AABB
	f	Lexv;	h	MULTIPLE_EGGS_AABB
c	dos	net/minecraft/world/level/block/BlockTwistingVines
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Ldfy;	b	getBodyBlock
	m	(Ldtc;)Z	g	canGrowInto
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lexv;	g	SHAPE
c	dot	net/minecraft/world/level/block/BlockTwistingVinesPlant
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ldjn;	c	getHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lexv;	e	SHAPE
c	dou	net/minecraft/world/level/block/VaultBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Laqu;Ldcw;Ljd;Ldtc;Ldsk;)V	a	lambda$getTicker$0
		p	1		worldx
		p	2		pos
		p	3		statex
		p	4		blockEntity
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcw;Ljd;Ldtc;Ldsk;)V	a	lambda$getTicker$1
		p	0		worldx
		p	1		pos
		p	2		statex
		p	3		blockEntity
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lduf;	b	STATE
	f	Ldtw;	c	FACING
	f	Ldtt;	d	OMINOUS
c	dov	net/minecraft/world/level/block/BlockVine
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcc;Ljd;)Z	a	canSpread
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lji;)Z	a	isAcceptableNeighbour
		p	0		world
		p	1		pos
		p	2		direction
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Ldtc;Layw;)Ldtc;	a	copyRandomFaces
		p	1		above
		p	2		state
		p	3		random
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
		p	0		entry
	m	(Lji;)Ldtt;	a	getPropertyForFace
		p	0		direction
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcc;Ljd;Lji;)Z	b	canSupportAtFace
		p	1		world
		p	2		pos
		p	3		side
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;)Ldtc;	i	getUpdatedState
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Lexv;	m	calculateShape
		p	0		state
	m	(Ldtc;)Z	n	hasFaces
		p	1		state
	m	(Ldtc;)I	o	countFaces
		p	1		state
	m	(Ldtc;)Z	p	hasHorizontalConnection
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	UP
	f	Ldtt;	c	NORTH
	f	Ldtt;	d	EAST
	f	Ldtt;	e	SOUTH
	f	Ldtt;	f	WEST
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	F	h	AABB_OFFSET
	f	Lexv;	i	UP_AABB
	f	Lexv;	j	WEST_AABB
	f	Lexv;	k	EAST_AABB
	f	Lexv;	l	NORTH_AABB
	f	Lexv;	m	SOUTH_AABB
	f	Ljava/util/Map;	n	shapesCache
c	dov$1	net/minecraft/world/level/block/BlockVine$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	dow	net/minecraft/world/level/block/BlockBannerWall
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		color
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ljava/util/Map;	c	SHAPES
c	dox	net/minecraft/world/level/block/BlockCobbleWall
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FFFFFF)Ljava/util/Map;	a	makeShapes
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcz;Ldtc;Ljd;Ldtc;)Ldtc;	a	topUpdate
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
	m	(Ldcz;Ldtc;Ljd;Ldtc;ZZZZ)Ldtc;	a	updateShape
		p	1		world
		p	2		state
		p	3		pos
		p	4		aboveState
		p	5		north
		p	6		east
		p	7		south
		p	8		west
	m	(Ldcz;Ljd;Ldtc;Ljd;Ldtc;Lji;)Ldtc;	a	sideUpdate
		p	1		world
		p	2		pos
		p	3		state
		p	4		neighborPos
		p	5		neighborState
		p	6		direction
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Ldtc;Lexv;)Z	a	shouldRaisePost
		p	1		state
		p	2		aboveState
		p	3		aboveShape
	m	(Ldtc;Lduf;)Z	a	isConnected
		p	0		state
		p	1		property
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtc;ZLji;)Z	a	connectsTo
		p	1		state
		p	2		faceFullSquare
		p	3		side
	m	(Ldtc;ZZZZLexv;)Ldtc;	a	updateSides
		p	1		state
		p	2		north
		p	3		east
		p	4		south
		p	5		west
		p	6		aboveShape
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lexv;Lduo;Lexv;Lexv;)Lexv;	a	applyWallShape
		p	0		base
		p	1		wallShape
		p	2		tall
		p	3		low
	m	(Lexv;Lexv;)Z	a	isCovered
		p	0		aboveShape
		p	1		tallShape
	m	(ZLexv;Lexv;)Lduo;	a	makeWallState
		p	1		connected
		p	2		aboveShape
		p	3		tallShape
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lexv;	F	POST_TEST
	f	Lexv;	G	NORTH_TEST
	f	Lexv;	H	SOUTH_TEST
	f	Lexv;	I	WEST_TEST
	f	Lexv;	J	EAST_TEST
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	b	UP
	f	Ldua;	c	EAST_WALL
	f	Ldua;	d	NORTH_WALL
	f	Ldua;	e	SOUTH_WALL
	f	Ldua;	f	WEST_WALL
	f	Ldtt;	g	WATERLOGGED
	f	Ljava/util/Map;	h	shapeByIndex
	f	Ljava/util/Map;	i	collisionShapeByIndex
	f	I	j	WALL_WIDTH
	f	I	k	WALL_HEIGHT
	f	I	l	POST_WIDTH
	f	I	m	POST_COVER_WIDTH
	f	I	n	WALL_COVER_START
	f	I	o	WALL_COVER_END
c	dox$1	net/minecraft/world/level/block/BlockCobbleWall$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	doy	net/minecraft/world/level/block/WallHangingSignBlock
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcz;Ldtc;Ljd;Lji;)Z	a	canAttachTo
		p	1		world
		p	2		state
		p	3		toPos
		p	4		direction
	m	(Ldtc;Lcmx;Lewy;Ldrs;Lcuq;)Z	a	shouldTryToChainAnotherHangingSign
		p	1		state
		p	2		player
		p	3		hitResult
		p	4		sign
		p	5		stack
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lewy;Ldtc;)Z	a	isHittingEditableSide
		p	1		hitResult
		p	2		state
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	b	canPlace
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	()Ljava/lang/String;	g	getDescriptionId
	m	(Ldtc;)F	g	getYRotationDegrees
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Lexv;	c	PLANK_NORTHSOUTH
	f	Lexv;	d	PLANK_EASTWEST
	f	Lexv;	e	SHAPE_NORTHSOUTH
	f	Lexv;	i	SHAPE_EASTWEST
	f	Ljava/util/Map;	j	AABBS
c	doy$1	net/minecraft/world/level/block/WallHangingSignBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	doz	net/minecraft/world/level/block/BlockWallSign
	m	(Ldup;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	m	(Ldtc;)F	g	getYRotationDegrees
		p	1		state
	m	(Ldtc;)Lexc;	m	getSignHitboxCenterPosition
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	F	c	AABB_THICKNESS
	f	F	d	AABB_BOTTOM
	f	F	e	AABB_TOP
	f	Ljava/util/Map;	i	AABBS
c	dpa	net/minecraft/world/level/block/BlockSkullWall
	m	(Ldnb$a;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()Ljava/lang/String;	g	getDescriptionId
	f	Ljava/util/Map;	b	AABBS
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtw;	d	FACING
c	dpb	net/minecraft/world/level/block/BlockTorchWall
	m	(Llq;Ldtb$d;)V	<init>	<init>
		p	1		particle
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldpb;)Llq;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldcz;Ljd;Lji;)Z	b	canSurvive
		p	0		world
		p	1		pos
		p	2		facing
	m	()Ljava/lang/String;	g	getDescriptionId
	m	(Ldtc;)Lexv;	m	getShape
		p	0		state
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Ldtw;	g	FACING
	f	F	h	AABB_OFFSET
	f	Ljava/util/Map;	i	AABBS
c	dpc	net/minecraft/world/level/block/BlockWaterLily
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexv;	b	AABB
c	dpd	net/minecraft/world/level/block/WaterloggedTransparentBlock
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtt;	c	WATERLOGGED
c	dpe	net/minecraft/world/level/block/WeatheringCopper
	m	()Lcom/google/common/collect/BiMap;	a	lambda$static$1
	m	(Ldfy;)Ljava/util/Optional;	a	getPrevious
		p	0		block
	m	(Ldtc;Ldfy;)Ldtc;	a	lambda$getNext$3
		p	1		block
	m	()F	ay_	getChanceModifier
	m	(Ldfy;)Ldfy;	b	getFirst
		p	0		block
	m	(Ldtc;)Ljava/util/Optional;	b	getPrevious
		p	0		state
	m	(Ldtc;Ldfy;)Ldtc;	b	lambda$getPrevious$2
		p	1		block
	m	(Ldfy;)Ljava/util/Optional;	c	getNext
		p	0		block
	m	(Ldtc;)Ldtc;	c	getFirst
		p	0		state
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$0
	m	(Ldtc;)Ljava/util/Optional;	i_	getNext
		p	1		state
	f	Ljava/util/function/Supplier;	w_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	x_	PREVIOUS_BY_BLOCK
c	dpe$a	net/minecraft/world/level/block/WeatheringCopper$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Ldpe$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldpe$a;	a	UNAFFECTED
	f	Ldpe$a;	b	EXPOSED
	f	Ldpe$a;	c	WEATHERED
	f	Ldpe$a;	d	OXIDIZED
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Ldpe$a;	g	$VALUES
c	dpf	net/minecraft/world/level/block/WeatheringCopperBulbBlock
	m	(Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldpe$a;	e	weatherState
c	dpg	net/minecraft/world/level/block/WeatheringCopperDoorBlock
	m	(Ldtr;Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		oxidationLevel
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	l	CODEC
	f	Ldpe$a;	m	weatherState
c	dph	net/minecraft/world/level/block/WeatheringCopperFullBlock
	m	(Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldpe$a;	e	weatherState
c	dpi	net/minecraft/world/level/block/WeatheringCopperGrateBlock
	m	(Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldpe$a;	f	weatherState
c	dpj	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	m	(Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Ldpe$a;	g	weatherState
c	dpk	net/minecraft/world/level/block/WeatheringCopperStairBlock
	m	(Ldpe$a;Ldtc;Ldtb$d;)V	<init>	<init>
		p	1		oxidationLevel
		p	2		baseBlockState
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldpk;)Ldtc;	a	lambda$static$0
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	m	getAge
	f	Lcom/mojang/serialization/MapCodec;	I	CODEC
	f	Ldpe$a;	J	weatherState
c	dpl	net/minecraft/world/level/block/WeatheringCopperTrapDoorBlock
	m	(Ldtr;Ldpe$a;Ldtb$d;)V	<init>	<init>
		p	1		type
		p	2		oxidationLevel
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	()Ljava/lang/Enum;	c	getAge
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	()Ldpe$a;	n	getAge
	f	Lcom/mojang/serialization/MapCodec;	m	CODEC
	f	Ldpe$a;	n	weatherState
c	dpm	net/minecraft/world/level/block/BlockWeb
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dpn	net/minecraft/world/level/block/BlockWeepingVines
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Layw;)I	a	getBlocksToGrowWhenBonemealed
		p	1		random
	m	()Ldfy;	b	getBodyBlock
	m	(Ldtc;)Z	g	canGrowInto
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lexv;	g	SHAPE
c	dpo	net/minecraft/world/level/block/BlockWeepingVinesPlant
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ldjn;	c	getHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lexv;	e	SHAPE
c	dpp	net/minecraft/world/level/block/BlockPressurePlateWeighted
	m	(ILdtr;Ldtb$d;)V	<init>	<init>
		p	1		weight
		p	2		type
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldpp;)Ldtr;	a	lambda$static$1
		p	0		block
	m	(Ldtc;I)Ldtc;	a	setSignalForState
		p	1		state
		p	2		rsOut
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	()I	b	getPressedTime
	m	(Ldcw;Ljd;)I	b	getSignalStrength
		p	1		world
		p	2		pos
	m	(Ldpp;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		block
	m	(Ldtc;)I	g	getSignalForState
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Lduc;	f	POWER
	f	I	g	maxWeight
c	dpq	net/minecraft/world/level/block/BlockWetSponge
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	dpr	net/minecraft/world/level/block/BlockWitherRose
	m	(Lcxw;Ldtb$d;)V	<init>	<init>
		p	1		stewEffects
		p	2		settings
	m	(Ljm;FLdtb$d;)V	<init>	<init>
		p	3		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcc;Ljd;)Z	b	mayPlaceOn
		p	1		floor
		p	2		world
		p	3		pos
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
c	dps	net/minecraft/world/level/block/BlockWitherSkull
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;)V	a	checkSpawn
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldru;)V	a	checkSpawn
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldtg;)Z	a	lambda$getOrCreateWitherBase$3
		p	0		pos
	m	(Ldcw;Ljd;Lcuq;)Z	b	canSpawnMob
		p	0		world
		p	1		pos
		p	2		stack
	m	(Ldtg;)Z	b	lambda$getOrCreateWitherBase$2
		p	0		pos
	m	(Ldtg;)Z	c	lambda$getOrCreateWitherFull$1
		p	0		pos
	m	(Ldtg;)Z	d	lambda$getOrCreateWitherFull$0
		p	0		pos
	m	()Ldth;	y	getOrCreateWitherFull
	m	()Ldth;	z	getOrCreateWitherBase
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldth;	h	witherPatternFull
	f	Ldth;	i	witherPatternBase
c	dpt	net/minecraft/world/level/block/BlockWitherSkullWall
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	dpu	net/minecraft/world/level/block/BlockCarpet
	m	(Lcti;Ldtb$d;)V	<init>	<init>
		p	1		dyeColor
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcti;	b	getColor
	m	()Lbsy;	m	getEquipmentSlot
	m	()Ljm;	n	getEquipSound
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lcti;	d	color
c	dpv	net/minecraft/world/level/block/entity/TileEntityFurnace
	m	(Ldqj;Ljd;Ldtc;Lczf;)V	<init>	<init>
		p	1		blockEntityType
		p	2		pos
		p	3		state
		p	4		recipeType
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Laqu;Lexc;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
		p	1		world
		p	2		pos
	m	(Laqu;Lexc;IF)V	a	createExperience
		p	0		world
		p	1		pos
		p	2		multiplier
		p	3		experience
	m	(Laqv;)V	a	awardUsedRecipesAndPopExperience
		p	1		player
	m	(Lcmx;Ljava/util/List;)V	a	awardUsedRecipes
		p	1		player
		p	2		ingredients
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
	m	(Lczb;)V	a	setRecipeUsed
		p	1		recipe
	m	(Ldcw;Ldpv;)I	a	getTotalCookTime
		p	0		world
		p	1		furnace
	m	(Ldcw;Ljd;Ldtc;Ldpv;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ljava/util/List;Laqu;Lexc;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;Lczb;)V	a	lambda$getRecipesToAwardAndPopExperience$2
		p	4		recipe
	m	(Ljava/util/Map;Lawu;I)V	a	add
		p	0		fuelTimes
		p	1		tag
		p	2		fuelTime
	m	(Ljava/util/Map;Ldcv;I)V	a	add
		p	0		fuelTimes
		p	1		item
		p	2		fuelTime
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lka;Lczb;Ljv;I)Z	a	canBurn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Lub;Lakr;Ljava/lang/Integer;)V	a	lambda$saveAdditional$0
		p	1		identifier
		p	2		count
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getContainerSize
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcul;)Z	b	isNeverAFurnaceFuel
		p	0		item
	m	(Lcuq;)I	b	getBurnDuration
		p	1		fuel
	m	(Lczb;)Ljava/lang/Integer;	b	lambda$getTotalCookTime$1
		p	0		recipe
	m	(Lka;Lczb;Ljv;I)Z	b	burn
		p	0		registryManager
		p	1		recipe
		p	2		slots
		p	3		count
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lcuq;)Z	c	isFuel
		p	0		stack
	m	()Lczb;	d	getRecipeUsed
	m	()V	f	invalidateCache
	m	()Ljava/util/Map;	g	getFuel
	m	()Ljv;	j	getItems
	m	()Z	l	isLit
	f	I	b	SLOT_INPUT
	f	I	c	SLOT_FUEL
	f	I	d	SLOT_RESULT
	f	I	e	DATA_LIT_TIME
	f	I	f	DATA_LIT_DURATION
	f	I	g	DATA_COOKING_PROGRESS
	f	I	h	DATA_COOKING_TOTAL_TIME
	f	I	i	NUM_DATA_VALUES
	f	I	j	BURN_TIME_STANDARD
	f	I	k	BURN_COOL_SPEED
	f	Ljv;	l	items
	f	Lcqf;	m	dataAccess
	f	[I	q	SLOTS_FOR_UP
	f	[I	r	SLOTS_FOR_DOWN
	f	[I	s	SLOTS_FOR_SIDES
	f	I	t	litTime
	f	I	u	litDuration
	f	I	v	cookingProgress
	f	I	w	cookingTotalTime
	f	Ljava/util/Map;	x	fuelCache
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	y	recipesUsed
	f	Lczd$a;	z	quickCheck
c	dpv$1	net/minecraft/world/level/block/entity/TileEntityFurnace$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldpv;	a	this$0
c	dpw	net/minecraft/world/level/block/entity/TileEntityBanner
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;Lcti;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		baseColor
	m	()Lacb;	a	getUpdatePacket
	m	(Lcuq;Lcti;)V	a	fromItem
		p	1		stack
		p	2		baseColor
	m	(Ldpy;)V	a	lambda$loadAdditional$1
		p	1		patterns
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ljava/lang/String;)V	a	lambda$loadAdditional$0
		p	0		patterns
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lwz;	ah	getName
	m	()Lwz;	aj	getCustomName
	m	()Lzg;	az_	getUpdatePacket
	m	()Ldpy;	b	getPatterns
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lcuq;	c	getItem
	m	()Lcti;	f	getBaseColor
	f	I	a	MAX_PATTERNS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_PATTERNS
	f	Lwz;	d	name
	f	Lcti;	e	baseColor
	f	Ldpy;	f	patterns
c	dpx	net/minecraft/world/level/block/entity/EnumBannerPatternType
	m	()Lakr;	a	assetId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/lang/String;	b	translationKey
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lyx;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
	f	Lakr;	e	assetId
	f	Ljava/lang/String;	f	translationKey
c	dpy	net/minecraft/world/level/block/entity/BannerPatternLayers
	m	()Ldpy;	a	removeLast
	m	()Ljava/util/List;	b	layers
	f	Ldpy;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/List;	d	layers
	f	Lorg/slf4j/Logger;	e	LOGGER
c	dpy$a	net/minecraft/world/level/block/entity/BannerPatternLayers$a
	m	()Ldpy;	a	build
	m	(Ldpy$b;)Ldpy$a;	a	add
		p	1		layer
	m	(Ldpy;)Ldpy$a;	a	addAll
		p	1		patterns
	m	(Ljm;Lcti;)Ldpy$a;	a	add
		p	1		pattern
		p	2		color
	m	(Ljn;Lakq;Lcti;)Ldpy$a;	a	addIfRegistered
		p	1		patternLookup
		p	2		pattern
		p	3		color
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	layers
c	dpy$b	net/minecraft/world/level/block/entity/BannerPatternLayers$b
	m	()Lxn;	a	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljm;	b	pattern
	m	()Lcti;	c	color
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljm;	c	pattern
	f	Lcti;	d	color
c	dpz	net/minecraft/world/level/block/entity/BannerPatterns
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		registry
	m	(Lqq;Lakq;)V	a	register
		p	0		registry
		p	1		key
	f	Lakq;	A	HALF_VERTICAL
	f	Lakq;	B	HALF_HORIZONTAL
	f	Lakq;	C	HALF_VERTICAL_MIRROR
	f	Lakq;	D	HALF_HORIZONTAL_MIRROR
	f	Lakq;	E	BORDER
	f	Lakq;	F	CURLY_BORDER
	f	Lakq;	G	GRADIENT
	f	Lakq;	H	GRADIENT_UP
	f	Lakq;	I	BRICKS
	f	Lakq;	J	GLOBE
	f	Lakq;	K	CREEPER
	f	Lakq;	L	SKULL
	f	Lakq;	M	FLOWER
	f	Lakq;	N	MOJANG
	f	Lakq;	O	PIGLIN
	f	Lakq;	P	FLOW
	f	Lakq;	Q	GUSTER
	f	Lakq;	a	BASE
	f	Lakq;	b	SQUARE_BOTTOM_LEFT
	f	Lakq;	c	SQUARE_BOTTOM_RIGHT
	f	Lakq;	d	SQUARE_TOP_LEFT
	f	Lakq;	e	SQUARE_TOP_RIGHT
	f	Lakq;	f	STRIPE_BOTTOM
	f	Lakq;	g	STRIPE_TOP
	f	Lakq;	h	STRIPE_LEFT
	f	Lakq;	i	STRIPE_RIGHT
	f	Lakq;	j	STRIPE_CENTER
	f	Lakq;	k	STRIPE_MIDDLE
	f	Lakq;	l	STRIPE_DOWNRIGHT
	f	Lakq;	m	STRIPE_DOWNLEFT
	f	Lakq;	n	STRIPE_SMALL
	f	Lakq;	o	CROSS
	f	Lakq;	p	STRAIGHT_CROSS
	f	Lakq;	q	TRIANGLE_BOTTOM
	f	Lakq;	r	TRIANGLE_TOP
	f	Lakq;	s	TRIANGLES_BOTTOM
	f	Lakq;	t	TRIANGLES_TOP
	f	Lakq;	u	DIAGONAL_LEFT
	f	Lakq;	v	DIAGONAL_RIGHT
	f	Lakq;	w	DIAGONAL_LEFT_MIRROR
	f	Lakq;	x	DIAGONAL_RIGHT_MIRROR
	f	Lakq;	y	CIRCLE_MIDDLE
	f	Lakq;	z	RHOMBUS_MIDDLE
c	dqa	net/minecraft/world/level/block/entity/TileEntityBarrel
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Ldtc;Lavo;)V	a	playSound
		p	1		state
		p	2		soundEvent
	m	(Ldtc;Z)V	a	updateBlockState
		p	1		state
		p	2		open
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getContainerSize
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	m	()V	l	recheckOpen
	f	Ljv;	d	items
	f	Ldqu;	e	openersCounter
c	dqa$1	net/minecraft/world/level/block/entity/TileEntityBarrel$1
	m	(Lcmx;)Z	a	isOwnContainer
		p	1		player
	m	(Ldcw;Ljd;Ldtc;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Ldcw;Ljd;Ldtc;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Ldqa;	a	this$0
c	dqb	net/minecraft/world/level/block/entity/TileEntityContainer
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	()Lwz;	S_	getDisplayName
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcmx;Lbqu;Lwz;)Z	a	canUnlock
		p	0		player
		p	1		lock
		p	2		containerName
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lwz;	ah	getName
	m	()Lwz;	aj	getCustomName
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isEmpty
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lcmx;)Z	d	canOpen
		p	1		player
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	f	Lbqu;	d	lockKey
	f	Lwz;	e	name
c	dqc	net/minecraft/world/level/block/entity/TileEntityBeacon
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lwz;	S_	getDisplayName
	m	(Ldcw;)V	a	setLevel
		p	1		world
	m	(Ldcw;III)I	a	updateBase
		p	0		world
		p	1		x
		p	2		y
		p	3		z
	m	(Ldcw;Ljd;ILjm;Ljm;)V	a	applyEffects
		p	0		world
		p	1		pos
		p	2		beaconLevel
		p	3		primaryEffect
		p	4		secondaryEffect
	m	(Ldcw;Ljd;Lavo;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		sound
	m	(Ldcw;Ljd;Ldtc;Ldqc;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ljm;)Ljm;	a	filterEffect
		p	0		effect
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljava/lang/String;)Ljm;	a	loadEffect
		p	0		nbt
		p	1		key
	m	(Lub;Ljava/lang/String;Lakq;)V	a	lambda$storeEffect$0
		p	2		entryKey
	m	(Lub;Ljava/lang/String;Ljm;)V	a	storeEffect
		p	0		nbt
		p	1		key
		p	2		effect
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lwz;)V	a	setCustomName
		p	1		customName
	m	()V	aA_	setRemoved
	m	()Lwz;	ah	getName
	m	()Lwz;	aj	getCustomName
	m	()Lzg;	az_	getUpdatePacket
	m	()Ljava/util/List;	b	getBeamSections
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lacb;	c	getUpdatePacket
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	f	Ljava/util/List;	a	BEACON_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	f	MAX_LEVELS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Lwz;	i	DEFAULT_NAME
	f	Ljava/lang/String;	j	TAG_PRIMARY
	f	Ljava/lang/String;	k	TAG_SECONDARY
	f	Ljava/util/List;	l	beamSections
	f	Ljava/util/List;	m	checkingBeamSections
	f	I	q	levels
	f	I	r	lastCheckY
	f	Ljm;	s	primaryPower
	f	Ljm;	t	secondaryPower
	f	Lwz;	u	name
	f	Lbqu;	v	lockKey
	f	Lcqf;	w	dataAccess
c	dqc$1	net/minecraft/world/level/block/entity/TileEntityBeacon$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldqc;	a	this$0
c	dqc$a	net/minecraft/world/level/block/entity/TileEntityBeacon$BeaconColorTracker
	m	(I)V	<init>	<init>
		p	1		color
	m	()V	a	increaseHeight
	m	()I	b	getColor
	m	()I	c	getHeight
	f	I	a	color
	f	I	b	height
c	dqd	net/minecraft/world/level/block/entity/TileEntityBed
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;Lcti;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		color
	m	(Lcti;)V	a	setColor
		p	1		color
	m	()Lzg;	az_	getUpdatePacket
	m	()Lacb;	b	getUpdatePacket
	m	()Lcti;	c	getColor
	f	Lcti;	a	color
c	dqe	net/minecraft/world/level/block/entity/TileEntityBeehive
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbsr;)V	a	addOccupant
		p	1		entity
	m	(Lcmx;Ldtc;Ldqe$b;)V	a	emptyAllLivingFromHive
		p	1		player
		p	2		state
		p	3		beeState
	m	(Ldcw;Ljd;Ldtc;Ldqe$c;Ljava/util/List;Ldqe$b;Ljd;)Z	a	releaseOccupant
		p	0		world
		p	1		pos
		p	2		state
		p	3		bee
		p	4		entities
		p	5		beeState
		p	6		flowerPos
	m	(Ldcw;Ljd;Ldtc;Ldqe;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ljava/util/List;Ljd;)V	a	tickOccupants
		p	0		world
		p	1		pos
		p	2		state
		p	3		bees
		p	4		flowerPos
	m	(Ldqe$c;)V	a	storeBee
		p	1		bee
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ldtb$a;)Z	a	lambda$releaseOccupant$1
		p	0		statex
	m	(Ldtc;)I	a	getHoneyLevel
		p	0		state
	m	(Ldtc;Ldqe$b;)Ljava/util/List;	a	releaseAllOccupants
		p	1		state
		p	2		beeState
	m	(Ldtc;Ljava/util/List;Ldqe$b;Ldqe$a;)Z	a	lambda$releaseAllOccupants$0
		p	4		bee
	m	(Ljava/lang/String;)V	a	lambda$loadAdditional$2
	m	(Ljava/util/List;)V	a	lambda$loadAdditional$3
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	b	isFireNearby
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isEmpty
	m	()Z	d	isFull
	m	()V	e	setChanged
	m	()I	f	getOccupantCount
	m	()Z	j	isSedated
	m	()Z	k	hasSavedFlowerPos
	m	()Ljava/util/List;	l	getBees
	f	I	a	MAX_OCCUPANTS
	f	I	b	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	TAG_FLOWER_POS
	f	Ljava/lang/String;	e	BEES
	f	Ljava/util/List;	f	IGNORED_BEE_TAGS
	f	I	g	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	h	MIN_OCCUPATION_TICKS_NECTAR
	f	Ljava/util/List;	i	stored
	f	Ljd;	j	savedFlowerPos
c	dqe$a	net/minecraft/world/level/block/entity/TileEntityBeehive$HiveBee
	m	(Ldqe$c;)V	<init>	<init>
		p	1		data
	m	()Z	a	tick
	m	()Ldqe$c;	b	toOccupant
	m	()Z	c	hasNectar
	f	Ldqe$c;	a	occupant
	f	I	b	ticksInHive
c	dqe$b	net/minecraft/world/level/block/entity/TileEntityBeehive$ReleaseStatus
	m	()[Ldqe$b;	a	$values
	f	Ldqe$b;	a	HONEY_DELIVERED
	f	Ldqe$b;	b	BEE_RELEASED
	f	Ldqe$b;	c	EMERGENCY
	f	[Ldqe$b;	d	$VALUES
c	dqe$c	net/minecraft/world/level/block/entity/TileEntityBeehive$c
	m	()Lcxh;	a	entityData
	m	(I)Ldqe$c;	a	create
		p	0		ticksInHive
	m	(ILcff;)V	a	setBeeReleaseData
		p	0		ticksInHive
		p	1		beeEntity
	m	(Lbsr;)Ldqe$c;	a	of
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldcw;Ljd;)Lbsr;	a	createEntity
		p	1		world
		p	2		pos
	m	()I	b	ticksInHive
	m	(Lbsr;)Lbsr;	b	lambda$createEntity$1
		p	0		entity
	m	()I	c	minTicksInHive
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lcxh;	d	entityData
	f	I	e	ticksInHive
	f	I	f	minTicksInHive
c	dqf	net/minecraft/world/level/block/entity/TileEntityBell
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbtn;)V	a	glow
		p	0		entity
	m	(Ldcw;Ljd;Ldtc;Ldqf;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ldqf;Ldqf$a;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
		p	4		bellEffect
	m	(Ldcw;Ljd;Ljava/util/List;)V	a	makeRaidersGlow
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Ljd;ILorg/apache/commons/lang3/mutable/MutableInt;Ldcw;Lbtn;)V	a	lambda$showBellParticles$3
		p	4		entity
	m	(Ljd;Lbtn;)Z	a	isRaiderWithinRange
		p	0		pos
		p	1		entity
	m	(Ljd;Ljava/util/List;)Z	a	areRaidersNearby
		p	0		pos
		p	1		hearingEntities
	m	(Lji;)V	a	onHit
		p	1		direction
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()V	b	updateEntities
	m	(Ldcw;Ljd;Ldtc;Ldqf;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ljava/util/List;)V	b	showBellParticles
		p	0		world
		p	1		pos
		p	2		hearingEntities
	m	(Ljd;Lbtn;)Z	b	lambda$showBellParticles$2
		p	1		entity
	m	(Ljd;Lbtn;)Z	c	lambda$showBellParticles$1
		p	1		entity
	m	(Ljd;Lbtn;)Z	d	lambda$makeRaidersGlow$0
		p	1		entity
	f	I	a	ticks
	f	Z	b	shaking
	f	Lji;	c	clickDirection
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	q	resonating
	f	I	r	resonationTicks
c	dqf$a	net/minecraft/world/level/block/entity/TileEntityBell$a
	m	(Ldcw;Ljd;Ljava/util/List;)V	run	run
		p	1		world
		p	2		pos
		p	3		hearingEntities
c	dqg	net/minecraft/world/level/block/entity/TileEntityBlastFurnace
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcuq;)I	b	getBurnDuration
		p	1		fuel
	m	()Lwz;	k	getDefaultName
c	dqh	net/minecraft/world/level/block/entity/TileEntity
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Lcuq;)V	a	applyComponentsFromItemStack
		p	1		stack
	m	(Lcuq;Ljo$a;)V	a	saveToItem
		p	1		stack
		p	2		registries
	m	(Ldcw;)V	a	setLevel
		p	1		world
	m	(Ldcw;Ljd;Ldtc;)V	a	setChanged
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ldtc;)V	a	validateBlockState
		p	1		state
	m	(Ljava/lang/String;)Ldqh;	a	lambda$loadStatic$6
	m	(Ljava/lang/String;Ljo$a;)Lwz;	a	parseCustomNameSafe
		p	0		json
		p	1		registryLookup
	m	(Ljd;Ldtc;Ljava/lang/String;Ldqj;)Ldqh;	a	lambda$loadStatic$4
		p	3		type
	m	(Ljd;Ldtc;Lub;Ljo$a;)Ldqh;	a	loadStatic
		p	0		pos
		p	1		state
		p	2		nbt
		p	3		registryLookup
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lkm;)V	a	setComponents
		p	1		components
	m	(Lkm;Lkn;)V	a	applyComponents
		p	1		defaultComponents
		p	2		components
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		crashReportSection
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ldqj;)V	a	addEntityType
		p	0		nbt
		p	1		type
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Ljo$a;Ljava/lang/String;Ldqh;)Ldqh;	a	lambda$loadStatic$5
		p	3		blockEntity
	m	(Lub;Luy;)V	a	lambda$saveWithoutMetadata$3
		p	1		nbt
	m	()V	aA_	setRemoved
	m	()Ljd;	aD_	getBlockPos
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lzg;	az_	getUpdatePacket
	m	(Ldtc;)Z	b	isValidBlockState
		p	1		state
	m	(Ljava/lang/String;)V	b	lambda$saveWithoutMetadata$2
		p	0		snbt
	m	(Ljo$a;)Lub;	b	saveWithFullMetadata
		p	1		registryLookup
	m	(Lkm;)V	b	lambda$loadWithComponents$1
		p	1		components
	m	(Lub;)Ljd;	b	getPosFromTag
		p	0		nbt
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Ldtc;)V	c	setBlockState
		p	1		state
	m	(Ljava/lang/String;)V	c	lambda$loadWithComponents$0
		p	0		error
	m	(Ljo$a;)Lub;	c	saveWithId
		p	1		registryLookup
	m	(Lub;)V	c	saveId
		p	1		nbt
	m	(Lub;Ljo$a;)V	c	loadWithComponents
		p	1		nbt
		p	2		registryLookup
	m	(Ljo$a;)Lub;	d	saveWithoutMetadata
		p	1		registryLookup
	m	(Lub;)V	d	saveMetadata
		p	1		nbt
	m	(Lub;Ljo$a;)V	d	loadCustomOnly
		p	1		nbt
		p	2		registryLookup
	m	()V	e	setChanged
	m	(Ljo$a;)Lub;	e	saveCustomOnly
		p	1		registryLookup
	m	(Ljo$a;)Lub;	f	saveCustomAndMetadata
		p	1		registryLookup
	m	()Ldcw;	i	getLevel
	m	()Ljava/lang/String;	k	getNameForReporting
	m	()Z	m	hasLevel
	m	()Ldtc;	n	getBlockState
	m	()Z	o	isRemoved
	m	()V	p	clearRemoved
	m	()Z	q	onlyOpCanSetNbt
	m	()Ldqj;	r	getType
	m	()Lkm;	s	collectComponents
	m	()Lkm;	t	components
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ldqj;	e	type
	f	Ldtc;	f	blockState
	f	Lkm;	g	components
	f	Ldcw;	n	level
	f	Ljd;	o	worldPosition
	f	Z	p	remove
c	dqh$1	net/minecraft/world/level/block/entity/TileEntity$1
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
		p	1		type
		p	2		fallback
	f	Ljava/util/Set;	a	val$implicitComponents
	f	Lkm;	b	val$fullView
c	dqh$a	net/minecraft/world/level/block/entity/TileEntity$a
	f	Lcom/mojang/serialization/Codec;	a	COMPONENTS_CODEC
c	dqh$b	net/minecraft/world/level/block/entity/TileEntity$b
	m	(Lkp;)Ljava/lang/Object;	a	get
		p	1		type
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
		p	1		type
		p	2		fallback
c	dqi	net/minecraft/world/level/block/entity/BlockEntityTicker
	m	(Ldcw;Ljd;Ldtc;Ldqh;)V	tick	tick
		p	1		world
		p	2		pos
		p	3		state
		p	4		blockEntity
c	dqj	net/minecraft/world/level/block/entity/TileEntityTypes
	m	(Ldqj$a;Ljava/util/Set;Lcom/mojang/datafixers/types/Type;)V	<init>	<init>
		p	1		factory
		p	2		blocks
		p	3		type
	m	()Ljm$c;	a	builtInRegistryHolder
	m	(Ldcc;Ljd;)Ldqh;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Ldqj;)Lakr;	a	getKey
		p	0		type
	m	(Ldtc;)Z	a	isValid
		p	1		state
	m	(Ljava/lang/String;Ldqj$b;)Ldqj;	a	register
		p	0		id
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	create
		p	1		pos
		p	2		state
	f	Ldqj;	A	BARREL
	f	Ldqj;	B	SMOKER
	f	Ldqj;	C	BLAST_FURNACE
	f	Ldqj;	D	LECTERN
	f	Ldqj;	E	BELL
	f	Ldqj;	F	JIGSAW
	f	Ldqj;	G	CAMPFIRE
	f	Ldqj;	H	BEEHIVE
	f	Ldqj;	I	SCULK_SENSOR
	f	Ldqj;	J	CALIBRATED_SCULK_SENSOR
	f	Ldqj;	K	SCULK_CATALYST
	f	Ldqj;	L	SCULK_SHRIEKER
	f	Ldqj;	M	CHISELED_BOOKSHELF
	f	Ldqj;	N	BRUSHABLE_BLOCK
	f	Ldqj;	O	DECORATED_POT
	f	Ldqj;	P	CRAFTER
	f	Ldqj;	Q	TRIAL_SPAWNER
	f	Ldqj;	R	VAULT
	f	Lorg/slf4j/Logger;	S	LOGGER
	f	Ldqj$a;	T	factory
	f	Ljava/util/Set;	U	validBlocks
	f	Lcom/mojang/datafixers/types/Type;	V	dataType
	f	Ljm$c;	W	builtInRegistryHolder
	f	Ldqj;	a	FURNACE
	f	Ldqj;	b	CHEST
	f	Ldqj;	c	TRAPPED_CHEST
	f	Ldqj;	d	ENDER_CHEST
	f	Ldqj;	e	JUKEBOX
	f	Ldqj;	f	DISPENSER
	f	Ldqj;	g	DROPPER
	f	Ldqj;	h	SIGN
	f	Ldqj;	i	HANGING_SIGN
	f	Ldqj;	j	MOB_SPAWNER
	f	Ldqj;	k	PISTON
	f	Ldqj;	l	BREWING_STAND
	f	Ldqj;	m	ENCHANTING_TABLE
	f	Ldqj;	n	END_PORTAL
	f	Ldqj;	o	BEACON
	f	Ldqj;	p	SKULL
	f	Ldqj;	q	DAYLIGHT_DETECTOR
	f	Ldqj;	r	HOPPER
	f	Ldqj;	s	COMPARATOR
	f	Ldqj;	t	BANNER
	f	Ldqj;	u	STRUCTURE_BLOCK
	f	Ldqj;	v	END_GATEWAY
	f	Ldqj;	w	COMMAND_BLOCK
	f	Ldqj;	x	SHULKER_BOX
	f	Ldqj;	y	BED
	f	Ldqj;	z	CONDUIT
c	dqj$a	net/minecraft/world/level/block/entity/TileEntityTypes$a
	m	(Ljd;Ldtc;)Ldqh;	create	create
		p	1		pos
		p	2		state
c	dqj$b	net/minecraft/world/level/block/entity/TileEntityTypes$b
	m	(Ldqj$a;Ljava/util/Set;)V	<init>	<init>
		p	1		factory
		p	2		blocks
	m	(Lcom/mojang/datafixers/types/Type;)Ldqj;	a	build
		p	1		type
	m	(Ldqj$a;[Ldfy;)Ldqj$b;	a	of
		p	0		factory
		p	1		blocks
	f	Ldqj$a;	a	factory
	f	Ljava/util/Set;	b	validBlocks
c	dqk	net/minecraft/world/level/block/entity/TileEntityBrewingStand
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lcwt;Ljv;)Z	a	isBrewable
		p	0		brewingRecipeRegistry
		p	1		slots
	m	(Ldcw;Ljd;Ldtc;Ldqk;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ljv;)V	a	doBrew
		p	0		world
		p	1		pos
		p	2		slots
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getContainerSize
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()[Z	f	getPotionBits
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	f	I	b	FUEL_USES
	f	I	c	DATA_BREW_TIME
	f	I	d	DATA_FUEL_USES
	f	I	e	NUM_DATA_VALUES
	f	Lcqf;	f	dataAccess
	f	I	g	INGREDIENT_SLOT
	f	I	h	FUEL_SLOT
	f	[I	i	SLOTS_FOR_UP
	f	[I	j	SLOTS_FOR_DOWN
	f	[I	k	SLOTS_FOR_SIDES
	f	Ljv;	l	items
	f	I	m	brewTime
	f	[Z	q	lastPotionCount
	f	Lcul;	r	ingredient
	f	I	s	fuel
c	dqk$1	net/minecraft/world/level/block/entity/TileEntityBrewingStand$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldqk;	a	this$0
c	dql	net/minecraft/world/level/block/entity/BrushableBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(JLcmx;Lji;)Z	a	brush
		p	1		worldTime
		p	3		player
		p	4		hitDirection
	m	(Lakq;J)V	a	setLootTable
		p	1		lootTable
		p	2		seed
	m	(Lcmx;)V	a	unpackLootTable
		p	1		player
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lzg;	az_	getUpdatePacket
	m	()V	b	checkReset
	m	(Lcmx;)V	b	brushingCompleted
		p	1		player
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lacb;	c	getUpdatePacket
	m	(Lcmx;)V	c	dropContent
		p	1		player
	m	(Lub;)Z	c	tryLoadLootTable
		p	1		nbt
	m	()Lji;	d	getHitDirection
	m	(Lub;)Z	d	trySaveLootTable
		p	1		nbt
	m	()Lcuq;	f	getItem
	m	()I	j	getCompletionState
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
	f	Ljava/lang/String;	d	HIT_DIRECTION_TAG
	f	Ljava/lang/String;	e	ITEM_TAG
	f	I	f	BRUSH_COOLDOWN_TICKS
	f	I	g	BRUSH_RESET_TICKS
	f	I	h	REQUIRED_BRUSHES_TO_BREAK
	f	I	i	brushCount
	f	J	j	brushCountResetsAtTick
	f	J	k	coolDownEndsAtTick
	f	Lcuq;	l	item
	f	Lji;	m	hitDirection
	f	Lakq;	q	lootTable
	f	J	r	lootTableSeed
c	dqm	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Ldyi$d;	b	createVibrationUser
c	dqm$a	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$a
	m	(Ldqm;Ljd;)V	<init>	<init>
		p	2		pos
	m	()I	a	getListenerRadius
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	(Ldcw;Ljd;Ldtc;)I	a	getBackSignal
		p	1		world
		p	2		pos
		p	3		state
	f	Ldqm;	a	this$0
c	dqn	net/minecraft/world/level/block/entity/TileEntityCampfire
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(Lbtn;Lcuq;I)Z	a	placeFood
		p	1		user
		p	2		stack
		p	3		cookTime
	m	(Lczp;Ldcw;Lczb;)Lcuq;	a	lambda$cookTick$0
		p	2		recipe
	m	(Ldcw;Ljd;Ldtc;Ldqn;)V	a	cookTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lzg;	az_	getUpdatePacket
	m	()Ljv;	b	getItems
	m	(Lcuq;)Ljava/util/Optional;	b	getCookableRecipe
		p	1		stack
	m	(Ldcw;Ljd;Ldtc;Ldqn;)V	b	cooldownTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lacb;	c	getUpdatePacket
	m	(Ldcw;Ljd;Ldtc;Ldqn;)V	c	particleTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		campfire
	m	()V	d	dowse
	m	()V	f	markUpdated
	f	I	a	BURN_COOL_SPEED
	f	I	b	NUM_SLOTS
	f	Ljv;	c	items
	f	[I	d	cookingProgress
	f	[I	e	cookingTime
	f	Lczd$a;	f	quickCheck
c	dqo	net/minecraft/world/level/block/entity/TileEntityChest
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Ldcc;Ljd;)I	a	getOpenCount
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Ldcw;Ljd;Ldtc;Lavo;)V	a	playSound
		p	0		world
		p	1		pos
		p	2		state
		p	3		soundEvent
	m	(Ldcw;Ljd;Ldtc;Ldqo;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldqo;Ldqo;)V	a	swapContents
		p	0		from
		p	1		to
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	m	()V	l	recheckOpen
	f	I	d	EVENT_SET_OPEN_COUNT
	f	Ljv;	e	items
	f	Ldqu;	f	openersCounter
	f	Ldqp;	g	chestLidController
c	dqo$1	net/minecraft/world/level/block/entity/TileEntityChest$1
	m	(Lcmx;)Z	a	isOwnContainer
		p	1		player
	m	(Ldcw;Ljd;Ldtc;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Ldcw;Ljd;Ldtc;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Ldqo;	a	this$0
c	dqp	net/minecraft/world/level/block/entity/ChestLidController
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
		p	1		delta
	m	(Z)V	a	shouldBeOpen
		p	1		open
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
c	dqq	net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbqk;ILcuq;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcuq;Lbqk;Lcuq;)Z	a	lambda$canTakeItem$0
		p	2		stack2
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	al_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isEmpty
	m	(I)V	c	updateState
		p	1		interactedSlot
	m	()I	f	count
	m	()I	j	getLastInteractedSlot
	f	I	b	MAX_BOOKS_IN_STORAGE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljv;	d	items
	f	I	e	lastInteractedSlot
c	dqr	net/minecraft/world/level/block/entity/TileEntityCommand
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	setPowered
		p	1		powered
	m	()Ldbx;	b	getCommandBlock
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	b	setAutomatic
		p	1		auto
	m	()Z	c	isPowered
	m	()Z	d	isAutomatic
	m	()V	f	onModeSwitch
	m	()Z	j	wasConditionMet
	m	()Z	k	markConditionMet
	m	()Ldqr$a;	l	getMode
	m	()Z	q	onlyOpCanSetNbt
	m	()Z	u	isConditional
	m	()V	v	scheduleTick
	f	Z	a	powered
	f	Z	b	auto
	f	Z	c	conditionMet
	f	Ldbx;	d	commandBlock
c	dqr$1	net/minecraft/world/level/block/entity/TileEntityCommand$1
	m	(Ljava/lang/String;)V	a	setCommand
		p	1		command
	m	()Laqu;	e	getLevel
	m	()V	f	onUpdated
	m	()Lexc;	g	getPosition
	m	()Let;	i	createCommandSourceStack
	m	()Z	j	isValid
	f	Ldqr;	b	this$0
c	dqr$a	net/minecraft/world/level/block/entity/TileEntityCommand$Type
	m	()[Ldqr$a;	a	$values
	f	Ldqr$a;	a	SEQUENCE
	f	Ldqr$a;	b	AUTO
	f	Ldqr$a;	c	REDSTONE
	f	[Ldqr$a;	d	$VALUES
c	dqs	net/minecraft/world/level/block/entity/TileEntityComparator
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setOutputSignal
		p	1		outputSignal
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getOutputSignal
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	f	I	a	output
c	dqt	net/minecraft/world/level/block/entity/TileEntityConduit
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getActiveRotation
		p	1		tickDelta
	m	(Lbtn;)Z	a	lambda$updateDestroyTarget$0
		p	0		entity
	m	(Ldcw;Ljd;Ldqt;)V	a	updateClientTarget
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ldqt;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ljava/util/List;Ldqt;)V	a	updateDestroyTarget
		p	0		world
		p	1		pos
		p	2		state
		p	3		activatingBlocks
		p	4		blockEntity
	m	(Ldcw;Ljd;Ljava/util/List;)Z	a	updateShape
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Ldcw;Ljd;Ljava/util/List;Lbsr;I)V	a	animationTick
		p	0		world
		p	1		pos
		p	2		activatingBlocks
		p	3		entity
		p	4		ticks
	m	(Ldcw;Ljd;Ljava/util/UUID;)Lbtn;	a	findDestroyTarget
		p	0		world
		p	1		pos
		p	2		uuid
	m	(Ldqt;Ljava/util/List;)V	a	updateHunting
		p	0		blockEntity
		p	1		activatingBlocks
	m	(Ljava/util/UUID;Lbtn;)Z	a	lambda$findDestroyTarget$1
		p	1		entity
	m	(Ljd;)Lewx;	a	getDestroyRangeAABB
		p	0		pos
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	setHunting
		p	1		eyeOpen
	m	()Lzg;	az_	getUpdatePacket
	m	()Lacb;	b	getUpdatePacket
	m	(Ldcw;Ljd;Ldtc;Ldqt;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ljava/util/List;)V	b	applyEffects
		p	0		world
		p	1		pos
		p	2		activatingBlocks
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isActive
	m	()Z	d	isHunting
	f	I	a	tickCount
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Ldfy;	h	VALID_BLOCKS
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Lbtn;	m	destroyTarget
	f	Ljava/util/UUID;	q	destroyTargetUUID
	f	J	r	nextAmbientSoundActivation
c	dqu	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	m	()I	a	getOpenerCount
	m	(Lcmx;)Z	a	isOwnContainer
		p	1		player
	m	(Lcmx;Ldcw;Ljd;Ldtc;)V	a	incrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;)Ljava/util/List;	a	getPlayersWithContainerOpen
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Ldtc;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Lcmx;Ldcw;Ljd;Ldtc;)V	b	decrementOpeners
		p	1		player
		p	2		world
		p	3		pos
		p	4		state
	m	(Ldcw;Ljd;Ldtc;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	c	recheckOpeners
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	d	scheduleRecheck
		p	0		world
		p	1		pos
		p	2		state
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
	f	D	c	maxInteractionRange
c	dqv	net/minecraft/world/level/block/entity/CrafterBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(ILcuq;I)Z	a	smallerStackExist
		p	1		count
		p	2		stack
		p	3		slot
	m	(IZ)V	a	setSlotState
		p	1		slot
		p	2		enabled
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	(Lcnb;)V	a	fillStackedContents
		p	1		finder
	m	(Ldcw;Ljd;Ldtc;Ldqv;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	setTriggered
		p	1		triggered
	m	()I	b	getContainerSize
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isEmpty
	m	(I)Z	c	isSlotDisabled
		p	1		slot
	m	(Lub;)V	c	addDisabledSlots
		p	1		nbt
	m	(I)V	d	setCraftingTicksRemaining
		p	1		craftingTicksRemaining
	m	(Lub;)V	d	addTriggered
		p	1		nbt
	m	(I)Z	e	slotCanBeDisabled
		p	1		slot
	m	()I	f	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	m	()Z	l	isTriggered
	m	()I	u	getRedstoneSignal
	f	I	d	CONTAINER_WIDTH
	f	I	e	CONTAINER_HEIGHT
	f	I	f	CONTAINER_SIZE
	f	I	g	SLOT_DISABLED
	f	I	h	SLOT_ENABLED
	f	I	i	DATA_TRIGGERED
	f	I	j	NUM_DATA
	f	Lcqf;	k	containerData
	f	Ljv;	q	items
	f	I	r	craftingTicksRemaining
c	dqv$1	net/minecraft/world/level/block/entity/CrafterBlockEntity$1
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	[I	a	slotStates
	f	I	b	triggered
c	dqw	net/minecraft/world/level/block/entity/TileEntityLightDetector
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
c	dqx	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ldqx$a;)V	a	wobble
		p	1		wobbleType
	m	(Ldrm;)Lcuq;	a	createDecoratedPotItem
		p	0		sherds
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lakq;	aB_	getLootTable
	m	()J	aC_	getLootTableSeed
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lzg;	az_	getUpdatePacket
	m	(Lcuq;)V	b	setTheItem
		p	1		stack
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(I)Lcuq;	c	splitTheItem
		p	1		count
	m	(Lcuq;)V	c	setFromItem
		p	1		stack
	m	()Lcuq;	f	getTheItem
	m	()Lacb;	j	getUpdatePacket
	m	()Lji;	k	getDirection
	m	()Ldrm;	l	getDecorations
	m	()Lcuq;	u	getPotAsItem
	m	()Ldqh;	v	getContainerBlockEntity
	f	Ljava/lang/String;	d	TAG_SHERDS
	f	Ljava/lang/String;	e	TAG_ITEM
	f	I	f	EVENT_POT_WOBBLES
	f	J	g	wobbleStartedAtTick
	f	Ldqx$a;	h	lastWobbleStyle
	f	Lakq;	i	lootTable
	f	J	j	lootTableSeed
	f	Ldrm;	k	decorations
	f	Lcuq;	l	item
c	dqx$a	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$a
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		lengthInTicks
	m	()[Ldqx$a;	a	$values
	f	Ldqx$a;	a	POSITIVE
	f	Ldqx$a;	b	NEGATIVE
	f	I	c	duration
	f	[Ldqx$a;	d	$VALUES
c	dqy	net/minecraft/world/level/block/entity/DecoratedPotPattern
	m	()Lakr;	a	assetId
	f	Lakr;	a	assetId
c	dqz	net/minecraft/world/level/block/entity/DecoratedPotPatterns
	m	(Lcul;)Lakq;	a	getPatternFromItem
		p	0		sherd
	m	(Ljava/lang/String;)Lakq;	a	create
		p	0		path
	m	(Ljz;)Ldqy;	a	bootstrap
		p	0		registry
	m	(Ljz;Lakq;Ljava/lang/String;)Ldqy;	a	register
		p	0		registry
		p	1		key
		p	2		id
	f	Lakq;	a	BLANK
	f	Lakq;	b	ANGLER
	f	Lakq;	c	ARCHER
	f	Lakq;	d	ARMS_UP
	f	Lakq;	e	BLADE
	f	Lakq;	f	BREWER
	f	Lakq;	g	BURN
	f	Lakq;	h	DANGER
	f	Lakq;	i	EXPLORER
	f	Lakq;	j	FLOW
	f	Lakq;	k	FRIEND
	f	Lakq;	l	GUSTER
	f	Lakq;	m	HEART
	f	Lakq;	n	HEARTBREAK
	f	Lakq;	o	HOWL
	f	Lakq;	p	MINER
	f	Lakq;	q	MOURNER
	f	Lakq;	r	PLENTY
	f	Lakq;	s	PRIZE
	f	Lakq;	t	SCRAPE
	f	Lakq;	u	SHEAF
	f	Lakq;	v	SHELTER
	f	Lakq;	w	SKULL
	f	Lakq;	x	SNORT
	f	Ljava/util/Map;	y	ITEM_TO_POT_TEXTURE
c	dra	net/minecraft/world/level/block/entity/TileEntityDispenser
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Layw;)I	a	getRandomSlot
		p	1		random
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getContainerSize
	m	(Lcuq;)Lcuq;	b	insertItem
		p	1		stack
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	f	I	d	CONTAINER_SIZE
	f	Ljv;	e	items
c	drb	net/minecraft/world/level/block/entity/TileEntityDropper
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lwz;	k	getDefaultName
c	drc	net/minecraft/world/level/block/entity/TileEntityEnchantTable
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Ldrc;)V	a	bookAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lwz;)V	a	setCustomName
		p	1		customName
	m	()Lwz;	ah	getName
	m	()Lwz;	aj	getCustomName
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Layw;	k	RANDOM
	f	Lwz;	l	name
c	drd	net/minecraft/world/level/block/entity/TileEntityEnderChest
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getOpenNess
		p	1		tickDelta
	m	(Lcmx;)V	a	startOpen
		p	1		player
	m	(Ldcw;Ljd;Ldtc;Ldrd;)V	a	lidAnimateTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()V	b	recheckOpen
	m	(Lcmx;)V	b	stopOpen
		p	1		player
	m	(Lcmx;)Z	c	stillValid
		p	1		player
	f	Ldqp;	a	chestLidController
	f	Ldqu;	b	openersCounter
c	drd$1	net/minecraft/world/level/block/entity/TileEntityEnderChest$1
	m	(Lcmx;)Z	a	isOwnContainer
		p	1		player
	m	(Ldcw;Ljd;Ldtc;)V	a	onOpen
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;II)V	a	openerCountChanged
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
	m	(Ldcw;Ljd;Ldtc;)V	b	onClose
		p	1		world
		p	2		pos
		p	3		state
	f	Ldrd;	a	this$0
c	dre	net/minecraft/world/level/block/entity/TileEntityFurnaceFurnace
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	()Lwz;	k	getDefaultName
c	drf	net/minecraft/world/level/block/entity/HangingSignBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()I	b	getTextLineHeight
	m	()I	c	getMaxTextLineWidth
	m	()Lavo;	d	getSignInteractionFailedSoundEvent
	f	I	a	MAX_TEXT_LINE_WIDTH
	f	I	b	TEXT_LINE_HEIGHT
c	drg	net/minecraft/world/level/block/entity/IHopper
	m	()D	H	getLevelX
	m	()D	I	getLevelY
	m	()D	J	getLevelZ
	m	()Z	K	isGridAligned
	m	()Lewx;	am_	getSuckAabb
	f	Lewx;	s_	SUCK_AABB
c	drh	net/minecraft/world/level/block/entity/TileEntityHopper
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()D	H	getLevelX
	m	()D	I	getLevelY
	m	()D	J	getLevelZ
	m	()Z	K	isGridAligned
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lbqk;Lbqk;Lcuq;ILji;)Z	a	canTakeItemFromContainer
		p	0		hopperInventory
		p	1		fromInventory
		p	2		stack
		p	3		slot
		p	4		facing
	m	(Lbqk;Lbqk;Lcuq;Lji;)Lcuq;	a	addItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		side
	m	(Lbqk;Lcjh;)Z	a	addItem
		p	0		inventory
		p	1		itemEntity
	m	(Lbqk;Lcuq;ILji;)Z	a	canPlaceItemInContainer
		p	0		inventory
		p	1		stack
		p	2		slot
		p	3		side
	m	(Lbqk;Lji;)[I	a	getSlots
		p	0		inventory
		p	1		side
	m	(Lcuq;Lcuq;)Z	a	canMergeItems
		p	0		first
		p	1		second
	m	(Ldcw;DDD)Lbqk;	a	getEntityContainer
		p	0		world
		p	1		x
		p	3		y
		p	5		z
	m	(Ldcw;Ldrg;)Z	a	suckInItems
		p	0		world
		p	1		hopper
	m	(Ldcw;Ldrg;Ljd;Ldtc;)Lbqk;	a	getSourceContainer
		p	0		world
		p	1		hopper
		p	2		pos
		p	3		state
	m	(Ldcw;Ldrh;)Z	a	lambda$pushItemsTick$0
	m	(Ldcw;Ljd;)Lbqk;	a	getContainerAt
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldrh;)Z	a	ejectItems
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Ldcw;Ljd;Ldtc;DDD)Lbqk;	a	getContainerAt
		p	0		world
		p	1		pos
		p	2		state
		p	3		x
		p	5		y
		p	7		z
	m	(Ldcw;Ljd;Ldtc;Lbsr;Ldrh;)V	a	entityInside
		p	0		world
		p	1		pos
		p	2		state
		p	3		entity
		p	4		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ldrh;)V	a	pushItemsTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ldrh;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldrg;Lbqk;ILji;)Z	a	tryTakeInItemFromSlot
		p	0		hopper
		p	1		inventory
		p	2		slot
		p	3		side
	m	(Ldrh;Lcjh;)Z	a	lambda$entityInside$1
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()I	b	getContainerSize
	m	(Lbqk;Lbqk;Lcuq;ILji;)Lcuq;	b	tryMoveInItem
		p	0		from
		p	1		to
		p	2		stack
		p	3		slot
		p	4		side
	m	(Lbqk;Lji;)Z	b	isFullContainer
		p	0		inventory
		p	1		direction
	m	(Ldcw;Ldrg;)Ljava/util/List;	b	getItemsAtAndAbove
		p	0		world
		p	1		hopper
	m	(Ldcw;Ljd;Ldrh;)Lbqk;	b	getAttachedContainer
		p	0		world
		p	1		pos
		p	2		blockEntity
	m	(Ldcw;Ljd;Ldtc;)Lbqk;	b	getBlockContainer
		p	0		world
		p	1		pos
		p	2		state
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(I)[I	c	createFlatSlots
		p	0		size
	m	(Ldtc;)V	c	setBlockState
		p	1		state
	m	(I)V	d	setCooldown
		p	1		transferCooldown
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	m	()Z	l	inventoryFull
	m	()Z	u	isOnCooldown
	m	()Z	v	isOnCustomCooldown
	f	I	d	MOVE_ITEM_SPEED
	f	I	e	HOPPER_CONTAINER_SIZE
	f	[[I	f	CACHED_SLOTS
	f	Ljv;	g	items
	f	I	h	cooldownTime
	f	J	i	tickedGameTime
	f	Lji;	j	facing
c	dri	net/minecraft/world/level/block/entity/TileEntityJigsaw
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setPlacementPriority
		p	1		placementPriority
	m	(Lakq;)V	a	setPool
		p	1		pool
	m	(Lakr;)V	a	setName
		p	1		name
	m	(Laqu;IZ)V	a	generate
		p	1		world
		p	2		maxDepth
		p	3		keepJigsaws
	m	(Ldri$a;)V	a	setJoint
		p	1		joint
	m	(Ljava/lang/String;)V	a	setFinalState
		p	1		finalState
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lzg;	az_	getUpdatePacket
	m	()Lakr;	b	getName
	m	(I)V	b	setSelectionPriority
		p	1		selectionPriority
	m	(Lakr;)V	b	setTarget
		p	1		target
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lakr;	c	getTarget
	m	()Lakq;	d	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Ldri$a;	j	getJoint
	m	()I	k	getPlacementPriority
	m	()I	l	getSelectionPriority
	m	()Lacb;	u	getUpdatePacket
	m	()Ldri$a;	v	lambda$loadAdditional$0
	f	Ljava/lang/String;	a	TARGET
	f	Ljava/lang/String;	b	POOL
	f	Ljava/lang/String;	c	JOINT
	f	Ljava/lang/String;	d	PLACEMENT_PRIORITY
	f	Ljava/lang/String;	e	SELECTION_PRIORITY
	f	Ljava/lang/String;	f	NAME
	f	Ljava/lang/String;	g	FINAL_STATE
	f	Lakr;	h	name
	f	Lakr;	i	target
	f	Lakq;	j	pool
	f	Ldri$a;	k	joint
	f	Ljava/lang/String;	l	finalState
	f	I	m	placementPriority
	f	I	q	selectionPriority
c	dri$a	net/minecraft/world/level/block/entity/TileEntityJigsaw$JointType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Lwz;	a	getTranslatedName
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;Ldri$a;)Z	a	lambda$byName$0
		p	1		joint
	m	()[Ldri$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldri$a;	a	ROLLABLE
	f	Ldri$a;	b	ALIGNED
	f	Ljava/lang/String;	c	name
	f	[Ldri$a;	d	$VALUES
c	drj	net/minecraft/world/level/block/entity/TileEntityJukeBox
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbqk;ILcuq;)Z	a	canTakeItem
		p	1		hopperInventory
		p	2		slot
		p	3		stack
	m	(Ldcw;Ljd;Ldtc;Ldrj;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ljm;)V	a	lambda$tryForcePlaySong$2
		p	1		song
	m	(Lub;Ljm;)V	a	lambda$loadAdditional$0
		p	2		song
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	notifyItemChangedInJukebox
		p	1		hasRecord
	m	()I	al_	getMaxStackSize
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	(Lcuq;)V	b	setTheItem
		p	1		stack
	m	(Ljm;)V	b	lambda$setSongItemWithoutPlaying$1
		p	1		song
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(I)Lcuq;	c	splitTheItem
		p	1		count
	m	(Lcuq;)V	c	setSongItemWithoutPlaying
		p	1		stack
	m	()Lcuq;	f	getTheItem
	m	()Lcuw;	j	getSongPlayer
	m	()V	k	onSongChanged
	m	()V	l	popOutTheItem
	m	()I	u	getComparatorOutput
	m	()Ldqh;	v	getContainerBlockEntity
	m	()V	w	tryForcePlaySong
	f	Ljava/lang/String;	b	SONG_ITEM_TAG_ID
	f	Ljava/lang/String;	c	TICKS_SINCE_SONG_STARTED_TAG_ID
	f	Lcuq;	d	item
	f	Lcuw;	e	jukeboxSongPlayer
c	drk	net/minecraft/world/level/block/entity/TileEntityLectern
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Lwz;	S_	getDisplayName
	m	()V	a	clearContent
	m	(I)V	a	setPage
		p	1		currentPage
	m	(Lcmx;)Let;	a	createCommandSourceStack
		p	1		player
	m	(Lcuq;Lcmx;)V	a	setBook
		p	1		book
		p	2		player
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lcuq;	b	getBook
	m	(Lcuq;)V	b	setBook
		p	1		book
	m	(Lcuq;Lcmx;)Lcuq;	b	resolveBook
		p	1		book
		p	2		player
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	hasBook
	m	(Lcuq;)I	c	getPageCount
		p	0		stack
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	()I	f	getPage
	m	()I	j	getRedstoneSignal
	m	()V	k	onBookItemRemove
	m	()Z	q	onlyOpCanSetNbt
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lbqk;	e	bookAccess
	f	Lcqf;	f	dataAccess
	f	Lcuq;	g	book
	f	I	h	page
	f	I	i	pageCount
c	drk$1	net/minecraft/world/level/block/entity/TileEntityLectern$1
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	()I	al_	getMaxStackSize
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(ILcuq;)Z	b	canPlaceItem
		p	1		slot
		p	2		stack
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	f	Ldrk;	b	this$0
c	drk$2	net/minecraft/world/level/block/entity/TileEntityLectern$2
	m	()I	a	getCount
	m	(I)I	a	get
		p	1		index
	m	(II)V	a	set
		p	1		index
		p	2		value
	f	Ldrk;	a	this$0
c	drl	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
		p	1		tickDelta
c	drm	net/minecraft/world/level/block/entity/PotDecorations
	m	(Lcul;Lcul;Lcul;Lcul;)V	<init>	<init>
		p	1		back
		p	2		left
		p	3		right
		p	4		front
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		sherds
	m	()Ljava/util/List;	a	ordered
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getItem
		p	0		sherds
		p	1		index
	m	(Ljava/util/Optional;)Lcul;	a	lambda$ordered$0
		p	0		item
	m	(Lub;)Lub;	a	save
		p	1		nbt
	m	()Ljava/util/Optional;	b	back
	m	(Lub;)Ldrm;	b	load
		p	0		nbt
	m	()Ljava/util/Optional;	c	left
	m	()Ljava/util/Optional;	d	right
	m	()Ljava/util/Optional;	e	front
	f	Ldrm;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Ljava/util/Optional;	d	back
	f	Ljava/util/Optional;	e	left
	f	Ljava/util/Optional;	f	right
	f	Ljava/util/Optional;	g	front
c	drn	net/minecraft/world/level/block/entity/TileEntityLootable
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	(J)V	a	setLootTableSeed
		p	1		lootTableSeed
	m	(Lakq;)V	a	setLootTable
		p	1		lootTable
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	()Lakq;	aB_	getLootTable
	m	()J	aC_	getLootTableSeed
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	()Z	c	isEmpty
	m	(ILcmw;Lcmx;)Lcpu;	createMenu	createMenu
		p	1		syncId
		p	2		playerInventory
		p	3		player
	m	(Lcmx;)Z	d	canOpen
		p	1		player
	f	Lakq;	l	lootTable
	f	J	m	lootTableSeed
c	dro	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;Ldro;)V	a	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldro$a;	b	getListener
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldyb;	c	getListener
	f	Ldro$a;	a	catalystListener
c	dro$a	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener
	m	(Ldtc;Ldyd;)V	<init>	<init>
		p	1		state
		p	2		positionSource
	m	()Ldyd;	a	getListenerSource
	m	(Laqu;Lexc;)V	a	lambda$handleGameEvent$0
		p	2		pos
	m	(Laqu;Ljd;Ldtc;Layw;)V	a	bloom
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Laqu;Ljm;Ldxz$a;Lexc;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Ldcw;Lbtn;)V	a	tryAwardItSpreadsAdvancement
		p	1		world
		p	2		deadEntity
	m	()I	b	getListenerRadius
	m	()Ldyb$a;	c	getDeliveryMode
	m	()Ldmu;	d	getSculkSpreader
	f	I	a	PULSE_TICKS
	f	Ldmu;	b	sculkSpreader
	f	Ldtc;	c	blockState
	f	Ldyd;	d	positionSource
c	drp	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	setLastVibrationFrequency
		p	1		lastVibrationFrequency
	m	(Ldyi$a;)V	a	lambda$loadAdditional$1
		p	1		listener
	m	(Ljava/lang/String;)V	a	lambda$saveAdditional$2
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$saveAdditional$3
		p	1		listenerNbt
	m	()Ldyi$d;	b	createVibrationUser
	m	(Ljava/lang/String;)V	b	lambda$loadAdditional$0
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldyb;	c	getListener
	m	()I	d	getLastVibrationFrequency
	m	()Ldyi$b;	f	getListener
	m	()Ldyi$a;	gm	getVibrationData
	m	()Ldyi$d;	gn	getVibrationUser
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldyi$a;	c	vibrationData
	f	Ldyi$b;	d	vibrationListener
	f	Ldyi$d;	e	vibrationUser
	f	I	h	lastVibrationFrequency
c	drp$a	net/minecraft/world/level/block/entity/SculkSensorBlockEntity$a
	m	(Ldrp;Ljd;)V	<init>	<init>
		p	2		pos
	m	()I	a	getListenerRadius
	m	(Laqu;Ljd;Ljm;Lbsr;Lbsr;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldyd;	b	getPositionSource
	m	()Z	d	canTriggerAvoidVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
	f	Ldyd;	a	positionSource
	f	I	b	LISTENER_RANGE
	f	Ljd;	c	blockPos
	f	Ldrp;	d	this$0
c	drq	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(I)V	a	lambda$tryToWarn$5
		p	1		warningLevel
	m	(Laqu;)V	a	tryRespond
		p	1		world
	m	(Laqu;Laqv;)V	a	tryShriek
		p	1		world
		p	2		player
	m	(Laqu;Lbsr;)V	a	shriek
		p	1		world
		p	2		entity
	m	(Lbsr;)Laqv;	a	tryGetPlayer
		p	0		entity
	m	(Ldyi$a;)V	a	lambda$loadAdditional$2
		p	1		vibrationListener
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
		p	0		warningSounds
	m	(Ljava/lang/String;)V	a	lambda$saveAdditional$3
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$saveAdditional$4
	m	()Ldyi$b;	b	getListener
	m	(Laqu;)Z	b	canRespond
		p	1		world
	m	(Laqu;Laqv;)Z	b	tryToWarn
		p	1		world
		p	2		player
	m	(Ldcw;)V	b	playWardenReplySound
		p	1		world
	m	(Ljava/lang/String;)V	b	lambda$loadAdditional$1
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldyb;	c	getListener
	m	(Laqu;)Z	c	trySummonWarden
		p	1		world
	m	()Ldyi$a;	gm	getVibrationData
	m	()Ldyi$d;	gn	getVibrationUser
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	WARNING_SOUND_RADIUS
	f	I	d	WARDEN_SPAWN_ATTEMPTS
	f	I	e	WARDEN_SPAWN_RANGE_XZ
	f	I	h	WARDEN_SPAWN_RANGE_Y
	f	I	i	DARKNESS_RADIUS
	f	I	j	SHRIEKING_TICKS
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	k	SOUND_BY_LEVEL
	f	I	l	warningLevel
	f	Ldyi$d;	m	vibrationUser
	f	Ldyi$a;	q	vibrationData
	f	Ldyi$b;	r	vibrationListener
c	drq$a	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$a
	m	()I	a	getListenerRadius
	m	(Laqu;Ljd;Ljm;Lbsr;Lbsr;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	()Ldyd;	b	getPositionSource
	m	()Lawu;	c	getListenableEvents
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
	f	Ldrq;	a	this$0
	f	I	b	LISTENER_RADIUS
	f	Ldyd;	c	positionSource
c	drr	net/minecraft/world/level/block/entity/TileEntityShulkerBox
	m	(Lcti;Ljd;Ldtc;)V	<init>	<init>
		p	1		color
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getProgress
		p	1		delta
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(ILcuq;Lji;)Z	a	canPlaceItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Ldcw;Ljd;Ldtc;Ldrr;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldtc;)Lewx;	a	getBoundingBox
		p	1		state
	m	(Lji;)[I	a	getSlotsForFace
		p	1		side
	m	(Ljv;)V	a	setItems
		p	1		inventory
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()I	b	getContainerSize
	m	(ILcuq;Lji;)Z	b	canTakeItemThroughFace
		p	1		slot
		p	2		stack
		p	3		dir
	m	(Ldcw;Ljd;Ldtc;)V	b	updateAnimation
		p	1		world
		p	2		pos
		p	3		state
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lcmx;)V	c	stopOpen
		p	1		player
	m	(Ldcw;Ljd;Ldtc;)V	c	moveCollidedEntities
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;)V	d	doNeighborUpdates
		p	0		world
		p	1		pos
		p	2		state
	m	(Lcmx;)V	d_	startOpen
		p	1		player
	m	(Lub;Ljo$a;)V	e	loadFromTag
		p	1		nbt
		p	2		registries
	m	()Ljv;	j	getItems
	m	()Lwz;	k	getDefaultName
	m	()Ldrr$a;	l	getAnimationStatus
	m	()Lcti;	u	getColor
	m	()Z	v	isClosed
	f	I	d	COLUMNS
	f	I	e	ROWS
	f	I	f	CONTAINER_SIZE
	f	I	g	EVENT_SET_OPEN_COUNT
	f	I	h	OPENING_TICK_LENGTH
	f	F	i	MAX_LID_HEIGHT
	f	F	j	MAX_LID_ROTATION
	f	[I	k	SLOTS
	f	Ljv;	q	itemStacks
	f	I	r	openCount
	f	Ldrr$a;	s	animationStatus
	f	F	t	progress
	f	F	u	progressOld
	f	Lcti;	v	color
c	drr$a	net/minecraft/world/level/block/entity/TileEntityShulkerBox$AnimationPhase
	m	()[Ldrr$a;	a	$values
	f	Ldrr$a;	a	CLOSED
	f	Ldrr$a;	b	OPENING
	f	Ldrr$a;	c	OPENED
	f	Ldrr$a;	d	CLOSING
	f	[Ldrr$a;	e	$VALUES
c	drs	net/minecraft/world/level/block/entity/TileEntitySign
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcmx;)Z	a	isFacingFrontText
		p	1		player
	m	(Lcmx;Ldcw;Ljd;)Let;	a	createCommandSourceStack
		p	0		player
		p	1		world
		p	2		pos
	m	(Lcmx;Ldcw;Ljd;Z)Z	a	executeClickCommandsIfPresent
		p	1		player
		p	2		world
		p	3		pos
		p	4		front
	m	(Lcmx;Ljava/util/List;Ldrt;)Ldrt;	a	setMessages
		p	1		player
		p	2		messages
		p	3		text
	m	(Lcmx;ZLjava/util/List;)V	a	updateSignText
		p	1		player
		p	2		front
		p	3		messages
	m	(Ldcw;Ljd;Ldtc;Ldrs;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldrs;Ldcw;Ljava/util/UUID;)V	a	clearInvalidPlayerWhoMayEdit
		p	1		blockEntity
		p	2		world
		p	3		uuid
	m	(Ldrt;)Ldrt;	a	loadLines
		p	1		signText
	m	(Ldrt;Z)Z	a	setText
		p	1		text
		p	2		front
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
		p	1		editor
	m	(Ljava/util/function/UnaryOperator;Z)Z	a	updateText
		p	1		textChanger
		p	2		front
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$saveAdditional$1
		p	1		backText
	m	(Lwz;)Lwz;	a	loadLine
		p	1		text
	m	(Z)Ldrt;	a	getText
		p	1		front
	m	(ZLcmx;)Z	a	canExecuteClickCommands
		p	1		front
		p	2		player
	m	()Lzg;	az_	getUpdatePacket
	m	()I	b	getTextLineHeight
	m	(Lcmx;Ljava/util/List;Ldrt;)Ldrt;	b	lambda$updateSignText$4
		p	3		text
	m	(Ldrt;)Z	b	setBackText
		p	1		backText
	m	(Ljava/util/UUID;)Z	b	playerIsTooFarAwayToEdit
		p	1		uuid
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	b	lambda$saveAdditional$0
		p	1		frontText
	m	(Z)Z	b	setWaxed
		p	1		waxed
	m	()I	c	getMaxTextLineWidth
	m	(Ldrt;)Z	c	setFrontText
		p	1		frontText
	m	()Lavo;	d	getSignInteractionFailedSoundEvent
	m	(Ldrt;)V	d	lambda$loadAdditional$3
		p	1		signText
	m	(Ldrt;)V	e	lambda$loadAdditional$2
		p	1		signText
	m	()Ldrt;	f	createDefaultSignText
	m	()Ldrt;	j	getFrontText
	m	()Ldrt;	k	getBackText
	m	()Lacb;	l	getUpdatePacket
	m	()Z	q	onlyOpCanSetNbt
	m	()Ljava/util/UUID;	u	getPlayerWhoMayEdit
	m	()Z	v	isWaxed
	m	()V	w	markUpdated
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_TEXT_LINE_WIDTH
	f	I	c	TEXT_LINE_HEIGHT
	f	Ljava/util/UUID;	d	playerWhoMayEdit
	f	Ldrt;	e	frontText
	f	Ldrt;	f	backText
	f	Z	g	isWaxed
c	drt	net/minecraft/world/level/block/entity/SignText
	m	([Lwz;[Lwz;Lcti;Z)V	<init>	<init>
		p	1		messages
		p	2		filteredMessages
		p	3		color
		p	4		glowing
	m	()Z	a	hasGlowingText
	m	(ILwz;)Ldrt;	a	setMessage
		p	1		line
		p	2		message
	m	(ILwz;Lwz;)Ldrt;	a	setMessage
		p	1		line
		p	2		message
		p	3		filteredMessage
	m	(IZ)Lwz;	a	getMessage
		p	1		line
		p	2		filtered
	m	(Lcmx;)Z	a	hasMessage
		p	1		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Lcti;)Ldrt;	a	setColor
		p	1		color
	m	(Ldrt;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		signText
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		messages
	m	(Lwz;)Z	a	lambda$hasMessage$7
		p	0		text
	m	(Z)Ldrt;	a	setHasGlowingText
		p	1		glowing
	m	(ZLjava/util/function/Function;)[Laya;	a	getRenderMessages
		p	1		filtered
		p	2		messageOrderer
	m	([Lwz;)Ljava/util/List;	a	lambda$static$2
		p	0		messages
	m	([Lwz;Ljava/util/Optional;Lcti;Z)Ldrt;	a	load
		p	0		messages
		p	1		filteredMessages
		p	2		color
		p	3		glowing
	m	()Lcti;	b	getColor
	m	(Lcmx;)Z	b	hasAnyClickCommands
		p	1		player
	m	(Ldrt;)Lcti;	b	lambda$static$4
		p	0		signText
	m	(Ljava/util/List;)[Lwz;	b	lambda$static$0
	m	(Z)[Lwz;	b	getMessages
		p	1		filtered
	m	()[Lwz;	c	emptyMessages
	m	(Ldrt;)[Lwz;	c	lambda$static$3
		p	0		signText
	m	()Ljava/util/Optional;	d	filteredMessages
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	I	b	LINES
	f	Lcom/mojang/serialization/Codec;	c	LINES_CODEC
	f	[Lwz;	d	messages
	f	[Lwz;	e	filteredMessages
	f	Lcti;	f	color
	f	Z	g	hasGlowingText
	f	[Laya;	h	renderMessages
	f	Z	i	renderMessagedFiltered
c	dru	net/minecraft/world/level/block/entity/TileEntitySkull
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getAnimation
		p	1		tickDelta
	m	(Lalm;Ljava/util/concurrent/Executor;)V	a	setup
		p	0		apiServices
		p	1		executor
	m	(Lcxu;)V	a	setOwner
		p	1		profile
	m	(Ldcw;Ljd;Ldtc;Ldru;)V	a	animation
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldqh$b;)V	a	applyImplicitComponents
		p	1		components
	m	(Ljava/lang/Runnable;)V	a	lambda$static$0
		p	0		runnable
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	fetchGameProfile
		p	0		name
	m	(Ljava/lang/String;Lalm;)Ljava/util/concurrent/CompletableFuture;	a	fetchProfileByName
		p	0		name
		p	1		apiServices
	m	(Ljava/util/Optional;)Ljava/util/concurrent/CompletionStage;	a	lambda$fetchProfileByName$4
	m	(Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$fetchProfileByName$3
	m	(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;	a	fetchGameProfile
		p	0		uuid
	m	(Ljava/util/UUID;Lalm;Ljava/util/function/BooleanSupplier;)Ljava/util/concurrent/CompletableFuture;	a	fetchProfileById
		p	0		uuid
		p	1		apiServices
	m	(Ljava/util/function/BooleanSupplier;Lalm;Ljava/util/UUID;)Ljava/util/Optional;	a	lambda$fetchProfileById$5
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkm$a;)V	a	collectImplicitComponents
		p	1		componentMapBuilder
	m	(Lub;)V	a	removeComponentsFromTag
		p	1		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lzg;	az_	getUpdatePacket
	m	()V	b	clear
	m	(Lcxu;)V	b	lambda$updateOwnerProfile$7
		p	1		owner
	m	(Ljava/lang/String;)V	b	lambda$loadAdditional$6
	m	(Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$fetchProfileByName$2
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lcxu;	c	getOwnerProfile
	m	()Lakr;	d	getNoteBlockSound
	m	()Lacb;	f	getUpdatePacket
	m	()V	j	updateOwnerProfile
	m	()Z	k	lambda$setup$1
	f	Ljava/util/concurrent/Executor;	a	CHECKED_MAIN_THREAD_EXECUTOR
	f	Ljava/lang/String;	b	TAG_PROFILE
	f	Ljava/lang/String;	c	TAG_NOTE_BLOCK_SOUND
	f	Ljava/lang/String;	d	TAG_CUSTOM_NAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/util/concurrent/Executor;	f	mainThreadExecutor
	f	Lcom/google/common/cache/LoadingCache;	g	profileCacheByName
	f	Lcom/google/common/cache/LoadingCache;	h	profileCacheById
	f	Lcxu;	i	owner
	f	Lakr;	j	noteBlockSound
	f	I	k	animationTickCount
	f	Z	l	isAnimating
	f	Lwz;	m	customName
c	dru$1	net/minecraft/world/level/block/entity/TileEntitySkull$1
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	load
	f	Lalm;	a	val$services
c	dru$2	net/minecraft/world/level/block/entity/TileEntitySkull$2
	m	(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;	a	load
	f	Lalm;	a	val$services
	f	Ljava/util/function/BooleanSupplier;	b	val$invalidated
c	drv	net/minecraft/world/level/block/entity/TileEntitySmoker
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(ILcmw;)Lcpu;	a	createMenu
		p	1		syncId
		p	2		playerInventory
	m	(Lcuq;)I	b	getBurnDuration
		p	1		fuel
	m	()Lwz;	k	getDefaultName
c	drw	net/minecraft/world/level/block/entity/TileEntityMobSpawner
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbsx;Layw;)V	a	setEntityId
		p	1		type
		p	2		random
	m	(Ldcw;Ljd;Ldtc;Ldrw;)V	a	clientTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lzg;	az_	getUpdatePacket
	m	()Lacb;	b	getUpdatePacket
	m	(Ldcw;Ljd;Ldtc;Ldrw;)V	b	serverTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldby;	c	getSpawner
	m	()Z	q	onlyOpCanSetNbt
	f	Ldby;	a	spawner
c	drw$1	net/minecraft/world/level/block/entity/TileEntityMobSpawner$1
	m	(Ldcw;Ljd;I)V	a	broadcastEvent
		p	1		world
		p	2		pos
		p	3		status
	m	(Ldcw;Ljd;Lddo;)V	a	setNextSpawnData
		p	1		world
		p	2		pos
		p	3		spawnEntry
c	drx	net/minecraft/world/level/block/entity/TileEntityStructure
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	()Z	A	saveStructure
	m	()V	B	unloadStructure
	m	()Z	C	isStructureLoadable
	m	()Z	D	isPowered
	m	()Z	E	getShowAir
	m	()Z	F	getShowBoundingBox
	m	()V	G	updateBlockState
	m	(F)V	a	setIntegrity
		p	1		integrity
	m	(J)V	a	setSeed
		p	1		seed
	m	(Lakr;)V	a	setStructureName
		p	1		templateName
	m	(Laqu;)Z	a	placeStructureIfSameSize
		p	1		world
	m	(Laqu;Lent;)V	a	placeStructure
		p	1		world
		p	2		template
	m	(Laqu;Ljd;)V	a	lambda$placeStructure$5
	m	(Lbtn;)V	a	createdBy
		p	1		entity
	m	(Lcmx;)Z	a	usedBy
		p	1		player
	m	(Ldkv;)V	a	setMirror
		p	1		mirror
	m	(Ldmm;)V	a	setRotation
		p	1		rotation
	m	(Ldqh;)Ldrx;	a	lambda$getRelatedCorners$3
		p	0		blockEntity
	m	(Ldrx;)Z	a	lambda$getRelatedCorners$4
		p	1		blockEntity
	m	(Ldum;)V	a	setMode
		p	1		mode
	m	(Lent;)V	a	loadStructureInfo
		p	1		template
	m	(Ljava/lang/String;)V	a	setStructureName
		p	1		templateName
	m	(Ljd;)V	a	setStructurePos
		p	1		offset
	m	(Ljd;Lejj;)Z	a	lambda$detectSize$0
		p	2		box
	m	(Ljd;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
		p	0		pos
		p	1		corners
	m	(Ljd;Ljd;)Ljava/util/stream/Stream;	a	getRelatedCorners
		p	1		start
		p	2		end
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lkh;)V	a	setStructureSize
		p	1		size
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Lzg;	az_	getUpdatePacket
	m	()Lacb;	b	getUpdatePacket
	m	(J)Layw;	b	createRandom
		p	0		seed
	m	(Laqu;)Z	b	loadStructureInfo
		p	1		world
	m	(Ldqh;)Z	b	lambda$getRelatedCorners$2
		p	0		blockEntity
	m	(Ljava/lang/String;)V	b	setMetaData
		p	1		metadata
	m	(Ljd;)Z	b	lambda$getRelatedCorners$1
		p	1		pos
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Z)Z	b	saveStructure
		p	1		interactive
	m	()Ljava/lang/String;	c	getStructureName
	m	(Laqu;)V	c	placeStructure
		p	1		world
	m	(Z)V	c	setPowered
		p	1		powered
	m	()Z	d	hasStructureName
	m	(Laqu;)Lent;	d	getStructureTemplate
		p	1		world
	m	(Z)V	d	setShowAir
		p	1		showAir
	m	(Z)V	e	setShowBoundingBox
		p	1		showBoundingBox
	m	()Ljd;	f	getStructurePos
	m	()Lkh;	j	getStructureSize
	m	()Ldkv;	k	getMirror
	m	()Ldmm;	l	getRotation
	m	()Ljava/lang/String;	u	getMetaData
	m	()Ldum;	v	getMode
	m	()Z	w	isIgnoreEntities
	m	()F	x	getIntegrity
	m	()J	y	getSeed
	m	()Z	z	detectSize
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	Lakr;	e	structureName
	f	Ljava/lang/String;	f	author
	f	Ljava/lang/String;	g	metaData
	f	Ljd;	h	structurePos
	f	Lkh;	i	structureSize
	f	Ldkv;	j	mirror
	f	Ldmm;	k	rotation
	f	Ldum;	l	mode
	f	Z	m	ignoreEntities
	f	Z	q	powered
	f	Z	r	showAir
	f	Z	s	showBoundingBox
	f	F	t	integrity
	f	J	u	seed
c	drx$a	net/minecraft/world/level/block/entity/TileEntityStructure$UpdateType
	m	()[Ldrx$a;	a	$values
	f	Ldrx$a;	a	UPDATE_DATA
	f	Ldrx$a;	b	SAVE_AREA
	f	Ldrx$a;	c	LOAD_AREA
	f	Ldrx$a;	d	SCAN_AREA
	f	[Ldrx$a;	e	$VALUES
c	dry	net/minecraft/world/level/block/entity/TileEntityEndGateway
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(F)F	a	getSpawnPercent
		p	1		tickDelta
	m	(Laqu;Lexc;)Z	a	isChunkEmpty
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;)Lexc;	a	getPortalPosition
		p	1		world
		p	2		pos
	m	(Laqu;Ljd;Leeh;)V	a	spawnGatewayPortal
		p	0		world
		p	1		pos
		p	2		config
	m	(Laqu;Ljd;Ljm$c;)V	a	lambda$findOrCreateValidTeleportPos$2
	m	(Ldcc;Ljd;IZ)Ljd;	a	findTallestBlock
		p	0		world
		p	1		pos
		p	2		searchRadius
		p	3		force
	m	(Ldcw;Lexc;)Ldvi;	a	getChunk
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;)Ljd;	a	findExitPosition
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Ldry;)V	a	beamAnimationTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Ldvi;)Ljd;	a	findValidSpawnInChunk
		p	0		chunk
	m	(Ljd;)V	a	lambda$loadAdditional$0
		p	1		exitPortalPos
	m	(Ljd;Z)V	a	setExitPosition
		p	1		pos
		p	2		exactTeleport
	m	(Lji;)Z	a	shouldRenderFace
		p	1		direction
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Ljz;)Ljava/util/Optional;	a	lambda$findOrCreateValidTeleportPos$1
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(II)Z	a_	triggerEvent
		p	1		type
		p	2		data
	m	()Lzg;	az_	getUpdatePacket
	m	()Z	b	isSpawning
	m	(F)F	b	getCooldownPercent
		p	1		tickDelta
	m	(Laqu;Ljd;)Ljd;	b	findOrCreateValidTeleportPos
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Ldry;)V	b	portalTick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	c	isCoolingDown
	m	(Laqu;Ljd;)Lexc;	c	findExitPortalXZPosTentative
		p	0		world
		p	1		pos
	m	(Ldcw;Ljd;Ldtc;Ldry;)V	c	triggerCooldown
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	()Lacb;	d	getUpdatePacket
	m	()I	f	getParticleAmount
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	age
	f	I	h	teleportCooldown
	f	Ljd;	i	exitPortal
	f	Z	j	exactTeleport
c	drz	net/minecraft/world/level/block/entity/TileEntityEnderPortal
	m	(Ldqj;Ljd;Ldtc;)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		state
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lji;)Z	a	shouldRenderFace
		p	1		direction
c	dsa	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljd;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	dsb	net/minecraft/world/level/block/entity/TileEntityChestTrapped
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ldcw;Ljd;Ldtc;II)V	a	signalOpenCount
		p	1		world
		p	2		pos
		p	3		state
		p	4		oldViewerCount
		p	5		newViewerCount
c	dsc	net/minecraft/world/level/block/entity/TrialSpawnerBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lbsx;Layw;)V	a	setEntityId
		p	1		type
		p	2		random
	m	(Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$saveAdditional$2
	m	(Ldcw;Ldsi;)V	a	setState
		p	1		world
		p	2		spawnerState
	m	(Ldsf;)V	a	lambda$loadAdditional$0
		p	1		spawner
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$saveAdditional$1
		p	1		nbtx
	m	()Lzg;	az_	getUpdatePacket
	m	()Lacb;	b	getUpdatePacket
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldsf;	c	getTrialSpawner
	m	()Ldsi;	d	getState
	m	()V	f	markUpdated
	m	()Z	q	onlyOpCanSetNbt
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldsf;	b	trialSpawner
c	dse	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector
	m	(Laqu;Ldse$a;Ljd;DZ)Ljava/util/List;	a	lambda$static$7
		p	0		world
		p	1		selector
		p	2		center
		p	3		radius
		p	5		spawner
	m	(Ldcw;Lexc;Lexc;)Z	a	inLineOfSight
		p	0		world
		p	1		pos
		p	2		entityEyePos
	m	(Ljd;DLcmx;)Z	a	lambda$static$3
		p	3		player
	m	(ZLaqu;Ljd;Lcga;)Z	a	lambda$static$6
		p	3		entity
	m	(ZLaqu;Ljd;Lcmx;)Z	a	lambda$static$4
		p	3		entity
	m	(Laqu;Ldse$a;Ljd;DZ)Ljava/util/List;	b	lambda$static$5
		p	0		world
		p	1		selector
		p	2		center
		p	3		radius
		p	5		spawner
	m	(Ljd;DLcmx;)Z	b	lambda$static$0
		p	3		player
	m	(ZLaqu;Ljd;Lcmx;)Z	b	lambda$static$1
		p	3		entity
	m	(Laqu;Ldse$a;Ljd;DZ)Ljava/util/List;	c	lambda$static$2
		p	0		world
		p	1		selector
		p	2		center
		p	3		radius
		p	5		spawner
	m	(Laqu;Ldse$a;Ljd;DZ)Ljava/util/List;	detect	detect
		p	1		world
		p	2		selector
		p	3		center
		p	4		radius
		p	6		spawner
	f	Ldse;	a	NO_CREATIVE_PLAYERS
	f	Ldse;	b	INCLUDING_CREATIVE_PLAYERS
	f	Ldse;	c	SHEEP
c	dse$a	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$a
	m	(Laqu;Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		world
		p	2		typeFilter
		p	3		box
		p	4		predicate
	m	(Laqu;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		world
		p	2		predicate
	m	(Lcmx;)Ldse$a;	a	onlySelectPlayer
		p	0		player
	m	(Ljava/util/List;)Ldse$a;	a	onlySelectPlayers
		p	0		players
	f	Ldse$a;	a	SELECT_FROM_LEVEL
c	dse$a$1	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$a$1
	m	(Laqu;Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		world
		p	2		typeFilter
		p	3		box
		p	4		predicate
	m	(Laqu;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		world
		p	2		predicate
c	dse$a$2	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$a$2
	m	(Laqu;Ldxn;Lewx;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
		p	1		world
		p	2		typeFilter
		p	3		box
		p	4		predicate
	m	(Laqu;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
		p	1		world
		p	2		predicate
	f	Ljava/util/List;	b	val$players
c	dsf	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner
	m	(Ldsf$b;Ldse;Ldse$a;)V	<init>	<init>
		p	1		trialSpawner
		p	2		entityDetector
		p	3		entitySelector
	m	(Ldsg;Ldsg;Ldsh;IILdsf$b;Ldse;Ldse$a;)V	<init>	<init>
		p	1		normalConfig
		p	2		ominousConfig
		p	3		data
		p	4		cooldownLength
		p	5		entityDetectionRange
		p	6		trialSpawner
		p	7		entityDetector
		p	8		entitySelector
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(DDDLayw;Lbsr;)Lbsr;	a	lambda$spawnMob$2
		p	7		entity
	m	(Laqu;Ljd;)V	a	applyOminous
		p	1		world
		p	2		pos
	m	(Laqu;Ljd;Lakq;)V	a	ejectReward
		p	1		world
		p	2		pos
		p	3		lootTable
	m	(Laqu;Ljd;Ljava/util/UUID;)Z	a	shouldMobBeUntracked
		p	0		world
		p	1		pos
		p	2		uuid
	m	(Laqu;Ljd;Z)V	a	tickServer
		p	1		world
		p	2		pos
		p	3		ominous
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	m	(Ldcw;)Z	a	canSpawnInLevel
		p	1		world
	m	(Ldcw;Ldsi;)V	a	setState
		p	1		world
		p	2		spawnerState
	m	(Ldcw;Lexc;Lexc;)Z	a	inLineOfSight
		p	0		world
		p	1		spawnerPos
		p	2		spawnPos
	m	(Ldcw;Ljd;Layw;)V	a	addBecomeOminousParticles
		p	0		world
		p	1		pos
		p	2		random
	m	(Ldcw;Ljd;Layw;ILlk;)V	a	addDetectPlayerParticles
		p	0		world
		p	1		pos
		p	2		random
		p	3		playerCount
		p	4		particle
	m	(Ldcw;Ljd;Layw;Llq;)V	a	addSpawnParticles
		p	0		world
		p	1		pos
		p	2		random
		p	3		particle
	m	(Ldcw;Ljd;Z)V	a	tickClient
		p	1		world
		p	2		pos
		p	3		ominous
	m	(Ldse;)V	a	setPlayerDetector
		p	1		detector
	m	(Ldsg;Ldsg;Ldsh;Ljava/lang/Integer;Ljava/lang/Integer;)Ldsf;	a	lambda$codec$0
		p	1		config
	m	()Ldsg;	b	getConfig
	m	(Laqu;Ljd;)V	b	removeOminous
		p	1		world
		p	2		pos
	m	(Laqu;Ljd;Ljava/util/UUID;)Z	b	lambda$tickServer$3
		p	2		uuid
	m	(Ldcw;Ljd;Layw;)V	b	addEjectItemParticles
		p	0		world
		p	1		pos
		p	2		random
	m	()Ldsg;	c	getNormalConfig
	m	(Laqu;Ljd;)Ljava/util/Optional;	c	spawnMob
		p	1		world
		p	2		pos
	m	()Ldsg;	d	getOminousConfig
	m	()Z	e	isOminous
	m	()Ldsh;	f	getData
	m	()I	g	getTargetCooldownLength
	m	()I	h	getRequiredPlayerRange
	m	()Ldsi;	i	getState
	m	()V	j	markUpdated
	m	()Ldse;	k	getPlayerDetector
	m	()Ldse$a;	l	getEntitySelector
	m	()V	m	overridePeacefulAndMobSpawnRule
	m	()Ldsg;	n	getOminousConfigForSerialization
	f	Ljava/lang/String;	a	NORMAL_CONFIG_TAG_NAME
	f	Ljava/lang/String;	b	OMINOUS_CONFIG_TAG_NAME
	f	I	c	DETECT_PLAYER_SPAWN_BUFFER
	f	I	d	DEFAULT_TARGET_COOLDOWN_LENGTH
	f	I	e	DEFAULT_PLAYER_SCAN_RANGE
	f	I	f	MAX_MOB_TRACKING_DISTANCE
	f	I	g	MAX_MOB_TRACKING_DISTANCE_SQR
	f	F	h	SPAWNING_AMBIENT_SOUND_CHANCE
	f	Ldsg;	i	normalConfig
	f	Ldsg;	j	ominousConfig
	f	Ldsh;	k	data
	f	I	l	requiredPlayerRange
	f	I	m	targetCooldownLength
	f	Ldsf$b;	n	stateAccessor
	f	Ldse;	o	playerDetector
	f	Ldse$a;	p	entitySelector
	f	Z	q	overridePeacefulAndMobSpawnRule
	f	Z	r	isOminous
c	dsf$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$a
	m	(Ljava/lang/String;ILlq;)V	<init>	<init>
		p	3		particle
	m	()I	a	encode
	m	(I)Ldsf$a;	a	decode
		p	0		index
	m	()[Ldsf$a;	b	$values
	f	Ldsf$a;	a	NORMAL
	f	Ldsf$a;	b	OMINOUS
	f	Llq;	c	particleType
	f	[Ldsf$a;	d	$VALUES
c	dsf$b	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$b
	m	(Ldcw;Ldsi;)V	a	setState
		p	1		world
		p	2		spawnerState
	m	()Ldsi;	d	getState
	m	()V	f	markUpdated
c	dsg	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig
	m	()J	a	ticksBetweenItemSpawners
	m	(I)I	a	calculateTargetTotalMobs
		p	1		additionalPlayers
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	spawnRange
	m	(I)I	b	calculateTargetSimultaneousMobs
		p	1		additionalPlayers
	m	()F	c	totalMobs
	m	()F	d	simultaneousMobs
	m	()F	e	totalMobsAddedPerPlayer
	m	()F	f	simultaneousMobsAddedPerPlayer
	m	()I	g	ticksBetweenSpawn
	m	()Lbpb;	h	spawnPotentialsDefinition
	m	()Lbpb;	i	lootTablesToEject
	m	()Lakq;	j	itemsToDropWhenOminous
	f	Ldsg;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	spawnRange
	f	F	d	totalMobs
	f	F	e	simultaneousMobs
	f	F	f	totalMobsAddedPerPlayer
	f	F	g	simultaneousMobsAddedPerPlayer
	f	I	h	ticksBetweenSpawn
	f	Lbpb;	i	spawnPotentialsDefinition
	f	Lbpb;	j	lootTablesToEject
	f	Lakq;	k	itemsToDropWhenOminous
c	dsh	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerData
	m	(Ljava/util/Set;Ljava/util/Set;JJILjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		players
		p	2		spawnedMobsAlive
		p	3		cooldownEnd
		p	5		nextMobSpawnsAt
		p	7		totalSpawnedMobs
		p	8		spawnData
		p	9		rewardLootTable
	m	()V	a	reset
	m	(Laqu;)Z	a	isCooldownFinished
		p	1		world
	m	(Laqu;FI)Z	a	isReadyToOpenShutter
		p	1		world
	m	(Laqu;Lbsr;)V	a	lambda$resetAfterBecomingOminous$10
		p	1		entity
	m	(Laqu;Ldsf;Ljd;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$tryDetectPlayers$8
	m	(Laqu;Ldsg;I)Z	a	isReadyToSpawnNextMob
		p	1		world
		p	2		config
		p	3		additionalPlayers
	m	(Laqu;Ldsg;Ljd;)Lbpb;	a	getDispensingItems
		p	1		world
		p	2		config
		p	3		pos
	m	(Laqu;Ljava/util/List;)Ljava/util/Optional;	a	findPlayerWithOminousEffect
		p	0		world
		p	1		players
	m	(Laqu;Ljd;)J	a	lowResolutionPosition
		p	0		world
		p	1		pos
	m	(Laqu;Ljd;Ldsf;)V	a	tryDetectPlayers
		p	1		world
		p	2		pos
		p	3		logic
	m	(Lcmx;)V	a	transformBadOmenIntoTrialOmen
		p	0		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Ldsf;Laqu;)V	a	resetAfterBecomingOminous
		p	1		logic
		p	2		world
	m	(Ldsf;Layw;)Z	a	hasMobToSpawn
		p	1		logic
		p	2		random
	m	(Ldsf;Layw;Lbsx;)V	a	setEntityId
		p	1		logic
		p	2		random
		p	3		type
	m	(Ldsf;Ldcw;Ldsi;)Lbsr;	a	getOrCreateDisplayEntity
		p	1		logic
		p	2		world
		p	3		state
	m	(Ldsg;I)Z	a	hasFinishedSpawningAllMobs
		p	1		config
		p	2		additionalPlayers
	m	(Ldsh;)Ljava/util/Optional;	a	lambda$static$6
		p	0		data
	m	(Ldsi;)Lub;	a	getUpdateTag
		p	1		state
	m	(Ljd;)I	a	countAdditionalPlayers
		p	1		pos
	m	(Lub;Lddo;)V	a	lambda$getUpdateTag$12
		p	1		spawnData
	m	()Z	b	haveAllCurrentMobsDied
	m	(Laqu;FI)Z	b	isReadyToEjectItems
		p	1		world
	m	(Lcmx;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findPlayerWithOminousEffect$9
		p	0		player
	m	(Ldsf;Layw;)Lddo;	b	getOrCreateNextSpawnData
		p	1		logic
		p	2		random
	m	(Ldsh;)Ljava/util/Optional;	b	lambda$static$5
		p	0		data
	m	()D	c	getSpin
	m	(Ldsh;)Ljava/lang/Integer;	c	lambda$static$4
		p	0		data
	m	()D	d	getOSpin
	m	(Ldsh;)Ljava/lang/Long;	d	lambda$static$3
		p	0		data
	m	()Ljava/lang/IllegalStateException;	e	lambda$getUpdateTag$11
	m	(Ldsh;)Ljava/lang/Long;	e	lambda$static$2
		p	0		data
	m	(Ldsh;)Ljava/util/Set;	f	lambda$static$1
		p	0		data
	m	(Ldsh;)Ljava/util/Set;	g	lambda$static$0
		p	0		data
	f	Ljava/lang/String;	a	TAG_SPAWN_DATA
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	Ljava/util/Set;	c	detectedPlayers
	f	Ljava/util/Set;	d	currentMobs
	f	J	e	cooldownEndsAt
	f	J	f	nextMobSpawnsAt
	f	I	g	totalMobsSpawned
	f	Ljava/util/Optional;	h	nextSpawnData
	f	Ljava/util/Optional;	i	ejectingLootTable
	f	Lbsr;	j	displayEntity
	f	D	k	spin
	f	D	l	oSpin
	f	Ljava/lang/String;	m	TAG_NEXT_MOB_SPAWNS_AT
	f	I	n	DELAY_BETWEEN_PLAYER_SCANS
	f	I	o	TRIAL_OMEN_PER_BAD_OMEN_LEVEL
	f	Lbpb;	p	dispensing
c	dsi	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState
	m	(Ljava/lang/String;ILjava/lang/String;ILdsi$b;DZ)V	<init>	<init>
		p	3		id
		p	4		luminance
		p	5		particleEmitter
		p	6		displayRotationSpeed
		p	8		playsSound
	m	()I	a	lightLevel
	m	(Laqu;Lcuq;Ldsh;Ldsf;Lexc;)V	a	lambda$spawnOminousOminousItemSpawner$3
		p	4		pos
	m	(Laqu;Ldsh;)Z	a	timeToSpawnItemSpawner
		p	1		world
		p	2		data
	m	(Laqu;Ljd;Ldsf;)V	a	spawnOminousOminousItemSpawner
		p	1		world
		p	2		pos
		p	3		logic
	m	(Laqu;Ljd;Ldsf;Ldsh;)Ljava/util/Optional;	a	calculatePositionToSpawnSpawner
		p	0		world
		p	1		pos
		p	2		logic
		p	3		data
	m	(Lbsr;Laqu;)Ljava/util/Optional;	a	calculatePositionAbove
		p	0		entity
		p	1		world
	m	(Ldcw;Ljd;Z)V	a	emitParticles
		p	1		world
		p	2		pos
		p	3		ominous
	m	(Ldsf;Laqu;Ljd;Lakq;)V	a	lambda$tickAndGetNext$2
		p	3		lootTable
	m	(Ldsh;Laqu;Ldsg;Ldsf;Ljava/util/UUID;)V	a	lambda$tickAndGetNext$1
		p	4		uuid
	m	(Ldsh;Ldsf;Lbpd$b;)V	a	lambda$tickAndGetNext$0
		p	2		spawnData
	m	(Ljava/util/List;Ljava/util/Set;Ldsf;Ljd;Laqu;)Lbsr;	a	selectEntityToSpawnItemAbove
		p	0		players
		p	1		entityUuids
		p	2		logic
		p	3		pos
		p	4		world
	m	(Ljd;Ldsf;Laqu;)Ldsi;	a	tickAndGetNext
		p	1		pos
		p	2		logic
		p	3		world
	m	(Ljd;Ldsf;Lbsr;)Z	a	lambda$selectEntityToSpawnItemAbove$5
		p	2		entity
	m	(Ljd;Ldsf;Lcmx;)Z	a	lambda$calculatePositionToSpawnSpawner$4
		p	2		player
	m	()D	b	spinningMobSpeed
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	hasSpinningMob
	m	()Z	e	isCapableOfSpawning
	m	()[Ldsi;	f	$values
	f	Ldsi;	a	INACTIVE
	f	Ldsi;	b	WAITING_FOR_PLAYERS
	f	Ldsi;	c	ACTIVE
	f	Ldsi;	d	WAITING_FOR_REWARD_EJECTION
	f	Ldsi;	e	EJECTING_REWARD
	f	Ldsi;	f	COOLDOWN
	f	F	g	DELAY_BEFORE_EJECT_AFTER_KILLING_LAST_MOB
	f	I	h	TIME_BETWEEN_EACH_EJECTION
	f	Ljava/lang/String;	i	name
	f	I	j	lightLevel
	f	D	k	spinningMobSpeed
	f	Ldsi$b;	l	particleEmission
	f	Z	m	isCapableOfSpawning
	f	[Ldsi;	n	$VALUES
c	dsi$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$a
	f	I	a	UNLIT
	f	I	b	HALF_LIT
	f	I	c	LIT
c	dsi$b	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$b
	m	(Ldcw;Layw;Ljd;Z)V	a	lambda$static$3
		p	0		world
		p	1		random
		p	2		pos
		p	3		ominous
	m	(Llq;Lexc;Ldcw;)V	a	addParticle
		p	0		type
		p	1		pos
		p	2		world
	m	(Ldcw;Layw;Ljd;Z)V	b	lambda$static$2
		p	0		world
		p	1		random
		p	2		pos
		p	3		ominous
	m	(Ldcw;Layw;Ljd;Z)V	c	lambda$static$1
		p	0		world
		p	1		random
		p	2		pos
		p	3		ominous
	m	(Ldcw;Layw;Ljd;Z)V	d	lambda$static$0
		p	0		world
		p	1		random
		p	2		pos
		p	3		ominous
	m	(Ldcw;Layw;Ljd;Z)V	emit	emit
		p	1		world
		p	2		random
		p	3		pos
		p	4		ominous
	f	Ldsi$b;	a	NONE
	f	Ldsi$b;	b	SMALL_FLAMES
	f	Ldsi$b;	c	FLAMES_AND_SMOKE
	f	Ldsi$b;	d	SMOKE_INSIDE_AND_TOP_FACE
c	dsi$c	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$c
	f	D	a	NONE
	f	D	b	SLOW
	f	D	c	FAST
c	dsk	net/minecraft/world/level/block/entity/vault/VaultBlockEntity
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljo$a;)Luy;	a	encode
		p	0		codec
		p	1		value
		p	2		registries
	m	(Ldsm;)V	a	setConfig
		p	1		config
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Ljo$a;Lub;)V	a	lambda$getUpdateTag$0
		p	2		nbt
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lzg;	az_	getUpdatePacket
	m	()Ldsn;	b	getServerData
	m	(Ldcw;Ljd;Ldtc;)V	b	access$000
	m	(Ldsm;)V	b	lambda$loadAdditional$1
		p	1		config
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Ldso;	c	getSharedData
	m	()Ldsl;	d	getClientData
	m	()Ldsm;	f	getConfig
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldsn;	b	serverData
	f	Ldso;	c	sharedData
	f	Ldsl;	d	clientData
	f	Ldsm;	e	config
c	dsk$a	net/minecraft/world/level/block/entity/vault/VaultBlockEntity$a
	m	(Ldcw;Lexc;Lcmx;)V	a	emitConnectionParticlesForPlayer
		p	0		world
		p	1		pos
		p	2		player
	m	(Ldcw;Ljd;Ldso;)V	a	playIdleSounds
		p	0		world
		p	1		pos
		p	2		sharedData
	m	(Ldcw;Ljd;Ldso;Llk;)V	a	emitIdleParticles
		p	0		world
		p	1		pos
		p	2		sharedData
		p	3		particle
	m	(Ldcw;Ljd;Ldtc;Ldsl;Ldso;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		clientData
		p	4		sharedData
	m	(Ldcw;Ljd;Ldtc;Ldso;)V	a	emitConnectionParticlesForNearbyPlayers
		p	0		world
		p	1		pos
		p	2		state
		p	3		sharedData
	m	(Ldcw;Ljd;Ldtc;Ldso;Llk;)V	a	emitActivationParticles
		p	0		world
		p	1		pos
		p	2		state
		p	3		sharedData
		p	4		particle
	m	(Ldcw;Ljd;Llk;)V	a	emitDeactivationParticles
		p	0		world
		p	1		pos
		p	2		particle
	m	(Ldso;)Z	a	shouldDisplayActiveEffects
		p	0		sharedData
	m	(Ljd;Layw;)Lexc;	a	randomPosCenterOfCage
		p	0		pos
		p	1		random
	m	(Ljd;Ldso;Lcmx;)Z	a	isWithinConnectionRange
		p	0		pos
		p	1		sharedData
		p	2		player
	m	(Ljd;Lji;)Lexc;	a	keyholePos
		p	0		pos
		p	1		direction
	m	(Ljd;Layw;)Lexc;	b	randomPosInsideCage
		p	0		pos
		p	1		random
	f	I	a	PARTICLE_TICK_RATE
	f	F	b	IDLE_PARTICLE_CHANCE
	f	F	c	AMBIENT_SOUND_CHANCE
	f	I	d	ACTIVATION_PARTICLE_COUNT
	f	I	e	DEACTIVATION_PARTICLE_COUNT
c	dsk$b	net/minecraft/world/level/block/entity/vault/VaultBlockEntity$b
	m	(JLdsp;)Z	a	shouldCycleDisplayItem
		p	0		time
		p	2		state
	m	(Laqu;Ldsm;Ljd;Lcmx;)Ljava/util/List;	a	resolveItemsToEject
		p	0		world
		p	1		config
		p	2		pos
		p	3		player
	m	(Laqu;Ldsn;Ljd;Lavo;)V	a	playInsertFailSound
		p	0		world
		p	1		serverData
		p	2		pos
		p	3		sound
	m	(Laqu;Ldsp;Ldsm;Ldso;Ljd;)V	a	cycleDisplayItemFromLootTable
		p	0		world
		p	1		state
		p	2		config
		p	3		sharedData
		p	4		pos
	m	(Laqu;Ldtc;Ljd;Ldsm;Ldsn;Ldso;Ljava/util/List;)V	a	unlock
		p	0		world
		p	1		state
		p	2		pos
		p	3		config
		p	4		serverData
		p	5		sharedData
		p	6		itemsToEject
	m	(Laqu;Ljd;Lakq;)Lcuq;	a	getRandomDisplayItemFromLootTable
		p	0		world
		p	1		pos
		p	2		lootTable
	m	(Laqu;Ljd;Ldtc;Ldsm;Ldsn;Ldso;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		serverData
		p	5		sharedData
	m	(Laqu;Ljd;Ldtc;Ldsm;Ldsn;Ldso;Lcmx;Lcuq;)V	a	tryInsertKey
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		serverData
		p	5		sharedData
		p	6		player
		p	7		stack
	m	(Laqu;Ljd;Ldtc;Ldtc;Ldsm;Ldso;)V	a	setVaultState
		p	0		world
		p	1		pos
		p	2		oldState
		p	3		newState
		p	4		config
		p	5		sharedData
	m	(Ldsm;Lcuq;)Z	a	isValidToInsert
		p	0		config
		p	1		stack
	m	(Ldsm;Ldsp;)Z	a	canEjectReward
		p	0		config
		p	1		state
	f	I	a	UNLOCKING_DELAY_TICKS
	f	I	b	DISPLAY_CYCLE_TICK_RATE
	f	I	c	INSERT_FAIL_SOUND_BUFFER_TICKS
c	dsl	net/minecraft/world/level/block/entity/vault/VaultClientData
	m	()F	a	currentSpin
	m	()F	b	previousSpin
	m	()V	c	updateDisplayItemSpin
	f	F	a	ROTATION_SPEED
	f	F	b	currentSpin
	f	F	c	previousSpin
c	dsm	net/minecraft/world/level/block/entity/vault/VaultConfig
	m	(Lakq;DDLcuq;Ljava/util/Optional;)V	<init>	<init>
		p	1		lootTable
		p	2		activationRange
		p	4		deactivationRange
		p	6		keyItem
		p	7		overrideLootTableToDisplay
	m	()Ldse;	a	playerDetector
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lakq;	b	lootTable
	m	()D	c	activationRange
	m	()D	d	deactivationRange
	m	()Lcuq;	e	keyItem
	m	()Ljava/util/Optional;	f	overrideLootTableToDisplay
	m	()Ldse$a;	g	entitySelector
	m	()Lcom/mojang/serialization/DataResult;	h	validate
	m	()Ljava/lang/String;	i	lambda$validate$1
	f	Ljava/lang/String;	a	TAG_NAME
	f	Ldsm;	b	DEFAULT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lakq;	d	lootTable
	f	D	e	activationRange
	f	D	f	deactivationRange
	f	Lcuq;	g	keyItem
	f	Ljava/util/Optional;	h	overrideLootTableToDisplay
	f	Ldse;	i	playerDetector
	f	Ldse$a;	j	entitySelector
c	dsn	net/minecraft/world/level/block/entity/vault/VaultServerData
	m	(Ljava/util/Set;JLjava/util/List;I)V	<init>	<init>
		p	1		rewardedPlayers
		p	2		stateUpdatingResumesAt
		p	4		itemsToEject
		p	5		totalEjectionsNeeded
	m	()J	a	getLastInsertFailTimestamp
	m	(J)V	a	setLastInsertFailTimestamp
		p	1		lastFailedUnlockTime
	m	(Lcmx;)Z	a	hasRewardedPlayer
		p	1		player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldsn;)V	a	set
		p	1		data
	m	(Ljava/util/List;)V	a	setItemsToEject
		p	1		itemsToEject
	m	()Ljava/util/Set;	b	getRewardedPlayers
	m	(J)V	b	pauseStateUpdatingUntil
		p	1		stateUpdatingResumesAt
	m	(Lcmx;)V	b	addToRewardedPlayers
		p	1		player
	m	(Ldsn;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		data
	m	()J	c	stateUpdatingResumesAt
	m	(Ldsn;)Ljava/util/List;	c	lambda$static$2
		p	0		data
	m	()Ljava/util/List;	d	getItemsToEject
	m	(Ldsn;)Ljava/lang/Long;	d	lambda$static$1
		p	0		data
	m	()V	e	markEjectionFinished
	m	(Ldsn;)Ljava/util/Set;	e	lambda$static$0
		p	0		data
	m	()Lcuq;	f	getNextItemToEject
	m	()Lcuq;	g	popNextItemToEject
	m	()F	h	ejectionProgress
	m	()V	i	markChanged
	f	Ljava/lang/String;	a	TAG_NAME
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	isDirty
	f	I	d	MAX_REWARD_PLAYERS
	f	Ljava/util/Set;	e	rewardedPlayers
	f	J	f	stateUpdatingResumesAt
	f	Ljava/util/List;	g	itemsToEject
	f	J	h	lastInsertFailTimestamp
	f	I	i	totalEjectionsNeeded
c	dso	net/minecraft/world/level/block/entity/vault/VaultSharedData
	m	(Lcuq;Ljava/util/Set;D)V	<init>	<init>
		p	1		displayItem
		p	2		connectedPlayers
		p	3		connectedParticlesRange
	m	()Lcuq;	a	getDisplayItem
	m	(Laqu;Ljd;Ldsn;Ldsm;D)V	a	updateConnectedPlayersWithinRange
		p	1		world
		p	2		pos
		p	3		serverData
		p	4		config
		p	5		radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lcuq;)V	a	setDisplayItem
		p	1		stack
	m	(Ldsn;Ljava/util/UUID;)Z	a	lambda$updateConnectedPlayersWithinRange$4
		p	1		uuid
	m	(Ldso;)V	a	set
		p	1		data
	m	()Z	b	hasDisplayItem
	m	(Ldso;)Ljava/lang/Double;	b	lambda$static$2
		p	0		data
	m	()Z	c	hasConnectedPlayers
	m	(Ldso;)Ljava/util/Set;	c	lambda$static$1
		p	0		data
	m	()Ljava/util/Set;	d	getConnectedPlayers
	m	(Ldso;)Lcuq;	d	lambda$static$0
		p	0		data
	m	()D	e	connectedParticlesRange
	m	()V	f	markDirty
	f	Ljava/lang/String;	a	TAG_NAME
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	isDirty
	f	Lcuq;	d	displayItem
	f	Ljava/util/Set;	e	connectedPlayers
	f	D	f	connectedParticlesRange
c	dsp	net/minecraft/world/level/block/entity/vault/VaultState
	m	(Ljava/lang/String;ILjava/lang/String;Ldsp$a;)V	<init>	<init>
		p	3		id
		p	4		light
	m	()I	a	lightLevel
	m	(Laqu;Ljd;Lcuq;F)V	a	ejectResultItem
		p	1		world
		p	2		pos
		p	3		stack
		p	4		pitchModifier
	m	(Laqu;Ljd;Ldsm;Ldsn;Ldso;)Ldsp;	a	tickAndGetNext
		p	1		world
		p	2		pos
		p	3		config
		p	4		serverData
		p	5		sharedData
	m	(Laqu;Ljd;Ldsm;Ldsn;Ldso;D)Ldsp;	a	updateStateForConnectedPlayers
		p	0		world
		p	1		pos
		p	2		config
		p	3		serverData
		p	4		sharedData
		p	5		radius
	m	(Laqu;Ljd;Ldsm;Ldso;)V	a	onExit
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
	m	(Laqu;Ljd;Ldsm;Ldso;Z)V	a	onEnter
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
		p	5		ominous
	m	(Laqu;Ljd;Ldsp;Ldsm;Ldso;Z)V	a	onTransition
		p	1		world
		p	2		pos
		p	3		newState
		p	4		config
		p	5		sharedData
		p	6		ominous
	m	()[Ldsp;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldsp;	a	INACTIVE
	f	Ldsp;	b	ACTIVE
	f	Ldsp;	c	UNLOCKING
	f	Ldsp;	d	EJECTING
	f	I	e	UPDATE_CONNECTED_PLAYERS_TICK_RATE
	f	I	f	DELAY_BETWEEN_EJECTIONS_TICKS
	f	I	g	DELAY_AFTER_LAST_EJECTION_TICKS
	f	I	h	DELAY_BEFORE_FIRST_EJECTION_TICKS
	f	Ljava/lang/String;	i	stateName
	f	Ldsp$a;	j	lightLevel
	f	[Ldsp;	k	$VALUES
c	dsp$1	net/minecraft/world/level/block/entity/vault/VaultState$1
	m	(Ljava/lang/String;ILjava/lang/String;Ldsp$a;)V	<init>	<init>
		p	3		id
		p	4		light
	m	(Laqu;Ljd;Ldsm;Ldso;Z)V	a	onEnter
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
		p	5		ominous
c	dsp$2	net/minecraft/world/level/block/entity/vault/VaultState$2
	m	(Ljava/lang/String;ILjava/lang/String;Ldsp$a;)V	<init>	<init>
		p	3		id
		p	4		light
	m	(Laqu;Ljd;Ldsm;Ldso;Z)V	a	onEnter
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
		p	5		ominous
c	dsp$3	net/minecraft/world/level/block/entity/vault/VaultState$3
	m	(Ljava/lang/String;ILjava/lang/String;Ldsp$a;)V	<init>	<init>
		p	3		id
		p	4		light
	m	(Laqu;Ljd;Ldsm;Ldso;Z)V	a	onEnter
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
		p	5		ominous
c	dsp$4	net/minecraft/world/level/block/entity/vault/VaultState$4
	m	(Ljava/lang/String;ILjava/lang/String;Ldsp$a;)V	<init>	<init>
		p	3		id
		p	4		light
	m	(Laqu;Ljd;Ldsm;Ldso;)V	a	onExit
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
	m	(Laqu;Ljd;Ldsm;Ldso;Z)V	a	onEnter
		p	1		world
		p	2		pos
		p	3		config
		p	4		sharedData
		p	5		ominous
c	dsp$a	net/minecraft/world/level/block/entity/vault/VaultState$a
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		luminance
	m	()[Ldsp$a;	a	$values
	f	Ldsp$a;	a	HALF_LIT
	f	Ldsp$a;	b	LIT
	f	I	c	value
	f	[Ldsp$a;	d	$VALUES
c	dsr	net/minecraft/world/level/block/grower/WorldGenTreeProvider
	m	(Ljava/lang/String;FLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		id
		p	2		rareChance
		p	3		megaVariant
		p	4		rareMegaVariant
		p	5		regularVariant
		p	6		rareRegularVariant
		p	7		beesVariant
		p	8		rareBeesVariant
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		id
		p	2		megaVariant
		p	3		regularVariant
		p	4		beesVariant
	m	(Laqu;Lduz;Ljd;Ldtc;Layw;)Z	a	growTree
		p	1		world
		p	2		chunkGenerator
		p	3		pos
		p	4		state
		p	5		random
	m	(Layw;)Lakq;	a	getConfiguredMegaFeature
		p	1		random
	m	(Layw;Z)Lakq;	a	getConfiguredFeature
		p	1		random
		p	2		flowersNearby
	m	(Ldcx;Ljd;)Z	a	hasFlowers
		p	1		world
		p	2		pos
	m	(Ldsr;)Ljava/lang/String;	a	lambda$static$0
		p	0		generator
	m	(Ldtc;Ldcc;Ljd;II)Z	a	isTwoByTwoSapling
		p	0		state
		p	1		world
		p	2		pos
		p	3		x
		p	4		z
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldsr;	b	OAK
	f	Ldsr;	c	SPRUCE
	f	Ldsr;	d	MANGROVE
	f	Ldsr;	e	AZALEA
	f	Ldsr;	f	BIRCH
	f	Ldsr;	g	JUNGLE
	f	Ldsr;	h	ACACIA
	f	Ldsr;	i	CHERRY
	f	Ldsr;	j	DARK_OAK
	f	Ljava/util/Map;	k	GROWERS
	f	Ljava/lang/String;	l	name
	f	F	m	secondaryChance
	f	Ljava/util/Optional;	n	megaTree
	f	Ljava/util/Optional;	o	secondaryMegaTree
	f	Ljava/util/Optional;	p	tree
	f	Ljava/util/Optional;	q	secondaryTree
	f	Ljava/util/Optional;	r	flowers
	f	Ljava/util/Optional;	s	secondaryFlowers
c	dsu	net/minecraft/world/level/block/piston/BlockPistonMoving
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcc;Ljd;)Ldsy;	a	getBlockEntity
		p	1		world
		p	2		pos
	m	(Ldcw;Ldtc;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		state
		p	3		type
	m	(Ldcx;Ljd;Ldtc;)V	a	destroy
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ljd;Ldtc;)Ldqh;	a	newBlockEntity
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;Ldtc;Lji;ZZ)Ldqh;	a	newMovingBlockEntity
		p	0		pos
		p	1		state
		p	2		pushedBlock
		p	3		facing
		p	4		extending
		p	5		source
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtw;	b	FACING
	f	Ldua;	c	TYPE
c	dsv	net/minecraft/world/level/block/piston/BlockPiston
	m	(ZLdtb$d;)V	<init>	<init>
		p	1		sticky
		p	2		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcyd;)Ldtc;	a	getStateForPlacement
		p	1		ctx
	m	(Ldcw;Ljd;Ldtc;)V	a	checkIfExtend
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Ldtc;Lbtn;Lcuq;)V	a	setPlacedBy
		p	1		world
		p	2		pos
		p	3		state
		p	4		placer
		p	5		itemStack
	m	(Ldcw;Ljd;Lji;Z)Z	a	moveBlocks
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retract
	m	(Lddm;Ljd;Lji;)Z	a	getNeighborSignal
		p	1		world
		p	2		pos
		p	3		pistonFace
	m	(Ldsv;)Ljava/lang/Boolean;	a	lambda$static$0
		p	0		block
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Lji;ZLji;)Z	a	isPushable
		p	0		state
		p	1		world
		p	2		pos
		p	3		direction
		p	4		canBreak
		p	5		pistonDir
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtt;	c	EXTENDED
	f	I	d	TRIGGER_EXTEND
	f	I	e	TRIGGER_CONTRACT
	f	I	f	TRIGGER_DROP
	f	F	g	PLATFORM_THICKNESS
	f	Lexv;	h	EAST_AABB
	f	Lexv;	i	WEST_AABB
	f	Lexv;	j	SOUTH_AABB
	f	Lexv;	k	NORTH_AABB
	f	Lexv;	l	UP_AABB
	f	Lexv;	m	DOWN_AABB
	f	Z	n	isSticky
c	dsv$1	net/minecraft/world/level/block/piston/BlockPiston$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	f	[I	b	$SwitchMap$net$minecraft$world$level$material$PushReaction
c	dsw	net/minecraft/world/level/block/piston/BlockPistonExtension
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldcw;Ljd;Ldtc;Lcmx;)Ldtc;	a	playerWillDestroy
		p	1		world
		p	2		pos
		p	3		state
		p	4		player
	m	(Ldcz;Ljd;Ldtc;)Lcuq;	a	getCloneItemStack
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Ldtc;)Z	a	isFittingBase
		p	1		headState
		p	2		pistonState
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ldtd$a;)V	a	createBlockStateDefinition
		p	1		builder
	m	(Lji;Z)Lexv;	a	calculateShape
		p	0		direction
		p	1		shortHead
	m	(Z)[Lexv;	a	makeShapes
		p	0		shortHead
	m	(ZLji;)Lexv;	a	lambda$makeShapes$0
		p	1		direction
	m	(I)[Lexv;	b	lambda$makeShapes$1
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	f	Lexv;	F	DOWN_ARM_AABB
	f	Lexv;	G	SOUTH_ARM_AABB
	f	Lexv;	H	NORTH_ARM_AABB
	f	Lexv;	I	EAST_ARM_AABB
	f	Lexv;	J	WEST_ARM_AABB
	f	Lexv;	K	SHORT_UP_ARM_AABB
	f	Lexv;	L	SHORT_DOWN_ARM_AABB
	f	Lexv;	M	SHORT_SOUTH_ARM_AABB
	f	Lexv;	N	SHORT_NORTH_ARM_AABB
	f	Lexv;	O	SHORT_EAST_ARM_AABB
	f	Lexv;	P	SHORT_WEST_ARM_AABB
	f	[Lexv;	Q	SHAPES_SHORT
	f	[Lexv;	R	SHAPES_LONG
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldua;	c	TYPE
	f	Ldtt;	d	SHORT
	f	F	e	PLATFORM
	f	Lexv;	f	EAST_AABB
	f	Lexv;	g	WEST_AABB
	f	Lexv;	h	SOUTH_AABB
	f	Lexv;	i	NORTH_AABB
	f	Lexv;	j	UP_AABB
	f	Lexv;	k	DOWN_AABB
	f	F	l	AABB_OFFSET
	f	F	m	EDGE_MIN
	f	F	n	EDGE_MAX
	f	Lexv;	o	UP_ARM_AABB
c	dsw$1	net/minecraft/world/level/block/piston/BlockPistonExtension$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dsx	net/minecraft/world/level/block/piston/PistonUtil
	m	(Lewx;Lji;D)Lewx;	a	getMovementArea
		p	0		box
		p	1		direction
		p	2		length
c	dsx$1	net/minecraft/world/level/block/piston/PistonUtil$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	dsy	net/minecraft/world/level/block/piston/TileEntityPiston
	m	(Ljd;Ldtc;)V	<init>	<init>
		p	1		pos
		p	2		state
	m	(Ljd;Ldtc;Ldtc;Lji;ZZ)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		pushedBlock
		p	4		facing
		p	5		extending
		p	6		source
	m	(F)F	a	getProgress
		p	1		tickDelta
	m	(Ldcc;Ljd;)Lexv;	a	getCollisionShape
		p	1		world
		p	2		pos
	m	(Ldcw;)V	a	setLevel
		p	1		world
	m	(Ldcw;Ljd;FLdsy;)V	a	moveCollidedEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Ldcw;Ljd;Ldtc;Ldsy;)V	a	tick
		p	0		world
		p	1		pos
		p	2		state
		p	3		blockEntity
	m	(Lewx;Lbsr;Ljd;)Z	a	matchesStickyCritera
		p	0		box
		p	1		entity
		p	2		pos
	m	(Lewx;Ljd;Lbsr;)Z	a	lambda$moveStuckEntities$1
		p	2		entity
	m	(Lewx;Lji;Lewx;)D	a	getMovement
	m	(Ljd;Lbsr;Lji;D)V	a	fixEntityWithinPistonBase
		p	0		pos
		p	1		entity
		p	2		direction
		p	3		amount
	m	(Ljd;Lewx;Ldsy;)Lewx;	a	moveByPositionAndProgress
		p	0		pos
		p	1		box
		p	2		blockEntity
	m	(Lji;Lbsr;DLji;)V	a	moveEntityByPiston
		p	0		direction
		p	1		entity
		p	2		distance
		p	4		movementDirection
	m	(Ljo$a;)Lub;	a	getUpdateTag
		p	1		registryLookup
	m	(Lub;Ljo$a;)V	a	loadAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Z	b	isExtending
	m	(F)F	b	getXOff
		p	1		tickDelta
	m	(Ldcw;Ljd;FLdsy;)V	b	moveStuckEntities
		p	0		world
		p	1		pos
		p	3		blockEntity
	m	(Lub;Ljo$a;)V	b	saveAdditional
		p	1		nbt
		p	2		registryLookup
	m	()Lji;	c	getDirection
	m	(F)F	c	getYOff
		p	1		tickDelta
	m	()Z	d	isSourcePiston
	m	(F)F	d	getZOff
		p	1		tickDelta
	m	(F)F	e	getExtendedProgress
		p	1		progress
	m	()Lji;	f	getMovementDirection
	m	()Ldtc;	j	getMovedState
	m	()V	k	finalTick
	m	()J	l	getLastTicked
	m	()Ldtc;	u	getCollisionRelatedBlockState
	m	()Z	v	isStickyForEntities
	m	()Lji;	w	lambda$static$0
	f	D	a	TICK_MOVEMENT
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	Ldtc;	d	movedState
	f	Lji;	e	direction
	f	Z	f	extending
	f	Z	g	isSourcePiston
	f	Ljava/lang/ThreadLocal;	h	NOCLIP
	f	F	i	progress
	f	F	j	progressO
	f	J	k	lastTicked
	f	I	l	deathTicks
c	dsy$1	net/minecraft/world/level/block/piston/TileEntityPiston$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
c	dsz	net/minecraft/world/level/block/piston/PistonExtendsChecker
	m	(Ldcw;Ljd;Lji;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		dir
		p	4		retracted
	m	()Z	a	resolve
	m	(II)V	a	reorderListAtCollision
		p	1		from
		p	2		to
	m	(Ldtc;)Z	a	isSticky
		p	0		state
	m	(Ldtc;Ldtc;)Z	a	canStickToEachOther
		p	0		state
		p	1		adjacentState
	m	(Ljd;)Z	a	addBranchingBlocks
		p	1		pos
	m	(Ljd;Lji;)Z	a	addBlockLine
		p	1		pos
		p	2		dir
	m	()Lji;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
	f	I	a	MAX_PUSH_DEPTH
	f	Ldcw;	b	level
	f	Ljd;	c	pistonPos
	f	Z	d	extending
	f	Ljd;	e	startPos
	f	Lji;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Lji;	i	pistonDirection
c	dtb	net/minecraft/world/level/block/state/BlockBase
	m	(Ldtb$d;)V	<init>	<init>
		p	1		settings
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcuq;Ldtc;Ldcw;Ljd;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		state
		p	3		world
		p	4		pos
		p	5		player
		p	6		hand
		p	7		hit
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldtc;Laqu;Ljd;Layw;)V	a	tick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		state
		p	2		world
		p	3		pos
		p	4		tool
		p	5		dropExperience
	m	(Ldtc;Lcmx;Ldcc;Ljd;)F	a	getDestroyProgress
		p	1		state
		p	2		player
		p	3		world
		p	4		pos
	m	(Ldtc;Lcyd;)Z	a	canBeReplaced
		p	1		state
		p	2		context
	m	(Ldtc;Ldcc;Ljd;)Lexv;	a	getInteractionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	a	getSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
		p	5		data
	m	(Ldtc;Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		state
		p	2		world
		p	3		pos
		p	4		entity
	m	(Ldtc;Ldcw;Ljd;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
		p	5		hit
	m	(Ldtc;Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		state
		p	2		world
		p	3		pos
		p	4		explosion
		p	5		stackMerger
	m	(Ldtc;Ldcw;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		world
		p	3		pos
		p	4		sourceBlock
		p	5		sourcePos
		p	6		notify
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	a	onRemove
		p	1		state
		p	2		world
		p	3		pos
		p	4		newState
		p	5		moved
	m	(Ldtc;Ldcx;Ljd;II)V	a	updateIndirectNeighbourShapes
		p	1		state
		p	2		world
		p	3		pos
		p	4		flags
		p	5		maxUpdateDepth
	m	(Ldtc;Ldcz;Ljd;)Z	a	canSurvive
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldkv;)Ldtc;	a	mirror
		p	1		state
		p	2		mirror
	m	(Ldtc;Ldmm;)Ldtc;	a	rotate
		p	1		state
		p	2		rotation
	m	(Ldtc;Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		stateFrom
		p	3		direction
	m	(Ldtc;Lepd;)Z	a	canBeReplaced
		p	1		state
		p	2		fluid
	m	(Ldtc;Lept;)Z	a	isPathfindable
		p	1		state
		p	2		type
	m	(Ldtc;Leru$a;)Ljava/util/List;	a	getDrops
		p	1		state
		p	2		builder
	m	(Ldtc;Ljd;)J	a	getSeed
		p	1		state
		p	2		pos
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		state
		p	2		direction
		p	3		neighborState
		p	4		world
		p	5		pos
		p	6		neighborPos
	m	(Ljava/util/function/BiConsumer;Ljd;Lcuq;)V	a	lambda$onExplosionHit$1
		p	2		stack
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$0
		p	1		instance
	m	(Ldtc;)Ldmf;	a_	getRenderShape
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	a_	propagatesSkylightDown
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Lcmx;)V	a_	attack
		p	1		state
		p	2		world
		p	3		pos
		p	4		player
	m	()F	av_	getMaxHorizontalOffset
	m	()F	ax_	getMaxVerticalOffset
	m	(Ldtc;Laqu;Ljd;Layw;)V	b	randomTick
		p	1		state
		p	2		world
		p	3		pos
		p	4		random
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;Ldcc;Ljd;Lji;)I	b	getDirectSignal
		p	1		state
		p	2		world
		p	3		pos
		p	4		direction
	m	(Ldtc;Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcw;Ljd;Ldtc;Z)V	b	onPlace
		p	1		state
		p	2		world
		p	3		pos
		p	4		oldState
		p	5		notify
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	b	simpleCodec
		p	0		blockFromSettings
	m	(Ldtc;)Lepe;	b_	getFluidState
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	b_	getBlockSupportShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;)Z	c	isCollisionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		state
		p	2		world
		p	3		pos
		p	4		context
	m	(Ldtc;)Z	c_	hasAnalogOutputSignal
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)F	d	getShadeBrightness
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	d_	isRandomlyTicking
		p	1		state
	m	(Ldtc;)Z	e_	isSignalSource
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Lexv;	f	getOcclusionShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Z	f_	useShapeForLightOcclusion
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)I	g	getLightBlock
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldtc;)Ldnm;	g_	getSoundType
		p	1		state
	m	(Ldtc;Ldcc;Ljd;)Z	h	isOcclusionShapeFullBlock
		p	1		state
		p	2		world
		p	3		pos
	m	()Lcpl;	i	requiredFeatures
	m	()Ldfy;	q	asBlock
	m	()Lcul;	r	asItem
	m	()Ldtb$d;	t	properties
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	u	propertiesCodec
	m	()Lakq;	v	getLootTable
	m	()Lepi;	w	defaultMapColor
	m	()F	x	defaultDestroyTime
	f	[Lji;	aF	UPDATE_SHAPE_ORDER
	f	Z	aG	hasCollision
	f	F	aH	explosionResistance
	f	Z	aI	isRandomlyTicking
	f	Ldnm;	aJ	soundType
	f	F	aK	friction
	f	F	aL	speedFactor
	f	F	aM	jumpFactor
	f	Z	aN	dynamicShape
	f	Lcpl;	aO	requiredFeatures
	f	Ldtb$d;	aP	properties
	f	Lakq;	aQ	drops
c	dtb$1	net/minecraft/world/level/block/state/BlockBase$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
c	dtb$a	net/minecraft/world/level/block/state/BlockBase$BlockData
	m	(Ldfy;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Ldud;	A	instrument
	m	()Z	D	calculateSolid
	m	()V	a	initCache
	m	(Lakq;)Z	a	is
		p	1		key
	m	(Laqu;Ljd;Layw;)V	a	tick
		p	1		world
		p	2		pos
		p	3		random
	m	(Laqu;Ljd;Lcuq;Z)V	a	spawnAfterBreak
		p	1		world
		p	2		pos
		p	3		tool
		p	4		dropExperience
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Lawu;Ljava/util/function/Predicate;)Z	a	is
		p	1		tag
		p	2		predicate
	m	(Lcmx;Ldcc;Ljd;)F	a	getDestroyProgress
		p	1		player
		p	2		world
		p	3		pos
	m	(Lcuq;Ldcw;Lcmx;Lbqq;Lewy;)Lbqt;	a	useItemOn
		p	1		stack
		p	2		world
		p	3		player
		p	4		hand
		p	5		hit
	m	(Lcyd;)Z	a	canBeReplaced
		p	1		context
	m	(Ldcc;Ljd;)Z	a	propagatesSkylightDown
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lbsr;)Z	a	entityCanStandOn
		p	1		world
		p	2		pos
		p	3		entity
	m	(Ldcc;Ljd;Lbsr;Lji;)Z	a	entityCanStandOnFace
		p	1		world
		p	2		pos
		p	3		entity
		p	4		direction
	m	(Ldcc;Ljd;Lbsx;)Z	a	isValidSpawn
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldcc;Ljd;Lexh;)Lexv;	a	getShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldcc;Ljd;Lji;)Lexv;	a	getFaceOcclusionShape
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldcc;Ljd;Lji;Ldoa;)Z	a	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
		p	4		shapeType
	m	(Ldcw;Lcmx;Lewy;)Lbqr;	a	useWithoutItem
		p	1		world
		p	2		player
		p	3		hit
	m	(Ldcw;Ldqj;)Ldqi;	a	getTicker
		p	1		world
		p	2		blockEntityType
	m	(Ldcw;Ldtc;Lewy;Lcnp;)V	a	onProjectileHit
		p	1		world
		p	2		state
		p	3		hit
		p	4		projectile
	m	(Ldcw;Ljd;)I	a	getAnalogOutputSignal
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;II)Z	a	triggerEvent
		p	1		world
		p	2		pos
		p	3		type
		p	4		data
	m	(Ldcw;Ljd;Lbsr;)V	a	entityInside
		p	1		world
		p	2		pos
		p	3		entity
	m	(Ldcw;Ljd;Lcmx;)V	a	attack
		p	1		world
		p	2		pos
		p	3		player
	m	(Ldcw;Ljd;Ldco;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
		p	1		world
		p	2		pos
		p	3		explosion
		p	4		stackMerger
	m	(Ldcw;Ljd;Ldfy;Ljd;Z)V	a	handleNeighborChanged
		p	1		world
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldcw;Ljd;Ldtc;Z)V	a	onPlace
		p	1		world
		p	2		pos
		p	3		state
		p	4		notify
	m	(Ldcx;Ljd;I)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Ldcx;Ljd;II)V	a	updateNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	(Ldcz;Ljd;)Z	a	canSurvive
		p	1		world
		p	2		pos
	m	(Ldfy;)Z	a	is
		p	1		block
	m	(Ldkv;)Ldtc;	a	mirror
		p	1		mirror
	m	(Ldmm;)Ldtc;	a	rotate
		p	1		rotation
	m	(Ldtc;Lji;)Z	a	skipRendering
		p	1		state
		p	2		direction
	m	(Lepd;)Z	a	canBeReplaced
		p	1		fluid
	m	(Lept;)Z	a	isPathfindable
		p	1		type
	m	(Leru$a;)Ljava/util/List;	a	getDrops
		p	1		builder
	m	(Ljd;)J	a	getSeed
		p	1		pos
	m	(Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		direction
		p	2		neighborState
		p	3		world
		p	4		pos
		p	5		neighborPos
	m	(Ljm;)Z	a	is
		p	1		blockEntry
	m	(Ljq;)Z	a	is
		p	1		blocks
	m	()Ldfy;	b	getBlock
	m	(Laqu;Ljd;Layw;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldcc;Ljd;)I	b	getLightBlock
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lexh;)Lexv;	b	getCollisionShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldcc;Ljd;Lji;)I	b	getSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldcw;Ljd;)Lbqv;	b	getMenuProvider
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Ldtc;Z)V	b	onRemove
		p	1		world
		p	2		pos
		p	3		state
		p	4		moved
	m	(Ldcx;Ljd;I)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
	m	(Ldcx;Ljd;II)V	b	updateIndirectNeighbourShapes
		p	1		world
		p	2		pos
		p	3		flags
		p	4		maxUpdateDepth
	m	()Ljm;	c	getBlockHolder
	m	(Ldcc;Ljd;)Lexv;	c	getOcclusionShape
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lexh;)Lexv;	c	getVisualShape
		p	1		world
		p	2		pos
		p	3		context
	m	(Ldcc;Ljd;Lji;)I	c	getDirectSignal
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	d	blocksMotion
	m	(Ldcc;Ljd;)Lepi;	d	getMapColor
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lji;)Z	d	isFaceSturdy
		p	1		world
		p	2		pos
		p	3		direction
	m	()Z	e	isSolid
	m	(Ldcc;Ljd;)Z	e	emissiveRendering
		p	1		world
		p	2		pos
	m	()Z	f	hasLargeCollisionShape
	m	(Ldcc;Ljd;)F	f	getShadeBrightness
		p	1		world
		p	2		pos
	m	()Z	g	useShapeForLightOcclusion
	m	(Ldcc;Ljd;)Z	g	isRedstoneConductor
		p	1		world
		p	2		pos
	m	()I	h	getLightEmission
	m	(Ldcc;Ljd;)F	h	getDestroySpeed
		p	1		world
		p	2		pos
	m	()Z	i	isAir
	m	(Ldcc;Ljd;)Z	i	isSolidRender
		p	1		world
		p	2		pos
	m	()Z	j	ignitedByLava
	m	(Ldcc;Ljd;)Lexv;	j	getShape
		p	1		world
		p	2		pos
	m	()Z	k	liquid
	m	(Ldcc;Ljd;)Lexv;	k	getCollisionShape
		p	1		world
		p	2		pos
	m	()Ldmf;	l	getRenderShape
	m	(Ldcc;Ljd;)Lexv;	l	getBlockSupportShape
		p	1		world
		p	2		pos
	m	()Z	m	isSignalSource
	m	(Ldcc;Ljd;)Lexv;	m	getInteractionShape
		p	1		world
		p	2		pos
	m	()Z	n	hasAnalogOutputSignal
	m	(Ldcc;Ljd;)Lexc;	n	getOffset
		p	1		world
		p	2		pos
	m	()Lepj;	o	getPistonPushReaction
	m	(Ldcc;Ljd;)Z	o	isSuffocating
		p	1		world
		p	2		pos
	m	()Z	p	canOcclude
	m	(Ldcc;Ljd;)Z	p	isViewBlocking
		p	1		world
		p	2		pos
	m	()Z	q	hasOffsetFunction
	m	(Ldcc;Ljd;)Z	q	hasPostProcess
		p	1		world
		p	2		pos
	m	()Z	r	canBeReplaced
	m	(Ldcc;Ljd;)Z	r	isCollisionShapeFullBlock
		p	1		world
		p	2		pos
	m	()Ljava/util/stream/Stream;	s	getTags
	m	()Z	t	hasBlockEntity
	m	()Lepe;	u	getFluidState
	m	()Z	v	isRandomlyTicking
	m	()Ldnm;	w	getSoundType
	m	()Ldtc;	x	asState
	m	()Z	y	requiresCorrectToolForDrops
	m	()Z	z	shouldSpawnTerrainParticles
	f	Z	A	isRandomlyTicking
	f	Ldtb$a$a;	a	cache
	f	I	b	lightEmission
	f	Z	g	useShapeForLightOcclusion
	f	Z	h	isAir
	f	Z	i	ignitedByLava
	f	Z	j	liquid
	f	Z	k	legacySolid
	f	Lepj;	l	pushReaction
	f	Lepi;	m	mapColor
	f	F	n	destroySpeed
	f	Z	o	requiresCorrectToolForDrops
	f	Z	p	canOcclude
	f	Ldtb$f;	q	isRedstoneConductor
	f	Ldtb$f;	r	isSuffocating
	f	Ldtb$f;	s	isViewBlocking
	f	Ldtb$f;	t	hasPostProcess
	f	Ldtb$f;	u	emissiveRendering
	f	Ldtb$b;	v	offsetFunction
	f	Z	w	spawnTerrainParticles
	f	Ldud;	x	instrument
	f	Z	y	replaceable
	f	Lepe;	z	fluidState
c	dtb$a$a	net/minecraft/world/level/block/state/BlockBase$BlockData$Cache
	m	(Ldtc;)V	<init>	<init>
		p	1		state
	m	(Lji$a;)Z	a	lambda$new$0
		p	1		axis
	m	(Lji;Ldoa;)Z	a	isFaceSturdy
		p	1		direction
		p	2		shapeType
	m	(Lji;Ldoa;)I	b	getFaceSupportIndex
		p	0		direction
		p	1		shapeType
	f	Z	a	solidRender
	f	Lexv;	b	collisionShape
	f	Z	c	largeCollisionShape
	f	Z	d	isCollisionShapeFullBlock
	f	[Lji;	e	DIRECTIONS
	f	I	f	SUPPORT_TYPE_COUNT
	f	Z	g	propagatesSkylightDown
	f	I	h	lightBlock
	f	[Lexv;	i	occlusionShapes
	f	[Z	j	faceSturdy
c	dtb$b	net/minecraft/world/level/block/state/BlockBase$b
	m	(Ldtc;Ldcc;Ljd;)Lexc;	evaluate	evaluate
		p	1		state
		p	2		world
		p	3		pos
c	dtb$c	net/minecraft/world/level/block/state/BlockBase$EnumRandomOffset
	m	()[Ldtb$c;	a	$values
	f	Ldtb$c;	a	NONE
	f	Ldtb$c;	b	XZ
	f	Ldtb$c;	c	XYZ
	f	[Ldtb$c;	d	$VALUES
c	dtb$d	net/minecraft/world/level/block/state/BlockBase$Info
	m	()Ldtb$d;	a	of
	m	(F)Ldtb$d;	a	friction
		p	1		slipperiness
	m	(FF)Ldtb$d;	a	strength
		p	1		hardness
		p	2		resistance
	m	(Lcti;)Ldtb$d;	a	mapColor
		p	1		color
	m	(Lcti;Ldtc;)Lepi;	a	lambda$mapColor$8
		p	1		state
	m	(Ldfy;)Ldtb$d;	a	dropsLike
		p	1		source
	m	(Ldnm;)Ldtb$d;	a	sound
		p	1		soundGroup
	m	(Ldtb$c;)Ldtb$d;	a	offsetType
		p	1		offsetType
	m	(Ldtb$e;)Ldtb$d;	a	isValidSpawn
		p	1		predicate
	m	(Ldtb$f;)Ldtb$d;	a	isRedstoneConductor
		p	1		predicate
	m	(Ldtb;)Ldtb$d;	a	ofFullCopy
		p	0		block
	m	(Ldtc;)I	a	lambda$new$2
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Lexc;	a	lambda$offsetType$11
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ldcc;Ljd;Lbsx;)Z	a	lambda$new$3
		p	0		state
		p	1		world
		p	2		pos
		p	3		type
	m	(Ldud;)Ldtb$d;	a	instrument
		p	1		instrument
	m	(Lepi;)Ldtb$d;	a	mapColor
		p	1		color
	m	(Lepi;Ldtc;)Lepi;	a	lambda$mapColor$9
		p	1		state
	m	(Lepj;)Ldtb$d;	a	pushReaction
		p	1		pistonBehavior
	m	(Ljava/util/function/Function;)Ldtb$d;	a	mapColor
		p	1		mapColorProvider
	m	(Ljava/util/function/ToIntFunction;)Ldtb$d;	a	lightLevel
		p	1		luminance
	m	([Lcpj;)Ldtb$d;	a	requiredFeatures
		p	1		features
	m	()Ldtb$d;	b	noCollission
	m	(F)Ldtb$d;	b	speedFactor
		p	1		velocityMultiplier
	m	(Ldtb$f;)Ldtb$d;	b	isSuffocating
		p	1		predicate
	m	(Ldtb;)Ldtb$d;	b	ofLegacyCopy
		p	0		block
	m	(Ldtc;)Lepi;	b	lambda$new$1
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Lexc;	b	lambda$offsetType$10
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldtb$d;	c	noOcclusion
	m	(F)Ldtb$d;	c	jumpFactor
		p	1		jumpVelocityMultiplier
	m	(Ldtb$f;)Ldtb$d;	c	isViewBlocking
		p	1		predicate
	m	(Ldtc;Ldcc;Ljd;)Z	c	lambda$new$7
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldtb$d;	d	instabreak
	m	(F)Ldtb$d;	d	strength
		p	1		strength
	m	(Ldtb$f;)Ldtb$d;	d	hasPostProcess
		p	1		predicate
	m	(Ldtc;Ldcc;Ljd;)Z	d	lambda$new$6
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldtb$d;	e	randomTicks
	m	(F)Ldtb$d;	e	destroyTime
		p	1		hardness
	m	(Ldtb$f;)Ldtb$d;	e	emissiveRendering
		p	1		predicate
	m	(Ldtc;Ldcc;Ljd;)Z	e	lambda$new$5
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldtb$d;	f	dynamicShape
	m	(F)Ldtb$d;	f	explosionResistance
		p	1		resistance
	m	(Ldtc;Ldcc;Ljd;)Z	f	lambda$new$4
		p	0		state
		p	1		world
		p	2		pos
	m	()Ldtb$d;	g	noLootTable
	m	()Ldtb$d;	h	ignitedByLava
	m	()Ldtb$d;	i	liquid
	m	()Ldtb$d;	j	forceSolidOn
	m	()Ldtb$d;	k	forceSolidOff
	m	()Ldtb$d;	l	air
	m	()Ldtb$d;	m	requiresCorrectToolForDrops
	m	()Ldtb$d;	n	noTerrainParticles
	m	()Ldtb$d;	o	replaceable
	m	()Ldtb$d;	p	lambda$static$0
	f	Ldtb$f;	A	isViewBlocking
	f	Ldtb$f;	B	hasPostProcess
	f	Ldtb$f;	C	emissiveRendering
	f	Z	D	dynamicShape
	f	Lcpl;	E	requiredFeatures
	f	Ldtb$b;	F	offsetFunction
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Function;	b	mapColor
	f	Z	c	hasCollision
	f	Ldnm;	d	soundType
	f	Ljava/util/function/ToIntFunction;	e	lightEmission
	f	F	f	explosionResistance
	f	F	g	destroyTime
	f	Z	h	requiresCorrectToolForDrops
	f	Z	i	isRandomlyTicking
	f	F	j	friction
	f	F	k	speedFactor
	f	F	l	jumpFactor
	f	Lakq;	m	drops
	f	Z	n	canOcclude
	f	Z	o	isAir
	f	Z	p	ignitedByLava
	f	Z	q	liquid
	f	Z	r	forceSolidOff
	f	Z	s	forceSolidOn
	f	Lepj;	t	pushReaction
	f	Z	u	spawnTerrainParticles
	f	Ldud;	v	instrument
	f	Z	w	replaceable
	f	Ldtb$e;	x	isValidSpawn
	f	Ldtb$f;	y	isRedstoneConductor
	f	Ldtb$f;	z	isSuffocating
c	dtb$e	net/minecraft/world/level/block/state/BlockBase$e
	m	(Ldtc;Ldcc;Ljd;Ljava/lang/Object;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
		p	4		type
c	dtb$f	net/minecraft/world/level/block/state/BlockBase$f
	m	(Ldtc;Ldcc;Ljd;)Z	test	test
		p	1		state
		p	2		world
		p	3		pos
c	dtc	net/minecraft/world/level/block/state/IBlockData
	m	(Ldfy;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		block
		p	2		propertyMap
		p	3		codec
	m	()Ldtc;	x	asState
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dtd	net/minecraft/world/level/block/state/BlockStateList
	m	(Ljava/util/function/Function;Ljava/lang/Object;Ldtd$b;Ljava/util/Map;)V	<init>	<init>
		p	1		defaultStateGetter
		p	2		owner
		p	3		factory
		p	4		propertiesMap
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lduf;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
		p	0		mapCodec
		p	1		defaultStateGetter
		p	2		key
		p	3		property
	m	(Ldtd$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Lduf;Lcom/mojang/datafixers/util/Pair;)Ldte;	a	lambda$appendPropertyCodec$6
	m	(Lduf;Ldte;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Lduf;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Lduf;Ljava/util/function/Supplier;)Lduf$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)Lduf;	a	getProperty
		p	1		name
	m	(Ljava/util/List;Lduf;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Ldte;	a	lambda$new$0
	m	()Ldte;	b	any
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
c	dtd$a	net/minecraft/world/level/block/state/BlockStateList$a
	m	(Ljava/lang/Object;)V	<init>	<init>
		p	1		owner
	m	(Lduf;)V	a	validateProperty
		p	1		property
	m	(Ljava/util/function/Function;Ldtd$b;)Ldtd;	a	create
		p	1		defaultStateGetter
		p	2		factory
	m	([Lduf;)Ldtd$a;	a	add
		p	1		properties
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
c	dtd$b	net/minecraft/world/level/block/state/BlockStateList$b
	m	(Ljava/lang/Object;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
		p	1		owner
		p	2		propertyMap
		p	3		codec
c	dte	net/minecraft/world/level/block/state/IBlockDataHolder
	m	(Ljava/lang/Object;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		owner
		p	2		propertyMap
		p	3		codec
	m	()Ljava/util/Collection;	B	getProperties
	m	()Ljava/util/Map;	C	getValues
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		ownerToStateFunction
	m	(Ldte;)Ljava/lang/Object;	a	lambda$codec$0
		p	0		state
	m	(Ldte;Ljava/util/Optional;)Ldte;	a	lambda$codec$1
	m	(Lduf;)Ljava/lang/Object;	a	cycle
		p	1		property
	m	(Lduf;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValue
		p	1		property
		p	2		value
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
		p	0		values
		p	1		value
	m	(Ljava/util/Map;)V	a	populateNeighbours
		p	1		states
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec;	a	lambda$codec$2
		p	1		owner
	m	(Lduf;)Z	b	hasProperty
		p	1		property
	m	(Lduf;Ljava/lang/Comparable;)Ljava/lang/Object;	b	trySetValue
		p	1		property
		p	2		value
	m	(Lduf;)Ljava/lang/Comparable;	c	getValue
		p	1		property
	m	(Lduf;Ljava/lang/Comparable;)Ljava/util/Map;	c	makeNeighbourValues
		p	1		property
		p	2		value
	m	(Lduf;)Ljava/util/Optional;	d	getOptionalValue
		p	1		property
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;	b	values
	f	Ljava/lang/String;	c	NAME_TAG
	f	Ljava/lang/String;	d	PROPERTIES_TAG
	f	Ljava/lang/Object;	e	owner
	f	Lcom/mojang/serialization/MapCodec;	f	propertiesCodec
	f	Lcom/google/common/collect/Table;	g	neighbours
c	dte$1	net/minecraft/world/level/block/state/IBlockDataHolder$1
	m	(Lduf;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		property
		p	2		value
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
c	dtg	net/minecraft/world/level/block/state/pattern/ShapeDetectorBlock
	m	(Ldcz;Ljd;Z)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		forceLoad
	m	()Ldtc;	a	getState
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
		p	0		state
	m	(Ljava/util/function/Predicate;Ldtg;)Z	a	lambda$hasState$0
		p	1		pos
	m	()Ldqh;	b	getEntity
	m	()Ldcz;	c	getLevel
	m	()Ljd;	d	getPos
	f	Ldcz;	a	level
	f	Ljd;	b	pos
	f	Z	c	loadChunks
	f	Ldtc;	d	state
	f	Ldqh;	e	entity
	f	Z	f	cachedEntity
c	dth	net/minecraft/world/level/block/state/pattern/ShapeDetector
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		pattern
	m	()I	a	getDepth
	m	(Ldcz;Ljd;)Ldth$b;	a	find
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;Lji;Lji;)Ldth$b;	a	matches
		p	1		world
		p	2		frontTopLeft
		p	3		forwards
		p	4		up
	m	(Ldcz;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
		p	0		world
		p	1		forceLoad
	m	(Ljd;Lji;Lji;III)Ljd;	a	translateAndRotate
		p	0		pos
		p	1		forwards
		p	2		up
		p	3		offsetLeft
		p	4		offsetDown
		p	5		offsetForwards
	m	(Ljd;Lji;Lji;Lcom/google/common/cache/LoadingCache;)Ldth$b;	a	matches
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
c	dth$a	net/minecraft/world/level/block/state/pattern/ShapeDetector$BlockLoader
	m	(Ldcz;Z)V	<init>	<init>
		p	1		world
		p	2		forceLoad
	m	(Ljd;)Ldtg;	a	load
	f	Ldcz;	a	level
	f	Z	b	loadChunks
c	dth$b	net/minecraft/world/level/block/state/pattern/ShapeDetector$ShapeDetectorCollection
	m	(Ljd;Lji;Lji;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
		p	1		frontTopLeft
		p	2		forwards
		p	3		up
		p	4		cache
		p	5		width
		p	6		height
		p	7		depth
	m	()Ljd;	a	getFrontTopLeft
	m	(III)Ldtg;	a	getBlock
		p	1		offsetLeft
		p	2		offsetDown
		p	3		offsetForwards
	m	()Lji;	b	getForwards
	m	()Lji;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	f	Ljd;	a	frontTopLeft
	f	Lji;	b	forwards
	f	Lji;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
c	dti	net/minecraft/world/level/block/state/pattern/ShapeDetectorBuilder
	m	()Ldti;	a	start
	m	(CLjava/util/function/Predicate;)Ldti;	a	where
		p	1		key
		p	2		predicate
	m	(Ldtg;)Z	a	lambda$new$0
		p	0		pos
	m	([Ljava/lang/String;)Ldti;	a	aisle
		p	1		pattern
	m	()Ldth;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
c	dtk	net/minecraft/world/level/block/state/predicate/BlockPredicate
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	(Ldfy;)Ldtk;	a	forBlock
		p	0		block
	m	(Ldtc;)Z	a	test
	f	Ldfy;	a	block
c	dtl	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	m	(Ldtd;)V	<init>	<init>
		p	1		manager
	m	(Ldfy;)Ldtl;	a	forBlock
		p	0		block
	m	(Ldtc;)Z	a	test
	m	(Ldtc;Lduf;Ljava/util/function/Predicate;)Z	a	applies
		p	1		blockState
		p	2		property
		p	3		predicate
	m	(Lduf;Ljava/util/function/Predicate;)Ldtl;	a	where
		p	1		property
		p	2		predicate
	m	(Ldtc;)Z	b	lambda$static$0
		p	0		state
	f	Ljava/util/function/Predicate;	a	ANY
	f	Ldtd;	b	definition
	f	Ljava/util/Map;	c	properties
c	dtn	net/minecraft/world/level/block/state/properties/BlockPropertyAttachPosition
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldtn;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtn;	a	FLOOR
	f	Ldtn;	b	WALL
	f	Ldtn;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Ldtn;	e	$VALUES
c	dto	net/minecraft/world/level/block/state/properties/BlockPropertyBambooSize
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldto;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldto;	a	NONE
	f	Ldto;	b	SMALL
	f	Ldto;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Ldto;	e	$VALUES
c	dtp	net/minecraft/world/level/block/state/properties/BlockPropertyBedPart
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldtp;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtp;	a	HEAD
	f	Ldtp;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Ldtp;	d	$VALUES
c	dtq	net/minecraft/world/level/block/state/properties/BlockPropertyBellAttach
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldtq;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtq;	a	FLOOR
	f	Ldtq;	b	CEILING
	f	Ldtq;	c	SINGLE_WALL
	f	Ldtq;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Ldtq;	f	$VALUES
c	dtr	net/minecraft/world/level/block/state/properties/BlockSetType
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldtr;)Ldtr;	a	register
		p	0		blockSetType
	m	()Ljava/lang/String;	b	name
	m	()Z	c	canOpenByHand
	m	()Z	d	canOpenByWindCharge
	m	()Z	e	canButtonBeActivatedByArrows
	m	()Ldtr$a;	f	pressurePlateSensitivity
	m	()Ldnm;	g	soundType
	m	()Lavo;	h	doorClose
	m	()Lavo;	i	doorOpen
	m	()Lavo;	j	trapdoorClose
	m	()Lavo;	k	trapdoorOpen
	m	()Lavo;	l	pressurePlateClickOff
	m	()Lavo;	m	pressurePlateClickOn
	m	()Lavo;	n	buttonClickOff
	m	()Lavo;	o	buttonClickOn
	f	Lavo;	A	trapdoorOpen
	f	Lavo;	B	pressurePlateClickOff
	f	Lavo;	C	pressurePlateClickOn
	f	Lavo;	D	buttonClickOff
	f	Lavo;	E	buttonClickOn
	f	Ljava/util/Map;	F	TYPES
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtr;	b	IRON
	f	Ldtr;	c	COPPER
	f	Ldtr;	d	GOLD
	f	Ldtr;	e	STONE
	f	Ldtr;	f	POLISHED_BLACKSTONE
	f	Ldtr;	g	OAK
	f	Ldtr;	h	SPRUCE
	f	Ldtr;	i	BIRCH
	f	Ldtr;	j	ACACIA
	f	Ldtr;	k	CHERRY
	f	Ldtr;	l	JUNGLE
	f	Ldtr;	m	DARK_OAK
	f	Ldtr;	n	CRIMSON
	f	Ldtr;	o	WARPED
	f	Ldtr;	p	MANGROVE
	f	Ldtr;	q	BAMBOO
	f	Ljava/lang/String;	r	name
	f	Z	s	canOpenByHand
	f	Z	t	canOpenByWindCharge
	f	Z	u	canButtonBeActivatedByArrows
	f	Ldtr$a;	v	pressurePlateSensitivity
	f	Ldnm;	w	soundType
	f	Lavo;	x	doorClose
	f	Lavo;	y	doorOpen
	f	Lavo;	z	trapdoorClose
c	dtr$a	net/minecraft/world/level/block/state/properties/BlockSetType$a
	m	()[Ldtr$a;	a	$values
	f	Ldtr$a;	a	EVERYTHING
	f	Ldtr$a;	b	MOBS
	f	[Ldtr$a;	c	$VALUES
c	dts	net/minecraft/world/level/block/state/properties/BlockProperties
	m	(Ldug;)Z	a	lambda$static$1
		p	0		shape
	m	(Lji;)Z	a	lambda$static$0
		p	0		facing
	f	Ldtt;	A	TRIGGERED
	f	Ldtt;	B	UNSTABLE
	f	Ldtt;	C	WATERLOGGED
	f	Ldtt;	D	BERRIES
	f	Ldtt;	E	BLOOM
	f	Ldtt;	F	SHRIEKING
	f	Ldtt;	G	CAN_SUMMON
	f	Ldua;	H	HORIZONTAL_AXIS
	f	Ldua;	I	AXIS
	f	Ldtt;	J	UP
	f	Ldtt;	K	DOWN
	f	Ldtt;	L	NORTH
	f	Ldtt;	M	EAST
	f	Ldtt;	N	SOUTH
	f	Ldtt;	O	WEST
	f	Ldtw;	P	FACING
	f	Ldtw;	Q	FACING_HOPPER
	f	Ldtw;	R	HORIZONTAL_FACING
	f	Lduc;	S	FLOWER_AMOUNT
	f	Ldua;	T	ORIENTATION
	f	Ldua;	U	ATTACH_FACE
	f	Ldua;	V	BELL_ATTACHMENT
	f	Ldua;	W	EAST_WALL
	f	Ldua;	X	NORTH_WALL
	f	Ldua;	Y	SOUTH_WALL
	f	Ldua;	Z	WEST_WALL
	f	Lduc;	aA	DELAY
	f	I	aB	MAX_DISTANCE
	f	Lduc;	aC	DISTANCE
	f	Lduc;	aD	EGGS
	f	Lduc;	aE	HATCH
	f	Lduc;	aF	LAYERS
	f	I	aG	MIN_LEVEL
	f	I	aH	MIN_LEVEL_CAULDRON
	f	I	aI	MAX_LEVEL_3
	f	I	aJ	MAX_LEVEL_8
	f	Lduc;	aK	LEVEL_CAULDRON
	f	Lduc;	aL	LEVEL_COMPOSTER
	f	Ldtt;	a	ATTACHED
	f	Lduc;	aM	LEVEL_FLOWING
	f	Lduc;	aN	LEVEL_HONEY
	f	I	aO	MAX_LEVEL_15
	f	Lduc;	aP	LEVEL
	f	Lduc;	aQ	MOISTURE
	f	Lduc;	aR	NOTE
	f	Lduc;	aS	PICKLES
	f	Lduc;	aT	POWER
	f	Lduc;	aU	STAGE
	f	I	aV	STABILITY_MAX_DISTANCE
	f	Lduc;	aW	STABILITY_DISTANCE
	f	I	aX	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	aY	MAX_RESPAWN_ANCHOR_CHARGES
	f	Lduc;	aZ	RESPAWN_ANCHOR_CHARGES
	f	Ldua;	aa	EAST_REDSTONE
	f	Ldua;	ab	NORTH_REDSTONE
	f	Ldua;	ac	SOUTH_REDSTONE
	f	Ldua;	ad	WEST_REDSTONE
	f	Ldua;	ae	DOUBLE_BLOCK_HALF
	f	Ldua;	af	HALF
	f	Ldua;	ag	RAIL_SHAPE
	f	Ldua;	ah	RAIL_SHAPE_STRAIGHT
	f	I	ai	MAX_AGE_1
	f	I	aj	MAX_AGE_2
	f	I	ak	MAX_AGE_3
	f	I	al	MAX_AGE_4
	f	I	am	MAX_AGE_5
	f	I	an	MAX_AGE_7
	f	I	ao	MAX_AGE_15
	f	I	ap	MAX_AGE_25
	f	Lduc;	aq	AGE_1
	f	Lduc;	ar	AGE_2
	f	Lduc;	as	AGE_3
	f	Lduc;	at	AGE_4
	f	Lduc;	au	AGE_5
	f	Lduc;	av	AGE_7
	f	Lduc;	aw	AGE_15
	f	Lduc;	ax	AGE_25
	f	Lduc;	ay	BITES
	f	Lduc;	az	CANDLES
	f	Ldtt;	bA	OMINOUS
	f	Ldtt;	b	BOTTOM
	f	Lduc;	ba	ROTATION_16
	f	Ldua;	bb	BED_PART
	f	Ldua;	bc	CHEST_TYPE
	f	Ldua;	bd	MODE_COMPARATOR
	f	Ldua;	be	DOOR_HINGE
	f	Ldua;	bf	NOTEBLOCK_INSTRUMENT
	f	Ldua;	bg	PISTON_TYPE
	f	Ldua;	bh	SLAB_TYPE
	f	Ldua;	bi	STAIRS_SHAPE
	f	Ldua;	bj	STRUCTUREBLOCK_MODE
	f	Ldua;	bk	BAMBOO_LEAVES
	f	Ldua;	bl	TILT
	f	Ldtw;	bm	VERTICAL_DIRECTION
	f	Ldua;	bn	DRIPSTONE_THICKNESS
	f	Ldua;	bo	SCULK_SENSOR_PHASE
	f	Ldtt;	bp	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	f	Ldtt;	bq	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	f	Ldtt;	br	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	f	Ldtt;	bs	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	f	Ldtt;	bt	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	f	Ldtt;	bu	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	f	Lduc;	bv	DUSTED
	f	Ldtt;	bw	CRACKED
	f	Ldtt;	bx	CRAFTING
	f	Ldua;	by	TRIAL_SPAWNER_STATE
	f	Ldua;	bz	VAULT_STATE
	f	Ldtt;	c	CONDITIONAL
	f	Ldtt;	d	DISARMED
	f	Ldtt;	e	DRAG
	f	Ldtt;	f	ENABLED
	f	Ldtt;	g	EXTENDED
	f	Ldtt;	h	EYE
	f	Ldtt;	i	FALLING
	f	Ldtt;	j	HANGING
	f	Ldtt;	k	HAS_BOTTLE_0
	f	Ldtt;	l	HAS_BOTTLE_1
	f	Ldtt;	m	HAS_BOTTLE_2
	f	Ldtt;	n	HAS_RECORD
	f	Ldtt;	o	HAS_BOOK
	f	Ldtt;	p	INVERTED
	f	Ldtt;	q	IN_WALL
	f	Ldtt;	r	LIT
	f	Ldtt;	s	LOCKED
	f	Ldtt;	t	OCCUPIED
	f	Ldtt;	u	OPEN
	f	Ldtt;	v	PERSISTENT
	f	Ldtt;	w	POWERED
	f	Ldtt;	x	SHORT
	f	Ldtt;	y	SIGNAL_FIRE
	f	Ldtt;	z	SNOWY
c	dtt	net/minecraft/world/level/block/state/properties/BlockStateBoolean
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Ldtt;	a	create
		p	0		name
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
c	dtu	net/minecraft/world/level/block/state/properties/BlockPropertyChestType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ldtu;	a	getOpposite
	m	()[Ldtu;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtu;	a	SINGLE
	f	Ldtu;	b	LEFT
	f	Ldtu;	c	RIGHT
	f	Ljava/lang/String;	d	name
	f	[Ldtu;	e	$VALUES
c	dtv	net/minecraft/world/level/block/state/properties/BlockPropertyComparatorMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldtv;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtv;	a	COMPARE
	f	Ldtv;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Ldtv;	d	$VALUES
c	dtw	net/minecraft/world/level/block/state/properties/BlockStateDirection
	m	(Ljava/lang/String;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		values
	m	(Ljava/lang/String;)Ldtw;	a	create
		p	0		name
	m	(Ljava/lang/String;Ljava/util/Collection;)Ldtw;	a	create
		p	0		name
		p	1		values
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ldtw;	a	create
		p	0		name
		p	1		filter
	m	(Ljava/lang/String;[Lji;)Ldtw;	a	create
		p	0		name
		p	1		values
	m	(Lji;)Z	a	lambda$create$0
		p	0		direction
c	dtx	net/minecraft/world/level/block/state/properties/BlockPropertyDoorHinge
	m	()[Ldtx;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtx;	a	LEFT
	f	Ldtx;	b	RIGHT
	f	[Ldtx;	c	$VALUES
c	dty	net/minecraft/world/level/block/state/properties/BlockPropertyDoubleBlockHalf
	m	(Ljava/lang/String;ILji;)V	<init>	<init>
		p	3		oppositeDirection
	m	()Lji;	a	getDirectionToOther
	m	()Ldty;	b	getOtherHalf
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldty;	d	$values
	f	Ldty;	a	UPPER
	f	Ldty;	b	LOWER
	f	Lji;	c	directionToOther
	f	[Ldty;	d	$VALUES
c	dtz	net/minecraft/world/level/block/state/properties/DripstoneThickness
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldtz;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldtz;	a	TIP_MERGE
	f	Ldtz;	b	TIP
	f	Ldtz;	c	FRUSTUM
	f	Ldtz;	d	MIDDLE
	f	Ldtz;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Ldtz;	g	$VALUES
c	dua	net/minecraft/world/level/block/state/properties/BlockStateEnum
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)V	<init>	<init>
		p	1		name
		p	2		type
		p	3		values
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;Ljava/lang/Class;)Ldua;	a	create
		p	0		name
		p	1		type
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Ldua;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Ldua;	a	create
		p	0		name
		p	1		type
		p	2		filter
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Ldua;	a	create
		p	0		name
		p	1		type
		p	2		values
	m	()I	b	generateHashCode
	m	(Ljava/lang/Enum;)Z	b	lambda$create$0
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	Ljava/util/Map;	b	names
c	dub	net/minecraft/world/level/block/state/properties/BlockPropertyHalf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldub;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldub;	a	TOP
	f	Ldub;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Ldub;	d	$VALUES
c	duc	net/minecraft/world/level/block/state/properties/BlockStateInteger
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	1		name
		p	2		min
		p	3		max
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;II)Lduc;	a	create
		p	0		name
		p	1		min
		p	2		max
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	f	Lcom/google/common/collect/ImmutableSet;	a	values
	f	I	b	min
	f	I	c	max
c	dud	net/minecraft/world/level/block/state/properties/BlockPropertyInstrument
	m	(Ljava/lang/String;ILjava/lang/String;Ljm;Ldud$a;)V	<init>	<init>
		p	3		name
		p	4		sound
		p	5		type
	m	()Ljm;	a	getSoundEvent
	m	()Z	b	isTunable
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	hasCustomSound
	m	()Z	e	worksAboveNoteBlock
	m	()[Ldud;	f	$values
	f	[Ldud;	A	$VALUES
	f	Ldud;	a	HARP
	f	Ldud;	b	BASEDRUM
	f	Ldud;	c	SNARE
	f	Ldud;	d	HAT
	f	Ldud;	e	BASS
	f	Ldud;	f	FLUTE
	f	Ldud;	g	BELL
	f	Ldud;	h	GUITAR
	f	Ldud;	i	CHIME
	f	Ldud;	j	XYLOPHONE
	f	Ldud;	k	IRON_XYLOPHONE
	f	Ldud;	l	COW_BELL
	f	Ldud;	m	DIDGERIDOO
	f	Ldud;	n	BIT
	f	Ldud;	o	BANJO
	f	Ldud;	p	PLING
	f	Ldud;	q	ZOMBIE
	f	Ldud;	r	SKELETON
	f	Ldud;	s	CREEPER
	f	Ldud;	t	DRAGON
	f	Ldud;	u	WITHER_SKELETON
	f	Ldud;	v	PIGLIN
	f	Ldud;	w	CUSTOM_HEAD
	f	Ljava/lang/String;	x	name
	f	Ljm;	y	soundEvent
	f	Ldud$a;	z	type
c	dud$a	net/minecraft/world/level/block/state/properties/BlockPropertyInstrument$a
	m	()[Ldud$a;	a	$values
	f	Ldud$a;	a	BASE_BLOCK
	f	Ldud$a;	b	MOB_HEAD
	f	Ldud$a;	c	CUSTOM
	f	[Ldud$a;	d	$VALUES
c	due	net/minecraft/world/level/block/state/properties/BlockPropertyPistonType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldue;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldue;	a	DEFAULT
	f	Ldue;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Ldue;	d	$VALUES
c	duf	net/minecraft/world/level/block/state/properties/IBlockState
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
		p	1		name
		p	2		type
	m	()Ljava/util/Collection;	a	getPossibleValues
	m	(Lcom/mojang/serialization/DynamicOps;Ldte;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
		p	1		ops
		p	2		state
		p	3		input
	m	(Ldte;)Lduf$a;	a	value
		p	1		state
	m	(Ldte;Ljava/lang/Comparable;)Ldte;	a	lambda$parseValue$3
		p	2		property
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
		p	1		value
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$2
		p	1		value
	m	()I	b	generateHashCode
	m	(Ljava/lang/Comparable;)Lduf$a;	b	value
		p	1		value
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
		p	1		name
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$1
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$0
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
c	duf$a	net/minecraft/world/level/block/state/properties/IBlockState$a
	m	(Lduf;Ljava/lang/Comparable;)V	<init>	<init>
		p	1		property
		p	2		value
	m	()Lduf;	a	property
	m	()Ljava/lang/Comparable;	b	value
	f	Lduf;	a	property
	f	Ljava/lang/Comparable;	b	value
c	dug	net/minecraft/world/level/block/state/properties/BlockPropertyTrackPosition
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isAscending
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldug;	d	$values
	f	Ldug;	a	NORTH_SOUTH
	f	Ldug;	b	EAST_WEST
	f	Ldug;	c	ASCENDING_EAST
	f	Ldug;	d	ASCENDING_WEST
	f	Ldug;	e	ASCENDING_NORTH
	f	Ldug;	f	ASCENDING_SOUTH
	f	Ldug;	g	SOUTH_EAST
	f	Ldug;	h	SOUTH_WEST
	f	Ldug;	i	NORTH_WEST
	f	Ldug;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Ldug;	l	$VALUES
c	duh	net/minecraft/world/level/block/state/properties/BlockPropertyRedstoneSide
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Z	a	isConnected
	m	()[Lduh;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lduh;	a	UP
	f	Lduh;	b	SIDE
	f	Lduh;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Lduh;	e	$VALUES
c	dui	net/minecraft/world/level/block/state/properties/RotationSegment
	m	()I	a	getMaxSegmentIndex
	m	(F)I	a	convertToSegment
		p	0		yaw
	m	(I)Ljava/util/Optional;	a	convertToDirection
		p	0		rotation
	m	(Lji;)I	a	convertToSegment
		p	0		direction
	m	(I)F	b	convertToDegrees
		p	0		rotation
	f	Layy;	a	SEGMENTED_ANGLE16
	f	I	b	MAX_SEGMENT_INDEX
	f	I	c	NORTH_0
	f	I	d	EAST_90
	f	I	e	SOUTH_180
	f	I	f	WEST_270
c	duj	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lduj;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lduj;	a	INACTIVE
	f	Lduj;	b	ACTIVE
	f	Lduj;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Lduj;	e	$VALUES
c	duk	net/minecraft/world/level/block/state/properties/BlockPropertySlabType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lduk;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lduk;	a	TOP
	f	Lduk;	b	BOTTOM
	f	Lduk;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Lduk;	e	$VALUES
c	dul	net/minecraft/world/level/block/state/properties/BlockPropertyStairsShape
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldul;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldul;	a	STRAIGHT
	f	Ldul;	b	INNER_LEFT
	f	Ldul;	c	INNER_RIGHT
	f	Ldul;	d	OUTER_LEFT
	f	Ldul;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Ldul;	g	$VALUES
c	dum	net/minecraft/world/level/block/state/properties/BlockPropertyStructureMode
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Lwz;	a	getDisplayName
	m	()[Ldum;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldum;	a	SAVE
	f	Ldum;	b	LOAD
	f	Ldum;	c	CORNER
	f	Ldum;	d	DATA
	f	Ljava/lang/String;	e	name
	f	Lwz;	f	displayName
	f	[Ldum;	g	$VALUES
c	dun	net/minecraft/world/level/block/state/properties/Tilt
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	3		name
		p	4		stable
	m	()Z	a	causesVibration
	m	()[Ldun;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldun;	a	NONE
	f	Ldun;	b	UNSTABLE
	f	Ldun;	c	PARTIAL
	f	Ldun;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Ldun;	g	$VALUES
c	duo	net/minecraft/world/level/block/state/properties/BlockPropertyWallHeight
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lduo;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lduo;	a	NONE
	f	Lduo;	b	LOW
	f	Lduo;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Lduo;	e	$VALUES
c	dup	net/minecraft/world/level/block/state/properties/BlockPropertyWood
	m	(Ljava/lang/String;Ldtr;)V	<init>	<init>
		p	1		name
		p	2		setType
	m	()Ljava/util/stream/Stream;	a	values
	m	(Ldup;)Ldup;	a	register
		p	0		type
	m	()Ljava/lang/String;	b	name
	m	()Ldtr;	c	setType
	m	()Ldnm;	d	soundType
	m	()Ldnm;	e	hangingSignSoundType
	m	()Lavo;	f	fenceGateClose
	m	()Lavo;	g	fenceGateOpen
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldup;	b	OAK
	f	Ldup;	c	SPRUCE
	f	Ldup;	d	BIRCH
	f	Ldup;	e	ACACIA
	f	Ldup;	f	CHERRY
	f	Ldup;	g	JUNGLE
	f	Ldup;	h	DARK_OAK
	f	Ldup;	i	CRIMSON
	f	Ldup;	j	WARPED
	f	Ldup;	k	MANGROVE
	f	Ldup;	l	BAMBOO
	f	Ljava/lang/String;	m	name
	f	Ldtr;	n	setType
	f	Ldnm;	o	soundType
	f	Ldnm;	p	hangingSignSoundType
	f	Lavo;	q	fenceGateClose
	f	Lavo;	r	fenceGateOpen
	f	Ljava/util/Map;	s	TYPES
c	dur	net/minecraft/world/level/border/IWorldBorderListener
	m	(Ldut;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldut;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldut;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldut;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldut;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldut;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldut;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
c	dur$a	net/minecraft/world/level/border/IWorldBorderListener$a
	m	(Ldut;)V	<init>	<init>
		p	1		border
	m	(Ldut;D)V	a	onBorderSizeSet
		p	1		border
		p	2		size
	m	(Ldut;DD)V	a	onBorderCenterSet
		p	1		border
		p	2		centerX
		p	4		centerZ
	m	(Ldut;DDJ)V	a	onBorderSizeLerping
		p	1		border
		p	2		fromSize
		p	4		toSize
		p	6		time
	m	(Ldut;I)V	a	onBorderSetWarningTime
		p	1		border
		p	2		warningTime
	m	(Ldut;D)V	b	onBorderSetDamagePerBlock
		p	1		border
		p	2		damagePerBlock
	m	(Ldut;I)V	b	onBorderSetWarningBlocks
		p	1		border
		p	2		warningBlockDistance
	m	(Ldut;D)V	c	onBorderSetDamageSafeZOne
		p	1		border
		p	2		safeZoneRadius
	f	Ldut;	a	worldBorder
c	dus	net/minecraft/world/level/border/BorderStatus
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		color
	m	()I	a	getColor
	m	()[Ldus;	b	$values
	f	Ldus;	a	GROWING
	f	Ldus;	b	SHRINKING
	f	Ldus;	c	STATIONARY
	f	I	d	color
	f	[Ldus;	e	$VALUES
c	dut	net/minecraft/world/level/border/WorldBorder
	m	()D	a	getCenterX
	m	(D)V	a	setSize
		p	1		size
	m	(DD)Z	a	isWithinBounds
		p	1		x
		p	3		z
	m	(DDD)Z	a	isWithinBounds
		p	1		x
		p	3		z
		p	5		margin
	m	(DDDD)Z	a	isWithinBounds
		p	1		minX
		p	3		minZ
		p	5		maxX
		p	7		maxZ
	m	(DDJ)V	a	lerpSizeBetween
		p	1		fromSize
		p	3		toSize
		p	5		time
	m	(I)V	a	setAbsoluteMaxSize
		p	1		maxRadius
	m	(Lbsr;)D	a	getDistanceToBorder
		p	1		entity
	m	(Lbsr;Lewx;)Z	a	isInsideCloseToBorder
		p	1		entity
		p	2		box
	m	(Ldcd;)Z	a	isWithinBounds
		p	1		chunkPos
	m	(Ldur;)V	a	addListener
		p	1		listener
	m	(Ldut$c;)V	a	applySettings
		p	1		properties
	m	(Lewx;)Z	a	isWithinBounds
		p	1		box
	m	(Lexc;)Z	a	isWithinBounds
		p	1		pos
	m	(Ljd;)Z	a	isWithinBounds
		p	1		pos
	m	()D	b	getCenterZ
	m	(D)V	b	setDamageSafeZone
		p	1		safeZone
	m	(DD)D	b	getDistanceToBorder
		p	1		x
		p	3		z
	m	(DDD)Ljd;	b	clampToBounds
		p	1		x
		p	3		y
		p	5		z
	m	(I)V	b	setWarningTime
		p	1		warningTime
	m	(Ldur;)V	b	removeListener
		p	1		listener
	m	(Lexc;)Ljd;	b	clampToBounds
		p	1		pos
	m	(Ljd;)Ljd;	b	clampToBounds
		p	1		pos
	m	()Lexv;	c	getCollisionShape
	m	(D)V	c	setDamagePerBlock
		p	1		damagePerBlock
	m	(DD)V	c	setCenter
		p	1		x
		p	3		z
	m	(I)V	c	setWarningBlocks
		p	1		warningBlocks
	m	()Ldus;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	()Ljava/util/List;	l	getListeners
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	()I	r	getWarningBlocks
	m	()V	s	tick
	m	()Ldut$c;	t	createSettings
	f	Ljava/util/List;	a	listeners
	f	D	b	MAX_SIZE
	f	D	c	MAX_CENTER_COORDINATE
	f	Ldut$c;	d	DEFAULT_SETTINGS
	f	D	e	damagePerBlock
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Ldut$a;	l	extent
c	dut$a	net/minecraft/world/level/border/WorldBorder$a
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldus;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldut$a;	l	update
	m	()Lexv;	m	getCollisionShape
c	dut$b	net/minecraft/world/level/border/WorldBorder$b
	m	(Ldut;DDJ)V	<init>	<init>
		p	2		oldSize
		p	4		newSize
		p	6		timeDuration
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldus;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldut$a;	l	update
	m	()Lexv;	m	getCollisionShape
	f	Ldut;	a	this$0
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
c	dut$c	net/minecraft/world/level/border/WorldBorder$c
	m	(DDDDIIDJD)V	<init>	<init>
		p	1		centerX
		p	3		centerZ
		p	5		damagePerBlock
		p	7		safeZone
		p	9		warningBlocks
		p	10		warningTime
		p	11		size
		p	13		sizeLerpTime
		p	15		sizeLerpTarget
	m	(Ldut;)V	<init>	<init>
		p	1		worldBorder
	m	()D	a	getCenterX
	m	(Lcom/mojang/serialization/DynamicLike;Ldut$c;)Ldut$c;	a	read
		p	0		dynamic
		p	1		properties
	m	(Lub;)V	a	write
		p	1		nbt
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
c	dut$d	net/minecraft/world/level/border/WorldBorder$d
	m	(Ldut;D)V	<init>	<init>
		p	2		size
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Ldus;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Ldut$a;	l	update
	m	()Lexv;	m	getCollisionShape
	m	()V	n	updateBox
	f	Ldut;	a	this$0
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Lexv;	g	shape
c	duv	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Ldtc;	a	getBlock
		p	1		y
	m	(ILdtc;)V	a	setBlock
		p	1		y
		p	2		state
c	duw	net/minecraft/world/level/chunk/BulkSectionAccess
	m	(Ldcx;)V	<init>	<init>
		p	1		world
	m	(Ljd;)Ldvj;	a	getSection
		p	1		pos
	m	(Ljd;IJ)Ldvj;	a	lambda$getSection$0
	m	(Ljd;)Ldtc;	b	getBlockState
		p	1		pos
	f	Ldcx;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Ldvj;	c	lastSection
	f	J	d	lastSectionKey
c	dux	net/minecraft/world/level/chunk/CarvingMask
	m	(II)V	<init>	<init>
		p	1		height
		p	2		bottomY
	m	([JI)V	<init>	<init>
		p	1		mask
		p	2		bottomY
	m	()[J	a	toArray
	m	(III)V	a	set
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Ldcd;)Ljava/util/stream/Stream;	a	stream
		p	1		chunkPos
	m	(Ldcd;I)Ljd;	a	lambda$stream$1
		p	2		mask
	m	(Ldux$a;)V	a	setAdditionalMask
		p	1		maskPredicate
	m	(III)Z	b	get
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)I	c	getIndex
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(III)Z	d	lambda$new$0
		p	0		offsetX
		p	1		y
		p	2		offsetZ
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Ldux$a;	c	additionalMask
c	dux$a	net/minecraft/world/level/chunk/CarvingMask$a
	m	(III)Z	test	test
		p	1		offsetX
		p	2		y
		p	3		offsetZ
c	duy	net/minecraft/world/level/chunk/IChunkAccess
	m	(Ldcd;Ldvv;Ldcy;Ljz;J[Ldvj;Leab;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		heightLimitView
		p	4		biomeRegistry
		p	5		inhabitedTime
		p	7		sectionArray
		p	8		blendingData
	m	()V	A	initializeLightSources
	m	()Leoo;	B	getSkyLightSources
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
	m	()I	a	getHighestFilledSectionIndex
	m	(I)Ldyc;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$3
	m	(J)V	a	incrementInhabitedTime
		p	1		delta
	m	(Lbsr;)V	a	addEntity
		p	1		entity
	m	(Lddz;Ldef$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldtc;)Z	a	lambda$findBlockLightSources$2
		p	0		blockState
	m	(Ldyy$a;)Ldyy;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldyy$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldyy$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Leab;)V	a	setBlendingData
		p	1		blendingData
	m	(Lejr;)Lejz;	a	getStartForStructure
		p	1		structure
	m	(Lejr;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Lejr;Lejz;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
		p	1		callback
	m	(Ljava/util/function/Function;)Ldzc;	a	getOrCreateNoiseChunk
		p	1		chunkNoiseSamplerCreator
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
		p	1		predicate
		p	2		consumer
	m	(Ljava/util/function/Supplier;)Lddx;	a	carverBiome
		p	1		generationSettingsCreator
	m	(Ljd;Ldtc;Z)Ldtc;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljd;Ljo$a;)Lub;	a	getBlockEntityNbtForSaving
		p	1		pos
		p	2		registryLookup
	m	(Ljz;[Ldvj;)V	a	replaceMissingSections
		p	0		biomeRegistry
		p	1		sectionArray
	m	(Lub;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
		p	0		lists
		p	1		index
	m	()I	b	getHighestSectionPosition
	m	(I)Ldvj;	b	getSection
		p	1		yIndex
	m	(J)V	b	setInhabitedTime
		p	1		inhabitedTime
	m	(Ldyy$a;)Z	b	hasPrimedHeightmap
		p	1		type
	m	(Lejr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	(I)Z	c	isSectionEmpty
		p	1		sectionCoord
	m	(Ldyy$a;)Ldyy;	c	lambda$getOrCreateHeightmapUnprimed$0
		p	1		type2
	m	(Lejr;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForStructure$1
		p	0		type2
	m	()[Ldvj;	d	getSections
	m	(Ljd;)V	d	removeBlockEntity
		p	1		pos
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Ljd;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Ldcd;	f	getPos
	m	(Ljd;)Lub;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldvz;	j	getPersistedStatus
	m	()Ldvz;	k	getHighestGeneratedStatus
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	n	getPostProcessing
	m	()Leyw;	o	getBlockTicks
	m	()Leyw;	p	getFluidTicks
	m	()Lduy$a;	q	getTicksForSerialization
	m	()Ldvv;	r	getUpgradeData
	m	()Z	s	isOldNoiseGeneration
	m	()Leab;	t	getBlendingData
	m	()J	u	getInhabitedTime
	m	()Z	v	isLightCorrect
	m	()Z	w	hasAnyStructureReferences
	m	()Ldym;	x	getBelowZeroRetrogen
	m	()Z	y	isUpgrading
	m	()Ldcy;	z	getHeightAccessorForGeneration
	f	I	a	NO_FILLED_SECTION
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	b	postProcessing
	f	Z	c	unsaved
	f	Ldcd;	d	chunkPos
	f	Ldzc;	e	noiseChunk
	f	Ldvv;	f	upgradeData
	f	Leab;	g	blendingData
	f	Ljava/util/Map;	h	heightmaps
	f	Leoo;	i	skyLightSources
	f	Ljava/util/Map;	j	pendingBlockEntities
	f	Ljava/util/Map;	k	blockEntities
	f	Ldcy;	l	levelHeightAccessor
	f	[Ldvj;	m	sections
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	EMPTY_REFERENCE_SET
	f	Z	p	isLightCorrect
	f	J	q	inhabitedTime
	f	Lddx;	r	carverBiomeSettings
	f	Ljava/util/Map;	s	structureStarts
	f	Ljava/util/Map;	t	structuresRefences
c	duy$a	net/minecraft/world/level/chunk/IChunkAccess$a
	m	()Leyu;	a	blocks
	m	()Leyu;	b	fluids
	f	Leyu;	a	blocks
	f	Leyu;	b	fluids
c	duz	net/minecraft/world/level/chunk/ChunkGenerator
	m	(Ldea;)V	<init>	<init>
		p	1		biomeSource
	m	(Ldea;Ljava/util/function/Function;)V	<init>	<init>
		p	1		biomeSource
		p	2		generationSettingsGetter
	m	()V	a	validate
	m	(IILdcy;Ldzm;)Lddi;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdyy$a;Ldcy;Ldzm;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Laqu;Ljq;Ljd;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapStructure
		p	1		world
		p	2		structures
		p	3		center
		p	4		radius
		p	5		skipReferencedStructures
	m	(Larb;)V	a	spawnOriginalMobs
		p	1		region
	m	(Larb;JLdzm;Lddy;Lddq;Lduy;Ldyu$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Larb;Lddq;Ldzm;Lduy;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Ldcy;)I	a	getSpawnHeight
		p	1		world
	m	(Lddq;Lduy;Lkf;Lejr;)I	a	fetchReferences
		p	0		structureAccessor
		p	1		chunk
		p	2		sectionPos
		p	3		structure
	m	(Lddq;Lejz;)Z	a	tryAddReference
		p	0		structureAccessor
		p	1		start
	m	(Lddq;Ljd;Lejz;)Z	a	lambda$getMobsAt$11
		p	2		start
	m	(Lddq;Lkf;Lduy;Ldva;Ldcd;Lka;Ldzm;Lenu;Ljm;)V	a	lambda$createStructures$14
		p	9		structureSet
	m	(Ldds;Lddq;Lduy;)V	a	createReferences
		p	1		world
		p	2		structureAccessor
		p	3		chunk
	m	(Ldds;Lddq;Ldzx;Lduy;Ldcd;Lejz;)V	a	lambda$applyBiomeDecoration$8
		p	6		start
	m	(Ldds;Lduy;Lddq;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Ldds;Ljava/util/Set;Ldcd;)V	a	lambda$applyBiomeDecoration$6
		p	2		pos
	m	(Ldea;Ljava/util/function/Function;)Ljava/util/List;	a	lambda$new$2
	m	(Lduy;)Lejj;	a	getWritableArea
		p	0		chunk
	m	(Lduy;Ldzm;)Lduy;	a	lambda$createBiomes$3
	m	(Ldzm;Leaa;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		noiseConfig
		p	2		blender
		p	3		structureAccessor
		p	4		chunk
	m	(Leaa;Ldzm;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Lejr;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$5
		p	0		structureType
	m	(Lejx$a;Lddq;Lka;Ldzm;Lenu;JLduy;Ldcd;Lkf;)Z	a	tryGenerateStructure
		p	1		weightedEntry
		p	2		structureAccessor
		p	3		dynamicRegistryManager
		p	4		noiseConfig
		p	5		structureManager
		p	6		seed
		p	8		chunk
		p	9		pos
		p	10		sectionPos
	m	(Lejz;)Ljava/lang/String;	a	lambda$createReferences$18
	m	(Lejz;Ljz;)Ljava/lang/String;	a	lambda$createReferences$15
		p	1		structureTypeRegistry
	m	(Leko;)Ljava/util/Set;	a	lambda$findNearestMapStructure$4
		p	0		placement
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Ldeg$b;Leiv;)V	a	lambda$applyBiomeDecoration$9
		p	2		feature
	m	(Ljava/util/List;Ldzm;Ljd;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljava/util/Optional;Lejz;)Ljava/lang/String;	a	lambda$createReferences$16
	m	(Ljava/util/Set;Laqu;Lddq;Ljd;ZLekl;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	1		structures
		p	2		world
		p	3		structureAccessor
		p	4		center
		p	5		skipReferencedStructures
		p	6		placement
	m	(Ljava/util/Set;Ldcz;Lddq;IIIZJLekm;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		centerChunkX
		p	4		centerChunkZ
		p	5		radius
		p	6		skipReferencedStructures
		p	7		seed
		p	9		placement
	m	(Ljava/util/Set;Ldcz;Lddq;ZLeko;Ldcd;)Lcom/mojang/datafixers/util/Pair;	a	getStructureGeneratingAt
		p	0		structures
		p	1		world
		p	2		structureAccessor
		p	3		skipReferencedStructures
		p	4		placement
		p	5		pos
	m	(Ljava/util/function/Function;Ljm;)Ljava/util/List;	a	lambda$new$1
		p	1		biomeEntry
	m	(Ljd;Lejz;)Z	a	lambda$getMobsAt$12
		p	1		start
	m	(Ljm;)Lddx;	a	getBiomeGenerationSettings
		p	1		biomeEntry
	m	(Ljm;Lddq;Lbtq;Ljd;)Lbpf;	a	getMobsAt
		p	1		biome
		p	2		accessor
		p	3		group
		p	4		pos
	m	(Ljo;Ldzm;J)Ldva;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	(Ljz;Leiv;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$10
	m	(Ljz;Lejr;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$7
	m	(Lka;Ldva;Lddq;Lduy;Lenu;)V	a	createStructures
		p	1		registryManager
		p	2		placementCalculator
		p	3		structureAccessor
		p	4		chunk
		p	5		structureTemplateManager
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Lejz;)V	a	lambda$getMobsAt$13
		p	2		start
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	(IILdyy$a;Ldcy;Ldzm;)I	b	getFirstFreeHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lejz;)Ljava/lang/String;	b	lambda$createReferences$17
	m	(Ljm;)Lddx;	b	lambda$new$0
		p	0		biomeEntry
	m	()Ljava/util/Optional;	c	getTypeNameForDataFixer
	m	(IILdyy$a;Ldcy;Ldzm;)I	c	getFirstOccupiedHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	()Ldea;	d	getBiomeSource
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldea;	b	biomeSource
	f	Ljava/util/function/Supplier;	c	featuresPerStep
	f	Ljava/util/function/Function;	d	generationSettingsGetter
c	dva	net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	m	(Ldzm;Ldea;JJLjava/util/List;)V	<init>	<init>
		p	1		noiseConfig
		p	2		biomeSource
		p	3		structureSeed
		p	5		concentricRingSeed
		p	7		structureSets
	m	()Ljava/util/List;	a	possibleStructureSets
	m	(IILjq;Layw;)Ldcd;	a	lambda$generateRingPositions$5
	m	(Lcom/google/common/base/Stopwatch;Ljm;Ljava/util/List;)Ljava/util/List;	a	lambda$generateRingPositions$6
		p	2		positions
	m	(Ldea;Ljm$c;)Z	a	lambda$createForNormal$1
		p	1		structureSet
	m	(Ldea;Ljm;)Z	a	lambda$createForFlat$0
		p	1		structureSet
	m	(Ldzm;JLdea;Ljava/util/stream/Stream;)Ldva;	a	createForFlat
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSets
	m	(Ldzm;JLdea;Ljo;)Ldva;	a	createForNormal
		p	0		noiseConfig
		p	1		seed
		p	3		biomeSource
		p	4		structureSetRegistry
	m	(Lejr;)Ljava/util/List;	a	lambda$generatePositions$3
		p	0		structure
	m	(Lejx$a;)Ljava/util/stream/Stream;	a	lambda$hasBiomesForStructureSet$2
		p	0		structure
	m	(Lejx;Ldea;)Z	a	hasBiomesForStructureSet
		p	0		structureSet
		p	1		biomeSource
	m	(Lekl;)Ljava/util/List;	a	getRingPositionsFor
		p	1		placement
	m	(Ljava/util/Set;Ljm;)V	a	lambda$generatePositions$4
		p	2		structureSet
	m	(Ljm;)Ljava/util/List;	a	getPlacementsForStructure
		p	1		structureEntry
	m	(Ljm;III)Z	a	hasStructureChunkInRange
		p	1		structureSetEntry
		p	2		centerChunkX
		p	3		centerChunkZ
		p	4		chunkCount
	m	(Ljm;Lekl;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
		p	1		structureSetEntry
		p	2		placement
	m	()V	b	ensureStructuresGenerated
	m	()Ldzm;	c	randomState
	m	()J	d	getLevelSeed
	m	()V	e	generatePositions
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldzm;	b	randomState
	f	Ldea;	c	biomeSource
	f	J	d	levelSeed
	f	J	e	concentricRingsSeed
	f	Ljava/util/Map;	f	placementsForStructure
	f	Ljava/util/Map;	g	ringPositions
	f	Z	h	hasGeneratedPositions
	f	Ljava/util/List;	i	possibleStructureSets
c	dvb	net/minecraft/world/level/chunk/ChunkGenerators
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
c	dvc	net/minecraft/world/level/chunk/IChunkProvider
	m	(II)Ldvi;	a	getChunkNow
		p	1		chunkX
		p	2		chunkZ
	m	(IILdvz;Z)Lduy;	a	getChunk
		p	1		x
		p	2		z
		p	3		leastStatus
		p	4		create
	m	(IIZ)Ldvi;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
		p	3		create
	m	(Ldcd;Z)V	a	updateChunkForced
		p	1		pos
		p	2		forced
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
		p	1		shouldKeepTicking
		p	2		tickChunks
	m	(ZZ)V	a	setSpawnSettings
		p	1		spawnMonsters
		p	2		spawnAnimals
	m	(II)Z	b	hasChunk
		p	1		x
		p	2		z
	m	(II)Ldvk;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	j	getLoadedChunksCount
	m	()Leot;	p	getLightEngine
c	dvd	net/minecraft/world/level/chunk/NibbleArray
	m	(I)V	<init>	<init>
		p	1		defaultValue
	m	([B)V	<init>	<init>
		p	1		bytes
	m	()[B	a	getData
	m	(I)V	a	fill
		p	1		defaultValue
	m	(II)V	a	set
		p	1		index
		p	2		value
	m	(III)I	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	a	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	()Ldvd;	b	copy
	m	(I)Ljava/lang/String;	b	layerToString
		p	1		unused
	m	(III)I	b	getIndex
		p	0		x
		p	1		y
		p	2		z
	m	()Z	c	isDefinitelyHomogenous
	m	(I)Z	c	isDefinitelyFilledWith
		p	1		expectedDefaultValue
	m	()Z	d	isEmpty
	m	(I)I	d	get
		p	1		index
	m	(I)I	e	getNibbleIndex
		p	0		i
	m	(I)I	f	getByteIndex
		p	0		i
	m	(I)B	g	packFilled
		p	0		value
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	[B	d	data
	f	I	e	NIBBLE_SIZE
	f	I	f	defaultValue
c	dve	net/minecraft/world/level/chunk/ChunkEmpty
	m	(Ldcw;Ldcd;Ljm;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		biomeEntry
	m	()Z	C	isEmpty
	m	()Laql;	D	getFullStatus
	m	(II)Z	a	isYSpaceEmpty
		p	1		lowerHeight
		p	2		upperHeight
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ljd;Ldtc;Z)Ldtc;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljd;Ldvi$b;)Ldqh;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(Ldqh;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(I)Z	c	isSectionEmpty
		p	1		sectionCoord
	m	(Ljd;)V	d	removeBlockEntity
		p	1		pos
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(Ljd;)I	i	getLightEmission
		p	1		pos
	f	Ljm;	n	biome
c	dvf	net/minecraft/world/level/chunk/DataPaletteGlobal
	m	(Ljr;)V	<init>	<init>
		p	1		idList
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILjr;Ldvp;Ljava/util/List;)Ldvo;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lvw;)V	b	write
		p	1		buf
	m	()Ldvo;	c	copy
	f	Ljr;	a	registry
c	dvg	net/minecraft/world/level/chunk/DataPaletteHash
	m	(Ljr;ILdvp;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
	m	(Ljr;ILdvp;Laxk;)V	<init>	<init>
		p	1		idList
		p	2		indexBits
		p	3		listener
		p	4		map
	m	(Ljr;ILdvp;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILjr;Ldvp;Ljava/util/List;)Ldvo;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lvw;)V	b	write
		p	1		buf
	m	()Ldvo;	c	copy
	m	()Ljava/util/List;	d	getEntries
	f	Ljr;	a	registry
	f	Laxk;	b	values
	f	Ldvp;	c	resizeHandler
	f	I	d	bits
c	dvh	net/minecraft/world/level/chunk/ProtoChunkExtension
	m	(Ldvi;Z)V	<init>	<init>
		p	1		wrapped
		p	2		propagateToWrapped
	m	()V	A	initializeLightSources
	m	()Leoo;	B	getSkyLightSources
	m	()Ldvi;	C	getWrapped
	m	()I	Q	getMaxLightLevel
	m	(Lbsr;)V	a	addEntity
		p	1		entity
	m	(Lddz;Ldef$f;)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldvz;)V	a	setPersistedStatus
		p	1		status
	m	(Ldyu$a;)Ldux;	a	getCarvingMask
		p	1		step
	m	(Ldyy$a;)Ldyy;	a	getOrCreateHeightmapUnprimed
		p	1		type
	m	(Ldyy$a;II)I	a	getHeight
		p	1		type
		p	2		x
		p	3		z
	m	(Ldyy$a;[J)V	a	setHeightmap
		p	1		type
		p	2		heightmap
	m	(Leab;)V	a	setBlendingData
		p	1		blendingData
	m	(Lejr;)Lejz;	a	getStartForStructure
		p	1		structure
	m	(Lejr;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Lejr;Lejz;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Ljava/util/Map;)V	a	setAllStarts
		p	1		structureStarts
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
		p	1		predicate
		p	2		consumer
	m	(Ljd;Ldtc;Z)Ldtc;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljd;Ljo$a;)Lub;	a	getBlockEntityNbtForSaving
		p	1		pos
		p	2		registryLookup
	m	(Lub;)V	a	setBlockEntityNbt
		p	1		nbt
	m	(Z)V	a	setUnsaved
		p	1		needsSaving
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(I)Ldvj;	b	getSection
		p	1		yIndex
	m	(Ldyu$a;)Ldux;	b	getOrCreateCarvingMask
		p	1		step
	m	(Lejr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	(Z)V	b	setLightCorrect
		p	1		lightOn
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(Ldyy$a;)Ldyy$a;	c	fixType
		p	1		type
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	()[Ldvj;	d	getSections
	m	(Ljd;)V	d	removeBlockEntity
		p	1		pos
	m	(Ljd;)V	e	markPosForPostprocessing
		p	1		pos
	m	()Ldcd;	f	getPos
	m	(Ljd;)Lub;	f	getBlockEntityNbt
		p	1		pos
	m	()Ljava/util/Map;	g	getAllStarts
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ljava/util/Map;	h	getAllReferences
	m	()Z	i	isUnsaved
	m	()Ldvz;	j	getPersistedStatus
	m	()Leyw;	o	getBlockTicks
	m	()Leyw;	p	getFluidTicks
	m	()Lduy$a;	q	getTicksForSerialization
	m	()Leab;	t	getBlendingData
	m	()Z	v	isLightCorrect
	f	Ldvi;	n	wrapped
	f	Z	o	allowWrites
c	dvi	net/minecraft/world/level/chunk/Chunk
	m	(Laqu;Ldvs;Ldvi$c;)V	<init>	<init>
		p	1		world
		p	2		protoChunk
		p	3		entityLoader
	m	(Ldcw;Ldcd;)V	<init>	<init>
		p	1		world
		p	2		pos
	m	(Ldcw;Ldcd;Ldvv;Leyo;Leyo;J[Ldvj;Ldvi$c;Leab;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		upgradeData
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		inhabitedTime
		p	8		sectionArrayInitializer
		p	9		entityLoader
		p	10		blendingData
	m	()Z	C	isEmpty
	m	()Laql;	D	getFullStatus
	m	()V	E	runPostLoad
	m	()Ldcw;	F	getLevel
	m	()Ljava/util/Map;	G	getBlockEntities
	m	()V	H	postProcessGeneration
	m	()V	I	clearAllBlockEntities
	m	()V	J	registerAllBlockEntitiesAfterLevelLoad
	m	()Z	K	isInLevel
	m	(I)Ldyc;	a	getListenerRegistry
		p	1		ySectionCoord
	m	(III)Lepe;	a	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Laqu;)V	a	registerTickContainerInLevel
		p	1		world
	m	(Laqu;II)Ldyc;	a	lambda$getListenerRegistry$0
		p	3		sectionCoord
	m	(Lbsr;)V	a	addEntity
		p	1		entity
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldqh;Laqu;)V	a	removeGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Ldqh;Ldqi;)Ldsa;	a	createTicker
		p	1		blockEntity
		p	2		blockEntityTicker
	m	(Ldqh;Ldqi;Ljd;Ldvi$d;)Ldvi$d;	a	lambda$updateBlockEntityTicker$6
		p	3		pos
		p	4		ticker
	m	(Ldvi$d;)V	a	lambda$clearAllBlockEntities$4
		p	0		ticker
	m	(Ljd;Ldqj;Lub;)V	a	lambda$replaceWithPacketData$3
		p	1		pos
		p	2		blockEntityType
		p	3		nbtx
	m	(Ljd;Ldtc;Z)Ldtc;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljd;Ldvi$b;)Ldqh;	a	getBlockEntity
		p	1		pos
		p	2		creationType
	m	(Ljd;Ljo$a;)Lub;	a	getBlockEntityNbtForSaving
		p	1		pos
		p	2		registryLookup
	m	(Ljd;Lub;)Ldqh;	a	promotePendingBlockEntity
		p	1		pos
		p	2		nbt
	m	(Lvw;)V	a	replaceBiomes
		p	1		buf
	m	(Lvw;Lub;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
		p	1		buf
		p	2		nbt
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$2
	m	(Laqu;)V	b	unregisterTickContainerFromLevel
		p	1		world
	m	(Ldqh;)V	b	addAndRegisterBlockEntity
		p	1		blockEntity
	m	(Ldqh;Laqu;)V	b	addGameEventListener
		p	1		blockEntity
		p	2		world
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
		p	1		levelTypeProvider
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$1
	m	(J)V	c	unpackTicks
		p	1		time
	m	(Ldqh;)V	c	updateBlockEntityTicker
		p	1		blockEntity
	m	(Z)V	c	setLoaded
		p	1		loadedToWorld
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(Ldqh;)V	d	lambda$registerAllBlockEntitiesAfterLevelLoad$5
		p	1		blockEntity
	m	(Ljd;)V	d	removeBlockEntity
		p	1		pos
	m	(Ljd;)Ldqh;	g	createBlockEntity
		p	1		pos
	m	(I)V	h	removeGameEventListenerRegistry
		p	1		ySectionCoord
	m	(Ljd;)Z	h	isTicking
		p	1		pos
	m	()Ldvz;	j	getPersistedStatus
	m	(Ljd;)V	k	removeBlockEntityTicker
		p	1		pos
	m	()Leyw;	o	getBlockTicks
	m	()Leyw;	p	getFluidTicks
	m	()Lduy$a;	q	getTicksForSerialization
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Ldsa;	o	NULL_TICKER
	f	Ljava/util/Map;	p	tickersInLevel
	f	Z	q	loaded
	f	Ldcw;	r	level
	f	Ljava/util/function/Supplier;	s	fullStatus
	f	Ldvi$c;	t	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	u	gameEventListenerRegistrySections
	f	Leyo;	v	blockTicks
	f	Leyo;	w	fluidTicks
c	dvi$1	net/minecraft/world/level/chunk/Chunk$1
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljd;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	dvi$a	net/minecraft/world/level/chunk/Chunk$a
	m	(Ldvi;Ldqh;Ldqi;)V	<init>	<init>
		p	2		blockEntity
		p	3		ticker
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljd;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Ldvi;	a	this$0
	f	Ldqh;	b	blockEntity
	f	Ldqi;	c	ticker
	f	Z	d	loggedInvalidBlockState
c	dvi$b	net/minecraft/world/level/chunk/Chunk$EnumTileEntityState
	m	()[Ldvi$b;	a	$values
	f	Ldvi$b;	a	IMMEDIATE
	f	Ldvi$b;	b	QUEUED
	f	Ldvi$b;	c	CHECK
	f	[Ldvi$b;	d	$VALUES
c	dvi$c	net/minecraft/world/level/chunk/Chunk$c
	m	(Ldvi;)V	run	run
		p	1		chunk
c	dvi$d	net/minecraft/world/level/chunk/Chunk$d
	m	(Ldvi;Ldsa;)V	<init>	<init>
		p	2		wrapped
	m	()V	a	tick
	m	(Ldsa;)V	a	rebind
		p	1		wrapped
	m	()Z	b	isRemoved
	m	()Ljd;	c	getPos
	m	()Ljava/lang/String;	d	getType
	f	Ldsa;	a	ticker
c	dvj	net/minecraft/world/level/chunk/ChunkSection
	m	(Ldvq;Ldvr;)V	<init>	<init>
		p	1		blockStateContainer
		p	2		biomeContainer
	m	(Ljz;)V	<init>	<init>
		p	1		biomeRegistry
	m	()V	a	acquire
	m	(III)Ldtc;	a	getBlockState
		p	1		x
		p	2		y
		p	3		z
	m	(IIILdtc;)Ldtc;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(IIILdtc;Z)Ldtc;	a	setBlockState
		p	1		x
		p	2		y
		p	3		z
		p	4		state
		p	5		lock
	m	(Lddz;Ldef$f;III)V	a	fillBiomesFromNoise
		p	1		biomeSupplier
		p	2		sampler
		p	3		x
		p	4		y
		p	5		z
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()V	b	release
	m	(III)Lepe;	b	getFluidState
		p	1		x
		p	2		y
		p	3		z
	m	(Lvw;)V	b	readBiomes
		p	1		buf
	m	()Z	c	hasOnlyAir
	m	(III)Ljm;	c	getNoiseBiome
		p	1		x
		p	2		y
		p	3		z
	m	(Lvw;)V	c	write
		p	1		buf
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()V	g	recalcBlockCounts
	m	()Ldvq;	h	getStates
	m	()Ldvr;	i	getBiomes
	m	()I	j	getSerializedSize
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	S	e	nonEmptyBlockCount
	f	S	f	tickingBlockCount
	f	S	g	tickingFluidCount
	f	Ldvq;	h	states
	f	Ldvr;	i	biomes
c	dvj$a	net/minecraft/world/level/chunk/ChunkSection$a
	m	(Ldtc;I)V	a	accept
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
c	dvk	net/minecraft/world/level/chunk/LightChunk
	m	()Leoo;	B	getSkyLightSources
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
		p	1		callback
c	dvl	net/minecraft/world/level/chunk/ILightAccess
	m	(Lddf;Lkf;)V	a	onLightUpdate
		p	1		type
		p	2		pos
	m	(II)Ldvk;	c	getChunkForLighting
		p	1		chunkX
		p	2		chunkZ
	m	()Ldcc;	q	getLevel
c	dvm	net/minecraft/world/level/chunk/DataPaletteLinear
	m	(Ljr;ILdvp;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		bits
		p	3		listener
		p	4		list
	m	(Ljr;[Ljava/lang/Object;Ldvp;II)V	<init>	<init>
		p	1		idList
		p	2		array
		p	3		listener
		p	4		indexBits
		p	5		size
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILjr;Ldvp;Ljava/util/List;)Ldvo;	a	create
		p	0		bits
		p	1		idList
		p	2		listener
		p	3		list
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lvw;)V	b	write
		p	1		buf
	m	()Ldvo;	c	copy
	f	Ljr;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Ldvp;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
c	dvn	net/minecraft/world/level/chunk/MissingPaletteEntryException
	m	(I)V	<init>	<init>
		p	1		index
c	dvo	net/minecraft/world/level/chunk/DataPalette
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lvw;)V	b	write
		p	1		buf
	m	()Ldvo;	c	copy
c	dvo$a	net/minecraft/world/level/chunk/DataPalette$a
	m	(ILjr;Ldvp;Ljava/util/List;)Ldvo;	create	create
		p	1		bits
		p	2		idList
		p	3		listener
c	dvp	net/minecraft/world/level/chunk/DataPaletteExpandable
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
c	dvq	net/minecraft/world/level/chunk/DataPaletteBlock
	m	(Ljr;Ldvq$d;Ldvq$a;Laxc;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		dataProvider
		p	4		storage
		p	5		paletteEntries
	m	(Ljr;Ldvq$d;Ldvq$c;)V	<init>	<init>
		p	1		idList
		p	2		paletteProvider
		p	3		data
	m	(Ljr;Ljava/lang/Object;Ldvq$d;)V	<init>	<init>
		p	1		idList
		p	2		object
		p	3		paletteProvider
	m	()V	a	acquire
	m	(I)Ljava/lang/Object;	a	get
		p	1		index
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
		p	1		index
		p	2		value
	m	(Lazd$a;)Ljava/lang/String;	a	lambda$unpack$10
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
		p	2		instance
	m	(Ldvg;I)I	a	lambda$pack$11
		p	2		id
	m	(Ldvq$b;)V	a	count
		p	1		counter
	m	(Ldvq$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$13
		p	2		entry
	m	(Ldvq$c;I)Ldvq$c;	a	createOrReuseData
		p	1		previousData
		p	2		bits
	m	(Ldvq;)Ldvr;	a	lambda$codecRO$1
		p	0		result
	m	(Ldvr$b;Ljr;Ldvq$d;Ldvr$a;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$4
		p	3		serialized
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$12
		p	1		key
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Consumer;Ldvo;I)V	a	lambda$getAll$6
		p	2		id
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codecRW
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;Ldvr$b;)Lcom/mojang/serialization/Codec;	a	codec
		p	0		idList
		p	1		entryCodec
		p	2		provider
		p	3		defaultValue
		p	4		reader
	m	(Ljr;Ldvo;I)I	a	lambda$unpack$9
		p	2		id
	m	(Ljr;Ldvq$d;)Ldvr$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Ljr;Ldvq$d;Ldvr$a;)Lcom/mojang/serialization/DataResult;	a	unpack
		p	0		idList
		p	1		paletteProvider
		p	2		serialized
	m	(Ljr;Ldvq$d;Ldvr;)Ldvr$a;	a	lambda$codec$5
		p	2		container
	m	(Lvw;)V	a	read
		p	1		buf
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
		p	0		is
		p	1		applier
	m	()V	b	release
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)V	b	set
		p	1		index
		p	2		value
	m	(Ljr;Lcom/mojang/serialization/Codec;Ldvq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	b	codecRO
		p	0		idList
		p	1		entryCodec
		p	2		paletteProvider
		p	3		defaultValue
	m	(Ljr;Ldvq$d;Ldvr$a;)Lcom/mojang/serialization/DataResult;	b	lambda$codecRO$2
		p	0		idListx
		p	1		paletteProviderx
		p	2		serialized
	m	(Lvw;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	(IIILjava/lang/Object;)V	c	set
		p	1		x
		p	2		y
		p	3		z
		p	4		value
	m	(ILjava/lang/Object;)I	c	lambda$unpack$8
		p	0		id
		p	1		value
	m	()Ldvq;	d	copy
	m	(ILjava/lang/Object;)I	d	lambda$new$0
		p	0		newSize
		p	1		added
	m	()Ldvq;	e	recreate
	m	()Ljava/lang/String;	f	lambda$unpack$7
	m	(ILjava/lang/Object;)I	onResize	onResize
		p	1		newBits
		p	2		object
	f	I	a	MIN_PALETTE_BITS
	f	Ldvp;	b	dummyPaletteResize
	f	Ljr;	c	registry
	f	Ldvq$c;	d	data
	f	Ldvq$d;	e	strategy
	f	Lazn;	f	threadingDetector
c	dvq$a	net/minecraft/world/level/chunk/DataPaletteBlock$a
	m	()Ldvo$a;	a	factory
	m	(Ljr;Ldvp;I)Ldvq$c;	a	createData
		p	1		idList
		p	2		listener
		p	3		size
	m	()I	b	bits
	f	Ldvo$a;	a	factory
	f	I	b	bits
c	dvq$b	net/minecraft/world/level/chunk/DataPaletteBlock$b
	m	(Ljava/lang/Object;I)V	accept	accept
		p	1		object
		p	2		count
c	dvq$c	net/minecraft/world/level/chunk/DataPaletteBlock$c
	m	(Ldvq$a;Laxc;Ldvo;)V	<init>	<init>
		p	1		configuration
		p	2		storage
		p	3		palette
	m	()I	a	getSerializedSize
	m	(Ldvo;Laxc;)V	a	copyFrom
		p	1		palette
		p	2		storage
	m	(Lvw;)V	a	write
		p	1		buf
	m	()Ldvq$c;	b	copy
	m	()Ldvq$a;	c	configuration
	m	()Laxc;	d	storage
	m	()Ldvo;	e	palette
	f	Ldvq$a;	a	configuration
	f	Laxc;	b	storage
	f	Ldvo;	c	palette
c	dvq$d	net/minecraft/world/level/chunk/DataPaletteBlock$d
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	()I	a	size
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(Ljr;I)Ldvq$a;	a	getConfiguration
		p	1		idList
		p	2		bits
	m	(Ljr;I)I	b	calculateBitsForSerialization
		p	1		idList
		p	2		size
	f	Ldvo$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Ldvo$a;	b	LINEAR_PALETTE_FACTORY
	f	Ldvo$a;	c	HASHMAP_PALETTE_FACTORY
	f	Ldvq$d;	d	SECTION_STATES
	f	Ldvq$d;	e	SECTION_BIOMES
	f	Ldvo$a;	f	GLOBAL_PALETTE_FACTORY
	f	I	g	sizeBits
c	dvq$d$1	net/minecraft/world/level/chunk/DataPaletteBlock$d$1
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Ljr;I)Ldvq$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	dvq$d$2	net/minecraft/world/level/chunk/DataPaletteBlock$d$2
	m	(I)V	<init>	<init>
		p	1		edgeBits
	m	(Ljr;I)Ldvq$a;	a	getConfiguration
		p	1		idList
		p	2		bits
c	dvr	net/minecraft/world/level/chunk/PalettedContainerRO
	m	(III)Ljava/lang/Object;	a	get
		p	1		x
		p	2		y
		p	3		z
	m	(Ldvq$b;)V	a	count
		p	1		counter
	m	(Ljava/util/function/Consumer;)V	a	getAll
		p	1		action
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Ljr;Ldvq$d;)Ldvr$a;	a	pack
		p	1		idList
		p	2		paletteProvider
	m	(Lvw;)V	b	write
		p	1		buf
	m	()I	c	getSerializedSize
	m	()Ldvq;	e	recreate
c	dvr$a	net/minecraft/world/level/chunk/PalettedContainerRO$a
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
c	dvr$b	net/minecraft/world/level/chunk/PalettedContainerRO$b
	m	(Ljr;Ldvq$d;Ldvr$a;)Lcom/mojang/serialization/DataResult;	read	read
		p	1		idList
		p	2		paletteProvider
		p	3		serialize
c	dvs	net/minecraft/world/level/chunk/ProtoChunk
	m	(Ldcd;Ldvv;Ldcy;Ljz;Leab;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		world
		p	4		biomeRegistry
		p	5		blendingData
	m	(Ldcd;Ldvv;[Ldvj;Leyr;Leyr;Ldcy;Ljz;Leab;)V	<init>	<init>
		p	1		pos
		p	2		upgradeData
		p	3		sections
		p	4		blockTickScheduler
		p	5		fluidTickScheduler
		p	6		world
		p	7		biomeRegistry
		p	8		blendingData
	m	()Ljava/util/Map;	D	getBlockEntities
	m	()Ljava/util/List;	E	getEntities
	m	()Ljava/util/Map;	F	getBlockEntityNbts
	m	()Leyo;	G	unpackBlockTicks
	m	()Leyo;	H	unpackFluidTicks
	m	(Lbsr;)V	a	addEntity
		p	1		entity
	m	(Ldqh;)V	a	setBlockEntity
		p	1		blockEntity
	m	(Ldvz;)V	a	setPersistedStatus
		p	1		status
	m	(Ldym;)V	a	setBelowZeroRetrogen
		p	1		belowZeroRetrogen
	m	(Ldyu$a;)Ldux;	a	getCarvingMask
		p	1		step
	m	(Ldyu$a;Ldux;)V	a	setCarvingMask
		p	1		step
		p	2		carvingMask
	m	(Lejr;Lejz;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Leot;)V	a	setLightEngine
		p	1		lightingProvider
	m	(Leyr;)Leyo;	a	unpackTicks
		p	0		tickScheduler
	m	(Ljd;Ldtc;Z)Ldtc;	a	setBlockState
		p	1		pos
		p	2		state
		p	3		moved
	m	(Ljd;Ljo$a;)Lub;	a	getBlockEntityNbtForSaving
		p	1		pos
		p	2		registryLookup
	m	(SI)V	a	addPackedPostProcess
		p	1		packedPos
		p	2		index
	m	(SILdcd;)Ljd;	a	unpackOffsetCoordinates
		p	0		sectionRel
		p	1		sectionY
		p	2		chunkPos
	m	(Ljd;)Ldtc;	a_	getBlockState
		p	1		pos
	m	(Ldyu$a;)Ldux;	b	getOrCreateCarvingMask
		p	1		step
	m	(Lub;)V	b	addEntity
		p	1		entityNbt
	m	(Ljd;)Lepe;	b_	getFluidState
		p	1		pos
	m	(Ldyu$a;)Ldux;	c	lambda$getOrCreateCarvingMask$0
		p	1		step2
	m	(Ljd;)Ldqh;	c_	getBlockEntity
		p	1		pos
	m	(Ljd;)V	d	removeBlockEntity
		p	1		pos
	m	(Ljd;)V	e	markPosForPostprocessing
		p	1		pos
	m	(Ljd;)S	g	packOffsetCoordinates
		p	0		pos
	m	(III)Ljm;	getNoiseBiome	getNoiseBiome
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	()Ldvz;	j	getPersistedStatus
	m	()Leyw;	o	getBlockTicks
	m	()Leyw;	p	getFluidTicks
	m	()Lduy$a;	q	getTicksForSerialization
	m	()Ldym;	x	getBelowZeroRetrogen
	m	()Ldcy;	z	getHeightAccessorForGeneration
	f	Leot;	n	lightEngine
	f	Ldvz;	o	status
	f	Ljava/util/List;	p	entities
	f	Ljava/util/Map;	q	carvingMasks
	f	Ldym;	r	belowZeroRetrogen
	f	Leyr;	s	blockTicks
	f	Leyr;	t	fluidTicks
c	dvt	net/minecraft/world/level/chunk/SingleValuePalette
	m	(Ljr;Ldvp;Ljava/util/List;)V	<init>	<init>
		p	1		idList
		p	2		listener
		p	3		entries
	m	()I	a	getSerializedSize
	m	(I)Ljava/lang/Object;	a	valueFor
		p	1		id
	m	(ILjr;Ldvp;Ljava/util/List;)Ldvo;	a	create
		p	0		bitSize
		p	1		idList
		p	2		listener
		p	3		entries
	m	(Ljava/lang/Object;)I	a	idFor
		p	1		object
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
		p	1		predicate
	m	(Lvw;)V	a	read
		p	1		buf
	m	()I	b	getSize
	m	(Lvw;)V	b	write
		p	1		buf
	m	()Ldvo;	c	copy
	f	Ljr;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Ldvp;	c	resizeHandler
c	dvu	net/minecraft/world/level/chunk/StructureAccess
	m	(Lejr;)Lejz;	a	getStartForStructure
		p	1		structure
	m	(Lejr;J)V	a	addReferenceForStructure
		p	1		structure
		p	2		reference
	m	(Lejr;Lejz;)V	a	setStartForStructure
		p	1		structure
		p	2		start
	m	(Lejr;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
		p	1		structure
	m	(Ljava/util/Map;)V	b	setAllReferences
		p	1		structureReferences
	m	()Ljava/util/Map;	h	getAllReferences
c	dvv	net/minecraft/world/level/chunk/ChunkConverter
	m	(Ldcy;)V	<init>	<init>
		p	1		world
	m	(Lub;Ldcy;)V	<init>	<init>
		p	1		nbt
		p	2		world
	m	()Z	a	isEmpty
	m	(Ldcw;Ldvv$a;)V	a	lambda$upgrade$6
		p	1		logic
	m	(Ldcw;Leys;)V	a	lambda$upgrade$5
		p	1		tick
	m	(Ldfy;)Ljava/lang/String;	a	lambda$write$7
		p	0		block
	m	(Ldtc;Lji;Ldcx;Ljd;Ljd;)Ldtc;	a	updateState
		p	0		oldState
		p	1		dir
		p	2		world
		p	3		currentPos
		p	4		otherPos
	m	(Ldvi;)V	a	upgrade
		p	1		chunk
	m	(Ldvi;Ljj;)V	a	upgradeSides
		p	0		chunk
		p	1		side
	m	(Lepd;)Ljava/lang/String;	a	lambda$write$9
		p	0		fluid
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$new$3
		p	0		id
	m	(Lub;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V	a	loadTicks
		p	0		nbt
		p	1		key
		p	2		nameToType
		p	3		ticks
	m	(Luh;Leys;)V	a	lambda$write$10
		p	0		tick
		p	1		fluidTick
	m	()Lub;	b	write
	m	(Ldcw;Leys;)V	b	lambda$upgrade$4
		p	1		tick
	m	(Ldvi;)V	b	upgradeInside
		p	1		chunk
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$new$1
		p	0		id
	m	(Luh;Leys;)V	b	lambda$write$8
		p	0		tick
		p	1		blockTick
	m	()Ljava/util/Optional;	c	lambda$new$2
	m	()Ljava/util/Optional;	d	lambda$new$0
	f	Ldvv;	a	EMPTY
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Ljj;	d	DIRECTIONS
	f	Ljava/util/EnumSet;	e	sides
	f	Ljava/util/List;	f	neighborBlockTicks
	f	Ljava/util/List;	g	neighborFluidTicks
	f	[[I	h	index
	f	Ljava/util/Map;	i	MAP
	f	Ljava/util/Set;	j	CHUNKY_FIXERS
c	dvv$a	net/minecraft/world/level/chunk/ChunkConverter$a
	m	(Ldcx;)V	a	processChunk
		p	1		world
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dvv$b	net/minecraft/world/level/chunk/ChunkConverter$Type
	m	(Ljava/lang/String;IZ[Ldfy;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	(Ljava/lang/String;I[Ldfy;)V	<init>	<init>
		p	3		blocks
	m	()[Ldvv$b;	a	$values
	f	Ldvv$b;	a	BLACKLIST
	f	Ldvv$b;	b	DEFAULT
	f	Ldvv$b;	c	CHEST
	f	Ldvv$b;	d	LEAVES
	f	Ldvv$b;	e	STEM_BLOCK
	f	[Lji;	f	DIRECTIONS
	f	[Ldvv$b;	g	$VALUES
c	dvv$b$1	net/minecraft/world/level/chunk/ChunkConverter$Type$1
	m	(Ljava/lang/String;I[Ldfy;)V	<init>	<init>
		p	3		blocks
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dvv$b$2	net/minecraft/world/level/chunk/ChunkConverter$Type$2
	m	(Ljava/lang/String;I[Ldfy;)V	<init>	<init>
		p	3		blocks
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dvv$b$3	net/minecraft/world/level/chunk/ChunkConverter$Type$3
	m	(Ljava/lang/String;I[Ldfy;)V	<init>	<init>
		p	3		blocks
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dvv$b$4	net/minecraft/world/level/chunk/ChunkConverter$Type$4
	m	(Ljava/lang/String;IZ[Ldfy;)V	<init>	<init>
		p	3		addCallback
		p	4		blocks
	m	()Ljava/util/List;	a	lambda$$0
	m	(Ldcx;)V	a	processChunk
		p	1		world
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
	f	Ljava/lang/ThreadLocal;	g	queue
c	dvv$b$5	net/minecraft/world/level/chunk/ChunkConverter$Type$5
	m	(Ljava/lang/String;I[Ldfy;)V	<init>	<init>
		p	3		blocks
	m	(Ldtc;Lji;Ldtc;Ldcx;Ljd;Ljd;)Ldtc;	a	updateShape
		p	1		oldState
		p	2		direction
		p	3		otherState
		p	4		world
		p	5		currentPos
		p	6		otherPos
c	dvx	net/minecraft/world/level/chunk/status/ChunkDependencies
	m	(Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	1		dependencies
	m	()Lcom/google/common/collect/ImmutableList;	a	asList
	m	(I)Ldvz;	a	get
		p	1		index
	m	(Ldvz;)I	a	getRadiusOf
		p	1		status
	m	()I	b	size
	m	()I	c	getRadius
	f	Lcom/google/common/collect/ImmutableList;	a	dependencyByRadius
	f	[I	b	radiusByDependency
c	dvy	net/minecraft/world/level/chunk/status/ChunkPyramid
	m	()Lcom/google/common/collect/ImmutableList;	a	steps
	m	(Ldvz;)Ldwc;	a	getStepTo
		p	1		status
	m	(Ldwc$a;)Ldwc$a;	a	lambda$static$23
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	b	lambda$static$22
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	c	lambda$static$21
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	d	lambda$static$20
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	e	lambda$static$19
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	f	lambda$static$18
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	g	lambda$static$17
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	h	lambda$static$16
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	i	lambda$static$15
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	j	lambda$static$14
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	k	lambda$static$13
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	l	lambda$static$12
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	m	lambda$static$11
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	n	lambda$static$10
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	o	lambda$static$9
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	p	lambda$static$8
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	q	lambda$static$7
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	r	lambda$static$6
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	s	lambda$static$5
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	t	lambda$static$4
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	u	lambda$static$3
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	v	lambda$static$2
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	w	lambda$static$1
		p	0		builder
	m	(Ldwc$a;)Ldwc$a;	x	lambda$static$0
		p	0		builder
	f	Ldvy;	a	GENERATION_PYRAMID
	f	Ldvy;	b	LOADING_PYRAMID
	f	Lcom/google/common/collect/ImmutableList;	c	steps
c	dvy$a	net/minecraft/world/level/chunk/status/ChunkPyramid$a
	m	()Ldvy;	a	build
	m	(Ldvz;Ljava/util/function/UnaryOperator;)Ldvy$a;	a	step
		p	1		status
		p	2		stepFactory
	f	Ljava/util/List;	a	steps
c	dvz	net/minecraft/world/level/chunk/status/ChunkStatus
	m	(Ldvz;Ljava/util/EnumSet;Ldwd;)V	<init>	<init>
		p	1		previous
		p	2		heightMapTypes
		p	3		chunkType
	m	()Ljava/util/List;	a	getStatusList
	m	(Ldvz;)Z	a	isOrAfter
		p	1		other
	m	(Ldvz;Ldvz;)Ldvz;	a	max
		p	0		a
		p	1		b
	m	(Ljava/lang/String;)Ldvz;	a	byName
		p	0		id
	m	(Ljava/lang/String;Ldvz;Ljava/util/EnumSet;Ldwd;)Ldvz;	a	register
		p	0		id
		p	1		previous
		p	2		heightMapTypes
		p	3		chunkType
	m	()I	b	getIndex
	m	(Ldvz;)Z	b	isAfter
		p	1		other
	m	()Ldvz;	c	getParent
	m	(Ldvz;)Z	c	isOrBefore
		p	1		other
	m	()Ldwd;	d	getChunkType
	m	(Ldvz;)Z	d	isBefore
		p	1		other
	m	()Ljava/util/EnumSet;	e	heightmapsAfter
	m	()Ljava/lang/String;	f	getName
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	b	FINAL_HEIGHTMAPS
	f	Ldvz;	c	EMPTY
	f	Ldvz;	d	STRUCTURE_STARTS
	f	Ldvz;	e	STRUCTURE_REFERENCES
	f	Ldvz;	f	BIOMES
	f	Ldvz;	g	NOISE
	f	Ldvz;	h	SURFACE
	f	Ldvz;	i	CARVERS
	f	Ldvz;	j	FEATURES
	f	Ldvz;	k	INITIALIZE_LIGHT
	f	Ldvz;	l	LIGHT
	f	Ldvz;	m	SPAWN
	f	Ldvz;	n	FULL
	f	Ljava/util/EnumSet;	o	WORLDGEN_HEIGHTMAPS
	f	I	p	index
	f	Ldvz;	q	parent
	f	Ldwd;	r	chunkType
	f	Ljava/util/EnumSet;	s	heightmapsAfter
c	dwa	net/minecraft/world/level/chunk/status/ChunkStatusTask
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
		p	1		context
		p	2		step
		p	4		chunk
c	dwb	net/minecraft/world/level/chunk/status/ChunkStatusTasks
	m	(Laqu;Ldvs;Ldvi;)V	a	lambda$full$1
	m	(Laqu;Ljava/util/List;)V	a	postLoadProtoChunk
		p	0		world
		p	1		entities
	m	(Lduy;)Z	a	isLighted
		p	0		chunk
	m	(Lduy;Ldwe;Laqn;)Lduy;	a	lambda$full$2
	m	(Ldwe;Ldcd;Laqn;Ljava/lang/Runnable;)V	a	lambda$full$3
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	passThrough
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Lduy;)Lduy;	b	lambda$generateNoise$0
		p	0		populated
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	b	generateStructureStarts
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	c	loadStructureStarts
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	d	generateStructureReferences
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	e	generateBiomes
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	f	generateNoise
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	g	generateSurface
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	h	generateCarvers
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	i	generateFeatures
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	j	initializeLight
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	k	light
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	l	generateSpawn
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
	m	(Ldwe;Ldwc;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	m	full
		p	0		context
		p	1		step
		p	2		chunks
		p	3		chunk
c	dwc	net/minecraft/world/level/chunk/status/ChunkStep
	m	()Ldvz;	a	targetStatus
	m	(Lbno;Lduy;)Lduy;	a	lambda$apply$0
		p	2		generated
	m	(Lduy;Lbno;)Lduy;	a	completeChunkGeneration
		p	1		chunk
		p	2		finishCallback
	m	(Ldvz;)I	a	getAccumulatedRadiusOf
		p	1		status
	m	(Ldwe;Lazi;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	apply
		p	1		context
		p	3		chunk
	m	()Ldvx;	b	directDependencies
	m	()Ldvx;	c	accumulatedDependencies
	m	()I	d	blockStateWriteRadius
	m	()Ldwa;	e	task
	f	Ldvz;	a	targetStatus
	f	Ldvx;	b	directDependencies
	f	Ldvx;	c	accumulatedDependencies
	f	I	d	blockStateWriteRadius
	f	Ldwa;	e	task
c	dwc$a	net/minecraft/world/level/chunk/status/ChunkStep$a
	m	(Ldvz;)V	<init>	<init>
		p	1		targetStatus
	m	(Ldvz;Ldwc;)V	<init>	<init>
		p	1		blockStateWriteRadius
		p	2		previousStep
	m	()Ldwc;	a	build
	m	(I)Ldwc$a;	a	blockStateWriteRadius
		p	1		blockStateWriteRadius
	m	(Ldvz;)I	a	getRadiusOfParent
		p	1		status
	m	(Ldvz;I)Ldwc$a;	a	addRequirement
		p	1		status
		p	2		level
	m	(Ldwa;)Ldwc$a;	a	setTask
		p	1		task
	m	()[Ldvz;	b	buildAccumulatedDependencies
	f	Ldvz;	a	status
	f	Ldwc;	b	parent
	f	[Ldvz;	c	directDependenciesByRadius
	f	I	d	blockStateWriteRadius
	f	Ldwa;	e	task
c	dwd	net/minecraft/world/level/chunk/status/ChunkType
	m	()[Ldwd;	a	$values
	f	Ldwd;	a	PROTOCHUNK
	f	Ldwd;	b	LEVELCHUNK
	f	[Ldwd;	c	$VALUES
c	dwe	net/minecraft/world/level/chunk/status/WorldGenContext
	m	()Laqu;	a	level
	m	()Lduz;	b	generator
	m	()Lenu;	c	structureManager
	m	()Laqx;	d	lightEngine
	m	()Lbpj;	e	mainThreadMailBox
	f	Laqu;	a	level
	f	Lduz;	b	generator
	f	Lenu;	c	structureManager
	f	Laqx;	d	lightEngine
	f	Lbpj;	e	mainThreadMailBox
c	dwg	net/minecraft/world/level/chunk/storage/ChunkIOErrorReporter
	m	(Ldcd;Ldcd;)Lz;	a	createMisplacedChunkReport
		p	0		actualPos
		p	1		expectedPos
	m	(Ldcd;Ldcd;Ldws;)V	a	reportMisplacedChunk
		p	1		actualPos
		p	2		expectedPos
		p	3		key
	m	(Ljava/lang/Throwable;Ldws;Ldcd;)V	a	reportChunkLoadFailure
		p	1		exception
		p	2		key
		p	3		chunkPos
	m	(Ljava/lang/Throwable;Ldws;Ldcd;)V	b	reportChunkSaveFailure
		p	1		exception
		p	2		key
		p	3		chunkPos
c	dwh	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Ldcd;Luv;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
c	dwi	net/minecraft/world/level/chunk/storage/ChunkRegionLoader
	m	(Laqu;Lces;Ldws;Ldcd;Lub;)Ldvs;	a	read
		p	0		world
		p	1		poiStorage
		p	2		key
		p	3		chunkPos
		p	4		nbt
	m	(Laqu;Lduy;)Lub;	a	write
		p	0		world
		p	1		chunk
	m	(Laqu;Lub;)Ldvi$c;	a	postLoadChunk
		p	0		world
		p	1		nbt
	m	(Laqu;Lub;Lduy$a;)V	a	saveTicks
		p	0		world
		p	1		nbt
		p	2		tickSchedulers
	m	(Ldcd;ILjava/lang/String;)V	a	logErrors
		p	0		chunkPos
		p	1		y
		p	2		message
	m	(Ldcd;Lakr;J)Z	a	lambda$unpackStructureReferences$11
		p	2		packedPos
	m	(Ldfy;)Ljava/lang/String;	a	lambda$saveTicks$8
		p	0		block
	m	(Lekh;Ldcd;Ljava/util/Map;Ljava/util/Map;)Lub;	a	packStructureData
		p	0		context
		p	1		pos
		p	2		starts
		p	3		references
	m	(Lekh;Lub;J)Ljava/util/Map;	a	unpackStructureStart
		p	0		context
		p	1		nbt
		p	2		worldSeed
	m	(Lepd;)Ljava/lang/String;	a	lambda$saveTicks$9
		p	0		fluid
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	lambda$read$5
		p	0		id
	m	(Ljz;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
		p	0		biomeRegistry
	m	(Lka;Ldcd;Lub;)Ljava/util/Map;	a	unpackStructureReferences
		p	0		registryManager
		p	1		pos
		p	2		nbt
	m	(Lub;)Ldwd;	a	getChunkTypeFromTag
		p	0		nbt
	m	(Lub;Ljava/lang/String;)Luh;	a	getListOfCompoundsOrNull
		p	0		nbt
		p	1		key
	m	(Lub;Luy;)V	a	lambda$write$7
	m	(Luh;Laqu;Luh;Ldvi;)V	a	lambda$postLoadChunk$10
		p	3		chunk
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Luh;	a	packOffsets
		p	0		lists
	m	(Ldcd;ILjava/lang/String;)V	b	lambda$read$1
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	lambda$read$4
		p	0		id
	m	(Lub;Luy;)V	b	lambda$write$6
	m	(Ldcd;ILjava/lang/String;)V	c	lambda$read$0
		p	2		errorMessage
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	lambda$read$3
		p	0		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$read$2
		p	0		id
	f	Ljava/lang/String;	a	X_POS_TAG
	f	Ljava/lang/String;	b	Z_POS_TAG
	f	Ljava/lang/String;	c	HEIGHTMAPS_TAG
	f	Ljava/lang/String;	d	IS_LIGHT_ON_TAG
	f	Ljava/lang/String;	e	SECTIONS_TAG
	f	Ljava/lang/String;	f	BLOCK_LIGHT_TAG
	f	Ljava/lang/String;	g	SKY_LIGHT_TAG
	f	Lcom/mojang/serialization/Codec;	h	BLOCK_STATE_CODEC
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/lang/String;	j	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	k	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	l	FLUID_TICKS_TAG
c	dwi$a	net/minecraft/world/level/chunk/storage/ChunkRegionLoader$a
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		message
c	dwj	net/minecraft/world/level/chunk/storage/IChunkLoader
	m	(Ldws;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		dataFixer
		p	4		dsync
	m	(Lakq;Ljava/util/function/Supplier;)Lejm;	a	getLegacyStructureHandler
		p	1		worldKey
		p	2		stateManagerGetter
	m	(Lakq;Ljava/util/function/Supplier;Lub;Ljava/util/Optional;)Lub;	a	upgradeChunkTag
		p	1		worldKey
		p	2		persistentStateManagerFactory
		p	3		nbt
		p	4		generatorCodecKey
	m	(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;	a	write
		p	1		chunkPos
		p	2		nbt
	m	(Lub;)I	a	getVersion
		p	0		nbt
	m	(Lub;Lakq;)V	a	lambda$injectDatafixingContext$0
		p	1		key
	m	(Lub;Lakq;Ljava/util/Optional;)V	a	injectDatafixingContext
		p	0		nbt
		p	1		worldKey
		p	2		generatorCodecKey
	m	(Ldcd;I)Z	b	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Lub;)V	b	removeDatafixingContext
		p	0		nbt
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	d	read
		p	1		chunkPos
	m	(Ldcd;)V	e	handleLegacyStructureIndex
		p	1		chunkPos
	m	()V	o	flushWorker
	m	()Ldwh;	p	chunkScanner
	m	()Ldws;	q	storageInfo
	f	Ldwl;	a	worker
	f	Lejm;	b	legacyStructureHandler
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
c	dwk	net/minecraft/world/level/chunk/storage/EntityStorage
	m	(Ldwu;Laqu;Ljava/util/concurrent/Executor;)V	<init>	<init>
		p	1		storage
		p	2		world
		p	3		executor
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reportLoadFailureIfPresent$3
		p	2		throwable
	m	(Ldcd;Ljava/util/Optional;)Ldxe;	a	lambda$loadEntities$0
		p	2		nbt
	m	(Ldxe;)V	a	storeEntities
		p	1		dataList
	m	(Ljava/util/concurrent/CompletableFuture;Ldcd;)V	a	reportSaveFailureIfPresent
		p	1		future
		p	2		pos
	m	(Lub;)Ldcd;	a	readChunkPos
		p	0		chunkNbt
	m	(Lub;Ldcd;)V	a	writeChunkPos
		p	0		chunkNbt
		p	1		pos
	m	(Luh;Lbsr;)V	a	lambda$storeEntities$1
		p	1		entity
	m	(Z)V	a	flush
		p	1		sync
	m	(Ldcd;)Ldxe;	b	emptyChunk
		p	0		pos
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/lang/Object;	b	lambda$reportSaveFailureIfPresent$2
		p	2		throwable
	m	(Ljava/util/concurrent/CompletableFuture;Ldcd;)V	b	reportLoadFailureIfPresent
		p	1		future
		p	2		pos
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	ENTITIES_TAG
	f	Ljava/lang/String;	c	POSITION_TAG
	f	Laqu;	d	level
	f	Ldwu;	e	simpleRegionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	emptyChunks
	f	Lbpk;	g	entityDeserializerQueue
c	dwl	net/minecraft/world/level/chunk/storage/IOWorker
	m	(Ldws;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		dsync
	m	()Ldws;	a	storageInfo
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$6
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	getOrCreateOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbpj;)Lbpm$b;	a	lambda$close$16
		p	0		listener
	m	(Lbpj;Ljava/util/function/Supplier;)V	a	lambda$submitTask$13
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	a	loadAsync
		p	1		pos
	m	(Ldcd;I)Z	a	isOldChunkAround
		p	1		chunkPos
		p	2		checkRadius
	m	(Ldcd;Ldwl$a;)V	a	runStore
		p	1		pos
		p	2		result
	m	(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;	a	store
		p	1		pos
		p	2		nbt
	m	(Ldcd;Luv;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
		p	1		pos
		p	2		scanner
	m	(Ldwl$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$5
		p	0		result
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$11
		p	1		void_
	m	(Ljava/util/BitSet;Ldcd;)V	a	lambda$createOldDataForRegion$0
		p	2		chunkPos
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
		p	1		task
	m	(Ljava/util/function/Supplier;Lbpj;)Lbpm$b;	a	lambda$submitTask$14
		p	2		listener
	m	(Lub;)Z	a	isOldChunk
		p	1		nbt
	m	(Lub;Ldcd;)Ldwl$a;	a	lambda$store$2
		p	1		pos2
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
		p	1		sync
	m	()V	b	storePendingChunk
	m	(II)Ljava/util/concurrent/CompletableFuture;	b	createOldDataForRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lbpj;)V	b	lambda$close$15
	m	(Ldcd;)Lcom/mojang/datafixers/util/Either;	b	lambda$loadAsync$4
	m	(Ldcd;Lub;)Lcom/mojang/datafixers/util/Either;	b	lambda$store$3
	m	(Ldcd;Luv;)Lcom/mojang/datafixers/util/Either;	b	lambda$scanChunk$12
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$9
		p	1		void_
	m	()V	c	tellStorePending
	m	(II)Ljava/util/BitSet;	c	lambda$createOldDataForRegion$1
	m	()Lcom/mojang/datafixers/util/Either;	d	lambda$synchronize$10
	m	()Lcom/mojang/datafixers/util/Either;	e	lambda$synchronize$8
	m	()Lcom/mojang/datafixers/util/Either;	f	lambda$synchronize$7
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Lbpk;	c	mailbox
	f	Ldwq;	d	storage
	f	Ljava/util/Map;	e	pendingWrites
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	f	regionCacheForBlender
	f	I	g	REGION_CACHE_SIZE
c	dwl$a	net/minecraft/world/level/chunk/storage/IOWorker$a
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	()Lub;	a	copyData
	f	Lub;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
c	dwl$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	m	()[Ldwl$b;	a	$values
	f	Ldwl$b;	a	FOREGROUND
	f	Ldwl$b;	b	BACKGROUND
	f	Ldwl$b;	c	SHUTDOWN
	f	[Ldwl$b;	d	$VALUES
c	dwm	net/minecraft/world/level/chunk/storage/RecreatingChunkStorage
	m	(Ldws;Ljava/nio/file/Path;Ldws;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		outputStorageKey
		p	4		outputDirectory
		p	5		dataFixer
		p	6		dsync
	m	(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;	a	write
		p	1		chunkPos
		p	2		nbt
	f	Ldwl;	a	writeWorker
	f	Ljava/nio/file/Path;	b	writeFolder
c	dwn	net/minecraft/world/level/chunk/storage/RecreatingSimpleRegionStorage
	m	(Ldws;Ljava/nio/file/Path;Ldws;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLazw;)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		outputStorageKey
		p	4		outputDirectory
		p	5		dataFixer
		p	6		dsync
		p	7		dataFixTypes
	m	(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;	a	write
		p	1		pos
		p	2		nbt
	f	Ldwl;	a	writeWorker
	f	Ljava/nio/file/Path;	b	writeFolder
c	dwo	net/minecraft/world/level/chunk/storage/RegionFileBitSet
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
	m	(I)I	a	allocate
		p	1		size
	m	(II)V	a	force
		p	1		start
		p	2		size
	m	(II)V	b	free
		p	1		start
		p	2		size
	f	Ljava/util/BitSet;	a	used
c	dwp	net/minecraft/world/level/chunk/storage/RegionFile
	m	(Ldws;Ljava/nio/file/Path;Ljava/nio/file/Path;Ldwr;Z)V	<init>	<init>
		p	1		storageKey
		p	2		path
		p	3		directory
		p	4		compressionFormat
		p	5		dsync
	m	(Ldws;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		path
		p	4		dsync
	m	()Ljava/nio/file/Path;	a	getPath
	m	(B)Z	a	isExternalStreamChunk
		p	0		flags
	m	(I)I	a	getNumSectors
		p	0		sectorData
	m	(II)I	a	packSectorOffset
		p	1		offset
		p	2		size
	m	(Ldcd;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
		p	1		pos
	m	(Ldcd;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
		p	1		pos
		p	2		flags
	m	(Ldcd;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
		p	1		pos
		p	2		flags
		p	3		stream
	m	(Ldcd;Ljava/nio/ByteBuffer;)V	a	write
		p	1		pos
		p	2		buf
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
		p	0		buffer
		p	1		length
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Ldwp$b;	a	writeToExternalFile
		p	1		path
		p	2		buf
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	()V	b	flush
	m	(B)B	b	getExternalChunkVersion
		p	0		flags
	m	(I)I	b	getSectorNumber
		p	0		sectorData
	m	(Ldcd;)Z	b	doesChunkExist
		p	1		pos
	m	()I	c	getTimestamp
	m	(I)I	c	sizeToSectors
		p	0		byteCount
	m	(Ldcd;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
		p	1		pos
	m	()Ljava/nio/ByteBuffer;	d	createExternalStub
	m	(Ldcd;)V	d	clear
		p	1		pos
	m	()V	e	writeHeader
	m	(Ldcd;)Z	e	hasChunk
		p	1		pos
	m	()V	f	padToFullSector
	m	(Ldcd;)Ljava/nio/file/Path;	f	getExternalChunkPath
		p	1		chunkPos
	m	(Ldcd;)I	g	getOffset
		p	1		pos
	m	(Ldcd;)I	h	getOffsetIndex
		p	0		pos
	m	(Ldcd;)V	i	lambda$write$0
	f	I	a	SECTOR_INTS
	f	Ldwo;	b	usedSectors
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Ldws;	l	info
	f	Ljava/nio/file/Path;	m	path
	f	Ljava/nio/channels/FileChannel;	n	file
	f	Ljava/nio/file/Path;	o	externalFileDir
	f	Ldwr;	p	version
	f	Ljava/nio/ByteBuffer;	q	header
	f	Ljava/nio/IntBuffer;	r	offsets
	f	Ljava/nio/IntBuffer;	s	timestamps
c	dwp$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	m	(Ldwp;Ldcd;)V	<init>	<init>
		p	2		pos
	f	Ldwp;	a	this$0
	f	Ldcd;	b	pos
c	dwp$b	net/minecraft/world/level/chunk/storage/RegionFile$b
c	dwq	net/minecraft/world/level/chunk/storage/RegionFileCache
	m	(Ldws;Ljava/nio/file/Path;Z)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		dsync
	m	()V	a	flush
	m	(Ldcd;)Lub;	a	read
		p	1		pos
	m	(Ldcd;Lub;)V	a	write
		p	1		pos
		p	2		nbt
	m	(Ldcd;Luv;)V	a	scanChunk
		p	1		chunkPos
		p	2		scanner
	m	()Ldws;	b	info
	m	(Ldcd;)Ldwp;	b	getRegionFile
		p	1		pos
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Ldws;	d	info
	f	Ljava/nio/file/Path;	e	folder
	f	Z	f	sync
c	dwr	net/minecraft/world/level/chunk/storage/RegionFileCompression
	m	(ILjava/lang/String;Ldwr$a;Ldwr$a;)V	<init>	<init>
		p	1		id
		p	2		name
		p	3		inputStreamWrapper
		p	4		outputStreamWrapper
	m	()Ldwr;	a	getSelected
	m	(I)Ldwr;	a	fromId
		p	0		id
	m	(Ldwr;)Ldwr;	a	register
		p	0		version
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
		p	1		inputStream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
		p	1		outputStream
	m	(Ljava/lang/String;)V	a	configure
		p	0		name
	m	()I	b	getId
	m	(I)Z	b	isValidVersion
		p	0		id
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$6
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$7
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$4
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$5
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$2
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$3
		p	0		stream
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	e	lambda$static$0
		p	0		stream
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	e	lambda$static$1
		p	0		stream
	f	Ldwr;	a	VERSION_GZIP
	f	Ldwr;	b	VERSION_DEFLATE
	f	Ldwr;	c	VERSION_NONE
	f	Ldwr;	d	VERSION_LZ4
	f	Ldwr;	e	VERSION_CUSTOM
	f	Ldwr;	f	DEFAULT
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	VERSIONS
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	i	VERSIONS_BY_NAME
	f	Ldwr;	j	selected
	f	I	k	id
	f	Ljava/lang/String;	l	optionName
	f	Ldwr$a;	m	inputWrapper
	f	Ldwr$a;	n	outputWrapper
c	dwr$a	net/minecraft/world/level/chunk/storage/RegionFileCompression$a
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
		p	1		object
c	dws	net/minecraft/world/level/chunk/storage/RegionStorageInfo
	m	()Ljava/lang/String;	a	level
	m	(Ljava/lang/String;)Ldws;	a	withTypeSuffix
		p	1		suffix
	m	()Lakq;	b	dimension
	m	()Ljava/lang/String;	c	type
	f	Ljava/lang/String;	a	level
	f	Lakq;	b	dimension
	f	Ljava/lang/String;	c	type
c	dwt	net/minecraft/world/level/chunk/storage/RegionFileSection
	m	(Ldwu;Ljava/util/function/Function;Ljava/util/function/Function;Lka;Ldwg;Ldcy;)V	<init>	<init>
		p	1		storageAccess
		p	2		codecFactory
		p	3		factory
		p	4		registryManager
		p	5		errorHandler
		p	6		world
	m	()Z	a	hasWork
	m	(J)V	a	setDirty
		p	1		pos
	m	(JLcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$readColumn$3
		p	3		dynamic
	m	(JZLjava/lang/Object;)V	a	lambda$readColumn$4
		p	4		sections
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
		p	0		dynamic
	m	(Ldcd;)V	a	flush
		p	1		pos
	m	(Ldcd;I)J	a	getKey
		p	0		chunkPos
		p	1		y
	m	(Ldcd;Lakp;Lub;)V	a	readColumn
		p	1		pos
		p	2		ops
		p	3		nbt
	m	(Ldcd;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeColumn
		p	1		chunkPos
		p	2		ops
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$writeColumn$5
		p	2		throwable
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeColumn$7
		p	3		object
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
		p	1		shouldKeepTicking
	m	(J)V	b	onSectionLoad
		p	1		pos
	m	(Ldcd;)V	b	readColumn
		p	1		pos
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/util/Optional;	b	lambda$tryRead$1
		p	2		throwable
	m	(J)Ljava/util/Optional;	c	get
		p	1		pos
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	c	tryRead
		p	1		pos
	m	(J)Ljava/util/Optional;	d	getOrLoad
		p	1		pos
	m	(Ldcd;)V	d	writeColumn
		p	1		pos
	m	(J)Z	e	outsideStoredRange
		p	1		pos
	m	(J)Ljava/lang/Object;	f	getOrCreate
		p	1		pos
	m	(J)V	g	lambda$writeColumn$6
	m	(J)V	h	lambda$readColumn$2
	m	(J)V	i	lambda$getOrCreate$0
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Ldcy;	c	levelHeightAccessor
	f	Ldwu;	d	simpleRegionStorage
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirty
	f	Ljava/util/function/Function;	g	codec
	f	Ljava/util/function/Function;	h	factory
	f	Lka;	i	registryAccess
	f	Ldwg;	j	errorReporter
c	dwu	net/minecraft/world/level/chunk/storage/SimpleRegionStorage
	m	(Ldws;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLazw;)V	<init>	<init>
		p	1		storageKey
		p	2		directory
		p	3		dataFixer
		p	4		dsync
		p	5		dataFixTypes
	m	()Ldws;	a	storageInfo
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	upgradeChunkTag
		p	1		nbt
		p	2		oldVersion
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	a	read
		p	1		pos
	m	(Ldcd;Lub;)Ljava/util/concurrent/CompletableFuture;	a	write
		p	1		pos
		p	2		nbt
	m	(Lub;I)Lub;	a	upgradeChunkTag
		p	1		nbt
		p	2		oldVersion
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
		p	1		sync
	f	Ldwl;	a	worker
	f	Lcom/mojang/datafixers/DataFixer;	b	fixerUpper
	f	Lazw;	c	dataFixType
c	dww	net/minecraft/world/level/dimension/BuiltinDimensionTypes
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	f	Lakq;	a	OVERWORLD
	f	Lakq;	b	NETHER
	f	Lakq;	c	END
	f	Lakq;	d	OVERWORLD_CAVES
	f	Lakr;	e	OVERWORLD_EFFECTS
	f	Lakr;	f	NETHER_EFFECTS
	f	Lakr;	g	END_EFFECTS
c	dwx	dwx
	f	I	a	OVERWORLD_MIN_Y
	f	I	b	OVERWORLD_LEVEL_HEIGHT
	f	I	c	OVERWORLD_GENERATION_HEIGHT
	f	I	d	OVERWORLD_LOGICAL_HEIGHT
	f	I	e	NETHER_MIN_Y
	f	I	f	NETHER_LEVEL_HEIGHT
	f	I	g	NETHER_GENERATION_HEIGHT
	f	I	h	NETHER_LOGICAL_HEIGHT
	f	I	i	END_MIN_Y
	f	I	j	END_LEVEL_HEIGHT
	f	I	k	END_GENERATION_HEIGHT
	f	I	l	END_LOGICAL_HEIGHT
c	dwy	net/minecraft/world/level/dimension/DimensionManager
	m	(Ljava/util/OptionalLong;ZZZZDZZIIILawu;Lakr;FLdwy$a;)V	<init>	<init>
		p	1		fixedTime
		p	2		hasSkylight
		p	4		ultrawarm
		p	6		coordinateScale
		p	9		piglinSafe
	m	()Z	a	hasFixedTime
	m	(J)F	a	timeOfDay
		p	1		time
	m	(Lakq;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
		p	0		worldRef
		p	1		worldDirectory
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	parseLegacy
		p	0		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldwy;Ldwy;)D	a	getTeleportationScale
		p	0		fromDimension
		p	1		toDimension
	m	()Z	b	piglinSafe
	m	(J)I	b	moonPhase
		p	1		time
	m	()Z	c	hasRaids
	m	()Lbpw;	d	monsterSpawnLightTest
	m	()I	e	monsterSpawnBlockLightLimit
	m	()Ljava/util/OptionalLong;	f	fixedTime
	m	()Z	g	hasSkyLight
	m	()Z	h	hasCeiling
	m	()Z	i	ultraWarm
	m	()Z	j	natural
	m	()D	k	coordinateScale
	m	()Z	l	bedWorks
	m	()Z	m	respawnAnchorWorks
	m	()I	n	minY
	m	()I	o	height
	m	()I	p	logicalHeight
	m	()Lawu;	q	infiniburn
	m	()Lakr;	r	effectsLocation
	m	()F	s	ambientLight
	m	()Ldwy$a;	t	monsterSettings
	f	I	A	MOON_PHASES
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lcom/mojang/serialization/Codec;	h	DIRECT_CODEC
	f	Lyx;	i	STREAM_CODEC
	f	[F	j	MOON_BRIGHTNESS_PER_PHASE
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	Ljava/util/OptionalLong;	l	fixedTime
	f	Z	m	hasSkyLight
	f	Z	n	hasCeiling
	f	Z	o	ultraWarm
	f	Z	p	natural
	f	D	q	coordinateScale
	f	Z	r	bedWorks
	f	Z	s	respawnAnchorWorks
	f	I	t	minY
	f	I	u	height
	f	I	v	logicalHeight
	f	Lawu;	w	infiniburn
	f	Lakr;	x	effectsLocation
	f	F	y	ambientLight
	f	Ldwy$a;	z	monsterSettings
c	dwy$a	net/minecraft/world/level/dimension/DimensionManager$a
	m	()Z	a	piglinSafe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	hasRaids
	m	()Lbpw;	c	monsterSpawnLightTest
	m	()I	d	monsterSpawnBlockLightLimit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	piglinSafe
	f	Z	c	hasRaids
	f	Lbpw;	d	monsterSpawnLightTest
	f	I	e	monsterSpawnBlockLightLimit
c	dwz	net/minecraft/world/level/dimension/WorldDimension
	m	(Ljm;Lduz;)V	<init>	<init>
		p	1		dimensionTypeEntry
		p	2		chunkGenerator
	m	()Ljm;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lduz;	b	generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakq;	b	OVERWORLD
	f	Lakq;	c	NETHER
	f	Lakq;	d	END
	f	Ljm;	e	type
	f	Lduz;	f	generator
c	dxa	net/minecraft/world/level/dimension/end/EnumDragonRespawn
	m	()[Ldxa;	a	$values
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
	f	Ldxa;	a	START
	f	Ldxa;	b	PREPARING_TO_SUMMON_PILLARS
	f	Ldxa;	c	SUMMONING_PILLARS
	f	Ldxa;	d	SUMMONING_DRAGON
	f	Ldxa;	e	END
	f	[Ldxa;	f	$VALUES
c	dxa$1	net/minecraft/world/level/dimension/end/EnumDragonRespawn$1
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dxa$2	net/minecraft/world/level/dimension/end/EnumDragonRespawn$2
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dxa$3	net/minecraft/world/level/dimension/end/EnumDragonRespawn$3
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dxa$4	net/minecraft/world/level/dimension/end/EnumDragonRespawn$4
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dxa$5	net/minecraft/world/level/dimension/end/EnumDragonRespawn$5
	m	(Laqu;Ldxb;Ljava/util/List;ILjd;)V	a	tick
		p	1		world
		p	2		fight
		p	3		crystals
		p	4		tick
		p	5		pos
c	dxb	net/minecraft/world/level/dimension/end/EnderDragonBattle
	m	(Laqu;JLdxb$a;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		data
	m	(Laqu;JLdxb$a;Ljd;)V	<init>	<init>
		p	1		world
		p	2		gatewaysSeed
		p	4		data
		p	5		origin
	m	()V	a	skipArenaLoadedCheck
	m	(J)Ljava/util/List;	a	lambda$new$0
	m	(Lchz;Lbrk;)V	a	onCrystalDestroyed
		p	1		enderCrystal
		p	2		source
	m	(Lcia;)V	a	setDragonKilled
		p	1		dragon
	m	(Ldxa;)V	a	setRespawnStage
		p	1		spawnState
	m	(Ljava/util/List;)V	a	respawnDragon
		p	1		crystals
	m	(Ljd;)V	a	spawnNewGateway
		p	1		pos
	m	(Ljd;Ljm$c;)V	a	lambda$spawnNewGateway$2
	m	(Ljz;)Ljava/util/Optional;	a	lambda$spawnNewGateway$1
	m	(Z)V	a	spawnExitPortal
		p	1		previouslyKilled
	m	()Ldxb$a;	b	saveData
	m	(Lcia;)V	b	updateDragon
		p	1		dragon
	m	()V	c	tick
	m	()V	d	removeAllGateways
	m	()I	e	getCrystalsAlive
	m	()Z	f	hasPreviouslyKilledDragon
	m	()V	g	tryRespawn
	m	()V	h	resetSpikeCrystals
	m	()Ljava/util/UUID;	i	getDragonUUID
	m	()V	j	scanState
	m	()V	k	findOrCreateDragon
	m	()Z	l	hasActiveExitPortal
	m	()Ldth$b;	m	findExitPortal
	m	()Z	n	isArenaLoaded
	m	()V	o	updatePlayers
	m	()V	p	updateCrystalCount
	m	()V	q	spawnNewGateway
	m	()Lcia;	r	createNewDragon
	f	I	A	respawnTime
	f	Ljava/util/List;	B	respawnCrystals
	f	I	a	TIME_BETWEEN_PLAYER_SCANS
	f	I	b	ARENA_TICKET_LEVEL
	f	I	c	DRAGON_SPAWN_Y
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	f	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	Ljava/util/function/Predicate;	j	validPlayer
	f	Laqr;	k	dragonEvent
	f	Laqu;	l	level
	f	Ljd;	m	origin
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	gateways
	f	Ldth;	o	exitPortalPattern
	f	I	p	ticksSinceDragonSeen
	f	I	q	crystalsAlive
	f	I	r	ticksSinceCrystalsScanned
	f	I	s	ticksSinceLastPlayerScan
	f	Z	t	dragonKilled
	f	Z	u	previouslyKilled
	f	Z	v	skipArenaLoadedCheck
	f	Ljava/util/UUID;	w	dragonUUID
	f	Z	x	needsStateScanning
	f	Ljd;	y	portalLocation
	f	Ldxa;	z	respawnStage
c	dxb$a	net/minecraft/world/level/dimension/end/EnderDragonBattle$a
	m	()Z	a	needsStateScanning
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Z	b	dragonKilled
	m	()Z	c	previouslyKilled
	m	()Z	d	isRespawning
	m	()Ljava/util/Optional;	e	dragonUUID
	m	()Ljava/util/Optional;	f	exitPortalLocation
	m	()Ljava/util/Optional;	g	gateways
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldxb$a;	b	DEFAULT
	f	Z	c	needsStateScanning
	f	Z	d	dragonKilled
	f	Z	e	previouslyKilled
	f	Z	f	isRespawning
	f	Ljava/util/Optional;	g	dragonUUID
	f	Ljava/util/Optional;	h	exitPortalLocation
	f	Ljava/util/Optional;	i	gateways
c	dxe	net/minecraft/world/level/entity/ChunkEntities
	m	(Ldcd;Ljava/util/List;)V	<init>	<init>
		p	1		pos
		p	2		list
	m	()Ldcd;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
	f	Ldcd;	a	pos
	f	Ljava/util/List;	b	entities
c	dxf	net/minecraft/world/level/entity/ChunkStatusUpdateListener
	m	(Ldcd;Laql;)V	onChunkStatusChange	onChunkStatusChange
		p	1		pos
		p	2		levelType
c	dxg	net/minecraft/world/level/entity/EntityAccess
	m	(Ldxh;)V	a	setLevelCallback
		p	1		changeListener
	m	()I	an	getId
	m	(Lbsr$c;)V	b	setRemoved
		p	1		reason
	m	()Lewx;	cK	getBoundingBox
	m	()Ljava/util/stream/Stream;	cU	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	cV	getPassengersAndSelf
	m	()Ljava/util/UUID;	cz	getUUID
	m	()Z	dM	shouldBeSaved
	m	()Z	dN	isAlwaysTicking
	m	()Ljd;	do	blockPosition
c	dxh	net/minecraft/world/level/entity/EntityInLevelCallback
	m	()V	a	onMove
	m	(Lbsr$c;)V	a	onRemove
		p	1		reason
	f	Ldxh;	a	NULL
c	dxh$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	a	onMove
	m	(Lbsr$c;)V	a	onRemove
		p	1		reason
c	dxi	net/minecraft/world/level/entity/EntityLookup
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(I)Ldxg;	a	getEntity
		p	1		id
	m	(Ldxg;)V	a	add
		p	1		entity
	m	(Ldxn;Laxa;)V	a	getEntities
		p	1		filter
		p	2		consumer
	m	(Ljava/util/UUID;)Ldxg;	a	getEntity
		p	1		uuid
	m	()I	b	count
	m	(Ldxg;)V	b	remove
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
c	dxj	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Ldcd;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
		p	1		pos
	m	(Ldxe;)V	a	storeEntities
		p	1		dataList
	m	(Z)V	a	flush
		p	1		sync
c	dxk	net/minecraft/world/level/entity/EntitySection
	m	(Ljava/lang/Class;Ldxt;)V	<init>	<init>
		p	1		entityClass
		p	2		status
	m	()Z	a	isEmpty
	m	(Ldxg;)V	a	add
		p	1		entity
	m	(Ldxn;Lewx;Laxa;)Laxa$a;	a	getEntities
		p	1		type
		p	2		box
		p	3		consumer
	m	(Ldxt;)Ldxt;	a	updateChunkStatus
		p	1		status
	m	(Lewx;Laxa;)Laxa$a;	a	getEntities
		p	1		box
		p	2		consumer
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	(Ldxg;)Z	b	remove
		p	1		entity
	m	()Ldxt;	c	getStatus
	m	()I	d	size
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laxf;	b	storage
	f	Ldxt;	c	chunkStatus
c	dxl	net/minecraft/world/level/entity/EntitySectionStorage
	m	(Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V	<init>	<init>
		p	1		entityClass
		p	2		chunkStatusDiscriminator
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
		p	1		chunkX
		p	2		chunkZ
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
		p	1		chunkPos
	m	(Ldxn;Lewx;Laxa;)V	a	getEntities
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Ldxn;Lewx;Laxa;Ldxk;)Laxa$a;	a	lambda$getEntities$2
		p	3		section
	m	(Lewx;Laxa;)V	a	forEachAccessibleNonEmptySection
		p	1		box
		p	2		consumer
	m	(Lewx;Laxa;Ldxk;)Laxa$a;	a	lambda$getEntities$1
		p	2		section
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
		p	0		trackingSection
		p	1		sectionPos
	m	()I	b	count
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
		p	1		chunkPos
	m	(Lewx;Laxa;)V	b	getEntities
		p	1		box
		p	2		consumer
	m	(J)Ldxk;	c	getOrCreateSection
		p	1		sectionPos
	m	(J)Ldxk;	d	getSection
		p	1		sectionPos
	m	(J)V	e	remove
		p	1		sectionPos
	m	(J)J	f	getChunkKeyFromSectionKey
		p	0		sectionPos
	m	(J)Ldxk;	g	createSection
		p	1		sectionPos
	f	Ljava/lang/Class;	a	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	b	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	d	sectionIds
c	dxm	net/minecraft/world/level/entity/EntityTickList
	m	()V	a	ensureActiveIsNotIterated
	m	(Lbsr;)V	a	add
		p	1		entity
	m	(Ljava/util/function/Consumer;)V	a	forEach
		p	1		action
	m	(Lbsr;)V	b	remove
		p	1		entity
	m	(Lbsr;)Z	c	contains
		p	1		entity
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
c	dxn	net/minecraft/world/level/entity/EntityTypeTest
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Class;)Ldxn;	a	forClass
		p	0		cls
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	m	(Ljava/lang/Class;)Ldxn;	b	forExactClass
		p	0		cls
c	dxn$1	net/minecraft/world/level/entity/EntityTypeTest$1
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	f	Ljava/lang/Class;	a	val$cls
c	dxn$2	net/minecraft/world/level/entity/EntityTypeTest$2
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
		p	1		obj
	f	Ljava/lang/Class;	a	val$cls
c	dxo	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	a	onSectionChange
		p	1		entity
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	c	onTrackingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	d	onTickingEnd
		p	1		entity
	m	(Ljava/lang/Object;)V	e	onTickingStart
		p	1		entity
	m	(Ljava/lang/Object;)V	f	onDestroyed
		p	1		entity
	m	(Ljava/lang/Object;)V	g	onCreated
		p	1		entity
c	dxp	net/minecraft/world/level/entity/LevelEntityGetter
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldxg;	a	get
		p	1		id
	m	(Ldxn;Laxa;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldxn;Lewx;Laxa;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lewx;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldxg;	a	get
		p	1		uuid
c	dxq	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	m	(Ldxi;Ldxl;)V	<init>	<init>
		p	1		index
		p	2		cache
	m	()Ljava/lang/Iterable;	a	getAll
	m	(I)Ldxg;	a	get
		p	1		id
	m	(Ldxn;Laxa;)V	a	get
		p	1		filter
		p	2		consumer
	m	(Ldxn;Lewx;Laxa;)V	a	get
		p	1		filter
		p	2		box
		p	3		consumer
	m	(Lewx;Ljava/util/function/Consumer;)V	a	get
		p	1		box
		p	2		action
	m	(Ljava/util/UUID;)Ldxg;	a	get
		p	1		uuid
	f	Ldxi;	a	visibleEntities
	f	Ldxl;	b	sectionStorage
c	dxr	net/minecraft/world/level/entity/PersistentEntitySectionManager
	m	(Ljava/lang/Class;Ldxo;Ldxj;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
		p	3		dataAccess
	m	()V	a	tick
	m	(J)Z	a	areEntitiesLoaded
		p	1		chunkPos
	m	(JLdxk;)V	a	removeSectionIfEmpty
		p	1		sectionPos
		p	3		section
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
		p	1		chunkPos
		p	3		action
	m	(Laxn;J)V	a	lambda$dumpSections$17
		p	2		chunkPos
	m	(Laxn;Ldxr$b;J)V	a	lambda$dumpSections$16
		p	3		sectionPos
	m	(Ldcd;)Z	a	canPositionTick
		p	1		pos
	m	(Ldcd;Laql;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		levelType
	m	(Ldcd;Ldxt;)V	a	updateChunkStatus
		p	1		chunkPos
		p	2		trackingStatus
	m	(Ldcd;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
		p	1		throwable
	m	(Ldxg;)Z	a	addNewEntity
		p	1		entity
	m	(Ldxg;Ldxt;)Ldxt;	a	getEffectiveStatus
		p	0		entity
		p	1		current
	m	(Ldxg;Z)Z	a	addEntity
		p	1		entity
		p	2		existing
	m	(Ldxk;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
		p	0		section
	m	(Ldxt;Ldxk;)V	a	lambda$updateChunkStatus$6
		p	2		group
	m	(Ljava/io/Writer;)V	a	dumpSections
		p	1		writer
	m	(Ljava/util/UUID;)Z	a	isLoaded
		p	1		uuid
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
		p	1		entities
	m	(Ljd;)Z	a	canPositionTick
		p	1		pos
	m	()V	b	autoSave
	m	(J)V	b	ensureChunkQueuedForLoad
		p	1		chunkPos
	m	(Ldxg;)Z	b	addEntityUuid
		p	1		entity
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
		p	1		entities
	m	()V	c	saveAll
	m	(J)V	c	requestChunkLoad
		p	1		chunkPos
	m	(Ldxg;)V	c	startTicking
		p	1		entity
	m	()Ldxp;	d	getEntityGetter
	m	(J)Z	d	processChunkUnload
		p	1		chunkPos
	m	(Ldxg;)V	d	stopTicking
		p	1		entity
	m	()Ljava/lang/String;	e	gatherStats
	m	(J)Z	e	lambda$saveAll$15
		p	1		pos
	m	(Ldxg;)V	e	startTracking
		p	1		entity
	m	()I	f	count
	m	(J)V	f	lambda$autoSave$13
		p	1		pos
	m	(Ldxg;)V	f	stopTracking
		p	1		entity
	m	()V	g	processUnloads
	m	(J)Z	g	lambda$processUnloads$10
		p	1		pos
	m	(Ldxg;)V	g	unloadEntity
		p	1		entity
	m	()V	h	processPendingLoads
	m	(Ldxg;)V	h	lambda$saveAll$14
		p	0		entity
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	i	getAllChunksToSave
	m	(Ldxg;)V	i	lambda$autoSave$12
		p	0		entity
	m	(Ldxg;)V	j	lambda$processPendingLoads$11
		p	1		entity
	m	(Ldxg;)V	k	lambda$processChunkUnload$9
		p	1		entity
	m	(Ldxg;)Z	l	lambda$updateChunkStatus$5
		p	0		entity
	m	(Ldxg;)Z	m	lambda$updateChunkStatus$4
		p	0		entity
	m	(Ldxg;)Z	n	lambda$updateChunkStatus$3
		p	0		entity
	m	(Ldxg;)Z	o	lambda$updateChunkStatus$2
		p	0		entity
	m	(Ldxg;)V	p	lambda$addWorldGenChunkEntities$1
		p	1		entity
	m	(Ldxg;)V	q	lambda$addLegacyChunkEntities$0
		p	1		entity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Ldxo;	c	callbacks
	f	Ldxj;	d	permanentStorage
	f	Ldxi;	e	visibleEntityStorage
	f	Ldxl;	f	sectionStorage
	f	Ldxp;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
c	dxr$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$a
	m	(Ldxr;Ldxg;JLdxk;)V	<init>	<init>
		p	2		entity
		p	3		sectionPos
		p	5		section
	m	()V	a	onMove
	m	(Lbsr$c;)V	a	onRemove
		p	1		reason
	m	(Ldxt;Ldxt;)V	a	updateStatus
		p	1		oldStatus
		p	2		newStatus
	f	Ldxr;	b	this$0
	f	Ldxg;	c	entity
	f	J	d	currentSectionKey
	f	Ldxk;	e	currentSection
c	dxr$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$b
	m	()[Ldxr$b;	a	$values
	f	Ldxr$b;	a	FRESH
	f	Ldxr$b;	b	PENDING
	f	Ldxr$b;	c	LOADED
	f	[Ldxr$b;	d	$VALUES
c	dxs	dxs
	m	(Ljava/lang/Class;Ldxo;)V	<init>	<init>
		p	1		entityClass
		p	2		handler
	m	()Ldxp;	a	getEntityGetter
	m	(J)Ldxt;	a	lambda$new$0
		p	1		pos
	m	(JLdxk;)V	a	removeSectionIfEmpty
		p	1		packedChunkSection
		p	3		entities
	m	(Ldcd;)V	a	startTicking
		p	1		pos
	m	(Ldxg;)V	a	addEntity
		p	1		entity
	m	(Ldxk;)V	a	lambda$stopTicking$4
		p	1		sections
	m	()I	b	count
	m	(Ldcd;)V	b	stopTicking
		p	1		pos
	m	(Ldxg;)Z	b	lambda$stopTicking$3
		p	0		e
	m	(Ldxk;)V	b	lambda$startTicking$2
		p	1		sections
	m	()Ljava/lang/String;	c	gatherStats
	m	(Ldxg;)Z	c	lambda$startTicking$1
		p	0		e
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ldxo;	b	callbacks
	f	Ldxi;	c	entityStorage
	f	Ldxl;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Ldxp;	f	entityGetter
c	dxs$a	dxs$a
	m	(Ldxs;Ldxg;JLdxk;)V	<init>	<init>
		p	2		entity
		p	3		pos
		p	5		section
	m	()V	a	onMove
	m	(Lbsr$c;)V	a	onRemove
		p	1		reason
	f	Ldxs;	b	this$0
	f	Ldxg;	c	entity
	f	J	d	currentSectionKey
	f	Ldxk;	e	currentSection
c	dxt	net/minecraft/world/level/entity/Visibility
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
		p	3		tracked
		p	4		tick
	m	()Z	a	isTicking
	m	(Laql;)Ldxt;	a	fromFullChunkStatus
		p	0		levelType
	m	()Z	b	isAccessible
	m	()[Ldxt;	c	$values
	f	Ldxt;	a	HIDDEN
	f	Ldxt;	b	TRACKED
	f	Ldxt;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Ldxt;	f	$VALUES
c	dxv	net/minecraft/world/level/gameevent/BlockPositionSource
	m	(Ljd;)V	<init>	<init>
		p	1		pos
	m	()Ldye;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldcw;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Ldxv;)Ljd;	a	lambda$static$2
		p	0		source
	m	(Ldxv;)Ljd;	b	lambda$static$0
		p	0		blockPositionSource
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Ljd;	e	pos
c	dxv$a	net/minecraft/world/level/gameevent/BlockPositionSource$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lyx;	b	streamCodec
c	dxw	net/minecraft/world/level/gameevent/DynamicGameEventListener
	m	(Ldyb;)V	<init>	<init>
		p	1		listener
	m	()Ldyb;	a	getListener
	m	(Laqu;)V	a	add
		p	1		world
	m	(Laqu;Lkf;)V	a	lambda$move$3
		p	2		sectionPos
	m	(Ldcz;Lkf;Ljava/util/function/Consumer;)V	a	ifChunkExists
		p	0		world
		p	1		sectionPos
		p	2		dispatcherConsumer
	m	(Ldyc;)V	a	lambda$move$2
		p	1		dispatcher
	m	(Laqu;)V	b	remove
		p	1		world
	m	(Ldyc;)V	b	lambda$move$1
		p	1		dispatcher
	m	(Laqu;)V	c	move
		p	1		world
	m	(Ldyc;)V	c	lambda$remove$0
		p	1		dispatcher
	f	Ldyb;	a	listener
	f	Lkf;	b	lastSection
c	dxx	net/minecraft/world/level/gameevent/EntityPositionSource
	m	(Lbsr;F)V	<init>	<init>
		p	1		entity
		p	2		yOffset
	m	(Lcom/mojang/datafixers/util/Either;F)V	<init>	<init>
		p	1		source
		p	2		yOffset
	m	()Ldye;	a	getType
	m	(Lbsr;)V	a	lambda$resolveEntity$8
		p	1		entity
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer;	a	lambda$getId$12
		p	0		entityId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldcw;)Ljava/util/Optional;	a	getPosition
		p	1		world
	m	(Ldcw;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional;	a	lambda$resolveEntity$7
		p	1		entityId
	m	(Ldcw;Ljava/util/UUID;)Lbsr;	a	lambda$resolveEntity$6
		p	1		uuid
	m	(Ldxx;)Ljava/lang/Float;	a	lambda$static$3
		p	0		source
	m	(Ljava/lang/Integer;)Ljava/util/UUID;	a	lambda$getUuid$9
		p	0		entityIdx
	m	(Ljava/lang/Integer;Ljava/lang/Float;)Ldxx;	a	lambda$static$4
		p	0		entityId
		p	1		yOffset
	m	(Ljava/util/UUID;)Ljava/lang/Integer;	a	lambda$getId$11
		p	0		uuid
	m	(Ljava/util/UUID;Ljava/lang/Float;)Ldxx;	a	lambda$static$1
		p	0		uuid
		p	1		yOffset
	m	()Ljava/util/UUID;	b	getUuid
	m	(Lbsr;)Lexc;	b	lambda$getPosition$5
		p	1		entity
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	b	lambda$getUuid$10
		p	0		entityId
	m	(Ldcw;)V	b	resolveEntity
		p	1		world
	m	(Ldxx;)Ljava/lang/Float;	b	lambda$static$0
		p	0		entityPositionSource
	m	()I	c	getId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	Lcom/mojang/datafixers/util/Either;	e	entityOrUuidOrId
	f	F	f	yOffset
c	dxx$a	net/minecraft/world/level/gameevent/EntityPositionSource$a
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lyx;	b	streamCodec
c	dxy	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	m	(Laqu;ILdxy$a;)V	<init>	<init>
		p	1		world
		p	2		ySectionCoord
		p	3		disposalCallback
	m	()Z	a	isEmpty
	m	(Laqu;Lexc;Ldyb;)Ljava/util/Optional;	a	getPostableListenerPosition
		p	0		world
		p	1		listenerPos
		p	2		listener
	m	(Ldyb;)V	a	register
		p	1		listener
	m	(Ljm;Lexc;Ldxz$a;Ldyc$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldyb;)V	b	unregister
		p	1		listener
	f	Ljava/util/List;	b	listeners
	f	Ljava/util/Set;	c	listenersToRemove
	f	Ljava/util/List;	d	listenersToAdd
	f	Z	e	processing
	f	Laqu;	f	level
	f	I	g	sectionY
	f	Ldxy$a;	h	onEmptyAction
c	dxy$a	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$a
	m	(I)V	apply	apply
		p	1		ySectionCoord
c	dxz	net/minecraft/world/level/gameevent/GameEvent
	m	(I)V	<init>	<init>
		p	1		range
	m	()I	a	notificationRadius
	m	(Ljava/lang/String;)Ljm$c;	a	register
		p	0		id
	m	(Ljava/lang/String;I)Ljm$c;	a	register
		p	0		id
		p	1		range
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	f	Ljm$c;	A	HIT_GROUND
	f	Ljm$c;	B	INSTRUMENT_PLAY
	f	Ljm$c;	C	ITEM_INTERACT_FINISH
	f	Ljm$c;	D	ITEM_INTERACT_START
	f	Ljm$c;	E	JUKEBOX_PLAY
	f	Ljm$c;	F	JUKEBOX_STOP_PLAY
	f	Ljm$c;	G	LIGHTNING_STRIKE
	f	Ljm$c;	H	NOTE_BLOCK_PLAY
	f	Ljm$c;	I	PRIME_FUSE
	f	Ljm$c;	J	PROJECTILE_LAND
	f	Ljm$c;	K	PROJECTILE_SHOOT
	f	Ljm$c;	L	SCULK_SENSOR_TENDRILS_CLICKING
	f	Ljm$c;	M	SHEAR
	f	Ljm$c;	N	SHRIEK
	f	Ljm$c;	O	SPLASH
	f	Ljm$c;	P	STEP
	f	Ljm$c;	Q	SWIM
	f	Ljm$c;	R	TELEPORT
	f	Ljm$c;	S	UNEQUIP
	f	Ljm$c;	T	RESONATE_1
	f	Ljm$c;	U	RESONATE_2
	f	Ljm$c;	V	RESONATE_3
	f	Ljm$c;	W	RESONATE_4
	f	Ljm$c;	X	RESONATE_5
	f	Ljm$c;	Y	RESONATE_6
	f	Ljm$c;	Z	RESONATE_7
	f	Ljm$c;	a	BLOCK_ACTIVATE
	f	Ljm$c;	aa	RESONATE_8
	f	Ljm$c;	ab	RESONATE_9
	f	Ljm$c;	ac	RESONATE_10
	f	Ljm$c;	ad	RESONATE_11
	f	Ljm$c;	ae	RESONATE_12
	f	Ljm$c;	af	RESONATE_13
	f	Ljm$c;	ag	RESONATE_14
	f	Ljm$c;	ah	RESONATE_15
	f	I	ai	DEFAULT_NOTIFICATION_RADIUS
	f	Lcom/mojang/serialization/Codec;	aj	CODEC
	f	I	ak	notificationRadius
	f	Ljm$c;	b	BLOCK_ATTACH
	f	Ljm$c;	c	BLOCK_CHANGE
	f	Ljm$c;	d	BLOCK_CLOSE
	f	Ljm$c;	e	BLOCK_DEACTIVATE
	f	Ljm$c;	f	BLOCK_DESTROY
	f	Ljm$c;	g	BLOCK_DETACH
	f	Ljm$c;	h	BLOCK_OPEN
	f	Ljm$c;	i	BLOCK_PLACE
	f	Ljm$c;	j	CONTAINER_CLOSE
	f	Ljm$c;	k	CONTAINER_OPEN
	f	Ljm$c;	l	DRINK
	f	Ljm$c;	m	EAT
	f	Ljm$c;	n	ELYTRA_GLIDE
	f	Ljm$c;	o	ENTITY_DAMAGE
	f	Ljm$c;	p	ENTITY_DIE
	f	Ljm$c;	q	ENTITY_DISMOUNT
	f	Ljm$c;	r	ENTITY_INTERACT
	f	Ljm$c;	s	ENTITY_MOUNT
	f	Ljm$c;	t	ENTITY_PLACE
	f	Ljm$c;	u	ENTITY_ACTION
	f	Ljm$c;	v	EQUIP
	f	Ljm$c;	w	EXPLODE
	f	Ljm$c;	x	FLAP
	f	Ljm$c;	y	FLUID_PICKUP
	f	Ljm$c;	z	FLUID_PLACE
c	dxz$a	net/minecraft/world/level/gameevent/GameEvent$a
	m	()Lbsr;	a	sourceEntity
	m	(Lbsr;)Ldxz$a;	a	of
		p	0		sourceEntity
	m	(Lbsr;Ldtc;)Ldxz$a;	a	of
		p	0		sourceEntity
		p	1		affectedState
	m	(Ldtc;)Ldxz$a;	a	of
		p	0		affectedState
	m	()Ldtc;	b	affectedState
	f	Lbsr;	a	sourceEntity
	f	Ldtc;	b	affectedState
c	dxz$b	net/minecraft/world/level/gameevent/GameEvent$b
	m	(Ljm;Lexc;Ldxz$a;Ldyb;Lexc;)V	<init>	<init>
		p	1		event
		p	2		emitterPos
		p	3		emitter
		p	4		listener
		p	5		listenerPos
	m	()Ljm;	a	gameEvent
	m	(Ldxz$b;)I	a	compareTo
	m	()Lexc;	b	source
	m	()Ldxz$a;	c	context
	m	()Ldyb;	d	recipient
	f	Ljm;	a	gameEvent
	f	Lexc;	b	source
	f	Ldxz$a;	c	context
	f	Ldyb;	d	recipient
	f	D	e	distanceToRecipient
c	dya	net/minecraft/world/level/gameevent/GameEventDispatcher
	m	(Laqu;)V	<init>	<init>
		p	1		world
	m	(Ljava/util/List;)V	a	handleGameEventMessagesInQueue
		p	1		messages
	m	(Ljava/util/List;Ljm;Lexc;Ldxz$a;Ldyb;Lexc;)V	a	lambda$post$0
		p	5		listener
		p	6		listenerPos
	m	(Ljm;Lexc;Ldxz$a;)V	a	post
		p	1		event
		p	2		emitterPos
		p	3		emitter
	f	Laqu;	a	level
c	dyb	net/minecraft/world/level/gameevent/GameEventListener
	m	()Ldyd;	a	getListenerSource
	m	(Laqu;Ljm;Ldxz$a;Lexc;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	()I	b	getListenerRadius
	m	()Ldyb$a;	c	getDeliveryMode
c	dyb$a	net/minecraft/world/level/gameevent/GameEventListener$a
	m	()[Ldyb$a;	a	$values
	f	Ldyb$a;	a	UNSPECIFIED
	f	Ldyb$a;	b	BY_DISTANCE
	f	[Ldyb$a;	c	$VALUES
c	dyb$b	net/minecraft/world/level/gameevent/GameEventListener$b
	m	()Ldyb;	c	getListener
c	dyc	net/minecraft/world/level/gameevent/GameEventListenerRegistry
	m	()Z	a	isEmpty
	m	(Ldyb;)V	a	register
		p	1		listener
	m	(Ljm;Lexc;Ldxz$a;Ldyc$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldyb;)V	b	unregister
		p	1		listener
	f	Ldyc;	a	NOOP
c	dyc$1	net/minecraft/world/level/gameevent/GameEventListenerRegistry$1
	m	()Z	a	isEmpty
	m	(Ldyb;)V	a	register
		p	1		listener
	m	(Ljm;Lexc;Ldxz$a;Ldyc$a;)Z	a	visitInRangeListeners
		p	1		event
		p	2		pos
		p	3		emitter
		p	4		callback
	m	(Ldyb;)V	b	unregister
		p	1		listener
c	dyc$a	net/minecraft/world/level/gameevent/GameEventListenerRegistry$a
	m	(Ldyb;Lexc;)V	visit	visit
		p	1		listener
		p	2		listenerPos
c	dyd	net/minecraft/world/level/gameevent/PositionSource
	m	()Ldye;	a	getType
	m	(Ldcw;)Ljava/util/Optional;	a	getPosition
		p	1		world
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lyx;	d	STREAM_CODEC
c	dye	net/minecraft/world/level/gameevent/PositionSourceType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Ldye;)Ldye;	a	register
		p	0		id
		p	1		positionSourceType
	m	()Lyx;	b	streamCodec
	f	Ldye;	a	BLOCK
	f	Ldye;	b	ENTITY
c	dyg	net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	m	(Ljm;FLexc;Lbsr;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		entity
	m	(Ljm;FLexc;Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
		p	1		gameEvent
		p	2		distance
		p	3		pos
		p	4		uuid
		p	5		projectileOwnerUuid
	m	()Ljm;	a	gameEvent
	m	(Laqu;)Ljava/util/Optional;	a	getEntity
		p	1		world
	m	(Lbsr;)Ljava/util/UUID;	a	getProjectileOwner
		p	0		entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldyg;)Ljava/util/Optional;	a	lambda$static$1
		p	0		vibration
	m	(Ljm;Ljava/lang/Float;Lexc;Ljava/util/Optional;Ljava/util/Optional;)Ldyg;	a	lambda$static$2
		p	0		event
		p	1		distance
		p	2		pos
		p	3		uuid
		p	4		projectileOwnerUuid
	m	()F	b	distance
	m	(Laqu;)Ljava/util/Optional;	b	getProjectileOwner
		p	1		world
	m	(Lbsr;)Lcnp;	b	lambda$getProjectileOwner$6
		p	0		entity
	m	(Ldyg;)Ljava/util/Optional;	b	lambda$static$0
		p	0		vibration
	m	()Lexc;	c	pos
	m	(Laqu;)Ljava/util/Optional;	c	lambda$getProjectileOwner$7
	m	(Lbsr;)Z	c	lambda$getProjectileOwner$5
		p	0		entity
	m	()Ljava/util/UUID;	d	uuid
	m	(Laqu;)Ljava/util/Optional;	d	lambda$getEntity$4
	m	()Ljava/util/UUID;	e	projectileOwnerUuid
	m	()Lbsr;	f	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	gameEvent
	f	F	c	distance
	f	Lexc;	d	pos
	f	Ljava/util/UUID;	e	uuid
	f	Ljava/util/UUID;	f	projectileOwnerUuid
	f	Lbsr;	g	entity
c	dyh	net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	m	(Ljava/util/Optional;J)V	<init>	<init>
		p	1		vibration
		p	2		tick
	m	()V	a	startOver
	m	(J)Ljava/util/Optional;	a	chosenCandidate
		p	1		currentTick
	m	(JLdyg;)Lorg/apache/commons/lang3/tuple/Pair;	a	lambda$new$3
		p	2		vibration2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldyg;J)V	a	addCandidate
		p	1		vibration
		p	2		tick
	m	(Ldyh;)Ljava/lang/Long;	a	lambda$static$1
	m	(Ldyg;J)Z	b	shouldReplaceVibration
		p	1		vibration
		p	2		tick
	m	(Ldyh;)Ljava/util/Optional;	b	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	currentVibrationData
c	dyi	net/minecraft/world/level/gameevent/vibrations/VibrationSystem
	m	(Lakq;)I	a	getGameEventFrequency
		p	0		gameEvent
	m	(Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;)V	a	lambda$static$0
		p	0		frequencies
	m	(FI)I	a_	getRedstoneStrengthForDistance
		p	0		distance
		p	1		range
	m	(Ljm;)I	a_	getGameEventFrequency
		p	0		gameEvent
	m	(I)Lakq;	b	getResonanceEventByFrequency
		p	0		frequency
	m	()Ldyi$a;	gm	getVibrationData
	m	()Ldyi$d;	gn	getVibrationUser
	f	Ljava/util/List;	f_	RESONANCE_EVENTS
	f	I	g_	DEFAULT_VIBRATION_FREQUENCY
	f	Ljava/util/function/ToIntFunction;	h_	VIBRATION_FREQUENCY_FOR_EVENT
c	dyi$a	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$a
	m	(Ldyg;Ldyh;IZ)V	<init>	<init>
		p	1		vibration
		p	2		vibrationSelector
		p	3		delay
		p	4		spawnParticle
	m	()Ldyh;	a	getSelectionStrategy
	m	(I)V	a	setTravelTimeInTicks
		p	1		delay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldyg;)V	a	setCurrentVibration
		p	1		vibration
	m	(Ldyi$a;)Ljava/util/Optional;	a	lambda$static$0
		p	0		listenerData
	m	(Ljava/util/Optional;Ldyh;Ljava/lang/Integer;)Ldyi$a;	a	lambda$static$1
		p	0		vibration
		p	1		selector
		p	2		delay
	m	(Z)V	a	setReloadVibrationParticle
		p	1		spawnParticle
	m	()Ldyg;	b	getCurrentVibration
	m	()I	c	getTravelTimeInTicks
	m	()V	d	decrementTravelTime
	m	()Z	e	shouldReloadVibrationParticle
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	NBT_TAG_KEY
	f	Ldyg;	c	currentVibration
	f	I	d	travelTimeInTicks
	f	Ldyh;	e	selectionStrategy
	f	Z	f	reloadVibrationParticle
c	dyi$b	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$b
	m	(Ldyi;)V	<init>	<init>
		p	1		receiver
	m	()Ldyd;	a	getListenerSource
	m	(Laqu;Ldyi$a;Ljm;Ldxz$a;Lexc;Lexc;)V	a	scheduleVibration
		p	1		world
		p	2		listenerData
		p	3		event
		p	4		emitter
		p	5		emitterPos
		p	6		listenerPos
	m	(Laqu;Ljm;Ldxz$a;Lexc;)Z	a	handleGameEvent
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	m	(Laqu;Ljm;Ldxz$a;Lexc;Lexc;)V	a	lambda$forceScheduleVibration$0
		p	5		pos
	m	(Ldcw;Lexc;Lexc;)Z	a	isOccluded
		p	0		world
		p	1		emitterPos
		p	2		listenerPos
	m	(Ldtc;)Z	a	lambda$isOccluded$1
		p	0		state
	m	(Ljd;Ljd;)F	a	distanceBetweenInBlocks
		p	0		emitterPos
		p	1		listenerPos
	m	()I	b	getListenerRadius
	m	(Laqu;Ljm;Ldxz$a;Lexc;)V	b	forceScheduleVibration
		p	1		world
		p	2		event
		p	3		emitter
		p	4		emitterPos
	f	Ldyi;	a	system
c	dyi$c	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$c
	m	(Laqu;Ldyi$a;Ldyi$d;)V	a	trySelectAndScheduleVibration
		p	0		world
		p	1		listenerData
		p	2		callback
	m	(Laqu;Ldyi$a;Ldyi$d;Ldyg;)Z	a	receiveVibration
		p	0		world
		p	1		listenerData
		p	2		callback
		p	3		vibration
	m	(Ldcw;Ldyi$a;Ldyi$d;)V	a	tick
		p	0		world
		p	1		listenerData
		p	2		callback
	m	(Ldcw;Ljd;)Z	a	areAdjacentChunksTicking
		p	0		world
		p	1		pos
	m	(Ldyi$a;Ldyi$d;Laqu;Ldyg;)V	a	lambda$trySelectAndScheduleVibration$0
		p	3		vibration
	m	(Laqu;Ldyi$a;Ldyi$d;)V	b	tryReloadVibrationParticle
		p	0		world
		p	1		listenerData
		p	2		callback
c	dyi$d	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$d
	m	()I	a	getListenerRadius
	m	(F)I	a	calculateTravelTimeInTicks
		p	1		distance
	m	(Laqu;Ljd;Ljm;Lbsr;Lbsr;F)V	a	onReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		sourceEntity
		p	5		entity
		p	6		distance
	m	(Laqu;Ljd;Ljm;Ldxz$a;)Z	a	canReceiveVibration
		p	1		world
		p	2		pos
		p	3		event
		p	4		emitter
	m	(Ljm;Ldxz$a;)Z	a	isValidVibration
		p	1		gameEvent
		p	2		emitter
	m	()Ldyd;	b	getPositionSource
	m	()Lawu;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
c	dyk	net/minecraft/world/level/levelgen/Aquifer
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldyk$a;)Ldyk;	a	createDisabled
		p	0		fluidLevelSampler
	m	(Ldyr$b;D)Ldtc;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldzc;Ldcd;Ldze;Ldzl;IILdyk$a;)Ldyk;	a	create
		p	0		chunkNoiseSampler
		p	1		chunkPos
		p	2		noiseRouter
		p	3		randomSplitter
		p	4		minimumY
		p	5		height
		p	6		fluidLevelSampler
c	dyk$1	net/minecraft/world/level/levelgen/Aquifer$1
	m	()Z	a	shouldScheduleFluidUpdate
	m	(Ldyr$b;D)Ldtc;	a	computeSubstance
		p	1		pos
		p	2		density
	f	Ldyk$a;	a	val$fluidRule
c	dyk$a	net/minecraft/world/level/levelgen/Aquifer$a
	m	(III)Ldyk$b;	computeFluid	computeFluid
		p	1		x
		p	2		y
		p	3		z
c	dyk$b	net/minecraft/world/level/levelgen/Aquifer$b
	m	(ILdtc;)V	<init>	<init>
		p	1		y
		p	2		state
	m	(I)Ldtc;	a	at
		p	1		y
	f	I	a	fluidLevel
	f	Ldtc;	b	fluidType
c	dyk$c	net/minecraft/world/level/levelgen/Aquifer$c
	m	(Ldzc;Ldcd;Ldze;Ldzl;IILdyk$a;)V	<init>	<init>
		p	1		chunkNoiseSampler
		p	2		chunkPos
		p	3		noiseRouter
		p	4		randomSplitter
		p	5		minimumY
		p	6		height
		p	7		fluidLevelSampler
	m	()Z	a	shouldScheduleFluidUpdate
	m	(I)I	a	gridX
		p	1		x
	m	(II)D	a	similarity
		p	1		a
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)I	a	computeRandomizedFluidSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		surfaceHeightEstimate
	m	(IIILdyk$b;I)Ldtc;	a	computeFluidType
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		fluidLevel
	m	(IIILdyk$b;IZ)I	a	computeSurfaceLevel
		p	1		blockX
		p	2		blockY
		p	3		blockZ
		p	4		defaultFluidLevel
		p	5		surfaceHeightEstimate
	m	(J)Ldyk$b;	a	getAquiferStatus
		p	1		pos
	m	(Ldyr$b;D)Ldtc;	a	computeSubstance
		p	1		pos
		p	2		density
	m	(Ldyr$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Ldyk$b;Ldyk$b;)D	a	calculatePressure
		p	1		pos
	m	(I)I	b	gridY
		p	1		y
	m	(III)Ldyk$b;	b	computeFluid
		p	1		blockX
		p	2		blockY
		p	3		blockZ
	m	(I)I	c	gridZ
		p	1		z
	f	I	A	gridSizeX
	f	I	B	gridSizeZ
	f	[[I	C	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Ldzc;	l	noiseChunk
	f	Ldyr;	m	barrierNoise
	f	Ldyr;	n	fluidLevelFloodednessNoise
	f	Ldyr;	o	fluidLevelSpreadNoise
	f	Ldyr;	p	lavaNoise
	f	Ldzl;	q	positionalRandomFactory
	f	[Ldyk$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Ldyk$a;	t	globalFluidPicker
	f	Ldyr;	u	erosion
	f	Ldyr;	v	depth
	f	Z	w	shouldScheduleFluidUpdate
	f	I	x	minGridX
	f	I	y	minGridY
	f	I	z	minGridZ
c	dyl	net/minecraft/world/level/levelgen/Beardifier
	m	(Lit/unimi/dsi/fastutil/objects/ObjectListIterator;Lit/unimi/dsi/fastutil/objects/ObjectListIterator;)V	<init>	<init>
		p	1		pieceIterator
		p	2		junctionIterator
	m	()D	a	minValue
	m	(DDD)D	a	getBuryContribution
		p	0		x
		p	2		y
		p	4		z
	m	(I)Z	a	isInKernelRange
		p	0		i
	m	(IDI)D	a	computeBeardContribution
		p	0		x
		p	1		y
		p	3		z
	m	(III)D	a	computeBeardContribution
		p	0		x
		p	1		y
		p	2		z
	m	(IIII)D	a	getBeardContribution
		p	0		x
		p	1		y
		p	2		z
		p	3		yy
	m	(Ldcd;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Lejz;)V	a	lambda$forStructuresInChunk$2
		p	0		pos
		p	1		piecesOut
		p	2		startX
		p	3		startZ
		p	4		jigsawJunctionsOut
		p	5		start
	m	(Lddq;Ldcd;)Ldyl;	a	forStructuresInChunk
		p	0		world
		p	1		pos
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Lejr;)Z	a	lambda$forStructuresInChunk$1
		p	0		structure
	m	([F)V	a	lambda$static$0
		p	0		array
	m	()D	b	maxValue
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	h	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	i	junctionIterator
c	dyl$1	net/minecraft/world/level/levelgen/Beardifier$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	dyl$a	net/minecraft/world/level/levelgen/Beardifier$a
	m	()Lejj;	a	box
	m	()Lekc;	b	terrainAdjustment
	m	()I	c	groundLevelDelta
	f	Lejj;	a	box
	f	Lekc;	b	terrainAdjustment
	f	I	c	groundLevelDelta
c	dym	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	m	(Ldvz;Ljava/util/Optional;)V	<init>	<init>
		p	1		targetStatus
		p	2		missingBedrock
	m	()Ldvz;	a	targetStatus
	m	(II)Z	a	hasBedrockHole
		p	1		x
		p	2		z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lddz;Lduy;)Lddz;	a	getBiomeResolver
		p	0		biomeSupplier
		p	1		chunk
	m	(Lddz;Ljava/util/function/Predicate;Lduy;IIILdef$f;)Ljm;	a	lambda$getBiomeResolver$8
		p	3		x
		p	4		y
		p	5		z
		p	6		noise
	m	(Ldvs;)V	a	replaceOldBedrock
		p	0		chunk
	m	(Ldvs;Ljd;)V	a	lambda$applyBedrockMask$7
		p	1		pos
	m	(Ldvz;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
		p	0		status
	m	(Ldym;)Ljava/util/Optional;	a	lambda$static$4
		p	0		belowZeroRetrogen
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
		p	0		bedrockBitSet
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
		p	0		serializedBedrockBitSet
	m	(Lub;)Ldym;	a	read
		p	0		nbt
	m	()Z	b	hasBedrockHoles
	m	(Ldvs;)V	b	applyBedrockMask
		p	1		chunk
	m	(Ldvs;Ljd;)V	b	lambda$replaceOldBedrock$6
		p	1		pos
	m	()Ljava/lang/String;	c	lambda$static$2
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldcy;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Ldvz;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
c	dym$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()I	I_	getMinBuildHeight
	m	()I	J_	getHeight
c	dyn	net/minecraft/world/level/levelgen/BitRandomSource
	m	(I)I	a	nextInt
		p	1		bound
	m	(I)I	c	next
		p	1		bits
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	f	F	b	FLOAT_MULTIPLIER
	f	D	c	DOUBLE_MULTIPLIER
c	dyo	net/minecraft/world/level/levelgen/Column
	m	()Ldyo;	a	line
	m	(I)Ldyo;	a	below
		p	0		ceiling
	m	(II)Ldyo$b;	a	around
	m	(Lddc;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Ljd$a;ILji;)Ljava/util/OptionalInt;	a	scanDirection
		p	0		world
		p	1		height
		p	2		canGenerate
		p	3		canReplace
		p	4		mutablePos
		p	5		y
		p	6		direction
	m	(Lddc;Ljd;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
		p	0		world
		p	1		pos
		p	2		height
		p	3		canGenerate
		p	4		canReplace
	m	(Ljava/util/OptionalInt;)Ldyo;	a	withFloor
		p	1		floor
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Ldyo;	a	create
		p	0		ceilingHeight
		p	1		floorHeight
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	(I)Ldyo;	b	fromHighest
	m	(II)Ldyo$b;	b	inside
		p	0		floor
		p	1		ceiling
	m	(Ljava/util/OptionalInt;)Ldyo;	b	withCeiling
		p	1		ceiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	(I)Ldyo;	c	above
		p	0		floor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(I)Ldyo;	d	fromLowest
c	dyo$a	net/minecraft/world/level/levelgen/Column$a
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	Ldyo$a;	a	INSTANCE
c	dyo$b	net/minecraft/world/level/levelgen/Column$b
	m	(II)V	<init>	<init>
		p	1		floor
		p	2		ceiling
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	f	I	a	floor
	f	I	b	ceiling
c	dyo$c	net/minecraft/world/level/levelgen/Column$c
	m	(IZ)V	<init>	<init>
		p	1		height
		p	2		floor
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	f	I	a	edge
	f	Z	b	pointingUp
c	dyp	net/minecraft/world/level/levelgen/ChunkProviderDebug
	m	(Ljm$c;)V	<init>	<init>
		p	1		biomeEntry
	m	(II)Ldtc;	a	getBlockStateFor
		p	0		x
		p	1		z
	m	(IILdcy;Ldzm;)Lddi;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdyy$a;Ldcy;Ldzm;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Larb;)V	a	spawnOriginalMobs
		p	1		region
	m	(Larb;JLdzm;Lddy;Lddq;Lduy;Ldyu$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Larb;Lddq;Ldzm;Lduy;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldds;Lduy;Lddq;)V	a	applyBiomeDecoration
		p	1		world
		p	2		chunk
		p	3		structureAccessor
	m	(Ldfy;)Ljava/util/stream/Stream;	a	lambda$static$1
		p	0		block
	m	(Leaa;Ldzm;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljava/util/List;Ldzm;Ljd;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtc;	d	AIR
	f	Ldtc;	e	BARRIER
	f	I	f	HEIGHT
	f	I	g	BARRIER_HEIGHT
	f	I	h	BLOCK_MARGIN
	f	Ljava/util/List;	i	ALL_BLOCKS
	f	I	j	GRID_WIDTH
	f	I	k	GRID_HEIGHT
c	dyq	dyq
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
c	dyr	net/minecraft/world/level/levelgen/DensityFunction
	m	()D	a	minValue
	m	(DD)Ldyr;	a	clamp
		p	1		min
		p	3		max
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	(Ldyr;)Ljm;	a	lambda$static$0
		p	0		function
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	d	abs
	m	()Ldyr;	e	square
	m	()Ldyr;	f	cube
	m	()Ldyr;	g	halfNegative
	m	()Ldyr;	h	quarterNegative
	m	()Ldyr;	i	squeeze
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
c	dyr$a	net/minecraft/world/level/levelgen/DensityFunction$a
	m	(I)Ldyr$b;	a	forIndex
		p	1		index
	m	([DLdyr;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
c	dyr$b	net/minecraft/world/level/levelgen/DensityFunction$b
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Leaa;	d	getBlender
c	dyr$c	net/minecraft/world/level/levelgen/DensityFunction$c
	m	(Ljm;)V	<init>	<init>
		p	1		noiseData
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(Ljm;)Ldyr$c;	a	lambda$static$0
		p	0		noiseData
	m	()Ljm;	b	noiseData
	m	()Leoh;	c	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	noiseData
	f	Leoh;	c	noise
c	dyr$d	net/minecraft/world/level/levelgen/DensityFunction$d
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
c	dyr$e	net/minecraft/world/level/levelgen/DensityFunction$e
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
c	dyr$f	net/minecraft/world/level/levelgen/DensityFunction$f
	m	(Ldyr$c;)Ldyr$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldyr;)Ldyr;	apply	apply
		p	1		densityFunction
c	dys	net/minecraft/world/level/levelgen/DensityFunctions
	m	()Ldyr;	a	zero
	m	(D)Ldyr;	a	constant
		p	0		density
	m	(IIDD)Ldyr;	a	yClampedGradient
		p	0		fromY
		p	1		toY
		p	2		fromValue
		p	4		toValue
	m	(J)Ldyr;	a	endIslands
		p	0		seed
	m	(Laxp;)Ldyr;	a	spline
		p	0		spline
	m	(Lcom/mojang/datafixers/util/Either;)Ldyr;	a	lambda$static$1
		p	0		either
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Layh;	a	singleArgumentCodec
		p	0		codec
		p	1		creator
		p	2		argumentGetter
	m	(Lcom/mojang/serialization/MapCodec;)Layh;	a	makeCodec
		p	0		mapCodec
	m	(Ldyr;)Ldyr;	a	interpolated
		p	0		inputFunction
	m	(Ldyr;DD)Ldyr;	a	mapFromUnitTo
		p	0		function
		p	1		min
		p	3		max
	m	(Ldyr;DDLdyr;Ldyr;)Ldyr;	a	rangeChoice
		p	0		input
		p	1		minInclusive
		p	3		maxExclusive
		p	5		whenInRange
		p	6		whenOutOfRange
	m	(Ldyr;DLdyr;)Ldyr;	a	lerp
		p	0		delta
		p	1		start
		p	3		end
	m	(Ldyr;Ldyr;)Ldyr;	a	add
		p	0		a
		p	1		b
	m	(Ldyr;Ldyr;DLjm;)Ldyr;	a	shiftedNoise2d
		p	0		shiftX
		p	1		shiftZ
		p	2		xzScale
		p	4		noiseParameters
	m	(Ldyr;Ldyr;Ldyr;)Ldyr;	a	lerp
		p	0		delta
		p	1		start
		p	2		end
	m	(Ldyr;Ldys$k$a;)Ldyr;	a	map
		p	0		input
		p	1		type
	m	(Ldyr;Ljm;Ldys$z$a;)Ldyr;	a	weirdScaledSampler
		p	0		input
		p	1		parameters
		p	2		mapper
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Layh;	a	doubleFunctionArgumentCodec
		p	0		creator
		p	1		argument1Getter
		p	2		argument2Getter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Layh;	a	singleFunctionArgumentCodec
		p	0		creator
		p	1		argumentGetter
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$3
		p	3		instance
	m	(Ljm;)Ldyr;	a	noise
		p	0		noiseParameters
	m	(Ljm;D)Ldyr;	a	noise
		p	0		noiseParameters
		p	1		scaleY
	m	(Ljm;DD)Ldyr;	a	mappedNoise
		p	0		noiseParameters
		p	1		min
		p	3		max
	m	(Ljm;DDD)Ldyr;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleY
		p	3		min
		p	5		max
	m	(Ljm;DDDD)Ldyr;	a	mappedNoise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
		p	5		min
		p	7		max
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	m	(Ljz;Ljava/lang/String;Layh;)Lcom/mojang/serialization/MapCodec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	()Ldyr;	b	blendAlpha
	m	(Ldyr;)Ldyr;	b	flatCache
		p	0		inputFunction
	m	(Ldyr;Ldyr;)Ldyr;	b	mul
		p	0		a
		p	1		b
	m	(Ljm;)Ldyr;	b	shiftA
		p	0		noiseParameters
	m	(Ljm;DD)Ldyr;	b	noise
		p	0		noiseParameters
		p	1		scaleXz
		p	3		scaleY
	m	()Ldyr;	c	blendOffset
	m	(Ldyr;)Ldyr;	c	cache2d
		p	0		inputFunction
	m	(Ldyr;Ldyr;)Ldyr;	c	min
		p	0		a
		p	1		b
	m	(Ljm;)Ldyr;	c	shiftB
		p	0		noiseParameters
	m	(Ldyr;)Ldyr;	d	cacheOnce
		p	0		inputFunction
	m	(Ldyr;Ldyr;)Ldyr;	d	max
		p	0		a
		p	1		b
	m	(Ljm;)Ldyr;	d	shift
		p	0		noiseParameters
	m	(Ldyr;)Ldyr;	e	cacheAllInCell
		p	0		inputFunction
	m	(Ldyr;)Ldyr;	f	blendDensity
		p	0		input
	m	(Ldyr;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$2
		p	0		densityFunction
	m	(Ldyr;)Lcom/mojang/serialization/MapCodec;	h	lambda$static$0
		p	0		densityFunction
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
c	dys$a	net/minecraft/world/level/levelgen/DensityFunctions$a
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldys$y$a;	j	type
	m	()Ldyr;	k	argument1
	m	()Ldyr;	l	argument2
	f	Ldys$y$a;	e	type
	f	Ldyr;	f	argument1
	f	Ldyr;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
c	dys$b	net/minecraft/world/level/levelgen/DensityFunctions$b
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()[Ldys$b;	j	$values
	f	Ldys$b;	a	INSTANCE
	f	[Ldys$b;	f	$VALUES
c	dys$c	net/minecraft/world/level/levelgen/DensityFunctions$c
	m	()Layh;	c	codec
	f	Layh;	e	CODEC
c	dys$d	net/minecraft/world/level/levelgen/DensityFunctions$d
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()[Ldys$d;	j	$values
	f	Ldys$d;	a	INSTANCE
	f	Layh;	e	CODEC
	f	[Ldys$d;	f	$VALUES
c	dys$e	net/minecraft/world/level/levelgen/DensityFunctions$e
	m	()D	a	minValue
	m	(Ldyr$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	j	input
	f	Ldyr;	a	input
	f	Layh;	e	CODEC
c	dys$f	net/minecraft/world/level/levelgen/DensityFunctions$f
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()[Ldys$f;	j	$values
	f	Ldys$f;	a	INSTANCE
	f	Layh;	e	CODEC
	f	[Ldys$f;	f	$VALUES
c	dys$g	net/minecraft/world/level/levelgen/DensityFunctions$g
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Ldyr;	aG_	input
	m	()D	b	maxValue
	m	()Layh;	c	codec
	f	Layh;	a	CODEC
	f	Ldyr;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dys$h	net/minecraft/world/level/levelgen/DensityFunctions$h
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()D	j	value
	f	D	a	value
	f	Layh;	e	CODEC
	f	Ldys$h;	f	ZERO
c	dys$i	net/minecraft/world/level/levelgen/DensityFunctions$i
	m	(J)V	<init>	<init>
		p	1		seed
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Leok;II)F	a	getHeightValue
		p	0		sampler
		p	1		x
		p	2		z
	m	()D	b	maxValue
	m	()Layh;	c	codec
	f	Layh;	a	CODEC
	f	F	e	ISLAND_THRESHOLD
	f	Leok;	f	islandNoise
c	dys$j	net/minecraft/world/level/levelgen/DensityFunctions$j
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ljm;	j	function
	f	Ljm;	a	function
c	dys$k	net/minecraft/world/level/levelgen/DensityFunctions$k
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	(Ldys$k$a;D)D	a	transform
		p	0		type
		p	1		density
	m	(Ldys$k$a;Ldyr;)Ldys$k;	a	create
		p	0		type
		p	1		input
	m	()Ldyr;	aG_	input
	m	()D	b	maxValue
	m	(Ldyr$f;)Ldys$k;	b	mapAll
	m	()Layh;	c	codec
	m	()Ldys$k$a;	k	type
	f	Ldys$k$a;	a	type
	f	Ldyr;	e	input
	f	D	f	minValue
	f	D	g	maxValue
c	dys$k$a	net/minecraft/world/level/levelgen/DensityFunctions$k$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldys$k$a;	a	$values
	m	(Ldyr;)Ldys$k;	a	lambda$new$0
		p	1		input
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldys$k$a;	a	ABS
	f	Ldys$k$a;	b	SQUARE
	f	Ldys$k$a;	c	CUBE
	f	Ldys$k$a;	d	HALF_NEGATIVE
	f	Ldys$k$a;	e	QUARTER_NEGATIVE
	f	Ldys$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Layh;	h	codec
	f	[Ldys$k$a;	i	$VALUES
c	dys$l	net/minecraft/world/level/levelgen/DensityFunctions$l
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	f	Ldys$l$a;	a	type
	f	Ldyr;	e	wrapped
c	dys$l$a	net/minecraft/world/level/levelgen/DensityFunctions$l$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldys$l$a;	a	$values
	m	(Ldyr;)Ldys$m;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldys$l$a;	a	Interpolated
	f	Ldys$l$a;	b	FlatCache
	f	Ldys$l$a;	c	Cache2D
	f	Ldys$l$a;	d	CacheOnce
	f	Ldys$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Layh;	g	codec
	f	[Ldys$l$a;	h	$VALUES
c	dys$m	net/minecraft/world/level/levelgen/DensityFunctions$m
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Layh;	c	codec
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
c	dys$n	net/minecraft/world/level/levelgen/DensityFunctions$n
	m	()D	a	minValue
	m	(D)D	a	transform
		p	1		density
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Ldyr;	aG_	input
	m	()D	b	maxValue
	m	()Ldys$y$a;	j	type
	m	()Ldyr;	k	argument1
	m	()Ldyr;	l	argument2
	m	()Ldys$n$a;	m	specificType
	m	()D	n	argument
	f	Ldys$n$a;	e	specificType
	f	Ldyr;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
c	dys$n$a	net/minecraft/world/level/levelgen/DensityFunctions$n$a
	m	()[Ldys$n$a;	a	$values
	f	Ldys$n$a;	a	MUL
	f	Ldys$n$a;	b	ADD
	f	[Ldys$n$a;	c	$VALUES
c	dys$o	net/minecraft/world/level/levelgen/DensityFunctions$o
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr$c;	j	noise
	m	()D	k	xzScale
	m	()D	l	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Layh;	e	CODEC
	f	Ldyr$c;	f	noise
	f	D	g	xzScale
	f	D	h	yScale
c	dys$p	net/minecraft/world/level/levelgen/DensityFunctions$p
	m	(D)D	a	transform
		p	1		density
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldyr;	aG_	input
c	dys$q	net/minecraft/world/level/levelgen/DensityFunctions$q
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Ldyr;	m	whenInRange
	m	()Ldyr;	n	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Layh;	e	CODEC
	f	Ldyr;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Ldyr;	i	whenInRange
	f	Ldyr;	j	whenOutOfRange
c	dys$r	net/minecraft/world/level/levelgen/DensityFunctions$r
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Layh;	c	codec
	m	()Ldyr$c;	j	offsetNoise
	f	Ldyr$c;	a	offsetNoise
	f	Layh;	e	CODEC
c	dys$s	net/minecraft/world/level/levelgen/DensityFunctions$s
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Layh;	c	codec
	m	()Ldyr$c;	j	offsetNoise
	f	Ldyr$c;	a	offsetNoise
	f	Layh;	e	CODEC
c	dys$t	net/minecraft/world/level/levelgen/DensityFunctions$t
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()Layh;	c	codec
	m	()Ldyr$c;	j	offsetNoise
	f	Ldyr$c;	a	offsetNoise
	f	Layh;	e	CODEC
c	dys$u	net/minecraft/world/level/levelgen/DensityFunctions$u
	m	()D	a	minValue
	m	(DDD)D	a	compute
		p	1		x
		p	3		y
		p	5		z
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Ldyr$c;	j	offsetNoise
c	dys$v	net/minecraft/world/level/levelgen/DensityFunctions$v
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	j	shiftX
	m	()Ldyr;	k	shiftY
	m	()Ldyr;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Ldyr$c;	o	noise
	f	Layh;	a	CODEC
	f	Ldyr;	e	shiftX
	f	Ldyr;	f	shiftY
	f	Ldyr;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Ldyr$c;	j	noise
	f	Lcom/mojang/serialization/MapCodec;	k	DATA_CODEC
c	dys$w	net/minecraft/world/level/levelgen/DensityFunctions$w
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	(Ldyr$f;Ldys$w$a;)Ldys$w$a;	a	lambda$mapAll$0
		p	1		densityFunctionWrapper
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Laxp;	j	spline
	f	Layh;	a	CODEC
	f	Laxp;	e	spline
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	DATA_CODEC
c	dys$w$a	net/minecraft/world/level/levelgen/DensityFunctions$w$a
	m	()Ljm;	a	function
	m	(Ldyr$f;)Ldys$w$a;	a	mapAll
		p	1		visitor
	m	(Ldys$w$b;)F	a	apply
		p	1		x
	m	(Ljava/lang/Object;)F	a	apply
		p	1		x
	m	()F	b	minValue
	m	()F	c	maxValue
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljm;	c	function
c	dys$w$b	net/minecraft/world/level/levelgen/DensityFunctions$w$b
	m	()Ldyr$b;	a	context
	f	Ldyr$b;	a	context
c	dys$x	net/minecraft/world/level/levelgen/DensityFunctions$x
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldyr;	j	input
c	dys$y	net/minecraft/world/level/levelgen/DensityFunctions$y
	m	(Ldys$y$a;Ldyr;Ldyr;)Ldys$y;	a	create
		p	0		type
		p	1		argument1
		p	2		argument2
	m	()Layh;	c	codec
	m	()Ldys$y$a;	j	type
	m	()Ldyr;	k	argument1
	m	()Ldyr;	l	argument2
	f	Lorg/slf4j/Logger;	a	LOGGER
c	dys$y$a	net/minecraft/world/level/levelgen/DensityFunctions$y$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Ldys$y$a;	a	$values
	m	(Ldyr;Ldyr;)Ldys$y;	a	lambda$new$0
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldys$y$a;	a	ADD
	f	Ldys$y$a;	b	MUL
	f	Ldys$y$a;	c	MIN
	f	Ldys$y$a;	d	MAX
	f	Layh;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Ldys$y$a;	g	$VALUES
c	dys$z	net/minecraft/world/level/levelgen/DensityFunctions$z
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$b;D)D	a	transform
		p	1		pos
		p	2		density
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	j	input
	m	()Ldyr$c;	k	noise
	m	()Ldys$z$a;	l	rarityValueMapper
	f	Layh;	a	CODEC
	f	Ldyr;	e	input
	f	Ldyr$c;	f	noise
	f	Ldys$z$a;	g	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
c	dys$z$a	net/minecraft/world/level/levelgen/DensityFunctions$z$a
	m	(Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V	<init>	<init>
		p	3		name
		p	4		scaleFunction
		p	5		maxValueMultiplier
	m	()[Ldys$z$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldys$z$a;	a	TYPE1
	f	Ldys$z$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	e	mapper
	f	D	f	maxRarity
	f	[Ldys$z$a;	g	$VALUES
c	dys$aa	net/minecraft/world/level/levelgen/DensityFunctions$aa
	m	()D	a	minValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	f	Layh;	a	CODEC
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
c	dyt	net/minecraft/world/level/levelgen/ChunkProviderFlat
	m	(Leht;)V	<init>	<init>
		p	1		config
	m	(I)[Ldtc;	a	lambda$getBaseColumn$4
	m	(IILdcy;Ldzm;)Lddi;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdyy$a;Ldcy;Ldzm;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Larb;)V	a	spawnOriginalMobs
		p	1		region
	m	(Larb;JLdzm;Lddy;Lddq;Lduy;Ldyu$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Larb;Lddq;Ldzm;Lduy;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldcy;)I	a	getSpawnHeight
		p	1		world
	m	(Ldtc;)Ldtc;	a	lambda$getBaseColumn$3
		p	0		state
	m	(Leaa;Ldzm;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljava/util/List;Ldzm;Ljd;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	(Ljm$c;)Ljm;	a	lambda$createState$1
	m	(Ljo;)Ljava/util/stream/Stream;	a	lambda$createState$2
	m	(Ljo;Ldzm;J)Ldva;	a	createState
		p	1		structureSetRegistry
		p	2		noiseConfig
		p	3		seed
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	()Leht;	h	settings
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leht;	d	settings
c	dyu	net/minecraft/world/level/levelgen/WorldGenStage
c	dyu$a	net/minecraft/world/level/levelgen/WorldGenStage$Features
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldyu$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldyu$a;	a	AIR
	f	Ldyu$a;	b	LIQUID
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Ldyu$a;	e	$VALUES
c	dyu$b	net/minecraft/world/level/levelgen/WorldGenStage$Decoration
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Ldyu$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Ldyu$b;	a	RAW_GENERATION
	f	Ldyu$b;	b	LAKES
	f	Ldyu$b;	c	LOCAL_MODIFICATIONS
	f	Ldyu$b;	d	UNDERGROUND_STRUCTURES
	f	Ldyu$b;	e	SURFACE_STRUCTURES
	f	Ldyu$b;	f	STRONGHOLDS
	f	Ldyu$b;	g	UNDERGROUND_ORES
	f	Ldyu$b;	h	UNDERGROUND_DECORATION
	f	Ldyu$b;	i	FLUID_SPRINGS
	f	Ldyu$b;	j	VEGETAL_DECORATION
	f	Ldyu$b;	k	TOP_LAYER_MODIFICATION
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Ljava/lang/String;	m	name
	f	[Ldyu$b;	n	$VALUES
c	dyv	net/minecraft/world/level/levelgen/GeodeBlockSettings
	m	(Legj;Legj;Legj;Legj;Legj;Ljava/util/List;Lawu;Lawu;)V	<init>	<init>
		p	1		fillingProvider
		p	2		innerLayerProvider
		p	3		alternateInnerLayerProvider
		p	4		middleLayerProvider
		p	5		outerLayerProvider
		p	6		innerBlocks
		p	7		cannotReplace
		p	8		invalidBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
		p	0		instance
	m	(Ldyv;)Lawu;	a	lambda$static$7
		p	0		config
	m	(Ldyv;)Lawu;	b	lambda$static$6
		p	0		config
	m	(Ldyv;)Ljava/util/List;	c	lambda$static$5
		p	0		config
	m	(Ldyv;)Legj;	d	lambda$static$4
		p	0		config
	m	(Ldyv;)Legj;	e	lambda$static$3
		p	0		config
	m	(Ldyv;)Legj;	f	lambda$static$2
		p	0		config
	m	(Ldyv;)Legj;	g	lambda$static$1
		p	0		config
	m	(Ldyv;)Legj;	h	lambda$static$0
		p	0		config
	f	Legj;	a	fillingProvider
	f	Legj;	b	innerLayerProvider
	f	Legj;	c	alternateInnerLayerProvider
	f	Legj;	d	middleLayerProvider
	f	Legj;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Lawu;	g	cannotReplace
	f	Lawu;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
c	dyw	net/minecraft/world/level/levelgen/GeodeCrackSettings
	m	(DDI)V	<init>	<init>
		p	1		generateCrackChance
		p	3		baseCrackSize
		p	5		crackPointOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldyw;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Ldyw;)Ljava/lang/Double;	b	lambda$static$1
		p	0		config
	m	(Ldyw;)Ljava/lang/Double;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
c	dyx	net/minecraft/world/level/levelgen/GeodeLayerSettings
	m	(DDDD)V	<init>	<init>
		p	1		filling
		p	3		innerLayer
		p	5		middleLayer
		p	7		outerLayer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldyx;)Ljava/lang/Double;	a	lambda$static$3
		p	0		config
	m	(Ldyx;)Ljava/lang/Double;	b	lambda$static$2
		p	0		config
	m	(Ldyx;)Ljava/lang/Double;	c	lambda$static$1
		p	0		config
	m	(Ldyx;)Ljava/lang/Double;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
c	dyy	net/minecraft/world/level/levelgen/HeightMap
	m	(Lduy;Ldyy$a;)V	<init>	<init>
		p	1		chunk
		p	2		type
	m	()[J	a	getRawData
	m	(I)I	a	getFirstAvailable
		p	1		index
	m	(II)I	a	getFirstAvailable
		p	1		x
		p	2		z
	m	(III)V	a	setHeight
		p	1		x
		p	2		z
		p	3		height
	m	(IIILdtc;)Z	a	update
		p	1		x
		p	2		y
		p	3		z
		p	4		state
	m	(Ldtc;)Z	a	lambda$static$0
		p	0		state
	m	(Lduy;Ldyy$a;[J)V	a	setRawData
		p	1		chunk
		p	2		type
		p	3		values
	m	(Lduy;Ljava/util/Set;)V	a	primeHeightmaps
		p	0		chunk
		p	1		types
	m	(II)I	b	getHighestTaken
		p	1		x
		p	2		z
	m	(II)I	c	getIndex
		p	0		x
		p	1		z
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Laxc;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Lduy;	f	chunk
c	dyy$a	net/minecraft/world/level/levelgen/HeightMap$Type
	m	(Ljava/lang/String;ILjava/lang/String;Ldyy$b;Ljava/util/function/Predicate;)V	<init>	<init>
		p	3		name
		p	4		purpose
		p	5		blockPredicate
	m	()Ljava/lang/String;	a	getSerializationKey
	m	(Ldtc;)Z	a	lambda$static$1
		p	0		state
	m	()Z	b	sendToClient
	m	(Ldtc;)Z	b	lambda$static$0
		p	0		state
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()[Ldyy$a;	f	$values
	f	Ldyy$a;	a	WORLD_SURFACE_WG
	f	Ldyy$a;	b	WORLD_SURFACE
	f	Ldyy$a;	c	OCEAN_FLOOR_WG
	f	Ldyy$a;	d	OCEAN_FLOOR
	f	Ldyy$a;	e	MOTION_BLOCKING
	f	Ldyy$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	serializationKey
	f	Ldyy$b;	i	usage
	f	Ljava/util/function/Predicate;	j	isOpaque
	f	[Ldyy$a;	k	$VALUES
c	dyy$b	net/minecraft/world/level/levelgen/HeightMap$Use
	m	()[Ldyy$b;	a	$values
	f	Ldyy$b;	a	WORLDGEN
	f	Ldyy$b;	b	LIVE_WORLD
	f	Ldyy$b;	c	CLIENT
	f	[Ldyy$b;	d	$VALUES
c	dyz	net/minecraft/world/level/levelgen/LegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldza;	i	gaussianSource
c	dyz$a	net/minecraft/world/level/levelgen/LegacyRandomSource$a
	m	(J)V	<init>	<init>
		p	1		seed
	m	(III)Layw;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(J)Layw;	a	fromSeed
		p	1		seed
	m	(Ljava/lang/String;)Layw;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seed
c	dza	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	m	(Layw;)V	<init>	<init>
		p	1		baseRandom
	m	()V	a	reset
	m	()D	b	nextGaussian
	f	Layw;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
c	dzb	net/minecraft/world/level/levelgen/ChunkGeneratorAbstract
	m	(Ldea;Ljm;)V	<init>	<init>
		p	1		biomeSource
		p	2		settings
	m	(IILdcy;Ldzm;)Lddi;	a	getBaseColumn
		p	1		x
		p	2		z
		p	3		world
		p	4		noiseConfig
	m	(IILdyy$a;Ldcy;Ldzm;)I	a	getBaseHeight
		p	1		x
		p	2		z
		p	3		heightmap
		p	4		world
		p	5		noiseConfig
	m	(Lakq;)Z	a	stable
		p	1		settings
	m	(Larb;)V	a	spawnOriginalMobs
		p	1		region
	m	(Larb;JLdzm;Lddy;Lddq;Lduy;Ldyu$a;)V	a	applyCarvers
		p	1		chunkRegion
		p	2		seed
		p	4		noiseConfig
		p	5		biomeAccess
		p	6		structureAccessor
		p	7		chunk
		p	8		carverStep
	m	(Larb;Lddq;Ldzm;Lduy;)V	a	buildSurface
		p	1		region
		p	2		structures
		p	3		noiseConfig
		p	4		chunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldcd;Ldzm;)Lddx;	a	lambda$applyCarvers$10
	m	(Ldcy;Ldzm;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt;	a	iterateNoiseColumn
		p	1		world
		p	2		noiseConfig
		p	3		x
		p	4		z
		p	5		columnSample
		p	6		stopPredicate
	m	(Lddq;Larb;Ldzm;Lduy;)Ldzc;	a	lambda$applyCarvers$9
		p	4		chunkx
	m	(Lddq;Leaa;Ldzm;Lduy;)Ldzc;	a	lambda$doFill$12
		p	4		chunkx
	m	(Lduy;ILdzg;ILeaa;Lddq;Ldzm;I)Lduy;	a	lambda$fillFromNoise$11
	m	(Lduy;Lddq;Leaa;Ldzm;)Ldzc;	a	createNoiseChunk
		p	1		chunk
		p	2		world
		p	3		blender
		p	4		noiseConfig
	m	(Lduy;Ldzv;Ldzm;Lddq;Lddy;Ljz;Leaa;)V	a	buildSurface
		p	1		chunk
		p	2		heightContext
		p	3		noiseConfig
		p	4		structureAccessor
		p	5		biomeAccess
		p	6		biomeRegistry
		p	7		blender
	m	(Ldyk$b;ILdyk$b;Ldyk$b;III)Ldyk$b;	a	lambda$createFluidPicker$4
		p	4		x
		p	5		y
		p	6		z
	m	(Ldzb;)Ljm;	a	lambda$static$1
		p	0		generator
	m	(Ldzc;IIILdtc;)Ldtc;	a	debugPreliminarySurfaceLevel
		p	1		chunkNoiseSampler
		p	2		x
		p	3		y
		p	4		z
		p	5		state
	m	(Ldzd;)Ldyk$a;	a	createFluidPicker
		p	0		settings
	m	(Ldzm;III)Ljm;	a	lambda$applyCarvers$8
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
	m	(Ldzm;Leaa;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
		p	1		noiseConfig
		p	2		blender
		p	3		structureAccessor
		p	4		chunk
	m	(Leaa;Lddq;Ldzm;Lduy;II)Lduy;	a	doFill
		p	1		blender
		p	2		structureAccessor
		p	3		noiseConfig
		p	4		chunk
		p	5		minimumCellY
		p	6		cellHeight
	m	(Leaa;Ldzm;Lddq;Lduy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljava/util/List;Ldzm;Ljd;)V	a	addDebugScreenInfo
		p	1		text
		p	2		noiseConfig
		p	3		pos
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	(Lddq;Leaa;Ldzm;Lduy;)Ldzc;	b	lambda$buildSurface$7
		p	4		chunkx
	m	(Ldzb;)Ldea;	b	lambda$static$0
		p	0		generator
	m	(Leaa;Ldzm;Lddq;Lduy;)V	b	doCreateBiomes
		p	1		blender
		p	2		noiseConfig
		p	3		structureAccessor
		p	4		chunk
	m	(Ljm;)Ldyk$a;	b	lambda$new$3
	m	(Lddq;Leaa;Ldzm;Lduy;)Ldzc;	c	lambda$doCreateBiomes$6
		p	4		chunkx
	m	(Leaa;Ldzm;Lddq;Lduy;)Lduy;	c	lambda$createBiomes$5
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	()Ljm;	h	generatorSettings
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldtc;	d	AIR
	f	Ljm;	e	settings
	f	Ljava/util/function/Supplier;	f	globalFluidPicker
c	dzc	net/minecraft/world/level/levelgen/NoiseChunk
	m	(ILdzm;IILdzg;Ldys$c;Ldzd;Ldyk$a;Leaa;)V	<init>	<init>
		p	1		horizontalCellCount
		p	2		noiseConfig
		p	3		startBlockX
		p	4		startBlockZ
		p	5		generationShapeConfig
		p	6		beardifying
		p	7		chunkGeneratorSettings
		p	8		fluidLevelSampler
		p	9		blender
	m	()I	a	blockX
	m	(DLdzc$i;)V	a	lambda$updateForZ$4
		p	2		interpolator
	m	(I)Ldyr$b;	a	forIndex
		p	1		index
	m	(ID)V	a	updateForY
		p	1		blockY
		p	2		deltaY
	m	(II)I	a	preliminarySurfaceLevel
		p	1		blockX
		p	2		blockZ
	m	(IILdzc$i;)V	a	lambda$selectCellYZ$1
		p	2		interpolator
	m	(J)I	a	computePreliminarySurfaceLevel
		p	1		columnPos
	m	(Lduy;Ldzm;Ldys$c;Ldzd;Ldyk$a;Leaa;)Ldzc;	a	forChunk
		p	0		chunk
		p	1		noiseConfig
		p	2		beardifying
		p	3		chunkGeneratorSettings
		p	4		fluidLevelSampler
		p	5		blender
	m	(Ldyr;)Ldyr;	a	wrap
		p	1		function
	m	(Ldyr;Ldyr$b;)Ldtc;	a	lambda$new$0
		p	2		pos
	m	(Ldze;Ljava/util/List;)Ldef$f;	a	cachedClimateSampler
		p	1		noiseRouter
		p	2		spawnTarget
	m	(ZI)V	a	fillSlice
		p	1		start
		p	2		cellX
	m	([DLdyr;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	m	()I	b	blockY
	m	(DLdzc$i;)V	b	lambda$updateForX$3
		p	2		interpolator
	m	(I)V	b	advanceCellX
		p	1		cellX
	m	(ID)V	b	updateForX
		p	1		blockX
		p	2		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(Ldyr;)Ldyr;	b	wrapNew
		p	1		function
	m	()I	c	blockZ
	m	(DLdzc$i;)V	c	lambda$updateForY$2
		p	2		interpolator
	m	(I)Ldzc;	c	forIndex
	m	(ID)V	c	updateForZ
		p	1		blockZ
		p	2		deltaZ
	m	(II)Leaa$a;	c	getOrComputeBlendingOutput
		p	1		blockX
		p	2		blockZ
	m	()Leaa;	d	getBlender
	m	()Ldtc;	e	getInterpolatedState
	m	()V	f	initializeForFirstCellX
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Ldyk;	i	aquifer
	m	()I	j	cellWidth
	m	()I	k	cellHeight
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Ldyr$a;	J	sliceFillingContextProvider
	f	Ldzg;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Ldyk;	m	aquifer
	f	Ldyr;	n	initialDensityNoJaggedness
	f	Ldzc$c;	o	blockStateRule
	f	Leaa;	p	blender
	f	Ldzc$g;	q	blendAlpha
	f	Ldzc$g;	r	blendOffset
	f	Ldys$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Leaa$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
c	dzc$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	m	(I)Ldyr$b;	a	forIndex
		p	1		index
	m	([DLdyr;)V	a	fillAllDirectly
		p	1		densities
		p	2		densityFunction
	f	Ldzc;	a	this$0
c	dzc$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
c	dzc$a	net/minecraft/world/level/levelgen/NoiseChunk$a
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	k	wrapped
	f	Ldzc;	a	this$0
c	dzc$b	net/minecraft/world/level/levelgen/NoiseChunk$b
	m	()D	a	minValue
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Ldyr$f;)Ldyr;	a	mapAll
		p	1		visitor
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()D	b	maxValue
	m	()Layh;	c	codec
	m	()Ldyr;	k	wrapped
	f	Ldzc;	a	this$0
c	dzc$c	net/minecraft/world/level/levelgen/NoiseChunk$c
	m	(Ldyr$b;)Ldtc;	calculate	calculate
		p	1		pos
c	dzc$d	net/minecraft/world/level/levelgen/NoiseChunk$d
	m	(Ldyr;)V	<init>	<init>
		p	1		delegate
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	f	Ldyr;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
c	dzc$e	net/minecraft/world/level/levelgen/NoiseChunk$e
	m	(Ldzc;Ldyr;)V	<init>	<init>
		p	2		delegate
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	f	Ldzc;	a	this$0
	f	Ldyr;	e	noiseFiller
	f	[D	f	values
c	dzc$f	net/minecraft/world/level/levelgen/NoiseChunk$f
	m	(Ldzc;Ldyr;)V	<init>	<init>
		p	2		delegate
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	f	Ldzc;	a	this$0
	f	Ldyr;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
c	dzc$g	net/minecraft/world/level/levelgen/NoiseChunk$g
	m	(Ldzc;Ldyr;Z)V	<init>	<init>
		p	2		delegate
		p	3		sample
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	f	Ldzc;	a	this$0
	f	Ldyr;	e	noiseFiller
	f	[[D	f	values
c	dzc$h	net/minecraft/world/level/levelgen/NoiseChunk$h
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Ldyr;	k	wrapped
c	dzc$i	net/minecraft/world/level/levelgen/NoiseChunk$i
	m	(Ldzc;Ldyr;)V	<init>	<init>
		p	2		delegate
	m	(D)V	a	updateForY
		p	1		deltaY
	m	(II)[[D	a	allocateSlice
		p	1		sizeZ
		p	2		sizeX
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	([DLdyr$a;)V	a	fillArray
		p	1		densities
		p	2		applier
	m	(D)V	b	updateForX
		p	1		deltaX
	m	(II)V	b	selectCellYZ
		p	1		cellY
		p	2		cellZ
	m	(D)V	c	updateForZ
		p	1		deltaZ
	m	()Ldys$l$a;	j	type
	m	()Ldyr;	k	wrapped
	m	()V	l	swapSlices
	f	Ldzc;	a	this$0
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Ldyr;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
c	dzd	net/minecraft/world/level/levelgen/GeneratorSettingBase
	m	(Ldzg;Ldtc;Ldtc;Ldze;Ldzp$o;Ljava/util/List;IZZZZ)V	<init>	<init>
		p	5		surfaceRule
	m	()Z	a	disableMobGeneration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lqq;)V	a	bootstrap
		p	0		chunkGenerationSettingsRegisterable
	m	(Lqq;ZZ)Ldzd;	a	overworld
		p	0		registerable
		p	1		amplified
		p	2		largeBiomes
	m	()Z	b	isAquifersEnabled
	m	(Lqq;)Ldzd;	b	end
		p	0		registerable
	m	()Z	c	oreVeinsEnabled
	m	(Lqq;)Ldzd;	c	nether
		p	0		registerable
	m	()Ldzx$a;	d	getRandomSource
	m	(Lqq;)Ldzd;	d	caves
		p	0		registerable
	m	()Ldzd;	e	dummy
	m	(Lqq;)Ldzd;	e	floatingIslands
		p	0		registerable
	m	()Ldzg;	f	noiseSettings
	m	()Ldtc;	g	defaultBlock
	m	()Ldtc;	h	defaultFluid
	m	()Ldze;	i	noiseRouter
	m	()Ldzp$o;	j	surfaceRule
	m	()Ljava/util/List;	k	spawnTarget
	m	()I	l	seaLevel
	m	()Z	m	aquifersEnabled
	m	()Z	n	useLegacyRandomSource
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lakq;	c	OVERWORLD
	f	Lakq;	d	LARGE_BIOMES
	f	Lakq;	e	AMPLIFIED
	f	Lakq;	f	NETHER
	f	Lakq;	g	END
	f	Lakq;	h	CAVES
	f	Lakq;	i	FLOATING_ISLANDS
	f	Ldzg;	j	noiseSettings
	f	Ldtc;	k	defaultBlock
	f	Ldtc;	l	defaultFluid
	f	Ldze;	m	noiseRouter
	f	Ldzp$o;	n	surfaceRule
	f	Ljava/util/List;	o	spawnTarget
	f	I	p	seaLevel
	f	Z	q	disableMobGeneration
	f	Z	r	aquifersEnabled
	f	Z	s	oreVeinsEnabled
	f	Z	t	useLegacyRandomSource
c	dze	net/minecraft/world/level/levelgen/NoiseRouter
	m	()Ldyr;	a	barrierNoise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldyr$f;)Ldze;	a	mapAll
		p	1		visitor
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
		p	0		name
		p	1		getter
	m	()Ldyr;	b	fluidLevelFloodednessNoise
	m	()Ldyr;	c	fluidLevelSpreadNoise
	m	()Ldyr;	d	lavaNoise
	m	()Ldyr;	e	temperature
	m	()Ldyr;	f	vegetation
	m	()Ldyr;	g	continents
	m	()Ldyr;	h	erosion
	m	()Ldyr;	i	depth
	m	()Ldyr;	j	ridges
	m	()Ldyr;	k	initialDensityWithoutJaggedness
	m	()Ldyr;	l	finalDensity
	m	()Ldyr;	m	veinToggle
	m	()Ldyr;	n	veinRidged
	m	()Ldyr;	o	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldyr;	b	barrierNoise
	f	Ldyr;	c	fluidLevelFloodednessNoise
	f	Ldyr;	d	fluidLevelSpreadNoise
	f	Ldyr;	e	lavaNoise
	f	Ldyr;	f	temperature
	f	Ldyr;	g	vegetation
	f	Ldyr;	h	continents
	f	Ldyr;	i	erosion
	f	Ldyr;	j	depth
	f	Ldyr;	k	ridges
	f	Ldyr;	l	initialDensityWithoutJaggedness
	f	Ldyr;	m	finalDensity
	f	Ldyr;	n	veinToggle
	f	Ldyr;	o	veinRidged
	f	Ldyr;	p	veinGap
c	dzf	net/minecraft/world/level/levelgen/NoiseRouterData
	m	()Ldze;	a	none
	m	(F)F	a	peaksAndValleys
		p	0		weirdness
	m	(Ldyr;)Ldyr;	a	peaksAndValleys
		p	0		input
	m	(Ldyr;II)Ldyr;	a	slideEndLike
		p	0		function
		p	1		minY
		p	2		maxY
	m	(Ldyr;IIIIDIID)Ldyr;	a	slide
		p	0		density
		p	1		minY
		p	2		maxY
		p	3		topRelativeMinY
		p	4		topRelativeMaxY
		p	5		topDensity
		p	7		bottomRelativeMinY
		p	8		bottomRelativeMaxY
		p	9		bottomDensity
	m	(Ldyr;Ldyr;)Ldyr;	a	splineWithBlending
		p	0		function
		p	1		blendOffset
	m	(Ldyr;Ldyr;III)Ldyr;	a	yLimitedInterpolatable
		p	0		y
		p	1		whenInRange
		p	2		minInclusive
		p	3		maxInclusive
		p	4		whenOutOfRange
	m	(Ldzi$a;)I	a	lambda$overworld$1
		p	0		veinType
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljn;)Ldze;	a	end
		p	0		densityFunctionLookup
	m	(Ljn;II)Ldyr;	a	slideNetherLike
		p	0		densityFunctionLookup
		p	1		minY
		p	2		maxY
	m	(Ljn;Lakq;)Ldyr;	a	getFunction
		p	0		densityFunctionRegisterable
		p	1		key
	m	(Ljn;Ljn;)Ldze;	a	nether
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Ljn;Ljn;Ldyr;)Ldyr;	a	underground
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		slopedCheese
	m	(Ljn;Ljn;ZZ)Ldze;	a	overworld
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		largeBiomes
		p	3		amplified
	m	(Lqq;)Ljm;	a	bootstrap
		p	0		densityFunctionRegisterable
	m	(Lqq;Lakq;Ldyr;)Ldyr;	a	registerAndWrap
		p	0		densityFunctionRegisterable
		p	1		key
		p	2		densityFunction
	m	(Lqq;Ljn;Ldyr;Ljm;Ljm;Lakq;Lakq;Lakq;Lakq;Lakq;Z)V	a	registerTerrainNoises
		p	0		densityFunctionRegisterable
		p	1		densityFunctionLookup
		p	2		jaggedNoise
		p	3		continents
		p	4		erosion
		p	5		offsetKey
		p	6		factorKey
		p	7		jaggednessKey
		p	8		depthKey
		p	9		slopedCheeseKey
		p	10		amplified
	m	(ZLdyr;)Ldyr;	a	slideOverworld
		p	0		amplified
		p	1		density
	m	(Ldyr;)Ldyr;	b	postProcess
		p	0		density
	m	(Ldyr;Ldyr;)Ldyr;	b	noiseGradientDensity
		p	0		factor
		p	1		depth
	m	(Ldzi$a;)I	b	lambda$overworld$0
		p	0		veinType
	m	(Ljn;)Ldyr;	b	spaghettiRoughnessFunction
		p	0		noiseParametersLookup
	m	(Ljn;Ljn;)Ldze;	b	caves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Ljn;Ljn;Ldyr;)Ldze;	b	noNewCaves
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
		p	2		density
	m	(Ldyr;)Ldyr;	c	slideEnd
		p	0		slopedCheese
	m	(Ljn;)Ldyr;	c	pillars
		p	0		noiseParametersLookup
	m	(Ljn;Ljn;)Ldze;	c	floatingIslands
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Ljn;Ljn;)Ldyr;	d	entrances
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Ljn;Ljn;)Ldyr;	e	noodle
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	m	(Ljn;Ljn;)Ldyr;	f	spaghetti2D
		p	0		densityFunctionLookup
		p	1		noiseParametersLookup
	f	Lakq;	A	BASE_3D_NOISE_END
	f	Lakq;	B	SLOPED_CHEESE
	f	Lakq;	C	OFFSET_LARGE
	f	Lakq;	D	FACTOR_LARGE
	f	Lakq;	E	JAGGEDNESS_LARGE
	f	Lakq;	F	DEPTH_LARGE
	f	Lakq;	G	SLOPED_CHEESE_LARGE
	f	Lakq;	H	OFFSET_AMPLIFIED
	f	Lakq;	I	FACTOR_AMPLIFIED
	f	Lakq;	J	JAGGEDNESS_AMPLIFIED
	f	Lakq;	K	DEPTH_AMPLIFIED
	f	Lakq;	L	SLOPED_CHEESE_AMPLIFIED
	f	Lakq;	M	SLOPED_CHEESE_END
	f	Lakq;	N	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Lakq;	O	ENTRANCES
	f	Lakq;	P	NOODLE
	f	Lakq;	Q	PILLARS
	f	Lakq;	R	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Lakq;	S	SPAGHETTI_2D
	f	F	a	GLOBAL_OFFSET
	f	I	b	ISLAND_CHUNK_DISTANCE
	f	J	c	ISLAND_CHUNK_DISTANCE_SQR
	f	Lakq;	d	CONTINENTS
	f	Lakq;	e	EROSION
	f	Lakq;	f	RIDGES
	f	Lakq;	g	RIDGES_FOLDED
	f	Lakq;	h	OFFSET
	f	Lakq;	i	FACTOR
	f	Lakq;	j	JAGGEDNESS
	f	Lakq;	k	DEPTH
	f	Lakq;	l	CONTINENTS_LARGE
	f	Lakq;	m	EROSION_LARGE
	f	F	n	ORE_THICKNESS
	f	D	o	VEININESS_FREQUENCY
	f	D	p	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	q	SURFACE_DENSITY_THRESHOLD
	f	D	r	CHEESE_NOISE_TARGET
	f	Ldyr;	s	BLENDING_FACTOR
	f	Ldyr;	t	BLENDING_JAGGEDNESS
	f	Lakq;	u	ZERO
	f	Lakq;	v	Y
	f	Lakq;	w	SHIFT_X
	f	Lakq;	x	SHIFT_Z
	f	Lakq;	y	BASE_3D_NOISE_OVERWORLD
	f	Lakq;	z	BASE_3D_NOISE_NETHER
c	dzf$a	net/minecraft/world/level/levelgen/NoiseRouterData$a
	m	(D)D	a	getSphaghettiRarity2D
		p	0		value
	m	(D)D	b	getSpaghettiRarity3D
		p	0		value
c	dzg	net/minecraft/world/level/levelgen/NoiseSettings
	m	(IIII)V	<init>	<init>
		p	1		minimumY
		p	2		height
	m	()I	a	getCellHeight
	m	(IIII)Ldzg;	a	create
		p	0		minimumY
		p	1		height
		p	2		horizontalSize
		p	3		verticalSize
	m	(Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$create$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldcy;)Ldzg;	a	clampToHeightAccessor
		p	1		world
	m	(Ldzg;)Lcom/mojang/serialization/DataResult;	a	guardY
		p	0		config
	m	()I	b	getCellWidth
	m	()I	c	minY
	m	()I	d	height
	m	()I	e	noiseSizeHorizontal
	m	()I	f	noiseSizeVertical
	m	()Ljava/lang/String;	g	lambda$guardY$3
	m	()Ljava/lang/String;	h	lambda$guardY$2
	m	()Ljava/lang/String;	i	lambda$guardY$1
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldzg;	b	OVERWORLD_NOISE_SETTINGS
	f	Ldzg;	c	NETHER_NOISE_SETTINGS
	f	Ldzg;	d	END_NOISE_SETTINGS
	f	Ldzg;	e	CAVES_NOISE_SETTINGS
	f	Ldzg;	f	FLOATING_ISLANDS_NOISE_SETTINGS
	f	I	g	minY
	f	I	h	height
	f	I	i	noiseSizeHorizontal
	f	I	j	noiseSizeVertical
c	dzh	net/minecraft/world/level/levelgen/Noises
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	m	(Ljn;Ldzl;Lakq;)Leoh;	a	instantiate
		p	0		noiseParametersLookup
		p	1		splitter
		p	2		key
	f	Lakq;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Lakq;	B	CAVE_ENTRANCE
	f	Lakq;	C	CAVE_LAYER
	f	Lakq;	D	CAVE_CHEESE
	f	Lakq;	E	ORE_VEININESS
	f	Lakq;	F	ORE_VEIN_A
	f	Lakq;	G	ORE_VEIN_B
	f	Lakq;	H	ORE_GAP
	f	Lakq;	I	NOODLE
	f	Lakq;	J	NOODLE_THICKNESS
	f	Lakq;	K	NOODLE_RIDGE_A
	f	Lakq;	L	NOODLE_RIDGE_B
	f	Lakq;	M	JAGGED
	f	Lakq;	N	SURFACE
	f	Lakq;	O	SURFACE_SECONDARY
	f	Lakq;	P	CLAY_BANDS_OFFSET
	f	Lakq;	Q	BADLANDS_PILLAR
	f	Lakq;	R	BADLANDS_PILLAR_ROOF
	f	Lakq;	S	BADLANDS_SURFACE
	f	Lakq;	T	ICEBERG_PILLAR
	f	Lakq;	U	ICEBERG_PILLAR_ROOF
	f	Lakq;	V	ICEBERG_SURFACE
	f	Lakq;	W	SWAMP
	f	Lakq;	X	CALCITE
	f	Lakq;	Y	GRAVEL
	f	Lakq;	Z	POWDER_SNOW
	f	Lakq;	a	TEMPERATURE
	f	Lakq;	aa	PACKED_ICE
	f	Lakq;	ab	ICE
	f	Lakq;	ac	SOUL_SAND_LAYER
	f	Lakq;	ad	GRAVEL_LAYER
	f	Lakq;	ae	PATCH
	f	Lakq;	af	NETHERRACK
	f	Lakq;	ag	NETHER_WART
	f	Lakq;	ah	NETHER_STATE_SELECTOR
	f	Lakq;	b	VEGETATION
	f	Lakq;	c	CONTINENTALNESS
	f	Lakq;	d	EROSION
	f	Lakq;	e	TEMPERATURE_LARGE
	f	Lakq;	f	VEGETATION_LARGE
	f	Lakq;	g	CONTINENTALNESS_LARGE
	f	Lakq;	h	EROSION_LARGE
	f	Lakq;	i	RIDGE
	f	Lakq;	j	SHIFT
	f	Lakq;	k	AQUIFER_BARRIER
	f	Lakq;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Lakq;	m	AQUIFER_LAVA
	f	Lakq;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Lakq;	o	PILLAR
	f	Lakq;	p	PILLAR_RARENESS
	f	Lakq;	q	PILLAR_THICKNESS
	f	Lakq;	r	SPAGHETTI_2D
	f	Lakq;	s	SPAGHETTI_2D_ELEVATION
	f	Lakq;	t	SPAGHETTI_2D_MODULATOR
	f	Lakq;	u	SPAGHETTI_2D_THICKNESS
	f	Lakq;	v	SPAGHETTI_3D_1
	f	Lakq;	w	SPAGHETTI_3D_2
	f	Lakq;	x	SPAGHETTI_3D_RARITY
	f	Lakq;	y	SPAGHETTI_3D_THICKNESS
	f	Lakq;	z	SPAGHETTI_ROUGHNESS
c	dzi	net/minecraft/world/level/levelgen/OreVeinifier
	m	(Ldyr;Ldtc;Ldzl;Ldyr;Ldyr;Ldyr$b;)Ldtc;	a	lambda$create$0
		p	5		pos
	m	(Ldyr;Ldyr;Ldyr;Ldzl;)Ldzc$c;	a	create
		p	0		veinToggle
		p	1		veinRidged
		p	2		veinGap
		p	3		randomDeriver
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
c	dzi$a	net/minecraft/world/level/levelgen/OreVeinifier$a
	m	(Ljava/lang/String;ILdtc;Ldtc;Ldtc;II)V	<init>	<init>
		p	3		ore
		p	4		rawOreBlock
		p	5		stone
		p	6		minY
		p	7		maxY
	m	()[Ldzi$a;	a	$values
	f	Ldzi$a;	a	COPPER
	f	Ldzi$a;	b	IRON
	f	I	c	minY
	f	I	d	maxY
	f	Ldtc;	e	ore
	f	Ldtc;	f	rawOreBlock
	f	Ldtc;	g	filler
	f	[Ldzi$a;	h	$VALUES
c	dzj	net/minecraft/world/level/levelgen/MobSpawnerPatrol
	m	(Laqu;Ljd;Layw;Z)Z	a	spawnPatrolMember
		p	1		world
		p	2		pos
		p	3		random
		p	4		captain
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dzk	net/minecraft/world/level/levelgen/MobSpawnerPhantom
	m	(Laqu;ZZ)I	a	tick
		p	1		world
		p	2		spawnMonsters
		p	3		spawnAnimals
	f	I	a	nextTick
c	dzl	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(III)Layw;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(J)Layw;	a	fromSeed
		p	1		seed
	m	(Lakr;)Layw;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/String;)Layw;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	(Ljd;)Layw;	a	at
		p	1		pos
c	dzm	net/minecraft/world/level/levelgen/RandomState
	m	(Ldzd;Ljn;J)V	<init>	<init>
		p	1		chunkGeneratorSettings
		p	2		noiseParametersLookup
		p	3		seed
	m	()Ldze;	a	router
	m	(Lakq;)Leoh;	a	getOrCreateNoise
		p	1		noiseParametersKey
	m	(Lakq;Lakq;)Leoh;	a	lambda$getOrCreateNoise$0
		p	2		key
	m	(Lakr;)Ldzl;	a	getOrCreateRandomFactory
		p	1		id
	m	(Lakr;Lakr;)Ldzl;	a	lambda$getOrCreateRandomFactory$1
		p	2		id2
	m	(Ldzd;Ljn;J)Ldzm;	a	create
		p	0		chunkGeneratorSettings
		p	1		noiseParametersLookup
		p	2		legacyWorldSeed
	m	(Ljn$a;Lakq;J)Ldzm;	a	create
		p	0		registryLookup
		p	1		chunkGeneratorSettingsKey
		p	2		legacyWorldSeed
	m	()Ldef$f;	b	sampler
	m	()Ldzq;	c	surfaceSystem
	m	()Ldzl;	d	aquiferRandom
	m	()Ldzl;	e	oreRandom
	f	Ldzl;	a	random
	f	Ljn;	b	noises
	f	Ldze;	c	router
	f	Ldef$f;	d	sampler
	f	Ldzq;	e	surfaceSystem
	f	Ldzl;	f	aquiferRandom
	f	Ldzl;	g	oreRandom
	f	Ljava/util/Map;	h	noiseIntances
	f	Ljava/util/Map;	i	positionalRandoms
c	dzm$1	net/minecraft/world/level/levelgen/RandomState$1
	m	(Ldyr;)Ldyr;	a	wrapNew
		p	1		densityFunction
	m	(Ldyr;)Ldyr;	apply	apply
		p	1		densityFunction
	f	Ljava/util/Map;	a	wrapped
c	dzm$a	net/minecraft/world/level/levelgen/RandomState$a
	m	(J)Layw;	a	newLegacyInstance
		p	1		seed
	m	(Ldyr$c;)Ldyr$c;	a	visitNoise
		p	1		noiseDensityFunction
	m	(Ldyr;)Ldyr;	a	wrapNew
		p	1		densityFunction
	m	(Ldyr;)Ldyr;	apply	apply
		p	1		densityFunction
	f	J	a	val$seed
	f	Z	b	val$useLegacyInit
	f	Ldzm;	c	this$0
	f	Ljava/util/Map;	d	wrapped
c	dzn	net/minecraft/world/level/levelgen/RandomSupport
	m	()J	a	generateUniqueSeed
	m	(J)J	a	mixStafford13
		p	0		seed
	m	(Ljava/lang/String;)Ldzn$a;	a	seedFromHashOf
		p	0		seed
	m	(J)Ldzn$a;	b	upgradeSeedTo128bitUnmixed
		p	0		seed
	m	(J)Ldzn$a;	c	upgradeSeedTo128bit
		p	0		seed
	m	(J)J	d	lambda$generateUniqueSeed$0
		p	0		seedUniquifier
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Lcom/google/common/hash/HashFunction;	c	MD5_128
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	SEED_UNIQUIFIER
c	dzn$a	net/minecraft/world/level/levelgen/RandomSupport$a
	m	()Ldzn$a;	a	mixed
	m	(JJ)Ldzn$a;	a	xor
		p	1		seedLo
		p	3		seedHi
	m	(Ldzn$a;)Ldzn$a;	a	xor
		p	1		seed
	m	()J	b	seedLo
	m	()J	c	seedHi
	f	J	a	seedLo
	f	J	b	seedHi
c	dzo	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	J	h	seed
	f	Ldza;	i	gaussianSource
c	dzp	net/minecraft/world/level/levelgen/SurfaceRules
	m	()Ldzp$f;	a	steep
	m	(II)Ldzp$f;	a	waterBlockCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(IZILeil;)Ldzp$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		secondaryDepthRange
		p	3		verticalSurfaceType
	m	(IZLeil;)Ldzp$f;	a	stoneDepthCheck
		p	0		offset
		p	1		addSurfaceDepth
		p	2		verticalSurfaceType
	m	(Lakq;D)Ldzp$f;	a	noiseCondition
		p	0		noise
		p	1		min
	m	(Lakq;DD)Ldzp$f;	a	noiseCondition
		p	0		noise
		p	1		min
		p	3		max
	m	(Ldtc;)Ldzp$o;	a	state
		p	0		state
	m	(Ldzp$f;)Ldzp$f;	a	not
		p	0		target
	m	(Ldzp$f;Ldzp$o;)Ldzp$o;	a	ifTrue
		p	0		condition
		p	1		rule
	m	(Ldzs;I)Ldzp$f;	a	yBlockCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	(Ljava/lang/String;Ldzs;Ldzs;)Ldzp$f;	a	verticalGradient
		p	0		id
		p	1		trueAtAndBelow
		p	2		falseAtAndAbove
	m	(Ljava/util/List;)Ldzp$c;	a	isBiome
		p	0		biomes
	m	(Ljz;Ljava/lang/String;Layh;)Lcom/mojang/serialization/MapCodec;	a	register
		p	0		registry
		p	1		id
		p	2		codecHolder
	m	([Lakq;)Ldzp$f;	a	isBiome
		p	0		biomes
	m	([Ldzp$o;)Ldzp$o;	a	sequence
		p	0		rules
	m	()Ldzp$f;	b	hole
	m	(II)Ldzp$f;	b	waterStartCheck
		p	0		offset
		p	1		runDepthMultiplier
	m	(Ldzs;I)Ldzp$f;	b	yStartCheck
		p	0		anchor
		p	1		runDepthMultiplier
	m	()Ldzp$f;	c	abovePreliminarySurface
	m	()Ldzp$f;	d	temperature
	m	()Ldzp$o;	e	bandlands
	f	Ldzp$f;	a	ON_FLOOR
	f	Ldzp$f;	b	UNDER_FLOOR
	f	Ldzp$f;	c	DEEP_UNDER_FLOOR
	f	Ldzp$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Ldzp$f;	e	ON_CEILING
	f	Ldzp$f;	f	UNDER_CEILING
c	dzp$a	net/minecraft/world/level/levelgen/SurfaceRules$a
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()[Ldzp$a;	b	$values
	f	Ldzp$a;	a	INSTANCE
	f	Layh;	c	CODEC
	f	[Ldzp$a;	d	$VALUES
c	dzp$b	net/minecraft/world/level/levelgen/SurfaceRules$b
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$u;	a	apply
	m	()[Ldzp$b;	b	$values
	f	Ldzp$b;	a	INSTANCE
	f	Layh;	c	CODEC
	f	[Ldzp$b;	d	$VALUES
c	dzp$c	net/minecraft/world/level/levelgen/SurfaceRules$c
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		biomes
	m	()Layh;	a	codec
	m	(Ldzp$c;)Ljava/util/List;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	f	Layh;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
c	dzp$c$a	net/minecraft/world/level/levelgen/SurfaceRules$c$a
	m	(Ldzp$c;Ldzp$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	Ldzp$c;	b	this$0
c	dzp$d	net/minecraft/world/level/levelgen/SurfaceRules$d
	m	(Ldtc;)V	<init>	<init>
		p	1		resultState
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$u;	a	apply
	m	()Ldtc;	b	resultState
	m	()Ldzp$r;	c	rule
	f	Ldtc;	a	resultState
	f	Ldzp$r;	c	rule
	f	Layh;	d	CODEC
c	dzp$e	net/minecraft/world/level/levelgen/SurfaceRules$e
	m	()Z	b	test
c	dzp$f	net/minecraft/world/level/levelgen/SurfaceRules$f
	m	()Layh;	a	codec
	m	(Ldzp$f;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dzp$g	net/minecraft/world/level/levelgen/SurfaceRules$g
	m	(Ldzq;Ldzm;Lduy;Ldzc;Ljava/util/function/Function;Ljz;Ldzv;)V	<init>	<init>
		p	1		surfaceBuilder
		p	2		noiseConfig
		p	3		chunk
		p	4		chunkNoiseSampler
		p	5		posToBiome
		p	7		heightContext
	m	()D	a	getSurfaceSecondary
	m	(I)I	a	blockCoordToSurfaceCell
		p	0		blockCoord
	m	(II)V	a	updateXZ
		p	1		blockX
		p	2		blockZ
	m	(III)Ljm;	a	lambda$updateY$0
	m	(IIIIII)V	a	updateY
		p	1		stoneDepthAbove
		p	2		stoneDepthBelow
		p	3		fluidHeight
		p	4		blockX
		p	5		blockY
		p	6		blockZ
	m	()I	b	getMinSurfaceLevel
	m	(I)I	b	surfaceCellToBlockCoord
		p	0		chunkCoord
	f	Ljava/util/function/Supplier;	A	biome
	f	I	B	blockY
	f	I	C	waterHeight
	f	I	D	stoneDepthBelow
	f	I	E	stoneDepthAbove
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Ldzq;	e	system
	f	Ldzp$e;	f	temperature
	f	Ldzp$e;	g	steep
	f	Ldzp$e;	h	hole
	f	Ldzp$e;	i	abovePreliminarySurface
	f	Ldzm;	j	randomState
	f	Lduy;	k	chunk
	f	Ldzc;	l	noiseChunk
	f	Ljava/util/function/Function;	m	biomeGetter
	f	Ldzv;	n	context
	f	J	o	lastPreliminarySurfaceCellOrigin
	f	[I	p	preliminarySurfaceCache
	f	J	q	lastUpdateXZ
	f	I	r	blockX
	f	I	s	blockZ
	f	I	t	surfaceDepth
	f	J	u	lastSurfaceDepth2Update
	f	D	v	surfaceSecondary
	f	J	w	lastMinSurfaceLevelUpdate
	f	I	x	minSurfaceLevel
	f	J	y	lastUpdateY
	f	Ljd$a;	z	pos
c	dzp$g$a	net/minecraft/world/level/levelgen/SurfaceRules$g$a
	m	()Z	b	test
	f	Ldzp$g;	a	this$0
c	dzp$g$b	net/minecraft/world/level/levelgen/SurfaceRules$g$b
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dzp$g$c	net/minecraft/world/level/levelgen/SurfaceRules$g$c
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dzp$g$d	net/minecraft/world/level/levelgen/SurfaceRules$g$d
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
c	dzp$h	net/minecraft/world/level/levelgen/SurfaceRules$h
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()[Ldzp$h;	b	$values
	f	Ldzp$h;	a	INSTANCE
	f	Layh;	c	CODEC
	f	[Ldzp$h;	d	$VALUES
c	dzp$i	net/minecraft/world/level/levelgen/SurfaceRules$i
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()Z	a	compute
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	f	J	a	lastUpdate
	f	Ldzp$g;	c	context
	f	Ljava/lang/Boolean;	d	result
c	dzp$j	net/minecraft/world/level/levelgen/SurfaceRules$j
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dzp$k	net/minecraft/world/level/levelgen/SurfaceRules$k
	m	(Ldzp$g;)V	<init>	<init>
		p	1		context
	m	()J	c	getContextLastUpdate
c	dzp$l	net/minecraft/world/level/levelgen/SurfaceRules$l
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()Lakq;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	f	Lakq;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Layh;	e	CODEC
c	dzp$l$a	net/minecraft/world/level/levelgen/SurfaceRules$l$a
	m	(Ldzp$l;Ldzp$g;Leoh;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	Leoh;	b	val$noise
	f	Ldzp$l;	e	this$0
c	dzp$m	net/minecraft/world/level/levelgen/SurfaceRules$m
	m	()Ldzp$e;	a	target
	m	()Z	b	test
	f	Ldzp$e;	a	target
c	dzp$n	net/minecraft/world/level/levelgen/SurfaceRules$n
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()Ldzp$f;	b	target
	f	Ldzp$f;	a	target
	f	Layh;	c	CODEC
c	dzp$o	net/minecraft/world/level/levelgen/SurfaceRules$o
	m	()Layh;	a	codec
	m	(Ldzp$o;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	dzp$p	net/minecraft/world/level/levelgen/SurfaceRules$p
	m	()Ljava/util/List;	a	rules
	m	(III)Ldtc;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/List;	a	rules
c	dzp$q	net/minecraft/world/level/levelgen/SurfaceRules$q
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$u;	a	apply
	m	()Ljava/util/List;	b	sequence
	f	Ljava/util/List;	a	sequence
	f	Layh;	c	CODEC
c	dzp$r	net/minecraft/world/level/levelgen/SurfaceRules$r
	m	()Ldtc;	a	state
	m	(III)Ldtc;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldtc;	a	state
c	dzp$s	net/minecraft/world/level/levelgen/SurfaceRules$s
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()[Ldzp$s;	b	$values
	f	Ldzp$s;	a	INSTANCE
	f	Layh;	c	CODEC
	f	[Ldzp$s;	d	$VALUES
c	dzp$t	net/minecraft/world/level/levelgen/SurfaceRules$t
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Leil;	e	surfaceType
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Leil;	e	surfaceType
	f	Layh;	f	CODEC
c	dzp$t$a	net/minecraft/world/level/levelgen/SurfaceRules$t$a
	m	(Ldzp$t;Ldzp$g;Z)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Ldzp$t;	e	this$0
c	dzp$u	net/minecraft/world/level/levelgen/SurfaceRules$u
	m	(III)Ldtc;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
c	dzp$v	net/minecraft/world/level/levelgen/SurfaceRules$v
	m	()Layh;	a	codec
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()[Ldzp$v;	b	$values
	f	Ldzp$v;	a	INSTANCE
	f	Layh;	c	CODEC
	f	[Ldzp$v;	d	$VALUES
c	dzp$w	net/minecraft/world/level/levelgen/SurfaceRules$w
	m	()Ldzp$e;	a	condition
	m	()Ldzp$u;	b	followup
	m	(III)Ldtc;	tryApply	tryApply
		p	1		x
		p	2		y
		p	3		z
	f	Ldzp$e;	a	condition
	f	Ldzp$u;	b	followup
c	dzp$x	net/minecraft/world/level/levelgen/SurfaceRules$x
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$u;	a	apply
	m	()Ldzp$f;	b	ifTrue
	m	()Ldzp$o;	c	thenRun
	f	Ldzp$f;	a	ifTrue
	f	Ldzp$o;	c	thenRun
	f	Layh;	d	CODEC
c	dzp$y	net/minecraft/world/level/levelgen/SurfaceRules$y
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()Lakr;	b	randomName
	m	()Ldzs;	c	trueAtAndBelow
	m	()Ldzs;	d	falseAtAndAbove
	f	Lakr;	a	randomName
	f	Ldzs;	c	trueAtAndBelow
	f	Ldzs;	d	falseAtAndAbove
	f	Layh;	e	CODEC
c	dzp$y$a	net/minecraft/world/level/levelgen/SurfaceRules$y$a
	m	(Ldzp$y;Ldzp$g;IILdzl;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Ldzl;	f	val$randomFactory
c	dzp$z	net/minecraft/world/level/levelgen/SurfaceRules$z
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Layh;	e	CODEC
c	dzp$z$a	net/minecraft/world/level/levelgen/SurfaceRules$z$a
	m	(Ldzp$z;Ldzp$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	Ldzp$z;	b	this$0
c	dzp$aa	net/minecraft/world/level/levelgen/SurfaceRules$aa
	m	()Layh;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldzp$g;)Ldzp$e;	a	apply
	m	()Ldzs;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	f	Ldzs;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Layh;	e	CODEC
c	dzp$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$aa$a
	m	(Ldzp$aa;Ldzp$g;)V	<init>	<init>
		p	2		context
	m	()Z	a	compute
	f	Ldzp$g;	a	val$ruleContext
	f	Ldzp$aa;	b	this$0
c	dzq	net/minecraft/world/level/levelgen/SurfaceSystem
	m	(Ldzm;Ldtc;ILdzl;)V	<init>	<init>
		p	1		noiseConfig
		p	2		defaultState
		p	3		seaLevel
		p	4		randomDeriver
	m	(II)I	a	getSurfaceDepth
		p	1		blockX
		p	2		blockZ
	m	(III)Ldtc;	a	getBand
		p	1		x
		p	2		y
		p	3		z
	m	(ILddw;Lduv;Ljd$a;III)V	a	frozenOceanExtension
		p	1		minY
		p	2		biome
		p	3		column
		p	4		mutablePos
		p	5		x
		p	6		z
		p	7		surfaceY
	m	(Layw;)[Ldtc;	a	generateBands
		p	0		random
	m	(Layw;[Ldtc;ILdtc;)V	a	makeBands
		p	0		random
		p	1		terracottaBands
		p	2		minBandSize
		p	3		state
	m	(Ldtc;)Z	a	isStone
		p	1		state
	m	(Lduv;IIILdcy;)V	a	erodedBadlandsExtension
		p	1		column
		p	2		x
		p	3		z
		p	4		surfaceY
		p	5		chunk
	m	(Ldzm;Lddy;Ljz;ZLdzv;Lduy;Ldzc;Ldzp$o;)V	a	buildSurface
		p	1		noiseConfig
		p	2		biomeAccess
		p	3		biomeRegistry
		p	4		useLegacyRandom
		p	5		heightContext
		p	6		chunk
		p	7		chunkNoiseSampler
		p	8		materialRule
	m	(Ldzp$o;Leaz;Ljava/util/function/Function;Lduy;Ldzc;Ljd;Z)Ljava/util/Optional;	a	topMaterial
		p	1		rule
		p	2		context
		p	3		posToBiome
		p	4		chunk
		p	5		chunkNoiseSampler
		p	6		pos
		p	7		hasFluid
	m	(II)D	b	getSurfaceSecondary
		p	1		blockX
		p	2		blockZ
	f	Ldtc;	a	WHITE_TERRACOTTA
	f	Ldtc;	b	ORANGE_TERRACOTTA
	f	Ldtc;	c	TERRACOTTA
	f	Ldtc;	d	YELLOW_TERRACOTTA
	f	Ldtc;	e	BROWN_TERRACOTTA
	f	Ldtc;	f	RED_TERRACOTTA
	f	Ldtc;	g	LIGHT_GRAY_TERRACOTTA
	f	Ldtc;	h	PACKED_ICE
	f	Ldtc;	i	SNOW_BLOCK
	f	Ldtc;	j	defaultBlock
	f	I	k	seaLevel
	f	[Ldtc;	l	clayBands
	f	Leoh;	m	clayBandsOffsetNoise
	f	Leoh;	n	badlandsPillarNoise
	f	Leoh;	o	badlandsPillarRoofNoise
	f	Leoh;	p	badlandsSurfaceNoise
	f	Leoh;	q	icebergPillarNoise
	f	Leoh;	r	icebergPillarRoofNoise
	f	Leoh;	s	icebergSurfaceNoise
	f	Ldzl;	t	noiseRandom
	f	Leoh;	u	surfaceNoise
	f	Leoh;	v	surfaceSecondaryNoise
c	dzq$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	m	(I)Ldtc;	a	getBlock
		p	1		y
	m	(ILdtc;)V	a	setBlock
		p	1		y
		p	2		state
	f	Lduy;	a	val$protoChunk
	f	Ljd$a;	b	val$columnPos
	f	Ldcd;	c	val$chunkPos
c	dzr	net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)I	c	next
		p	1		bits
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()D	k	nextGaussian
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Ldza;	i	gaussianSource
c	dzs	net/minecraft/world/level/levelgen/VerticalAnchor
	m	()Ldzs;	a	bottom
	m	(I)Ldzs;	a	absolute
		p	0		offset
	m	(Lcom/mojang/datafixers/util/Either;)Ldzs;	a	merge
		p	0		either
	m	(Ldzs;)Lcom/mojang/datafixers/util/Either;	a	split
		p	0		yOffset
	m	(Ldzv;)I	a	resolveY
		p	1		context
	m	()Ldzs;	b	top
	m	(I)Ldzs;	b	aboveBottom
		p	0		offset
	m	(I)Ldzs;	c	belowTop
		p	0		offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldzs;	b	BOTTOM
	f	Ldzs;	c	TOP
c	dzs$a	net/minecraft/world/level/levelgen/VerticalAnchor$a
	m	(Ldzv;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dzs$b	net/minecraft/world/level/levelgen/VerticalAnchor$b
	m	(Ldzv;)I	a	resolveY
		p	1		context
	m	()I	c	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	y
c	dzs$c	net/minecraft/world/level/levelgen/VerticalAnchor$c
	m	(Ldzv;)I	a	resolveY
		p	1		context
	m	()I	c	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	I	e	offset
c	dzt	net/minecraft/world/level/levelgen/WorldDimensions
	m	(Ljz;)V	<init>	<init>
		p	1		dimensionOptionsRegistry
	m	()Lduz;	a	overworld
	m	(Lakq;)Ljava/util/Optional;	a	get
		p	1		key
	m	(Lakq;Ldwz;)Lcom/mojang/serialization/Lifecycle;	a	checkStability
		p	0		key
		p	1		dimensionOptions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldwz;)Z	a	isStableOverworld
		p	0		dimensionOptions
	m	(Ljava/util/List;Lakq;Ldwz;)V	a	lambda$bake$4
		p	2		dimensionOptions
	m	(Ljava/util/Map;Ljm;Lduz;)Ljava/util/Map;	a	withOverworld
		p	0		dimensionOptions
		p	1		overworld
		p	2		chunkGenerator
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	keysInOrder
		p	0		otherKeys
	m	(Ljz;)Ldzt$b;	a	bake
		p	1		existingRegistry
	m	(Ljz;Ljava/util/List;Lakq;)V	a	lambda$bake$5
		p	3		key
	m	(Ljz;Ljava/util/Map;Lduz;)Ljava/util/Map;	a	withOverworld
		p	0		dynamicRegistry
		p	1		dimensionOptions
		p	2		chunkGenerator
	m	(Lka;Lduz;)Ldzt;	a	replaceOverworldGenerator
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
	m	(Lki;Ldzt$a;)V	a	lambda$bake$6
		p	1		entry
	m	()Lcom/google/common/collect/ImmutableSet;	b	levels
	m	(Lakq;)Ljava/util/Optional;	b	lambda$bake$3
	m	(Lakq;Ldwz;)Z	b	isVanillaLike
		p	0		key
		p	1		dimensionOptions
	m	(Ldwz;)Z	b	isStableNether
		p	0		dimensionOptions
	m	(Ljz;)Lerj$a;	b	specialWorldProperty
		p	0		dimensionOptionsRegistry
	m	()Z	c	isDebug
	m	(Lakq;)Z	c	lambda$keysInOrder$1
		p	0		key
	m	(Ldwz;)Z	c	isStableEnd
		p	0		dimensionOptions
	m	()Ljava/util/Map;	d	dimensions
	m	(Ldwz;)Lerj$a;	d	lambda$specialWorldProperty$2
		p	0		overworldEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	dimensions
	f	Ljava/util/Set;	c	BUILTIN_ORDER
	f	I	d	VANILLA_DIMENSION_COUNT
c	dzt$a	net/minecraft/world/level/levelgen/WorldDimensions$a
	m	()Lakq;	a	key
	m	()Ldwz;	b	value
	m	()Ljy;	c	registrationInfo
	f	Lakq;	a	key
	f	Ldwz;	b	value
c	dzt$b	net/minecraft/world/level/levelgen/WorldDimensions$b
	m	()Lcom/mojang/serialization/Lifecycle;	a	lifecycle
	m	()Lka$b;	b	dimensionsRegistryAccess
	m	()Ljz;	c	dimensions
	m	()Lerj$a;	d	specialWorldProperty
	f	Ljz;	a	dimensions
	f	Lerj$a;	b	specialWorldProperty
c	dzu	net/minecraft/world/level/levelgen/GeneratorSettings
	m	()Ldzw;	a	options
	m	(Lcom/mojang/serialization/DynamicOps;Ldzw;Ldzt;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dimensionOptionsRegistryHolder
	m	(Lcom/mojang/serialization/DynamicOps;Ldzw;Lka;)Lcom/mojang/serialization/DataResult;	a	encode
		p	0		registryOps
		p	1		generatorOptions
		p	2		dynamicRegistryManager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ldzt;	b	dimensions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldzw;	b	options
	f	Ldzt;	c	dimensions
c	dzv	net/minecraft/world/level/levelgen/WorldGenerationContext
	m	(Lduz;Ldcy;)V	<init>	<init>
		p	1		generator
		p	2		world
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
	f	I	a	minY
	f	I	b	height
c	dzw	net/minecraft/world/level/levelgen/WorldOptions
	m	(JZZ)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
	m	(JZZLjava/util/Optional;)V	<init>	<init>
		p	1		seed
		p	3		generateStructures
		p	4		bonusChest
		p	5		legacyCustomOptions
	m	()Ldzw;	a	defaultWithRandomSeed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldzw;)Ljava/util/Optional;	a	lambda$static$0
		p	0		generatorOptions
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
		p	0		seed
	m	(Ljava/util/OptionalLong;)Ldzw;	a	withSeed
		p	1		seed
	m	(Z)Ldzw;	a	withBonusChest
		p	1		bonusChest
	m	()J	b	seed
	m	(Z)Ldzw;	b	withStructures
		p	1		structures
	m	()Z	c	generateStructures
	m	()Z	d	generateBonusChest
	m	()Z	e	isOldCustomizedWorld
	m	()J	f	randomSeed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldzw;	b	DEMO_OPTIONS
	f	J	c	seed
	f	Z	d	generateStructures
	f	Z	e	generateBonusChest
	f	Ljava/util/Optional;	f	legacyCustomOptions
c	dzx	net/minecraft/world/level/levelgen/SeededRandom
	m	(Layw;)V	<init>	<init>
		p	1		baseRandom
	m	(IIJJ)Layw;	a	seedSlimeChunk
		p	0		chunkX
		p	1		chunkZ
		p	2		worldSeed
		p	4		scrambler
	m	(JII)J	a	setDecorationSeed
		p	1		worldSeed
		p	3		blockX
		p	4		blockZ
	m	(JIII)V	a	setLargeFeatureWithSalt
		p	1		worldSeed
		p	3		regionX
		p	4		regionZ
		p	5		salt
	m	(J)V	b	setSeed
		p	1		seed
	m	(JII)V	b	setFeatureSeed
		p	1		populationSeed
		p	3		index
		p	4		step
	m	(I)I	c	next
		p	1		bits
	m	(JII)V	c	setLargeFeatureSeed
		p	1		worldSeed
		p	3		chunkX
		p	4		chunkZ
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()I	l	getCount
	f	Layw;	d	randomSource
	f	I	e	count
c	dzx$a	net/minecraft/world/level/levelgen/SeededRandom$a
	m	(Ljava/lang/String;ILjava/util/function/LongFunction;)V	<init>	<init>
		p	3		provider
	m	()[Ldzx$a;	a	$values
	m	(J)Layw;	a	newInstance
		p	1		seed
	f	Ldzx$a;	a	LEGACY
	f	Ldzx$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Ldzx$a;	d	$VALUES
c	dzy	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldzn$a;)V	<init>	<init>
		p	1		seed
	m	()J	a	nextLong
	m	(Ldzy;)Ljava/util/stream/LongStream;	a	lambda$static$2
		p	0		random
	m	(Ljava/util/stream/LongStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stream
	m	([J)Ldzy;	a	lambda$static$0
		p	0		seeds
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	J	b	seedLo
	f	J	c	seedHi
c	dzz	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	m	(J)V	<init>	<init>
		p	1		seed
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(Ldzn$a;)V	<init>	<init>
		p	1		seed
	m	(Ldzy;)V	<init>	<init>
		p	1		implementation
	m	(I)I	a	nextInt
		p	1		bound
	m	(Ldzy;)Ldzz;	a	lambda$static$0
		p	0		implementation
	m	(Ldzz;)Ldzy;	a	lambda$static$1
		p	0		random
	m	(I)V	b	consumeCount
		p	1		count
	m	(J)V	b	setSeed
		p	1		seed
	m	(I)J	c	nextBits
		p	1		bits
	m	()Layw;	d	fork
	m	()Ldzl;	e	forkPositional
	m	()I	f	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	F	c	FLOAT_UNIT
	f	D	d	DOUBLE_UNIT
	f	Ldzy;	e	randomNumberGenerator
	f	Ldza;	f	gaussianSource
c	dzz$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$a
	m	(JJ)V	<init>	<init>
		p	1		seedLo
		p	3		seedHi
	m	(III)Layw;	a	at
		p	1		x
		p	2		y
		p	3		z
	m	(J)Layw;	a	fromSeed
		p	1		seed
	m	(Ljava/lang/String;)Layw;	a	fromHashOf
		p	1		seed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	J	a	seedLo
	f	J	b	seedHi
c	eaa	net/minecraft/world/level/levelgen/blending/Blender
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	()Leaa;	a	empty
	m	(D)D	a	heightToOffset
		p	0		height
	m	(DDDDDD)D	a	distanceToCube
		p	0		x1
		p	2		y1
		p	4		z1
		p	6		x2
		p	8		y2
		p	10		z2
	m	(DDDDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$11
		p	8		offsetX
		p	10		y
		p	12		offsetZ
	m	(II)Leaa$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(III)Ljm;	a	blendBiome
		p	1		x
		p	2		y
		p	3		z
	m	(IIILeaa$b;)D	a	getBlendingDataValue
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		sampler
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
		p	6		biomeX
		p	7		halfSectionY
		p	8		biomeZ
		p	9		collidableBlockDensity
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Leab;)V	a	lambda$blendDensity$3
		p	6		chunkPos
		p	7		data
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Leab;)V	a	lambda$blendBiome$6
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
		p	5		biomeX
		p	6		biomeZ
		p	7		height
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Leab;)V	a	lambda$blendOffsetAndFactor$1
		p	5		chunkPos
		p	6		data
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILjm;)V	a	lambda$blendBiome$5
		p	4		biomeX
		p	5		biomeZ
		p	6		biome
	m	(Larb;)Leaa;	a	of
		p	0		chunkRegion
	m	(Larb;Lduy;)V	a	generateBorderTicks
		p	0		chunkRegion
		p	1		chunk
	m	(Ldds;Ldvs;)V	a	addAroundOldChunksCarvingMaskFilter
		p	0		world
		p	1		chunk
	m	(Lddz;)Lddz;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Lddz;IIILdef$f;)Ljm;	a	lambda$getBiomeResolver$4
		p	2		x
		p	3		y
		p	4		z
		p	5		noise
	m	(Ldux$a;Ldux;)V	a	lambda$addAroundOldChunksCarvingMaskFilter$8
		p	1		mask
	m	(Lduy;Ljd;)V	a	generateBorderTick
		p	0		chunk
		p	1		pos
	m	(Ldyr$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
	m	(Leaa$b;IIIII)D	a	getBlendingDataValue
		p	1		sampler
		p	2		chunkX
		p	3		chunkZ
		p	4		biomeX
		p	5		biomeY
		p	6		biomeZ
	m	(Leaa$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
		p	1		offsetX
		p	2		y
		p	3		offsetZ
	m	(Leab;Ljava/util/Map;)Leaa$c;	a	makeOldChunkDistanceGetter
		p	0		data
		p	1		neighborData
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$10
		p	1		offsetX
		p	3		y
		p	5		offsetZ
	m	(Ljava/util/List;Ljj;Leab;)V	a	lambda$makeOldChunkDistanceGetter$9
		p	1		direction
		p	2		datax
	m	(Ljj;Leab;)Leaa$c;	a	makeOffsetOldChunkDistanceGetter
		p	0		direction
		p	1		data
	f	Leaa;	a	EMPTY
	f	Leoh;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	heightAndBiomeBlendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	i	densityBlendingData
c	eaa$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		blendingData
		p	2		closeBlendingData
	m	(II)Leaa$a;	a	blendOffsetAndFactor
		p	1		blockX
		p	2		blockZ
	m	(Lddz;)Lddz;	a	getBiomeResolver
		p	1		biomeSupplier
	m	(Ldyr$b;D)D	a	blendDensity
		p	1		pos
		p	2		density
c	eaa$a	net/minecraft/world/level/levelgen/blending/Blender$a
	m	()D	a	alpha
	m	()D	b	blendingOffset
	f	D	a	alpha
	f	D	b	blendingOffset
c	eaa$b	net/minecraft/world/level/levelgen/blending/Blender$b
	m	(Leab;III)D	get	get
		p	1		data
		p	2		biomeX
		p	3		biomeY
		p	4		biomeZ
c	eaa$c	net/minecraft/world/level/levelgen/blending/Blender$c
	m	(DDD)D	getDistance	getDistance
		p	1		offsetX
		p	3		y
		p	5		offsetZ
c	eab	net/minecraft/world/level/levelgen/blending/BlendingData
	m	(IILjava/util/Optional;)V	<init>	<init>
		p	1		oldBottomSectionY
		p	2		oldTopSectionY
		p	3		heights
	m	()Ldcy;	a	getAreaWithOldGeneration
	m	(D)Z	a	lambda$static$2
		p	0		height
	m	(I)I	a	getCellYIndex
		p	1		halfSectionY
	m	(II)I	a	getInsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	a	getHeight
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
	m	(IIIILeab$b;)V	a	iterateDensities
		p	1		biomeX
		p	2		biomeZ
		p	3		minHalfSectionY
		p	4		maxHalfSectionY
		p	5		consumer
	m	(IIILeab$a;)V	a	iterateBiomes
		p	1		biomeX
		p	2		biomeY
		p	3		biomeZ
		p	4		consumer
	m	(IILeab$c;)V	a	iterateHeights
		p	1		biomeX
		p	2		biomeZ
		p	3		consumer
	m	(ILduy;II)V	a	addValuesForColumn
		p	1		index
		p	2		chunk
		p	3		chunkBlockX
		p	4		chunkBlockZ
	m	(Larb;II)Leab;	a	getOrUpdateBlendingData
		p	0		chunkRegion
		p	1		chunkX
		p	2		chunkZ
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldds;IIZ)Ljava/util/Set;	a	sideByGenerationAge
		p	0		access
		p	1		chunkX
		p	2		chunkZ
		p	3		oldNoise
	m	(Lduy;II)I	a	getHeightAtXZ
		p	1		chunk
		p	2		blockX
		p	3		blockZ
	m	(Lduy;III)[D	a	getDensityColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
		p	4		surfaceHeight
	m	(Lduy;Ljava/util/Set;)V	a	calculateData
		p	1		chunk
		p	2		newNoiseChunkDirections
	m	(Lduy;Ljd$a;)D	a	read1
		p	0		chunk
		p	1		mutablePos
	m	(Lduy;Ljd;)Z	a	isGround
		p	0		chunk
		p	1		pos
	m	(Leab;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
		p	0		data
	m	([D)V	a	lambda$new$6
		p	0		heights2
	m	([DI)D	a	getDensity
		p	1		collidableBlockDensityColumn
		p	2		halfSectionY
	m	()I	b	cellCountPerColumn
	m	(I)I	b	getX
		p	0		index
	m	(II)I	b	getOutsideIndex
		p	0		chunkBiomeX
		p	1		chunkBiomeZ
	m	(III)D	b	getDensity
		p	1		chunkBiomeX
		p	2		halfSectionY
		p	3		chunkBiomeZ
	m	(Lduy;II)Ljava/util/List;	b	getBiomeColumn
		p	1		chunk
		p	2		chunkBlockX
		p	3		chunkBlockZ
	m	(Lduy;Ljd$a;)D	b	read7
		p	0		chunk
		p	1		mutablePos
	m	(Leab;)Ljava/util/Optional;	b	lambda$static$3
		p	0		blendingData
	m	()I	c	quartCountPerColumn
	m	(I)I	c	getZ
		p	0		index
	m	(Leab;)Ljava/lang/Integer;	c	lambda$static$1
		p	0		blendingData
	m	()I	d	getColumnMinY
	m	(I)I	d	zeroIfNegative
	m	(Leab;)Ljava/lang/Integer;	d	lambda$static$0
		p	0		blendingData
	m	()I	e	getMinY
	m	()Ljava/lang/String;	f	lambda$validateArraySize$5
	f	I	a	CELL_WIDTH
	f	I	b	CELL_HEIGHT
	f	I	c	CELL_RATIO
	f	D	d	NO_VALUE
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	D	f	BLENDING_DENSITY_FACTOR
	f	D	g	SOLID_DENSITY
	f	D	h	AIR_DENSITY
	f	I	i	CELLS_PER_SECTION_Y
	f	I	j	QUARTS_PER_SECTION
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	l	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	m	CELL_COLUMN_INSIDE_COUNT
	f	I	n	CELL_COLUMN_OUTSIDE_COUNT
	f	I	o	CELL_COLUMN_COUNT
	f	Ldcy;	p	areaWithOldGeneration
	f	Ljava/util/List;	q	SURFACE_BLOCKS
	f	Z	r	hasCalculatedData
	f	[D	s	heights
	f	Ljava/util/List;	t	biomes
	f	[[D	u	densities
	f	Lcom/mojang/serialization/Codec;	v	DOUBLE_ARRAY_CODEC
c	eab$a	net/minecraft/world/level/levelgen/blending/BlendingData$a
	m	(IILjm;)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		biome
c	eab$b	net/minecraft/world/level/levelgen/blending/BlendingData$b
	m	(IIID)V	consume	consume
		p	1		biomeX
		p	2		halfSectionY
		p	3		biomeZ
		p	4		collidableBlockDensity
c	eab$c	net/minecraft/world/level/levelgen/blending/BlendingData$c
	m	(IID)V	consume	consume
		p	1		biomeX
		p	2		biomeZ
		p	3		height
c	ead	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Leag;	a	type
	m	(Ldds;Ljd;)Z	a	test
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	eae	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	()Leag;	a	type
	m	(Ldds;Ljd;)Z	a	test
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	eaf	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	m	()Leag;	a	type
	m	(Lawu;)Leaf;	a	matchesTag
		p	0		offset
	m	(Ldtc;Lkh;)Leaf;	a	wouldSurvive
		p	0		state
		p	1		offset
	m	(Leaf;)Leaf;	a	not
		p	0		predicate
	m	(Leaf;Leaf;)Leaf;	a	allOf
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Leaf;	a	allOf
		p	0		predicates
	m	(Lji;)Leaf;	a	hasSturdyFace
		p	0		face
	m	(Lkh;)Leaf;	a	replaceable
		p	0		offset
	m	(Lkh;Lawu;)Leaf;	a	matchesTag
		p	0		offset
		p	1		tag
	m	(Lkh;Ljava/util/List;)Leaf;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lkh;Lji;)Leaf;	a	hasSturdyFace
		p	0		offset
		p	1		face
	m	(Lkh;[Ldfy;)Leaf;	a	matchesBlocks
		p	0		offset
		p	1		blocks
	m	(Lkh;[Lepd;)Leaf;	a	matchesFluids
		p	0		offset
		p	1		fluids
	m	([Ldfy;)Leaf;	a	matchesBlocks
		p	0		blocks
	m	([Leaf;)Leaf;	a	allOf
		p	0		predicates
	m	([Lepd;)Leaf;	a	matchesFluids
		p	0		fluids
	m	()Leaf;	b	replaceable
	m	(Leaf;Leaf;)Leaf;	b	anyOf
		p	0		first
		p	1		second
	m	(Ljava/util/List;)Leaf;	b	anyOf
		p	0		predicates
	m	(Lkh;)Leaf;	b	solid
		p	0		offset
	m	(Lkh;Ljava/util/List;)Leaf;	b	matchesFluids
		p	0		offset
		p	1		fluids
	m	([Leaf;)Leaf;	b	anyOf
		p	0		predicates
	m	()Leaf;	c	solid
	m	(Ljava/util/List;)Leaf;	c	matchesBlocks
		p	0		blocks
	m	(Lkh;)Leaf;	c	noFluid
		p	0		offset
	m	()Leaf;	d	noFluid
	m	(Lkh;)Leaf;	d	insideWorld
		p	0		offset
	m	()Leaf;	e	alwaysTrue
	m	(Lkh;)Leaf;	e	unobstructed
		p	0		offset
	m	()Leaf;	f	unobstructed
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Leaf;	c	ONLY_IN_AIR_PREDICATE
	f	Leaf;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
c	eag	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leag;	a	register
		p	0		id
		p	1		codec
	f	Leag;	a	MATCHING_BLOCKS
	f	Leag;	b	MATCHING_BLOCK_TAG
	f	Leag;	c	MATCHING_FLUIDS
	f	Leag;	d	HAS_STURDY_FACE
	f	Leag;	e	SOLID
	f	Leag;	f	REPLACEABLE
	f	Leag;	g	WOULD_SURVIVE
	f	Leag;	h	INSIDE_WORLD_BOUNDS
	f	Leag;	i	ANY_OF
	f	Leag;	j	ALL_OF
	f	Leag;	k	NOT
	f	Leag;	l	TRUE
	f	Leag;	m	UNOBSTRUCTED
c	eah	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		predicates
	m	(Leah;)Ljava/util/List;	a	lambda$codec$0
		p	0		predicate
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		combiner
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
		p	1		instance
	f	Ljava/util/List;	e	predicates
c	eai	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	m	(Lkh;Lji;)V	<init>	<init>
		p	1		offset
		p	2		face
	m	()Leag;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	(Leai;)Lji;	a	lambda$static$1
		p	0		predicate
	m	(Leai;)Lkh;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkh;	e	offset
	f	Lji;	f	direction
c	eaj	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	m	(Lkh;)V	<init>	<init>
		p	1		offset
	m	()Leag;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	(Leaj;)Lkh;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkh;	e	offset
c	eak	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	m	(Lkh;Lawu;)V	<init>	<init>
		p	1		offset
		p	2		tag
	m	()Leag;	a	type
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Leak;)Lawu;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lawu;	a	tag
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
c	eal	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	m	(Lkh;Ljq;)V	<init>	<init>
		p	1		offset
		p	2		blocks
	m	()Leag;	a	type
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Leal;)Ljq;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	e	blocks
c	eam	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	m	(Lkh;Ljq;)V	<init>	<init>
		p	1		offset
		p	2		fluids
	m	()Leag;	a	type
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Leam;)Ljq;	a	lambda$static$0
		p	0		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	e	fluids
c	ean	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	m	(Leaf;)V	<init>	<init>
		p	1		predicate
	m	()Leag;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	(Lean;)Leaf;	a	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leaf;	e	predicate
c	eao	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	m	(Lkh;)V	<init>	<init>
		p	1		offset
	m	()Leag;	a	type
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	eap	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	m	(Lkh;)V	<init>	<init>
		p	1		offset
	m	()Leag;	a	type
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	eaq	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	m	(Lkh;)V	<init>	<init>
		p	1		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	(Ldtc;)Z	a	test
		p	1		state
	m	(Leaq;)Lkh;	a	lambda$stateTestingCodec$0
		p	0		predicate
	f	Lkh;	f	offset
c	ear	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	m	()Leag;	a	type
	m	(Ldds;Ljd;)Z	a	test
	m	()Lear;	g	lambda$static$0
	f	Lear;	a	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
c	eas	net/minecraft/world/level/levelgen/blockpredicates/UnobstructedPredicate
	m	()Leag;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	()Lkh;	g	offset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkh;	e	offset
c	eat	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	m	(Lkh;Ldtc;)V	<init>	<init>
		p	1		offset
		p	2		state
	m	()Leag;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldds;Ljd;)Z	a	test
	m	(Leat;)Ldtc;	a	lambda$static$1
		p	0		predicate
	m	(Leat;)Lkh;	b	lambda$static$0
		p	0		predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkh;	e	offset
	f	Ldtc;	f	state
c	eav	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	m	(FLehx;Lbpu;Ldzs;Leay;Ljq;Lbpu;Leav$a;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		verticalRotation
		p	8		shape
	m	(Leax;Lbpu;Leav$a;)V	<init>	<init>
		p	1		config
		p	2		verticalRotation
		p	3		shape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leav;)Leav$a;	a	lambda$static$2
		p	0		config
	m	(Leav;)Lbpu;	b	lambda$static$1
		p	0		config
	m	(Leav;)Leax;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpu;	b	verticalRotation
	f	Leav$a;	c	shape
c	eav$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$a
	m	(Lbpu;Lbpu;ILbpu;FF)V	<init>	<init>
		p	1		distanceFactor
		p	2		thickness
		p	3		widthSmoothness
		p	4		horizontalRadiusFactor
		p	5		verticalRadiusDefaultFactor
		p	6		verticalRadiusCenterFactor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Leav$a;)Ljava/lang/Float;	a	lambda$static$5
		p	0		shape
	m	(Leav$a;)Ljava/lang/Float;	b	lambda$static$4
		p	0		shape
	m	(Leav$a;)Lbpu;	c	lambda$static$3
		p	0		shape
	m	(Leav$a;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		shape
	m	(Leav$a;)Lbpu;	e	lambda$static$1
		p	0		shape
	m	(Leav$a;)Lbpu;	f	lambda$static$0
		p	0		shape
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpu;	b	distanceFactor
	f	Lbpu;	c	thickness
	f	I	d	widthSmoothness
	f	Lbpu;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
c	eaw	net/minecraft/world/level/levelgen/carver/WorldGenCanyon
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Leav;Layw;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Leav;Layw;DFF)D	a	updateVerticalRadius
		p	1		config
		p	2		random
		p	3		pitch
		p	5		branchCount
		p	6		branchIndex
	m	(Leax;Layw;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Leaz;Leav;Layw;)[F	a	initWidthFactors
		p	1		context
		p	2		config
		p	3		random
	m	(Leaz;Leav;Lduy;Ljava/util/function/Function;JLdyk;DDDFFFIIDLdux;)V	a	doCarve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		width
		p	15		yaw
		p	16		pitch
		p	17		branchStartIndex
		p	18		branchCount
		p	19		yawPitchRatio
		p	21		mask
	m	(Leaz;Leav;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Leaz;[FDDDI)Z	a	shouldSkip
		p	1		context
		p	2		horizontalStretchFactors
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	([FLeaz;DDDI)Z	a	lambda$doCarve$0
		p	2		contextx
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		yx
c	eax	net/minecraft/world/level/levelgen/carver/WorldGenCarverConfiguration
	m	(FLehx;Lbpu;Ldzs;Leay;Ljq;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Leax;)Ljq;	a	lambda$static$5
		p	0		config
	m	(Leax;)Leay;	b	lambda$static$4
		p	0		config
	m	(Leax;)Ldzs;	c	lambda$static$3
		p	0		config
	m	(Leax;)Lbpu;	d	lambda$static$2
		p	0		config
	m	(Leax;)Lehx;	e	lambda$static$1
		p	0		config
	m	(Leax;)Ljava/lang/Float;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lehx;	e	y
	f	Lbpu;	f	yScale
	f	Ldzs;	g	lavaLevel
	f	Leay;	h	debugSettings
	f	Ljq;	i	replaceable
c	eay	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	m	(ZLdtc;Ldtc;Ldtc;Ldtc;)V	<init>	<init>
		p	1		debugMode
		p	2		airState
		p	3		waterState
		p	4		lavaState
		p	5		barrierState
	m	()Z	a	isDebugMode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldtc;Ldtc;Ldtc;Ldtc;)Leay;	a	of
		p	0		airState
		p	1		waterState
		p	2		lavaState
		p	3		barrierState
	m	(ZLdtc;)Leay;	a	of
		p	0		debugMode
		p	1		debugState
	m	(ZLdtc;Ldtc;Ldtc;Ldtc;)Leay;	a	of
		p	0		debugMode
		p	1		airState
		p	2		waterState
		p	3		lavaState
		p	4		barrierState
	m	()Ldtc;	b	getAirState
	m	()Ldtc;	c	getWaterState
	m	()Ldtc;	d	getLavaState
	m	()Ldtc;	e	getBarrierState
	f	Leay;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Ldtc;	d	airState
	f	Ldtc;	e	waterState
	f	Ldtc;	f	lavaState
	f	Ldtc;	g	barrierState
c	eaz	net/minecraft/world/level/levelgen/carver/CarvingContext
	m	(Ldzb;Lka;Ldcy;Ldzc;Ldzm;Ldzp$o;)V	<init>	<init>
		p	1		noiseChunkGenerator
		p	2		registryManager
		p	3		heightLimitView
		p	4		chunkNoiseSampler
		p	5		noiseConfig
		p	6		materialRule
	m	(Ljava/util/function/Function;Lduy;Ljd;Z)Ljava/util/Optional;	a	topMaterial
		p	1		posToBiome
		p	2		chunk
		p	3		pos
		p	4		hasFluid
	m	()Lka;	c	registryAccess
	m	()Ldzm;	d	randomState
	f	Lka;	a	registryAccess
	f	Ldzc;	b	noiseChunk
	f	Ldzm;	c	randomState
	f	Ldzp$o;	d	surfaceRule
c	eba	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	m	(FLehx;Lbpu;Ldzs;Leay;Ljq;Lbpu;Lbpu;Lbpu;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		debugConfig
		p	6		replaceable
		p	7		horizontalRadiusMultiplier
		p	8		verticalRadiusMultiplier
		p	9		floorLevel
	m	(FLehx;Lbpu;Ldzs;Ljq;Lbpu;Lbpu;Lbpu;)V	<init>	<init>
		p	1		probability
		p	2		y
		p	3		yScale
		p	4		lavaLevel
		p	5		replaceable
		p	6		horizontalRadiusMultiplier
		p	7		verticalRadiusMultiplier
		p	8		floorLevel
	m	(Leax;Lbpu;Lbpu;Lbpu;)V	<init>	<init>
		p	1		config
		p	2		horizontalRadiusMultiplier
		p	3		verticalRadiusMultiplier
		p	4		floorLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Leba;)Lbpu;	a	lambda$static$3
		p	0		config
	m	(Leba;)Lbpu;	b	lambda$static$2
		p	0		config
	m	(Leba;)Lbpu;	c	lambda$static$1
		p	0		config
	m	(Leba;)Leax;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpu;	b	horizontalRadiusMultiplier
	f	Lbpu;	c	verticalRadiusMultiplier
	f	Lbpu;	j	floorLevel
c	ebb	net/minecraft/world/level/levelgen/carver/WorldGenCaves
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(DDDD)Z	a	shouldSkip
		p	0		scaledRelativeX
		p	2		scaledRelativeY
		p	4		scaledRelativeZ
		p	6		floorY
	m	(DLeaz;DDDI)Z	a	lambda$carve$0
		p	2		contextx
		p	3		scaledRelativeX
		p	5		scaledRelativeY
		p	7		scaledRelativeZ
		p	9		y
	m	(Layw;)F	a	getThickness
		p	1		random
	m	(Leax;Layw;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Leaz;Leba;Lduy;Ljava/util/function/Function;JLdyk;DDDDDFFFIIDLdux;Lebe$a;)V	a	createTunnel
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		seed
		p	7		aquiferSampler
		p	8		x
		p	10		y
		p	12		z
		p	14		horizontalScale
		p	16		verticalScale
		p	18		width
		p	19		yaw
		p	20		pitch
		p	21		branchStartIndex
		p	22		branchCount
		p	23		yawPitchRatio
		p	25		mask
		p	26		skipPredicate
	m	(Leaz;Leba;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Leaz;Leba;Lduy;Ljava/util/function/Function;Ldyk;DDDFDLdux;Lebe$a;)V	a	createRoom
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	15		mask
		p	16		skipPredicate
	m	(Leba;Layw;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	()D	b	getYScale
c	ebc	net/minecraft/world/level/levelgen/carver/WorldGenCarverWrapper
	m	(Lebe;Leax;)V	<init>	<init>
		p	1		carver
		p	2		config
	m	()Lebe;	a	worldCarver
	m	(Layw;)Z	a	isStartChunk
		p	1		random
	m	(Leaz;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		chunk
		p	3		posToBiome
		p	4		random
		p	5		aquiferSampler
		p	6		pos
		p	7		mask
	m	(Lebc;)Lebe;	a	lambda$static$0
		p	0		configuredCarver
	m	()Leax;	b	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lebe;	d	worldCarver
	f	Leax;	e	config
c	ebd	net/minecraft/world/level/levelgen/carver/WorldGenCavesHell
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()I	a	getCaveBound
	m	(Layw;)F	a	getThickness
		p	1		random
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Ldux;Ljd$a;Ljd$a;Ldyk;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	(Leaz;Leba;Lduy;Ljava/util/function/Function;Ldux;Ljd$a;Ljd$a;Ldyk;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	()D	b	getYScale
c	ebe	net/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcd;DDIIF)Z	a	canReach
		p	0		pos
		p	1		x
		p	3		z
		p	5		branchIndex
		p	6		branchCount
		p	7		baseWidth
	m	(Lduy;Ljd$a;Ldtc;)V	a	lambda$carveBlock$0
		p	2		state
	m	(Leax;)Lebc;	a	configured
		p	1		config
	m	(Leax;Layw;)Z	a	isStartChunk
		p	1		config
		p	2		random
	m	(Leax;Ldtc;)Z	a	canReplaceBlock
		p	1		config
		p	2		state
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Layw;Ldyk;Ldcd;Ldux;)Z	a	carve
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		random
		p	6		aquiferSampler
		p	7		pos
		p	8		mask
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Ldux;Ljd$a;Ljd$a;Ldyk;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		mask
		p	6		pos
		p	7		tmp
		p	8		aquiferSampler
		p	9		replacedGrassy
	m	(Leaz;Leax;Lduy;Ljava/util/function/Function;Ldyk;DDDDDLdux;Lebe$a;)Z	a	carveEllipsoid
		p	1		context
		p	2		config
		p	3		chunk
		p	4		posToBiome
		p	5		aquiferSampler
		p	6		x
		p	8		y
		p	10		z
		p	12		width
		p	14		height
		p	16		mask
		p	17		skipPredicate
	m	(Leaz;Leax;Ljd;Ldyk;)Ldtc;	a	getCarveState
		p	1		context
		p	2		config
		p	3		pos
		p	4		sampler
	m	(Ljava/lang/String;Lebe;)Lebe;	a	register
		p	0		name
		p	1		carver
	m	(Leax;)Z	b	isDebugEnabled
		p	0		config
	m	(Leax;Ldtc;)Ldtc;	b	getDebugState
		p	0		config
		p	1		state
	m	()Lcom/mojang/serialization/MapCodec;	c	configuredCodec
	m	()I	d	getRange
	f	Lebe;	a	CAVE
	f	Lebe;	b	NETHER_CAVE
	f	Lebe;	c	CANYON
	f	Ldtc;	d	AIR
	f	Ldtc;	e	CAVE_AIR
	f	Lepe;	f	WATER
	f	Lepe;	g	LAVA
	f	Ljava/util/Set;	h	liquids
	f	Lcom/mojang/serialization/MapCodec;	i	configuredCodec
c	ebe$a	net/minecraft/world/level/levelgen/carver/WorldGenCarverAbstract$a
	m	(Leaz;DDDI)Z	shouldSkip	shouldSkip
		p	1		context
		p	2		scaledRelativeX
		p	4		scaledRelativeY
		p	6		scaledRelativeZ
		p	8		y
c	ebg	net/minecraft/world/level/levelgen/feature/WorldGenMushrooms
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Layw;)I	a	getTreeHeight
		p	1		random
	m	(Ldcx;Layw;Ljd;ILjd$a;Leek;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
	m	(Ldcx;Layw;Ljd;Leek;ILjd$a;)V	a	placeTrunk
		p	1		world
		p	2		random
		p	3		pos
		p	4		config
		p	5		height
		p	6		mutablePos
	m	(Ldcx;Ljd;ILjd$a;Leek;)Z	a	isValidPosition
		p	1		world
		p	2		pos
		p	3		height
		p	4		mutablePos
		p	5		config
	m	(Lecg;)Z	a	place
		p	1		context
c	ebh	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBamboo
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	f	Ldtc;	a	BAMBOO_TRUNK
	f	Ldtc;	b	BAMBOO_FINAL_LARGE
	f	Ldtc;	c	BAMBOO_TOP_LARGE
	f	Ldtc;	d	BAMBOO_TOP_SMALL
c	ebi	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltColumns
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;ILjd$a;)Z	a	canPlaceAt
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
	m	(Ldcx;ILjd$a;I)Ljd;	a	findSurface
		p	0		world
		p	1		seaLevel
		p	2		mutablePos
		p	3		distance
	m	(Ldcx;ILjd;)Z	a	isAirOrLavaOcean
		p	0		world
		p	1		seaLevel
		p	2		pos
	m	(Ldcx;ILjd;II)Z	a	placeColumn
		p	1		world
		p	2		seaLevel
		p	3		pos
		p	4		height
		p	5		reach
	m	(Ldcx;Ljd$a;I)Ljd;	a	findAir
		p	0		world
		p	1		mutablePos
		p	2		distance
	m	(Lecg;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	ao	UNCLUSTERED_SIZE
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
c	ebj	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBasaltPillar
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;)V	a	placeBaseHangOff
		p	1		world
		p	2		random
		p	3		pos
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldcx;Layw;Ljd;)Z	b	placeHangOff
		p	1		world
		p	2		random
		p	3		pos
c	ebk	net/minecraft/world/level/levelgen/feature/WorldGenTaigaStructure
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ebl	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	m	([IIIZ)V	a	truncate
		p	0		layerHeights
		p	1		expectedHeight
		p	2		actualHeight
		p	3		prioritizeTip
c	ebm	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlockPile
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Ljd;Layw;)Z	a	mayPlaceOn
		p	1		world
		p	2		pos
		p	3		random
	m	(Ldcx;Ljd;Layw;Leea;)V	a	tryPlaceBlock
		p	1		world
		p	2		pos
		p	3		random
		p	4		config
	m	(Lecg;)Z	a	place
		p	1		context
c	ebn	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlueIce
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ebo	net/minecraft/world/level/levelgen/feature/WorldGenBonusChest
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ebp	net/minecraft/world/level/levelgen/feature/WorldGenFeatureChorusPlant
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ebq	net/minecraft/world/level/levelgen/feature/WorldGenFeatureConfigured
	m	(Lece;Leei;)V	<init>	<init>
		p	1		feature
		p	2		config
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Ldds;Lduz;Layw;Ljd;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		origin
	m	(Lebq;)Lece;	a	lambda$static$0
		p	0		configuredFeature
	m	()Lece;	b	feature
	m	()Leei;	c	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lece;	d	feature
	f	Leei;	e	config
c	ebr	net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralClaw
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;Ldtc;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	ebs	net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoral
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;Ldtc;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
	m	(Ldcx;Ljd;Ldfy;)V	a	lambda$placeCoralBlock$0
		p	2		block
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Lji;Ldcx;Ljd;Ldfy;)V	a	lambda$placeCoralBlock$1
		p	3		block
	m	(Ldcx;Layw;Ljd;Ldtc;)Z	b	placeCoralBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	ebt	net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralMushroom
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;Ldtc;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	ebu	net/minecraft/world/level/levelgen/feature/WorldGenFeatureCoralTree
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;Ldtc;)Z	a	placeFeature
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
c	ebv	net/minecraft/world/level/levelgen/feature/WorldGenFeatureDelta
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Ljd;Leee;)Z	a	isClear
		p	0		world
		p	1		pos
		p	2		config
	m	(Lecg;)Z	a	place
		p	1		context
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Lji;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
c	ebw	net/minecraft/world/level/levelgen/feature/WorldGenDesertWell
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd;Ldql;)V	a	lambda$placeSusSand$0
		p	1		blockEntity
	m	(Ldds;Ljd;)V	b	placeSusSand
		p	0		world
		p	1		pos
	f	Ldtl;	a	IS_SAND
	f	Ldtc;	ao	water
	f	Ldtc;	b	sand
	f	Ldtc;	c	sandSlab
	f	Ldtc;	d	sandstone
c	ebx	net/minecraft/world/level/levelgen/feature/DiskFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Leef;Ldds;Layw;IILjd$a;)Z	a	placeColumn
		p	1		config
		p	2		world
		p	3		random
		p	4		topY
		p	5		bottomY
		p	6		pos
c	eby	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIIILeeg;)D	a	getChanceOfStalagmiteOrStalactite
		p	1		radiusX
		p	2		radiusZ
		p	3		localX
		p	4		localZ
		p	5		config
	m	(Layw;FFFF)F	a	randomBetweenBiased
		p	0		random
		p	1		min
		p	2		max
		p	3		mean
		p	4		deviation
	m	(Layw;IIFILeeg;)I	a	getDripstoneHeight
		p	1		random
		p	2		localX
		p	3		localZ
		p	4		density
		p	5		height
		p	6		config
	m	(Ldcx;Ljd;)Z	a	canBeAdjacentToWater
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;)Z	a	isLava
		p	1		world
		p	2		pos
	m	(Ldds;Layw;Ljd;IIFDIFLeeg;)V	a	placeColumn
		p	1		world
		p	2		random
		p	3		pos
		p	4		localX
		p	5		localZ
		p	6		wetness
		p	7		dripstoneChance
		p	9		height
		p	10		density
		p	11		config
	m	(Ldds;Ljd;ILji;)V	a	replaceBlocksWithDripstoneBlocks
		p	1		world
		p	2		pos
		p	3		height
		p	4		direction
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldds;Ljd;)Z	b	canPlacePool
		p	1		world
		p	2		pos
c	ebz	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	(DDDD)D	a	getDripstoneHeight
		p	0		radius
		p	2		scale
		p	4		heightScale
		p	6		bluntness
	m	(Ldcx;Ljd$a;Lji;Ldtc;)V	a	lambda$growPointedDripstone$0
		p	3		state
	m	(Ldcx;Ljd;)Z	a	isEmptyOrWater
		p	0		world
		p	1		pos
	m	(Ldcx;Ljd;Lji;IZ)V	a	growPointedDripstone
		p	0		world
		p	1		pos
		p	2		direction
		p	3		height
		p	4		merge
	m	(Ldds;Ljd;I)Z	a	isCircleMostlyEmbeddedInStone
		p	0		world
		p	1		pos
		p	2		height
	m	(Ldtc;)Z	a	isDripstoneBaseOrLava
		p	0		state
	m	(Lji;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
		p	0		direction
		p	1		height
		p	2		merge
		p	3		callback
	m	(Lji;Ldtz;)Ldtc;	a	createPointedDripstone
		p	0		direction
		p	1		thickness
	m	(Ldcx;Ljd;)Z	b	isEmptyOrWaterOrLava
		p	0		world
		p	1		pos
	m	(Ldtc;)Z	b	isDripstoneBase
		p	0		state
	m	(Ldcx;Ljd;)Z	c	placeDripstoneBlockIfPossible
		p	0		world
		p	1		pos
	m	(Ldtc;)Z	c	isEmptyOrWater
		p	0		state
	m	(Ldtc;)Z	d	isNeitherEmptyNorWater
		p	0		state
	m	(Ldtc;)Z	e	isEmptyOrWaterOrLava
		p	0		state
c	eca	net/minecraft/world/level/levelgen/feature/WorldGenEndGateway
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Ljd;Leeh;Ljd;)V	a	lambda$place$0
		p	3		pos
	m	(Lecg;)Z	a	place
		p	1		context
c	ecb	net/minecraft/world/level/levelgen/feature/WorldGenEndIsland
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ecc	net/minecraft/world/level/levelgen/feature/EndPlatformFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lddl;Ljd;Z)V	a	createEndPlatform
		p	0		world
		p	1		pos
		p	2		breakBlocks
	m	(Lecg;)Z	a	place
		p	1		context
c	ecd	net/minecraft/world/level/levelgen/feature/WorldGenEndTrophy
	m	(Z)V	<init>	<init>
		p	1		open
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd;)Ljd;	a	getLocation
		p	0		pos
	f	I	a	PODIUM_RADIUS
	f	Ljd;	ao	END_PODIUM_LOCATION
	f	Z	ap	active
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
c	ece	net/minecraft/world/level/levelgen/feature/WorldGenerator
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	()Lcom/mojang/serialization/MapCodec;	a	configuredCodec
	m	(Lawu;)Ljava/util/function/Predicate;	a	isReplaceable
		p	0		tag
	m	(Lawu;Ldtc;)Z	a	lambda$isReplaceable$1
		p	1		state
	m	(Lddc;Ljd;)Z	a	isGrassOrDirt
		p	0		world
		p	1		pos
	m	(Ldde;Ljd;Ldtc;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldds;Ljd;)V	a	markAboveForPostProcessing
		p	1		world
		p	2		pos
	m	(Ldds;Ljd;Ldtc;Ljava/util/function/Predicate;)V	a	safeSetBlock
		p	1		world
		p	2		pos
		p	3		state
		p	4		predicate
	m	(Ldtc;)Z	a	isStone
		p	0		state
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Leei;)Lebq;	a	lambda$new$0
		p	1		config
	m	(Leei;Ldds;Lduz;Layw;Ljd;)Z	a	place
		p	1		config
		p	2		world
		p	3		chunkGenerator
		p	4		random
		p	5		pos
	m	(Ljava/lang/String;Lece;)Lece;	a	register
		p	0		name
		p	1		feature
	m	(Ljava/util/function/Function;Ljd;)Z	a	isAdjacentToAir
		p	0		posToState
		p	1		pos
	m	(Ljava/util/function/Function;Ljd;Ljava/util/function/Predicate;)Z	a	checkNeighbors
		p	0		posToState
		p	1		pos
		p	2		predicate
	m	(Ldtc;)Z	b	isDirt
		p	0		state
	f	Lece;	A	MULTIFACE_GROWTH
	f	Lece;	B	UNDERWATER_MAGMA
	f	Lece;	C	MONSTER_ROOM
	f	Lece;	D	BLUE_ICE
	f	Lece;	E	ICEBERG
	f	Lece;	F	FOREST_ROCK
	f	Lece;	G	DISK
	f	Lece;	H	LAKE
	f	Lece;	I	ORE
	f	Lece;	J	END_PLATFORM
	f	Lece;	K	END_SPIKE
	f	Lece;	L	END_ISLAND
	f	Lece;	M	END_GATEWAY
	f	Ledk;	N	SEAGRASS
	f	Lece;	O	KELP
	f	Lece;	P	CORAL_TREE
	f	Lece;	Q	CORAL_MUSHROOM
	f	Lece;	R	CORAL_CLAW
	f	Lece;	S	SEA_PICKLE
	f	Lece;	T	SIMPLE_BLOCK
	f	Lece;	U	BAMBOO
	f	Lece;	V	HUGE_FUNGUS
	f	Lece;	W	NETHER_FOREST_VEGETATION
	f	Lece;	X	WEEPING_VINES
	f	Lece;	Y	TWISTING_VINES
	f	Lece;	Z	BASALT_COLUMNS
	f	Lcom/mojang/serialization/MapCodec;	a	configuredCodec
	f	Lece;	aa	DELTA_FEATURE
	f	Lece;	ab	REPLACE_BLOBS
	f	Lece;	ac	FILL_LAYER
	f	Lebo;	ad	BONUS_CHEST
	f	Lece;	ae	BASALT_PILLAR
	f	Lece;	af	SCATTERED_ORE
	f	Lece;	ag	RANDOM_SELECTOR
	f	Lece;	ah	SIMPLE_RANDOM_SELECTOR
	f	Lece;	ai	RANDOM_BOOLEAN_SELECTOR
	f	Lece;	aj	GEODE
	f	Lece;	ak	DRIPSTONE_CLUSTER
	f	Lece;	al	LARGE_DRIPSTONE
	f	Lece;	am	POINTED_DRIPSTONE
	f	Lece;	an	SCULK_PATCH
	f	Lece;	e	NO_OP
	f	Lece;	f	TREE
	f	Lece;	g	FLOWER
	f	Lece;	h	NO_BONEMEAL_FLOWER
	f	Lece;	i	RANDOM_PATCH
	f	Lece;	j	BLOCK_PILE
	f	Lece;	k	SPRING
	f	Lece;	l	CHORUS_PLANT
	f	Lece;	m	REPLACE_SINGLE_BLOCK
	f	Lece;	n	VOID_START_PLATFORM
	f	Lece;	o	DESERT_WELL
	f	Lece;	p	FOSSIL
	f	Lece;	q	HUGE_RED_MUSHROOM
	f	Lece;	r	HUGE_BROWN_MUSHROOM
	f	Lece;	s	ICE_SPIKE
	f	Lece;	t	GLOWSTONE_BLOB
	f	Lece;	u	FREEZE_TOP_LAYER
	f	Lece;	v	VINES
	f	Lece;	w	BLOCK_COLUMN
	f	Lece;	x	VEGETATION_PATCH
	f	Lece;	y	WATERLOGGED_VEGETATION_PATCH
	f	Lece;	z	ROOT_SYSTEM
c	ecf	ecf
	m	()V	a	clearCounts
	m	(Laqu;)V	a	chunkDecorated
		p	0		world
	m	(Laqu;Lebq;Ljava/util/Optional;)V	a	featurePlaced
		p	0		world
		p	1		configuredFeature
		p	2		placedFeature
	m	(Laqu;Lecf$b;)V	a	lambda$logCounts$2
		p	0		world
		p	1		features
	m	(Lecf$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
		p	0		featureData
		p	1		count
	m	(Ljava/lang/String;Ljava/lang/Integer;Ljz;Lecf$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
		p	3		featureData
		p	4		count
	m	()V	b	logCounts
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
c	ecf$1	ecf$1
	m	(Laqu;)Lecf$b;	a	load
c	ecf$a	ecf$a
	m	()Lebq;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
	f	Lebq;	a	feature
	f	Ljava/util/Optional;	b	topFeature
c	ecf$b	ecf$b
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	ecg	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	m	(Ljava/util/Optional;Ldds;Lduz;Layw;Ljd;Leei;)V	<init>	<init>
		p	1		feature
		p	2		world
		p	3		generator
		p	4		random
		p	5		origin
		p	6		config
	m	()Ljava/util/Optional;	a	topFeature
	m	()Ldds;	b	level
	m	()Lduz;	c	chunkGenerator
	m	()Layw;	d	random
	m	()Ljd;	e	origin
	m	()Leei;	f	config
	f	Ljava/util/Optional;	a	topFeature
	f	Ldds;	b	level
	f	Lduz;	c	chunkGenerator
	f	Layw;	d	random
	f	Ljd;	e	origin
	f	Leei;	f	config
c	ech	net/minecraft/world/level/levelgen/feature/WorldGenFeatureFill
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	eci	net/minecraft/world/level/levelgen/feature/WorldGenFossils
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Lejj;)I	a	countEmptyCorners
		p	0		world
		p	1		box
	m	(Ldds;Lorg/apache/commons/lang3/mutable/MutableInt;Ljd;)V	a	lambda$countEmptyCorners$0
		p	2		pos
	m	(Lecg;)Z	a	place
		p	1		context
c	ecj	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	m	(Ljava/util/List;Ljava/util/List;Ljm;Ljm;I)V	<init>	<init>
		p	1		fossilStructures
		p	2		overlayStructures
		p	3		fossilProcessors
		p	4		overlayProcessors
		p	5		maxEmptyCorners
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lecj;)Ljava/lang/Integer;	a	lambda$static$4
		p	0		config
	m	(Lecj;)Ljm;	b	lambda$static$3
		p	0		config
	m	(Lecj;)Ljm;	c	lambda$static$2
		p	0		config
	m	(Lecj;)Ljava/util/List;	d	lambda$static$1
		p	0		config
	m	(Lecj;)Ljava/util/List;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Ljm;	d	fossilProcessors
	f	Ljm;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
c	eck	net/minecraft/world/level/levelgen/feature/GeodeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	f	[Lji;	a	DIRECTIONS
c	ecl	net/minecraft/world/level/levelgen/feature/WorldGenLightStone1
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ecm	net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomBrown
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Ldcx;Layw;Ljd;ILjd$a;Leek;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	ecn	net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungiConfiguration
	m	(Ldtc;Ldtc;Ldtc;Ldtc;Leaf;Z)V	<init>	<init>
		p	1		validBaseBlock
		p	2		stemState
		p	3		hatState
		p	4		decorationState
		p	5		replaceableBlocks
		p	6		planted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Lecn;)Ljava/lang/Boolean;	a	lambda$static$5
		p	0		config
	m	(Lecn;)Leaf;	b	lambda$static$4
		p	0		config
	m	(Lecn;)Ldtc;	c	lambda$static$3
		p	0		config
	m	(Lecn;)Ldtc;	d	lambda$static$2
		p	0		config
	m	(Lecn;)Ldtc;	e	lambda$static$1
		p	0		config
	m	(Lecn;)Ldtc;	f	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtc;	b	validBaseState
	f	Ldtc;	c	stemState
	f	Ldtc;	d	hatState
	f	Ldtc;	e	decorState
	f	Leaf;	f	replaceableBlocks
	f	Z	g	planted
c	eco	net/minecraft/world/level/levelgen/feature/WorldGenFeatureHugeFungi
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Lecn;Ljd$a;FFF)V	a	placeHatBlock
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		decorationChance
		p	6		generationChance
		p	7		vineChance
	m	(Ldcx;Layw;Ljd;Ldtc;Z)V	a	placeHatDropBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		state
		p	5		vines
	m	(Ldds;Layw;Lecn;Ljd;IZ)V	a	placeStem
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		stemHeight
		p	6		thickStem
	m	(Ldds;Ljd;Lecn;Z)Z	a	isReplaceable
		p	0		world
		p	1		pos
		p	2		config
		p	3		checkConfig
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd;Ldcx;Layw;)V	a	tryPlaceWeepingVines
		p	0		pos
		p	1		world
		p	2		random
	m	(Ldds;Layw;Lecn;Ljd;IZ)V	b	placeHat
		p	1		world
		p	2		random
		p	3		config
		p	4		pos
		p	5		hatHeight
		p	6		thickStem
	f	F	a	HUGE_PROBABILITY
c	ecp	net/minecraft/world/level/levelgen/feature/WorldGenHugeMushroomRed
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	getTreeRadiusForHeight
		p	3		capSize
		p	4		y
	m	(Ldcx;Layw;Ljd;ILjd$a;Leek;)V	a	makeCap
		p	1		world
		p	2		random
		p	3		start
		p	4		y
		p	5		mutable
		p	6		config
c	ecq	net/minecraft/world/level/levelgen/feature/WorldGenPackedIce2
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ecr	net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceburg
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(III)I	a	getEllipseC
		p	1		y
		p	2		height
		p	3		value
	m	(IILjd;IID)D	a	signedDistanceEllipse
		p	1		x
		p	2		z
		p	3		pos
		p	4		divisor1
		p	5		divisor2
		p	6		randomSine
	m	(IILjd;ILayw;)D	a	signedDistanceCircle
		p	1		x
		p	2		z
		p	3		pos
		p	5		random
	m	(IILjd;Ldcx;ZDLjd;II)V	a	carve
		p	2		y
		p	3		pos
		p	4		world
		p	5		placeWater
	m	(Layw;III)I	a	heightDependentRadiusRound
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Layw;Ldcx;IILjd;ZIDI)V	a	generateCutOut
		p	1		random
		p	2		world
		p	5		pos
	m	(Ldcc;Ljd;)Z	a	belowIsAir
		p	1		world
		p	2		pos
	m	(Ldcx;Layw;Ljd;IIIIIIZIDZLdtc;)V	a	generateIcebergBlock
		p	1		world
		p	2		random
		p	3		pos
		p	4		height
		p	5		offsetX
		p	6		offsetY
		p	7		offsetZ
		p	12		randomSine
		p	14		placeSnow
		p	15		state
	m	(Ldcx;Ljd;)V	a	removeFloatingSnowLayer
		p	1		world
		p	2		pos
	m	(Ldcx;Ljd;IIZI)V	a	smooth
		p	1		world
		p	2		pos
		p	4		height
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd;Ldcx;Layw;IIZZLdtc;)V	a	setIcebergBlock
		p	1		pos
		p	2		world
		p	3		random
		p	4		heightRemaining
		p	5		height
		p	6		lessSnow
		p	7		placeSnow
		p	8		state
	m	(III)I	b	heightDependentRadiusEllipse
		p	1		y
		p	2		height
		p	3		factor
	m	(Layw;III)I	b	heightDependentRadiusSteep
		p	1		random
		p	2		y
		p	3		height
		p	4		factor
	m	(Ldtc;)Z	c	isIcebergState
		p	0		state
c	ecs	net/minecraft/world/level/levelgen/feature/WorldGenFeatureKelp
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ect	net/minecraft/world/level/levelgen/feature/WorldGenLakes
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldtc;)Z	c	canReplaceBlock
		p	1		state
	f	Ldtc;	a	AIR
c	ect$a	net/minecraft/world/level/levelgen/feature/WorldGenLakes$a
	m	()Legj;	a	fluid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Legj;	b	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	fluid
	f	Legj;	c	barrier
c	ecu	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Ljd;Ldyo$b;Lecu$b;)V	a	placeDebugMarkers
		p	1		world
		p	2		pos
		p	3		surface
		p	4		wind
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd;ZLayw;ILbpu;Lbpu;)Lecu$a;	a	makeDripstone
		p	0		pos
		p	1		isStalagmite
		p	3		scale
		p	4		bluntness
		p	5		heightScale
c	ecu$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$a
	m	(Ljd;ZIDD)V	<init>	<init>
		p	1		pos
		p	2		isStalagmite
		p	3		scale
		p	4		bluntness
		p	6		heightScale
	m	()I	a	getHeight
	m	(F)I	a	getHeightAtRadius
		p	1		height
	m	(Ldds;Layw;Lecu$b;)V	a	placeBlocks
		p	1		world
		p	2		random
		p	3		wind
	m	(Ldds;Lecu$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
		p	1		world
		p	2		wind
	m	(Leel;)Z	a	isSuitableForWind
		p	1		config
	m	()I	b	getMinY
	m	()I	c	getMaxY
	f	Ljd;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
c	ecu$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$b
	m	(ILayw;Lbpu;)V	<init>	<init>
		p	1		y
		p	2		random
		p	3		wind
	m	()Lecu$b;	a	noWind
	m	(Ljd;)Ljd;	a	offset
		p	1		pos
	f	I	a	originY
	f	Lexc;	b	windSpeed
c	ecv	net/minecraft/world/level/levelgen/feature/WorldGenDungeons
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Layw;)Lbsx;	a	randomEntityId
		p	1		random
	m	(Lecg;)Z	a	place
		p	1		context
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Lbsx;	b	MOBS
	f	Ldtc;	c	AIR
c	ecw	net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Ljd;Ldtc;Leen;Layw;Ljava/util/List;)Z	a	placeGrowthIfPossible
		p	0		world
		p	1		pos
		p	2		state
		p	3		config
		p	4		random
		p	5		directions
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldtc;)Z	c	isAirOrWater
		p	0		state
c	ecx	net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherForestVegetation
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ecy	net/minecraft/world/level/levelgen/feature/WorldGenFeatureEmpty
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ecz	net/minecraft/world/level/levelgen/feature/WorldGenMinable
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Layw;F)Z	a	shouldSkipAirCheck
		p	0		random
		p	1		chance
	m	(Ldds;Layw;Leeq;DDDDDDIIIII)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		config
		p	4		startX
		p	6		endX
		p	8		startZ
		p	10		endZ
		p	12		startY
		p	14		endY
		p	16		x
		p	17		y
		p	18		z
		p	19		horizontalSize
		p	20		verticalSize
	m	(Ldtc;Ljava/util/function/Function;Layw;Leeq;Leeq$a;Ljd$a;)Z	a	canPlaceOre
		p	0		state
		p	1		posToState
		p	2		random
		p	3		config
		p	4		target
		p	5		pos
	m	(Lecg;)Z	a	place
		p	1		context
c	eda	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd;Leer;)V	a	createPatchOfDripstoneBlocks
		p	0		world
		p	1		random
		p	2		pos
		p	3		config
	m	(Ldcx;Ljd;Layw;)Ljava/util/Optional;	a	getTipDirection
		p	0		world
		p	1		pos
		p	2		random
	m	(Lecg;)Z	a	place
		p	1		context
c	edb	net/minecraft/world/level/levelgen/feature/WorldGenFeatureChoice
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edc	net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomPatch
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edd	net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandomChoice
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	ede	net/minecraft/world/level/levelgen/feature/WorldGenFeatureNetherrackReplaceBlobs
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Ljd$a;Ldfy;)Ljd;	a	findTarget
		p	0		world
		p	1		mutablePos
		p	2		target
	m	(Lecg;)Z	a	place
		p	1		context
c	edf	net/minecraft/world/level/levelgen/feature/WorldGenFeatureReplaceBlock
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edg	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Lduz;Leey;Layw;Ljd$a;Ljd;)Z	a	placeDirtAndTree
		p	0		world
		p	1		generator
		p	2		config
		p	3		random
		p	4		mutablePos
		p	5		pos
	m	(Ldds;Leey;Layw;IILjd$a;)V	a	placeRootedDirt
		p	0		world
		p	1		config
		p	2		random
		p	3		x
		p	4		z
		p	5		mutablePos
	m	(Ldds;Leey;Layw;Ljd;Ljd$a;)V	a	placeRoots
		p	0		world
		p	1		config
		p	2		random
		p	3		pos
		p	4		mutablePos
	m	(Ldds;Leey;Ljd;)Z	a	spaceForTree
		p	0		world
		p	1		config
		p	2		pos
	m	(Ldtc;II)Z	a	isAllowedTreeSpace
		p	0		state
		p	1		height
		p	2		allowedVerticalWaterForTree
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Leey;Ldtc;)Z	a	lambda$placeRootedDirt$0
		p	1		state
	m	(Ljd;ILdds;Leey;Layw;)V	a	placeDirt
		p	0		pos
		p	1		maxY
		p	2		world
		p	3		config
		p	4		random
c	edh	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Layw;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
		p	1		random
		p	2		spread
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ljd$a;Layw;Ljd;I)V	a	offsetTargetPos
		p	1		mutable
		p	2		random
		p	3		origin
		p	4		spread
	f	I	a	MAX_DIST_FROM_ORIGIN
c	edi	net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Ljd;)Z	a	canSpreadFrom
		p	1		world
		p	2		pos
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldcx;Ljd;)Z	b	lambda$canSpreadFrom$0
		p	1		pos2
c	edj	net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaPickel
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edk	net/minecraft/world/level/levelgen/feature/WorldGenFeatureSeaGrass
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edl	net/minecraft/world/level/levelgen/feature/WorldGenFeatureBlock
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edm	net/minecraft/world/level/levelgen/feature/WorldGenFeatureRandom2Configuration
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edn	net/minecraft/world/level/levelgen/feature/WorldGenFeatureIceSnow
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edo	net/minecraft/world/level/levelgen/feature/WorldGenEnder
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lddl;Layw;Lefc;Ledo$a;)V	a	placeSpike
		p	1		world
		p	2		random
		p	3		config
		p	4		spike
	m	(Ldds;)Ljava/util/List;	a	getSpikesForLevel
		p	0		world
	m	(Lecg;)Z	a	place
		p	1		context
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
c	edo$a	net/minecraft/world/level/levelgen/feature/WorldGenEnder$Spike
	m	(IIIIZ)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		radius
		p	4		height
		p	5		guarded
	m	()I	a	getCenterX
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ledo$a;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		spike
	m	(Ljd;)Z	a	isCenterWithinChunk
		p	1		pos
	m	()I	b	getCenterZ
	m	(Ledo$a;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		spike
	m	()I	c	getRadius
	m	(Ledo$a;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		spike
	m	()I	d	getHeight
	m	(Ledo$a;)Ljava/lang/Integer;	d	lambda$static$1
		p	0		spike
	m	()Z	e	isGuarded
	m	(Ledo$a;)Ljava/lang/Integer;	e	lambda$static$0
		p	0		spike
	m	()Lewx;	f	getTopBoundingBox
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Lewx;	g	topBoundingBox
c	edo$b	net/minecraft/world/level/levelgen/feature/WorldGenEnder$b
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
c	edp	net/minecraft/world/level/levelgen/feature/WorldGenLiquids
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edq	net/minecraft/world/level/levelgen/feature/WorldGenTrees
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Lejj;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lexl;	a	updateLeaves
		p	0		world
		p	1		box
		p	2		trunkPositions
		p	3		decorationPositions
		p	4		rootPositions
	m	(Lddc;ILjd;Lefe;)I	a	getMaxFreeTreeHeight
		p	1		world
		p	2		height
		p	3		pos
		p	4		config
	m	(Ldde;Ljd;Ldtc;)V	a	setBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldds;Layw;Ljd;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lefu$b;Lefe;)Z	a	doPlace
		p	1		world
		p	2		random
		p	3		pos
		p	4		rootPlacerReplacer
		p	5		trunkPlacerReplacer
		p	6		blockPlacer
		p	7		config
	m	(Ldds;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Lejj;)Ljava/lang/Boolean;	a	lambda$place$9
		p	4		box
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Lefe;Ldds;Lefu$b;Layw;IIILefu$a;)V	a	lambda$doPlace$4
		p	7		node
	m	(Leha$a;Leha;)V	a	lambda$place$8
		p	1		decorator
	m	(Ljava/util/Set;Ldds;Ljd;Ldtc;)V	a	lambda$place$7
		p	2		pos
		p	3		state
	m	(Ljd;Layw;Legg;)Ljd;	a	lambda$doPlace$3
		p	2		rootPlacer
	m	(Lddc;Ljd;)Z	b	isAirOrLeaves
		p	0		world
		p	1		pos
	m	(Ldde;Ljd;Ldtc;)V	b	setBlockKnownShape
		p	0		world
		p	1		pos
		p	2		state
	m	(Ljava/util/Set;Ldds;Ljd;Ldtc;)V	b	lambda$place$6
		p	2		pos
		p	3		state
	m	(Lddc;Ljd;)Z	c	validTreePos
		p	0		world
		p	1		pos
	m	(Ldtc;)Z	c	lambda$validTreePos$2
		p	0		state
	m	(Ljava/util/Set;Ldds;Ljd;Ldtc;)V	c	lambda$place$5
		p	2		pos
		p	3		state
	m	(Lddc;Ljd;)Z	d	isVine
		p	0		world
		p	1		pos
	m	(Ldtc;)Z	d	lambda$isAirOrLeaves$1
		p	0		state
	m	(Ldtc;)Z	e	lambda$isVine$0
		p	0		state
	f	I	a	BLOCK_UPDATE_FLAGS
c	edq$1	net/minecraft/world/level/levelgen/feature/WorldGenTrees$1
	m	(Ljd;)Z	a	isSet
		p	1		pos
	m	(Ljd;Ldtc;)V	a	set
		p	1		pos
		p	2		state
	f	Ljava/util/Set;	a	val$foliage
	f	Ldds;	b	val$level
c	edr	net/minecraft/world/level/levelgen/feature/WorldGenFeatureTwistingVines
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		maxLength
		p	4		minAge
		p	5		maxAge
	m	(Ldcx;Ljd$a;)Z	a	findFirstAirBlockAboveGround
		p	0		world
		p	1		pos
	m	(Ldcx;Ljd;)Z	a	isInvalidPlacementLocation
		p	0		world
		p	1		pos
	m	(Lecg;)Z	a	place
		p	1		context
c	eds	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Layw;Lefg;Ljd;)Z	a	lambda$place$0
		p	2		pos
	m	(Ldcx;Ljd;)Z	a	isWaterOrAir
		p	1		world
		p	2		pos
	m	(Ldds;Ljd;Lefg;)Ljava/util/OptionalInt;	a	getFloorY
		p	0		world
		p	1		pos
		p	2		config
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldds;Ljd;)Z	b	isValidPlacement
		p	1		world
		p	2		pos
	m	(Ldds;Ljd;)I	c	lambda$place$2
		p	1		pos
	m	(Ldtc;)Z	c	lambda$getFloorY$4
		p	0		state
	m	(Ldds;Ljd;)Z	d	lambda$place$1
		p	2		pos
	m	(Ldtc;)Z	d	lambda$getFloorY$3
		p	0		state
c	edt	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Lefh;Layw;Ljd;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Ldds;Lefh;Lduz;Layw;Ljd;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Ldds;Lefh;Ljava/util/function/Predicate;Layw;Ljd$a;I)Z	a	placeGround
		p	1		world
		p	2		config
		p	3		replaceable
		p	4		random
		p	5		pos
		p	6		depth
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Lecg;Ldds;Lefh;Layw;Ljava/util/Set;II)V	a	distributeVegetation
		p	1		context
		p	2		world
		p	3		config
		p	4		random
		p	5		positions
		p	6		radiusX
		p	7		radiusZ
	m	(Lefh;Ldtc;)Z	a	lambda$place$0
		p	1		state
	m	(Ldtc;)Z	c	lambda$placeGroundPatch$1
		p	0		state
c	edu	net/minecraft/world/level/levelgen/feature/WorldGenVines
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Lecg;)Z	a	place
		p	1		context
c	edv	net/minecraft/world/level/levelgen/feature/WorldGenFeatureEndPlatform
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(IIII)I	a	checkerboardDistance
		p	0		x1
		p	1		z1
		p	2		x2
		p	3		z2
	m	(Lecg;)Z	a	place
		p	1		context
	f	Ljd;	a	PLATFORM_OFFSET
	f	Ldcd;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
c	edw	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldds;Lefh;Layw;Ljd;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
		p	1		world
		p	2		config
		p	3		random
		p	4		pos
		p	5		replaceable
		p	6		radiusX
		p	7		radiusZ
	m	(Ldds;Lefh;Lduz;Layw;Ljd;)Z	a	placeVegetation
		p	1		world
		p	2		config
		p	3		generator
		p	4		random
		p	5		pos
	m	(Ldds;Ljava/util/Set;Ljd;Ljd$a;)Z	a	isExposed
		p	0		world
		p	1		positions
		p	2		pos
		p	3		mutablePos
	m	(Ldds;Ljd;Ljd$a;Lji;)Z	a	isExposedDirection
		p	0		world
		p	1		pos
		p	2		mutablePos
		p	3		direction
c	edx	net/minecraft/world/level/levelgen/feature/WorldGenFeatureWeepingVines
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
		p	1		configCodec
	m	(Ldcx;Layw;Ljd$a;III)V	a	placeWeepingVinesColumn
		p	0		world
		p	1		random
		p	2		pos
		p	3		length
		p	4		minAge
		p	5		maxAge
	m	(Ldcx;Layw;Ljd;)V	a	placeRoofNetherWart
		p	1		world
		p	2		random
		p	3		pos
	m	(Lecg;)Z	a	place
		p	1		context
	m	(Ldcx;Layw;Ljd;)V	b	placeRoofWeepingVines
		p	1		world
		p	2		random
		p	3		pos
	f	[Lji;	a	DIRECTIONS
c	edy	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	m	(Ljm;F)V	<init>	<init>
		p	1		feature
		p	2		chance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldds;Lduz;Layw;Ljd;)Z	a	place
		p	1		world
		p	2		chunkGenerator
		p	3		random
		p	4		pos
	m	(Ledy;)Ljava/lang/Float;	a	lambda$static$1
		p	0		config
	m	(Ledy;)Ljm;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	feature
	f	F	c	chance
c	edz	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	m	()Ljava/util/List;	a	layers
	m	(Lbpw;Legj;)Ledz$a;	a	layer
		p	0		height
		p	1		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Lji;	b	direction
	m	(Lbpw;Legj;)Ledz;	b	simple
		p	0		height
		p	1		state
	m	()Leaf;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	layers
	f	Lji;	c	direction
	f	Leaf;	d	allowedPlacement
	f	Z	e	prioritizeTip
c	edz$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$a
	m	()Lbpw;	a	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Legj;	b	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpw;	b	height
	f	Legj;	c	state
c	eea	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockPileConfiguration
	m	(Legj;)V	<init>	<init>
		p	1		stateProvider
	m	(Leea;)Legj;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	stateProvider
c	eeb	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureLakeConfiguration
	m	(Ldtc;)V	<init>	<init>
		p	1		state
	m	(Leeb;)Ldtc;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtc;	b	state
c	eec	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBasaltColumnsConfiguration
	m	(Lbpw;Lbpw;)V	<init>	<init>
		p	1		reach
		p	2		height
	m	()Lbpw;	a	reach
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Leec;)Lbpw;	a	lambda$static$1
		p	0		config
	m	()Lbpw;	b	height
	m	(Leec;)Lbpw;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpw;	b	reach
	f	Lbpw;	c	height
c	eed	net/minecraft/world/level/levelgen/feature/configurations/WorldGenDecoratorFrequencyConfiguration
	m	(I)V	<init>	<init>
		p	1		count
	m	(Lbpw;)V	<init>	<init>
		p	1		distribution
	m	()Lbpw;	a	count
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbpw;	b	count
c	eee	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureDeltaConfiguration
	m	(Ldtc;Ldtc;Lbpw;Lbpw;)V	<init>	<init>
		p	1		contents
		p	2		rim
		p	3		size
		p	4		rimSize
	m	()Ldtc;	a	contents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Leee;)Lbpw;	a	lambda$static$3
		p	0		config
	m	()Ldtc;	b	rim
	m	(Leee;)Lbpw;	b	lambda$static$2
		p	0		config
	m	()Lbpw;	c	size
	m	(Leee;)Ldtc;	c	lambda$static$1
		p	0		config
	m	()Lbpw;	d	rimSize
	m	(Leee;)Ldtc;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtc;	b	contents
	f	Ldtc;	c	rim
	f	Lbpw;	d	size
	f	Lbpw;	e	rimSize
c	eef	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureCircleConfiguration
	m	()Legr;	a	stateProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Leaf;	b	target
	m	()Lbpw;	c	radius
	m	()I	d	halfHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legr;	b	stateProvider
	f	Leaf;	c	target
	f	Lbpw;	d	radius
	f	I	e	halfHeight
c	eeg	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	m	(ILbpw;Lbpw;IILbpw;Lbpu;Lbpu;FII)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		height
		p	3		radius
		p	4		maxStalagmiteStalactiteHeightDiff
		p	5		heightDeviation
		p	6		dripstoneBlockLayerThickness
		p	7		density
		p	8		wetness
		p	9		wetnessMean
		p	10		maxDistanceFromCenterAffectingChanceOfDripstoneColumn
		p	11		maxDistanceFromCenterAffectingHeightBias
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
		p	0		instance
	m	(Leeg;)Ljava/lang/Integer;	a	lambda$static$10
		p	0		config
	m	(Leeg;)Ljava/lang/Integer;	b	lambda$static$9
		p	0		config
	m	(Leeg;)Ljava/lang/Float;	c	lambda$static$8
		p	0		config
	m	(Leeg;)Lbpu;	d	lambda$static$7
		p	0		config
	m	(Leeg;)Lbpu;	e	lambda$static$6
		p	0		config
	m	(Leeg;)Lbpw;	f	lambda$static$5
		p	0		config
	m	(Leeg;)Ljava/lang/Integer;	g	lambda$static$4
		p	0		config
	m	(Leeg;)Ljava/lang/Integer;	h	lambda$static$3
		p	0		config
	m	(Leeg;)Lbpw;	i	lambda$static$2
		p	0		config
	m	(Leeg;)Lbpw;	j	lambda$static$1
		p	0		config
	m	(Leeg;)Ljava/lang/Integer;	k	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbpw;	c	height
	f	Lbpw;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Lbpw;	g	dripstoneBlockLayerThickness
	f	Lbpu;	h	density
	f	Lbpu;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
c	eeh	net/minecraft/world/level/levelgen/feature/configurations/WorldGenEndGatewayConfiguration
	m	(Ljava/util/Optional;Z)V	<init>	<init>
		p	1		exitPos
		p	2		exact
	m	()Leeh;	a	delayedExitSearch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Leeh;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		config
	m	(Ljd;Z)Leeh;	a	knownExit
		p	0		exitPortalPosition
		p	1		exitsAtSpawn
	m	()Ljava/util/Optional;	b	getExit
	m	(Leeh;)Ljava/util/Optional;	b	lambda$static$0
		p	0		config
	m	()Z	c	isExitExact
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
c	eei	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfiguration
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Leep;	m	NONE
c	eej	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	m	(Ldyv;Ldyx;Ldyw;DDZLbpw;Lbpw;Lbpw;IIDI)V	<init>	<init>
		p	1		layerConfig
		p	2		layerThicknessConfig
		p	3		crackConfig
		p	4		usePotentialPlacementsChance
		p	6		useAlternateLayer0Chance
		p	8		placementsRequireLayer0Alternate
		p	9		outerWallDistance
		p	10		distributionPoints
		p	11		pointOffset
		p	12		maxDistributionPoints
		p	13		minPointOffset
		p	14		noiseMultiplier
		p	16		maxGenOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Leej;)Ljava/lang/Integer;	a	lambda$static$12
		p	0		config
	m	(Leej;)Ljava/lang/Double;	b	lambda$static$11
		p	0		config
	m	(Leej;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Leej;)Ljava/lang/Integer;	d	lambda$static$9
		p	0		config
	m	(Leej;)Lbpw;	e	lambda$static$8
		p	0		config
	m	(Leej;)Lbpw;	f	lambda$static$7
		p	0		config
	m	(Leej;)Lbpw;	g	lambda$static$6
		p	0		config
	m	(Leej;)Ljava/lang/Boolean;	h	lambda$static$5
		p	0		config
	m	(Leej;)Ljava/lang/Double;	i	lambda$static$4
		p	0		config
	m	(Leej;)Ljava/lang/Double;	j	lambda$static$3
		p	0		config
	m	(Leej;)Ldyw;	k	lambda$static$2
		p	0		config
	m	(Leej;)Ldyx;	l	lambda$static$1
		p	0		config
	m	(Leej;)Ldyv;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldyv;	c	geodeBlockSettings
	f	Ldyx;	d	geodeLayerSettings
	f	Ldyw;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Lbpw;	i	outerWallDistance
	f	Lbpw;	j	distributionPoints
	f	Lbpw;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
c	eek	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureMushroomConfiguration
	m	(Legj;Legj;I)V	<init>	<init>
		p	1		capProvider
		p	2		stemProvider
		p	3		foliageRadius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leek;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leek;)Legj;	b	lambda$static$1
	m	(Leek;)Legj;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	capProvider
	f	Legj;	c	stemProvider
	f	I	d	foliageRadius
c	eel	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	m	(ILbpw;Lbpu;FLbpu;Lbpu;Lbpu;IF)V	<init>	<init>
		p	1		floorToCeilingSearchRange
		p	2		columnRadius
		p	3		heightScale
		p	4		maxColumnRadiusToCaveHeightRatio
		p	5		stalactiteBluntness
		p	6		stalagmiteBluntness
		p	7		windSpeed
		p	8		minRadiusForWind
		p	9		minBluntnessForWind
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
		p	0		instance
	m	(Leel;)Ljava/lang/Float;	a	lambda$static$8
		p	0		config
	m	(Leel;)Ljava/lang/Integer;	b	lambda$static$7
		p	0		config
	m	(Leel;)Lbpu;	c	lambda$static$6
		p	0		config
	m	(Leel;)Lbpu;	d	lambda$static$5
		p	0		config
	m	(Leel;)Lbpu;	e	lambda$static$4
		p	0		config
	m	(Leel;)Ljava/lang/Float;	f	lambda$static$3
		p	0		config
	m	(Leel;)Lbpu;	g	lambda$static$2
		p	0		config
	m	(Leel;)Lbpw;	h	lambda$static$1
		p	0		config
	m	(Leel;)Ljava/lang/Integer;	i	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbpw;	c	columnRadius
	f	Lbpu;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Lbpu;	f	stalactiteBluntness
	f	Lbpu;	g	stalagmiteBluntness
	f	Lbpu;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
c	eem	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureFillConfiguration
	m	(ILdtc;)V	<init>	<init>
		p	1		height
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Leem;)Ldtc;	a	lambda$static$1
		p	0		config
	m	(Leem;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Ldtc;	c	state
c	een	net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	m	(Ldky;IZZZFLjq;)V	<init>	<init>
		p	1		lichen
		p	2		searchRange
		p	3		placeOnFloor
		p	4		placeOnCeiling
		p	5		placeOnWalls
		p	6		spreadChance
		p	7		canPlaceOn
	m	()Ljava/lang/String;	a	lambda$apply$8
	m	(Layw;)Ljava/util/List;	a	getShuffledDirections
		p	1		random
	m	(Layw;Lji;)Ljava/util/List;	a	getShuffledDirectionsExcept
		p	1		random
		p	2		excluded
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
		p	0		instance
	m	(Ldfy;)Lcom/mojang/serialization/DataResult;	a	apply
		p	0		block
	m	(Leen;)Ljq;	a	lambda$static$6
		p	0		config
	m	(Lji;Lji;)Z	a	lambda$getShuffledDirectionsExcept$9
		p	1		direction
	m	(Leen;)Ljava/lang/Float;	b	lambda$static$5
		p	0		config
	m	(Leen;)Ljava/lang/Boolean;	c	lambda$static$4
		p	0		config
	m	(Leen;)Ljava/lang/Boolean;	d	lambda$static$3
		p	0		config
	m	(Leen;)Ljava/lang/Boolean;	e	lambda$static$2
		p	0		config
	m	(Leen;)Ljava/lang/Integer;	f	lambda$static$1
		p	0		config
	m	(Leen;)Ldky;	g	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldky;	b	placeBlock
	f	I	c	searchRange
	f	Z	d	canPlaceOnFloor
	f	Z	e	canPlaceOnCeiling
	f	Z	f	canPlaceOnWall
	f	F	g	chanceOfSpreading
	f	Ljq;	h	canBePlacedOn
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	i	validDirections
c	eeo	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	m	(Legj;II)V	<init>	<init>
		p	1		stateProvider
		p	2		spreadWidth
		p	3		spreadHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leeo;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		config
	m	(Leeo;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Leeo;)Legj;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
c	eep	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEmptyConfiguration
	m	()Leep;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leep;	b	INSTANCE
c	eeq	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration
	m	(Lenn;Ldtc;I)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
	m	(Lenn;Ldtc;IF)V	<init>	<init>
		p	1		test
		p	2		state
		p	3		size
		p	4		discardOnAirChance
	m	(Ljava/util/List;I)V	<init>	<init>
		p	1		targets
		p	2		size
	m	(Ljava/util/List;IF)V	<init>	<init>
		p	1		targets
		p	2		size
		p	3		discardOnAirChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leeq;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Lenn;Ldtc;)Leeq$a;	a	target
		p	0		test
		p	1		state
	m	(Leeq;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Leeq;)Ljava/util/List;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
c	eeq$a	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureOreConfiguration$a
	m	(Lenn;Ldtc;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Leeq$a;)Ldtc;	a	lambda$static$1
		p	0		target
	m	(Leeq$a;)Lenn;	b	lambda$static$0
		p	0		target
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lenn;	b	target
	f	Ldtc;	c	state
c	eer	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	m	(FFFF)V	<init>	<init>
		p	1		chanceOfTallerDripstone
		p	2		chanceOfDirectionalSpread
		p	3		chanceOfSpreadRadius2
		p	4		chanceOfSpreadRadius3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Leer;)Ljava/lang/Float;	a	lambda$static$3
		p	0		config
	m	(Leer;)Ljava/lang/Float;	b	lambda$static$2
		p	0		config
	m	(Leer;)Ljava/lang/Float;	c	lambda$static$1
		p	0		config
	m	(Leer;)Ljava/lang/Float;	d	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
c	ees	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureConfigurationChance
	m	(F)V	<init>	<init>
		p	1		probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lees;)Ljava/lang/Float;	a	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	F	l	probability
c	eet	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureChoiceConfiguration
	m	(Ljm;Ljm;)V	<init>	<init>
		p	1		featureTrue
		p	2		featureFalse
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Leet;)Ljm;	a	lambda$static$1
		p	0		config
	m	(Leet;)Ljm;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	featureTrue
	f	Ljm;	c	featureFalse
c	eeu	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomChoiceConfiguration
	m	(Ljava/util/List;Ljm;)V	<init>	<init>
		p	1		features
		p	2		defaultFeature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ledy;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
		p	0		entry
	m	(Leeu;)Ljm;	a	lambda$static$1
		p	0		config
	m	(Leeu;)Ljava/util/List;	b	lambda$static$0
		p	0		config
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Ljm;	c	defaultFeature
c	eev	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandomPatchConfiguration
	m	()I	a	tries
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Ljm;	d	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Ljm;	e	feature
c	eew	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureReplaceBlockConfiguration
	m	(Ldtc;Ldtc;)V	<init>	<init>
		p	1		target
		p	2		state
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		targets
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Leew;)Ljava/util/List;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
c	eex	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRadiusConfiguration
	m	(Ldtc;Ldtc;Lbpw;)V	<init>	<init>
		p	1		target
		p	2		state
		p	3		radius
	m	()Lbpw;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leex;)Lbpw;	a	lambda$static$2
		p	0		config
	m	(Leex;)Ldtc;	b	lambda$static$1
		p	0		config
	m	(Leex;)Ldtc;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldtc;	b	targetState
	f	Ldtc;	c	replaceState
	f	Lbpw;	d	radius
c	eey	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	m	(Ljm;IILawu;Legj;IIIILegj;IILeaf;)V	<init>	<init>
		p	1		feature
		p	2		requiredVerticalSpaceForTree
		p	3		rootRadius
		p	4		rootReplaceable
		p	5		rootStateProvider
		p	6		rootPlacementAttempts
		p	7		maxRootColumnHeight
		p	8		hangingRootRadius
		p	9		hangingRootVerticalSpan
		p	10		hangingRootStateProvider
		p	11		hangingRootPlacementAttempts
		p	12		allowedVerticalWaterForTree
		p	13		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
		p	0		instance
	m	(Leey;)Leaf;	a	lambda$static$12
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	b	lambda$static$11
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	c	lambda$static$10
		p	0		config
	m	(Leey;)Legj;	d	lambda$static$9
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	e	lambda$static$8
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	f	lambda$static$7
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	g	lambda$static$6
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	h	lambda$static$5
		p	0		config
	m	(Leey;)Legj;	i	lambda$static$4
		p	0		config
	m	(Leey;)Lawu;	j	lambda$static$3
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	k	lambda$static$2
		p	0		config
	m	(Leey;)Ljava/lang/Integer;	l	lambda$static$1
		p	0		config
	m	(Leey;)Ljm;	m	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Lawu;	e	rootReplaceable
	f	Legj;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Legj;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Leaf;	o	allowedTreePosition
c	eez	net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	m	()I	a	chargeCount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	amountPerCharge
	m	()I	c	spreadAttempts
	m	()I	d	growthRounds
	m	()I	f	spreadRounds
	m	()Lbpw;	g	extraRareGrowths
	m	()F	h	catalystChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	chargeCount
	f	I	c	amountPerCharge
	f	I	d	spreadAttempts
	f	I	e	growthRounds
	f	I	f	spreadRounds
	f	Lbpw;	g	extraRareGrowths
	f	F	h	catalystChance
c	efa	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureBlockConfiguration
	m	(Legj;)V	<init>	<init>
		p	1		toPlace
	m	()Legj;	a	toPlace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lefa;)Legj;	a	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	toPlace
c	efb	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureRandom2
	m	(Ljq;)V	<init>	<init>
		p	1		features
	m	(Lefb;)Ljq;	a	lambda$static$0
		p	0		config
	m	(Ljm;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
		p	0		feature
	m	()Ljava/util/stream/Stream;	e	getFeatures
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljq;	b	features
c	efc	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureEndSpikeConfiguration
	m	(ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	(ZLjava/util/List;Ljd;)V	<init>	<init>
		p	1		crystalInvulnerable
		p	2		spikes
		p	3		crystalBeamTarget
	m	()Z	a	isCrystalInvulnerable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lefc;)Ljava/util/Optional;	a	lambda$static$2
		p	0		config
	m	()Ljava/util/List;	b	getSpikes
	m	(Lefc;)Ljava/util/List;	b	lambda$static$1
		p	0		config
	m	()Ljd;	c	getCrystalBeamTarget
	m	(Lefc;)Ljava/lang/Boolean;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Ljd;	d	crystalBeamTarget
c	efd	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureHellFlowingLavaConfiguration
	m	(Lepe;ZIILjq;)V	<init>	<init>
		p	1		state
		p	2		requiresBlockBelow
		p	3		rockCount
		p	4		holeCount
		p	5		validBlocks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lefd;)Ljq;	a	lambda$static$4
		p	0		config
	m	(Lefd;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		config
	m	(Lefd;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		config
	m	(Lefd;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	(Lefd;)Lepe;	e	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lepe;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Ljq;	f	validBlocks
c	efe	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration
	m	(Legj;Lehm;Legj;Lefu;Ljava/util/Optional;Legj;Lefj;Ljava/util/List;ZZ)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		dirtProvider
		p	7		minimumSize
		p	8		decorators
		p	9		ignoreVines
		p	10		forceDirt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Lefe;)Ljava/lang/Boolean;	a	lambda$static$9
		p	0		config
	m	(Lefe;)Ljava/lang/Boolean;	b	lambda$static$8
		p	0		config
	m	(Lefe;)Ljava/util/List;	c	lambda$static$7
		p	0		config
	m	(Lefe;)Lefj;	d	lambda$static$6
		p	0		config
	m	(Lefe;)Legj;	e	lambda$static$5
		p	0		config
	m	(Lefe;)Ljava/util/Optional;	f	lambda$static$4
		p	0		config
	m	(Lefe;)Lefu;	g	lambda$static$3
		p	0		config
	m	(Lefe;)Legj;	h	lambda$static$2
		p	0		config
	m	(Lefe;)Lehm;	i	lambda$static$1
		p	0		config
	m	(Lefe;)Legj;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	trunkProvider
	f	Legj;	c	dirtProvider
	f	Lehm;	d	trunkPlacer
	f	Legj;	e	foliageProvider
	f	Lefu;	f	foliagePlacer
	f	Ljava/util/Optional;	g	rootPlacer
	f	Lefj;	h	minimumSize
	f	Ljava/util/List;	i	decorators
	f	Z	j	ignoreVines
	f	Z	k	forceDirt
c	efe$a	net/minecraft/world/level/levelgen/feature/configurations/WorldGenFeatureTreeConfiguration$a
	m	(Legj;Lehm;Legj;Lefu;Lefj;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		minimumSize
	m	(Legj;Lehm;Legj;Lefu;Ljava/util/Optional;Lefj;)V	<init>	<init>
		p	1		trunkProvider
		p	2		trunkPlacer
		p	3		foliageProvider
		p	4		foliagePlacer
		p	5		rootPlacer
		p	6		minimumSize
	m	()Lefe$a;	a	ignoreVines
	m	(Legj;)Lefe$a;	a	dirt
		p	1		dirtProvider
	m	(Ljava/util/List;)Lefe$a;	a	decorators
		p	1		decorators
	m	()Lefe$a;	b	forceDirt
	m	()Lefe;	c	build
	f	Legj;	a	trunkProvider
	f	Legj;	b	foliageProvider
	f	Lehm;	c	trunkPlacer
	f	Lefu;	d	foliagePlacer
	f	Ljava/util/Optional;	e	rootPlacer
	f	Legj;	f	dirtProvider
	f	Lefj;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
c	eff	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	m	()I	a	spreadWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
c	efg	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	m	(IIF)V	<init>	<init>
		p	1		minDistanceBelowSurface
		p	2		floorSearchRange
		p	3		placementProbabilityPerValidPosition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lefg;)Ljava/lang/Float;	a	lambda$static$2
		p	0		config
	m	(Lefg;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		config
	m	(Lefg;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
c	efh	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	m	(Lawu;Legj;Ljm;Leil;Lbpw;FIFLbpw;F)V	<init>	<init>
		p	1		replaceable
		p	2		groundState
		p	3		vegetationFeature
		p	4		surface
		p	5		depth
		p	6		extraBottomBlockChance
		p	7		verticalRange
		p	8		vegetationChance
		p	9		horizontalRadius
		p	10		extraEdgeColumnChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
		p	0		instance
	m	(Lefh;)Ljava/lang/Float;	a	lambda$static$9
		p	0		config
	m	(Lefh;)Lbpw;	b	lambda$static$8
		p	0		config
	m	(Lefh;)Ljava/lang/Float;	c	lambda$static$7
		p	0		config
	m	(Lefh;)Ljava/lang/Integer;	d	lambda$static$6
		p	0		config
	m	(Lefh;)Ljava/lang/Float;	e	lambda$static$5
		p	0		config
	m	(Lefh;)Lbpw;	f	lambda$static$4
		p	0		config
	m	(Lefh;)Leil;	g	lambda$static$3
		p	0		config
	m	(Lefh;)Ljm;	h	lambda$static$2
		p	0		config
	m	(Lefh;)Legj;	i	lambda$static$1
		p	0		config
	m	(Lefh;)Lawu;	j	lambda$static$0
		p	0		config
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lawu;	b	replaceable
	f	Legj;	c	groundState
	f	Ljm;	d	vegetationFeature
	f	Leil;	e	surface
	f	Lbpw;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Lbpw;	j	xzRadius
	f	F	k	extraEdgeColumnChance
c	efj	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
		p	1		minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lefj;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
		p	0		minClippedHeight
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
		p	0		minClippedHeight
	m	()Lefk;	b	type
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
c	efk	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lefk;	a	register
		p	0		id
	f	Lefk;	a	TWO_LAYERS_FEATURE_SIZE
	f	Lefk;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/MapCodec;	c	codec
c	efl	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeThreeLayers
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		upperLimit
		p	3		lowerSize
		p	4		middleSize
		p	5		upperSize
		p	6		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lefl;)Ljava/lang/Integer;	a	lambda$static$4
	m	()Lefk;	b	type
	m	(Lefl;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Lefl;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Lefl;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Lefl;)Ljava/lang/Integer;	e	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
c	efm	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeTwoLayers
	m	(III)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
		p	1		limit
		p	2		lowerSize
		p	3		upperSize
		p	4		minClippedHeight
	m	(II)I	a	getSizeAtHeight
		p	1		height
		p	2		y
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Lefm;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Lefk;	b	type
	m	(Lefm;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lefm;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
c	efo	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerAcacia
	m	(Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	efp	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBlob
	m	(Lbpw;Lbpw;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
		p	0		builder
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefp;)Ljava/lang/Integer;	a	lambda$blobParts$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	height
c	efq	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerBush
	m	(Lbpw;Lbpw;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	efr	net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	m	(Lbpw;Lbpw;Lbpw;FFFF)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
		p	4		wideBottomLayerHoleChance
		p	5		cornerHoleChance
		p	6		hangingLeavesChance
		p	7		hangingLeavesExtensionChance
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefr;)Ljava/lang/Float;	a	lambda$static$4
		p	0		foliagePlacer
	m	(Lefr;)Ljava/lang/Float;	b	lambda$static$3
		p	0		foliagePlacer
	m	(Lefr;)Ljava/lang/Float;	c	lambda$static$2
		p	0		foliagePlacer
	m	(Lefr;)Ljava/lang/Float;	d	lambda$static$1
		p	0		foliagePlacer
	m	(Lefr;)Lbpw;	e	lambda$static$0
		p	0		foliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	height
	f	F	c	wideBottomLayerHoleChance
	f	F	g	cornerHoleChance
	f	F	h	hangingLeavesChance
	f	F	i	hangingLeavesExtensionChance
c	efs	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerDarkOak
	m	(Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Layw;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	eft	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerFancy
	m	(Lbpw;Lbpw;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
c	efu	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer
	m	(Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
	m	()Lefv;	a	type
	m	(Layw;)I	a	offset
		p	1		random
	m	(Layw;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lddc;Lefu$b;Layw;Lefe;FLjd;Ljd$a;)Z	a	tryPlaceExtension
		p	0		world
		p	1		placer
		p	2		random
		p	3		config
		p	4		chance
		p	5		origin
		p	6		pos
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;II)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lddc;Lefu$b;Layw;Lefe;Ljd;)Z	a	tryPlaceLeaf
		p	0		world
		p	1		placer
		p	2		random
		p	3		config
		p	4		pos
	m	(Lddc;Lefu$b;Layw;Lefe;Ljd;IIZ)V	a	placeLeavesRow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
	m	(Lddc;Lefu$b;Layw;Lefe;Ljd;IIZFF)V	a	placeLeavesRowWithHangingLeavesBelow
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		centerPos
		p	6		radius
		p	7		y
		p	8		giantTrunk
		p	9		hangingLeavesChance
		p	10		hangingLeavesExtensionChance
	m	(Lefu;)Lbpw;	a	lambda$foliagePlacerParts$1
		p	0		placer
	m	(Lepe;)Z	a	lambda$tryPlaceLeaf$2
		p	0		fluidState
	m	(Layw;IIIIZ)Z	b	shouldSkipLocationSigned
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
		p	0		instance
	m	(Lefu;)Lbpw;	b	lambda$foliagePlacerParts$0
		p	0		placer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbpw;	e	radius
	f	Lbpw;	f	offset
c	efu$a	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer$a
	m	(Ljd;IZ)V	<init>	<init>
		p	1		center
		p	2		foliageRadius
		p	3		giantTrunk
	m	()Ljd;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
	f	Ljd;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
c	efu$b	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacer$b
	m	(Ljd;)Z	a	isSet
		p	1		pos
	m	(Ljd;Ldtc;)V	a	set
		p	1		pos
		p	2		state
c	efv	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacers
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lefv;	a	register
		p	0		id
		p	1		codec
	f	Lefv;	a	BLOB_FOLIAGE_PLACER
	f	Lefv;	b	SPRUCE_FOLIAGE_PLACER
	f	Lefv;	c	PINE_FOLIAGE_PLACER
	f	Lefv;	d	ACACIA_FOLIAGE_PLACER
	f	Lefv;	e	BUSH_FOLIAGE_PLACER
	f	Lefv;	f	FANCY_FOLIAGE_PLACER
	f	Lefv;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Lefv;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Lefv;	i	DARK_OAK_FOLIAGE_PLACER
	f	Lefv;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Lefv;	k	CHERRY_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/MapCodec;	l	codec
c	efw	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerJungle
	m	(Lbpw;Lbpw;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefw;)Ljava/lang/Integer;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	height
c	efx	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerMegaPine
	m	(Lbpw;Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		crownHeight
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefx;)Lbpw;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	crownHeight
c	efy	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerPine
	m	(Lbpw;Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		height
	m	()Lefv;	a	type
	m	(Layw;I)I	a	foliageRadius
		p	1		random
		p	2		baseHeight
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefy;)Lbpw;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	height
c	efz	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	m	(Lbpw;Lbpw;Lbpw;I)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		foliageHeight
		p	4		leafPlacementAttempts
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lefz;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		placer
	m	(Lefz;)Lbpw;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	foliageHeight
	f	I	c	leafPlacementAttempts
c	ega	net/minecraft/world/level/levelgen/feature/foliageplacers/WorldGenFoilagePlacerSpruce
	m	(Lbpw;Lbpw;Lbpw;)V	<init>	<init>
		p	1		radius
		p	2		offset
		p	3		trunkHeight
	m	()Lefv;	a	type
	m	(Layw;IIIIZ)Z	a	shouldSkipLocation
		p	1		random
		p	2		dx
		p	3		y
		p	4		dz
		p	5		radius
		p	6		giantTrunk
	m	(Layw;ILefe;)I	a	foliageHeight
		p	1		random
		p	2		trunkHeight
		p	3		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lddc;Lefu$b;Layw;Lefe;ILefu$a;III)V	a	createFoliage
		p	1		world
		p	2		placer
		p	3		random
		p	4		config
		p	5		trunkHeight
		p	6		treeNode
		p	7		foliageHeight
		p	8		radius
		p	9		offset
	m	(Lega;)Lbpw;	a	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	trunkHeight
c	egd	net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	m	()Legj;	a	aboveRootProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Legd;)Ljava/lang/Float;	a	lambda$static$1
		p	0		aboveRootPlacement
	m	()F	b	aboveRootPlacementChance
	m	(Legd;)Legj;	b	lambda$static$0
		p	0		aboveRootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	aboveRootProvider
	f	F	c	aboveRootPlacementChance
c	ege	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	m	()Ljq;	a	canGrowThrough
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lege;)Ljava/lang/Float;	a	lambda$static$5
		p	0		rootPlacement
	m	()Ljq;	b	muddyRootsIn
	m	(Lege;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		rootPlacement
	m	()Legj;	c	muddyRootsProvider
	m	(Lege;)Ljava/lang/Integer;	c	lambda$static$3
		p	0		rootPlacement
	m	()I	d	maxRootWidth
	m	(Lege;)Legj;	d	lambda$static$2
		p	0		rootPlacement
	m	()I	e	maxRootLength
	m	(Lege;)Ljq;	e	lambda$static$1
		p	0		rootPlacement
	m	()F	f	randomSkewChance
	m	(Lege;)Ljq;	f	lambda$static$0
		p	0		rootPlacement
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljq;	b	canGrowThrough
	f	Ljq;	c	muddyRootsIn
	f	Legj;	d	muddyRootsProvider
	f	I	e	maxRootWidth
	f	I	f	maxRootLength
	f	F	g	randomSkewChance
c	egf	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	m	(Lbpw;Legj;Ljava/util/Optional;Lege;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
		p	4		mangroveRootPlacement
	m	()Legh;	a	type
	m	(Lddc;Layw;Ljd;Lji;Ljd;Ljava/util/List;I)Z	a	simulateRoots
		p	1		world
		p	2		random
		p	3		pos
		p	4		direction
		p	5		origin
		p	6		offshootPositions
		p	7		rootLength
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Lefe;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Ljd;Lefe;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Lddc;Ljd;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	a	lambda$placeRoot$3
		p	1		state
	m	(Legf;)Lege;	a	lambda$static$0
		p	0		rootPlacer
	m	(Ljd;Lji;Layw;Ljd;)Ljava/util/List;	a	potentialRootPositions
		p	1		pos
		p	2		direction
		p	3		random
		p	4		origin
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Ldtc;)Z	b	lambda$canPlaceRoot$2
		p	1		state
	f	I	a	ROOT_WIDTH_LIMIT
	f	I	b	ROOT_LENGTH_LIMIT
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lege;	h	mangroveRootPlacement
c	egg	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	m	(Lbpw;Legj;Ljava/util/Optional;)V	<init>	<init>
		p	1		trunkOffsetY
		p	2		rootProvider
		p	3		aboveRootPlacement
	m	()Legh;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	rootPlacerParts
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Lefe;)V	a	placeRoot
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Ljd;Lefe;)Z	a	placeRoots
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		trunkPos
		p	6		config
	m	(Lddc;Ljd;)Z	a	canPlaceRoot
		p	1		world
		p	2		pos
	m	(Lddc;Ljd;Ldtc;)Ldtc;	a	getPotentiallyWaterloggedState
		p	1		world
		p	2		pos
		p	3		state
	m	(Legg;)Ljava/util/Optional;	a	lambda$rootPlacerParts$2
		p	0		rootPlacer
	m	(Lepe;)Z	a	lambda$getPotentiallyWaterloggedState$3
		p	0		fluidState
	m	(Ljd;Layw;)Ljd;	a	getTrunkOrigin
		p	1		pos
		p	2		random
	m	(Legg;)Legj;	b	lambda$rootPlacerParts$1
		p	0		rootPlacer
	m	(Legg;)Lbpw;	c	lambda$rootPlacerParts$0
		p	0		rootPlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbpw;	e	trunkOffsetY
	f	Legj;	f	rootProvider
	f	Ljava/util/Optional;	g	aboveRootPlacement
c	egh	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Legh;	a	register
		p	0		id
		p	1		codec
	f	Legh;	a	MANGROVE_ROOT_PLACER
	f	Lcom/mojang/serialization/MapCodec;	b	codec
c	egj	net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProvider
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Ldfy;)Legs;	a	simple
		p	0		block
	m	(Ldtc;)Legs;	a	simple
		p	0		state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
c	egk	net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviders
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Legk;	a	register
		p	0		id
		p	1		codec
	f	Legk;	a	SIMPLE_STATE_PROVIDER
	f	Legk;	b	WEIGHTED_STATE_PROVIDER
	f	Legk;	c	NOISE_THRESHOLD_PROVIDER
	f	Legk;	d	NOISE_PROVIDER
	f	Legk;	e	DUAL_NOISE_PROVIDER
	f	Legk;	f	ROTATED_BLOCK_PROVIDER
	f	Legk;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/MapCodec;	h	codec
c	egl	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	m	(Layg;Leoh$a;FJLeoh$a;FLjava/util/List;)V	<init>	<init>
		p	1		variety
		p	2		slowNoiseParameters
		p	3		slowScale
		p	4		seed
		p	6		noiseParameters
		p	7		scale
		p	8		states
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Legl;)Ljava/lang/Float;	a	lambda$static$2
	m	(Ljd;)D	a	getSlowNoiseValue
		p	1		pos
	m	(Legl;)Leoh$a;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Legl;)Layg;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Layg;	i	variety
	f	Leoh$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Leoh;	l	slowNoise
c	egm	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	m	(JLeoh$a;F)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
		p	0		instance
	m	(Legm;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Ljd;D)D	a	getNoiseValue
		p	1		pos
		p	2		scale
	m	(Legm;)Leoh$a;	b	lambda$noiseCodec$1
	m	(Legm;)Ljava/lang/Long;	c	lambda$noiseCodec$0
	f	J	c	seed
	f	Leoh$a;	d	parameters
	f	F	e	scale
	f	Leoh;	f	noise
c	egn	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	m	(JLeoh$a;FLjava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		states
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Legn;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	(Ljava/util/List;D)Ldtc;	a	getRandomState
		p	1		states
		p	2		value
	m	(Ljava/util/List;Ljd;D)Ldtc;	a	getRandomState
		p	1		states
		p	2		pos
		p	3		scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
		p	0		instance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ljava/util/List;	h	states
c	ego	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	m	(JLeoh$a;FFFLdtc;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		seed
		p	3		noiseParameters
		p	4		scale
		p	5		threshold
		p	6		highChance
		p	7		defaultState
		p	8		lowStates
		p	9		highStates
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Lego;)Ljava/util/List;	a	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Lego;)Ljava/util/List;	b	lambda$static$3
	m	(Lego;)Ldtc;	c	lambda$static$2
	m	(Lego;)Ljava/lang/Float;	d	lambda$static$1
	m	(Lego;)Ljava/lang/Float;	e	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Ldtc;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
c	egp	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	m	(Legj;Lduc;Lbpw;)V	<init>	<init>
		p	1		source
		p	2		property
		p	3		values
	m	(Legj;Ljava/lang/String;Lbpw;)V	<init>	<init>
		p	1		source
		p	2		propertyName
		p	3		values
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldtc;Ljava/lang/String;)Lduc;	a	findProperty
		p	0		state
		p	1		propertyName
	m	(Lduf;)Lduc;	a	lambda$findProperty$6
		p	0		property
	m	(Legp;)Lbpw;	a	lambda$static$2
	m	(Ljava/lang/String;Lduf;)Z	a	lambda$findProperty$4
		p	1		property
	m	(Lduf;)Z	b	lambda$findProperty$5
		p	0		property
	m	(Legp;)Ljava/lang/String;	b	lambda$static$1
	m	(Legp;)Legj;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Legj;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Lduc;	e	property
	f	Lbpw;	f	values
c	egq	net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderRotatedBlock
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Legq;)Ldfy;	a	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldfy;	c	block
c	egr	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	m	()Legj;	a	fallback
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	(Ldds;Layw;Ljd;)Ldtc;	a	getState
		p	1		world
		p	2		random
		p	3		pos
	m	(Ldfy;)Legr;	a	simple
		p	0		block
	m	(Legj;)Legr;	a	simple
		p	0		stateProvider
	m	()Ljava/util/List;	b	rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Legj;	b	fallback
	f	Ljava/util/List;	c	rules
c	egr$a	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$a
	m	()Leaf;	a	ifTrue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Legj;	b	then
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leaf;	b	ifTrue
	f	Legj;	c	then
c	egs	net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderSimpl
	m	(Ldtc;)V	<init>	<init>
		p	1		state
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Legs;)Ldtc;	a	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldtc;	c	state
c	egt	net/minecraft/world/level/levelgen/feature/stateproviders/WorldGenFeatureStateProviderWeighted
	m	(Lbpb$a;)V	<init>	<init>
		p	1		states
	m	(Lbpb;)V	<init>	<init>
		p	1		states
	m	()Legk;	a	type
	m	(Layw;Ljd;)Ldtc;	a	getState
		p	1		random
		p	2		pos
	m	(Lbpb;)Lcom/mojang/serialization/DataResult;	a	create
		p	0		states
	m	(Legt;)Lbpb;	a	lambda$static$0
	m	()Ljava/lang/String;	b	lambda$create$1
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lbpb;	c	weightedList
c	egv	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeAlterGround
	m	(Legj;)V	<init>	<init>
		p	1		provider
	m	()Lehb;	a	type
	m	(ILjd;)Z	a	lambda$place$1
		p	1		pos
	m	(Legv;)Legj;	a	lambda$static$0
		p	0		decorator
	m	(Leha$a;)V	a	place
		p	1		generator
	m	(Leha$a;Ljd;)V	a	placeCircle
		p	1		generator
		p	2		origin
	m	(Leha$a;Ljd;)V	b	placeBlockAt
		p	1		generator
		p	2		origin
	m	(Leha$a;Ljd;)V	c	lambda$place$2
		p	2		pos
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Legj;	b	provider
c	egw	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	m	(FIILegj;ILjava/util/List;)V	<init>	<init>
		p	1		probability
		p	2		exclusionRadiusXZ
		p	3		exclusionRadiusY
		p	4		blockProvider
		p	5		requiredEmptyBlocks
		p	6		directions
	m	()Lehb;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Legw;)Ljava/util/List;	a	lambda$static$5
		p	0		treeDecorator
	m	(Leha$a;)V	a	place
		p	1		generator
	m	(Leha$a;Ljd;Lji;)Z	a	hasRequiredEmptyBlocks
		p	1		generator
		p	2		pos
		p	3		direction
	m	(Legw;)Ljava/lang/Integer;	b	lambda$static$4
		p	0		treeDecorator
	m	(Legw;)Legj;	c	lambda$static$3
		p	0		treeDecorator
	m	(Legw;)Ljava/lang/Integer;	d	lambda$static$2
		p	0		treeDecorator
	m	(Legw;)Ljava/lang/Integer;	e	lambda$static$1
		p	0		treeDecorator
	m	(Legw;)Ljava/lang/Float;	f	lambda$static$0
		p	0		treeDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	f	I	c	exclusionRadiusXZ
	f	I	d	exclusionRadiusY
	f	Legj;	e	blockProvider
	f	I	f	requiredEmptyBlocks
	f	Ljava/util/List;	g	directions
c	egx	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeBeehive
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Lehb;	a	type
	m	(I)[Lji;	a	lambda$static$2
	m	(ILjd;)Z	a	lambda$place$3
		p	1		pos
	m	(Layw;Ldqe;)V	a	lambda$place$6
		p	1		blockEntity
	m	(Legx;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Leha$a;)V	a	place
		p	1		generator
	m	(Leha$a;Ljd;)Z	a	lambda$place$5
		p	1		pos
	m	(Ljd;)Ljava/util/stream/Stream;	a	lambda$place$4
		p	0		pos
	m	(Lji;)Z	a	lambda$static$1
		p	0		direction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lji;	b	WORLDGEN_FACING
	f	[Lji;	c	SPAWN_DIRECTIONS
	f	F	d	probability
c	egy	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeCocoa
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Lehb;	a	type
	m	(ILjd;)Z	a	lambda$place$1
		p	1		pos
	m	(Layw;Leha$a;Ljd;)V	a	lambda$place$2
		p	2		pos
	m	(Legy;)Ljava/lang/Float;	a	lambda$static$0
		p	0		decorator
	m	(Leha$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
c	egz	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineLeaves
	m	(F)V	<init>	<init>
		p	1		probability
	m	()Lehb;	a	type
	m	(Layw;Leha$a;Ljd;)V	a	lambda$place$1
		p	3		pos
	m	(Legz;)Ljava/lang/Float;	a	lambda$static$0
		p	0		treeDecorator
	m	(Leha$a;)V	a	place
		p	1		generator
	m	(Ljd;Ldtt;Leha$a;)V	a	addHangingVine
		p	0		pos
		p	1		faceProperty
		p	2		generator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
c	eha	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTree
	m	()Lehb;	a	type
	m	(Leha$a;)V	a	place
		p	1		generator
	f	Lcom/mojang/serialization/Codec;	h	CODEC
c	eha$a	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTree$a
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		world
		p	2		replacer
		p	3		random
		p	4		logPositions
		p	5		leavesPositions
		p	6		rootPositions
	m	()Lddc;	a	level
	m	(Ljd;)Z	a	isAir
		p	1		pos
	m	(Ljd;Ldtc;)V	a	setBlock
		p	1		pos
		p	2		state
	m	(Ljd;Ldtt;)V	a	placeVine
		p	1		pos
		p	2		faceProperty
	m	()Layw;	b	random
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	logs
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	leaves
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	roots
	f	Lddc;	a	level
	f	Ljava/util/function/BiConsumer;	b	decorationSetter
	f	Layw;	c	random
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	logs
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	leaves
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	roots
c	ehb	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTrees
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lehb;	a	register
		p	0		id
		p	1		codec
	f	Lehb;	a	TRUNK_VINE
	f	Lehb;	b	LEAVE_VINE
	f	Lehb;	c	COCOA
	f	Lehb;	d	BEEHIVE
	f	Lehb;	e	ALTER_GROUND
	f	Lehb;	f	ATTACHED_TO_LEAVES
	f	Lcom/mojang/serialization/MapCodec;	g	codec
c	ehc	net/minecraft/world/level/levelgen/feature/treedecorators/WorldGenFeatureTreeVineTrunk
	m	()Lehb;	a	type
	m	(Layw;Leha$a;Ljd;)V	a	lambda$place$1
		p	2		pos
	m	(Leha$a;)V	a	place
		p	1		generator
	m	()Lehc;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lehc;	b	INSTANCE
c	ehe	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	m	(IIIILbpw;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		minHeightForLeaves
		p	5		bendLength
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lehe;)Lbpw;	a	lambda$static$1
		p	0		placer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Lehe;)Ljava/lang/Integer;	b	lambda$static$0
		p	0		placer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Lbpw;	h	bendLength
c	ehf	net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	m	(IIILbpw;Lbpw;Lbqc;Lbpw;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		branchCount
		p	5		branchHorizontalLength
		p	6		branchStartOffsetFromTop
		p	7		branchEndOffsetFromTop
	m	()Lehn;	a	type
	m	(Lbqc;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		branchStartOffsetFromTop
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;Ljava/util/function/Function;Lji;IZLjd$a;)Lefu$a;	a	generateBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
		p	7		withAxisFunction
		p	8		direction
		p	9		branchStartOffset
		p	10		branchBelowHeight
		p	11		mutablePos
	m	(Lehf;)Lbpw;	a	lambda$static$5
		p	0		trunkPlacer
	m	(Lji;Ldtc;)Ldtc;	a	lambda$placeTrunk$7
		p	1		state
	m	()Ljava/lang/String;	b	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$6
		p	0		instance
	m	(Lehf;)Lbqc;	b	lambda$static$4
		p	0		trunkPlacer
	m	(Lehf;)Lbpw;	c	lambda$static$3
		p	0		trunkPlacer
	m	(Lehf;)Lbpw;	d	lambda$static$2
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	BRANCH_START_CODEC
	f	Lbpw;	h	branchCount
	f	Lbpw;	i	branchHorizontalLength
	f	Lbqc;	j	branchStartOffsetFromTop
	f	Lbqc;	k	secondBranchStartOffsetFromTop
	f	Lbpw;	l	branchEndOffsetFromTop
c	ehg	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerDarkOak
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ehh	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerFancy
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(II)Z	a	trimBranches
		p	1		treeHeight
		p	2		height
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Ljava/util/List;Lefe;)V	a	makeBranches
		p	1		world
		p	2		replacer
		p	3		random
		p	4		treeHeight
		p	5		startPos
		p	6		branchPositions
		p	7		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Ljd;ZLefe;)Z	a	makeLimb
		p	1		world
		p	2		replacer
		p	3		random
		p	4		startPos
		p	5		branchPos
		p	6		make
		p	7		config
	m	(Ljd;)I	a	getSteps
		p	1		offset
	m	(Ljd;Ljd;)Lji$a;	a	getLogAxis
		p	1		branchStart
		p	2		branchEnd
	m	(Ljd;Ljd;Ldtc;)Ldtc;	a	lambda$makeLimb$1
		p	3		state
	m	(II)F	b	treeShape
		p	0		treeHeight
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
c	ehh$a	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerFancy$a
	m	(Ljd;I)V	<init>	<init>
		p	1		pos
		p	2		width
	m	()I	a	getBranchBase
	f	Lefu$a;	a	attachment
	f	I	b	branchBase
c	ehi	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerForking
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ehj	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerGiant
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd$a;Lefe;Ljd;III)V	a	placeLogIfFreeWithOffset
		p	1		world
		p	2		replacer
		p	3		random
		p	4		tmpPos
		p	5		config
		p	6		startPos
		p	7		dx
		p	8		dy
		p	9		dz
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ehk	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerMegaJungle
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	ehl	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerStraight
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ehm	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	m	(III)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
	m	()Lehn;	a	type
	m	(Layw;)I	a	getTreeHeight
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
		p	0		instance
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd$a;Lefe;)V	a	placeLogIfFree
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Lefe;)V	a	setDirtAt
		p	0		world
		p	1		replacer
		p	2		random
		p	3		pos
		p	4		config
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Lefe;Ljava/util/function/Function;)Z	a	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lddc;Ljd;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	a	lambda$isFree$4
		p	0		state
	m	(Lehm;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
		p	0		placer
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;Ljd;Lefe;)Z	b	placeLog
		p	1		world
		p	2		replacer
		p	3		random
		p	4		pos
		p	5		config
	m	(Lddc;Ljd;)Z	b	isFree
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	b	lambda$isDirt$3
		p	0		state
	m	(Lehm;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
		p	0		placer
	m	(Lddc;Ljd;)Z	c	isDirt
		p	0		world
		p	1		pos
	m	(Lehm;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
		p	0		placer
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
c	ehn	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacers
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lehn;	a	register
		p	0		id
		p	1		codec
	f	Lehn;	a	STRAIGHT_TRUNK_PLACER
	f	Lehn;	b	FORKING_TRUNK_PLACER
	f	Lehn;	c	GIANT_TRUNK_PLACER
	f	Lehn;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Lehn;	e	DARK_OAK_TRUNK_PLACER
	f	Lehn;	f	FANCY_TRUNK_PLACER
	f	Lehn;	g	BENDING_TRUNK_PLACER
	f	Lehn;	h	UPWARDS_BRANCHING_TRUNK_PLACER
	f	Lehn;	i	CHERRY_TRUNK_PLACER
	f	Lcom/mojang/serialization/MapCodec;	j	codec
c	eho	net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	m	(IIILbpw;FLbpw;Ljq;)V	<init>	<init>
		p	1		baseHeight
		p	2		firstRandomHeight
		p	3		secondRandomHeight
		p	4		extraBranchSteps
		p	5		placeBranchPerLogProbability
		p	6		extraBranchLength
		p	7		canGrowThrough
	m	()Lehn;	a	type
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILefe;Ljava/util/List;Ljd$a;ILji;II)V	a	placeBranch
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		config
		p	6		nodes
		p	7		pos
		p	8		yOffset
		p	9		direction
		p	10		length
		p	11		steps
	m	(Lddc;Ljava/util/function/BiConsumer;Layw;ILjd;Lefe;)Ljava/util/List;	a	placeTrunk
		p	1		world
		p	2		replacer
		p	3		random
		p	4		height
		p	5		startPos
		p	6		config
	m	(Lddc;Ljd;)Z	a	validTreePos
		p	1		world
		p	2		pos
	m	(Ldtc;)Z	a	lambda$validTreePos$5
		p	1		state
	m	(Leho;)Ljq;	a	lambda$static$3
		p	0		trunkPlacer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Leho;)Lbpw;	b	lambda$static$2
		p	0		trunkPlacer
	m	(Leho;)Ljava/lang/Float;	c	lambda$static$1
		p	0		trunkPlacer
	m	(Leho;)Lbpw;	d	lambda$static$0
		p	0		trunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	b	extraBranchSteps
	f	F	h	placeBranchPerLogProbability
	f	Lbpw;	i	extraBranchLength
	f	Ljq;	j	canGrowThrough
c	ehq	net/minecraft/world/level/levelgen/flat/WorldGenFlatLayerInfo
	m	(ILdfy;)V	<init>	<init>
		p	1		thickness
		p	2		block
	m	()I	a	getHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lehq;)Ldfy;	a	lambda$static$0
		p	0		layer
	m	()Ldtc;	b	getBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldfy;	b	block
	f	I	c	height
c	ehr	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	m	()Ljm;	a	displayItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lehr;)Leht;	a	lambda$static$1
		p	0		preset
	m	()Leht;	b	settings
	m	(Lehr;)Ljm;	b	lambda$static$0
		p	0		preset
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljm;	c	displayItem
	f	Leht;	d	settings
c	ehs	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	m	(Lqq;)V	a	bootstrap
		p	0		presetRegisterable
	f	Lakq;	a	CLASSIC_FLAT
	f	Lakq;	b	TUNNELERS_DREAM
	f	Lakq;	c	WATER_WORLD
	f	Lakq;	d	OVERWORLD
	f	Lakq;	e	SNOWY_KINGDOM
	f	Lakq;	f	BOTTOMLESS_PIT
	f	Lakq;	g	DESERT
	f	Lakq;	h	REDSTONE_READY
	f	Lakq;	i	THE_VOID
c	ehs$a	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$a
	m	(Lqq;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	run
	m	(Lakq;Ldcv;Lakq;Ljava/util/Set;ZZ[Lehq;)V	a	register
		p	1		registryKey
		p	2		icon
		p	3		biome
		p	4		structureSetKeys
		p	5		hasFeatures
		p	6		hasLakes
		p	7		layers
	f	Lqq;	a	context
c	eht	net/minecraft/world/level/levelgen/flat/GeneratorSettingsFlat
	m	(Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;Ljm$c;Ljm;Ljm;)V	<init>	<init>
		p	1		structureOverrides
		p	2		layers
		p	3		lakes
		p	4		features
		p	5		biome
		p	6		fallback
		p	7		undergroundLavaLakeFeature
		p	8		surfaceLavaLakeFeature
	m	(Ljava/util/Optional;Ljm;Ljava/util/List;)V	<init>	<init>
		p	1		structureOverrides
		p	2		biome
		p	3		features
	m	()V	a	setDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Ldtc;)Z	a	lambda$updateLayers$6
		p	0		state
	m	(Leht;)Lcom/mojang/serialization/DataResult;	a	validateHeight
		p	0		config
	m	(Ljava/util/List;Ljava/util/Optional;Ljm;)Leht;	a	withBiomeAndLayers
		p	1		layers
		p	2		structureOverrides
		p	3		biome
	m	(Ljava/util/Optional;Ljm;)Ljm;	a	getBiome
		p	0		biome
		p	1		fallback
	m	(Ljm;)Lddx;	a	adjustGenerationSettings
		p	1		biomeEntry
	m	(Ljn;)Ljm;	a	getDefaultBiome
		p	0		biomeLookup
	m	(Ljn;Ljn;Ljn;)Leht;	a	getDefault
		p	0		biomeLookup
		p	1		structureSetLookup
		p	2		featureLookup
	m	()V	b	setAddLakes
	m	(Leht;)Ljava/util/Optional;	b	lambda$static$3
		p	0		config
	m	(Ljn;)Ljava/util/List;	b	createLakesList
		p	0		featureLookup
	m	()Ljava/util/Optional;	c	structureOverrides
	m	(Leht;)Ljava/lang/Boolean;	c	lambda$static$2
		p	0		config
	m	()Ljm;	d	getBiome
	m	(Leht;)Ljava/lang/Boolean;	d	lambda$static$1
		p	0		config
	m	()Ljava/util/List;	e	getLayersInfo
	m	(Leht;)Ljava/util/Optional;	e	lambda$static$0
		p	0		config
	m	()Ljava/util/List;	f	getLayers
	m	()V	g	updateLayers
	m	()Ljava/lang/String;	h	lambda$validateHeight$5
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	structureOverrides
	f	Ljava/util/List;	d	layersInfo
	f	Ljm;	e	biome
	f	Ljava/util/List;	f	layers
	f	Z	g	voidGen
	f	Z	h	decoration
	f	Z	i	addLakes
	f	Ljava/util/List;	j	lakes
c	ehv	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	m	(Ldzs;Ldzs;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldzs;Ldzs;I)Lehv;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Lehv;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Lehv;)Ldzs;	b	lambda$static$1
		p	0		provider
	m	(Lehv;)Ldzs;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldzs;	d	minInclusive
	f	Ldzs;	e	maxInclusive
	f	I	f	inner
c	ehw	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	m	(Ldzs;)V	<init>	<init>
		p	1		offset
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Ldzs;)Lehw;	a	of
		p	0		offset
	m	()Ldzs;	b	getValue
	f	Lehw;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldzs;	d	value
c	ehx	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/datafixers/util/Either;)Lehx;	a	lambda$static$1
		p	0		either
	m	(Lehx;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
		p	0		provider
	m	(Lehx;)Lehx;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	ehy	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lehy;	a	register
		p	0		id
		p	1		codec
	f	Lehy;	a	CONSTANT
	f	Lehy;	b	UNIFORM
	f	Lehy;	c	BIASED_TO_BOTTOM
	f	Lehy;	d	VERY_BIASED_TO_BOTTOM
	f	Lehy;	e	TRAPEZOID
	f	Lehy;	f	WEIGHTED_LIST
c	ehz	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	m	(Ldzs;Ldzs;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		plateau
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldzs;Ldzs;)Lehz;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Ldzs;Ldzs;I)Lehz;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		plateau
	m	(Lehz;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lehz;)Ldzs;	b	lambda$static$1
		p	0		provider
	m	(Lehz;)Ldzs;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldzs;	d	minInclusive
	f	Ldzs;	e	maxInclusive
	f	I	f	plateau
c	eia	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	m	(Ldzs;Ldzs;)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldzs;Ldzs;)Leia;	a	of
		p	0		minOffset
		p	1		maxOffset
	m	(Leia;)Ldzs;	a	lambda$static$1
		p	0		provider
	m	(Leia;)Ldzs;	b	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldzs;	d	minInclusive
	f	Ldzs;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
c	eib	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	m	(Ldzs;Ldzs;I)V	<init>	<init>
		p	1		minOffset
		p	2		maxOffset
		p	3		inner
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Ldzs;Ldzs;I)Leib;	a	of
		p	0		minOffset
		p	1		maxOffset
		p	2		inner
	m	(Leib;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		provider
	m	(Leib;)Ldzs;	b	lambda$static$1
		p	0		provider
	m	(Leib;)Ldzs;	c	lambda$static$0
		p	0		provider
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldzs;	d	minInclusive
	f	Ldzs;	e	maxInclusive
	f	I	f	inner
c	eic	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	m	(Lbpb;)V	<init>	<init>
		p	1		weightedList
	m	()Lehy;	a	getType
	m	(Layw;Ldzv;)I	a	sample
		p	1		random
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leic;)Lbpb;	a	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpb;	b	distribution
c	eie	net/minecraft/world/level/levelgen/material/MaterialRuleList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		samplers
	m	()Ljava/util/List;	a	materialRuleList
	m	(Ldyr$b;)Ldtc;	calculate	calculate
		p	1		pos
	f	Ljava/util/List;	a	materialRuleList
c	eif	eif
	m	(Ldzc;III)Ldtc;	a	apply
		p	1		sampler
		p	2		x
		p	3		y
		p	4		z
c	eii	net/minecraft/world/level/levelgen/placement/BiomeFilter
	m	()Leii;	a	biome
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Leii;	d	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leii;	c	INSTANCE
c	eij	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	m	(Leaf;)V	<init>	<init>
		p	1		predicate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leaf;)Leij;	a	forPredicate
		p	0		predicate
	m	(Leij;)Leaf;	a	lambda$static$0
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leaf;	c	predicate
c	eik	net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement
	m	(Ldyu$a;)V	<init>	<init>
		p	1		step
	m	(Ldyu$a;)Leik;	a	forStep
		p	0		step
	m	(Leik;)Ldyu$a;	a	lambda$static$0
		p	0		placementModifier
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldyu$a;	c	step
c	eil	net/minecraft/world/level/levelgen/placement/CaveSurface
	m	(Ljava/lang/String;ILji;ILjava/lang/String;)V	<init>	<init>
		p	3		direction
		p	4		offset
		p	5		name
	m	()Lji;	a	getDirection
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leil;	d	$values
	f	Leil;	a	CEILING
	f	Leil;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lji;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Leil;	g	$VALUES
c	eim	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	m	(Lbpw;)V	<init>	<init>
		p	1		count
	m	(I)Leim;	a	of
		p	0		count
	m	(Lbpw;)Leim;	a	of
		p	0		count
	m	(Ldtc;)Z	a	isEmpty
		p	0		state
	m	(Leim;)Lbpw;	a	lambda$static$0
	m	(Leiw;IIII)I	a	findOnGroundYPosition
		p	0		context
		p	1		x
		p	2		y
		p	3		z
		p	4		targetY
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	c	count
c	ein	net/minecraft/world/level/levelgen/placement/CountPlacement
	m	(Lbpw;)V	<init>	<init>
		p	1		count
	m	(I)Lein;	a	of
		p	0		count
	m	(Layw;Ljd;)I	a	count
		p	1		random
		p	2		pos
	m	(Lbpw;)Lein;	a	of
		p	0		count
	m	(Lein;)Lbpw;	a	lambda$static$0
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	c	count
c	eio	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	m	(Lji;Leaf;Leaf;I)V	<init>	<init>
		p	1		direction
		p	2		targetPredicate
		p	3		allowedSearchPredicate
		p	4		maxSteps
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Leio;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Lji;Leaf;I)Leio;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		maxSteps
	m	(Lji;Leaf;Leaf;I)Leio;	a	scanningFor
		p	0		direction
		p	1		targetPredicate
		p	2		allowedSearchPredicate
		p	3		maxSteps
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	(Leio;)Leaf;	b	lambda$static$2
	m	(Leio;)Leaf;	c	lambda$static$1
	m	(Leio;)Lji;	d	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lji;	c	directionOfSearch
	f	Leaf;	d	targetCondition
	f	Leaf;	e	allowedSearchCondition
	f	I	f	maxSteps
c	eip	net/minecraft/world/level/levelgen/placement/FixedPlacement
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		positions
	m	(IILjd;)Z	a	isSameChunk
		p	0		chunkSectionX
		p	1		chunkSectionZ
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Leip;)Ljava/util/List;	a	lambda$static$0
		p	0		placementModifier
	m	([Ljd;)Leip;	a	of
		p	0		positions
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	(IILjd;)Z	b	lambda$getPositions$2
		p	2		posx
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	c	positions
c	eiq	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	m	(Lehx;)V	<init>	<init>
		p	1		height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldzs;Ldzs;)Leiq;	a	uniform
		p	0		minOffset
		p	1		maxOffset
	m	(Lehx;)Leiq;	a	of
		p	0		height
	m	(Leiq;)Lehx;	a	lambda$static$0
		p	0		placementModifier
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	(Ldzs;Ldzs;)Leiq;	b	triangle
		p	0		minOffset
		p	1		maxOffset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lehx;	c	height
c	eir	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	m	(Ldyy$a;)V	<init>	<init>
		p	1		heightmap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldyy$a;)Leir;	a	onHeightmap
		p	0		heightmap
	m	(Leir;)Ldyy$a;	a	lambda$static$0
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldyy$a;	c	heightmap
c	eis	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	m	()Leis;	a	spread
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	()Leis;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leis;	c	INSTANCE
c	eit	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	m	(IDD)V	<init>	<init>
		p	1		noiseToCountRatio
		p	2		noiseFactor
		p	4		noiseOffset
	m	(IDD)Leit;	a	of
		p	0		noiseToCountRatio
		p	1		noiseFactor
		p	3		noiseOffset
	m	(Layw;Ljd;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leit;)Ljava/lang/Double;	a	lambda$static$2
	m	()Leiz;	b	type
	m	(Leit;)Ljava/lang/Double;	b	lambda$static$1
	m	(Leit;)Ljava/lang/Integer;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
c	eiu	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	m	(DII)V	<init>	<init>
		p	1		noiseLevel
		p	3		belowNoise
		p	4		aboveNoise
	m	(DII)Leiu;	a	of
		p	0		noiseLevel
		p	2		belowNoise
		p	3		aboveNoise
	m	(Layw;Ljd;)I	a	count
		p	1		random
		p	2		pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
		p	0		instance
	m	(Leiu;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Leiz;	b	type
	m	(Leiu;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leiu;)Ljava/lang/Double;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
c	eiv	net/minecraft/world/level/levelgen/placement/PlacedFeature
	m	(Ljm;Ljava/util/List;)V	<init>	<init>
		p	2		placementModifiers
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldds;Lduz;Layw;Ljd;)Z	a	place
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Lebq;Leiw;Layw;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljd;)V	a	lambda$placeWithContext$4
		p	4		placedPos
	m	(Leiv;)Ljava/util/List;	a	lambda$static$1
	m	(Leiw;Layw;Ljd;)Z	a	placeWithContext
		p	1		context
		p	2		random
		p	3		pos
	m	(Leiy;Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
		p	3		posx
	m	()Ljm;	b	feature
	m	(Ldds;Lduz;Layw;Ljd;)Z	b	placeWithBiomeCheck
		p	1		world
		p	2		generator
		p	3		random
		p	4		pos
	m	(Leiv;)Ljm;	b	lambda$static$0
	m	()Ljava/util/List;	c	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	f	Ljm;	e	feature
	f	Ljava/util/List;	f	placement
c	eiw	net/minecraft/world/level/levelgen/placement/PlacementContext
	m	(Ldds;Lduz;Ljava/util/Optional;)V	<init>	<init>
		p	1		world
		p	2		generator
		p	3		placedFeature
	m	(Ldcd;Ldyu$a;)Ldux;	a	getCarvingMask
		p	1		chunkPos
		p	2		carver
	m	(Ldyy$a;II)I	a	getHeight
		p	1		heightmap
		p	2		x
		p	3		z
	m	(Ljd;)Ldtc;	a	getBlockState
		p	1		pos
	m	()I	c	getMinBuildHeight
	m	()Ldds;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Lduz;	f	generator
	f	Ldds;	a	level
	f	Lduz;	b	generator
	f	Ljava/util/Optional;	c	topFeature
c	eix	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	eiy	net/minecraft/world/level/levelgen/placement/PlacementModifier
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	eiz	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leiz;	a	register
		p	0		id
		p	1		codec
	f	Leiz;	a	BLOCK_PREDICATE_FILTER
	f	Leiz;	b	RARITY_FILTER
	f	Leiz;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Leiz;	d	SURFACE_WATER_DEPTH_FILTER
	f	Leiz;	e	BIOME_FILTER
	f	Leiz;	f	COUNT
	f	Leiz;	g	NOISE_BASED_COUNT
	f	Leiz;	h	NOISE_THRESHOLD_COUNT
	f	Leiz;	i	COUNT_ON_EVERY_LAYER
	f	Leiz;	j	ENVIRONMENT_SCAN
	f	Leiz;	k	HEIGHTMAP
	f	Leiz;	l	HEIGHT_RANGE
	f	Leiz;	m	IN_SQUARE
	f	Leiz;	n	RANDOM_OFFSET
	f	Leiz;	o	CARVING_MASK_PLACEMENT
	f	Leiz;	p	FIXED_PLACEMENT
c	eja	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	m	(Lbpw;Lbpw;)V	<init>	<init>
		p	1		xzSpread
		p	2		ySpread
	m	(Lbpw;)Leja;	a	vertical
		p	0		spreadY
	m	(Lbpw;Lbpw;)Leja;	a	of
		p	0		spreadXz
		p	1		spreadY
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leja;)Lbpw;	a	lambda$static$1
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
	m	()Leiz;	b	type
	m	(Lbpw;)Leja;	b	horizontal
		p	0		spreadXz
	m	(Leja;)Lbpw;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpw;	c	xzSpread
	f	Lbpw;	d	ySpread
c	ejb	net/minecraft/world/level/levelgen/placement/RarityFilter
	m	(I)V	<init>	<init>
		p	1		chance
	m	(I)Lejb;	a	onAverageOnceEvery
		p	0		chance
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Lejb;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	chance
c	ejc	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	(Layw;Ljd;)I	a	count
		p	1		random
		p	2		pos
	m	(Ljd;I)Ljd;	a	lambda$getPositions$0
	m	(Leiw;Layw;Ljd;)Ljava/util/stream/Stream;	a_	getPositions
		p	1		context
		p	2		random
		p	3		pos
c	ejd	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	m	(Ldyy$a;II)V	<init>	<init>
		p	1		heightmap
		p	2		min
		p	3		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldyy$a;II)Lejd;	a	of
		p	0		heightmap
		p	1		min
		p	2		max
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Lejd;)Ljava/lang/Integer;	a	lambda$static$2
	m	()Leiz;	b	type
	m	(Lejd;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lejd;)Ldyy$a;	c	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldyy$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
c	eje	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	m	(I)V	<init>	<init>
		p	1		maxWaterDepth
	m	(I)Leje;	a	forMaxDepth
		p	0		maxWaterDepth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Leiw;Layw;Ljd;)Z	a	shouldPlace
		p	1		context
		p	2		random
		p	3		pos
	m	(Leje;)Ljava/lang/Integer;	a	lambda$static$0
	m	()Leiz;	b	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	maxWaterDepth
c	ejg	net/minecraft/world/level/levelgen/presets/WorldPreset
	m	(Ljava/util/Map;)V	<init>	<init>
		p	1		dimensions
	m	()Ldzt;	a	createWorldDimensions
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lakq;)V	a	lambda$dimensionsInOrder$2
		p	2		dimensionKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lejg;)Lcom/mojang/serialization/DataResult;	a	requireOverworld
		p	0		preset
	m	()Ljava/util/Optional;	b	overworld
	m	(Lejg;)Ljava/util/Map;	b	lambda$static$0
		p	0		preset
	m	()Lcom/google/common/collect/ImmutableMap;	c	dimensionsInOrder
	m	()Ljava/lang/String;	d	lambda$requireOverworld$3
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	dimensions
c	ejh	net/minecraft/world/level/levelgen/presets/WorldPresets
	m	(Ldwz;)Ljava/util/Optional;	a	lambda$fromSettings$0
		p	0		overworld
	m	(Ldzt;)Ljava/util/Optional;	a	fromSettings
		p	0		registry
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	m	(Lka;)Ldzt;	a	createNormalWorldDimensions
		p	0		dynamicRegistryManager
	m	(Lqq;)V	a	bootstrap
		p	0		presetRegisterable
	m	(Lka;)Ldwz;	b	getNormalOverworld
		p	0		dynamicRegistryManager
	f	Lakq;	a	NORMAL
	f	Lakq;	b	FLAT
	f	Lakq;	c	LARGE_BIOMES
	f	Lakq;	d	AMPLIFIED
	f	Lakq;	e	SINGLE_BIOME_SURFACE
	f	Lakq;	f	DEBUG
c	ejh$a	net/minecraft/world/level/levelgen/presets/WorldPresets$a
	m	(Lqq;)V	<init>	<init>
		p	1		presetRegisterable
	m	()V	a	bootstrap
	m	(Lakq;Ldwz;)V	a	registerCustomOverworldPreset
		p	1		key
		p	2		dimensionOptions
	m	(Ldea;)V	a	registerOverworlds
		p	1		biomeSource
	m	(Ldea;Ljm;)Ldwz;	a	makeNoiseBasedOverworld
		p	1		biomeSource
		p	2		chunkGeneratorSettings
	m	(Lduz;)Ldwz;	a	makeOverworld
		p	1		chunkGenerator
	m	(Ldwz;)Lejg;	a	createPresetWithCustomOverworld
		p	1		dimensionOptions
	f	Lqq;	a	context
	f	Ljn;	b	noiseSettings
	f	Ljn;	c	biomes
	f	Ljn;	d	placedFeatures
	f	Ljn;	e	structureSets
	f	Ljn;	f	multiNoiseBiomeSourceParameterLists
	f	Ljm;	g	overworldDimensionType
	f	Ldwz;	h	netherStem
	f	Ldwz;	i	endStem
c	ejj	net/minecraft/world/level/levelgen/structure/StructureBoundingBox
	m	(IIIIII)V	<init>	<init>
		p	1		minX
		p	2		minY
		p	3		minZ
		p	4		maxX
		p	5		maxY
		p	6		maxZ
	m	(Ljd;)V	<init>	<init>
		p	1		pos
	m	()Lejj;	a	infinite
	m	(I)Lejj;	a	inflatedBy
		p	1		offset
	m	(III)Lejj;	a	move
		p	1		dx
		p	2		dy
		p	3		dz
	m	(IIII)Z	a	intersects
		p	1		minX
		p	2		minZ
		p	3		maxX
		p	4		maxZ
	m	(IIIIIIIIILji;)Lejj;	a	orientBox
		p	0		x
		p	1		y
		p	2		z
		p	3		offsetX
		p	4		offsetY
		p	5		offsetZ
		p	6		sizeX
		p	7		sizeY
		p	8		sizeZ
		p	9		facing
	m	(Lejj;)Z	a	intersects
		p	1		other
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
		p	0		positions
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
		p	1		consumer
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		values
	m	(Ljd;)Lejj;	a	encapsulate
		p	1		pos
	m	(Lkh;)Lejj;	a	move
		p	1		vec
	m	(Lkh;Lkh;)Lejj;	a	fromCorners
		p	0		first
		p	1		second
	m	([I)Lejj;	a	lambda$static$0
		p	0		array
	m	()Ljava/util/stream/Stream;	b	intersectingChunks
	m	(III)Lejj;	b	moved
		p	1		x
		p	2		y
		p	3		z
	m	(Lejj;)Lejj;	b	encapsulate
		p	1		box
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
		p	0		boxes
	m	(Lkh;)Z	b	isInside
		p	1		pos
	m	()Lkh;	c	getLength
	m	(III)Lejj;	c	inflatedBy
		p	1		x
		p	2		y
		p	3		z
	m	(Lejj;)Ljava/util/stream/IntStream;	c	lambda$static$2
		p	0		box
	m	()I	d	getXSpan
	m	(III)Z	d	isInside
		p	1		x
		p	2		y
		p	3		z
	m	()I	e	getYSpan
	m	()I	f	getZSpan
	m	()Ljd;	g	getCenter
	m	()I	h	minX
	m	()I	i	minY
	m	()I	j	minZ
	m	()I	k	maxX
	m	()I	l	maxY
	m	()I	m	maxZ
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
c	ejj$1	net/minecraft/world/level/levelgen/structure/StructureBoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ejk	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	f	Lakq;	a	VILLAGES
	f	Lakq;	b	DESERT_PYRAMIDS
	f	Lakq;	c	IGLOOS
	f	Lakq;	d	JUNGLE_TEMPLES
	f	Lakq;	e	SWAMP_HUTS
	f	Lakq;	f	PILLAGER_OUTPOSTS
	f	Lakq;	g	OCEAN_MONUMENTS
	f	Lakq;	h	WOODLAND_MANSIONS
	f	Lakq;	i	BURIED_TREASURES
	f	Lakq;	j	MINESHAFTS
	f	Lakq;	k	RUINED_PORTALS
	f	Lakq;	l	SHIPWRECKS
	f	Lakq;	m	OCEAN_RUINS
	f	Lakq;	n	NETHER_COMPLEXES
	f	Lakq;	o	NETHER_FOSSILS
	f	Lakq;	p	END_CITIES
	f	Lakq;	q	ANCIENT_CITIES
	f	Lakq;	r	STRONGHOLDS
	f	Lakq;	s	TRAIL_RUINS
	f	Lakq;	t	TRIAL_CHAMBERS
c	ejl	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	m	(Ljava/lang/String;)Lakq;	a	createKey
		p	0		id
	f	Lakq;	A	RUINED_PORTAL_JUNGLE
	f	Lakq;	B	RUINED_PORTAL_SWAMP
	f	Lakq;	C	RUINED_PORTAL_MOUNTAIN
	f	Lakq;	D	RUINED_PORTAL_OCEAN
	f	Lakq;	E	RUINED_PORTAL_NETHER
	f	Lakq;	F	ANCIENT_CITY
	f	Lakq;	G	TRAIL_RUINS
	f	Lakq;	H	TRIAL_CHAMBERS
	f	Lakq;	a	PILLAGER_OUTPOST
	f	Lakq;	b	MINESHAFT
	f	Lakq;	c	MINESHAFT_MESA
	f	Lakq;	d	WOODLAND_MANSION
	f	Lakq;	e	JUNGLE_TEMPLE
	f	Lakq;	f	DESERT_PYRAMID
	f	Lakq;	g	IGLOO
	f	Lakq;	h	SHIPWRECK
	f	Lakq;	i	SHIPWRECK_BEACHED
	f	Lakq;	j	SWAMP_HUT
	f	Lakq;	k	STRONGHOLD
	f	Lakq;	l	OCEAN_MONUMENT
	f	Lakq;	m	OCEAN_RUIN_COLD
	f	Lakq;	n	OCEAN_RUIN_WARM
	f	Lakq;	o	FORTRESS
	f	Lakq;	p	NETHER_FOSSIL
	f	Lakq;	q	END_CITY
	f	Lakq;	r	BURIED_TREASURE
	f	Lakq;	s	BASTION_REMNANT
	f	Lakq;	t	VILLAGE_PLAINS
	f	Lakq;	u	VILLAGE_DESERT
	f	Lakq;	v	VILLAGE_SAVANNA
	f	Lakq;	w	VILLAGE_SNOWY
	f	Lakq;	x	VILLAGE_TAIGA
	f	Lakq;	y	RUINED_PORTAL_STANDARD
	f	Lakq;	z	RUINED_PORTAL_DESERT
c	ejm	net/minecraft/world/level/levelgen/structure/PersistentStructureLegacy
	m	(Leqz;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		persistentStateManager
		p	2		oldNames
		p	3		newNames
	m	(II)Z	a	isUnhandledStructureStart
		p	1		chunkX
		p	2		chunkZ
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
		p	1		chunkX
		p	2		chunkZ
		p	3		id
	m	(J)V	a	removeIndex
		p	1		chunkPos
	m	(Lakq;Leqz;)Lejm;	a	getLegacyStructureHandler
		p	0		world
		p	1		persistentStateManager
	m	(Leqz;)V	a	populateCaches
		p	1		persistentStateManager
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
		p	0		map
	m	(Lub;)Lub;	a	updateFromLegacy
		p	1		nbt
	m	(Lub;Ldcd;)Lub;	a	updateStructureStart
		p	1		nbt
		p	2		pos
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
		p	0		map
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
c	ejn	net/minecraft/world/level/levelgen/structure/WorldGenFeaturePillagerOutpostPoolPiece
	m	(Lekh;Lub;)V	<init>	<init>
		p	1		context
		p	2		nbt
	m	(Lenu;Lekz;Ljd;ILdmm;Lejj;Lend;)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		poolElement
		p	3		pos
		p	4		groundLevelDelta
		p	5		rotation
		p	6		boundingBox
		p	7		liquidSettings
	m	()Ldmm;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Lcom/mojang/serialization/DynamicOps;Luy;)V	a	lambda$new$1
		p	2		junctionTag
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ljd;Z)V	a	place
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		boundingBox
		p	6		pivot
		p	7		keepJigsaws
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Leku;)V	a	addJunction
		p	1		junction
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$new$0
		p	0		error
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$2
		p	1		poolElement
	m	()Lekz;	b	getElement
	m	()Ljd;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	()Ljava/util/List;	e	getJunctions
	f	Lekz;	a	element
	f	Ljd;	b	position
	f	Ldmm;	c	rotation
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	h	groundLevelDelta
	f	Ljava/util/List;	i	junctions
	f	Lenu;	j	structureTemplateManager
	f	Lend;	k	liquidSettings
c	ejo	ejo
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Lekg;)V	a	lambda$static$0
		p	0		world
		p	1		structureAccessor
		p	2		chunkGenerator
		p	3		random
		p	4		chunkBox
		p	5		pos
		p	6		children
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Lekg;)V	afterPlace	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		pos
		p	7		children
	f	Lejo;	a	NONE
c	ejp	net/minecraft/world/level/levelgen/structure/WorldGenScatteredPiece
	m	(Leki;IIIIIILji;)V	<init>	<init>
		p	1		type
		p	2		x
		p	3		y
		p	4		z
		p	5		width
		p	6		height
		p	7		depth
		p	8		orientation
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldcx;I)Z	a	updateHeightPositionToLowestGroundHeight
		p	1		world
		p	2		yOffset
	m	(Ldcx;Lejj;I)Z	a	updateAverageGroundHeight
		p	1		world
		p	2		boundingBox
		p	3		deltaY
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	heightPosition
c	ejq	net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	m	(Lejq$a;IILejr$c;)V	<init>	<init>
		p	1		constructor
		p	2		width
		p	3		height
		p	4		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	f	Lejq$a;	d	constructor
	f	I	e	width
	f	I	f	depth
c	ejq$a	net/minecraft/world/level/levelgen/structure/SinglePieceStructure$a
	m	(Ldzx;II)Lejv;	construct	construct
		p	1		random
		p	2		startX
		p	3		startZ
c	ejr	net/minecraft/world/level/levelgen/structure/Structure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	()Ljq;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	settingsCodec
		p	0		instance
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Lekg;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lejj;)Lejj;	a	adjustBoundingBox
		p	1		box
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;II)I	a	getLowestY
		p	0		context
		p	1		width
		p	2		height
	m	(Lejr$a;IIII)I	a	getMeanFirstOccupiedHeight
		p	0		context
		p	1		x
		p	2		width
		p	3		z
		p	4		height
	m	(Lejr$a;Ldmm;)Ljd;	a	getLowestYIn5by5BoxOffset7Blocks
		p	1		context
		p	2		rotation
	m	(Lejr$a;Ldyy$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	onTopOfChunkCenter
		p	0		context
		p	1		heightmap
		p	2		generator
	m	(Lejr$a;Lejr$b;)Z	a	lambda$findValidGenerationPoint$2
		p	1		position
	m	(Lejr$b;Lejr$a;)Z	a	isValidBiome
		p	0		result
		p	1		context
	m	(Lejr;)Lejr$c;	a	lambda$settingsCodec$0
		p	0		feature
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	simpleCodec
		p	0		featureCreator
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$1
		p	1		instance
	m	(Lka;Lduz;Ldea;Ldzm;Lenu;JLdcd;ILdcy;Ljava/util/function/Predicate;)Lejz;	a	generate
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		references
		p	10		world
		p	11		validBiomes
	m	()Ljava/util/Map;	b	spawnOverrides
	m	(Lejr$a;)Ljava/util/Optional;	b	findValidGenerationPoint
		p	1		context
	m	(Lejr$a;IIII)I	b	getLowestY
		p	0		context
		p	1		x
		p	2		z
		p	3		width
		p	4		height
	m	()Ldyu$b;	c	step
	m	(Lejr$a;IIII)[I	c	getCornerHeights
		p	0		context
		p	1		x
		p	2		width
		p	3		z
		p	4		height
	m	()Lekc;	d	terrainAdaptation
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lejr$c;	c	settings
c	ejr$a	net/minecraft/world/level/levelgen/structure/Structure$a
	m	(Lka;Lduz;Ldea;Ldzm;Lenu;JLdcd;Ldcy;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		dynamicRegistryManager
		p	2		chunkGenerator
		p	3		biomeSource
		p	4		noiseConfig
		p	5		structureTemplateManager
		p	6		seed
		p	8		chunkPos
		p	9		world
		p	10		biomePredicate
	m	()Lka;	a	registryAccess
	m	(JLdcd;)Ldzx;	a	makeRandom
		p	0		seed
		p	2		chunkPos
	m	()Lduz;	b	chunkGenerator
	m	()Ldea;	c	biomeSource
	m	()Ldzm;	d	randomState
	m	()Lenu;	e	structureTemplateManager
	m	()Ldzx;	f	random
	m	()J	g	seed
	m	()Ldcd;	h	chunkPos
	m	()Ldcy;	i	heightAccessor
	m	()Ljava/util/function/Predicate;	j	validBiome
	f	Lka;	a	registryAccess
	f	Lduz;	b	chunkGenerator
	f	Ldea;	c	biomeSource
	f	Ldzm;	d	randomState
	f	Lenu;	e	structureTemplateManager
	f	Ldzx;	f	random
	f	J	g	seed
	f	Ldcd;	h	chunkPos
	f	Ldcy;	i	heightAccessor
	f	Ljava/util/function/Predicate;	j	validBiome
c	ejr$b	net/minecraft/world/level/levelgen/structure/Structure$b
	m	(Ljd;Ljava/util/function/Consumer;)V	<init>	<init>
		p	1		pos
		p	2		generator
	m	()Lekj;	a	getPiecesBuilder
	m	(Lekj;)Lekj;	a	lambda$getPiecesBuilder$1
		p	0		collector
	m	(Ljava/util/function/Consumer;)Lekj;	a	lambda$getPiecesBuilder$0
		p	0		generator
	m	()Ljd;	b	position
	m	()Lcom/mojang/datafixers/util/Either;	c	generator
	f	Ljd;	a	position
	f	Lcom/mojang/datafixers/util/Either;	b	generator
c	ejr$c	net/minecraft/world/level/levelgen/structure/Structure$c
	m	(Ljq;)V	<init>	<init>
		p	1		biomes
	m	()Ljq;	a	biomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Ldyu$b;	c	step
	m	()Lekc;	d	terrainAdaptation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljq;	b	biomes
	f	Ljava/util/Map;	c	spawnOverrides
	f	Ldyu$b;	d	step
	f	Lekc;	e	terrainAdaptation
	f	Lejr$c;	f	DEFAULT
c	ejr$c$a	net/minecraft/world/level/levelgen/structure/Structure$c$a
	m	(Ljq;)V	<init>	<init>
		p	1		biomes
	m	()Lejr$c;	a	build
	m	(Ldyu$b;)Lejr$c$a;	a	generationStep
		p	1		step
	m	(Lekc;)Lejr$c$a;	a	terrainAdapation
		p	1		terrainAdaptation
	m	(Ljava/util/Map;)Lejr$c$a;	a	spawnOverrides
		p	1		spawnOverrides
	f	Ljq;	a	biomes
	f	Ljava/util/Map;	b	spawnOverrides
	f	Ldyu$b;	c	step
	f	Lekc;	d	terrainAdaption
c	ejs	net/minecraft/world/level/levelgen/structure/StructureCheck
	m	(Ldwh;Lka;Lenu;Lakq;Lduz;Ldzm;Ldcy;Ldea;JLcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		chunkIoWorker
		p	2		registryManager
		p	3		structureTemplateManager
		p	4		worldKey
		p	5		chunkGenerator
		p	6		noiseConfig
		p	7		world
		p	8		biomeSource
		p	9		seed
		p	11		dataFixer
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$3
		p	2		generationPossibilityByChunkPos
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
		p	1		pos
		p	3		referencesByStructure
	m	(Ldcd;Lejr;)V	a	incrementReference
		p	1		pos
		p	2		structure
	m	(Ldcd;Lejr;J)Z	a	lambda$checkStart$1
		p	3		chunkPos
	m	(Ldcd;Lejr;Leko;Z)Lejt;	a	checkStart
		p	1		pos
		p	2		type
		p	3		placement
		p	4		skipReferencedStructures
	m	(Ldcd;Lejr;ZJ)Lejt;	a	tryLoadFromStorage
		p	1		pos
		p	2		structure
		p	3		skipReferencedStructures
		p	4		posLong
	m	(Ldcd;Ljava/util/Map;)V	a	onStructureLoad
		p	1		pos
		p	2		structureStarts
	m	(Lejr;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
		p	0		structure2
	m	(Lejr;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$4
		p	0		feature
		p	1		references
	m	(Lejr;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$5
		p	1		posx
		p	2		referencesByStructure
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
		p	0		map
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lejr;Lejz;)V	a	lambda$onStructureLoad$2
		p	0		structure
		p	1		start
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lejr;Z)Lejt;	a	checkStructureInfo
		p	1		referencesByStructure
		p	2		structure
		p	3		skipReferencedStructures
	m	(Lub;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
		p	1		nbt
	m	(Ldcd;Lejr;)Z	b	canCreateStructure
		p	1		pos
		p	2		structure
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Ldwh;	c	storageAccess
	f	Lka;	d	registryAccess
	f	Lenu;	e	structureTemplateManager
	f	Lakq;	f	dimension
	f	Lduz;	g	chunkGenerator
	f	Ldzm;	h	randomState
	f	Ldcy;	i	heightAccessor
	f	Ldea;	j	biomeSource
	f	J	k	seed
	f	Lcom/mojang/datafixers/DataFixer;	l	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	loadedChunks
	f	Ljava/util/Map;	n	featureChecks
c	ejt	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	m	()[Lejt;	a	$values
	f	Lejt;	a	START_PRESENT
	f	Lejt;	b	START_NOT_PRESENT
	f	Lejt;	c	CHUNK_LOAD_NEEDED
	f	[Lejt;	d	$VALUES
c	eju	net/minecraft/world/level/levelgen/structure/PersistentIndexed
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
		p	1		all
		p	2		remaining
	m	()Leql$a;	a	factory
	m	(J)V	a	addIndex
		p	1		pos
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	b	getAll
	m	(J)Z	b	hasStartIndex
		p	1		pos
	m	(Lub;Ljo$a;)Leju;	b	load
		p	0		nbt
		p	1		registryLookup
	m	(J)Z	c	hasUnhandledIndex
		p	1		pos
	m	(J)V	d	removeIndex
		p	1		pos
	f	Ljava/lang/String;	a	TAG_REMAINING_INDEXES
	f	Ljava/lang/String;	b	TAG_All_INDEXES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	d	remaining
c	ejv	net/minecraft/world/level/levelgen/structure/StructurePiece
	m	(Leki;ILejj;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	()Ldmm;	a	getRotation
	m	(I)V	a	setGenDepth
		p	1		chainLength
	m	(II)I	a	getWorldX
		p	1		x
		p	2		z
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(IIILji;III)Lejj;	a	makeBoundingBox
		p	0		x
		p	1		y
		p	2		z
		p	3		orientation
		p	4		width
		p	5		height
		p	6		depth
	m	(Layw;)Lji;	a	getRandomHorizontalDirection
		p	0		random
	m	(Ldcc;IIILejj;)Ldtc;	a	getBlock
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Ldcc;Ljd;Ldtc;)Ldtc;	a	reorient
		p	0		world
		p	1		pos
		p	2		state
	m	(Ldcd;I)Z	a	isCloseToChunk
		p	1		pos
		p	2		offset
	m	(Ldcz;IIILejj;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Lddl;Lejj;Layw;Ljd;Lakq;Ldtc;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		pos
		p	5		lootTable
		p	6		block
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldds;Ldtc;IIILejj;)V	a	placeBlock
		p	1		world
		p	2		block
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Ldds;Lejj;IIIIII)V	a	generateAirBox
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(Ldds;Lejj;IIIIIILdtc;Ldtc;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		outline
		p	10		inside
		p	11		cantReplaceAir
	m	(Ldds;Lejj;IIIIIILdtc;Z)V	a	generateUpperHalfSphere
		p	1		world
		p	2		bounds
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		block
		p	10		cantReplaceAir
	m	(Ldds;Lejj;IIIIIIZLayw;Lejv$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
		p	9		cantReplaceAir
		p	10		random
		p	11		randomizer
	m	(Ldds;Lejj;Layw;FIIIIIILdtc;Ldtc;ZZ)V	a	generateMaybeBox
		p	1		world
		p	2		box
		p	3		random
		p	4		blockChance
		p	5		minX
		p	6		minY
		p	7		minZ
		p	8		maxX
		p	9		maxY
		p	10		maxZ
		p	11		outline
		p	12		inside
		p	13		cantReplaceAir
		p	14		stayBelowSeaLevel
	m	(Ldds;Lejj;Layw;FIIILdtc;)V	a	maybeGenerateBlock
		p	1		world
		p	2		bounds
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
		p	8		state
	m	(Ldds;Lejj;Layw;IIILakq;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTable
	m	(Ldds;Lejj;Layw;IIILji;Lakq;)Z	a	createDispenser
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		facing
		p	8		lootTable
	m	(Ldds;Lejj;Lejj;Ldtc;Ldtc;Z)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		outline
		p	5		inside
		p	6		cantReplaceAir
	m	(Ldds;Lejj;Lejj;ZLayw;Lejv$a;)V	a	generateBox
		p	1		world
		p	2		box
		p	3		fillBox
		p	4		cantReplaceAir
		p	5		random
		p	6		randomizer
	m	(Ldtc;)Z	a	isReplaceableByStructures
		p	1		state
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lekh;)Lub;	a	createTag
		p	1		context
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$new$0
		p	0		error
	m	(Ljava/util/List;Lejj;)Lejv;	a	findCollisionPiece
		p	0		pieces
		p	1		box
	m	(Ljava/util/stream/Stream;)Lejj;	a	createBoundingBox
		p	0		pieces
	m	(Lji;)V	a	setOrientation
		p	1		orientation
	m	(Lub;Luy;)V	a	lambda$createTag$1
	m	()Ljava/lang/IllegalStateException;	b	lambda$createBoundingBox$2
	m	(I)I	b	getWorldY
		p	1		y
	m	(II)I	b	getWorldZ
		p	1		x
		p	2		z
	m	(III)Ljd$a;	b	getWorldPos
		p	1		x
		p	2		y
		p	3		z
	m	(Ldcz;IIILejj;)Z	b	isInterior
		p	1		world
		p	2		x
		p	3		z
		p	4		y
		p	5		box
	m	(Ldds;Ldtc;IIILejj;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	()Lejj;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	()Ljd;	h	getLocatorPosition
	m	()Lji;	i	getOrientation
	m	()Ldkv;	j	getMirror
	m	()Leki;	k	getType
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lji;	b	orientation
	f	Ldkv;	c	mirror
	f	Ldmm;	d	rotation
	f	Ldtc;	e	CAVE_AIR
	f	Lejj;	f	boundingBox
	f	I	g	genDepth
	f	Leki;	h	type
	f	Ljava/util/Set;	i	SHAPE_CHECK_BLOCKS
c	ejv$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	ejv$a	net/minecraft/world/level/levelgen/structure/StructurePiece$StructurePieceBlockSelector
	m	()Ldtc;	a	getNext
	m	(Layw;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
	f	Ldtc;	a	next
c	ejw	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Lejj;)Lejv;	a	findCollisionPiece
		p	1		box
	m	(Lejv;)V	a	addPiece
		p	1		piece
c	ejx	net/minecraft/world/level/levelgen/structure/StructureSet
	m	(Ljm;Leko;)V	<init>	<init>
		p	1		structure
		p	2		placement
	m	()Ljava/util/List;	a	structures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljm;)Lejx$a;	a	entry
		p	0		structure
	m	(Ljm;I)Lejx$a;	a	entry
		p	0		structure
		p	1		weight
	m	()Leko;	b	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	structures
	f	Leko;	d	placement
c	ejx$a	net/minecraft/world/level/levelgen/structure/StructureSet$a
	m	()Ljm;	a	structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	structure
	f	I	c	weight
c	ejy	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	m	()Lejy$a;	a	boundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lbpf;	b	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lejy$a;	b	boundingBox
	f	Lbpf;	c	spawns
c	ejy$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lejy$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lejy$a;	a	PIECE
	f	Lejy$a;	b	STRUCTURE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Lejy$a;	e	$VALUES
c	ejz	net/minecraft/world/level/levelgen/structure/StructureStart
	m	(Lejr;Ldcd;ILekg;)V	<init>	<init>
		p	1		structure
		p	2		pos
		p	3		references
		p	4		children
	m	()Lejj;	a	getBoundingBox
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;)V	a	placeInChunk
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
	m	(Lekh;Ldcd;)Lub;	a	createTag
		p	1		context
		p	2		chunkPos
	m	(Lekh;Lub;J)Lejz;	a	loadStaticStart
		p	0		context
		p	1		nbt
		p	2		seed
	m	()Z	b	isValid
	m	()Ldcd;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Lejr;	h	getStructure
	m	()Ljava/util/List;	i	getPieces
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Lejz;	b	INVALID_START
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lejr;	d	structure
	f	Lekg;	e	pieceContainer
	f	Ldcd;	f	chunkPos
	f	I	g	references
	f	Lejj;	h	cachedBoundingBox
c	eka	net/minecraft/world/level/levelgen/structure/StructureType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leka;	a	register
		p	0		id
		p	1		codec
	f	Leka;	a	BURIED_TREASURE
	f	Leka;	b	DESERT_PYRAMID
	f	Leka;	c	END_CITY
	f	Leka;	d	FORTRESS
	f	Leka;	e	IGLOO
	f	Leka;	f	JIGSAW
	f	Leka;	g	JUNGLE_TEMPLE
	f	Leka;	h	MINESHAFT
	f	Leka;	i	NETHER_FOSSIL
	f	Leka;	j	OCEAN_MONUMENT
	f	Leka;	k	OCEAN_RUIN
	f	Leka;	l	RUINED_PORTAL
	f	Leka;	m	SHIPWRECK
	f	Leka;	n	STRONGHOLD
	f	Leka;	o	SWAMP_HUT
	f	Leka;	p	WOODLAND_MANSION
c	ekb	net/minecraft/world/level/levelgen/structure/DefinedStructurePiece
	m	(Leki;ILenu;Lakr;Ljava/lang/String;Lenp;Ljd;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		structureTemplateManager
		p	4		id
		p	5		template
		p	6		placementData
		p	7		pos
	m	(Leki;Lub;Lenu;Ljava/util/function/Function;)V	<init>	<init>
		p	1		type
		p	2		nbt
		p	3		structureTemplateManager
		p	4		placementDataGetter
	m	()Ldmm;	a	getRotation
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	()Lakr;	b	makeTemplateLocation
	m	()Lent;	c	template
	m	()Ljd;	d	templatePosition
	m	()Lenp;	e	placeSettings
	f	Ljava/lang/String;	a	templateName
	f	Lent;	b	template
	f	Lenp;	c	placeSettings
	f	Ljd;	d	templatePosition
	f	Lorg/slf4j/Logger;	h	LOGGER
c	ekc	net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lekc;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lekc;	a	NONE
	f	Lekc;	b	BURY
	f	Lekc;	c	BEARD_THIN
	f	Lekc;	d	BEARD_BOX
	f	Lekc;	e	ENCAPSULATE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	id
	f	[Lekc;	h	$VALUES
c	eke	eke
	m	(Lekj;Leke$a;)V	generatePieces	generatePieces
		p	1		collector
		p	2		context
c	eke$a	eke$a
	m	()Leei;	a	config
	m	()Lduz;	b	chunkGenerator
	m	()Lenu;	c	structureTemplateManager
	m	()Ldcd;	d	chunkPos
	m	()Ldcy;	e	heightAccessor
	m	()Ldzx;	f	random
	m	()J	g	seed
	f	Leei;	a	config
	f	Lduz;	b	chunkGenerator
	f	Lenu;	c	structureTemplateManager
	f	Ldcd;	d	chunkPos
	f	Ldcy;	e	heightAccessor
	f	Ldzx;	f	random
	f	J	g	seed
c	ekf	ekf
	m	(Ldyy$a;Lekf$a;)Z	a	lambda$checkForBiomeOnTop$1
		p	1		context
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Lekf$a;)Ljava/util/Optional;	a	lambda$simple$0
		p	2		context
	m	(Ldyy$a;)Ljava/util/function/Predicate;	checkForBiomeOnTop	checkForBiomeOnTop
		p	0		heightmapType
	m	(Lekf$a;)Ljava/util/Optional;	createGenerator	createGenerator
		p	1		context
	m	(Ljava/util/function/Predicate;Leke;)Lekf;	simple	simple
		p	0		predicate
		p	1		generator
c	ekf$a	ekf$a
	m	()Lduz;	a	chunkGenerator
	m	(Ldyy$a;)Z	a	validBiomeOnTop
		p	1		heightmapType
	m	()Ldea;	b	biomeSource
	m	()Ldzm;	c	randomState
	m	()J	d	seed
	m	()Ldcd;	e	chunkPos
	m	()Leei;	f	config
	m	()Ldcy;	g	heightAccessor
	m	()Ljava/util/function/Predicate;	h	validBiome
	m	()Lenu;	i	structureTemplateManager
	m	()Lka;	j	registryAccess
	f	Lduz;	a	chunkGenerator
	f	Ldea;	b	biomeSource
	f	Ldzm;	c	randomState
	f	J	d	seed
	f	Ldcd;	e	chunkPos
	f	Leei;	f	config
	f	Ldcy;	g	heightAccessor
	f	Ljava/util/function/Predicate;	h	validBiome
	f	Lenu;	i	structureTemplateManager
	f	Lka;	j	registryAccess
c	ekg	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		pieces
	m	()Z	a	isEmpty
	m	(Lekh;)Luy;	a	save
		p	1		context
	m	(Ljd;)Z	a	isInsidePiece
		p	1		pos
	m	(Luh;Lekh;)Lekg;	a	load
		p	0		list
		p	1		context
	m	()Lejj;	b	calculateBoundingBox
	m	()Ljava/util/List;	c	pieces
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lakr;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
c	ekh	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	m	()Laue;	a	resourceManager
	m	(Laqu;)Lekh;	a	fromLevel
		p	0		world
	m	()Lka;	b	registryAccess
	m	()Lenu;	c	structureTemplateManager
	f	Laue;	a	resourceManager
	f	Lka;	b	registryAccess
	f	Lenu;	c	structureTemplateManager
c	eki	net/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType
	m	(Leki$a;Ljava/lang/String;)Leki;	a	setPieceId
		p	0		type
		p	1		id
	m	(Leki$b;Ljava/lang/String;)Leki;	a	setTemplatePieceId
		p	0		type
		p	1		id
	m	(Leki;Ljava/lang/String;)Leki;	a	setFullContextPieceId
		p	0		type
		p	1		id
	m	(Lekh;Lub;)Lejv;	load	load
		p	1		context
		p	2		nbt
	f	Leki;	A	STRONGHOLD_RIGHT_TURN
	f	Leki;	B	STRONGHOLD_ROOM_CROSSING
	f	Leki;	C	STRONGHOLD_STAIRS_DOWN
	f	Leki;	D	STRONGHOLD_START
	f	Leki;	E	STRONGHOLD_STRAIGHT
	f	Leki;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Leki;	G	JUNGLE_PYRAMID_PIECE
	f	Leki;	H	OCEAN_RUIN
	f	Leki;	I	IGLOO
	f	Leki;	J	RUINED_PORTAL
	f	Leki;	K	SWAMPLAND_HUT
	f	Leki;	L	DESERT_PYRAMID_PIECE
	f	Leki;	M	OCEAN_MONUMENT_BUILDING
	f	Leki;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Leki;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Leki;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Leki;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Leki;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Leki;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Leki;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Leki;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Leki;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Leki;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Leki;	X	OCEAN_MONUMENT_WING_ROOM
	f	Leki;	Y	END_CITY_PIECE
	f	Leki;	Z	WOODLAND_MANSION_PIECE
	f	Leki;	a	MINE_SHAFT_CORRIDOR
	f	Leki;	aa	BURIED_TREASURE_PIECE
	f	Leki;	ab	SHIPWRECK_PIECE
	f	Leki;	ac	NETHER_FOSSIL
	f	Leki;	ad	JIGSAW
	f	Leki;	b	MINE_SHAFT_CROSSING
	f	Leki;	c	MINE_SHAFT_ROOM
	f	Leki;	d	MINE_SHAFT_STAIRS
	f	Leki;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Leki;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Leki;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Leki;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Leki;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Leki;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Leki;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Leki;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Leki;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Leki;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Leki;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Leki;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Leki;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Leki;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Leki;	s	NETHER_FORTRESS_START
	f	Leki;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Leki;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Leki;	v	STRONGHOLD_FIVE_CROSSING
	f	Leki;	w	STRONGHOLD_LEFT_TURN
	f	Leki;	x	STRONGHOLD_LIBRARY
	f	Leki;	y	STRONGHOLD_PORTAL_ROOM
	f	Leki;	z	STRONGHOLD_PRISON_HALL
c	eki$a	net/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType$a
	m	(Lekh;Lub;)Lejv;	load	load
		p	1		context
		p	2		nbt
	m	(Lub;)Lejv;	load	load
		p	1		nbt
c	eki$b	net/minecraft/world/level/levelgen/structure/pieces/WorldGenFeatureStructurePieceType$b
	m	(Lekh;Lub;)Lejv;	load	load
		p	1		context
		p	2		nbt
	m	(Lenu;Lub;)Lejv;	load	load
		p	1		structureTemplateManager
		p	2		nbt
c	ekj	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	m	()Lekg;	a	build
	m	(I)V	a	offsetPiecesVertically
		p	1		y
	m	(IILayw;I)I	a	moveBelowSeaLevel
		p	1		topY
		p	2		bottomY
		p	3		random
		p	4		topPenalty
	m	(Layw;II)V	a	moveInsideHeights
		p	1		random
		p	2		baseY
		p	3		topY
	m	(Lejj;)Lejv;	a	findCollisionPiece
		p	1		box
	m	(Lejv;)V	a	addPiece
		p	1		piece
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Lejj;	d	getBoundingBox
	f	Ljava/util/List;	a	pieces
c	ekl	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	m	(IIILjq;)V	<init>	<init>
		p	1		distance
		p	2		spread
		p	3		structureCount
		p	4		preferredBiomes
	m	(Lkh;Leko$c;FILjava/util/Optional;IIILjq;)V	<init>	<init>
		p	1		locateOffset
		p	2		generationPredicateType
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		distance
		p	7		spread
		p	8		structureCount
		p	9		preferredBiomes
	m	()I	a	distance
	m	(Ldva;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	()I	b	spread
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9;	b	codec
		p	0		instance
	m	()I	c	count
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	m	()Ljq;	d	preferredBiomes
	m	()Lekp;	e	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
	f	Ljq;	f	preferredBiomes
c	ekm	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	m	(IILekn;I)V	<init>	<init>
		p	1		spacing
		p	2		separation
		p	3		spreadType
		p	4		salt
	m	(Lkh;Leko$c;FILjava/util/Optional;IILekn;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
		p	6		spacing
		p	7		separation
		p	8		spreadType
	m	()I	a	spacing
	m	(JII)Ldcd;	a	getPotentialStructureChunk
		p	1		seed
		p	3		chunkX
		p	4		chunkZ
	m	(Ldva;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(Lekm;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		structurePlacement
	m	()I	b	separation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Lekn;	c	spreadType
	m	()Ljava/lang/String;	d	lambda$validate$1
	m	()Lekp;	e	type
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Lekn;	e	spreadType
c	ekn	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Lekn;	a	$values
	m	(Layw;I)I	a	evaluate
		p	1		random
		p	2		bound
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lekn;	a	LINEAR
	f	Lekn;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Lekn;	e	$VALUES
c	eko	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	m	(Lkh;Leko$c;FILjava/util/Optional;)V	<init>	<init>
		p	1		locateOffset
		p	2		frequencyReductionMethod
		p	3		frequency
		p	4		salt
		p	5		exclusionZone
	m	(IIJ)Z	a	applyAdditionalChunkRestrictions
		p	1		chunkX
		p	2		chunkZ
		p	3		seed
	m	(JIIIF)Z	a	probabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5;	a	placementCodec
		p	0		instance
	m	(Ldcd;)Ljd;	a	getLocatePos
		p	1		chunkPos
	m	(Ldva;II)Z	a	isPlacementChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	b	legacyProbabilityReducerWithDouble
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Ldva;II)Z	b	isStructureChunk
		p	1		calculator
		p	2		chunkX
		p	3		chunkZ
	m	(JIIIF)Z	c	legacyArbitrarySaltProbabilityReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	(Ldva;II)Z	c	applyInteractionsWithOtherStructures
		p	1		calculator
		p	2		centerChunkX
		p	3		centerChunkZ
	m	(JIIIF)Z	d	legacyPillagerOutpostReducer
		p	0		seed
		p	2		salt
		p	3		chunkX
		p	4		chunkZ
		p	5		frequency
	m	()Lekp;	e	type
	m	()Lkh;	f	locateOffset
	m	()Leko$c;	g	frequencyReductionMethod
	m	()F	h	frequency
	m	()I	i	salt
	m	()Ljava/util/Optional;	j	exclusionZone
	f	I	a	HIGHLY_ARBITRARY_RANDOM_SALT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lkh;	c	locateOffset
	f	Leko$c;	d	frequencyReductionMethod
	f	F	e	frequency
	f	I	f	salt
	f	Ljava/util/Optional;	g	exclusionZone
c	eko$a	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$a
	m	()Ljm;	a	otherSet
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldva;II)Z	a	isPlacementForbidden
		p	1		calculator
		p	2		centerChunkX
		p	3		centerChunkZ
	m	()I	b	chunkCount
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	otherSet
	f	I	c	chunkCount
c	eko$b	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$b
	m	(JIIIF)Z	shouldGenerate	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
c	eko$c	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$c
	m	(Ljava/lang/String;ILjava/lang/String;Leko$b;)V	<init>	<init>
		p	3		name
		p	4		generationPredicate
	m	()[Leko$c;	a	$values
	m	(JIIIF)Z	a	shouldGenerate
		p	1		seed
		p	3		salt
		p	4		chunkX
		p	5		chunkZ
		p	6		chance
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leko$c;	a	DEFAULT
	f	Leko$c;	b	LEGACY_TYPE_1
	f	Leko$c;	c	LEGACY_TYPE_2
	f	Leko$c;	d	LEGACY_TYPE_3
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Leko$b;	g	reducer
	f	[Leko$c;	h	$VALUES
c	ekp	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lekp;	a	register
		p	0		id
		p	1		codec
	f	Lekp;	a	RANDOM_SPREAD
	f	Lekp;	b	CONCENTRIC_RINGS
c	ekr	net/minecraft/world/level/levelgen/structure/pools/DimensionPadding
	m	(I)V	<init>	<init>
		p	1		value
	m	()Z	a	hasEqualTopAndBottom
	m	(Lcom/mojang/datafixers/util/Either;)Lekr;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lekr;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		padding
	m	()I	b	bottom
	m	(Lekr;)Ljava/lang/Integer;	b	lambda$static$1
		p	0		padding
	m	()I	c	top
	m	(Lekr;)Ljava/lang/Integer;	c	lambda$static$0
		p	0		padding
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lekr;	b	ZERO
	f	I	c	bottom
	f	I	d	top
	f	Lcom/mojang/serialization/Codec;	e	RECORD_CODEC
c	eks	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolEmpty
	m	()Lela;	a	getType
	m	(Lenu;Ldds;Lddq;Lduz;Ljd;Ljd;Ldmm;Lejj;Layw;Lend;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		liquidSettings
		p	11		keepJigsaws
	m	(Lenu;Ldmm;)Lkh;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Lenu;Ljd;Ldmm;)Lejj;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Lenu;Ljd;Ldmm;Layw;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Leks;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leks;	b	INSTANCE
c	ekt	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolFeature
	m	(Ljm;Lelb$a;)V	<init>	<init>
		p	1		feature
		p	2		projection
	m	()Lela;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lekt;)Ljm;	a	lambda$static$0
		p	0		pool
	m	(Lenu;Ldds;Lddq;Lduz;Ljd;Ljd;Ldmm;Lejj;Layw;Lend;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		liquidSettings
		p	11		keepJigsaws
	m	(Lenu;Ldmm;)Lkh;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Lenu;Ljd;Ldmm;)Lejj;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Lenu;Ljd;Ldmm;Layw;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	()Lub;	b	fillDefaultJigsawNBT
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	feature
	f	Lub;	c	defaultJigsawNBT
c	eku	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawJunction
	m	(IIIILelb$a;)V	<init>	<init>
		p	1		sourceX
		p	2		sourceGroundY
		p	3		sourceZ
		p	4		deltaY
		p	5		destProjection
	m	()I	a	getSourceX
	m	(Lcom/mojang/serialization/Dynamic;)Leku;	a	deserialize
		p	0		dynamic
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
		p	1		ops
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Lelb$a;	e	getDestProjection
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Lelb$a;	e	destProjection
c	ekv	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawPlacement
	m	(Lakq;)Ljava/lang/String;	a	lambda$addPieces$1
		p	0		key
	m	(Laqu;Ljm;Lakr;ILjd;Z)Z	a	generateJigsaw
		p	0		world
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		keepJigsaws
	m	(Ldzm;IZLduz;Lenu;Ldcy;Layw;Ljz;Lejn;Ljava/util/List;Lexv;Lelf;Lend;)V	a	addPieces
		p	0		noiseConfig
		p	1		maxSize
		p	2		modifyBoundingBox
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		heightLimitView
		p	6		random
		p	7		structurePoolRegistry
		p	8		firstPiece
		p	9		pieces
		p	10		pieceShape
		p	11		aliasLookup
		p	12		liquidSettings
	m	(Lejn;IIIILdcy;Lekr;ILejj;Lejr$a;ZLduz;Lenu;Ldzx;Ljz;Lelf;Lend;Lekj;)V	a	lambda$addPieces$2
		p	17		collector
	m	(Lejr$a;Ljm;Ljava/util/Optional;ILjd;ZLjava/util/Optional;ILelf;Lekr;Lend;)Ljava/util/Optional;	a	addPieces
		p	0		context
		p	1		structurePool
		p	2		id
		p	3		size
		p	4		pos
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
		p	7		maxDistanceFromCenter
		p	8		aliasLookup
		p	9		dimensionPadding
		p	10		liquidSettings
	m	(Lekz;Lakr;Ljd;Ldmm;Lenu;Ldzx;)Ljava/util/Optional;	a	getRandomNamedJigsaw
		p	0		pool
		p	1		id
		p	2		pos
		p	3		rotation
		p	4		structureManager
		p	5		random
	m	(Lent$c;)Ljava/lang/String;	a	lambda$getRandomNamedJigsaw$3
	m	(Ljm;)Z	a	lambda$generateJigsaw$4
		p	0		biome
	m	(Ljz;Lelf;Lakq;)Ljava/util/Optional;	a	lambda$addPieces$0
		p	2		key
	f	Lorg/slf4j/Logger;	a	LOGGER
c	ekv$a	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawPlacement$a
	m	(Lejn;Lorg/apache/commons/lang3/mutable/MutableObject;I)V	<init>	<init>
		p	1		piece
		p	2		pieceShape
		p	3		currentSize
	m	()Lejn;	a	piece
	m	()Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	m	()I	c	depth
	f	Lejn;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
c	ekv$b	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructureJigsawPlacement$b
	m	(Ljz;ILduz;Lenu;Ljava/util/List;Layw;)V	<init>	<init>
		p	1		registry
		p	2		maxSize
		p	3		chunkGenerator
		p	4		structureTemplateManager
		p	5		children
		p	6		random
	m	(Lakq;)Ljava/lang/String;	a	lambda$tryPlacingChildren$0
		p	0		key
	m	(Lejj;Lelf;Lent$c;)I	a	lambda$tryPlacingChildren$4
		p	3		structureBlockInfo
	m	(Lejn;Lorg/apache/commons/lang3/mutable/MutableObject;IZLdcy;Ldzm;Lelf;Lend;)V	a	tryPlacingChildren
		p	1		piece
		p	2		pieceShape
		p	3		minY
		p	4		modifyBoundingBox
		p	5		world
		p	6		noiseConfig
		p	7		aliasLookup
		p	8		liquidSettings
	m	(Lent$c;)Ljava/lang/String;	a	lambda$readPoolKey$5
	m	(Lent$c;Lelf;)Lakq;	a	readPoolKey
		p	0		structureBlockInfo
		p	1		aliasLookup
	m	(Ljm;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$3
		p	1		entry
	m	(Ljm;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$2
		p	1		entry
	m	(Ljm;)Ljm;	c	lambda$tryPlacingChildren$1
		p	0		entry
	f	Ljz;	a	pools
	f	I	b	maxDepth
	f	Lduz;	c	chunkGenerator
	f	Lenu;	d	structureTemplateManager
	f	Ljava/util/List;	e	pieces
	f	Layw;	f	random
	f	Layz;	g	placing
c	ekw	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolLegacySingle
	m	(Lcom/mojang/datafixers/util/Either;Ljm;Lelb$a;Ljava/util/Optional;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
		p	4		overrideLiquidSettings
	m	()Lela;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldmm;Lejj;Lend;Z)Lenp;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		liquidSettings
		p	4		keepJigsaws
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ekx	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolList
	m	(Ljava/util/List;Lelb$a;)V	<init>	<init>
		p	1		elements
		p	2		projection
	m	()Lela;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lekx;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Lekz;)Z	a	lambda$getBoundingBox$2
		p	0		element
	m	(Lelb$a;)Lekz;	a	setProjection
		p	1		projection
	m	(Lelb$a;Lekz;)V	a	lambda$setProjectionOnEachElement$5
		p	1		element
	m	(Lenu;Ldds;Lddq;Lduz;Ljd;Ljd;Ldmm;Lejj;Layw;Lend;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		liquidSettings
		p	11		keepJigsaws
	m	(Lenu;Ldmm;)Lkh;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Lenu;Ljd;Ldmm;)Lejj;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Lenu;Ljd;Ldmm;Layw;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Lenu;Ljd;Ldmm;Lekz;)Lejj;	a	lambda$getBoundingBox$3
		p	3		element
	m	()Ljava/lang/IllegalStateException;	b	lambda$getBoundingBox$4
	m	(Lelb$a;)V	b	setProjectionOnEachElement
		p	1		projection
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	elements
c	eky	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolSingle
	m	(Lcom/mojang/datafixers/util/Either;Ljm;Lelb$a;Ljava/util/Optional;)V	<init>	<init>
		p	1		location
		p	2		processors
		p	3		projection
		p	4		overrideLiquidSettings
	m	()Lela;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
		p	0		location
		p	1		ops
		p	2		prefix
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldmm;Lejj;Lend;Z)Lenp;	a	getSettings
		p	1		rotation
		p	2		box
		p	3		liquidSettings
		p	4		keepJigsaws
	m	(Leky;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$4
		p	0		pool
	m	(Lent$c;)I	a	lambda$sortBySelectionPriority$6
		p	0		block
	m	(Lenu;)Lent;	a	getTemplate
		p	1		structureTemplateManager
	m	(Lenu;Ldds;Lddq;Lduz;Ljd;Ljd;Ldmm;Lejj;Layw;Lend;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		liquidSettings
		p	11		keepJigsaws
	m	(Lenu;Ldmm;)Lkh;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Lenu;Ljd;Ldmm;)Lejj;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Lenu;Ljd;Ldmm;Layw;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Lenu;Ljd;Ldmm;Z)Ljava/util/List;	a	getDataMarkers
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		mirroredAndRotated
	m	(Ljava/util/List;)V	a	sortBySelectionPriority
		p	0		blocks
	m	(Lub;)Ljava/lang/Integer;	a	lambda$sortBySelectionPriority$5
		p	0		nbt
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	(Leky;)Ljava/util/Optional;	b	lambda$overrideLiquidSettingsCodec$3
		p	0		pool
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	overrideLiquidSettingsCodec
	m	(Leky;)Ljm;	c	lambda$processorsCodec$2
		p	0		pool
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	templateCodec
	m	()Ljava/lang/String;	i	lambda$encodeTemplate$0
	f	Lcom/mojang/serialization/Codec;	a	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Ljm;	d	processors
	f	Ljava/util/Optional;	e	overrideLiquidSettings
c	ekz	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolStructure
	m	(Lelb$a;)V	<init>	<init>
		p	1		projection
	m	()Lela;	a	getType
	m	(Ldcx;Lent$c;Ljd;Ldmm;Layw;Lejj;)V	a	handleDataMarker
		p	1		world
		p	2		structureBlockInfo
		p	3		pos
		p	4		rotation
		p	5		random
		p	6		box
	m	(Lelb$a;)Lekz;	a	setProjection
		p	1		projection
	m	(Lelb$a;Ljava/util/function/Function;)Lekz;	a	lambda$list$8
		p	1		elementGetter
	m	(Lenu;Ldds;Lddq;Lduz;Ljd;Ljd;Ldmm;Lejj;Layw;Lend;Z)Z	a	place
		p	1		structureTemplateManager
		p	2		world
		p	3		structureAccessor
		p	4		chunkGenerator
		p	5		pos
		p	6		pivot
		p	7		rotation
		p	8		box
		p	9		random
		p	10		liquidSettings
		p	11		keepJigsaws
	m	(Lenu;Ldmm;)Lkh;	a	getSize
		p	1		structureTemplateManager
		p	2		rotation
	m	(Lenu;Ljd;Ldmm;)Lejj;	a	getBoundingBox
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
	m	(Lenu;Ljd;Ldmm;Layw;)Ljava/util/List;	a	getShuffledJigsawBlocks
		p	1		structureTemplateManager
		p	2		pos
		p	3		rotation
		p	4		random
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
		p	0		id
	m	(Ljava/lang/String;Lelb$a;)Leky;	a	lambda$single$3
		p	1		projection
	m	(Ljava/lang/String;Lend;)Ljava/util/function/Function;	a	single
		p	0		id
		p	1		liquidSettings
	m	(Ljava/lang/String;Lend;Lelb$a;)Leky;	a	lambda$single$5
		p	2		projection
	m	(Ljava/lang/String;Ljm;)Ljava/util/function/Function;	a	legacy
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Ljm;Lelb$a;)Leky;	a	lambda$single$4
		p	2		projection
	m	(Ljava/lang/String;Ljm;Lend;)Ljava/util/function/Function;	a	single
		p	0		id
		p	1		processorListEntry
		p	2		liquidSettings
	m	(Ljava/lang/String;Ljm;Lend;Lelb$a;)Leky;	a	lambda$single$6
		p	3		projection
	m	(Ljava/util/List;Lelb$a;)Lekx;	a	lambda$list$9
		p	1		projection
	m	(Ljm;)Ljava/util/function/Function;	a	feature
		p	0		placedFeatureEntry
	m	(Ljm;Lelb$a;)Lekt;	a	lambda$feature$7
		p	1		projection
	m	(Lelb$a;)Leks;	b	lambda$empty$0
		p	0		projection
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
		p	0		id
	m	(Ljava/lang/String;Lelb$a;)Lekw;	b	lambda$legacy$1
		p	1		projection
	m	(Ljava/lang/String;Ljm;)Ljava/util/function/Function;	b	single
		p	0		id
		p	1		processorListEntry
	m	(Ljava/lang/String;Ljm;Lelb$a;)Lekw;	b	lambda$legacy$2
		p	2		projection
	m	(Ljava/util/List;)Ljava/util/function/Function;	b	list
		p	0		elementGetters
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	e	projectionCodec
	m	()Lelb$a;	f	getProjection
	m	()I	g	getGroundLevelDelta
	m	()Ljava/util/function/Function;	h	empty
	f	Ljm;	a	EMPTY
	f	Lelb$a;	b	projection
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	ela	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePools
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lela;	a	register
		p	0		id
		p	1		codec
	f	Lela;	a	SINGLE
	f	Lela;	b	LIST
	f	Lela;	c	FEATURE
	f	Lela;	d	EMPTY
	f	Lela;	e	LEGACY
c	elb	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate
	m	(Ljm;Ljava/util/List;)V	<init>	<init>
		p	1		fallback
		p	2		elementCounts
	m	(Ljm;Ljava/util/List;Lelb$a;)V	<init>	<init>
		p	1		fallback
		p	2		elementCountsByGetters
		p	3		projection
	m	()Ljm;	a	getFallback
	m	(Layw;)Lekz;	a	getRandomTemplate
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lekz;)Z	a	lambda$getMaxSize$2
		p	0		element
	m	(Lelb;)Ljava/util/List;	a	lambda$static$0
		p	0		pool
	m	(Lenu;)I	a	getMaxSize
		p	1		structureTemplateManager
	m	(Lenu;Lekz;)I	a	lambda$getMaxSize$3
		p	1		element
	m	()I	b	size
	m	(Layw;)Ljava/util/List;	b	getShuffledTemplates
		p	1		random
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	SIZE_UNSET
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	d	CODEC_REFERENCE
	f	Ljava/util/List;	e	rawTemplates
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	templates
	f	Ljm;	g	fallback
	f	I	h	maxSize
c	elb$a	net/minecraft/world/level/levelgen/structure/pools/WorldGenFeatureDefinedStructurePoolTemplate$Matching
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
		p	3		id
		p	4		processors
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lelb$a;	a	byName
		p	0		id
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lelb$a;	d	$values
	f	Lelb$a;	a	TERRAIN_MATCHING
	f	Lelb$a;	b	RIGID
	f	Lazk$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	f	[Lelb$a;	f	$VALUES
c	elc	net/minecraft/world/level/levelgen/structure/pools/alias/Direct
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	(Layw;Ljava/util/function/BiConsumer;)V	a	forEachResolved
		p	1		random
		p	2		aliasConsumer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Lakq;	c	alias
	m	()Lakq;	d	target
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakq;	c	alias
	f	Lakq;	d	target
c	eld	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBinding
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	(Lakq;Lakq;)Lelc;	a	direct
		p	0		alias
		p	1		target
	m	(Lakq;Lbpb;)Lelg;	a	random
		p	0		alias
		p	1		targets
	m	(Layw;Ljava/util/function/BiConsumer;)V	a	forEachResolved
		p	1		random
		p	2		aliasConsumer
	m	(Lbpb$a;Lbpd$b;)V	a	lambda$random$0
		p	1		target
	m	(Lbpb;)Lelh;	a	randomGroup
		p	0		groups
	m	(Ljava/lang/String;Lbpb;)Lelg;	a	random
		p	0		alias
		p	1		targets
	m	(Ljava/lang/String;Ljava/lang/String;)Lelc;	a	direct
		p	0		alias
		p	1		target
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	f	Lcom/mojang/serialization/Codec;	b	CODEC
c	ele	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBindings
	m	(Lakq;)Ljava/lang/String;	a	lambda$registerTargetsAsPools$0
		p	0		target
	m	(Ljz;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
		p	0		registry
	m	(Lqq;Ljm;Ljava/lang/String;)V	a	lambda$registerTargetsAsPools$1
		p	2		path
	m	(Lqq;Ljm;Ljava/util/List;)V	a	registerTargetsAsPools
		p	0		pools
		p	1		base
		p	2		aliases
c	elf	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup
	m	(Lakq;)Ljava/lang/String;	a	lambda$create$2
	m	(Layw;Lcom/google/common/collect/ImmutableMap$Builder;Leld;)V	a	lambda$create$1
		p	2		binding
	m	(Ljava/util/Map;Lakq;)Lakq;	a	lambda$create$3
		p	1		alias
	m	(Lakq;)Lakq;	b	lambda$static$0
		p	0		pool
	m	(Ljava/util/List;Ljd;J)Lelf;	create	create
		p	0		bindings
		p	1		pos
		p	2		seed
	m	(Lakq;)Lakq;	lookup	lookup
		p	1		pool
	f	Lelf;	a	EMPTY
c	elg	net/minecraft/world/level/levelgen/structure/pools/alias/Random
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	(Layw;Ljava/util/function/BiConsumer;)V	a	forEachResolved
		p	1		random
		p	2		aliasConsumer
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/function/BiConsumer;Lbpd$b;)V	a	lambda$forEachResolved$1
		p	2		pool
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Lakq;	c	alias
	m	()Lbpb;	d	targets
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakq;	c	alias
	f	Lbpb;	d	targets
c	elh	net/minecraft/world/level/levelgen/structure/pools/alias/RandomGroup
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	(Layw;Ljava/util/function/BiConsumer;)V	a	forEachResolved
		p	1		random
		p	2		aliasConsumer
	m	(Layw;Ljava/util/function/BiConsumer;Lbpd$b;)V	a	lambda$forEachResolved$2
		p	2		pool
	m	(Layw;Ljava/util/function/BiConsumer;Leld;)V	a	lambda$forEachResolved$1
		p	2		binding
	m	(Lbpd$b;)Ljava/util/stream/Stream;	a	lambda$allTargets$3
		p	0		present
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Lbpb;	c	groups
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbpb;	c	groups
c	elk	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
c	elk$a	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$a
	m	(Ljd;)V	<init>	<init>
		p	1		pos
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldtc;)Z	b	isLiquid
		p	1		state
c	ell	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	elm	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	m	(Layw;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(IIIIII)V	a	placeSandBox
		p	1		startX
		p	2		startY
		p	3		startZ
		p	4		endX
		p	5		endY
		p	6		endZ
	m	(Ldds;IIILejj;)V	a	placeCollapsedRoofPiece
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		chunkBox
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldds;Lejj;)V	a	addCellar
		p	1		world
		p	2		chunkBox
	m	(Ldds;Lejj;IIIII)V	a	placeCollapsedRoof
		p	1		world
		p	2		chunkBox
		p	3		startX
		p	4		y
		p	5		startZ
		p	6		endX
		p	7		endZ
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljd;Ldds;Lejj;)V	a	addCellarStairs
		p	1		pos
		p	2		world
		p	3		chunkBox
	m	()Ljava/util/List;	b	getPotentialSuspiciousSandWorldPositions
	m	(Ljd;Ldds;Lejj;)V	b	addCellarRoom
		p	1		pos
		p	2		world
		p	3		chunkBox
	m	()Ljd;	c	getRandomCollapsedRoofPos
	m	(III)V	c	placeSand
		p	1		x
		p	2		y
		p	3		z
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	[Z	j	hasPlacedChest
	f	Ljava/util/List;	k	potentialSuspiciousSandWorldPositions
	f	Ljd;	l	randomCollapsedRoofPos
c	eln	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Lekg;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lejj;Ldds;Ljd;)V	a	placeSuspiciousSand
		p	0		box
		p	1		world
		p	2		pos
	m	(Ljd;Ldql;)V	a	lambda$placeSuspiciousSand$0
		p	1		blockEntity
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	elo	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	m	(Lenu;Lelo$a;Ljd;Ljava/lang/String;Ldmm;Z)Lelo$a;	a	addPiece
		p	0		structureTemplateManager
		p	1		lastPiece
		p	2		relativePosition
		p	3		template
		p	4		rotation
		p	5		ignoreAir
	m	(Lenu;Lelo$b;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	recursiveChildren
		p	0		manager
		p	1		piece
		p	2		depth
		p	3		parent
		p	4		pos
		p	5		pieces
		p	6		random
	m	(Lenu;Ljd;Ldmm;Ljava/util/List;Layw;)V	a	startHouseTower
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
	m	(Ljava/util/List;Lelo$a;)Lelo$a;	a	addHelper
		p	0		pieces
		p	1		piece
	f	I	a	MAX_GEN_DEPTH
	f	Lelo$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Lelo$b;	d	TOWER_GENERATOR
	f	Lelo$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Lelo$b;	g	FAT_TOWER_GENERATOR
c	elo$1	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	m	()V	a	init
	m	(Lenu;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	elo$2	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	m	()V	a	init
	m	(Lenu;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	elo$3	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	m	()V	a	init
	m	(Lenu;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
	f	Z	a	shipCreated
c	elo$4	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	m	()V	a	init
	m	(Lenu;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	elo$a	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$a
	m	(Lenu;Ljava/lang/String;Ljd;Ldmm;Z)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		includeAir
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Lakr;	a	makeResourceLocation
		p	0		template
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Lakr;)Lenp;	a	lambda$new$0
		p	1		id
	m	(ZLdmm;)Lenp;	a	makeSettings
		p	0		includeAir
		p	1		rotation
	m	()Lakr;	b	makeTemplateLocation
c	elo$b	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$b
	m	()V	a	init
	m	(Lenu;ILelo$a;Ljd;Ljava/util/List;Layw;)Z	a	generate
		p	1		manager
		p	2		depth
		p	3		root
		p	4		pos
		p	5		pieces
		p	6		random
c	elp	net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lekj;Ljd;Ldmm;Lejr$a;)V	a	generatePieces
		p	1		collector
		p	2		pos
		p	3		rotation
		p	4		context
	m	(Ljd;Ldmm;Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	elq	net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	m	(Lenu;Ljd;Ldmm;Lejw;Layw;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
	f	I	a	GENERATION_HEIGHT
	f	Lakr;	b	STRUCTURE_LOCATION_IGLOO
	f	Lakr;	c	STRUCTURE_LOCATION_LADDER
	f	Lakr;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
c	elq$a	net/minecraft/world/level/levelgen/structure/structures/IglooPieces$a
	m	(Lenu;Lakr;Ljd;Ldmm;I)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		yOffset
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Lakr;Ljd;I)Ljd;	a	makePosition
		p	0		identifier
		p	1		pos
		p	2		yOffset
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldmm;Lakr;)Lenp;	a	makeSettings
		p	0		rotation
		p	1		identifier
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Lakr;)Lenp;	a	lambda$new$0
		p	1		identifier
c	elr	net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	2		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	els	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	m	(Lejr$c;Ljm;ILehx;Z)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
	m	(Lejr$c;Ljm;ILehx;ZLdyy$a;)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		size
		p	4		startHeight
		p	5		useExpansionHack
		p	6		projectStartToHeightmap
	m	(Lejr$c;Ljm;Ljava/util/Optional;ILehx;ZLjava/util/Optional;ILjava/util/List;Lekr;Lend;)V	<init>	<init>
		p	1		config
		p	2		startPool
		p	3		startJigsawName
		p	4		size
		p	5		startHeight
		p	6		useExpansionHack
		p	7		projectStartToHeightmap
		p	8		maxDistanceFromCenter
		p	9		poolAliasBindings
		p	10		dimensionPadding
		p	11		liquidSettings
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lels;)Lcom/mojang/serialization/DataResult;	a	verifyRange
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$10
		p	0		instance
	m	(Lels;)Lend;	b	lambda$static$9
	m	(Lels;)Lekr;	c	lambda$static$8
		p	0		structure
	m	(Lels;)Ljava/util/List;	d	lambda$static$7
		p	0		structure
	m	()Leka;	e	type
	m	(Lels;)Ljava/lang/Integer;	e	lambda$static$6
		p	0		structure
	m	()Ljava/lang/String;	f	lambda$verifyRange$11
	m	(Lels;)Ljava/util/Optional;	f	lambda$static$5
		p	0		structure
	m	(Lels;)Ljava/lang/Boolean;	g	lambda$static$4
		p	0		structure
	m	(Lels;)Lehx;	h	lambda$static$3
		p	0		structure
	m	(Lels;)Ljava/lang/Integer;	i	lambda$static$2
		p	0		structure
	m	(Lels;)Ljava/util/Optional;	j	lambda$static$1
		p	0		structure
	m	(Lels;)Ljm;	k	lambda$static$0
		p	0		structure
	f	Lekr;	d	DEFAULT_DIMENSION_PADDING
	f	Lend;	e	DEFAULT_LIQUID_SETTINGS
	f	I	f	MAX_TOTAL_STRUCTURE_RANGE
	f	I	g	MIN_DEPTH
	f	I	h	MAX_DEPTH
	f	Lcom/mojang/serialization/MapCodec;	i	CODEC
	f	Ljm;	j	startPool
	f	Ljava/util/Optional;	k	startJigsawName
	f	I	l	maxDepth
	f	Lehx;	m	startHeight
	f	Z	n	useExpansionHack
	f	Ljava/util/Optional;	o	projectStartToHeightmap
	f	I	p	maxDistanceFromCenter
	f	Ljava/util/List;	q	poolAliases
	f	Lekr;	r	dimensionPadding
	f	Lend;	s	liquidSettings
c	els$1	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
c	elt	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	m	(Layw;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	Z	j	placedMainChest
	f	Z	k	placedHiddenChest
	f	Z	l	placedTrap1
	f	Z	m	placedTrap2
	f	Lelt$a;	n	STONE_SELECTOR
c	elt$a	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$a
	m	(Layw;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	elu	net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	elv	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	m	(Lejv;Lejw;Layw;IIILji;I)Lelv$c;	a	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Lejw;Layw;IIILji;ILelw$a;)Lelv$c;	a	createRandomShaftPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
		p	7		type
	f	I	a	MAGIC_START_Y
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	DEFAULT_SHAFT_WIDTH
	f	I	d	DEFAULT_SHAFT_HEIGHT
	f	I	e	DEFAULT_SHAFT_LENGTH
	f	I	f	MAX_PILLAR_HEIGHT
	f	I	g	MAX_CHAIN_HEIGHT
	f	I	h	MAX_DEPTH
c	elv$1	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	elv$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$a
	m	(ILayw;Lejj;Lji;Lelw$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
		p	5		type
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldcz;Ljd;Ldtc;)Z	a	canPlaceColumnOnTopOf
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldds;Ldtc;Ljd$a;II)V	a	fillColumnBetween
		p	0		world
		p	1		state
		p	2		pos
		p	3		startY
		p	4		endY
	m	(Ldds;Lejj;III)V	a	placeDoubleLowerOrUpperSupport
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Ldds;Lejj;IIII)Z	a	hasSturdyNeighbours
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		count
	m	(Ldds;Lejj;IIIIILayw;)V	a	placeSupport
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		minY
		p	5		z
		p	6		maxY
		p	7		maxX
		p	8		random
	m	(Ldds;Lejj;Layw;FIII)V	a	maybePlaceCobWeb
		p	1		world
		p	2		box
		p	3		random
		p	4		threshold
		p	5		x
		p	6		y
		p	7		z
	m	(Ldds;Lejj;Layw;IIILakq;)Z	a	createChest
		p	1		world
		p	2		boundingBox
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		lootTable
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;)Lejj;	a	findCorridorSize
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ldcz;Ljd;Ldtc;)Z	b	canHangChainBelow
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldds;Ldtc;IIILejj;)V	b	fillColumnDown
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	m	(Ldds;Ldtc;IIILejj;)V	c	fillPillarDownOrChainUp
		p	1		world
		p	2		state
		p	3		x
		p	4		y
		p	5		z
		p	6		box
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	h	numSections
c	elv$b	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$b
	m	(ILejj;Lji;Lelw$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldds;Lejj;IIII)V	a	placeSupportPillar
		p	1		world
		p	2		boundingBox
		p	3		x
		p	4		minY
		p	5		z
		p	6		maxY
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;)Lejj;	a	findCrossing
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Lji;	b	direction
	f	Z	c	isTwoFloored
c	elv$c	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$c
	m	(Leki;ILelw$a;Lejj;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		type
		p	4		box
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldcc;Lejj;IIII)Z	a	isSupportingBox
		p	1		world
		p	2		boundingBox
		p	3		minX
		p	4		maxX
		p	5		y
		p	6		z
	m	(Ldcx;Lejj;)Z	a	isInInvalidLocation
		p	1		world
		p	2		box
	m	(Ldcz;IIILejj;)Z	a	canBeReplaced
		p	1		world
		p	2		x
		p	3		y
		p	4		z
		p	5		box
	m	(Ldds;Lejj;Ldtc;III)V	a	setPlanksBlock
		p	1		world
		p	2		box
		p	3		state
		p	4		x
		p	5		y
		p	6		z
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Lelw$a;	a	type
c	elv$d	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$d
	m	(ILayw;IILelw$a;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		x
		p	4		z
		p	5		type
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(III)V	a	move
		p	1		x
		p	2		y
		p	3		z
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$0
	f	Ljava/util/List;	b	childEntranceBoxes
c	elv$e	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$e
	m	(ILejj;Lji;Lelw$a;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
		p	4		type
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;)Lejj;	a	findStairs
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
c	elw	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	m	(Lejr$c;Lelw$a;)V	<init>	<init>
		p	1		config
		p	2		type
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lekj;Lejr$a;)I	a	generatePiecesAndAdjust
		p	1		collector
		p	2		context
	m	(Lelw;)Lelw$a;	a	lambda$static$0
		p	0		mineshaftStructure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lelw$a;	e	type
c	elw$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$a
	m	(Ljava/lang/String;ILjava/lang/String;Ldfy;Ldfy;Ldfy;)V	<init>	<init>
		p	3		name
		p	4		log
		p	5		planks
		p	6		fence
	m	()Ljava/lang/String;	a	getName
	m	(I)Lelw$a;	a	byId
		p	0		id
	m	()Ldtc;	b	getWoodState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ldtc;	d	getPlanksState
	m	()Ldtc;	e	getFenceState
	m	()[Lelw$a;	f	$values
	f	Lelw$a;	a	NORMAL
	f	Lelw$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	Ldtc;	f	woodState
	f	Ldtc;	g	planksState
	f	Ldtc;	h	fenceState
	f	[Lelw$a;	i	$VALUES
c	elx	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	m	(Lelx$n;Lejw;Layw;IIILji;I)Lelx$m;	a	findAndCreateBridgePieceFactory
		p	0		pieceData
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	[Lelx$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Lelx$n;	e	CASTLE_PIECE_WEIGHTS
c	elx$1	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	elx$a	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$a
	m	(IILji;)V	<init>	<init>
		p	1		x
		p	2		z
		p	3		orientation
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$a;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$b	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$b
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejw;Layw;IIILji;I)Lelx$b;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
c	elx$c	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$c
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lelx$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$d	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$d
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$d;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$e	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$e
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$e;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$f	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$f
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lelx$f;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$g	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$g
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$h	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$h
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lelx$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	elx$i	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$i
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$i;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$j	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$j
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lelx$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
c	elx$k	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$k
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$k;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainlength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$l	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$l
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejw;IIIILji;)Lelx$l;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainLength
		p	5		orientation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	elx$m	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$m
	m	(Leki;ILejj;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lejj;)Z	a	isOkBox
		p	0		boundingBox
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lelx$q;Lejw;Layw;IIILji;IZ)Lejv;	a	generateAndAddPiece
		p	1		start
		p	2		holder
		p	3		random
		p	4		x
		p	5		y
		p	6		z
		p	7		orientation
		p	8		chainLength
		p	9		inside
	m	(Lelx$q;Lejw;Layw;IIZ)Lejv;	a	generateChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
		p	6		inside
	m	(Lelx$q;Ljava/util/List;Lejw;Layw;IIILji;I)Lelx$m;	a	generatePiece
		p	1		start
		p	2		possiblePieces
		p	3		holder
		p	4		random
		p	5		x
		p	6		y
		p	7		z
		p	8		orientation
		p	9		chainLength
	m	(Ljava/util/List;)I	a	updatePieceWeight
		p	1		possiblePieces
	m	(Lelx$q;Lejw;Layw;IIZ)Lejv;	b	generateChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
	m	(Lelx$q;Lejw;Layw;IIZ)Lejv;	c	generateChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
		p	6		inside
c	elx$n	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$n
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(Ljava/lang/Class;IIZ)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
		p	4		repeatable
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
c	elx$o	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$o
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lelx$o;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$p	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$p
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIIILji;)Lelx$p;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		chainlength
		p	5		orientation
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	elx$q	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$q
	m	(Layw;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	f	Lelx$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
c	ely	net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Leka;	e	type
	f	Lbpf;	d	FORTRESS_ENEMIES
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
c	elz	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	m	(Lenu;Lejw;Layw;Ljd;)V	a	addPieces
		p	0		manager
		p	1		holder
		p	2		random
		p	3		pos
	f	[Lakr;	a	FOSSILS
c	elz$a	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$a
	m	(Lenu;Lakr;Ljd;Ldmm;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldmm;)Lenp;	a	makeSettings
		p	0		rotation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Lakr;)Lenp;	a	lambda$new$0
		p	1		id
c	ema	net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	m	(Lejr$c;Lehx;)V	<init>	<init>
		p	1		config
		p	2		height
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Ldzx;Ljd;Lekj;)V	a	lambda$findGenerationPoint$2
		p	0		collector
		p	3		holder
	m	(Lema;)Lehx;	a	lambda$static$0
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lehx;	e	height
c	emb	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
c	emb$1	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	emb$a	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$a
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$b	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$b
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$c	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$c
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$d	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$d
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$e	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$e
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$f	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$f
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$g	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$g
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$h	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$h
	m	(Layw;IILji;)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Layw;Lejj;)V	a	generateEntranceArchs
		p	1		world
		p	2		random
		p	3		box
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(ZILdds;Layw;Lejj;)V	a	generateWing
		p	1		side
		p	2		start
		p	3		world
		p	4		random
		p	5		box
	m	(Layw;)Ljava/util/List;	b	generateRoomGraph
		p	1		random
	m	(Ldds;Layw;Lejj;)V	b	generateEntranceWall
		p	1		world
		p	2		random
		p	3		box
	m	(Ldds;Layw;Lejj;)V	c	generateRoofPiece
		p	1		world
		p	2		random
		p	3		box
	m	(Ldds;Layw;Lejj;)V	d	generateLowerWall
		p	1		world
		p	2		random
		p	3		box
	m	(Ldds;Layw;Lejj;)V	e	generateMiddleWall
		p	1		world
		p	2		random
		p	3		box
	m	(Ldds;Layw;Lejj;)V	f	generateUpperWall
		p	1		world
		p	2		random
		p	3		box
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	F	TOP_POSITION
	f	Lemb$v;	G	sourceRoom
	f	Lemb$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	f	I	a	BIOME_RANGE_CHECK
c	emb$i	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$i
	m	(Lemb$v;)Z	a	fits
		p	1		setting
	m	(Lji;Lemb$v;Layw;)Lemb$r;	a	create
		p	1		direction
		p	2		setting
		p	3		random
c	emb$j	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$j
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$k	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$k
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$l	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$l
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$m	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$m
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$n	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$n
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$o	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$o
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$p	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$p
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$q	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$q
	m	(Lji;Lejj;)V	<init>	<init>
		p	1		orientation
		p	2		box
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$r	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$r
	m	(Leki;ILji;Lemb$v;III)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		orientation
		p	4		setting
		p	5		x
		p	6		y
		p	7		z
	m	(Leki;Lji;ILejj;)V	<init>	<init>
		p	1		type
		p	2		orientation
		p	3		length
		p	4		box
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldds;Lejj;III)V	a	spawnElder
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
	m	(Ldds;Lejj;IIIIIILdtc;)V	a	generateBoxOnFillOnly
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
		p	9		state
	m	(Ldds;Lejj;IIZ)V	a	generateDefaultFloor
		p	1		world
		p	2		box
		p	3		x
		p	4		z
		p	5		neighbor
	m	(Lejj;IIII)Z	a	chunkIntersects
		p	1		box
		p	2		x1
		p	3		z1
		p	4		x2
		p	5		z2
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lji;Lemb$v;III)Lejj;	a	makeBoundingBox
		p	0		orientation
		p	1		setting
		p	2		x
		p	3		y
		p	4		z
	m	(Ldds;Lejj;IIIIII)V	b	generateWaterBox
		p	1		world
		p	2		box
		p	3		x
		p	4		y
		p	5		z
		p	6		width
		p	7		height
		p	8		depth
	m	(III)I	c	getRoomIndex
		p	0		x
		p	1		y
		p	2		z
	f	I	A	PENTHOUSE_INDEX
	f	Lemb$v;	B	roomDefinition
	f	Ldtc;	b	BASE_GRAY
	f	Ldtc;	c	BASE_LIGHT
	f	Ldtc;	d	BASE_BLACK
	f	Ldtc;	h	DOT_DECO_DATA
	f	Ldtc;	i	LAMP_BLOCK
	f	Z	j	DO_FILL
	f	Ldtc;	k	FILL_BLOCK
	f	Ljava/util/Set;	l	FILL_KEEP
	f	I	m	GRIDROOM_WIDTH
	f	I	n	GRIDROOM_DEPTH
	f	I	o	GRIDROOM_HEIGHT
	f	I	p	GRID_WIDTH
	f	I	q	GRID_DEPTH
	f	I	r	GRID_HEIGHT
	f	I	s	GRID_FLOOR_COUNT
	f	I	t	GRID_SIZE
	f	I	u	GRIDROOM_SOURCE_INDEX
	f	I	v	GRIDROOM_TOP_CONNECT_INDEX
	f	I	w	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	x	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	y	LEFTWING_INDEX
	f	I	z	RIGHTWING_INDEX
c	emb$s	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$s
	m	(Lji;Lemb$v;Layw;)V	<init>	<init>
		p	1		orientation
		p	2		setting
		p	3		random
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	emb$t	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$t
	m	(Lji;Lemb$v;)V	<init>	<init>
		p	1		orientation
		p	2		setting
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
c	emb$u	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$u
	m	(Lji;Lejj;I)V	<init>	<init>
		p	1		orientation
		p	2		box
		p	3		wing
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	f	I	a	mainDesign
c	emb$v	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$v
	m	(I)V	<init>	<init>
		p	1		index
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
		p	1		distance
	m	(Lji;Lemb$v;)V	a	setConnection
		p	1		orientation
		p	2		setting
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
	f	I	a	index
	f	[Lemb$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
c	emc	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Ldcd;JLekg;)Lekg;	a	regeneratePiecesAfterLoad
		p	0		pos
		p	1		worldSeed
		p	3		pieces
	m	(Ldcd;Ldzx;)Lejv;	a	createTopPiece
		p	0		pos
		p	1		random
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	emd	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	m	(Layw;)Lakr;	a	getSmallWarmRuin
		p	0		random
	m	(Layw;Ljd;)Ljava/util/List;	a	allPositions
		p	0		random
		p	1		pos
	m	(Ldfy;Ldfy;Lakq;)Lenq;	a	archyRuleProcessor
		p	0		baseBlock
		p	1		suspiciousBlock
		p	2		lootTable
	m	(Lenu;Layw;Ldmm;Ljd;Leme;Lejw;)V	a	addClusterRuins
		p	0		manager
		p	1		random
		p	2		rotation
		p	3		pos
		p	4		structure
		p	5		pieces
	m	(Lenu;Ljd;Ldmm;Lejw;Layw;Leme;)V	a	addPieces
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
	m	(Lenu;Ljd;Ldmm;Lejw;Layw;Leme;ZF)V	a	addPiece
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		structure
		p	6		large
		p	7		integrity
	m	(Layw;)Lakr;	b	getBigWarmRuin
		p	0		random
	f	Lenq;	a	WARM_SUSPICIOUS_BLOCK_PROCESSOR
	f	Lenq;	b	COLD_SUSPICIOUS_BLOCK_PROCESSOR
	f	[Lakr;	c	WARM_RUINS
	f	[Lakr;	d	RUINS_BRICK
	f	[Lakr;	e	RUINS_CRACKED
	f	[Lakr;	f	RUINS_MOSSY
	f	[Lakr;	g	BIG_RUINS_BRICK
	f	[Lakr;	h	BIG_RUINS_MOSSY
	f	[Lakr;	i	BIG_RUINS_CRACKED
	f	[Lakr;	j	BIG_WARM_RUINS
c	emd$1	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
c	emd$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$a
	m	(Lenu;Lakr;Ljd;Ldmm;FLeme$a;Z)V	<init>	<init>
		p	1		structureTemplateManager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		integrity
		p	6		biomeType
		p	7		large
	m	(Lenu;Lub;Ldmm;FLeme$a;Z)V	<init>	<init>
		p	1		holder
		p	2		nbt
		p	3		rotation
		p	4		integrity
		p	5		biomeType
		p	6		large
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldmm;FLeme$a;)Lenp;	a	makeSettings
		p	0		rotation
		p	1		integrity
		p	2		temperature
	m	(Ldmm;FLeme$a;Lakr;)Lenp;	a	lambda$new$0
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lenu;Lub;)Lemd$a;	a	create
		p	0		structureTemplateManager
		p	1		nbt
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Ljd;Ldcc;Ljd;)I	a	getHeight
		p	1		start
		p	2		world
		p	3		end
	f	Leme$a;	h	biomeType
	f	F	i	integrity
	f	Z	j	isLarge
c	eme	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	m	(Lejr$c;Leme$a;FF)V	<init>	<init>
		p	1		config
		p	2		biomeTemperature
		p	3		largeProbability
		p	4		clusterProbability
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$4
		p	2		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Leme;)Ljava/lang/Float;	a	lambda$static$2
		p	0		structure
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Leme;)Ljava/lang/Float;	b	lambda$static$1
		p	0		structure
	m	(Leme;)Leme$a;	c	lambda$static$0
		p	0		structure
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Leme$a;	e	biomeTemp
	f	F	f	largeProbability
	f	F	g	clusterProbability
c	eme$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getName
	m	()[Leme$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leme$a;	a	WARM
	f	Leme$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Leme$a;	e	$VALUES
c	emf	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	m	(Lenu;Ljd;Lemf$b;Lemf$a;Lakr;Lent;Ldmm;Ldkv;Ljd;)V	<init>	<init>
		p	1		manager
		p	2		pos
		p	3		verticalPlacement
		p	4		properties
		p	5		id
		p	6		template
		p	7		rotation
		p	8		mirror
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Layw;Ldcx;)V	a	addNetherrackDripColumnsBelowPortal
		p	1		random
		p	2		world
	m	(Layw;Ldcx;Ljd;)V	a	maybeAddVines
		p	1		random
		p	2		world
		p	3		pos
	m	(Layw;Ldds;Ljd;)V	a	lambda$postProcess$2
		p	3		pos
	m	(Ldcx;IILemf$b;)I	a	getSurfaceY
		p	0		world
		p	1		x
		p	2		y
		p	3		verticalPlacement
	m	(Ldcx;Ljd;)Z	a	canBlockBeReplacedByNetherrackOrMagma
		p	1		world
		p	2		pos
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldfy;FLdfy;)Leni;	a	getBlockReplaceRule
		p	0		old
		p	1		chance
		p	2		updated
	m	(Ldfy;Ldfy;)Leni;	a	getBlockReplaceRule
		p	0		old
		p	1		updated
	m	(Ldkv;Ldmm;Lemf$b;Ljd;Lemf$a;)Lenp;	a	makeSettings
		p	0		mirror
		p	1		rotation
		p	2		verticalPlacement
		p	3		pos
		p	4		properties
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lemf$b;)Ldyy$a;	a	getHeightMapType
		p	0		verticalPlacement
	m	(Lemf$b;Lemf$a;)Leni;	a	getLavaProcessorRule
		p	0		verticalPlacement
		p	1		properties
	m	(Lenu;Lub;Lakr;)Lenp;	a	makeSettings
		p	0		manager
		p	1		nbt
		p	2		id
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Luy;)V	a	lambda$addAdditionalSaveData$1
	m	(Layw;Ldcx;)V	b	spreadNetherrack
		p	1		random
		p	2		world
	m	(Layw;Ldcx;Ljd;)V	b	maybeAddLeavesAbove
		p	1		random
		p	2		world
		p	3		pos
	m	(Lenu;Lub;Lakr;)Lenp;	b	lambda$new$0
		p	2		id
	m	(Layw;Ldcx;Ljd;)V	c	addNetherrackDripColumn
		p	1		random
		p	2		world
		p	3		pos
	m	(Layw;Ldcx;Ljd;)V	d	placeNetherrackOrMagma
		p	1		random
		p	2		world
		p	3		pos
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	F	i	PROBABILITY_OF_GOLD_GONE
	f	F	j	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	k	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	Lemf$b;	l	verticalPlacement
	f	Lemf$a;	m	properties
c	emf$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$a
	m	(ZFZZZZ)V	<init>	<init>
		p	1		cold
		p	2		mossiness
		p	3		airPocket
		p	4		overgrown
		p	5		vines
		p	6		replaceWithBlackstone
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
		p	0		instance
	m	(Lemf$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Lemf$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Lemf$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Lemf$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Lemf$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Lemf$a;)Ljava/lang/Boolean;	f	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
c	emf$b	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lemf$b;	a	byName
		p	0		id
	m	()[Lemf$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lemf$b;	a	ON_LAND_SURFACE
	f	Lemf$b;	b	PARTLY_BURIED
	f	Lemf$b;	c	ON_OCEAN_FLOOR
	f	Lemf$b;	d	IN_MOUNTAIN
	f	Lemf$b;	e	UNDERGROUND
	f	Lemf$b;	f	IN_NETHER
	f	Lazk$a;	g	CODEC
	f	Ljava/lang/String;	h	name
	f	[Lemf$b;	i	$VALUES
c	emg	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	m	(Lejr$c;Lemg$a;)V	<init>	<init>
		p	1		config
		p	2		setup
	m	(Lejr$c;Ljava/util/List;)V	<init>	<init>
		p	1		config
		p	2		setups
	m	(Layw;II)I	a	getRandomWithinInterval
		p	0		random
		p	1		min
		p	2		max
	m	(Layw;Lduz;Lemf$b;ZIILejj;Ldcy;Ldzm;)I	a	findSuitableY
		p	0		random
		p	1		chunkGenerator
		p	2		verticalPlacement
		p	3		airPocket
		p	4		height
		p	5		blockCountY
		p	6		box
		p	7		world
		p	8		noiseConfig
	m	(Lduz;Ldcy;Ldzm;Ljd;)Lddi;	a	lambda$findSuitableY$3
		p	3		pos
	m	(Ldzx;F)Z	a	sample
		p	0		random
		p	1		probability
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lemg$a;Lemf$a;Ljd;Lejr$a;Ldzm;Lakr;Lent;Ldmm;Ldkv;Ljd;Lekj;)V	a	lambda$findGenerationPoint$2
		p	10		collector
	m	(Lemg;)Ljava/util/List;	a	lambda$static$0
		p	0		structure
	m	(Ljd;Ljm;)Z	a	isCold
		p	0		pos
		p	1		biome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	[Ljava/lang/String;	e	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	f	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	g	PROBABILITY_OF_GIANT_PORTAL
	f	I	h	MIN_Y_INDEX
	f	Ljava/util/List;	i	setups
c	emg$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$a
	m	()Lemf$b;	a	placement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()F	b	airPocketProbability
	m	()F	c	mossiness
	m	()Z	d	overgrown
	m	()Z	e	vines
	m	()Z	f	canBeCold
	m	()Z	g	replaceWithBlackstone
	m	()F	h	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lemf$b;	b	placement
	f	F	c	airPocketProbability
	f	F	d	mossiness
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	canBeCold
	f	Z	h	replaceWithBlackstone
	f	F	i	weight
c	emh	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	m	(Lenu;Ljd;Ldmm;Lejw;Layw;Z)Lemh$a;	a	addRandomPiece
		p	0		structureTemplateManager
		p	1		pos
		p	2		rotation
		p	3		holder
		p	4		random
		p	5		beached
	f	I	a	NUMBER_OF_BLOCKS_ALLOWED_IN_WORLD_GEN_REGION
	f	Ljd;	b	PIVOT
	f	[Lakr;	c	STRUCTURE_LOCATION_BEACHED
	f	[Lakr;	d	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	e	MARKERS_TO_LOOT
c	emh$a	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$a
	m	(Lenu;Lakr;Ljd;Ldmm;Z)V	<init>	<init>
		p	1		manager
		p	2		identifier
		p	3		pos
		p	4		rotation
		p	5		grounded
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(ILayw;)I	a	calculateBeachedPosition
		p	1		y
		p	2		random
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Ldmm;)Lenp;	a	makeSettings
		p	0		rotation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Lakr;)Lenp;	a	lambda$new$0
		p	1		id
	m	(I)V	c	adjustPositionHeight
		p	1		y
	m	()Z	l	isTooBigToFitInWorldGenRegion
	f	Z	h	isBeached
c	emi	net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	m	(Lejr$c;Z)V	<init>	<init>
		p	1		config
		p	2		beached
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$2
		p	2		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	1		collector
		p	2		context
	m	(Lemi;)Ljava/lang/Boolean;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Z	e	isBeached
c	emj	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	m	()V	a	resetPieces
	m	(Lemj$m;Lejw;Layw;IIILji;I)Lemj$p;	a	generatePieceFromSmallDoor
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	(Ljava/lang/Class;Lejw;Layw;IIILji;I)Lemj$p;	a	findAndCreatePieceFactory
		p	0		pieceType
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	m	()Z	b	updatePieceWeight
	m	(Lemj$m;Lejw;Layw;IIILji;I)Lejv;	b	generateAndAddPiece
		p	0		start
		p	1		holder
		p	2		random
		p	3		x
		p	4		y
		p	5		z
		p	6		orientation
		p	7		chainLength
	f	I	a	MAGIC_START_Y
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	[Lemj$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Lemj$k;	k	SMOOTH_STONE_SELECTOR
c	emj$1	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	emj$2	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	(I)Z	a	doPlace
		p	1		chainLength
c	emj$3	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	emj$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$a
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$a;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainlength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
c	emj$b	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$b
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejw;Layw;IIILji;)Lejj;	a	findPieceBox
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	steps
c	emj$c	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$c
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$c;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	i	leftHigh
	f	Z	j	rightLow
	f	Z	k	rightHigh
c	emj$d	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$d
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$d;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	emj$e	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$e
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejw;Layw;IIILji;I)Lemj$e;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	i	isTall
c	emj$f	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$f
	m	(Ljava/lang/Class;II)V	<init>	<init>
		p	1		pieceType
		p	2		weight
		p	3		limit
	m	()Z	a	isValid
	m	(I)Z	a	doPlace
		p	1		chainLength
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
c	emj$g	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$g
	m	(ILejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		boundingBox
		p	3		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;IIILji;I)Lemj$g;	a	createPiece
		p	0		holder
		p	1		x
		p	2		y
		p	3		z
		p	4		orientation
		p	5		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
c	emj$h	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$h
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$h;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	emj$i	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$i
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$i;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
c	emj$j	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$j
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$j;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
c	emj$k	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$k
	m	(Layw;IIIZ)V	a	next
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		placeBlock
c	emj$l	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$l
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Leki;IIILji;)V	<init>	<init>
		p	1		structurePieceType
		p	2		chainLength
		p	3		x
		p	4		z
		p	5		orientation
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$l;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
c	emj$m	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$m
	m	(Layw;II)V	<init>	<init>
		p	1		random
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	()Ljd;	h	getLocatorPosition
	f	Lemj$f;	a	previousPiece
	f	Lemj$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
c	emj$n	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$n
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$n;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	i	rightChild
c	emj$o	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$o
	m	(ILayw;Lejj;Lji;)V	<init>	<init>
		p	1		chainLength
		p	2		random
		p	3		boundingBox
		p	4		orientation
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lejv;Lejw;Layw;)V	a	addChildren
		p	1		start
		p	2		holder
		p	3		random
	m	(Lejw;Layw;IIILji;I)Lemj$o;	a	createPiece
		p	0		holder
		p	1		random
		p	2		x
		p	3		y
		p	4		z
		p	5		orientation
		p	6		chainLength
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	emj$p	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$p
	m	(Leki;ILejj;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	m	(Ldds;Layw;Lejj;Lemj$p$a;III)V	a	generateSmallDoor
		p	1		world
		p	2		random
		p	3		boundingBox
		p	4		type
		p	5		x
		p	6		y
		p	7		z
	m	(Lejj;)Z	a	isOkBox
		p	0		boundingBox
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Lemj$m;Lejw;Layw;II)Lejv;	a	generateSmallDoorChildForward
		p	1		start
		p	2		holder
		p	3		random
		p	4		leftRightOffset
		p	5		heightOffset
	m	(Layw;)Lemj$p$a;	b	randomSmallDoor
		p	1		random
	m	(Lemj$m;Lejw;Layw;II)Lejv;	b	generateSmallDoorChildLeft
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	m	(Lemj$m;Lejw;Layw;II)Lejv;	c	generateSmallDoorChildRight
		p	1		start
		p	2		holder
		p	3		random
		p	4		heightOffset
		p	5		leftRightOffset
	f	Lemj$p$a;	h	entryDoor
c	emj$p$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$p$a
	m	()[Lemj$p$a;	a	$values
	f	Lemj$p$a;	a	OPENING
	f	Lemj$p$a;	b	WOOD_DOOR
	f	Lemj$p$a;	c	GRATES
	f	Lemj$p$a;	d	IRON_DOOR
	f	[Lemj$p$a;	e	$VALUES
c	emj$q	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$q
	m	(Leki;ILejj;)V	<init>	<init>
		p	1		type
		p	2		length
		p	3		boundingBox
	m	(Leki;Lub;)V	<init>	<init>
		p	1		type
		p	2		nbt
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
c	emk	net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	eml	net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	m	(Layw;II)V	<init>	<init>
		p	1		random
		p	2		x
		p	3		z
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	(Lddl;Lejj;)V	a	spawnCat
		p	1		world
		p	2		box
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Ljd;)V	a	postProcess
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		chunkBox
		p	6		chunkPos
		p	7		pivot
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	f	Z	h	spawnedWitch
	f	Z	i	spawnedCat
c	emm	net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Lekj;)V	a	lambda$findGenerationPoint$0
		p	1		collector
	m	(Lekj;Lejr$a;)V	a	generatePieces
		p	0		collector
		p	1		context
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	emn	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	m	(Lenu;Ljd;Ldmm;Ljava/util/List;Layw;)V	a	generateMansion
		p	0		manager
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		random
c	emn$a	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$a
	m	(Layw;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Layw;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Layw;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	emn$b	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$b
	m	(Layw;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Layw;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Layw;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	emn$c	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$c
	m	(Layw;)V	<init>	<init>
		p	1		random
	m	()V	a	setupThirdFloor
	m	(Lemn$g;)Z	a	cleanEdges
		p	1		layout
	m	(Lemn$g;II)Z	a	isHouse
		p	0		layout
		p	1		i
		p	2		j
	m	(Lemn$g;IIII)Z	a	isRoomId
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	m	(Lemn$g;IILji;I)V	a	recursiveCorridor
		p	1		layout
		p	2		i
		p	3		j
		p	4		direction
		p	5		length
	m	(Lemn$g;Lemn$g;)V	a	identifyRooms
		p	1		layout
		p	2		roomFlags
	m	(Lemn$g;IIII)Lji;	b	get1x2RoomDirection
		p	1		layout
		p	2		i
		p	3		j
		p	4		floor
		p	5		roomId
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Layw;	q	random
	f	Lemn$g;	r	baseGrid
	f	Lemn$g;	s	thirdFloorGrid
	f	[Lemn$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
c	emn$d	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$d
	m	(Lenu;Layw;)V	<init>	<init>
		p	1		manager
		p	2		random
	m	(Ljava/util/List;Lemn$e;)V	a	entrance
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Lemn$e;Lemn$g;Lji;IIII)V	a	traverseOuterWalls
		p	1		pieces
		p	2		wallPiece
		p	3		layout
		p	4		direction
		p	5		startI
		p	6		startJ
		p	7		endI
		p	8		endJ
	m	(Ljava/util/List;Ljd;Ldmm;Lemn$b;)V	a	addRoom2x2Secret
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		pool
	m	(Ljava/util/List;Ljd;Ldmm;Lemn$g;Lemn$g;)V	a	createRoof
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		layout
		p	5		nextFloorLayout
	m	(Ljava/util/List;Ljd;Ldmm;Lji;Lemn$b;)V	a	addRoom1x1
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		direction
		p	5		pool
	m	(Ljava/util/List;Ljd;Ldmm;Lji;Lji;Lemn$b;)V	a	addRoom2x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
	m	(Ljava/util/List;Ljd;Ldmm;Lji;Lji;Lemn$b;Z)V	a	addRoom1x2
		p	1		pieces
		p	2		pos
		p	3		rotation
		p	4		connectedRoomDirection
		p	5		entranceDirection
		p	6		pool
		p	7		staircase
	m	(Ljd;Ldmm;Ljava/util/List;Lemn$c;)V	a	createMansion
		p	1		pos
		p	2		rotation
		p	3		pieces
		p	4		parameters
	m	(Ljava/util/List;Lemn$e;)V	b	traverseWallPiece
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Lemn$e;)V	c	traverseTurn
		p	1		pieces
		p	2		wallPiece
	m	(Ljava/util/List;Lemn$e;)V	d	traverseInnerTurn
		p	1		pieces
		p	2		wallPiece
	f	Lenu;	a	structureTemplateManager
	f	Layw;	b	random
	f	I	c	startX
	f	I	d	startY
c	emn$e	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$e
	f	Ldmm;	a	rotation
	f	Ljd;	b	position
	f	Ljava/lang/String;	c	wallType
c	emn$f	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$f
	m	(Layw;)Ljava/lang/String;	a	get1x1
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	a	get1x2SideEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	b	get1x1Secret
		p	1		random
	m	(Layw;Z)Ljava/lang/String;	b	get1x2FrontEntrance
		p	1		random
		p	2		staircase
	m	(Layw;)Ljava/lang/String;	c	get1x2Secret
		p	1		random
	m	(Layw;)Ljava/lang/String;	d	get2x2
		p	1		random
	m	(Layw;)Ljava/lang/String;	e	get2x2Secret
		p	1		random
c	emn$g	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$g
	m	(III)V	<init>	<init>
		p	1		n
		p	2		m
		p	3		fallback
	m	(II)I	a	get
		p	1		i
		p	2		j
	m	(III)V	a	set
		p	1		i
		p	2		j
		p	3		value
	m	(IIII)V	a	setif
		p	1		i
		p	2		j
		p	3		expected
		p	4		newValue
	m	(IIIII)V	a	set
		p	1		i0
		p	2		j0
		p	3		i1
		p	4		j1
		p	5		value
	m	(III)Z	b	edgesTo
		p	1		i
		p	2		j
		p	3		value
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
c	emn$h	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$h
c	emn$i	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$i
	m	(Lenu;Ljava/lang/String;Ljd;Ldmm;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
	m	(Lenu;Ljava/lang/String;Ljd;Ldmm;Ldkv;)V	<init>	<init>
		p	1		manager
		p	2		template
		p	3		pos
		p	4		rotation
		p	5		mirror
	m	(Lenu;Lub;)V	<init>	<init>
		p	1		manager
		p	2		nbt
	m	(Ldkv;Ldmm;)Lenp;	a	makeSettings
		p	0		mirror
		p	1		rotation
	m	(Lekh;Lub;)V	a	addAdditionalSaveData
		p	1		context
		p	2		nbt
	m	(Ljava/lang/String;)Lakr;	a	makeLocation
		p	0		identifier
	m	(Ljava/lang/String;Ljd;Lddl;Layw;Lejj;)V	a	handleDataMarker
		p	1		metadata
		p	2		pos
		p	3		world
		p	4		random
		p	5		boundingBox
	m	(Lub;Lakr;)Lenp;	a	lambda$new$0
		p	1		id
	m	()Lakr;	b	makeTemplateLocation
c	emo	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	m	(Lejr$c;)V	<init>	<init>
		p	1		config
	m	(Ldds;Lddq;Lduz;Layw;Lejj;Ldcd;Lekg;)V	a	afterPlace
		p	1		world
		p	2		structureAccessor
		p	3		chunkGenerator
		p	4		random
		p	5		box
		p	6		chunkPos
		p	7		pieces
	m	(Lejr$a;)Ljava/util/Optional;	a	findGenerationPoint
		p	1		context
	m	(Lejr$a;Ljd;Ldmm;Lekj;)V	a	lambda$findGenerationPoint$0
		p	4		collector
	m	(Lekj;Lejr$a;Ljd;Ldmm;)V	a	generatePieces
		p	1		collector
		p	2		context
		p	3		pos
		p	4		rotation
	m	()Leka;	e	type
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
c	emq	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTrue
	m	()Leno;	a	getType
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	()Lemq;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lemq;	b	INSTANCE
c	emr	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestAxisAlignedLinear
	m	(FFIILji$a;)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
		p	5		axis
	m	()Lenh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lemr;)Lji$a;	a	lambda$static$4
		p	0		ruleTest
	m	(Ljd;Ljd;Ljd;Layw;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Lemr;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		ruleTest
	m	(Lemr;)Ljava/lang/Integer;	c	lambda$static$2
		p	0		ruleTest
	m	(Lemr;)Ljava/lang/Float;	d	lambda$static$1
		p	0		ruleTest
	m	(Lemr;)Ljava/lang/Float;	e	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Lji$a;	g	axis
c	ems	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlackstoneReplace
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
		p	0		replacements
	m	()Lems;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lems;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
c	emt	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockAge
	m	(F)V	<init>	<init>
		p	1		mossiness
	m	()Lens;	a	getType
	m	(Layw;)Ldtc;	a	maybeReplaceFullStoneBlock
		p	1		random
	m	(Layw;Ldfy;)Ldtc;	a	getRandomFacingStairs
		p	0		random
		p	1		stairs
	m	(Layw;Ldtc;)Ldtc;	a	maybeReplaceStairs
		p	1		random
		p	2		state
	m	(Layw;[Ldtc;)Ldtc;	a	getRandomBlock
		p	0		random
		p	1		states
	m	(Layw;[Ldtc;[Ldtc;)Ldtc;	a	getRandomBlock
		p	1		random
		p	2		regularStates
		p	3		mossyStates
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lemt;)Ljava/lang/Float;	a	lambda$static$0
		p	0		processor
	m	(Layw;)Ldtc;	b	maybeReplaceSlab
		p	1		random
	m	(Layw;)Ldtc;	c	maybeReplaceWall
		p	1		random
	m	(Layw;)Ldtc;	d	maybeReplaceObsidian
		p	1		random
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Ldtc;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
c	emu	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorBlockIgnore
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		blocks
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lemu;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lemu;	b	STRUCTURE_BLOCK
	f	Lemu;	c	AIR
	f	Lemu;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
c	emv	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlock
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	()Leno;	a	getType
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	(Lemv;)Ldfy;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfy;	b	block
c	emw	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRotation
	m	(F)V	<init>	<init>
		p	1		integrity
	m	(Ljava/util/Optional;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	(Ljq;F)V	<init>	<init>
		p	1		rottableBlocks
		p	2		integrity
	m	()Lens;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lemw;)Ljava/lang/Float;	a	lambda$static$1
		p	0		processor
	m	(Lemw;)Ljava/util/Optional;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	rottableBlocks
	f	F	c	integrity
c	emx	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestBlockState
	m	(Ldtc;)V	<init>	<init>
		p	1		blockState
	m	()Leno;	a	getType
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	(Lemx;)Ldtc;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtc;	b	blockState
c	emy	net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor
	m	(Lenq;Lbpw;)V	<init>	<init>
		p	1		delegate
		p	2		limit
	m	()Lens;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lddl;Ljd;Ljd;Ljava/util/List;Ljava/util/List;Lenp;)Ljava/util/List;	a	finalizeProcessing
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfos
		p	5		currentBlockInfos
		p	6		data
	m	(Lemy;)Lbpw;	a	lambda$static$1
		p	0		processor
	m	(Lemy;)Lenq;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lenq;	b	delegate
	f	Lbpw;	c	limit
c	emz	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorGravity
	m	(Ldyy$a;I)V	<init>	<init>
		p	1		heightmap
		p	2		offset
	m	()Lens;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lemz;)Ljava/lang/Integer;	a	lambda$static$1
		p	0		processor
	m	(Lemz;)Ldyy$a;	b	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldyy$a;	b	heightmap
	f	I	c	offset
c	ena	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorJigsawReplacement
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Lena;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lena;	b	INSTANCE
	f	Lorg/slf4j/Logger;	c	LOGGER
c	enb	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorLavaSubmergedBlock
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	()Lenb;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lenb;	b	INSTANCE
c	enc	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestLinear
	m	(FFII)V	<init>	<init>
		p	1		minChance
		p	2		maxChance
		p	3		minDistance
		p	4		maxDistance
	m	()Lenh;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lenc;)Ljava/lang/Integer;	a	lambda$static$3
		p	0		ruleTest
	m	(Ljd;Ljd;Ljd;Layw;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	(Lenc;)Ljava/lang/Integer;	b	lambda$static$2
		p	0		ruleTest
	m	(Lenc;)Ljava/lang/Float;	c	lambda$static$1
		p	0		ruleTest
	m	(Lenc;)Ljava/lang/Float;	d	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
c	end	net/minecraft/world/level/levelgen/structure/templatesystem/LiquidSettings
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()[Lend;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lend;	a	IGNORE_WATERLOGGING
	f	Lend;	b	APPLY_WATERLOGGING
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lend;	e	$VALUES
c	ene	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorNop
	m	()Lens;	a	getType
	m	()Lene;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lene;	b	INSTANCE
c	enf	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestTrue
	m	()Lenh;	a	getType
	m	(Ljd;Ljd;Ljd;Layw;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	m	()Lenf;	b	lambda$static$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lenf;	b	INSTANCE
c	eng	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	m	()Lenh;	a	getType
	m	(Ljd;Ljd;Ljd;Layw;)Z	a	test
		p	1		originalPos
		p	2		currentPos
		p	3		pivot
		p	4		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	enh	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lenh;	a	register
		p	0		id
		p	1		codec
	f	Lenh;	a	ALWAYS_TRUE_TEST
	f	Lenh;	b	LINEAR_POS_TEST
	f	Lenh;	c	AXIS_ALIGNED_LINEAR_POS_TEST
c	eni	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorPredicates
	m	(Lenn;Lenn;Ldtc;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		state
	m	(Lenn;Lenn;Leng;Ldtc;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		state
	m	(Lenn;Lenn;Leng;Ldtc;Leob;)V	<init>	<init>
		p	1		inputPredicate
		p	2		locationPredicate
		p	3		positionPredicate
		p	4		outputState
		p	5		blockEntityModifier
	m	()Ldtc;	a	getOutputState
	m	(Layw;Lub;)Lub;	a	getOutputTag
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Ldtc;Ldtc;Ljd;Ljd;Ljd;Layw;)Z	a	test
		p	1		input
		p	2		currentState
		p	3		originalPos
		p	4		currentPos
		p	5		pivot
		p	6		random
	m	(Leni;)Leob;	a	lambda$static$4
		p	0		rule
	m	(Leni;)Ldtc;	b	lambda$static$3
		p	0		rule
	m	(Leni;)Leng;	c	lambda$static$2
		p	0		rule
	m	(Leni;)Lenn;	d	lambda$static$1
		p	0		rule
	m	(Leni;)Lenn;	e	lambda$static$0
		p	0		rule
	f	Leoa;	a	DEFAULT_BLOCK_ENTITY_MODIFIER
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lenn;	c	inputPredicate
	f	Lenn;	d	locPredicate
	f	Leng;	e	posPredicate
	f	Ldtc;	f	outputState
	f	Leob;	g	blockEntityModifier
c	enj	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	m	(Lawu;)V	<init>	<init>
		p	1		protectedBlocksTag
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lenj;)Lawu;	a	lambda$static$0
		p	0		processor
	f	Lawu;	a	cannotReplace
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	enk	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlock
	m	(Ldfy;F)V	<init>	<init>
		p	1		block
		p	2		probability
	m	()Leno;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	(Lenk;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Lenk;)Ldfy;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfy;	b	block
	f	F	d	probability
c	enl	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestRandomBlockState
	m	(Ldtc;F)V	<init>	<init>
		p	1		blockState
		p	2		probability
	m	()Leno;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	(Lenl;)Ljava/lang/Float;	a	lambda$static$1
		p	0		ruleTest
	m	(Lenl;)Ldtc;	b	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldtc;	b	blockState
	f	F	d	probability
c	enm	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessorRule
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		rules
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lenm;)Ljava/util/List;	a	lambda$static$0
		p	0		processor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
c	enn	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTest
	m	()Leno;	a	getType
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	eno	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureRuleTestType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leno;	a	register
		p	0		id
		p	1		codec
	f	Leno;	a	ALWAYS_TRUE_TEST
	f	Leno;	b	BLOCK_TEST
	f	Leno;	c	BLOCKSTATE_TEST
	f	Leno;	d	TAG_TEST
	f	Leno;	e	RANDOM_BLOCK_TEST
	f	Leno;	f	RANDOM_BLOCKSTATE_TEST
c	enp	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureInfo
	m	()Lenp;	a	copy
	m	(Layw;)Lenp;	a	setRandom
		p	1		random
	m	(Ldkv;)Lenp;	a	setMirror
		p	1		mirror
	m	(Ldmm;)Lenp;	a	setRotation
		p	1		rotation
	m	(Lejj;)Lenp;	a	setBoundingBox
		p	1		boundingBox
	m	(Lend;)Lenp;	a	setLiquidSettings
		p	1		liquidSettings
	m	(Lenq;)Lenp;	a	addProcessor
		p	1		processor
	m	(Ljava/util/List;Ljd;)Lent$a;	a	getRandomPalette
		p	1		infoLists
		p	2		pos
	m	(Ljd;)Lenp;	a	setRotationPivot
		p	1		position
	m	(Z)Lenp;	a	setIgnoreEntities
		p	1		ignoreEntities
	m	()Lenp;	b	clearProcessors
	m	(Lenq;)Lenp;	b	popProcessor
		p	1		processor
	m	(Ljd;)Layw;	b	getRandom
		p	1		pos
	m	(Z)Lenp;	b	setKnownShape
		p	1		updateNeighbors
	m	()Ldkv;	c	getMirror
	m	(Z)Lenp;	c	setFinalizeEntities
		p	1		initializeMobs
	m	()Ldmm;	d	getRotation
	m	()Ljd;	e	getRotationPivot
	m	()Z	f	isIgnoreEntities
	m	()Lejj;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldApplyWaterlogging
	m	()Z	k	shouldFinalizeEntities
	f	Ldkv;	a	mirror
	f	Ldmm;	b	rotation
	f	Ljd;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Lejj;	e	boundingBox
	f	Lend;	f	liquidSettings
	f	Layw;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
c	enq	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureProcessor
	m	()Lens;	a	getType
	m	(Ldcz;Ljd;Ljd;Lent$c;Lent$c;Lenp;)Lent$c;	a	processBlock
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfo
		p	5		currentBlockInfo
		p	6		data
	m	(Lddl;Ljd;Ljd;Ljava/util/List;Ljava/util/List;Lenp;)Ljava/util/List;	a	finalizeProcessing
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		originalBlockInfos
		p	5		currentBlockInfos
		p	6		data
c	enr	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		list
	m	()Ljava/util/List;	a	list
	f	Ljava/util/List;	a	list
c	ens	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureStructureProcessorType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lens;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Lens;	e	BLOCK_IGNORE
	f	Lens;	f	BLOCK_ROT
	f	Lens;	g	GRAVITY
	f	Lens;	h	JIGSAW_REPLACEMENT
	f	Lens;	i	RULE
	f	Lens;	j	NOP
	f	Lens;	k	BLOCK_AGE
	f	Lens;	l	BLACKSTONE_REPLACE
	f	Lens;	m	LAVA_SUBMERGED_BLOCK
	f	Lens;	n	PROTECTED_BLOCKS
	f	Lens;	o	CAPPED
c	ent	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure
	m	()Lkh;	a	getSize
	m	(Lbsr;)Z	a	lambda$fillEntityList$3
		p	0		entity
	m	(Ldcw;Ljd;Ljd;)V	a	fillEntityList
		p	1		world
		p	2		firstCorner
		p	3		secondCorner
	m	(Ldcw;Ljd;Lkh;ZLdfy;)V	a	fillFromWorld
		p	1		world
		p	2		start
		p	3		dimensions
		p	4		includeEntities
		p	5		ignoredBlock
	m	(Ldcx;ILexl;III)V	a	updateShapeAtEdge
		p	0		world
		p	1		flags
		p	2		set
		p	3		startX
		p	4		startY
		p	5		startZ
	m	(Ldcx;ILexl;Ljd;)V	a	updateShapeAtEdge
		p	0		world
		p	1		flags
		p	2		set
		p	3		startPos
	m	(Lddl;Ljd;Ldkv;Ldmm;Ljd;Lejj;Z)V	a	placeEntities
		p	1		world
		p	2		pos
		p	3		mirror
		p	4		rotation
		p	5		pivot
		p	6		area
		p	7		initializeMobs
	m	(Lddl;Ljd;Ljd;Lenp;Layw;I)Z	a	placeInWorld
		p	1		world
		p	2		pos
		p	3		pivot
		p	4		placementData
		p	5		random
		p	6		flags
	m	(Lddl;Ljd;Ljd;Lenp;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
		p	0		world
		p	1		pos
		p	2		pivot
		p	3		placementData
		p	4		infos
	m	(Lddl;Lub;)Ljava/util/Optional;	a	createEntityIgnoreException
		p	0		world
		p	1		nbt
	m	(Ldmm;)Lkh;	a	getSize
		p	1		rotation
	m	(Ldmm;Ldkv;Lexc;ZLddl;Lbsr;)V	a	lambda$placeEntities$5
		p	5		entity
	m	(Lenp;Ljd;)Ljd;	a	calculateRelativePosition
		p	0		placementData
		p	1		pos
	m	(Lenp;Ljd;Lenp;Ljd;)Ljd;	a	calculateConnectedPosition
		p	1		placementData1
		p	2		pos1
		p	3		placementData2
		p	4		pos2
	m	(Lent$c;)I	a	lambda$buildInfoList$2
		p	0		blockInfo
	m	(Lent$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
		p	0		blockInfo
		p	1		fullBlocks
		p	2		blocksWithNbt
		p	3		otherBlocks
	m	(Lexc;Ldkv;Ldmm;Ljd;)Lexc;	a	transform
		p	0		point
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Ljava/lang/String;)V	a	setAuthor
		p	1		author
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
		p	0		fullBlocks
		p	1		blocksWithNbt
		p	2		otherBlocks
	m	(Ljd$a;IIILjd$a;Ldcx;ILji;III)V	a	lambda$updateShapeAtEdge$4
		p	7		direction
		p	8		x
		p	9		y
		p	10		z
	m	(Ljd;Ldkv;Ldmm;)Ljd;	a	getZeroPositionWithTransform
		p	1		pos
		p	2		mirror
		p	3		rotation
	m	(Ljd;Ldkv;Ldmm;II)Ljd;	a	getZeroPositionWithTransform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		offsetX
		p	4		offsetZ
	m	(Ljd;Ldkv;Ldmm;Ljd;)Ljd;	a	transform
		p	0		pos
		p	1		mirror
		p	2		rotation
		p	3		pivot
	m	(Ljd;Ldmm;Ljd;Ldkv;)Lejj;	a	getBoundingBox
		p	1		pos
		p	2		rotation
		p	3		pivot
		p	4		mirror
	m	(Ljd;Ldmm;Ljd;Ldkv;Lkh;)Lejj;	a	getBoundingBox
		p	0		pos
		p	1		rotation
		p	2		pivot
		p	3		mirror
		p	4		dimensions
	m	(Ljd;Lenp;Ldfy;)Ljava/util/List;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
	m	(Ljd;Lenp;Ldfy;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	filterBlocks
		p	1		pos
		p	2		placementData
		p	3		block
		p	4		transformed
	m	(Ljn;Lub;)V	a	load
		p	1		blockLookup
		p	2		nbt
	m	(Ljn;Luh;Luh;)V	a	loadPalette
		p	1		blockLookup
		p	2		palette
		p	3		blocks
	m	(Lub;)Lub;	a	save
		p	1		nbt
	m	([D)Luh;	a	newDoubleList
		p	1		doubles
	m	([I)Luh;	a	newIntegerList
		p	1		ints
	m	()Ljava/lang/String;	b	getAuthor
	m	(Lenp;Ljd;)Lejj;	b	getBoundingBox
		p	1		placementData
		p	2		pos
	m	(Lent$c;)I	b	lambda$buildInfoList$1
		p	0		blockInfo
	m	(Lent$c;)I	c	lambda$buildInfoList$0
		p	0		blockInfo
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	Ljava/util/List;	l	palettes
	f	Ljava/util/List;	m	entityInfoList
	f	Lkh;	n	size
	f	Ljava/lang/String;	o	author
c	ent$1	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
c	ent$a	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$a
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		infos
	m	()Ljava/util/List;	a	blocks
	m	(Ldfy;)Ljava/util/List;	a	blocks
		p	1		block
	m	(Ldfy;Lent$c;)Z	a	lambda$blocks$0
		p	1		info
	m	(Ldfy;)Ljava/util/List;	b	lambda$blocks$1
		p	1		block2
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
c	ent$b	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$b
	m	(I)Ldtc;	a	stateFor
		p	1		id
	m	(Ldtc;)I	a	idFor
		p	1		state
	m	(Ldtc;I)V	a	addMapping
		p	1		state
		p	2		id
	f	Ldtc;	a	DEFAULT_BLOCK_STATE
	f	Ljs;	b	ids
	f	I	c	lastId
c	ent$c	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$BlockInfo
	m	(Ljd;Ldtc;Lub;)V	<init>	<init>
		p	1		pos
		p	2		state
		p	3		nbt
	m	()Ljd;	a	pos
	m	()Ldtc;	b	state
	m	()Lub;	c	nbt
	f	Ljd;	a	pos
	f	Ldtc;	b	state
	f	Lub;	c	nbt
c	ent$d	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructure$EntityInfo
	m	(Lexc;Ljd;Lub;)V	<init>	<init>
		p	1		pos
		p	2		blockPos
		p	3		nbt
	f	Lexc;	a	pos
	f	Ljd;	b	blockPos
	f	Lub;	c	nbt
c	enu	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	m	(Laue;Lerf$c;Lcom/mojang/datafixers/DataFixer;Ljn;)V	<init>	<init>
		p	1		resourceManager
		p	2		session
		p	3		dataFixer
		p	4		blockLookup
	m	()Ljava/util/stream/Stream;	a	listTemplates
	m	(ILjava/lang/String;)Ljava/lang/String;	a	lambda$listFolderContents$6
		p	1		filename
	m	(Lakr;)Lent;	a	getOrCreate
		p	1		id
	m	(Lakr;Ljava/lang/String;)Ljava/nio/file/Path;	a	createAndValidatePathToGeneratedStructure
		p	1		id
		p	2		extension
	m	(Lakr;Ljava/lang/Throwable;)V	a	lambda$loadFromResource$2
		p	1		throwable
	m	(Lakr;Ljava/nio/file/Path;)Ljava/util/Optional;	a	loadFromSnbt
		p	1		id
		p	2		path
	m	(Laue;)V	a	onResourceManagerReload
		p	1		resourceManager
	m	(Lenu$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	load
		p	1		opener
		p	2		exceptionConsumer
	m	(Lenu$b;)Ljava/util/stream/Stream;	a	lambda$listTemplates$0
		p	0		provider
	m	(Ljava/io/InputStream;)Lent;	a	readStructure
		p	1		templateIInputStream
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$listFolderContents$7
		p	1		path
		p	2		attributes
	m	(Ljava/nio/file/Path;)Z	a	lambda$listGenerated$5
		p	0		path
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	listFolderContents
		p	1		directory
		p	2		namespace
		p	3		fileExtension
		p	4		idConsumer
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	a	lambda$loadFromGenerated$4
		p	1		throwable
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	relativize
		p	1		root
		p	2		path
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$listFolderContents$8
		p	5		path
	m	(Lub;)Lent;	a	readStructure
		p	1		nbt
	m	()Ljava/util/stream/Stream;	b	listResources
	m	(Lakr;)Ljava/util/Optional;	b	get
		p	1		id
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	b	lambda$loadFromGenerated$3
	m	()Ljava/util/stream/Stream;	c	listTestStructures
	m	(Lakr;)Z	c	save
		p	1		id
	m	()Ljava/util/stream/Stream;	d	listGenerated
	m	(Lakr;)V	d	remove
		p	1		id
	m	(Lakr;)Ljava/util/Optional;	e	tryLoad
		p	1		id
	m	(Lakr;)Ljava/util/Optional;	f	loadFromResource
		p	1		id
	m	(Lakr;)Ljava/util/Optional;	g	loadFromTestStructures
		p	1		id
	m	(Lakr;)Ljava/util/Optional;	h	loadFromGenerated
		p	1		id
	m	(Lakr;)Ljava/io/InputStream;	i	lambda$loadFromResource$1
	f	Ljava/lang/String;	a	STRUCTURE_RESOURCE_DIRECTORY_NAME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	STRUCTURE_GENERATED_DIRECTORY_NAME
	f	Ljava/lang/String;	d	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	e	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	f	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
	f	Laue;	h	resourceManager
	f	Ljava/nio/file/Path;	i	generatedDir
	f	Ljava/util/List;	j	sources
	f	Ljn;	k	blockLookup
	f	Lakk;	l	RESOURCE_LISTER
c	enu$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$a
c	enu$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$b
	m	()Ljava/util/function/Function;	a	loader
	m	()Ljava/util/function/Supplier;	b	lister
	f	Ljava/util/function/Function;	a	loader
	f	Ljava/util/function/Supplier;	b	lister
c	env	net/minecraft/world/level/levelgen/structure/templatesystem/DefinedStructureTestTag
	m	(Lawu;)V	<init>	<init>
		p	1		tag
	m	()Leno;	a	getType
	m	(Ldtc;Layw;)Z	a	test
		p	1		state
		p	2		random
	m	(Lenv;)Lawu;	a	lambda$static$0
		p	0		ruleTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lawu;	b	tag
c	enx	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot
	m	(Lakq;)V	<init>	<init>
		p	1		lootTable
	m	()Leoc;	a	getType
	m	(Layw;Lub;)Lub;	a	apply
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lenx;)Lakq;	a	lambda$static$0
		p	0		modifier
	m	(Lub;Luy;)V	a	lambda$apply$2
		p	1		nbtx
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lakq;	d	lootTable
c	eny	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic
	m	(Lub;)V	<init>	<init>
		p	1		nbt
	m	()Leoc;	a	getType
	m	(Layw;Lub;)Lub;	a	apply
		p	1		random
		p	2		nbt
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Leny;)Lub;	a	lambda$static$0
		p	0		modifier
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lub;	b	tag
c	enz	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear
	m	()Leoc;	a	getType
	m	(Layw;Lub;)Lub;	a	apply
		p	1		random
		p	2		nbt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lenz;	b	INSTANCE
c	eoa	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough
	m	()Leoc;	a	getType
	m	(Layw;Lub;)Lub;	a	apply
		p	1		random
		p	2		nbt
	f	Leoa;	a	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
c	eob	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier
	m	()Leoc;	a	getType
	m	(Layw;Lub;)Lub;	a	apply
		p	1		random
		p	2		nbt
	f	Lcom/mojang/serialization/Codec;	c	CODEC
c	eoc	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leoc;	a	register
		p	0		id
		p	1		codec
	f	Leoc;	a	CLEAR
	f	Leoc;	b	PASSTHROUGH
	f	Leoc;	c	APPEND_STATIC
	f	Leoc;	d	APPEND_LOOT
c	eoe	net/minecraft/world/level/levelgen/synth/BlendedNoise
	m	(Layw;DDDDD)V	<init>	<init>
		p	1		random
		p	2		xzScale
		p	4		yScale
		p	6		xzFactor
		p	8		yFactor
		p	10		smearScaleMultiplier
	m	(Leoi;Leoi;Leoi;DDDDD)V	<init>	<init>
		p	1		lowerInterpolatedNoise
		p	2		upperInterpolatedNoise
		p	3		interpolationNoise
		p	4		xzScale
		p	6		yScale
		p	8		xzFactor
		p	10		yFactor
		p	12		smearScaleMultiplier
	m	()D	a	minValue
	m	(DDDDD)Leoe;	a	createUnseeded
		p	0		xzScale
		p	2		yScale
		p	4		xzFactor
		p	6		yFactor
		p	8		smearScaleMultiplier
	m	(Layw;)Leoe;	a	withNewRandom
		p	1		random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldyr$b;)D	a	compute
		p	1		pos
	m	(Leoe;)Ljava/lang/Double;	a	lambda$static$4
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()D	b	maxValue
	m	(Leoe;)Ljava/lang/Double;	b	lambda$static$3
	m	()Layh;	c	codec
	m	(Leoe;)Ljava/lang/Double;	c	lambda$static$2
	m	(Leoe;)Ljava/lang/Double;	d	lambda$static$1
	m	(Leoe;)Ljava/lang/Double;	e	lambda$static$0
	f	Layh;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	e	SCALE_RANGE
	f	Lcom/mojang/serialization/MapCodec;	f	DATA_CODEC
	f	Leoi;	g	minLimitNoise
	f	Leoi;	h	maxLimitNoise
	f	Leoi;	i	mainNoise
	f	D	j	xzMultiplier
	f	D	k	yMultiplier
	f	D	l	xzFactor
	f	D	m	yFactor
	f	D	n	smearScaleMultiplier
	f	D	o	maxValue
	f	D	p	xzScale
	f	D	q	yScale
c	eof	net/minecraft/world/level/levelgen/synth/NoiseGeneratorPerlin
	m	(Layw;)V	<init>	<init>
		p	1		random
	m	(DDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDD)D	a	noise
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
	m	(DDD[D)D	a	noiseWithDerivative
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDD)D	a	gradDot
		p	0		hash
		p	1		x
		p	3		y
		p	5		z
	m	(IIIDDDD)D	a	sampleAndLerp
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
		p	10		fadeLocalY
	m	(IIIDDD[D)D	a	sampleWithDerivative
		p	1		sectionX
		p	2		sectionY
		p	3		sectionZ
		p	4		localX
		p	6		localY
		p	8		localZ
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
c	eog	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
		p	0		builder
		p	1		originX
		p	3		originY
		p	5		originZ
		p	7		permutation
c	eoh	net/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal
	m	(Layw;Leoh$a;Z)V	<init>	<init>
		p	1		random
		p	2		parameters
		p	3		modern
	m	()D	a	maxValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)D	a	expectedDeviation
		p	0		octaves
	m	(Layw;I[D)Leoh;	a	create
		p	0		random
		p	1		offset
		p	2		octaves
	m	(Layw;Leoh$a;)Leoh;	a	createLegacyNetherBiome
		p	0		random
		p	1		parameters
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()Leoh$a;	b	parameters
	m	(Layw;Leoh$a;)Leoh;	b	create
		p	0		random
		p	1		parameters
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Leoi;	d	first
	f	Leoi;	e	second
	f	D	f	maxValue
	f	Leoh$a;	g	parameters
c	eoh$a	net/minecraft/world/level/levelgen/synth/NoiseGeneratorNormal$a
	m	(ID[D)V	<init>	<init>
		p	1		firstOctave
		p	2		firstAmplitude
		p	4		amplitudes
	m	(ILjava/util/List;)V	<init>	<init>
		p	1		firstOctave
		p	2		amplitudes
	m	()I	a	firstOctave
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
c	eoi	net/minecraft/world/level/levelgen/synth/NoiseGeneratorOctaves
	m	(Layw;Lcom/mojang/datafixers/util/Pair;Z)V	<init>	<init>
		p	1		random
		p	2		firstOctaveAndAmplitudes
		p	3		xoroshiro
	m	()D	a	maxValue
	m	(D)D	a	maxBrokenValue
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
		p	7		yScale
		p	9		yMax
		p	11		useOrigin
	m	(I)Leof;	a	getOctaveNoise
		p	1		octave
	m	(Layw;)V	a	skipOctave
		p	0		random
	m	(Layw;ID[D)Leoi;	a	create
		p	0		random
		p	1		offset
		p	2		firstAmplitude
		p	4		amplitudes
	m	(Layw;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Leoi;	a	createLegacyForLegacyNetherBiome
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Layw;Ljava/util/List;)Leoi;	a	create
		p	0		random
		p	1		octaves
	m	(Layw;Ljava/util/stream/IntStream;)Leoi;	a	createLegacyForBlendedNoise
		p	0		random
		p	1		octaves
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
		p	0		octaves
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
		p	1		info
	m	()I	b	firstOctave
	m	(D)D	b	wrap
		p	0		value
	m	(Layw;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Leoi;	b	create
		p	0		random
		p	1		offset
		p	2		amplitudes
	m	(Layw;Ljava/util/stream/IntStream;)Leoi;	b	create
		p	0		random
		p	1		octaves
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
		p	0		amplitude
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(D)D	c	edgeValue
		p	1		scale
	f	I	a	ROUND_OFF
	f	[Leof;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
c	eoj	net/minecraft/world/level/levelgen/synth/NoiseGenerator3
	m	(Layw;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(Layw;Ljava/util/List;)V	<init>	<init>
		p	1		random
		p	2		octaves
	m	(DDZ)D	a	getValue
		p	1		x
		p	3		y
		p	5		useOrigin
	f	[Leok;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
c	eok	net/minecraft/world/level/levelgen/synth/NoiseGenerator3Handler
	m	(Layw;)V	<init>	<init>
		p	1		random
	m	(DD)D	a	getValue
		p	1		x
		p	3		y
	m	(DDD)D	a	getValue
		p	1		x
		p	3		y
		p	5		z
	m	(I)I	a	p
		p	1		input
	m	(IDDDD)D	a	getCornerNoise3D
		p	1		hash
		p	2		x
		p	4		y
		p	6		z
		p	8		distance
	m	([IDDD)D	a	dot
		p	0		gradient
		p	1		x
		p	3		y
		p	5		z
	f	[[I	a	GRADIENT
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
c	eom	net/minecraft/world/level/lighting/LightEngineBlock
	m	(Ldvl;)V	<init>	<init>
		p	1		chunkProvider
	m	(Ldvl;Leon;)V	<init>	<init>
		p	1		chunkProvider
		p	2		blockLightStorage
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLdtc;)I	a	getEmission
		p	1		blockPos
		p	3		blockState
	m	(Ljd;Ldtc;)V	a	lambda$propagateLightSources$0
		p	1		blockPos
		p	2		blockState
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
	f	Ljd$a;	g	mutablePos
c	eon	net/minecraft/world/level/lighting/LightEngineStorageBlock
	m	(Ldvl;)V	<init>	<init>
		p	1		chunkProvider
	m	(J)I	a	getLightValue
		p	1		blockPos
c	eon$a	net/minecraft/world/level/lighting/LightEngineStorageBlock$a
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	()Leon$a;	a	copy
	m	()Leop;	b	copy
c	eoo	net/minecraft/world/level/lighting/ChunkSkyLightSources
	m	(Ldcy;)V	<init>	<init>
		p	1		heightLimitView
	m	()I	a	getHighestLowestSourceY
	m	(I)V	a	fill
		p	1		y
	m	(II)I	a	getLowestSourceY
		p	1		localX
		p	2		localZ
	m	(Ldcc;III)Z	a	update
		p	1		blockView
		p	2		localX
		p	3		y
		p	4		localZ
	m	(Ldcc;IILjd;Ldtc;Ljd;Ldtc;)Z	a	updateEdge
		p	1		blockView
		p	2		packedIndex
		p	3		value
		p	4		upperPos
		p	5		upperState
		p	6		lowerPos
		p	7		lowerState
	m	(Ldcc;Ljd;Ldtc;)I	a	findLowestSourceBelow
		p	1		blockView
		p	2		pos
		p	3		blockState
	m	(Ldcc;Ljd;Ldtc;Ljd;Ldtc;)Z	a	isEdgeOccluded
		p	0		blockView
		p	1		upperPos
		p	2		upperState
		p	3		lowerPos
		p	4		lowerState
	m	(Lduy;)V	a	fillFrom
		p	1		chunk
	m	(Lduy;III)I	a	findLowestSourceY
		p	1		chunk
		p	2		topSectionIndex
		p	3		localX
		p	4		localZ
	m	(I)I	b	get
		p	1		index
	m	(II)V	b	set
		p	1		index
		p	2		y
	m	(I)I	c	extendSourcesBelowWorld
		p	1		y
	m	(II)I	c	index
		p	0		localX
		p	1		localZ
	f	I	a	NEGATIVE_INFINITY
	f	I	b	SIZE
	f	I	c	minY
	f	Laxc;	d	heightmap
	f	Ljd$a;	e	mutablePos1
	f	Ljd$a;	f	mutablePos2
c	eop	net/minecraft/world/level/lighting/LightEngineStorageArray
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
		p	1		arrays
	m	(J)Ldvd;	a	copyDataLayer
		p	1		pos
	m	(JLdvd;)V	a	setLayer
		p	1		pos
		p	3		data
	m	()Leop;	b	copy
	m	(J)Z	b	hasLayer
		p	1		chunkPos
	m	()V	c	clearCache
	m	(J)Ldvd;	c	getLayer
		p	1		chunkPos
	m	()V	d	disableCache
	m	(J)Ldvd;	d	removeLayer
		p	1		chunkPos
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Ldvd;	d	lastSections
	f	Z	e	cacheEnabled
c	eoq	net/minecraft/world/level/lighting/LightEngineGraph
	m	(III)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
		p	3		expectedTotalSize
	m	(II)I	a	calculatePriority
		p	1		a
		p	2		b
	m	(J)Z	a	isSource
		p	1		id
	m	(JI)V	a	setLevel
		p	1		id
		p	3		level
	m	(JIZ)V	a	checkNeighborsAfterUpdate
		p	1		id
		p	3		level
		p	4		decrease
	m	(JJI)I	a	getComputedLevel
		p	1		id
		p	3		excludedId
		p	5		maxLevel
	m	(JJIIIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		currentLevel
		p	8		decrease
	m	(JJIZ)V	a	checkEdge
		p	1		sourceId
		p	3		id
		p	5		level
		p	6		decrease
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
		p	1		predicate
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
		p	1		maxSteps
	m	(JJI)I	b	computeLevelFromNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
	m	(JJIZ)V	b	checkNeighbor
		p	1		sourceId
		p	3		targetId
		p	5		level
		p	6		decrease
	m	()I	c	getQueueSize
	m	(J)I	c	getLevel
		p	1		id
	m	(J)V	e	removeFromQueue
		p	1		id
	m	(J)V	f	checkNode
		p	1		id
	f	I	a	NO_COMPUTED_LEVEL
	f	Leou;	b	priorityQueue
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	c	computedLevels
	f	Z	d	hasWork
	f	J	e	SOURCE
	f	I	f	levelCount
c	eoq$1	net/minecraft/world/level/lighting/LightEngineGraph$1
	f	I	a	val$minMapSize
	f	Leoq;	b	this$0
c	eor	net/minecraft/world/level/lighting/LightEngineLayerEventListener
	m	(Lkf;)Ldvd;	a	getDataLayerData
		p	1		pos
	m	(Ljd;)I	b	getLightValue
		p	1		pos
c	eor$a	net/minecraft/world/level/lighting/LightEngineLayerEventListener$Void
	m	()Z	K_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Ljd;)V	a	checkBlock
		p	1		pos
	m	(Lkf;)Ldvd;	a	getDataLayerData
		p	1		pos
	m	(Lkf;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Ljd;)I	b	getLightValue
		p	1		pos
	m	()[Leor$a;	c	$values
	f	Leor$a;	a	INSTANCE
	f	[Leor$a;	b	$VALUES
c	eos	net/minecraft/world/level/lighting/LightEngineStorage
	m	(Lddf;Ldvl;Leop;)V	<init>	<init>
		p	1		lightType
		p	2		chunkProvider
		p	3		lightData
	m	()Z	a	hasInconsistencies
	m	(J)I	a	getLightValue
		p	1		blockPos
	m	(JB)V	a	putSectionState
		p	1		sectionPos
		p	3		flags
	m	(JI)V	a	setStoredLevel
		p	1		blockPos
		p	3		value
	m	(JLdvd;)V	a	queueSectionData
		p	1		sectionPos
		p	3		array
	m	(JZ)Ldvd;	a	getDataLayer
		p	1		sectionPos
		p	3		cached
	m	(Leop;J)Ldvd;	a	getDataLayer
		p	1		storage
		p	2		sectionPos
	m	(Leov;)V	a	markNewInconsistencies
		p	1		lightProvider
	m	()V	b	swapSectionMap
	m	(J)Z	b	storingLightForSection
		p	1		sectionPos
	m	(JZ)V	b	setLightEnabled
		p	1		columnPos
		p	3		enabled
	m	(J)Ldvd;	c	getDataLayerToWrite
		p	1		sectionPos
	m	(JZ)V	c	retainData
		p	1		sectionPos
		p	3		retain
	m	(J)Ldvd;	d	getDataLayerData
		p	1		sectionPos
	m	(JZ)V	d	updateSectionStatus
		p	1		sectionPos
		p	3		notReady
	m	(J)I	e	getStoredLevel
		p	1		blockPos
	m	(J)V	f	markSectionAndNeighborsAsAffected
		p	1		id
	m	(J)Ldvd;	g	createDataLayer
		p	1		sectionPos
	m	(J)V	h	onNodeAdded
		p	1		sectionPos
	m	(J)V	i	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	j	lightOnInSection
		p	1		sectionPos
	m	(J)Leos$b;	k	getDebugSectionType
		p	1		sectionPos
	m	(J)V	l	initializeSection
		p	1		sectionPos
	m	(J)V	m	removeSection
		p	1		sectionPos
	f	Ldvl;	a	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	sectionStates
	f	Leop;	c	visibleSectionData
	f	Leop;	d	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	queuedSections
	f	Z	h	hasInconsistencies
	f	Lddf;	i	layer
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	columnsWithSources
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	l	toRemove
c	eos$a	net/minecraft/world/level/lighting/LightEngineStorage$a
	m	(B)Z	a	hasData
		p	0		packed
	m	(BI)B	a	neighborCount
		p	0		packed
		p	1		neighborCount
	m	(BZ)B	a	hasData
		p	0		packed
		p	1		ready
	m	(B)I	b	neighborCount
		p	0		packed
	m	(B)Leos$b;	c	type
		p	0		packed
	f	B	a	EMPTY
	f	I	b	MIN_NEIGHBORS
	f	I	c	MAX_NEIGHBORS
	f	B	d	HAS_DATA_BIT
	f	B	e	NEIGHBOR_COUNT_BITS
c	eos$b	net/minecraft/world/level/lighting/LightEngineStorage$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		sigil
	m	()Ljava/lang/String;	a	display
	m	()[Leos$b;	b	$values
	f	Leos$b;	a	EMPTY
	f	Leos$b;	b	LIGHT_ONLY
	f	Leos$b;	c	LIGHT_AND_DATA
	f	Ljava/lang/String;	d	display
	f	[Leos$b;	e	$VALUES
c	eot	net/minecraft/world/level/lighting/LevelLightEngine
	m	(Ldvl;ZZ)V	<init>	<init>
		p	1		chunkProvider
		p	2		hasBlockLight
		p	3		hasSkyLight
	m	()Z	K_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lddf;)Leor;	a	getLayerListener
		p	1		lightType
	m	(Lddf;Lkf;)Ljava/lang/String;	a	getDebugData
		p	1		lightType
		p	2		pos
	m	(Lddf;Lkf;Ldvd;)V	a	queueSectionData
		p	1		lightType
		p	2		pos
		p	3		nibbles
	m	(Ljd;)V	a	checkBlock
		p	1		pos
	m	(Ljd;I)I	a	getRawBrightness
		p	1		pos
		p	2		ambientDarkness
	m	(Lkf;)Z	a	lightOnInSection
		p	1		sectionPos
	m	(Lkf;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
	m	(Ldcd;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Lddf;Lkf;)Leos$b;	b	getDebugSectionType
		p	1		lightType
		p	2		pos
	m	()I	c	getLightSectionCount
	m	()I	d	getMinLightSection
	m	()I	e	getMaxLightSection
	f	Leov;	a	blockEngine
	f	I	b	LIGHT_SECTION_PADDING
	f	Ldcy;	c	levelHeightAccessor
	f	Leov;	d	skyEngine
c	eou	net/minecraft/world/level/lighting/LeveledPriorityQueue
	m	(II)V	<init>	<init>
		p	1		levelCount
		p	2		expectedLevelSize
	m	()J	a	removeFirstLong
	m	(I)V	a	checkFirstQueuedLevel
		p	1		maxLevel
	m	(JI)V	a	enqueue
		p	1		id
		p	3		level
	m	(JII)V	a	dequeue
		p	1		id
		p	3		level
		p	4		levelCount
	m	()Z	b	isEmpty
	f	I	a	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	b	queues
	f	I	c	firstQueuedLevel
c	eou$1	net/minecraft/world/level/lighting/LeveledPriorityQueue$1
	f	I	a	val$minSize
	f	Leou;	b	this$0
c	eov	net/minecraft/world/level/lighting/LightEngine
	m	(Ldvl;Leos;)V	<init>	<init>
		p	1		chunkProvider
		p	2		lightStorage
	m	()Z	K_	hasLightWork
	m	()I	a	runLightUpdates
	m	(II)Ldvk;	a	getChunk
		p	1		chunkX
		p	2		chunkZ
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLdtc;JLdtc;Lji;)Z	a	shapeOccludes
		p	1		sourceId
		p	3		sourceState
		p	4		targetId
		p	6		targetState
		p	7		direction
	m	(JLdvd;)V	a	queueSectionData
		p	1		sectionPos
		p	3		lightArray
	m	(Ldcc;Ldtc;Ljd;Ldtc;Ljd;Lji;I)I	a	getLightBlockInto
		p	0		world
		p	1		state1
		p	2		pos1
		p	3		state2
		p	4		pos2
		p	5		direction
		p	6		opacity2
	m	(Ldcc;Ljd;Ldtc;Ldtc;)Z	a	hasDifferentLightProperties
		p	0		blockView
		p	1		pos
		p	2		oldState
		p	3		newState
	m	(Ldcc;Ljd;Ldtc;Lji;)Lexv;	a	getOcclusionShape
		p	0		blockView
		p	1		pos
		p	2		blockState
		p	3		direction
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Ldtc;)Z	a	isEmptyShape
		p	0		blockState
	m	(Ldtc;JLji;)Lexv;	a	getOcclusionShape
		p	1		blockState
		p	2		pos
		p	4		direction
	m	(Ldtc;Ljd;)I	a	getOpacity
		p	1		state
		p	2		pos
	m	(Ljd;)V	a	checkBlock
		p	1		pos
	m	(Lkf;)Ldvd;	a	getDataLayerData
		p	1		pos
	m	(Lkf;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(J)Ljava/lang/String;	b	getDebugData
		p	1		sectionPos
	m	(JJ)V	b	enqueueDecrease
		p	1		blockPos
		p	3		flags
	m	(Ldcd;Z)V	b	retainData
		p	1		pos
		p	2		retainData
	m	(Ljd;)I	b	getLightValue
		p	1		pos
	m	()V	c	clearChunkCache
	m	(J)Leos$b;	c	getDebugSectionType
		p	1		sectionPos
	m	(JJ)V	c	enqueueIncrease
		p	1		blockPos
		p	3		flags
	m	(Ljd;)Ldtc;	c	getState
		p	1		pos
	m	()I	d	propagateIncreases
	m	()I	e	propagateDecreases
	f	I	a	MAX_LEVEL
	f	I	b	MIN_OPACITY
	f	J	c	PULL_LIGHT_IN_ENTRY
	f	[Lji;	d	PROPAGATION_DIRECTIONS
	f	Ldvl;	e	chunkSource
	f	Leos;	f	storage
	f	I	g	MIN_QUEUE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/LongOpenHashSet;	h	blockNodesToCheck
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	i	decreaseQueue
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	j	increaseQueue
	f	Ljd$a;	k	mutablePos
	f	I	l	CACHE_SIZE
	f	[J	m	lastChunkPos
	f	[Ldvk;	n	lastChunk
c	eov$a	net/minecraft/world/level/lighting/LightEngine$a
	m	(I)J	a	decreaseAllDirections
		p	0		lightLevel
	m	(ILji;)J	a	decreaseSkipOneDirection
		p	0		lightLevel
		p	1		direction
	m	(IZ)J	a	increaseLightFromEmission
		p	0		lightLevel
		p	1		trivial
	m	(IZLji;)J	a	increaseSkipOneDirection
		p	0		lightLevel
		p	1		trivial
		p	2		direction
	m	(J)I	a	getFromLevel
		p	0		packed
	m	(JI)J	a	withLevel
		p	0		packed
		p	2		lightLevel
	m	(JLji;)Z	a	shouldPropagateInDirection
		p	0		packed
		p	2		direction
	m	(ZZZZZ)J	a	increaseSkySourceInDirections
		p	0		down
		p	1		north
		p	2		south
		p	3		west
		p	4		east
	m	(IZLji;)J	b	increaseOnlyOneDirection
		p	0		lightLevel
		p	1		trivial
		p	2		direction
	m	(J)Z	b	isFromEmptyShape
		p	0		packed
	m	(JLji;)J	b	withDirection
		p	0		packed
		p	2		direction
	m	(J)Z	c	isIncreaseFromEmission
		p	0		packed
	m	(JLji;)J	c	withoutDirection
		p	0		packed
		p	2		direction
	f	I	a	FROM_LEVEL_BITS
	f	I	b	DIRECTION_BITS
	f	J	c	LEVEL_MASK
	f	J	d	DIRECTIONS_MASK
	f	J	e	FLAG_FROM_EMPTY_SHAPE
	f	J	f	FLAG_INCREASE_FROM_EMISSION
c	eow	net/minecraft/world/level/lighting/ILightEngine
	m	()Z	K_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Ljd;)V	a	checkBlock
		p	1		pos
	m	(Ljd;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Lkf;Z)V	a	updateSectionStatus
		p	1		pos
		p	2		notReady
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
c	eox	net/minecraft/world/level/lighting/LightEngineSky
	m	(Ldvl;)V	<init>	<init>
		p	1		chunkProvider
	m	(Ldvl;Leoy;)V	<init>	<init>
		p	1		chunkProvider
		p	2		lightStorage
	m	(I)Z	a	isSourceLevel
	m	(III)I	a	getLowestSourceY
		p	1		x
		p	2		z
	m	(IIII)V	a	removeSourcesBelow
		p	1		x
		p	2		z
	m	(J)V	a	checkNode
		p	1		blockPos
	m	(JJ)V	a	propagateDecrease
		p	1		blockPos
	m	(JJI)V	a	propagateIncrease
		p	1		blockPos
		p	5		lightLevel
	m	(JLji;IZI)V	a	propagateFromEmptySections
		p	1		blockPos
		p	3		direction
		p	4		lightLevel
	m	(Ldcd;Z)V	a	setLightEnabled
		p	1		pos
		p	2		retainData
	m	(Lji;II)Z	a	crossedSectionEdge
		p	0		direction
		p	1		localX
		p	2		localZ
	m	(II)Leoo;	b	getChunkSources
		p	1		chunkX
		p	2		chunkZ
	m	(III)V	b	updateSourcesInColumn
	m	(IIII)V	b	addSourcesAbove
	m	(Ldcd;)V	b	propagateLightSources
		p	1		chunkPos
	m	(J)I	d	countEmptySectionsBelowIfAtBorder
		p	1		blockPos
	f	J	g	REMOVE_TOP_SKY_SOURCE_ENTRY
	f	J	h	REMOVE_SKY_SOURCE_ENTRY
	f	J	i	ADD_SKY_SOURCE_ENTRY
	f	Ljd$a;	j	mutablePos
	f	Leoo;	k	emptyChunkSources
c	eox$1	net/minecraft/world/level/lighting/LightEngineSky$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
c	eoy	net/minecraft/world/level/lighting/LightEngineStorageSky
	m	(Ldvl;)V	<init>	<init>
		p	1		chunkProvider
	m	(I)Z	a	hasLightDataAtOrBelow
		p	1		sectionY
	m	(J)I	a	getLightValue
		p	1		blockPos
	m	(Ldvd;)Ldvd;	a	repeatFirstLayer
		p	0		source
	m	()I	c	getBottomSectionY
	m	(JZ)I	e	getLightValue
		p	1		blockPos
		p	3		cached
	m	(J)Ldvd;	g	createDataLayer
		p	1		sectionPos
	m	(J)V	h	onNodeAdded
		p	1		sectionPos
	m	(J)V	i	onNodeRemoved
		p	1		sectionPos
	m	(J)Z	l	isAboveData
		p	1		sectionPos
	m	(J)I	m	getTopSectionY
		p	1		columnPos
c	eoy$a	net/minecraft/world/level/lighting/LightEngineStorageSky$a
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V	<init>	<init>
		p	1		arrays
		p	2		columnToTopSection
		p	3		minSectionY
	m	()Leoy$a;	a	copy
	m	()Leop;	b	copy
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
c	eoz	eoz
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	f	Leoz$a;	a	map
c	eoz$a	eoz$a
	m	(IF)V	<init>	<init>
		p	1		expectedSize
		p	2		loadFactor
	m	()J	a	removeFirstBit
	m	(IJ)Z	a	replaceBit
		p	1		index
		p	2		mask
	m	(J)J	a	getOuterKey
		p	0		posLong
	m	(JI)J	a	getFullKey
		p	0		key
		p	2		valueLength
	m	(IJ)Z	b	removeFromEntry
		p	1		index
		p	2		mask
	m	(J)I	b	getInnerKey
		p	0		posLong
	m	(J)Z	c	addBit
		p	1		posLong
	m	(J)Z	d	removeBit
		p	1		posLong
	m	(J)Z	e	removeFromNullEntry
		p	1		mask
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
c	epb	net/minecraft/world/level/material/FluidTypeEmpty
	m	()Lcul;	a	getBucket
	m	(Ldcc;Ljd;Lepe;)Lexc;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;)I	a	getTickDelay
		p	1		world
	m	(Lepe;)F	a	getOwnHeight
		p	1		state
	m	(Lepe;Ldcc;Ljd;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Lepe;Ldcc;Ljd;Lepd;Lji;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Lepe;)Ldtc;	b	createLegacyBlock
		p	1		state
	m	(Lepe;Ldcc;Ljd;)Lexv;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
c	epc	net/minecraft/world/level/material/FluidTypeFlowing
	m	(IZ)Lepe;	a	getFlowing
		p	1		level
		p	2		falling
	m	(Ldcc;Lepd;Ljd;Ldtc;Ljd;Ldtc;)Z	a	isWaterHole
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Ldcc;Lepd;Ljd;Ldtc;Lji;Ljd;Ldtc;Lepe;)Z	a	canPassThrough
		p	1		world
		p	2		fluid
		p	3		pos
		p	4		state
		p	5		face
		p	6		fromPos
		p	7		fromState
		p	8		fluidState
	m	(Ldcc;Ljd;Ldtc;Lepd;)Z	a	canHoldFluid
		p	1		world
		p	2		pos
		p	3		state
		p	4		fluid
	m	(Ldcc;Ljd;Ldtc;Lji;Ljd;Ldtc;Lepe;Lepd;)Z	a	canSpreadTo
		p	1		world
		p	2		fluidPos
		p	3		fluidBlockState
		p	4		flowDirection
		p	5		flowTo
		p	6		flowToBlockState
		p	7		fluidState
		p	8		fluid
	m	(Ldcc;Ljd;Lepe;)Lexc;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcc;Ljd;Lji;)Z	a	isSolidFace
		p	1		world
		p	2		pos
		p	3		direction
	m	(Ldcw;)Z	a	canConvertToSource
		p	1		world
	m	(Ldcw;Ljd;Ldtc;)Lepe;	a	getNewLiquid
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Lepe;)V	a	spread
		p	1		world
		p	2		fluidPos
		p	3		state
	m	(Ldcw;Ljd;Lepe;Ldtc;)V	a	spreadToSides
		p	1		world
		p	2		pos
		p	3		fluidState
		p	4		blockState
	m	(Ldcw;Ljd;Lepe;Lepe;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Ldcw;Ljd;Ljd;Ldtc;S)Z	a	lambda$getSpread$4
	m	(Ldcw;Ljd;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSpread$3
	m	(Ldcx;Ljd;Ldtc;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcx;Ljd;Ldtc;Lji;Lepe;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Ldcz;Ljd;)I	a	sourceNeighborCount
		p	1		world
		p	2		pos
	m	(Ldcz;Ljd;ILji;Ldtc;Ljd;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I	a	getSlopeDistance
		p	1		world
		p	2		pos
		p	4		direction
		p	5		state
		p	6		fromPos
		p	7		stateCache
		p	8		flowDownCache
	m	(Ldcz;Ljd;S)Lcom/mojang/datafixers/util/Pair;	a	lambda$getSlopeDistance$1
	m	(Ldtd$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Lepe;)F	a	getOwnHeight
		p	1		state
	m	(Lepe;Ldcc;Ljd;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Ljd;Ldcz;Ldtc;S)Z	a	lambda$getSlopeDistance$2
	m	(Ljd;Ljd;)S	a	getCacheKey
		p	0		from
		p	1		to
	m	(Lji;Ldcc;Ljd;Ldtc;Ljd;Ldtc;)Z	a	canPassThroughWall
		p	1		face
		p	2		world
		p	3		pos
		p	4		state
		p	5		fromPos
		p	6		fromState
	m	(Z)Lepe;	a	getSource
		p	1		falling
	m	(Ldcc;Ljd;Lepe;)Lexv;	b	lambda$getShape$5
		p	2		state2
	m	(Ldcw;Ljd;Ldtc;)Ljava/util/Map;	b	getSpread
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Lepe;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lepe;Ldcc;Ljd;)Lexv;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	(Ldcz;)I	c	getDropOff
		p	1		world
	m	(Lepe;Ldcc;Ljd;)Z	c	hasSameAbove
		p	0		state
		p	1		world
		p	2		pos
	m	()Lepd;	d	getFlowing
	m	(Lepe;)I	d	getAmount
		p	1		state
	m	()Lepd;	e	getSource
	m	(Lepe;)I	e	getLegacyLevel
		p	0		state
	m	(Lepe;)Z	g	affectsFlow
		p	1		state
	m	(Lepe;)Z	h	isSourceBlockOfThisType
		p	1		state
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	l	lambda$static$0
	f	Ldtt;	a	FALLING
	f	Lduc;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
c	epc$1	net/minecraft/world/level/material/FluidTypeFlowing$1
c	epd	net/minecraft/world/level/material/FluidType
	m	()Lcul;	a	getBucket
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Ldcc;Ljd;Lepe;)Lexc;	a	getFlow
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Lepe;Layw;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldcz;)I	a	getTickDelay
		p	1		world
	m	(Ldtd$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Lepd;)Z	a	isSame
		p	1		fluid
	m	(Lepe;)F	a	getOwnHeight
		p	1		state
	m	(Lepe;Ldcc;Ljd;)F	a	getHeight
		p	1		state
		p	2		world
		p	3		pos
	m	(Lepe;Ldcc;Ljd;Lepd;Lji;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	()Z	b	isEmpty
	m	(Ldcw;Ljd;Lepe;)V	b	tick
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcw;Ljd;Lepe;Layw;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Lepe;)Ldtc;	b	createLegacyBlock
		p	1		state
	m	(Lepe;Ldcc;Ljd;)Lexv;	b	getShape
		p	1		state
		p	2		world
		p	3		pos
	m	()F	c	getExplosionResistance
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
	m	()Ldtd;	f	getStateDefinition
	m	(Lepe;)V	f	registerDefaultState
		p	1		state
	m	()Lepe;	g	defaultFluidState
	m	()Llk;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	m	()Ljm$c;	k	builtInRegistryHolder
	f	Lepe;	a	defaultFluidState
	f	Ljm$c;	b	builtInRegistryHolder
	f	Ljs;	c	FLUID_STATE_REGISTRY
	f	Ldtd;	d	stateDefinition
c	epe	net/minecraft/world/level/material/Fluid
	m	(Lepd;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	1		fluid
		p	2		propertyMap
		p	3		codec
	m	()Lepd;	a	getType
	m	(Lawu;)Z	a	is
		p	1		tag
	m	(Ldcc;Ljd;)F	a	getHeight
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;Lepd;Lji;)Z	a	canBeReplacedWith
		p	1		world
		p	2		pos
		p	3		fluid
		p	4		direction
	m	(Ldcw;Ljd;)V	a	tick
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Layw;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lepd;)Z	a	isSourceOfType
		p	1		fluid
	m	(Ljq;)Z	a	is
		p	1		fluids
	m	()Z	b	isSource
	m	(Ldcc;Ljd;)Z	b	shouldRenderBackwardUpFace
		p	1		world
		p	2		pos
	m	(Ldcw;Ljd;Layw;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		random
	m	(Lepd;)Z	b	is
		p	1		fluid
	m	()Z	c	isEmpty
	m	(Ldcc;Ljd;)Lexc;	c	getFlow
		p	1		world
		p	2		pos
	m	()F	d	getOwnHeight
	m	(Ldcc;Ljd;)Lexv;	d	getShape
		p	1		world
		p	2		pos
	m	()I	e	getAmount
	m	()Z	f	isRandomlyTicking
	m	()Ldtc;	g	createLegacyBlock
	m	()Llk;	h	getDripParticle
	m	()F	i	getExplosionResistance
	m	()Ljm;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
c	epf	net/minecraft/world/level/material/FluidTypes
	m	(Ljava/lang/String;Lepd;)Lepd;	a	register
		p	0		id
		p	1		value
	f	Lepd;	a	EMPTY
	f	Lepc;	b	FLOWING_WATER
	f	Lepc;	c	WATER
	f	Lepc;	d	FLOWING_LAVA
	f	Lepc;	e	LAVA
c	epg	epg
	m	()[Lepg;	a	$values
	f	Lepg;	a	LAVA
	f	Lepg;	b	WATER
	f	Lepg;	c	POWDER_SNOW
	f	Lepg;	d	NONE
	f	[Lepg;	e	$VALUES
c	eph	net/minecraft/world/level/material/FluidTypeLava
	m	()Lcul;	a	getBucket
	m	(Ldcw;)Z	a	canConvertToSource
		p	1		world
	m	(Ldcw;Ljd;Lepe;Layw;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldcw;Ljd;Lepe;Lepe;)I	a	getSpreadDelay
		p	1		world
		p	2		pos
		p	3		oldState
		p	4		newState
	m	(Ldcx;Ljd;)V	a	fizz
		p	1		world
		p	2		pos
	m	(Ldcx;Ljd;Ldtc;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcx;Ljd;Ldtc;Lji;Lepe;)V	a	spreadTo
		p	1		world
		p	2		pos
		p	3		state
		p	4		direction
		p	5		fluidState
	m	(Ldcz;)I	a	getTickDelay
		p	1		world
	m	(Ldcz;Ljd;)Z	a	hasFlammableNeighbours
		p	1		world
		p	2		pos
	m	(Lepd;)Z	a	isSame
		p	1		fluid
	m	(Lepe;Ldcc;Ljd;Lepd;Lji;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Ldcw;Ljd;Lepe;Layw;)V	b	randomTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldcz;)I	b	getSlopeFindDistance
		p	1		world
	m	(Ldcz;Ljd;)Z	b	isFlammable
		p	1		world
		p	2		pos
	m	(Lepe;)Ldtc;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Ldcz;)I	c	getDropOff
		p	1		world
	m	()Lepd;	d	getFlowing
	m	()Lepd;	e	getSource
	m	()Llk;	h	getDripParticle
	m	()Z	i	isRandomlyTicking
	m	()Ljava/util/Optional;	j	getPickupSound
	f	F	e	MIN_LEVEL_CUTOFF
c	eph$a	net/minecraft/world/level/material/FluidTypeLava$a
	m	(Ldtd$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
c	eph$b	net/minecraft/world/level/material/FluidTypeLava$b
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
c	epi	net/minecraft/world/level/material/MaterialMapColor
	m	(II)V	<init>	<init>
		p	1		id
		p	2		color
	m	(I)Lepi;	a	byId
		p	0		id
	m	(Lepi$a;)I	a	calculateRGBColor
		p	1		brightness
	m	(I)I	b	getColorFromPackedId
		p	0		colorByte
	m	(Lepi$a;)B	b	getPackedId
		p	1		brightness
	m	(I)Lepi;	c	byIdUnsafe
		p	0		id
	f	Lepi;	A	COLOR_BROWN
	f	Lepi;	B	COLOR_GREEN
	f	Lepi;	C	COLOR_RED
	f	Lepi;	D	COLOR_BLACK
	f	Lepi;	E	GOLD
	f	Lepi;	F	DIAMOND
	f	Lepi;	G	LAPIS
	f	Lepi;	H	EMERALD
	f	Lepi;	I	PODZOL
	f	Lepi;	J	NETHER
	f	Lepi;	K	TERRACOTTA_WHITE
	f	Lepi;	L	TERRACOTTA_ORANGE
	f	Lepi;	M	TERRACOTTA_MAGENTA
	f	Lepi;	N	TERRACOTTA_LIGHT_BLUE
	f	Lepi;	O	TERRACOTTA_YELLOW
	f	Lepi;	P	TERRACOTTA_LIGHT_GREEN
	f	Lepi;	Q	TERRACOTTA_PINK
	f	Lepi;	R	TERRACOTTA_GRAY
	f	Lepi;	S	TERRACOTTA_LIGHT_GRAY
	f	Lepi;	T	TERRACOTTA_CYAN
	f	Lepi;	U	TERRACOTTA_PURPLE
	f	Lepi;	V	TERRACOTTA_BLUE
	f	Lepi;	W	TERRACOTTA_BROWN
	f	Lepi;	X	TERRACOTTA_GREEN
	f	Lepi;	Y	TERRACOTTA_RED
	f	Lepi;	Z	TERRACOTTA_BLACK
	f	Lepi;	a	NONE
	f	Lepi;	aa	CRIMSON_NYLIUM
	f	Lepi;	ab	CRIMSON_STEM
	f	Lepi;	ac	CRIMSON_HYPHAE
	f	Lepi;	ad	WARPED_NYLIUM
	f	Lepi;	ae	WARPED_STEM
	f	Lepi;	af	WARPED_HYPHAE
	f	Lepi;	ag	WARPED_WART_BLOCK
	f	Lepi;	ah	DEEPSLATE
	f	Lepi;	ai	RAW_IRON
	f	Lepi;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	f	[Lepi;	am	MATERIAL_COLORS
	f	Lepi;	b	GRASS
	f	Lepi;	c	SAND
	f	Lepi;	d	WOOL
	f	Lepi;	e	FIRE
	f	Lepi;	f	ICE
	f	Lepi;	g	METAL
	f	Lepi;	h	PLANT
	f	Lepi;	i	SNOW
	f	Lepi;	j	CLAY
	f	Lepi;	k	DIRT
	f	Lepi;	l	STONE
	f	Lepi;	m	WATER
	f	Lepi;	n	WOOD
	f	Lepi;	o	QUARTZ
	f	Lepi;	p	COLOR_ORANGE
	f	Lepi;	q	COLOR_MAGENTA
	f	Lepi;	r	COLOR_LIGHT_BLUE
	f	Lepi;	s	COLOR_YELLOW
	f	Lepi;	t	COLOR_LIGHT_GREEN
	f	Lepi;	u	COLOR_PINK
	f	Lepi;	v	COLOR_GRAY
	f	Lepi;	w	COLOR_LIGHT_GRAY
	f	Lepi;	x	COLOR_CYAN
	f	Lepi;	y	COLOR_PURPLE
	f	Lepi;	z	COLOR_BLUE
c	epi$a	net/minecraft/world/level/material/MaterialMapColor$a
	m	(Ljava/lang/String;III)V	<init>	<init>
		p	3		id
		p	4		brightness
	m	()[Lepi$a;	a	$values
	m	(I)Lepi$a;	a	byId
		p	0		id
	m	(I)Lepi$a;	b	byIdUnsafe
		p	0		id
	f	Lepi$a;	a	LOW
	f	Lepi$a;	b	NORMAL
	f	Lepi$a;	c	HIGH
	f	Lepi$a;	d	LOWEST
	f	I	e	id
	f	I	f	modifier
	f	[Lepi$a;	g	VALUES
	f	[Lepi$a;	h	$VALUES
c	epj	net/minecraft/world/level/material/EnumPistonReaction
	m	()[Lepj;	a	$values
	f	Lepj;	a	NORMAL
	f	Lepj;	b	DESTROY
	f	Lepj;	c	BLOCK
	f	Lepj;	d	IGNORE
	f	Lepj;	e	PUSH_ONLY
	f	[Lepj;	f	$VALUES
c	epk	net/minecraft/world/level/material/FluidTypeWater
	m	()Lcul;	a	getBucket
	m	(Ldcw;)Z	a	canConvertToSource
		p	1		world
	m	(Ldcw;Ljd;Lepe;Layw;)V	a	animateTick
		p	1		world
		p	2		pos
		p	3		state
		p	4		random
	m	(Ldcx;Ljd;Ldtc;)V	a	beforeDestroyingBlock
		p	1		world
		p	2		pos
		p	3		state
	m	(Ldcz;)I	a	getTickDelay
		p	1		world
	m	(Lepd;)Z	a	isSame
		p	1		fluid
	m	(Lepe;Ldcc;Ljd;Lepd;Lji;)Z	a	canBeReplacedWith
		p	1		state
		p	2		world
		p	3		pos
		p	4		fluid
		p	5		direction
	m	(Ldcz;)I	b	getSlopeFindDistance
		p	1		world
	m	(Lepe;)Ldtc;	b	createLegacyBlock
		p	1		state
	m	()F	c	getExplosionResistance
	m	(Ldcz;)I	c	getDropOff
		p	1		world
	m	()Lepd;	d	getFlowing
	m	()Lepd;	e	getSource
	m	()Llk;	h	getDripParticle
	m	()Ljava/util/Optional;	j	getPickupSound
c	epk$a	net/minecraft/world/level/material/FluidTypeWater$a
	m	(Ldtd$a;)V	a	createFluidStateDefinition
		p	1		builder
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
c	epk$b	net/minecraft/world/level/material/FluidTypeWater$b
	m	(Lepe;)Z	c	isSource
		p	1		state
	m	(Lepe;)I	d	getAmount
		p	1		state
c	epn	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	m	(Z)V	<init>	<init>
		p	1		penalizeDeepWater
	m	()Lepq;	a	getStart
	m	(DDD)Lepz;	a	getTarget
		p	1		x
		p	3		y
		p	5		z
	m	(Lddj;Lbtp;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	([Lepq;Lepq;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(Lepq;Lepq;)Z	b	isVerticalNeighborValid
		p	1		node
		p	2		successor
	m	()Z	c	isAmphibious
	f	Z	l	prefersShallowSwimming
	f	F	m	oldWalkableCost
	f	F	n	oldWaterBorderCost
c	epo	net/minecraft/world/level/pathfinder/Path
	m	()V	a	clear
	m	(I)V	a	upHeap
		p	1		index
	m	(Lepq;)Lepq;	a	insert
		p	1		node
	m	(Lepq;F)V	a	changeCost
		p	1		node
		p	2		weight
	m	()Lepq;	b	peek
	m	(I)V	b	downHeap
		p	1		index
	m	(Lepq;)V	b	remove
		p	1		node
	m	()Lepq;	c	pop
	m	()I	d	size
	m	()Z	e	isEmpty
	m	()[Lepq;	f	getHeap
	f	[Lepq;	a	heap
	f	I	b	size
c	epp	net/minecraft/world/level/pathfinder/PathfinderFlying
	m	()Lepq;	a	getStart
	m	(DDD)Lepz;	a	getTarget
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lepq;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Lepv;	a	lambda$getCachedPathType$0
		p	4		pos
	m	(Lbtp;)Ljava/lang/Iterable;	a	iteratePathfindingStartNodeCandidatePositions
		p	1		entity
	m	(Lddj;Lbtp;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	(Ljd;)Z	a	canStartAt
		p	1		pos
	m	([Lepq;Lepq;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Lepv;	b	getCachedPathType
		p	1		x
		p	2		y
		p	3		z
	m	(Lepq;)Z	b	hasMalus
		p	1		node
	m	(Lepq;)Z	c	isOpen
		p	1		node
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypeByPosCache
	f	F	m	SMALL_MOB_SIZE
	f	F	n	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	f	I	o	MAX_START_NODE_CANDIDATES
c	epq	net/minecraft/world/level/pathfinder/PathPoint
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	()Ljd;	a	asBlockPos
	m	(III)Lepq;	a	cloneAndMove
		p	1		x
		p	2		y
		p	3		z
	m	(Lepq;)F	a	distanceTo
		p	1		node
	m	(Ljd;)F	a	distanceTo
		p	1		pos
	m	(Lvw;)V	a	writeToStream
		p	1		buf
	m	(Lvw;Lepq;)V	a	readContents
		p	0		buf
		p	1		target
	m	()Lexc;	b	asVec3
	m	(III)I	b	createHash
		p	0		x
		p	1		y
		p	2		z
	m	(Lepq;)F	b	distanceToXZ
		p	1		node
	m	(Ljd;)F	b	distanceToSqr
		p	1		pos
	m	(Lvw;)Lepq;	b	createFromStream
		p	0		buf
	m	()Z	c	inOpenSet
	m	(Lepq;)F	c	distanceToSqr
		p	1		node
	m	(Ljd;)F	c	distanceManhattan
		p	1		pos
	m	(Lepq;)F	d	distanceManhattan
		p	1		node
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Lepq;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Lepv;	l	type
	f	I	m	hash
c	epr	net/minecraft/world/level/pathfinder/PathfinderAbstract
	m	()Lepq;	a	getStart
	m	(DDD)Lepz;	a	getTarget
		p	1		x
		p	3		y
		p	5		z
	m	(IIII)Lepq;	a	lambda$getNode$0
	m	(Lbtp;Ljd;)Lepv;	a	getPathType
		p	1		entity
		p	2		pos
	m	(Lddj;Lbtp;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Ldtc;)Z	a	isBurningBlock
		p	0		state
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	(Lepx;IIILbtp;)Lepv;	a	getPathTypeOfMob
		p	1		context
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Z)V	a	setCanPassDoors
		p	1		canEnterOpenDoors
	m	([Lepq;Lepq;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(DDD)Lepz;	b	getTargetNodeAt
		p	1		x
		p	3		y
		p	5		z
	m	(Ljd;)Lepq;	b	getNode
		p	1		pos
	m	(Z)V	b	setCanOpenDoors
		p	1		canOpenDoors
	m	(III)Lepq;	c	getNode
		p	1		x
		p	2		y
		p	3		z
	m	(Z)V	c	setCanFloat
		p	1		canSwim
	m	()Z	d	canPassDoors
	m	(Z)V	d	setCanWalkOverFences
		p	1		canWalkOverFences
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	m	()Z	g	canWalkOverFences
	f	Lepx;	a	currentContext
	f	Lbtp;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	nodes
	f	I	d	entityWidth
	f	I	e	entityHeight
	f	I	f	entityDepth
	f	Z	g	canPassDoors
	f	Z	h	canOpenDoors
	f	Z	i	canFloat
	f	Z	j	canWalkOverFences
c	eps	net/minecraft/world/level/pathfinder/PathEntity
	m	(Ljava/util/List;Ljd;Z)V	<init>	<init>
		p	1		nodes
		p	2		target
		p	3		reachesTarget
	m	()V	a	advance
	m	(I)Lepq;	a	getNode
		p	1		index
	m	(ILepq;)V	a	replaceNode
		p	1		index
		p	2		node
	m	(Lbsr;)Lexc;	a	getNextEntityPos
		p	1		entity
	m	(Lbsr;I)Lexc;	a	getEntityPosAtNode
		p	1		entity
		p	2		index
	m	(Leps;)Z	a	sameAs
		p	1		o
	m	(Lvw;)V	a	writeToStream
		p	1		buf
	m	(Lvw;Lepq;)V	a	lambda$writeToStream$0
		p	0		buf
		p	1		node
	m	(Lvw;[Lepq;)V	a	writeNodeArray
		p	0		buf
		p	1		nodes
	m	([Lepq;[Lepq;Ljava/util/Set;)V	a	setDebug
		p	1		debugNodes
		p	2		debugSecondNodes
		p	3		debugTargetNodes
	m	()Z	b	notStarted
	m	(I)V	b	truncateNodes
		p	1		length
	m	(Lvw;)Leps;	b	createFromStream
		p	0		buf
	m	()Z	c	isDone
	m	(I)V	c	setNextNodeIndex
		p	1		nodeIndex
	m	(Lvw;)[Lepq;	c	readNodeArray
		p	0		buf
	m	()Lepq;	d	getEndNode
	m	(I)Ljd;	d	getNodePos
		p	1		index
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	()Ljd;	g	getNextNodePos
	m	()Lepq;	h	getNextNode
	m	()Lepq;	i	getPreviousNode
	m	()Z	j	canReach
	m	()Leps$a;	k	debugData
	m	()Ljd;	l	getTarget
	m	()F	m	getDistToTarget
	m	()Leps;	n	copy
	f	Ljava/util/List;	a	nodes
	f	Leps$a;	b	debugData
	f	I	c	nextNodeIndex
	f	Ljd;	d	target
	f	F	e	distToTarget
	f	Z	f	reached
c	eps$a	net/minecraft/world/level/pathfinder/PathEntity$a
	m	()[Lepq;	a	openSet
	m	(Lvw;)V	a	write
		p	1		buf
	m	(Lvw;Lepz;)V	a	lambda$write$0
		p	0		buf
		p	1		node
	m	()[Lepq;	b	closedSet
	m	(Lvw;)Leps$a;	b	read
		p	0		buf
	m	()Ljava/util/Set;	c	targetNodes
	f	[Lepq;	a	openSet
	f	[Lepq;	b	closedSet
	f	Ljava/util/Set;	c	targetNodes
c	ept	net/minecraft/world/level/pathfinder/PathMode
	m	()[Lept;	a	$values
	f	Lept;	a	LAND
	f	Lept;	b	WATER
	f	Lept;	c	AIR
	f	[Lept;	d	$VALUES
c	epu	net/minecraft/world/level/pathfinder/Pathfinder
	m	(Lepr;I)V	<init>	<init>
		p	1		pathNodeMaker
		p	2		range
	m	(I)[Lepq;	a	lambda$findPath$3
	m	(Lbnf;Lepq;Ljava/util/Map;FIF)Leps;	a	findPath
		p	1		profiler
		p	2		startNode
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Lddj;Lbtp;Ljava/util/Set;FIF)Leps;	a	findPath
		p	1		world
		p	2		mob
		p	3		positions
		p	4		followRange
		p	5		distance
		p	6		rangeMultiplier
	m	(Lepq;Lepq;)F	a	distance
		p	1		a
		p	2		b
	m	(Lepq;Ljava/util/Set;)F	a	getBestH
		p	1		node
		p	2		targets
	m	(Lepq;Ljd;Z)Leps;	a	reconstructPath
		p	1		endNode
		p	2		target
		p	3		reachesTarget
	m	(Ljava/util/Map;Lepz;)Leps;	a	lambda$findPath$2
	m	(Ljd;)Lepz;	a	lambda$findPath$0
		p	1		pos
	m	(Ljava/util/Map;Lepz;)Leps;	b	lambda$findPath$1
		p	2		node
	f	F	a	FUDGING
	f	[Lepq;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Lepr;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Lepo;	f	openSet
c	epv	net/minecraft/world/level/pathfinder/PathType
	m	(Ljava/lang/String;IF)V	<init>	<init>
		p	3		defaultPenalty
	m	()F	a	getMalus
	m	()[Lepv;	b	$values
	f	F	A	malus
	f	[Lepv;	B	$VALUES
	f	Lepv;	a	BLOCKED
	f	Lepv;	b	OPEN
	f	Lepv;	c	WALKABLE
	f	Lepv;	d	WALKABLE_DOOR
	f	Lepv;	e	TRAPDOOR
	f	Lepv;	f	POWDER_SNOW
	f	Lepv;	g	DANGER_POWDER_SNOW
	f	Lepv;	h	FENCE
	f	Lepv;	i	LAVA
	f	Lepv;	j	WATER
	f	Lepv;	k	WATER_BORDER
	f	Lepv;	l	RAIL
	f	Lepv;	m	UNPASSABLE_RAIL
	f	Lepv;	n	DANGER_FIRE
	f	Lepv;	o	DAMAGE_FIRE
	f	Lepv;	p	DANGER_OTHER
	f	Lepv;	q	DAMAGE_OTHER
	f	Lepv;	r	DOOR_OPEN
	f	Lepv;	s	DOOR_WOOD_CLOSED
	f	Lepv;	t	DOOR_IRON_CLOSED
	f	Lepv;	u	BREACH
	f	Lepv;	v	LEAVES
	f	Lepv;	w	STICKY_HONEY
	f	Lepv;	x	COCOA
	f	Lepv;	y	DAMAGE_CAUTIOUS
	f	Lepv;	z	DANGER_TRAPDOOR
c	epw	net/minecraft/world/level/pathfinder/PathTypeCache
	m	(IJ)Lepv;	a	get
		p	1		index
		p	2		pos
	m	(J)I	a	index
		p	0		pos
	m	(Ldcc;Ljd;)Lepv;	a	getOrCompute
		p	1		world
		p	2		pos
	m	(Ldcc;Ljd;IJ)Lepv;	a	compute
		p	1		world
		p	2		pos
		p	3		index
		p	4		longPos
	m	(Ljd;)V	a	invalidate
		p	1		pos
	f	I	a	SIZE
	f	I	b	MASK
	f	[J	c	positions
	f	[Lepv;	d	pathTypes
c	epx	net/minecraft/world/level/pathfinder/PathfindingContext
	m	(Ldcg;Lbtp;)V	<init>	<init>
		p	1		world
		p	2		entity
	m	()Ldcg;	a	level
	m	(III)Lepv;	a	getPathTypeFromState
		p	1		x
		p	2		y
		p	3		z
	m	(Ljd;)Ldtc;	a	getBlockState
		p	1		pos
	m	()Ljd;	b	mobPosition
	f	Ldcg;	a	level
	f	Lepw;	b	cache
	f	Ljd;	c	mobPosition
	f	Ljd$a;	d	mutablePos
c	epy	net/minecraft/world/level/pathfinder/PathfinderWater
	m	(Z)V	<init>	<init>
		p	1		canJumpOutOfWater
	m	()Lepq;	a	getStart
	m	(DDD)Lepz;	a	getTarget
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lepq;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIJ)Lepv;	a	lambda$getCachedBlockType$0
		p	4		pos
	m	(Lddj;Lbtp;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lepq;)Z	a	isNodeValid
		p	1		node
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	(Lepx;IIILbtp;)Lepv;	a	getPathTypeOfMob
		p	1		context
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	([Lepq;Lepq;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Lepv;	b	getCachedBlockType
		p	1		x
		p	2		y
		p	3		z
	m	(Lepq;)Z	b	hasMalus
		p	0		node
	f	Z	k	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
c	epz	net/minecraft/world/level/pathfinder/PathDestination
	m	(III)V	<init>	<init>
		p	1		x
		p	2		y
		p	3		z
	m	(Lepq;)V	<init>	<init>
		p	1		node
	m	(FLepq;)V	a	updateBest
		p	1		distance
		p	2		node
	m	(Lvw;)Lepz;	c	createFromStream
		p	0		buffer
	m	()Lepq;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	f	F	m	bestHeuristic
	f	Lepq;	n	bestNode
	f	Z	o	reached
c	eqa	net/minecraft/world/level/pathfinder/PathfinderNormal
	m	()Lepq;	a	getStart
	m	(DDD)Lepz;	a	getTarget
		p	1		x
		p	3		y
		p	5		z
	m	(III)Lepq;	a	getBlockedNode
		p	1		x
		p	2		y
		p	3		z
	m	(IIIIDLji;Lepv;)Lepq;	a	findAcceptedNode
		p	1		x
		p	2		y
		p	3		z
		p	4		maxYStep
		p	5		prevFeetY
		p	7		direction
		p	8		nodeType
	m	(IIIIDLji;Lepv;Ljd$a;)Lepq;	a	tryJumpOn
		p	1		x
		p	2		y
		p	3		z
		p	4		maxYStep
		p	5		prevFeetY
		p	7		direction
		p	8		nodeType
		p	9		mutablePos
	m	(IIIJ)Lepv;	a	lambda$getCachedPathType$1
	m	(IIILepq;)Lepq;	a	tryFindFirstNonWaterBelow
		p	1		x
		p	2		y
		p	3		z
		p	4		node
	m	(IIILepv;)Lepq;	a	getClosedNode
		p	1		x
		p	2		y
		p	3		z
		p	4		type
	m	(IIILepv;F)Lepq;	a	getNodeAndUpdateCostToMax
		p	1		x
		p	2		y
		p	3		z
		p	4		type
		p	5		penalty
	m	(Ldcc;Ljd;)D	a	getFloorLevel
		p	0		world
		p	1		pos
	m	(Lddj;Lbtp;)V	a	prepare
		p	1		cachedWorld
		p	2		entity
	m	(Lepq;)Z	a	isDiagonalValid
		p	1		node
	m	(Lepq;Lepq;)Z	a	isNeighborValid
		p	1		node
		p	2		successor
	m	(Lepq;Lepq;Lepq;)Z	a	isDiagonalValid
		p	1		xNode
		p	2		zNode
		p	3		xDiagNode
	m	(Lepv;)Z	a	doesBlockHavePartialCollision
		p	0		nodeType
	m	(Lepx;III)Lepv;	a	getPathType
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	(Lepx;IIILbtp;)Lepv;	a	getPathTypeOfMob
		p	1		context
		p	2		x
		p	3		y
		p	4		z
		p	5		mob
	m	(Lepx;IIILepv;)Lepv;	a	checkNeighbourBlocks
		p	0		context
		p	1		x
		p	2		y
		p	3		z
		p	4		fallback
	m	(Lepx;Ljd$a;)Lepv;	a	getPathTypeStatic
		p	0		context
		p	1		pos
	m	(Lewx;)Z	a	hasCollisions
		p	1		box
	m	(Lewx;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
		p	2		box2
	m	(Ljd;)Z	a	canStartAt
		p	1		pos
	m	([Lepq;Lepq;)I	a	getNeighbors
		p	1		successors
		p	2		node
	m	()V	b	done
	m	(III)Lepv;	b	getCachedPathType
		p	1		x
		p	2		y
		p	3		z
	m	(Lbtp;Ljd;)Lepv;	b	getPathTypeStatic
		p	0		entity
		p	1		pos
	m	(Ldcc;Ljd;)Lepv;	b	getPathTypeFromState
		p	0		world
		p	1		pos
	m	(Lepq;)Z	b	canReachWithoutCollision
		p	1		node
	m	(Lepx;III)Ljava/util/Set;	b	getPathTypeWithinMobBB
		p	1		context
		p	2		x
		p	3		y
		p	4		z
	m	()Z	c	isAmphibious
	m	(Ljd;)Lepq;	c	getStartNode
		p	1		pos
	m	(III)Lepq;	d	tryFindFirstGroundNodeBelow
		p	1		x
		p	2		y
		p	3		z
	m	(Ljd;)D	d	getFloorLevel
		p	1		pos
	m	()D	h	getMobJumpHeight
	f	D	k	SPACE_BETWEEN_WALL_POSTS
	f	D	l	DEFAULT_MOB_JUMP_HEIGHT
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	pathTypesByPosCacheByMob
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	n	collisionCache
	f	[Lepq;	o	reusableNeighbors
c	eqa$1	net/minecraft/world/level/pathfinder/PathfinderNormal$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathType
c	eqc	net/minecraft/world/level/portal/DimensionTransition
	m	(Laqu;Lbsr;Leqc$a;)V	<init>	<init>
		p	1		world
		p	2		entity
		p	3		postDimensionTransition
	m	(Laqu;Lexc;Lexc;FFLeqc$a;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		velocity
		p	4		yaw
		p	5		pitch
		p	6		postDimensionTransition
	m	()Laqu;	a	newLevel
	m	(Laqu;Lbsr;)Lexc;	a	findAdjustedSharedSpawnPos
		p	0		world
		p	1		entity
	m	(Laqu;Lbsr;Leqc$a;)Leqc;	a	missingRespawnBlock
		p	0		world
		p	1		entity
		p	2		postDimensionTransition
	m	(Lbsr;)V	a	playPortalSound
		p	0		entity
	m	()Lexc;	b	pos
	m	(Lbsr;)V	b	placePortalTicket
		p	0		entity
	m	()Lexc;	c	speed
	m	(Lbsr;)V	c	lambda$static$0
		p	0		entity
	m	()F	d	yRot
	m	()F	e	xRot
	m	()Z	f	missingRespawnBlock
	m	()Leqc$a;	g	postDimensionTransition
	f	Leqc$a;	a	DO_NOTHING
	f	Leqc$a;	b	PLAY_PORTAL_SOUND
	f	Leqc$a;	c	PLACE_PORTAL_TICKET
	f	Laqu;	d	newLevel
	f	Lexc;	e	pos
	f	Lexc;	f	speed
	f	F	g	yRot
	f	F	h	xRot
	f	Z	i	missingRespawnBlock
	f	Leqc$a;	j	postDimensionTransition
c	eqc$a	net/minecraft/world/level/portal/DimensionTransition$a
	m	(Leqc$a;Lbsr;)V	a	lambda$then$0
		p	2		entity
	m	(Lbsr;)V	onTransition	onTransition
		p	1		entity
	m	(Leqc$a;)Leqc$a;	then	then
		p	1		next
c	eqd	net/minecraft/world/level/portal/PortalTravelAgent
	m	(Laqu;)V	<init>	<init>
		p	1		world
	m	(Ljd$a;)Z	a	canPortalReplaceBlock
		p	1		pos
	m	(Ljd;)Z	a	lambda$findClosestPortalPosition$1
	m	(Ljd;Ljd$a;Lji;I)Z	a	canHostFrame
		p	1		pos
		p	2		temp
		p	3		portalDirection
		p	4		distanceOrthogonalToPortal
	m	(Ljd;Ljd;)D	a	lambda$findClosestPortalPosition$2
	m	(Ljd;Lji$a;)Ljava/util/Optional;	a	createPortal
		p	1		pos
		p	2		axis
	m	(Ljd;ZLdut;)Ljava/util/Optional;	a	findClosestPortalPosition
		p	1		pos
		p	2		destIsNether
		p	3		worldBorder
	m	(Ljm;)Z	a	lambda$findClosestPortalPosition$0
		p	0		poiType
	f	I	a	TICKET_RADIUS
	f	I	b	NETHER_PORTAL_RADIUS
	f	I	c	OVERWORLD_PORTAL_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Laqu;	n	level
c	eqe	net/minecraft/world/level/portal/BlockPortalShape
	m	(Ldcx;Ljd;Lji$a;)V	<init>	<init>
		p	1		world
		p	2		pos
		p	3		axis
	m	()Z	a	isValid
	m	(DLexc;)Lexc;	a	lambda$findCollisionFreePosition$3
		p	2		pos
	m	(Ldcx;Ljd;Ljava/util/function/Predicate;Lji$a;)Ljava/util/Optional;	a	findPortalShape
		p	0		world
		p	1		pos
		p	2		validator
		p	3		axis
	m	(Ldcx;Ljd;Lji$a;)Ljava/util/Optional;	a	findEmptyPortalShape
		p	0		world
		p	1		pos
		p	2		axis
	m	(Ldtc;)Z	a	isEmpty
		p	0		state
	m	(Ldtc;Ldcc;Ljd;)Z	a	lambda$static$0
		p	0		state
		p	1		world
		p	2		pos
	m	(Ldtc;Ljd;)V	a	lambda$createPortalBlocks$2
		p	2		pos
	m	(Leqe;)Z	a	lambda$findEmptyPortalShape$1
		p	0		areaHelper
	m	(Lexc;Laqu;Lbsr;Lbsu;)Lexc;	a	findCollisionFreePosition
		p	0		fallback
		p	1		world
		p	2		entity
		p	3		dimensions
	m	(Ljd$a;)I	a	getDistanceUntilTop
		p	1		pos
	m	(Ljd$a;I)Z	a	hasTopFrame
		p	1		pos
		p	2		height
	m	(Ljd;)Ljd;	a	calculateBottomLeft
		p	1		pos
	m	(Ljd;Lji;)I	a	getDistanceUntilEdgeAboveFrame
		p	1		pos
		p	2		direction
	m	(Ll$a;Lji$a;Lexc;Lbsu;)Lexc;	a	getRelativePosition
		p	0		portalRect
		p	1		portalAxis
		p	2		entityPos
		p	3		entityDimensions
	m	()V	b	createPortalBlocks
	m	()Z	c	isComplete
	m	()I	d	calculateWidth
	m	()I	e	calculateHeight
	f	I	a	MAX_WIDTH
	f	I	b	MAX_HEIGHT
	f	I	c	MIN_WIDTH
	f	I	d	MIN_HEIGHT
	f	Ldtb$f;	e	FRAME
	f	F	f	SAFE_TRAVEL_MAX_ENTITY_XY
	f	D	g	SAFE_TRAVEL_MAX_VERTICAL_DELTA
	f	Ldcx;	h	level
	f	Lji$a;	i	axis
	f	Lji;	j	rightDir
	f	I	k	numPortalBlocks
	f	Ljd;	l	bottomLeft
	f	I	m	height
	f	I	n	width
c	eqg	net/minecraft/world/level/redstone/CollectingNeighborUpdater
	m	(Ldcw;I)V	<init>	<init>
		p	1		world
		p	2		maxChainDepth
	m	()V	a	runUpdates
	m	(Ldtc;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ljd;Ldfy;Ljd;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Ljd;Ldfy;Lji;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Ljd;Leqg$c;)V	a	addAndRun
		p	1		pos
		p	2		entry
	m	(Lji;Ldtc;Ljd;Ljd;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldcw;	c	level
	f	I	d	maxChainedNeighborUpdates
	f	Ljava/util/ArrayDeque;	e	stack
	f	Ljava/util/List;	f	addedThisLayer
	f	I	g	count
c	eqg$a	net/minecraft/world/level/redstone/CollectingNeighborUpdater$a
	m	()Ldtc;	a	state
	m	(Ldcw;)Z	a	runNext
		p	1		world
	m	()Ljd;	b	pos
	m	()Ldfy;	c	block
	m	()Ljd;	d	neighborPos
	m	()Z	e	movedByPiston
	f	Ldtc;	a	state
	f	Ljd;	b	pos
	f	Ldfy;	c	block
	f	Ljd;	d	neighborPos
	f	Z	e	movedByPiston
c	eqg$b	net/minecraft/world/level/redstone/CollectingNeighborUpdater$b
	m	(Ljd;Ldfy;Lji;)V	<init>	<init>
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Ldcw;)Z	a	runNext
		p	1		world
	f	Ljd;	a	sourcePos
	f	Ldfy;	b	sourceBlock
	f	Lji;	c	skipDirection
	f	I	d	idx
c	eqg$c	net/minecraft/world/level/redstone/CollectingNeighborUpdater$c
	m	(Ldcw;)Z	a	runNext
		p	1		world
c	eqg$d	net/minecraft/world/level/redstone/CollectingNeighborUpdater$d
	m	()Lji;	a	direction
	m	(Ldcw;)Z	a	runNext
		p	1		world
	m	()Ldtc;	b	state
	m	()Ljd;	c	pos
	m	()Ljd;	d	neighborPos
	m	()I	e	updateFlags
	m	()I	f	updateLimit
	f	Lji;	a	direction
	f	Ldtc;	b	state
	f	Ljd;	c	pos
	f	Ljd;	d	neighborPos
	f	I	e	updateFlags
	f	I	f	updateLimit
c	eqg$e	net/minecraft/world/level/redstone/CollectingNeighborUpdater$e
	m	()Ljd;	a	pos
	m	(Ldcw;)Z	a	runNext
		p	1		world
	m	()Ldfy;	b	block
	m	()Ljd;	c	neighborPos
	f	Ljd;	a	pos
	f	Ldfy;	b	block
	f	Ljd;	c	neighborPos
c	eqh	eqh
	m	(Ldcw;)V	<init>	<init>
		p	1		world
	m	(Ldtc;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ljd;Ldfy;Ljd;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Lji;Ldtc;Ljd;Ljd;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	Ldcw;	b	level
c	eqi	net/minecraft/world/level/redstone/NeighborUpdater
	m	(Ldcw;Ldtc;Ljd;Ldfy;Ljd;Z)V	a	executeUpdate
		p	0		world
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ldcx;Lji;Ldtc;Ljd;Ljd;II)V	a	executeShapeUpdate
		p	0		world
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	m	(Ldfy;)Ljava/lang/String;	a	lambda$executeUpdate$0
	m	(Ldtc;Ljd;Ldfy;Ljd;Z)V	a	neighborChanged
		p	1		state
		p	2		pos
		p	3		sourceBlock
		p	4		sourcePos
		p	5		notify
	m	(Ljd;Ldfy;Ljd;)V	a	neighborChanged
		p	1		pos
		p	2		sourceBlock
		p	3		sourcePos
	m	(Ljd;Ldfy;Lji;)V	a	updateNeighborsAtExceptFromFacing
		p	1		pos
		p	2		sourceBlock
		p	3		except
	m	(Lji;Ldtc;Ljd;Ljd;II)V	a	shapeUpdate
		p	1		direction
		p	2		neighborState
		p	3		pos
		p	4		neighborPos
		p	5		flags
		p	6		maxUpdateDepth
	f	[Lji;	a	UPDATE_ORDER
c	eqj	eqj
	f	I	a	SIGNAL_MIN
	f	I	b	SIGNAL_MAX
	f	I	c	SIGNAL_NONE
c	eql	net/minecraft/world/level/saveddata/PersistentBase
	m	(Ljava/io/File;Ljo$a;)V	a	save
		p	1		file
		p	2		registryLookup
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	(Z)V	a	setDirty
		p	1		dirty
	m	()V	c	setDirty
	m	()Z	d	isDirty
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	dirty
c	eql$a	net/minecraft/world/level/saveddata/PersistentBase$a
	m	()Ljava/util/function/Supplier;	a	constructor
	m	()Ljava/util/function/BiFunction;	b	deserializer
	m	()Lazw;	c	type
	f	Ljava/util/function/Supplier;	a	constructor
	f	Ljava/util/function/BiFunction;	b	deserializer
	f	Lazw;	c	type
c	eqm	net/minecraft/world/level/saveddata/maps/MapIconBanner
	m	(Ljd;Lcti;Ljava/util/Optional;)V	<init>	<init>
		p	1		pos
		p	2		dyeColor
	m	()Ljm;	a	getDecoration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldcc;Ljd;)Leqm;	a	fromWorld
		p	0		blockView
		p	1		blockPos
	m	()Ljava/lang/String;	b	getId
	m	()Ljd;	c	pos
	m	()Lcti;	d	color
	m	()Ljava/util/Optional;	e	name
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Ljd;	c	pos
	f	Lcti;	d	color
	f	Ljava/util/Optional;	e	name
c	eqm$1	net/minecraft/world/level/saveddata/maps/MapIconBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
c	eqn	net/minecraft/world/level/saveddata/maps/MapIcon
	m	(Ljm;BBBLjava/util/Optional;)V	<init>	<init>
		p	2		x
		p	3		z
		p	4		rotation
	m	()Lakr;	a	getSpriteLocation
	m	()Z	b	renderOnFrame
	m	()Ljm;	c	type
	m	()B	d	x
	m	()B	e	y
	m	()B	f	rot
	m	()Ljava/util/Optional;	g	name
	f	Lyx;	a	STREAM_CODEC
	f	Ljm;	b	type
	f	B	c	x
	f	B	d	y
	f	B	e	rot
	f	Ljava/util/Optional;	f	name
c	eqo	net/minecraft/world/level/saveddata/maps/MapDecorationType
	m	()Z	a	hasMapColor
	m	()Lakr;	b	assetId
	m	()Z	c	showOnItemFrame
	m	()I	d	mapColor
	m	()Z	e	explorationMapElement
	m	()Z	f	trackCount
	f	I	a	NO_MAP_COLOR
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lyx;	c	STREAM_CODEC
	f	Lakr;	d	assetId
	f	Z	e	showOnItemFrame
	f	I	f	mapColor
	f	Z	g	explorationMapElement
	f	Z	h	trackCount
c	eqp	net/minecraft/world/level/saveddata/maps/MapDecorationTypes
	m	(Ljava/lang/String;Ljava/lang/String;ZIZZ)Ljm;	a	register
		p	0		id
		p	1		assetId
		p	2		showOnItemFrame
		p	3		mapColor
		p	4		trackCount
		p	5		explorationMapElement
	m	(Ljava/lang/String;Ljava/lang/String;ZZ)Ljm;	a	register
		p	0		id
		p	1		assetId
		p	2		showOnItemFrame
		p	3		trackCount
	m	(Ljz;)Ljm;	a	bootstrap
		p	0		registry
	f	Ljm;	A	RED_X
	f	Ljm;	B	DESERT_VILLAGE
	f	Ljm;	C	PLAINS_VILLAGE
	f	Ljm;	D	SAVANNA_VILLAGE
	f	Ljm;	E	SNOWY_VILLAGE
	f	Ljm;	F	TAIGA_VILLAGE
	f	Ljm;	G	JUNGLE_TEMPLE
	f	Ljm;	H	SWAMP_HUT
	f	Ljm;	I	TRIAL_CHAMBERS
	f	I	J	COPPER_COLOR
	f	Ljm;	a	PLAYER
	f	Ljm;	b	FRAME
	f	Ljm;	c	RED_MARKER
	f	Ljm;	d	BLUE_MARKER
	f	Ljm;	e	TARGET_X
	f	Ljm;	f	TARGET_POINT
	f	Ljm;	g	PLAYER_OFF_MAP
	f	Ljm;	h	PLAYER_OFF_LIMITS
	f	Ljm;	i	WOODLAND_MANSION
	f	Ljm;	j	OCEAN_MONUMENT
	f	Ljm;	k	WHITE_BANNER
	f	Ljm;	l	ORANGE_BANNER
	f	Ljm;	m	MAGENTA_BANNER
	f	Ljm;	n	LIGHT_BLUE_BANNER
	f	Ljm;	o	YELLOW_BANNER
	f	Ljm;	p	LIME_BANNER
	f	Ljm;	q	PINK_BANNER
	f	Ljm;	r	GRAY_BANNER
	f	Ljm;	s	LIGHT_GRAY_BANNER
	f	Ljm;	t	CYAN_BANNER
	f	Ljm;	u	PURPLE_BANNER
	f	Ljm;	v	BLUE_BANNER
	f	Ljm;	w	BROWN_BANNER
	f	Ljm;	x	GREEN_BANNER
	f	Ljm;	y	RED_BANNER
	f	Ljm;	z	BLACK_BANNER
c	eqq	net/minecraft/world/level/saveddata/maps/WorldMapFrame
	m	(Ljd;II)V	<init>	<init>
		p	1		pos
		p	2		rotation
		p	3		entityId
	m	()Lub;	a	save
	m	(Ljd;)Ljava/lang/String;	a	frameId
		p	0		pos
	m	(Lub;)Leqq;	a	load
		p	0		nbt
	m	()Ljd;	b	getPos
	m	()I	c	getRotation
	m	()I	d	getEntityId
	m	()Ljava/lang/String;	e	getId
	f	Ljd;	a	pos
	f	I	b	rotation
	f	I	c	entityId
c	eqr	net/minecraft/world/level/saveddata/maps/MapId
	m	()Ljava/lang/String;	a	key
	m	()I	b	id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lyx;	b	STREAM_CODEC
	f	I	c	id
c	eqs	net/minecraft/world/level/saveddata/maps/PersistentIdCounts
	m	()Leql$a;	a	factory
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	()Leqr;	b	getFreeAuxValueForMap
	m	(Lub;Ljo$a;)Leqs;	b	load
		p	0		nbt
		p	1		registryLookup
	f	Ljava/lang/String;	a	FILE_NAME
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	usedAuxIds
c	eqt	net/minecraft/world/level/saveddata/maps/WorldMap
	m	(IIBZZZLakq;)V	<init>	<init>
		p	1		centerX
		p	2		centerZ
		p	3		scale
		p	4		showDecorations
		p	5		unlimitedTracking
		p	6		locked
		p	7		dimension
	m	()Leql$a;	a	factory
	m	(BZLakq;)Leqt;	a	createForClient
		p	0		scale
		p	1		locked
		p	2		dimension
	m	(DDBZZLakq;)Leqt;	a	createFresh
		p	0		centerX
		p	2		centerZ
		p	4		scale
		p	5		showDecorations
		p	6		unlimitedTracking
		p	7		dimension
	m	(I)Z	a	isTrackedCountOverLimit
		p	1		decorationCount
	m	(II)V	a	setColorsDirty
		p	1		x
		p	2		z
	m	(IIB)Z	a	updateColor
		p	1		x
		p	2		z
		p	3		color
	m	(Lcmx;)Leqt$a;	a	getHoldingPlayer
		p	1		player
	m	(Lcmx;Lcuq;)V	a	tickCarriedBy
		p	1		player
		p	2		stack
	m	(Lcmx;Ljava/lang/String;Lcxr$a;)V	a	lambda$tickCarriedBy$5
		p	2		id
		p	3		decoration
	m	(Lcuq;)Ljava/util/function/Predicate;	a	mapMatcher
		p	0		stack
	m	(Lcuq;Leqr;Lcuq;)Z	a	lambda$mapMatcher$4
		p	2		other
	m	(Lcuq;Ljd;Ljava/lang/String;Ljm;)V	a	addTargetDecoration
		p	0		stack
		p	1		pos
		p	2		id
		p	3		decorationType
	m	(Ldcc;II)V	a	checkBanners
		p	1		world
		p	2		x
		p	3		z
	m	(Ldcx;Ljd;)Z	a	toggleBanner
		p	1		world
		p	2		pos
	m	(Leqr;Lcmx;)Lzg;	a	getUpdatePacket
		p	1		mapId
		p	2		player
	m	(Ljava/lang/String;)V	a	removeDecoration
		p	1		id
	m	(Ljava/lang/String;Lcxr$a;Lcxr;)Lcxr;	a	lambda$addTargetDecoration$6
		p	2		decorations
	m	(Ljava/util/List;)V	a	addClientSideDecorations
		p	1		decorations
	m	(Ljd;I)V	a	removedFromFrame
		p	1		pos
		p	2		id
	m	(Ljm;Ldcx;Ljava/lang/String;DDDLwz;)V	a	addDecoration
		p	1		type
		p	2		world
		p	3		key
		p	4		x
		p	6		z
		p	8		rotation
		p	10		text
	m	(Lub;)Ljava/lang/IllegalArgumentException;	a	lambda$load$1
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$save$3
	m	()Leqt;	b	locked
	m	(I)Ljava/lang/String;	b	getFrameKey
		p	0		id
	m	(IIB)V	b	setColor
		p	1		x
		p	2		z
		p	3		color
	m	(Ljava/lang/String;)V	b	lambda$load$2
		p	0		banner
	m	(Lub;Ljo$a;)Leqt;	b	load
		p	0		nbt
		p	1		registryLookup
	m	()Leqt;	e	scaled
	m	()Ljava/util/Collection;	f	getBanners
	m	()Z	g	isExplorationMap
	m	()Ljava/lang/Iterable;	h	getDecorations
	m	()V	i	setDecorationsDirty
	m	()Leqt;	j	lambda$factory$0
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	I	c	centerX
	f	I	d	centerZ
	f	Lakq;	e	dimension
	f	B	f	scale
	f	[B	g	colors
	f	Z	h	locked
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	MAP_SIZE
	f	I	k	HALF_MAP_SIZE
	f	Ljava/lang/String;	l	FRAME_PREFIX
	f	Z	m	trackingPosition
	f	Z	n	unlimitedTracking
	f	Ljava/util/List;	o	carriedBy
	f	Ljava/util/Map;	p	carriedByPlayers
	f	Ljava/util/Map;	q	bannerMarkers
	f	Ljava/util/Map;	r	decorations
	f	Ljava/util/Map;	s	frameMarkers
	f	I	t	trackedDecorationCount
c	eqt$a	net/minecraft/world/level/saveddata/maps/WorldMap$WorldMapHumanTracker
	m	(Leqt;Lcmx;)V	<init>	<init>
		p	2		player
	m	()Leqt$b;	a	createPatch
	m	(II)V	a	markColorsDirty
		p	1		startX
		p	2		startZ
	m	(Leqr;)Lzg;	a	nextUpdatePacket
		p	1		mapId
	m	()V	b	markDecorationsDirty
	f	Lcmx;	a	player
	f	I	b	step
	f	Leqt;	c	this$0
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
c	eqt$b	net/minecraft/world/level/saveddata/maps/WorldMap$b
	m	(IIII[B)V	<init>	<init>
		p	1		startX
		p	2		startZ
		p	3		width
		p	4		height
		p	5		colors
	m	()I	a	startX
	m	(Leqt;)V	a	applyToMap
		p	1		mapState
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	read
		p	0		buf
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	write
		p	0		buf
		p	1		updateData
	m	()I	b	startY
	m	()I	c	width
	m	()I	d	height
	m	()[B	e	mapColors
	f	Lyx;	a	STREAM_CODEC
	f	I	b	startX
	f	I	c	startY
	f	I	d	width
	f	I	e	height
	f	[B	f	mapColors
c	eqw	net/minecraft/world/level/storage/PersistentCommandStorage
	m	(Leqz;)V	<init>	<init>
		p	1		stateManager
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Lakr;)Lub;	a	get
		p	1		id
	m	(Lakr;Lub;)V	a	set
		p	1		id
		p	2		nbt
	m	(Ljava/lang/String;)Leqw$a;	a	newStorage
		p	1		namespace
	m	(Ljava/lang/String;Lub;Ljo$a;)Leqw$a;	a	lambda$factory$1
		p	2		nbt
		p	3		registryLookup
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$2
		p	0		entry
	m	(Ljava/lang/String;)Leql$a;	b	factory
		p	1		namespace
	m	(Ljava/lang/String;)Ljava/lang/String;	c	createId
		p	0		namespace
	m	(Ljava/lang/String;)Leqw$a;	d	lambda$factory$0
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Leqz;	c	storage
c	eqw$a	net/minecraft/world/level/storage/PersistentCommandStorage$a
	m	(Ljava/lang/String;)Lub;	a	get
		p	1		name
	m	(Ljava/lang/String;Ljava/lang/String;)Lakr;	a	lambda$getKeys$1
		p	1		key
	m	(Ljava/lang/String;Lub;)V	a	put
		p	1		name
		p	2		nbt
	m	(Lub;)Leqw$a;	a	load
		p	1		nbt
	m	(Lub;Ljava/lang/String;Lub;)V	a	lambda$save$0
		p	1		key
		p	2		value
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	b	getKeys
		p	1		namespace
	f	Ljava/lang/String;	a	TAG_CONTENTS
	f	Ljava/util/Map;	b	storage
c	eqx	net/minecraft/world/level/storage/DataVersion
	m	(I)V	<init>	<init>
		p	1		id
	m	(ILjava/lang/String;)V	<init>	<init>
		p	1		id
		p	2		series
	m	()Z	a	isSideSeries
	m	(Leqx;)Z	a	isCompatible
		p	1		other
	m	()Ljava/lang/String;	b	getSeries
	m	()I	c	getVersion
	f	Ljava/lang/String;	a	MAIN_SERIES
	f	I	b	version
	f	Ljava/lang/String;	c	series
c	eqy	net/minecraft/world/level/storage/SecondaryWorldData
	m	(Lerl;Lerk;)V	<init>	<init>
		p	1		saveProperties
		p	2		worldProperties
	m	()Ljd;	a	getSpawnPos
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Ldct;)V	a	setGameType
		p	1		gameMode
	m	(Ldut$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Ljd;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Lp;Ldcy;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()F	b	getSpawnAngle
	m	(I)V	b	setThunderTime
		p	1		thunderTime
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Z)V	b	setRaining
		p	1		raining
	m	()J	c	getGameTime
	m	(I)V	c	setRainTime
		p	1		rainTime
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()J	d	getDayTime
	m	(I)V	d	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()Ljava/lang/String;	e	getLevelName
	m	(I)V	e	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	f	getClearWeatherTime
	m	()Z	g	isThundering
	m	()I	h	getThunderTime
	m	()Z	i	isRaining
	m	()I	j	getRainTime
	m	()Ldct;	k	getGameType
	m	()Z	l	isHardcore
	m	()Z	m	isAllowCommands
	m	()Z	n	isInitialized
	m	()Ldcs;	o	getGameRules
	m	()Ldut$c;	p	getWorldBorder
	m	()Lbqo;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
	m	()Lewp;	s	getScheduledEvents
	m	()I	t	getWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	f	Lerl;	a	worldData
	f	Lerk;	b	wrapped
c	eqz	net/minecraft/world/level/storage/WorldPersistentData
	m	(Ljava/io/File;Lcom/mojang/datafixers/DataFixer;Ljo$a;)V	<init>	<init>
		p	1		directory
		p	2		dataFixer
		p	3		registryLookup
	m	()V	a	save
	m	(Leql$a;Ljava/lang/String;)Leql;	a	computeIfAbsent
		p	1		type
		p	2		id
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
		p	1		stream
	m	(Ljava/lang/String;)Ljava/io/File;	a	getDataFile
		p	1		id
	m	(Ljava/lang/String;Lazw;I)Lub;	a	readTagFromDisk
		p	1		id
		p	2		dataFixTypes
		p	3		currentSaveVersion
	m	(Ljava/lang/String;Leql;)V	a	set
		p	1		id
		p	2		state
	m	(Ljava/util/function/BiFunction;Lazw;Ljava/lang/String;)Leql;	a	readSavedData
		p	1		readFunction
		p	2		dataFixTypes
		p	3		id
	m	(Leql$a;Ljava/lang/String;)Leql;	b	get
		p	1		type
		p	2		id
	m	(Ljava/lang/String;Leql;)V	b	lambda$save$0
		p	1		id
		p	2		state
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	cache
	f	Lcom/mojang/datafixers/DataFixer;	c	fixerUpper
	f	Ljo$a;	d	registries
	f	Ljava/io/File;	e	dataFolder
c	era	net/minecraft/world/level/storage/FileNameDateFormatter
	m	()Ljava/time/format/DateTimeFormatter;	a	create
c	erb	net/minecraft/world/level/storage/WorldData
	m	()Ljd;	a	getSpawnPos
	m	(Ldcy;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
	m	(Lp;Ldcy;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	()F	b	getSpawnAngle
	m	(Z)V	b	setRaining
		p	1		raining
	m	()J	c	getGameTime
	m	()J	d	getDayTime
	m	()Ljava/lang/String;	e	lambda$fillCrashReportCategory$1
	m	()Z	g	isThundering
	m	()Z	i	isRaining
	m	()Z	l	isHardcore
	m	()Ldcs;	o	getGameRules
	m	()Lbqo;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
c	erc	net/minecraft/world/level/storage/LevelDataAndDimensions
	m	()Lerl;	a	worldData
	m	()Ldzt$b;	b	dimensions
	f	Lerl;	a	worldData
	f	Ldzt$b;	b	dimensions
c	erd	net/minecraft/world/level/storage/SavedFile
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		relativePath
	m	()Ljava/lang/String;	a	getId
	f	Lerd;	a	PLAYER_ADVANCEMENTS_DIR
	f	Lerd;	b	PLAYER_STATS_DIR
	f	Lerd;	c	PLAYER_DATA_DIR
	f	Lerd;	d	PLAYER_OLD_DATA_DIR
	f	Lerd;	e	LEVEL_DATA_FILE
	f	Lerd;	f	OLD_LEVEL_DATA_FILE
	f	Lerd;	g	ICON_FILE
	f	Lerd;	h	LOCK_FILE
	f	Lerd;	i	GENERATED_DIR
	f	Lerd;	j	DATAPACK_DIR
	f	Lerd;	k	MAP_RESOURCE_FILE
	f	Lerd;	l	ROOT
	f	Ljava/lang/String;	m	id
c	ere	net/minecraft/world/level/storage/LevelStorageException
	m	(Lwz;)V	<init>	<init>
		p	1		messageText
	m	()Lwz;	a	getMessageComponent
	f	Lwz;	a	messageComponent
c	erf	net/minecraft/world/level/storage/Convertable
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lews;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		savesDirectory
		p	2		backupsDirectory
		p	3		symlinkFinder
		p	4		dataFixer
	m	()Ljava/lang/String;	a	getName
	m	(Lakr;)V	a	lambda$parseFeatureFlagsFromSummary$8
		p	0		id
	m	(Lcom/mojang/datafixers/DataFixer;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$readLevelDataTagFixed$6
	m	(Lcom/mojang/serialization/Dynamic;)Lddr;	a	readDataConfig
		p	0		dynamic
	m	(Lcom/mojang/serialization/Dynamic;Latp;Z)Lalo$d;	a	getPackConfig
		p	0		dynamic
		p	1		dataPackManager
		p	2		safeMode
	m	(Lcom/mojang/serialization/Dynamic;Lddr;Ljz;Lka$b;)Lerc;	a	getLevelDataAndDimensions
		p	0		dynamic
		p	1		dataConfiguration
		p	2		dimensionsRegistry
		p	3		registryManager
	m	(Lcom/mojang/serialization/Dynamic;Lerf$b;Z)Lerg;	a	makeLevelSummary
		p	1		dynamic
		p	2		save
		p	3		locked
	m	(Lerf$a;)Ljava/util/concurrent/CompletableFuture;	a	loadLevelSummaries
		p	1		levels
	m	(Lerf$b;)J	a	getFileModificationTime
		p	0		save
	m	(Lerf$b;Z)Lerg;	a	readLevelSummary
		p	1		save
		p	2		locked
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
		p	1		name
	m	(Ljava/nio/file/Path;)Lews;	a	parseValidator
		p	0		allowedSymlinksFile
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/serialization/Dynamic;	a	readLevelDataTagFixed
		p	0		path
		p	1		dataFixer
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$loadLevelSummaries$4
		p	0		summaries
	m	()Lerf$a;	b	findLevelCandidates
	m	(Lcom/mojang/datafixers/DataFixer;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$readLevelDataTagFixed$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcpl;	b	parseFeatureFlagsFromSummary
		p	0		levelData
	m	(Lerf$b;)Lerg;	b	lambda$loadLevelSummaries$3
	m	(Ljava/lang/String;)Z	b	levelExists
		p	1		name
	m	(Ljava/nio/file/Path;)Lerf;	b	createDefault
		p	0		path
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	c	lambda$parseFeatureFlagsFromSummary$7
		p	0		featureFlag
	m	(Lerf$b;)Z	c	lambda$findLevelCandidates$2
		p	0		levelSave
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	c	getLevelPath
		p	1		name
	m	(Ljava/nio/file/Path;)Lub;	c	readLevelDataTagRaw
		p	0		path
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	(Ljava/lang/String;)Lerf$c;	d	validateAndCreateAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Ljava/time/Instant;	d	getFileModificationTime
		p	0		path
	m	()Lews;	e	getWorldDirValidator
	m	(Ljava/lang/String;)Lerf$c;	e	createAccess
		p	1		directoryName
	m	(Ljava/nio/file/Path;)Luy;	e	readLightweightData
		p	0		path
	m	()I	f	getStorageVersion
	m	(Ljava/nio/file/Path;)Z	f	lambda$findLevelCandidates$1
		p	0		path
	m	(Ljava/nio/file/Path;)Z	g	lambda$static$0
		p	0		path
	f	Ljava/lang/String;	a	ALLOWED_SYMLINKS_CONFIG_NAME
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	c	FORMATTER
	f	Ljava/lang/String;	d	TAG_DATA
	f	Ljava/nio/file/PathMatcher;	e	NO_SYMLINKS_ALLOWED
	f	I	f	UNCOMPRESSED_NBT_QUOTA
	f	I	g	DISK_SPACE_WARNING_THRESHOLD
	f	Ljava/nio/file/Path;	h	baseDir
	f	Ljava/nio/file/Path;	i	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	j	fixerUpper
	f	Lews;	k	worldDirValidator
c	erf$a	net/minecraft/world/level/storage/Convertable$a
	m	()Z	a	isEmpty
	m	()Ljava/util/List;	b	levels
	f	Ljava/util/List;	a	levels
c	erf$b	net/minecraft/world/level/storage/Convertable$b
	m	()Ljava/lang/String;	a	directoryName
	m	(Lerd;)Ljava/nio/file/Path;	a	resourcePath
		p	1		savePath
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	a	corruptedDataFile
		p	1		dateTime
	m	()Ljava/nio/file/Path;	b	dataFile
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	b	rawDataFile
		p	1		dateTime
	m	()Ljava/nio/file/Path;	c	oldDataFile
	m	()Ljava/nio/file/Path;	d	iconFile
	m	()Ljava/nio/file/Path;	e	lockFile
	m	()Ljava/nio/file/Path;	f	path
	f	Ljava/nio/file/Path;	a	path
c	erf$c	net/minecraft/world/level/storage/Convertable$ConversionSession
	m	(Lerf;Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
		p	2		directoryName
		p	3		path
	m	()J	a	estimateDiskSpace
	m	(Lakq;)Ljava/nio/file/Path;	a	getDimensionPath
		p	1		key
	m	(Lcom/mojang/serialization/Dynamic;)Lerg;	a	getSummary
		p	1		dynamic
	m	(Lerd;)Ljava/nio/file/Path;	a	getLevelPath
		p	1		savePath
	m	(Ljava/lang/String;)V	a	renameLevel
		p	1		name
	m	(Ljava/lang/String;Lub;)V	a	lambda$renameAndDropPlayer$1
		p	1		nbt
	m	(Ljava/util/function/Consumer;)V	a	modifyLevelDataWithoutDatafix
		p	1		nbtProcessor
	m	(Lka;Lerl;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
	m	(Lka;Lerl;Lub;)V	a	saveDataTag
		p	1		registryManager
		p	2		saveProperties
		p	3		nbt
	m	(Lub;)V	a	saveLevelData
		p	1		nbt
	m	(Z)Ljava/time/Instant;	a	getFileModificationTime
		p	1		old
	m	()Z	b	checkForLowDiskSpace
	m	(Ljava/lang/String;)V	b	renameAndDropPlayer
		p	1		name
	m	(Ljava/lang/String;Lub;)V	b	lambda$renameLevel$0
		p	1		nbt
	m	(Z)Lcom/mojang/serialization/Dynamic;	b	getDataTag
		p	1		old
	m	()V	c	safeClose
	m	()Lerf;	d	parent
	m	()Lerf$b;	e	getLevelDirectory
	m	()Ljava/lang/String;	f	getLevelId
	m	()Leri;	g	createPlayerStorage
	m	()Lcom/mojang/serialization/Dynamic;	h	getDataTag
	m	()Lcom/mojang/serialization/Dynamic;	i	getDataTagFallback
	m	()Ljava/util/Optional;	j	getIconFile
	m	()V	k	deleteLevel
	m	()J	l	makeWorldBackup
	m	()Z	m	hasWorldData
	m	()Z	n	restoreLevelDataFromOld
	m	()V	o	checkLock
	f	Lerf;	a	this$0
	f	Laxt;	b	lock
	f	Lerf$b;	c	levelDirectory
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
c	erf$c$1	net/minecraft/world/level/storage/Convertable$ConversionSession$1
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Lerf$c;	b	this$1
c	erf$c$2	net/minecraft/world/level/storage/Convertable$ConversionSession$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Lerf$c;	c	this$1
c	erg	net/minecraft/world/level/storage/WorldInfo
	m	(Ldda;Lerh;Ljava/lang/String;ZZZLjava/nio/file/Path;)V	<init>	<init>
		p	1		levelInfo
		p	2		versionInfo
		p	3		name
		p	4		requiresConversion
		p	5		locked
		p	6		experimental
		p	7		iconPath
	m	()Ljava/lang/String;	a	getLevelId
	m	(Lerg;)I	a	compareTo
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/nio/file/Path;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()Z	e	isExperimental
	m	()J	f	getLastPlayed
	m	()Ldda;	g	getSettings
	m	()Ldct;	h	getGameMode
	m	()Z	i	isHardcore
	m	()Z	j	hasCommands
	m	()Lxn;	k	getWorldVersionName
	m	()Lerh;	l	levelVersion
	m	()Z	m	shouldBackup
	m	()Z	n	isDowngrade
	m	()Lerg$a;	o	backupStatus
	m	()Z	p	isLocked
	m	()Z	q	isDisabled
	m	()Z	r	isCompatible
	m	()Lwz;	s	getInfo
	m	()Lwz;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	m	()Z	y	canDelete
	m	()Lwz;	z	createInfo
	f	Lwz;	a	PLAY_WORLD
	f	Ldda;	b	settings
	f	Lerh;	c	levelVersion
	f	Ljava/lang/String;	d	levelId
	f	Z	e	requiresManualConversion
	f	Z	f	locked
	f	Z	g	experimental
	f	Ljava/nio/file/Path;	h	icon
	f	Lwz;	i	info
c	erg$a	net/minecraft/world/level/storage/WorldInfo$a
	m	(Ljava/lang/String;IZZLjava/lang/String;)V	<init>	<init>
		p	3		backup
		p	4		dangerous
		p	5		translationKeySuffix
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Lerg$a;	d	$values
	f	Lerg$a;	a	NONE
	f	Lerg$a;	b	DOWNGRADE
	f	Lerg$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Lerg$a;	g	$VALUES
c	erg$b	net/minecraft/world/level/storage/WorldInfo$b
	m	(Ljava/lang/String;Ljava/nio/file/Path;J)V	<init>	<init>
		p	1		name
		p	2		iconPath
		p	3		lastPlayed
	m	(Lxw;)Lxw;	a	lambda$static$0
		p	0		style
	m	()Ljava/lang/String;	b	getLevelName
	m	()J	f	getLastPlayed
	m	()Z	q	isDisabled
	m	()Lwz;	s	getInfo
	m	()Lwz;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	f	Lwz;	b	INFO
	f	Lwz;	c	RECOVER
	f	J	d	lastPlayed
c	erg$c	net/minecraft/world/level/storage/WorldInfo$c
	m	(Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
		p	1		name
		p	2		iconPath
	m	()Ljava/lang/String;	b	getLevelName
	m	()J	f	getLastPlayed
	m	()Z	q	isDisabled
	m	()Lwz;	s	getInfo
	m	()Lwz;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	f	Lwz;	b	MORE_INFO_BUTTON
	f	Lwz;	c	INFO
c	erh	net/minecraft/world/level/storage/LevelVersion
	m	(IJLjava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
		p	1		levelFormatVersion
		p	2		lastPlayed
		p	4		versionName
		p	5		versionId
		p	6		series
		p	7		stable
	m	()I	a	levelDataVersion
	m	(Lcom/mojang/serialization/Dynamic;)Lerh;	a	parse
		p	0		dynamic
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Leqx;	d	minecraftVersion
	m	()Z	e	snapshot
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Leqx;	d	minecraftVersion
	f	Z	e	snapshot
c	eri	net/minecraft/world/level/storage/WorldNBTStorage
	m	(Lerf$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
		p	1		session
		p	2		dataFixer
	m	(Lcmx;)V	a	save
		p	1		player
	m	(Lcmx;Ljava/lang/String;)V	a	backup
		p	1		player
		p	2		extension
	m	(Lcmx;Lub;)Lub;	a	lambda$load$1
		p	2		nbt
	m	(Lcmx;)Ljava/util/Optional;	b	load
		p	1		player
	m	(Lcmx;Ljava/lang/String;)Ljava/util/Optional;	b	load
		p	1		player
		p	2		extension
	m	(Lcmx;)Ljava/util/Optional;	c	lambda$load$0
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
	f	Ljava/time/format/DateTimeFormatter;	d	FORMATTER
c	erj	net/minecraft/world/level/storage/WorldDataServer
	m	(Ldda;Ldzw;Lerj$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		levelInfo
		p	2		generatorOptions
		p	3		specialProperty
		p	4		lifecycle
	m	(Lub;ZLjd;FJJIIIZIZZZLdut$c;IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Lewp;Lub;Ldxb$a;Ldda;Ldzw;Lerj$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
		p	1		playerData
		p	2		modded
		p	3		spawnPos
		p	4		spawnAngle
		p	5		time
		p	7		timeOfDay
		p	9		version
		p	10		clearWeatherTime
		p	11		rainTime
		p	12		raining
		p	13		thunderTime
		p	14		thundering
		p	15		initialized
		p	16		difficultyLocked
		p	17		worldBorder
		p	18		wanderingTraderSpawnDelay
		p	19		wanderingTraderSpawnChance
		p	20		wanderingTraderId
		p	21		serverBrands
		p	22		removedFeatures
		p	23		scheduledEvents
		p	24		customBossEvents
		p	25		dragonFight
		p	26		levelInfo
		p	27		generatorOptions
		p	28		specialProperty
		p	29		lifecycle
	m	()Z	A	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Ldxb$a;	C	endDragonFightData
	m	()Lddr;	D	getDataConfiguration
	m	()Lub;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ljava/util/Set;	H	getRemovedFeatureFlags
	m	()Lerk;	I	overworldData
	m	()Ldda;	J	getLevelSettings
	m	()Ljd;	a	getSpawnPos
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Lbqo;)V	a	setDifficulty
		p	1		difficulty
	m	(Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$setTagData$4
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;Ldda;Lerj$a;Ldzw;Lcom/mojang/serialization/Lifecycle;)Lerj;	a	parse
		p	0		dynamic
		p	1		info
		p	2		specialProperty
		p	3		generatorOptions
		p	4		lifecycle
	m	(Ldct;)V	a	setGameType
		p	1		gameMode
	m	(Lddr;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Ldut$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ldxb$a;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Ljava/util/Set;)Luh;	a	stringCollectionToTag
		p	0		strings
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Ljd;F)V	a	setSpawn
		p	1		pos
		p	2		angle
	m	(Lka;Lub;)Lub;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Lka;Lub;Lub;)V	a	setTagData
		p	1		registryManager
		p	2		levelNbt
		p	3		playerNbt
	m	(Lp;Ldcy;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Lub;)V	a	setCustomBossEvents
		p	1		customBossEvents
	m	(Lub;Luy;)V	a	lambda$setTagData$3
		p	1		dataConfiguration
	m	(Z)V	a	setThundering
		p	1		thundering
	m	()F	b	getSpawnAngle
	m	(I)V	b	setThunderTime
		p	1		thunderTime
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	b	lambda$parse$0
	m	(Lub;Luy;)V	b	lambda$setTagData$2
	m	(Z)V	b	setRaining
		p	1		raining
	m	()J	c	getGameTime
	m	(I)V	c	setRainTime
		p	1		rainTime
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	()J	d	getDayTime
	m	(I)V	d	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()Ljava/lang/String;	e	getLevelName
	m	(I)V	e	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	f	getClearWeatherTime
	m	()Z	g	isThundering
	m	()I	h	getThunderTime
	m	()Z	i	isRaining
	m	()I	j	getRainTime
	m	()Ldct;	k	getGameType
	m	()Z	l	isHardcore
	m	()Z	m	isAllowCommands
	m	()Z	n	isInitialized
	m	()Ldcs;	o	getGameRules
	m	()Ldut$c;	p	getWorldBorder
	m	()Lbqo;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
	m	()Lewp;	s	getScheduledEvents
	m	()I	t	getWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	m	()Lub;	w	getLoadedPlayerTag
	m	()I	x	getVersion
	m	()Ldzw;	y	worldGenOptions
	m	()Z	z	isFlatWorld
	f	I	A	wanderingTraderSpawnDelay
	f	I	B	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	C	wanderingTraderId
	f	Ljava/util/Set;	D	knownServerBrands
	f	Z	E	wasModded
	f	Ljava/util/Set;	F	removedFeatureFlags
	f	Lewp;	G	scheduledEvents
	f	Ljava/lang/String;	a	LEVEL_NAME
	f	Ljava/lang/String;	b	PLAYER
	f	Ljava/lang/String;	c	WORLD_GEN_SETTINGS
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ldda;	g	settings
	f	Ldzw;	h	worldOptions
	f	Lerj$a;	i	specialWorldProperty
	f	Lcom/mojang/serialization/Lifecycle;	j	worldGenSettingsLifecycle
	f	Ljd;	k	spawnPos
	f	F	l	spawnAngle
	f	J	m	gameTime
	f	J	n	dayTime
	f	Lub;	o	loadedPlayerTag
	f	I	p	version
	f	I	q	clearWeatherTime
	f	Z	r	raining
	f	I	s	rainTime
	f	Z	t	thundering
	f	I	u	thunderTime
	f	Z	v	initialized
	f	Z	w	difficultyLocked
	f	Ldut$c;	x	worldBorder
	f	Ldxb$a;	y	endDragonFightData
	f	Lub;	z	customBossEvents
c	erj$a	net/minecraft/world/level/storage/WorldDataServer$a
	m	()[Lerj$a;	a	$values
	f	Lerj$a;	a	NONE
	f	Lerj$a;	b	FLAT
	f	Lerj$a;	c	DEBUG
	f	[Lerj$a;	d	$VALUES
c	erk	net/minecraft/world/level/storage/IWorldDataServer
	m	(I)V	a	setClearWeatherTime
		p	1		clearWeatherTime
	m	(J)V	a	setGameTime
		p	1		time
	m	(Ldct;)V	a	setGameType
		p	1		gameMode
	m	(Ldut$c;)V	a	setWorldBorder
		p	1		worldBorder
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
		p	1		wanderingTraderId
	m	(Lp;Ldcy;)V	a	fillCrashReportCategory
		p	1		reportSection
		p	2		world
	m	(Z)V	a	setThundering
		p	1		thundering
	m	(I)V	b	setThunderTime
		p	1		thunderTime
	m	(J)V	b	setDayTime
		p	1		timeOfDay
	m	(I)V	c	setRainTime
		p	1		rainTime
	m	(Z)V	c	setInitialized
		p	1		initialized
	m	(I)V	d	setWanderingTraderSpawnDelay
		p	1		wanderingTraderSpawnDelay
	m	()Ljava/lang/String;	e	getLevelName
	m	(I)V	e	setWanderingTraderSpawnChance
		p	1		wanderingTraderSpawnChance
	m	()I	f	getClearWeatherTime
	m	()I	h	getThunderTime
	m	()I	j	getRainTime
	m	()Ldct;	k	getGameType
	m	()Z	m	isAllowCommands
	m	()Z	n	isInitialized
	m	()Ldut$c;	p	getWorldBorder
	m	()Lewp;	s	getScheduledEvents
	m	()I	t	getWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	m	()Ljava/lang/String;	w	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	x	lambda$fillCrashReportCategory$0
c	erl	net/minecraft/world/level/storage/SaveData
	m	()Z	A	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Ldxb$a;	C	endDragonFightData
	m	()Lddr;	D	getDataConfiguration
	m	()Lub;	E	getCustomBossEvents
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ljava/util/Set;	H	getRemovedFeatureFlags
	m	()Lerk;	I	overworldData
	m	()Ldda;	J	getLevelSettings
	m	()Lcpl;	K	enabledFeatures
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$3
	m	(Lbqo;)V	a	setDifficulty
		p	1		difficulty
	m	(Ldct;)V	a	setGameType
		p	1		gameMode
	m	(Lddr;)V	a	setDataConfiguration
		p	1		dataConfiguration
	m	(Ldxb$a;)V	a	setEndDragonFightData
		p	1		dragonFight
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
		p	1		brand
		p	2		modded
	m	(Lka;Lub;)Lub;	a	createTag
		p	1		registryManager
		p	2		playerNbt
	m	(Lp;)V	a	fillCrashReportCategory
		p	1		section
	m	(Lub;)V	a	setCustomBossEvents
		p	1		customBossEvents
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$2
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	d	lambda$fillCrashReportCategory$0
	m	(Z)V	d	setDifficultyLocked
		p	1		difficultyLocked
	m	()Ljava/lang/String;	e	getLevelName
	m	(I)Ljava/lang/String;	f	getStorageVersionName
		p	1		id
	m	()Ldct;	k	getGameType
	m	()Z	l	isHardcore
	m	()Z	m	isAllowCommands
	m	()Ldcs;	o	getGameRules
	m	()Lbqo;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
	m	()Lub;	w	getLoadedPlayerTag
	m	()I	x	getVersion
	m	()Ldzw;	y	worldGenOptions
	m	()Z	z	isFlatWorld
	f	I	d	ANVIL_VERSION_ID
	f	I	e	MCREGION_VERSION_ID
c	erm	net/minecraft/world/level/storage/WorldDataMutable
	m	(Ljd;F)V	a	setSpawn
		p	1		pos
		p	2		angle
c	ern	net/minecraft/world/level/storage/loot/LootTables
	m	()Ljava/util/Set;	a	all
	m	(Lakq;)Lakq;	a	register
		p	0		key
	m	(Ljava/lang/String;)Lakq;	a	register
		p	0		id
	f	Lakq;	A	JUNGLE_TEMPLE
	f	Lakq;	B	JUNGLE_TEMPLE_DISPENSER
	f	Lakq;	C	IGLOO_CHEST
	f	Lakq;	D	WOODLAND_MANSION
	f	Lakq;	E	UNDERWATER_RUIN_SMALL
	f	Lakq;	F	UNDERWATER_RUIN_BIG
	f	Lakq;	G	BURIED_TREASURE
	f	Lakq;	H	SHIPWRECK_MAP
	f	Lakq;	I	SHIPWRECK_SUPPLY
	f	Lakq;	J	SHIPWRECK_TREASURE
	f	Lakq;	K	PILLAGER_OUTPOST
	f	Lakq;	L	BASTION_TREASURE
	f	Lakq;	M	BASTION_OTHER
	f	Lakq;	N	BASTION_BRIDGE
	f	Lakq;	O	BASTION_HOGLIN_STABLE
	f	Lakq;	P	ANCIENT_CITY
	f	Lakq;	Q	ANCIENT_CITY_ICE_BOX
	f	Lakq;	R	RUINED_PORTAL
	f	Lakq;	S	TRIAL_CHAMBERS_REWARD
	f	Lakq;	T	TRIAL_CHAMBERS_REWARD_COMMON
	f	Lakq;	U	TRIAL_CHAMBERS_REWARD_RARE
	f	Lakq;	V	TRIAL_CHAMBERS_REWARD_UNIQUE
	f	Lakq;	W	TRIAL_CHAMBERS_REWARD_OMINOUS
	f	Lakq;	X	TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON
	f	Lakq;	Y	TRIAL_CHAMBERS_REWARD_OMINOUS_RARE
	f	Lakq;	Z	TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE
	f	Lakq;	aA	SHEEP_RED
	f	Lakq;	aB	SHEEP_BLACK
	f	Lakq;	aC	FISHING
	f	Lakq;	aD	FISHING_JUNK
	f	Lakq;	aE	FISHING_TREASURE
	f	Lakq;	aF	FISHING_FISH
	f	Lakq;	aG	CAT_MORNING_GIFT
	f	Lakq;	aH	ARMORER_GIFT
	f	Lakq;	aI	BUTCHER_GIFT
	f	Lakq;	aJ	CARTOGRAPHER_GIFT
	f	Lakq;	aK	CLERIC_GIFT
	f	Lakq;	aL	FARMER_GIFT
	f	Lakq;	a	EMPTY
	f	Lakq;	aM	FISHERMAN_GIFT
	f	Lakq;	aN	FLETCHER_GIFT
	f	Lakq;	aO	LEATHERWORKER_GIFT
	f	Lakq;	aP	LIBRARIAN_GIFT
	f	Lakq;	aQ	MASON_GIFT
	f	Lakq;	aR	SHEPHERD_GIFT
	f	Lakq;	aS	TOOLSMITH_GIFT
	f	Lakq;	aT	WEAPONSMITH_GIFT
	f	Lakq;	aU	SNIFFER_DIGGING
	f	Lakq;	aV	PANDA_SNEEZE
	f	Lakq;	aW	PIGLIN_BARTERING
	f	Lakq;	aX	SPAWNER_TRIAL_CHAMBER_KEY
	f	Lakq;	aY	SPAWNER_TRIAL_CHAMBER_CONSUMABLES
	f	Lakq;	aZ	SPAWNER_OMINOUS_TRIAL_CHAMBER_KEY
	f	Lakq;	aa	TRIAL_CHAMBERS_SUPPLY
	f	Lakq;	ab	TRIAL_CHAMBERS_CORRIDOR
	f	Lakq;	ac	TRIAL_CHAMBERS_INTERSECTION
	f	Lakq;	ad	TRIAL_CHAMBERS_INTERSECTION_BARREL
	f	Lakq;	ae	TRIAL_CHAMBERS_ENTRANCE
	f	Lakq;	af	TRIAL_CHAMBERS_CORRIDOR_DISPENSER
	f	Lakq;	ag	TRIAL_CHAMBERS_CHAMBER_DISPENSER
	f	Lakq;	ah	TRIAL_CHAMBERS_WATER_DISPENSER
	f	Lakq;	ai	TRIAL_CHAMBERS_CORRIDOR_POT
	f	Lakq;	aj	EQUIPMENT_TRIAL_CHAMBER
	f	Lakq;	ak	EQUIPMENT_TRIAL_CHAMBER_RANGED
	f	Lakq;	al	EQUIPMENT_TRIAL_CHAMBER_MELEE
	f	Lakq;	am	SHEEP_WHITE
	f	Lakq;	an	SHEEP_ORANGE
	f	Lakq;	ao	SHEEP_MAGENTA
	f	Lakq;	ap	SHEEP_LIGHT_BLUE
	f	Lakq;	aq	SHEEP_YELLOW
	f	Lakq;	ar	SHEEP_LIME
	f	Lakq;	as	SHEEP_PINK
	f	Lakq;	at	SHEEP_GRAY
	f	Lakq;	au	SHEEP_LIGHT_GRAY
	f	Lakq;	av	SHEEP_CYAN
	f	Lakq;	aw	SHEEP_PURPLE
	f	Lakq;	ax	SHEEP_BLUE
	f	Lakq;	ay	SHEEP_BROWN
	f	Lakq;	az	SHEEP_GREEN
	f	Lakq;	b	SPAWN_BONUS_CHEST
	f	Lakq;	ba	SPAWNER_OMINOUS_TRIAL_CHAMBER_CONSUMABLES
	f	Lakq;	bb	SPAWNER_TRIAL_ITEMS_TO_DROP_WHEN_OMINOUS
	f	Lakq;	bc	BOGGED_SHEAR
	f	Lakq;	bd	DESERT_WELL_ARCHAEOLOGY
	f	Lakq;	be	DESERT_PYRAMID_ARCHAEOLOGY
	f	Lakq;	bf	TRAIL_RUINS_ARCHAEOLOGY_COMMON
	f	Lakq;	bg	TRAIL_RUINS_ARCHAEOLOGY_RARE
	f	Lakq;	bh	OCEAN_RUIN_WARM_ARCHAEOLOGY
	f	Lakq;	bi	OCEAN_RUIN_COLD_ARCHAEOLOGY
	f	Ljava/util/Set;	bj	LOCATIONS
	f	Ljava/util/Set;	bk	IMMUTABLE_LOCATIONS
	f	Lakq;	c	END_CITY_TREASURE
	f	Lakq;	d	SIMPLE_DUNGEON
	f	Lakq;	e	VILLAGE_WEAPONSMITH
	f	Lakq;	f	VILLAGE_TOOLSMITH
	f	Lakq;	g	VILLAGE_ARMORER
	f	Lakq;	h	VILLAGE_CARTOGRAPHER
	f	Lakq;	i	VILLAGE_MASON
	f	Lakq;	j	VILLAGE_SHEPHERD
	f	Lakq;	k	VILLAGE_BUTCHER
	f	Lakq;	l	VILLAGE_FLETCHER
	f	Lakq;	m	VILLAGE_FISHER
	f	Lakq;	n	VILLAGE_TANNERY
	f	Lakq;	o	VILLAGE_TEMPLE
	f	Lakq;	p	VILLAGE_DESERT_HOUSE
	f	Lakq;	q	VILLAGE_PLAINS_HOUSE
	f	Lakq;	r	VILLAGE_TAIGA_HOUSE
	f	Lakq;	s	VILLAGE_SNOWY_HOUSE
	f	Lakq;	t	VILLAGE_SAVANNA_HOUSE
	f	Lakq;	u	ABANDONED_MINESHAFT
	f	Lakq;	v	NETHER_BRIDGE
	f	Lakq;	w	STRONGHOLD_LIBRARY
	f	Lakq;	x	STRONGHOLD_CROSSING
	f	Lakq;	y	STRONGHOLD_CORRIDOR
	f	Lakq;	z	DESERT_PYRAMID
c	ero	net/minecraft/world/level/storage/loot/ContainerComponentManipulator
	m	()Lkp;	a	type
	m	(Lcuq;Ljava/lang/Object;Ljava/util/stream/Stream;)V	a	setContents
		p	1		stack
		p	2		component
		p	3		contents
	m	(Lcuq;Ljava/util/function/UnaryOperator;)V	a	modifyItems
		p	1		stack
		p	2		contentsOperator
	m	(Lcuq;Ljava/util/stream/Stream;)V	a	setContents
		p	1		stack
		p	2		contents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
		p	1		component
		p	2		contents
	m	(Ljava/util/function/UnaryOperator;Lcuq;)Lcuq;	a	lambda$modifyItems$0
		p	1		contentStack
	m	()Ljava/lang/Object;	b	empty
c	erp	net/minecraft/world/level/storage/loot/ContainerComponentManipulators
	m	()Ljava/lang/String;	a	lambda$static$1
	m	(Lero;)Lero;	a	lambda$static$0
	m	(Lkp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		componentType
	f	Lero;	a	CONTAINER
	f	Lero;	b	BUNDLE_CONTENTS
	f	Lero;	c	CHARGED_PROJECTILES
	f	Ljava/util/Map;	d	ALL_MANIPULATORS
	f	Lcom/mojang/serialization/Codec;	e	CODEC
c	erp$1	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$1
	m	()Lkp;	a	type
	m	(Lcxo;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Lcxo;Ljava/util/stream/Stream;)Lcxo;	a	setContents
		p	1		component
		p	2		contents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
		p	1		component
		p	2		contents
	m	()Ljava/lang/Object;	b	empty
	m	()Lcxo;	c	empty
c	erp$2	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$2
	m	()Lkp;	a	type
	m	(Lcxf;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Lcxf;Ljava/util/stream/Stream;)Lcxf;	a	setContents
		p	1		component
		p	2		contents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
		p	1		component
		p	2		contents
	m	()Ljava/lang/Object;	b	empty
	m	()Lcxf;	c	empty
c	erp$3	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$3
	m	()Lkp;	a	type
	m	(Lcxg;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Lcxg;Ljava/util/stream/Stream;)Lcxg;	a	setContents
		p	1		component
		p	2		contents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
		p	1		component
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
		p	1		component
		p	2		contents
	m	()Ljava/lang/Object;	b	empty
	m	()Lcxg;	c	empty
c	erq	net/minecraft/world/level/storage/loot/IntRange
	m	(Levy;Levy;)V	<init>	<init>
		p	1		min
		p	2		max
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(I)Lerq;	a	exact
		p	0		value
	m	(II)Lerq;	a	range
		p	0		min
		p	1		max
	m	(Lcom/mojang/datafixers/util/Either;)Lerq;	a	lambda$static$3
		p	0		either
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lerq;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
		p	0		operator
	m	(Lerr;I)I	a	clamp
		p	1		context
		p	2		value
	m	(Levy;Lerr;I)Z	a	lambda$new$10
		p	1		context
		p	2		value
	m	(Levy;Levy;Lerr;I)Z	a	lambda$new$12
		p	2		context
		p	3		value
	m	()Ljava/util/OptionalInt;	b	unpackExact
	m	(I)Lerq;	b	lowerBound
		p	0		min
	m	(Lerq;)Ljava/util/Optional;	b	lambda$static$1
		p	0		operator
	m	(Lerr;I)Z	b	test
		p	1		context
		p	2		value
	m	(Levy;Lerr;I)I	b	lambda$new$9
		p	1		context
		p	2		value
	m	(Levy;Levy;Lerr;I)I	b	lambda$new$11
		p	2		context
		p	3		value
	m	(I)Lerq;	c	upperBound
		p	0		max
	m	(Lerq;)Ljava/util/Optional;	c	lambda$static$0
		p	0		operator
	m	(Lerr;I)Z	c	lambda$new$6
		p	0		context
		p	1		value
	m	(Levy;Lerr;I)Z	c	lambda$new$8
		p	1		context
		p	2		value
	m	(Lerr;I)I	d	lambda$new$5
		p	0		context
		p	1		value
	m	(Levy;Lerr;I)I	d	lambda$new$7
		p	1		context
		p	2		value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	RECORD_CODEC
	f	Levy;	c	min
	f	Levy;	d	max
	f	Lerq$b;	e	limiter
	f	Lerq$a;	f	predicate
c	erq$a	net/minecraft/world/level/storage/loot/IntRange$a
	m	(Lerr;I)Z	test	test
		p	1		context
		p	2		value
c	erq$b	net/minecraft/world/level/storage/loot/IntRange$b
	m	(Lerr;I)I	apply	apply
		p	1		context
		p	2		value
c	err	net/minecraft/world/level/storage/loot/LootTableInfo
	m	(Leru;Layw;Ljn$a;)V	<init>	<init>
		p	1		parameters
		p	2		random
		p	3		lookup
	m	()Ljn$a;	a	getResolver
	m	(Lakr;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Lerr$c;)Z	a	hasVisitedElement
		p	1		entry
	m	(Lerw;)Lerr$c;	a	createVisitedEntry
		p	0		table
	m	(Letf;)Lerr$c;	a	createVisitedEntry
		p	0		itemModifier
	m	(Leuk;)Z	a	hasParam
		p	1		parameter
	m	(Levc;)Lerr$c;	a	createVisitedEntry
		p	0		predicate
	m	()Layw;	b	getRandom
	m	(Lerr$c;)Z	b	pushVisitedElement
		p	1		entry
	m	(Leuk;)Ljava/lang/Object;	b	getParam
		p	1		parameter
	m	()F	c	getLuck
	m	(Lerr$c;)V	c	popVisitedElement
		p	1		entry
	m	(Leuk;)Ljava/lang/Object;	c	getParamOrNull
		p	1		parameter
	m	()Laqu;	d	getLevel
	f	Leru;	a	params
	f	Layw;	b	random
	f	Ljn$a;	c	lootDataResolver
	f	Ljava/util/Set;	d	visitedElements
c	err$a	net/minecraft/world/level/storage/loot/LootTableInfo$Builder
	m	(Leru;)V	<init>	<init>
		p	1		parameters
	m	()Laqu;	a	getLevel
	m	(J)Lerr$a;	a	withOptionalRandomSeed
		p	1		seed
	m	(Layw;)Lerr$a;	a	withOptionalRandomSource
		p	1		random
	m	(Ljava/util/Optional;)Lerr;	a	create
		p	1		randomId
	m	(Ljava/util/Optional;Laqu;)Ljava/util/Optional;	a	lambda$create$0
	f	Leru;	a	params
	f	Layw;	b	random
c	err$b	net/minecraft/world/level/storage/loot/LootTableInfo$EntityTarget
	m	(Ljava/lang/String;ILjava/lang/String;Leuk;)V	<init>	<init>
		p	3		type
		p	4		parameter
	m	()Leuk;	a	getParam
	m	(Ljava/lang/String;)Lerr$b;	a	getByName
		p	0		type
	m	()[Lerr$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lerr$b;	a	THIS
	f	Lerr$b;	b	ATTACKER
	f	Lerr$b;	c	DIRECT_ATTACKER
	f	Lerr$b;	d	ATTACKING_PLAYER
	f	Lazk$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Leuk;	g	param
	f	[Lerr$b;	h	$VALUES
c	err$c	net/minecraft/world/level/storage/loot/LootTableInfo$c
	m	()Lert;	a	type
	m	()Ljava/lang/Object;	b	value
	f	Lert;	a	type
	f	Ljava/lang/Object;	b	value
c	ers	net/minecraft/world/level/storage/loot/LootItemUser
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lerx;)V	a	validate
		p	1		reporter
c	ert	net/minecraft/world/level/storage/loot/LootDataType
	m	()Ljava/util/stream/Stream;	a	values
	m	(Lakr;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$deserialize$0
		p	2		error
	m	(Lakr;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/util/Optional;	a	deserialize
		p	1		id
		p	2		ops
		p	3		json
	m	(Lerx;Lakq;Lers;)V	a	lambda$createSimpleValidator$1
		p	0		reporter
		p	1		key
		p	2		value
	m	(Lerx;Lakq;Lerw;)V	a	lambda$createLootTableValidator$2
		p	0		reporter
		p	1		key
		p	2		value
	m	(Lerx;Lakq;Ljava/lang/Object;)V	a	runValidation
		p	1		reporter
		p	2		key
		p	3		value
	m	()Lakq;	b	registryKey
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lert$a;	d	validator
	m	()Lert$a;	e	createSimpleValidator
	m	()Lert$a;	f	createLootTableValidator
	f	Lert;	a	PREDICATE
	f	Lert;	b	MODIFIER
	f	Lert;	c	TABLE
	f	Lakq;	d	registryKey
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Lert$a;	f	validator
	f	Lorg/slf4j/Logger;	g	LOGGER
c	ert$a	net/minecraft/world/level/storage/loot/LootDataType$a
	m	(Lerx;Lakq;Ljava/lang/Object;)V	run	run
		p	1		reporter
		p	2		key
		p	3		value
c	eru	net/minecraft/world/level/storage/loot/LootParams
	m	(Laqu;Ljava/util/Map;Ljava/util/Map;F)V	<init>	<init>
		p	1		world
		p	2		parameters
		p	3		dynamicDrops
		p	4		luck
	m	()Laqu;	a	getLevel
	m	(Lakr;Ljava/util/function/Consumer;)V	a	addDynamicDrops
		p	1		id
		p	2		lootConsumer
	m	(Leuk;)Z	a	hasParam
		p	1		parameter
	m	()F	b	getLuck
	m	(Leuk;)Ljava/lang/Object;	b	getParameter
		p	1		parameter
	m	(Leuk;)Ljava/lang/Object;	c	getOptionalParameter
		p	1		parameter
	m	(Leuk;)Ljava/lang/Object;	d	getParamOrNull
		p	1		parameter
	f	Laqu;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
c	eru$a	net/minecraft/world/level/storage/loot/LootParams$a
	m	(Laqu;)V	<init>	<init>
		p	1		world
	m	()Laqu;	a	getLevel
	m	(F)Leru$a;	a	withLuck
		p	1		luck
	m	(Lakr;Leru$b;)Leru$a;	a	withDynamicDrop
		p	1		id
		p	2		dynamicDrop
	m	(Leuk;)Ljava/lang/Object;	a	getParameter
		p	1		parameter
	m	(Leuk;Ljava/lang/Object;)Leru$a;	a	withParameter
		p	1		parameter
		p	2		value
	m	(Leul;)Leru;	a	create
		p	1		contextType
	m	(Leuk;)Ljava/lang/Object;	b	getOptionalParameter
		p	1		parameter
	m	(Leuk;Ljava/lang/Object;)Leru$a;	b	withOptionalParameter
		p	1		parameter
		p	2		value
	f	Laqu;	a	level
	f	Ljava/util/Map;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
c	eru$b	net/minecraft/world/level/storage/loot/LootParams$b
	m	(Ljava/util/function/Consumer;)V	add	add
		p	1		lootConsumer
c	erv	net/minecraft/world/level/storage/loot/LootSelector
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;Levy;Levy;)V	<init>	<init>
		p	1		entries
		p	2		conditions
		p	3		functions
		p	4		rolls
		p	5		bonusRolls
	m	()Lerv$a;	a	lootPool
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
		p	0		instance
	m	(Lerr;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lesg;)V	a	lambda$addRandomItem$6
		p	3		choice
	m	(Lerv;)Levy;	a	lambda$static$4
		p	0		pool
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Ljava/util/function/Consumer;Lerr;)V	a	addRandomItems
		p	1		lootConsumer
		p	2		context
	m	(Lerv;)Levy;	b	lambda$static$3
		p	0		pool
	m	(Ljava/util/function/Consumer;Lerr;)V	b	addRandomItem
		p	1		lootConsumer
		p	2		context
	m	(Lerv;)Ljava/util/List;	c	lambda$static$2
		p	0		pool
	m	(Lerv;)Ljava/util/List;	d	lambda$static$1
		p	0		pool
	m	(Lerv;)Ljava/util/List;	e	lambda$static$0
		p	0		pool
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	conditions
	f	Ljava/util/function/Predicate;	d	compositeCondition
	f	Ljava/util/List;	e	functions
	f	Ljava/util/function/BiFunction;	f	compositeFunction
	f	Levy;	g	rolls
	f	Levy;	h	bonusRolls
c	erv$a	net/minecraft/world/level/storage/loot/LootSelector$a
	m	()Lerv$a;	a	unwrap
	m	(Lesh$a;)Lerv$a;	a	add
		p	1		entry
	m	(Letf$a;)Lerv$a;	a	apply
	m	(Levc$a;)Lerv$a;	a	when
	m	(Levy;)Lerv$a;	a	setRolls
		p	1		rolls
	m	()Lerv;	b	build
	m	(Letf$a;)Letb;	b	apply
		p	1		function
	m	(Levc$a;)Leuu;	b	when
		p	1		condition
	m	(Levy;)Lerv$a;	b	setBonusRolls
		p	1		bonusRolls
	m	()Letb;	c	unwrap
	m	()Leuu;	d	unwrap
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	conditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
	f	Levy;	d	rolls
	f	Levy;	e	bonusRolls
c	erw	net/minecraft/world/level/storage/loot/LootTable
	m	(Leul;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		type
		p	2		randomSequenceId
		p	3		pools
		p	4		functions
	m	()Leul;	a	getParamSet
	m	(Laqu;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
		p	0		world
		p	1		consumer
	m	(Laqu;Ljava/util/function/Consumer;Lcuq;)V	a	lambda$createStackSplitter$5
		p	2		stack
	m	(Lbqk;Layw;)Ljava/util/List;	a	getAvailableSlots
		p	1		inventory
		p	2		random
	m	(Lbqk;Leru;J)V	a	fill
		p	1		inventory
		p	2		parameters
		p	3		seed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
		p	0		instance
	m	(Lerr;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		context
	m	(Lerr;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
		p	1		context
		p	2		lootConsumer
	m	(Leru;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		parameters
	m	(Leru;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		parameters
		p	2		seed
	m	(Leru;JLjava/util/function/Consumer;)V	a	getRandomItems
		p	1		parameters
		p	2		seed
		p	4		lootConsumer
	m	(Leru;Layw;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
		p	1		parameters
		p	2		random
	m	(Leru;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
		p	1		parameters
		p	2		lootConsumer
	m	(Lerw;)Ljava/util/List;	a	lambda$static$3
		p	0		table
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILayw;)V	a	shuffleAndSplitItems
		p	1		drops
		p	2		freeSlots
		p	3		random
	m	()Lerw$a;	b	lootTable
	m	(Lerr;Ljava/util/function/Consumer;)V	b	getRandomItems
		p	1		context
		p	2		lootConsumer
	m	(Leru;Ljava/util/function/Consumer;)V	b	getRandomItems
		p	1		parameters
		p	2		lootConsumer
	m	(Lerw;)Ljava/util/List;	b	lambda$static$2
		p	0		table
	m	(Lerw;)Ljava/util/Optional;	c	lambda$static$1
		p	0		table
	m	(Lerw;)Leul;	d	lambda$static$0
		p	0		table
	f	Lerw;	a	EMPTY
	f	Leul;	b	DEFAULT_PARAM_SET
	f	J	c	RANDOMIZE_SEED
	f	Lcom/mojang/serialization/Codec;	d	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Leul;	g	paramSet
	f	Ljava/util/Optional;	h	randomSequence
	f	Ljava/util/List;	i	pools
	f	Ljava/util/List;	j	functions
	f	Ljava/util/function/BiFunction;	k	compositeFunction
c	erw$a	net/minecraft/world/level/storage/loot/LootTable$a
	m	()Lerw$a;	a	unwrap
	m	(Lakr;)Lerw$a;	a	setRandomSequence
		p	1		randomSequenceId
	m	(Lerv$a;)Lerw$a;	a	withPool
		p	1		poolBuilder
	m	(Letf$a;)Lerw$a;	a	apply
	m	(Leul;)Lerw$a;	a	setParamSet
		p	1		type
	m	()Lerw;	b	build
	m	(Letf$a;)Letb;	b	apply
		p	1		function
	m	()Letb;	c	unwrap
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	pools
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	functions
	f	Leul;	c	paramSet
	f	Ljava/util/Optional;	d	randomSequence
c	erx	net/minecraft/world/level/storage/loot/LootCollector
	m	(Layu;Leul;)V	<init>	<init>
		p	1		errorReporter
		p	2		contextType
	m	(Layu;Leul;Ljava/util/Optional;Ljava/util/Set;)V	<init>	<init>
		p	1		errorReporter
		p	2		contextType
		p	3		dataLookup
		p	4		referenceStack
	m	(Layu;Leul;Ljn$a;)V	<init>	<init>
		p	1		errorReporter
		p	2		contextType
		p	3		dataLookup
	m	()Ljn$a;	a	resolver
	m	(Lakq;)Z	a	hasVisitedElement
		p	1		key
	m	(Lers;)V	a	validateUser
		p	1		contextAware
	m	(Leul;)Lerx;	a	setParams
		p	1		contextType
	m	(Ljava/lang/String;)Lerx;	a	forChild
		p	1		name
	m	(Ljava/lang/String;Lakq;)Lerx;	a	enterElement
		p	1		name
		p	2		key
	m	()Z	b	allowsReferences
	m	(Ljava/lang/String;)V	b	reportProblem
		p	1		message
	m	()Layu;	c	reporter
	m	()Ljava/lang/UnsupportedOperationException;	d	lambda$resolver$0
	f	Layu;	a	reporter
	f	Leul;	b	params
	f	Ljava/util/Optional;	c	resolver
	f	Ljava/util/Set;	d	visitedElements
c	ery	net/minecraft/world/level/storage/loot/entries/LootEntryAlternatives
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Lesi;	a	getType
	m	(I)[Lesh$a;	a	lambda$alternatives$1
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lery$a;	a	alternatives
		p	0		children
		p	1		toBuilderFunction
	m	(Ljava/util/List;)Lerz;	a	compose
		p	1		terms
	m	(Ljava/util/List;Lerr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Lesh$a;)Lery$a;	a	alternatives
		p	0		children
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	ery$a	net/minecraft/world/level/storage/loot/entries/LootEntryAlternatives$a
	m	([Lesh$a;)V	<init>	<init>
		p	1		children
	m	()Lery$a;	a	getThis
	m	(Lesh$a;)Lery$a;	a	otherwise
		p	1		builder
	m	()Lesh$a;	aH_	getThis
	m	()Lesh;	b	build
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	erz	net/minecraft/world/level/storage/loot/entries/LootEntryChildren
	m	(Lerr;Ljava/util/function/Consumer;)Z	a	lambda$static$1
		p	0		context
		p	1		choiceConsumer
	m	(Lerz;Lerr;Ljava/util/function/Consumer;)Z	a	lambda$or$3
		p	2		context
		p	3		lootChoiceExpander
	m	(Lerz;)Lerz;	and	and
		p	1		other
	m	(Lerr;Ljava/util/function/Consumer;)Z	b	lambda$static$0
		p	0		context
		p	1		choiceConsumer
	m	(Lerz;Lerr;Ljava/util/function/Consumer;)Z	b	lambda$and$2
		p	2		context
		p	3		lootChoiceExpander
	m	(Lerr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	m	(Lerz;)Lerz;	or	or
		p	1		other
	f	Lerz;	b	ALWAYS_FALSE
	f	Lerz;	c	ALWAYS_TRUE
c	esa	net/minecraft/world/level/storage/loot/entries/LootEntryChildrenAbstract
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lesa$a;)Lcom/mojang/serialization/MapCodec;	a	createCodec
		p	0		factory
	m	(Lesa$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
		p	1		instance
	m	(Lesa;)Ljava/util/List;	a	lambda$createCodec$0
		p	0		entry
	m	(Ljava/util/List;)Lerz;	a	compose
		p	1		terms
	m	(Lerr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Lerz;	a	composedChildren
	f	Ljava/util/List;	d	children
c	esa$a	net/minecraft/world/level/storage/loot/entries/LootEntryChildrenAbstract$a
	m	(Ljava/util/List;Ljava/util/List;)Lesa;	create	create
		p	1		terms
		p	2		conditions
c	esb	net/minecraft/world/level/storage/loot/entries/LootSelectorDynamic
	m	(Lakr;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		name
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Lesi;	a	getType
	m	(Lakr;)Lesj$a;	a	dynamicEntry
		p	0		name
	m	(Lakr;IILjava/util/List;Ljava/util/List;)Lesj;	a	lambda$dynamicEntry$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lesb;)Lakr;	a	lambda$static$0
		p	0		entry
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	j	name
c	esc	net/minecraft/world/level/storage/loot/entries/LootSelectorEmpty
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	()Lesi;	a	getType
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	()Lesj$a;	b	emptyItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	esd	net/minecraft/world/level/storage/loot/entries/LootEntryGroup
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Lesi;	a	getType
	m	(Lerz;Lerz;Lerr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	2		context
		p	3		choiceConsumer
	m	(Ljava/util/List;)Lerz;	a	compose
		p	1		terms
	m	(Ljava/util/List;Lerr;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
		p	1		context
		p	2		lootChoiceExpander
	m	([Lesh$a;)Lesd$a;	a	list
		p	0		entries
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	esd$a	net/minecraft/world/level/storage/loot/entries/LootEntryGroup$a
	m	([Lesh$a;)V	<init>	<init>
		p	1		entries
	m	()Lesd$a;	a	getThis
	m	()Lesh$a;	aH_	getThis
	m	()Lesh;	b	build
	m	(Lesh$a;)Lesd$a;	b	append
		p	1		entry
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	ese	net/minecraft/world/level/storage/loot/entries/LootItem
	m	(Ljm;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		item
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Lesi;	a	getType
	m	(Ldcv;)Lesj$a;	a	lootTableItem
		p	0		drop
	m	(Ldcv;IILjava/util/List;Ljava/util/List;)Lesj;	a	lambda$lootTableItem$2
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lese;)Ljm;	a	lambda$static$0
		p	0		entry
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	j	item
c	esf	net/minecraft/world/level/storage/loot/entries/LootEntries
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lesi;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lesi;	b	EMPTY
	f	Lesi;	c	ITEM
	f	Lesi;	d	LOOT_TABLE
	f	Lesi;	e	DYNAMIC
	f	Lesi;	f	TAG
	f	Lesi;	g	ALTERNATIVES
	f	Lesi;	h	SEQUENCE
	f	Lesi;	i	GROUP
c	esg	net/minecraft/world/level/storage/loot/entries/LootEntry
	m	(F)I	a	getWeight
		p	1		luck
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
c	esh	net/minecraft/world/level/storage/loot/entries/LootEntryAbstract
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	()Lesi;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
		p	0		instance
	m	(Lerr;)Z	a	canRun
		p	1		context
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lesh;)Ljava/util/List;	a	lambda$commonFields$0
		p	0		entry
	f	Ljava/util/function/Predicate;	a	compositeCondition
	f	Ljava/util/List;	e	conditions
c	esh$a	net/minecraft/world/level/storage/loot/entries/LootEntryAbstract$a
	m	(Lesh$a;)Lery$a;	a	otherwise
		p	1		builder
	m	(Levc$a;)Lesh$a;	a	when
	m	()Lesh$a;	aH_	getThis
	m	()Lesh;	b	build
	m	(Lesh$a;)Lesd$a;	b	append
		p	1		entry
	m	(Levc$a;)Leuu;	b	when
		p	1		condition
	m	(Lesh$a;)Lesl$a;	c	then
		p	1		entry
	m	()Leuu;	d	unwrap
	m	()Lesh$a;	e	unwrap
	m	()Ljava/util/List;	f	getConditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
c	esi	net/minecraft/world/level/storage/loot/entries/LootEntryType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	esj	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lesj$d;)Lesj$a;	a	simpleBuilder
		p	0		factory
	m	(Lesj;)Ljava/util/List;	a	lambda$singletonFields$2
		p	0		entry
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	singletonFields
		p	0		instance
	m	(Lesj;)Ljava/lang/Integer;	b	lambda$singletonFields$1
		p	0		entry
	m	(Lesj;)Ljava/lang/Integer;	c	lambda$singletonFields$0
		p	0		entry
	m	(Lerr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Ljava/util/function/BiFunction;	a	compositeFunction
	f	I	d	DEFAULT_WEIGHT
	f	I	f	DEFAULT_QUALITY
	f	I	g	weight
	f	I	h	quality
	f	Ljava/util/List;	i	functions
	f	Lesg;	j	entry
c	esj$1	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry$1
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Lesj;	a	this$0
c	esj$a	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry$a
	m	()Ljava/util/List;	a	getFunctions
	m	(I)Lesj$a;	a	setWeight
		p	1		weight
	m	(Letf$a;)Lesj$a;	a	apply
	m	(I)Lesj$a;	b	setQuality
		p	1		quality
	m	(Letf$a;)Letb;	b	apply
		p	1		function
	m	()Letb;	c	unwrap
	f	I	a	weight
	f	I	b	quality
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
c	esj$b	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry$b
	m	(Lesj$d;)V	<init>	<init>
		p	1		factory
	m	()Lesh$a;	aH_	getThis
	m	()Lesh;	b	build
	m	()Lesj$b;	g	getThis
	f	Lesj$d;	c	constructor
c	esj$c	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry$c
	m	(F)I	a	getWeight
		p	1		luck
	f	Lesj;	b	this$0
c	esj$d	net/minecraft/world/level/storage/loot/entries/LootSelectorEntry$d
	m	(IILjava/util/List;Ljava/util/List;)Lesj;	build	build
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
c	esk	net/minecraft/world/level/storage/loot/entries/NestedLootTable
	m	(Lcom/mojang/datafixers/util/Either;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		value
		p	2		weight
		p	3		quality
		p	4		conditions
		p	5		functions
	m	()Lesi;	a	getType
	m	(Lakq;)Lesj$a;	a	lootTableReference
		p	0		key
	m	(Lakq;IILjava/util/List;Ljava/util/List;)Lesj;	a	lambda$lootTableReference$8
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lerr;Lakq;)Lerw;	a	lambda$createItemStack$2
		p	1		key
	m	(Lerw;)Lesj$a;	a	inlineLootTable
		p	0		table
	m	(Lerw;IILjava/util/List;Ljava/util/List;)Lesj;	a	lambda$inlineLootTable$9
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lerx;Lakq;)V	a	lambda$validate$6
		p	1		key
	m	(Lerx;Lakq;Ljm$c;)V	a	lambda$validate$4
		p	2		entry
	m	(Lerx;Lerw;)V	a	lambda$validate$7
		p	1		table
	m	(Lesk;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		entry
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Lerw;)Lerw;	b	lambda$createItemStack$3
		p	0		table
	m	(Lerx;Lakq;)V	b	lambda$validate$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/datafixers/util/Either;	j	contents
c	esl	net/minecraft/world/level/storage/loot/entries/LootEntrySequence
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		terms
		p	2		conditions
	m	()Lesi;	a	getType
	m	(Ljava/util/List;)Lerz;	a	compose
		p	1		terms
	m	(Ljava/util/List;Lerr;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
		p	1		context
		p	2		lootChoiceExpander
	m	([Lesh$a;)Lesl$a;	a	sequential
		p	0		entries
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	esl$a	net/minecraft/world/level/storage/loot/entries/LootEntrySequence$a
	m	([Lesh$a;)V	<init>	<init>
		p	1		entries
	m	()Lesl$a;	a	getThis
	m	()Lesh$a;	aH_	getThis
	m	()Lesh;	b	build
	m	(Lesh$a;)Lesl$a;	c	then
		p	1		entry
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
c	esm	net/minecraft/world/level/storage/loot/entries/LootSelectorTag
	m	(Lawu;ZIILjava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		name
		p	2		expand
		p	3		weight
		p	4		quality
		p	5		conditions
		p	6		functions
	m	()Lesi;	a	getType
	m	(Lawu;)Lesj$a;	a	tagContents
		p	0		name
	m	(Lawu;IILjava/util/List;Ljava/util/List;)Lesj;	a	lambda$expandTag$5
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lerr;Ljava/util/function/Consumer;)Z	a	expandTag
		p	1		context
		p	2		lootChoiceExpander
	m	(Lesm;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		entry
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ljm;)V	a	lambda$createItemStack$3
		p	1		entry
	m	(Lawu;)Lesj$a;	b	expandTag
		p	0		name
	m	(Lawu;IILjava/util/List;Ljava/util/List;)Lesj;	b	lambda$tagContents$4
		p	1		weight
		p	2		quality
		p	3		conditions
		p	4		functions
	m	(Lesm;)Lawu;	b	lambda$static$0
		p	0		entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$2
		p	0		instance
	m	(Lerr;Ljava/util/function/Consumer;)Z	expand	expand
		p	1		context
		p	2		choiceConsumer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lawu;	j	tag
	f	Z	k	expand
c	esm$1	net/minecraft/world/level/storage/loot/entries/LootSelectorTag$1
	m	(Ljava/util/function/Consumer;Lerr;)V	a	createItemStack
		p	1		lootConsumer
		p	2		context
	f	Ljm;	a	val$item
c	eso	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus
	m	(Ljava/util/List;Ljm;Leso$b;)V	<init>	<init>
		p	1		conditions
		p	2		enchantment
		p	3		formula
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		id
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Leso;)Leso$b;	a	lambda$static$3
		p	0		function
	m	(Ljm;)Lete$a;	a	addOreBonusCount
		p	0		enchantment
	m	(Ljm;FI)Lete$a;	a	addBonusBinomialDistributionCount
		p	0		enchantment
		p	1		probability
		p	2		extra
	m	(Ljm;I)Lete$a;	a	addUniformBonusCount
		p	0		enchantment
		p	1		bonusMultiplier
	m	(Ljm;IFLjava/util/List;)Letf;	a	lambda$addBonusBinomialDistributionCount$5
		p	3		conditions
	m	(Ljm;ILjava/util/List;)Letf;	a	lambda$addUniformBonusCount$8
		p	2		conditions
	m	(Ljm;Ljava/util/List;)Letf;	a	lambda$addUniformBonusCount$7
		p	1		conditions
	m	()Letg;	b	getType
	m	(Lakr;)Ljava/lang/String;	b	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Leso;)Ljm;	b	lambda$static$2
		p	0		function
	m	(Ljm;)Lete$a;	b	addUniformBonusCount
		p	0		enchantment
	m	(Ljm;Ljava/util/List;)Letf;	b	lambda$addOreBonusCount$6
		p	1		conditions
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	FORMULAS
	f	Lcom/mojang/serialization/Codec;	c	FORMULA_TYPE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	FORMULA_CODEC
	f	Ljm;	e	enchantment
	f	Leso$b;	f	formula
c	eso$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus$a
	m	(IF)V	<init>	<init>
		p	1		extra
		p	2		probability
	m	()Leso$c;	a	getType
	m	(Layw;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	extraRounds
	m	()F	c	probability
	f	Leso$c;	a	TYPE
	f	I	b	extraRounds
	f	F	c	probability
	f	Lcom/mojang/serialization/Codec;	d	CODEC
c	eso$b	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus$b
	m	()Leso$c;	a	getType
	m	(Layw;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
c	eso$c	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus$c
	m	()Lakr;	a	id
	m	()Lcom/mojang/serialization/Codec;	b	codec
	f	Lakr;	a	id
	f	Lcom/mojang/serialization/Codec;	b	codec
c	eso$d	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus$d
	m	()Leso$c;	a	getType
	m	(Layw;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leso$c;	b	TYPE
c	eso$e	net/minecraft/world/level/storage/loot/functions/LootItemFunctionApplyBonus$e
	m	(I)V	<init>	<init>
		p	1		bonusMultiplier
	m	()Leso$c;	a	getType
	m	(Layw;II)I	a	calculateNewCount
		p	1		random
		p	2		initialCount
		p	3		enchantmentLevel
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()I	b	bonusMultiplier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leso$c;	b	TYPE
	f	I	c	bonusMultiplier
c	esp	net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplosionDecay
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Lete$a;	c	explosionDecay
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	esq	net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState
	m	(Ljava/util/List;Ljm;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	(Ljava/util/List;Ljm;Ljava/util/Set;)V	<init>	<init>
		p	1		conditions
		p	2		block
		p	3		properties
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Ldfy;)Lesq$a;	a	copyState
		p	0		block
	m	(Ldtc;Lcxd;)Lcxd;	a	lambda$run$3
		p	2		component
	m	(Lesq;)Ljava/util/List;	a	lambda$static$1
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Lesq;)Ljm;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	block
	f	Ljava/util/Set;	c	properties
c	esq$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyState$a
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	()Lesq$a;	a	getThis
	m	(Lduf;)Lesq$a;	a	copy
		p	1		property
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Ljm;	a	block
	f	Lcom/google/common/collect/ImmutableSet$Builder;	b	properties
c	esr	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction
	m	(Ljava/util/List;Lesr$b;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		source
		p	3		include
		p	4		exclude
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lesr$b;)Lesr$a;	a	copyComponents
		p	0		source
	m	(Lesr;)Ljava/util/Optional;	a	lambda$static$2
		p	0		function
	m	(Ljava/util/List;Ljava/util/List;)V	a	lambda$new$6
		p	1		includedTypes
	m	(Ljava/util/List;Lkp;)Z	a	lambda$new$4
		p	1		type
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Lesr;)Ljava/util/Optional;	b	lambda$static$1
		p	0		function
	m	(Ljava/util/List;Ljava/util/List;)V	b	lambda$new$5
		p	1		excludedTypes
	m	(Lesr;)Lesr$b;	c	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lesr$b;	b	source
	f	Ljava/util/Optional;	c	include
	f	Ljava/util/Optional;	d	exclude
	f	Ljava/util/function/Predicate;	e	bakedPredicate
c	esr$a	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction$a
	m	(Lesr$b;)V	<init>	<init>
		p	1		source
	m	()Lesr$a;	a	getThis
	m	(Lkp;)Lesr$a;	a	include
		p	1		type
	m	()Letf;	b	build
	m	(Lkp;)Lesr$a;	b	exclude
		p	1		type
	m	()Lete$a;	c	getThis
	f	Lesr$b;	a	source
	f	Ljava/util/Optional;	b	include
	f	Ljava/util/Optional;	c	exclude
c	esr$b	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction$b
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lerr;)Lkm;	a	get
		p	1		context
	m	()[Lesr$b;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lesr$b;	a	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	name
	f	[Lesr$b;	d	$VALUES
c	ess	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction
	m	(Ljava/util/List;Levq;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		source
		p	3		operations
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerr$b;)Less$a;	a	copyData
		p	0		target
	m	(Less;)Ljava/util/List;	a	lambda$static$1
		p	0		function
	m	(Levq;)Less$a;	a	copyData
		p	0		source
	m	(Ljava/util/function/Supplier;Luy;Less$b;)V	a	lambda$run$4
		p	2		operation
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcuq;)Luy;	a	lambda$run$3
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Less;)Levq;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levq;	b	source
	f	Ljava/util/List;	c	operations
c	ess$a	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$a
	m	(Levq;)V	<init>	<init>
		p	1		source
	m	()Less$a;	a	getThis
	m	(Ljava/lang/String;Ljava/lang/String;)Less$a;	a	copy
		p	1		source
		p	2		target
	m	(Ljava/lang/String;Ljava/lang/String;Less$c;)Less$a;	a	copy
		p	1		source
		p	2		target
		p	3		operator
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Levq;	a	source
	f	Ljava/util/List;	b	ops
c	ess$b	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$b
	m	(Lfl$g;Lfl$g;Less$c;)V	<init>	<init>
		p	3		operator
	m	()Lfl$g;	a	sourcePath
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/function/Supplier;Luy;)V	a	apply
		p	1		itemNbtGetter
		p	2		sourceEntityNbt
	m	()Lfl$g;	b	targetPath
	m	()Less$c;	c	op
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfl$g;	b	sourcePath
	f	Lfl$g;	c	targetPath
	f	Less$c;	d	op
c	ess$c	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$c
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()[Less$c;	a	$values
	m	(Luy;Lfl$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	()Ljava/lang/String;	c	getSerializedName
	f	Less$c;	a	REPLACE
	f	Less$c;	b	APPEND
	f	Less$c;	c	MERGE
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Less$c;	f	$VALUES
c	ess$c$1	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$c$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Luy;Lfl$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
c	ess$c$2	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$c$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Luy;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Luy;Lfl$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Luy;Luy;)V	a	lambda$merge$0
		p	1		sourceNbt
c	ess$c$3	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$c$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	(Ljava/util/List;Luy;)V	a	lambda$merge$1
		p	1		foundNbt
	m	(Luy;Lfl$g;Ljava/util/List;)V	a	merge
		p	1		itemNbt
		p	2		targetPath
		p	3		sourceNbts
	m	(Luy;Luy;)V	a	lambda$merge$0
		p	1		sourceNbt
c	est	net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName
	m	(Ljava/util/List;Lest$a;)V	<init>	<init>
		p	1		conditions
		p	2		source
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lest$a;)Lete$a;	a	copyName
		p	0		source
	m	(Lest$a;Ljava/util/List;)Letf;	a	lambda$copyName$2
		p	1		conditions
	m	(Lest;)Lest$a;	a	lambda$static$0
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lest$a;	b	source
c	est$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionCopyName$Source
	m	(Ljava/lang/String;ILjava/lang/String;Leuk;)V	<init>	<init>
		p	3		name
		p	4		parameter
	m	()[Lest$a;	a	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lest$a;	a	THIS
	f	Lest$a;	b	ATTACKING_ENTITY
	f	Lest$a;	c	LAST_DAMAGE_PLAYER
	f	Lest$a;	d	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Leuk;	g	param
	f	[Lest$a;	h	$VALUES
c	esu	net/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant
	m	(Ljava/util/List;Ljava/util/Optional;Z)V	<init>	<init>
		p	1		conditions
		p	2		options
		p	3		onlyCompatible
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcuq;Ljm;Layw;)Lcuq;	a	enchantItem
		p	0		stack
		p	1		enchantment
		p	2		random
	m	(Lerr;)Ljava/util/stream/Stream;	a	lambda$run$3
	m	(Lesu;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		function
	m	(Ljo$a;)Lesu$a;	a	randomApplicableEnchantment
		p	0		registryLookup
	m	(ZLcuq;Ljm;)Z	a	lambda$run$4
		p	2		entry
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Lesu;)Ljava/util/Optional;	b	lambda$static$0
		p	0		function
	m	()Lesu$a;	c	randomEnchantment
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	options
	f	Z	d	onlyCompatible
c	esu$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionEnchant$a
	m	()Lesu$a;	a	getThis
	m	(Ljm;)Lesu$a;	a	withEnchantment
		p	1		enchantment
	m	(Ljq;)Lesu$a;	a	withOneOf
		p	1		options
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	m	()Lesu$a;	e	allowingIncompatibleEnchantments
	f	Ljava/util/Optional;	a	options
	f	Z	b	onlyCompatible
c	esv	net/minecraft/world/level/storage/loot/functions/LootEnchantLevel
	m	(Ljava/util/List;Levy;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		levels
		p	3		options
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lesv;)Ljava/util/Optional;	a	lambda$static$1
		p	0		function
	m	(Ljo$a;Levy;)Lesv$a;	a	enchantWithLevels
		p	0		registryLookup
		p	1		levels
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Lesv;)Levy;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	levels
	f	Ljava/util/Optional;	c	options
c	esv$a	net/minecraft/world/level/storage/loot/functions/LootEnchantLevel$a
	m	(Levy;)V	<init>	<init>
		p	1		levels
	m	()Lesv$a;	a	getThis
	m	(Ljq;)Lesv$a;	a	fromOptions
		p	1		options
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Levy;	a	levels
	f	Ljava/util/Optional;	b	options
c	esw	net/minecraft/world/level/storage/loot/functions/EnchantedCountIncreaseFunction
	m	(Ljava/util/List;Ljm;Levy;I)V	<init>	<init>
		p	1		conditions
		p	2		enchantment
		p	3		count
		p	4		limit
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lesw;)Ljava/lang/Integer;	a	lambda$static$2
		p	0		function
	m	(Ljo$a;Levy;)Lesw$a;	a	lootingMultiplier
		p	0		registryLookup
		p	1		count
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Lesw;)Levy;	b	lambda$static$1
		p	0		function
	m	()Z	c	hasLimit
	m	(Lesw;)Ljm;	c	lambda$static$0
		p	0		function
	f	I	a	NO_LIMIT
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljm;	c	enchantment
	f	Levy;	d	value
	f	I	e	limit
c	esw$a	net/minecraft/world/level/storage/loot/functions/EnchantedCountIncreaseFunction$a
	m	(Ljm;Levy;)V	<init>	<init>
		p	1		enchantment
		p	2		count
	m	()Lesw$a;	a	getThis
	m	(I)Lesw$a;	a	setLimit
		p	1		limit
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Ljm;	a	enchantment
	f	Levy;	b	count
	f	I	c	limit
c	esx	net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap
	m	(Ljava/util/List;Lawu;Ljm;BIZ)V	<init>	<init>
		p	1		conditions
		p	2		destination
		p	3		decoration
		p	4		zoom
		p	5		searchRadius
		p	6		skipExistingChunks
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lesx;)Ljava/lang/Boolean;	a	lambda$static$4
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
		p	0		instance
	m	(Lesx;)Ljava/lang/Integer;	b	lambda$static$3
		p	0		function
	m	()Lesx$a;	c	makeExplorationMap
	m	(Lesx;)Ljava/lang/Byte;	c	lambda$static$2
		p	0		function
	m	(Lesx;)Ljm;	d	lambda$static$1
		p	0		function
	m	(Lesx;)Lawu;	e	lambda$static$0
		p	0		function
	f	Lawu;	a	DEFAULT_DESTINATION
	f	Ljm;	b	DEFAULT_DECORATION
	f	B	c	DEFAULT_ZOOM
	f	I	d	DEFAULT_SEARCH_RADIUS
	f	Z	e	DEFAULT_SKIP_EXISTING
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Lawu;	h	destination
	f	Ljm;	i	mapDecoration
	f	B	j	zoom
	f	I	k	searchRadius
	f	Z	l	skipKnownStructures
c	esx$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionExplorationMap$a
	m	()Lesx$a;	a	getThis
	m	(B)Lesx$a;	a	setZoom
		p	1		zoom
	m	(I)Lesx$a;	a	setSearchRadius
		p	1		searchRadius
	m	(Lawu;)Lesx$a;	a	setDestination
		p	1		destination
	m	(Ljm;)Lesx$a;	a	setMapDecoration
		p	1		decoration
	m	(Z)Lesx$a;	a	setSkipKnownStructures
		p	1		skipExistingChunks
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Lawu;	a	destination
	f	Ljm;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
c	esy	net/minecraft/world/level/storage/loot/functions/LootItemFunctionFillPlayerHead
	m	(Ljava/util/List;Lerr$b;)V	<init>	<init>
		p	1		conditions
		p	2		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerr$b;)Lete$a;	a	fillPlayerHead
		p	0		target
	m	(Lerr$b;Ljava/util/List;)Letf;	a	lambda$fillPlayerHead$2
		p	1		conditions
	m	(Lesy;)Lerr$b;	a	lambda$static$0
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lerr$b;	b	entityTarget
c	esz	net/minecraft/world/level/storage/loot/functions/FilteredFunction
	m	(Ljava/util/List;Lcs;Letf;)V	<init>	<init>
		p	1		conditions
		p	2		itemFilter
		p	3		modifier
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lesz;)Letf;	a	lambda$static$1
		p	0		lootFunction
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Lesz;)Lcs;	b	lambda$static$0
		p	0		lootFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcs;	b	filter
	f	Letf;	c	modifier
c	eta	net/minecraft/world/level/storage/loot/functions/FunctionReference
	m	(Ljava/util/List;Lakq;)V	<init>	<init>
		p	1		conditions
		p	2		name
	m	(Lakq;)Lete$a;	a	functionReference
		p	0		name
	m	(Lakq;Ljava/util/List;)Letf;	a	lambda$functionReference$4
		p	1		conditions
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lerx;Ljm$c;)V	a	lambda$validate$2
	m	(Leta;)Lakq;	a	lambda$static$0
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	m	(Lerx;)V	b	lambda$validate$3
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lakq;	c	name
c	etb	net/minecraft/world/level/storage/loot/functions/LootItemFunctionUser
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Letb;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	([Ljava/lang/Object;Ljava/util/function/Function;)Letb;	a	apply
		p	1		functions
		p	2		toBuilderFunction
	m	(Letf$a;)Letb;	b	apply
		p	1		function
	m	()Letb;	c	unwrap
c	etc	net/minecraft/world/level/storage/loot/functions/LootItemFunctionLimitCount
	m	(Ljava/util/List;Lerq;)V	<init>	<init>
		p	1		conditions
		p	2		limit
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerq;)Lete$a;	a	limitCount
		p	0		limit
	m	(Lerq;Ljava/util/List;)Letf;	a	lambda$limitCount$2
		p	1		conditions
	m	(Letc;)Lerq;	a	lambda$static$0
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lerq;	b	limiter
c	etd	net/minecraft/world/level/storage/loot/functions/ListOperation
	m	()Letd$f;	a	mode
	m	(I)Lcom/mojang/serialization/MapCodec;	a	codec
		p	0		maxSize
	m	(II)Ljava/lang/String;	a	lambda$codec$1
	m	(ILetd;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
		p	1		operation
	m	(Letd$f;)Lcom/mojang/serialization/MapCodec;	a	lambda$codec$0
		p	0		mode
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
		p	3		maxSize
	f	Lcom/mojang/serialization/MapCodec;	a	UNLIMITED_CODEC
c	etd$a	net/minecraft/world/level/storage/loot/functions/ListOperation$a
	m	()Letd$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
		p	3		maxSize
	m	()Letd$a;	b	lambda$static$0
	f	Letd$a;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
c	etd$b	net/minecraft/world/level/storage/loot/functions/ListOperation$b
	m	()Letd$f;	a	mode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
		p	3		maxSize
	m	()I	b	offset
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	I	c	offset
	f	Lorg/slf4j/Logger;	d	LOGGER
c	etd$c	net/minecraft/world/level/storage/loot/functions/ListOperation$c
	m	()Letd$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
		p	3		maxSize
	m	()Letd$c;	b	lambda$static$0
	f	Letd$c;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
c	etd$d	net/minecraft/world/level/storage/loot/functions/ListOperation$d
	m	(I)V	<init>	<init>
		p	1		offset
	m	()Letd$f;	a	mode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
		p	1		current
		p	2		values
		p	3		maxSize
	m	()I	b	offset
	m	()Ljava/util/Optional;	c	size
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	I	c	offset
	f	Ljava/util/Optional;	d	size
	f	Lorg/slf4j/Logger;	e	LOGGER
c	etd$e	net/minecraft/world/level/storage/loot/functions/ListOperation$e
	m	()Ljava/util/List;	a	value
	m	(Lcom/mojang/serialization/Codec;I)Lcom/mojang/serialization/Codec;	a	codec
		p	0		codec
		p	1		maxSize
	m	(Lcom/mojang/serialization/Codec;ILcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
		p	2		instance
	m	(Letd$e;)Letd;	a	lambda$codec$1
		p	0		values
	m	(Ljava/util/List;)Ljava/util/List;	a	apply
		p	1		current
	m	()Letd;	b	operation
	m	(Letd$e;)Ljava/util/List;	b	lambda$codec$0
		p	0		values
	f	Ljava/util/List;	a	value
	f	Letd;	b	operation
c	etd$f	net/minecraft/world/level/storage/loot/functions/ListOperation$f
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
		p	3		id
		p	4		codec
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()[Letd$f;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Letd$f;	a	REPLACE_ALL
	f	Letd$f;	b	REPLACE_SECTION
	f	Letd$f;	c	INSERT
	f	Letd$f;	d	APPEND
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lcom/mojang/serialization/MapCodec;	g	mapCodec
	f	[Letd$f;	h	$VALUES
c	ete	net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
		p	0		instance
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lete;)Ljava/util/List;	a	lambda$commonFields$0
		p	0		function
	m	(Ljava/util/function/Function;)Lete$a;	a	simpleBuilder
		p	0		joiner
	m	()Letg;	b	getType
	m	(Lcuq;Lerr;)Lcuq;	b	apply
	f	Ljava/util/function/Predicate;	a	compositePredicates
	f	Ljava/util/List;	g	predicates
c	ete$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional$a
	m	(Levc$a;)Lete$a;	a	when
	m	(Levc$a;)Leuu;	b	when
		p	1		condition
	m	()Lete$a;	c	getThis
	m	()Leuu;	d	unwrap
	m	()Lete$a;	f	unwrap
	m	()Ljava/util/List;	g	getConditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
c	ete$b	net/minecraft/world/level/storage/loot/functions/LootItemFunctionConditional$b
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		joiner
	m	()Lete$b;	a	getThis
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Ljava/util/function/Function;	a	constructor
c	etf	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lerr;)Ljava/util/function/Consumer;	a	decorate
		p	0		itemApplier
		p	1		lootConsumer
		p	2		context
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lerr;Lcuq;)V	a	lambda$decorate$0
		p	3		stack
	m	()Letg;	b	getType
c	etf$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$a
	m	()Letf;	b	build
c	etg	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	eth	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lcuq;Lerr;)Lcuq;	a	lambda$static$0
		p	0		stack
		p	1		context
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Letg;	a	register
		p	0		id
		p	1		codec
	m	(Ljava/util/List;)Ljava/util/function/BiFunction;	a	compose
		p	0		terms
	m	(Ljava/util/List;Lcuq;Lerr;)Lcuq;	a	lambda$compose$3
		p	1		stack
		p	2		context
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Lcuq;Lerr;)Lcuq;	a	lambda$compose$2
		p	2		stack
		p	3		context
	f	Letg;	A	SET_LORE
	f	Letg;	B	FILL_PLAYER_HEAD
	f	Letg;	C	COPY_CUSTOM_DATA
	f	Letg;	D	COPY_STATE
	f	Letg;	E	SET_BANNER_PATTERN
	f	Letg;	F	SET_POTION
	f	Letg;	G	SET_INSTRUMENT
	f	Letg;	H	REFERENCE
	f	Letg;	I	SEQUENCE
	f	Letg;	J	COPY_COMPONENTS
	f	Letg;	K	SET_FIREWORKS
	f	Letg;	L	SET_FIREWORK_EXPLOSION
	f	Letg;	M	SET_BOOK_COVER
	f	Letg;	N	SET_WRITTEN_BOOK_PAGES
	f	Letg;	O	SET_WRITABLE_BOOK_PAGES
	f	Letg;	P	TOGGLE_TOOLTIPS
	f	Letg;	Q	SET_OMINOUS_BOTTLE_AMPLIFIER
	f	Letg;	R	SET_CUSTOM_MODEL_DATA
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Lcom/mojang/serialization/Codec;	b	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	c	ROOT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Letg;	e	SET_COUNT
	f	Letg;	f	SET_ITEM
	f	Letg;	g	ENCHANT_WITH_LEVELS
	f	Letg;	h	ENCHANT_RANDOMLY
	f	Letg;	i	SET_ENCHANTMENTS
	f	Letg;	j	SET_CUSTOM_DATA
	f	Letg;	k	SET_COMPONENTS
	f	Letg;	l	FURNACE_SMELT
	f	Letg;	m	ENCHANTED_COUNT_INCREASE
	f	Letg;	n	SET_DAMAGE
	f	Letg;	o	SET_ATTRIBUTES
	f	Letg;	p	SET_NAME
	f	Letg;	q	EXPLORATION_MAP
	f	Letg;	r	SET_STEW_EFFECT
	f	Letg;	s	COPY_NAME
	f	Letg;	t	SET_CONTENTS
	f	Letg;	u	MODIFY_CONTENTS
	f	Letg;	v	FILTERED
	f	Letg;	w	LIMIT_COUNT
	f	Letg;	x	APPLY_BONUS
	f	Letg;	y	SET_LOOT_TABLE
	f	Letg;	z	EXPLOSION_DECAY
c	eti	net/minecraft/world/level/storage/loot/functions/ModifyContainerContents
	m	(Ljava/util/List;Lero;Letf;)V	<init>	<init>
		p	1		conditions
		p	2		component
		p	3		modifier
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerr;Lcuq;)Lcuq;	a	lambda$run$3
		p	2		content
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Leti;)Letf;	a	lambda$static$1
		p	0		lootFunction
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Leti;)Lero;	b	lambda$static$0
		p	0		lootFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lero;	b	component
	f	Letf;	c	modifier
c	etj	net/minecraft/world/level/storage/loot/functions/SequenceFunction
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Lcuq;Lerr;)Lcuq;	a	apply
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Letj;)Ljava/util/List;	a	lambda$static$2
		p	0		function
	m	(Ljava/util/List;)Letj;	a	of
		p	0		terms
	m	()Letg;	b	getType
	m	(Letj;)Ljava/util/List;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	Ljava/util/List;	c	functions
	f	Ljava/util/function/BiFunction;	d	compositeFunction
c	etk	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute
	m	(Ljava/util/List;Ljava/util/List;Z)V	<init>	<init>
		p	1		conditions
		p	2		attributes
		p	3		replace
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lakr;Ljm;Lbuu$a;Levy;)Letk$c;	a	modifier
		p	0		id
		p	1		attribute
		p	2		operation
		p	3		amountRange
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lerr;Lcuq;Lcxn;)Lcxn;	a	lambda$run$4
		p	3		component
	m	(Lerr;Lcxn;)Lcxn;	a	updateModifiers
		p	1		context
		p	2		attributeModifiersComponent
	m	(Letk$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$3
		p	0		attribute
	m	(Letk;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		lootFunction
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Letk;)Ljava/util/List;	b	lambda$static$0
		p	0		function
	m	()Letk$a;	c	setAttributes
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	modifiers
	f	Z	c	replace
c	etk$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute$a
	m	(Z)V	<init>	<init>
		p	1		replace
	m	()Letk$a;	a	getThis
	m	(Letk$c;)Letk$a;	a	withModifier
		p	1		attribute
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Z	a	replace
	f	Ljava/util/List;	b	modifiers
c	etk$b	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute$b
	m	(Lakr;Ljm;Lbuu$a;Levy;Ljava/util/List;)V	<init>	<init>
		p	3		operation
		p	4		amount
	m	()Lakr;	a	id
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	a	lambda$static$0
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
		p	0		slots
	m	()Ljm;	b	attribute
	m	()Lbuu$a;	c	operation
	m	()Levy;	d	amount
	m	()Ljava/util/List;	e	slots
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lakr;	b	id
	f	Ljm;	c	attribute
	f	Lbuu$a;	d	operation
	f	Levy;	e	amount
	f	Ljava/util/List;	f	slots
	f	Lcom/mojang/serialization/Codec;	g	SLOTS_CODEC
c	etk$c	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetAttribute$c
	m	(Lakr;Ljm;Lbuu$a;Levy;)V	<init>	<init>
		p	1		id
		p	2		attribute
		p	3		operation
		p	4		amount
	m	()Letk$b;	a	build
	m	(Lbsz;)Letk$c;	a	forSlot
		p	1		slot
	f	Lakr;	a	id
	f	Ljm;	b	attribute
	f	Lbuu$a;	c	operation
	f	Levy;	d	amount
	f	Ljava/util/Set;	e	slots
c	etl	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	m	(Ljava/util/List;Ldpy;Z)V	<init>	<init>
		p	1		conditions
		p	2		patterns
		p	3		append
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Ldpy;Ldpy;)Ldpy;	a	lambda$run$3
		p	0		current
		p	1		newPatterns
	m	(Letl;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		function
	m	(Z)Letl$a;	a	setBannerPattern
		p	0		append
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Letl;)Ldpy;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpy;	b	patterns
	f	Z	c	append
c	etl$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$a
	m	(Z)V	<init>	<init>
		p	1		append
	m	()Letl$a;	a	getThis
	m	(Ljm;Lcti;)Letl$a;	a	addPattern
		p	1		pattern
		p	2		color
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Ldpy$a;	a	patterns
	f	Z	b	append
c	etm	net/minecraft/world/level/storage/loot/functions/SetBookCoverFunction
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		title
		p	3		author
		p	4		generation
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcyb;)Lcyb;	a	apply
		p	1		current
	m	(Letm;)Ljava/util/Optional;	a	lambda$static$2
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Letm;)Ljava/util/Optional;	b	lambda$static$1
		p	0		function
	m	(Letm;)Ljava/util/Optional;	c	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	author
	f	Ljava/util/Optional;	c	title
	f	Ljava/util/Optional;	d	generation
c	etn	net/minecraft/world/level/storage/loot/functions/SetComponentsFunction
	m	(Ljava/util/List;Lkn;)V	<init>	<init>
		p	1		conditions
		p	2		changes
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letn;)Lkn;	a	lambda$static$0
		p	0		function
	m	(Lkp;Ljava/lang/Object;)Lete$a;	a	setComponent
		p	0		componentType
		p	1		value
	m	(Lkp;Ljava/lang/Object;Ljava/util/List;)Letf;	a	lambda$setComponent$2
		p	2		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkn;	b	components
c	eto	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents
	m	(Ljava/util/List;Lero;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		component
		p	3		entries
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lero;)Leto$a;	a	setContents
		p	0		componentModifier
	m	(Lerr;Ljava/util/stream/Stream$Builder;Lesg;)V	a	lambda$run$3
		p	2		choice
	m	(Lerr;Ljava/util/stream/Stream$Builder;Lesh;)V	a	lambda$run$4
		p	2		entry
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Leto;)Ljava/util/List;	a	lambda$static$1
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Leto;)Lero;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lero;	b	component
	f	Ljava/util/List;	c	entries
c	eto$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetContents$a
	m	(Lero;)V	<init>	<init>
		p	1		componentModifier
	m	()Leto$a;	a	getThis
	m	(Lesh$a;)Leto$a;	a	withEntry
		p	1		entryBuilder
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Lero;	b	component
c	etp	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetTable
	m	(Ljava/util/List;Lakq;JLjm;)V	<init>	<init>
		p	1		conditions
		p	2		lootTable
		p	3		seed
		p	5		blockEntityType
	m	(Lakq;JLdqj;Ljava/util/List;)Letf;	a	lambda$withLootTable$5
		p	4		conditions
	m	(Lakq;Ldqj;Ljava/util/List;)Letf;	a	lambda$withLootTable$4
		p	2		conditions
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Ldqj;Lakq;)Lete$a;	a	withLootTable
		p	0		type
		p	1		lootTable
	m	(Ldqj;Lakq;J)Lete$a;	a	withLootTable
		p	0		type
		p	1		lootTable
		p	2		seed
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Letp;)Ljm;	a	lambda$static$2
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Letp;)Ljava/lang/Long;	b	lambda$static$1
		p	0		function
	m	(Letp;)Lakq;	c	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakq;	b	name
	f	J	c	seed
	f	Ljm;	d	type
c	etq	net/minecraft/world/level/storage/loot/functions/SetCustomDataFunction
	m	(Ljava/util/List;Lub;)V	<init>	<init>
		p	1		conditions
		p	2		nbt
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letq;)Lub;	a	lambda$static$0
		p	0		function
	m	(Lub;)Lete$a;	a	setCustomData
		p	0		nbt
	m	(Lub;Ljava/util/List;)Letf;	a	lambda$setCustomData$3
		p	1		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	m	(Lub;)V	b	lambda$run$2
		p	1		nbt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lub;	b	tag
c	etr	net/minecraft/world/level/storage/loot/functions/SetCustomModelDataFunction
	m	(Ljava/util/List;Levy;)V	<init>	<init>
		p	1		conditions
		p	2		value
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letr;)Levy;	a	lambda$static$0
		p	0		lootFunction
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	valueProvider
c	ets	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	m	(Ljava/util/List;Ljava/util/Map;Z)V	<init>	<init>
		p	1		conditions
		p	2		enchantments
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Ldai$a;Lerr;Ljm;Levy;)V	a	lambda$run$5
		p	2		enchantment
		p	3		level
	m	(Lerr;Ldai$a;)V	a	lambda$run$6
		p	2		builder
	m	(Lets;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		function
	m	(Levy;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$3
		p	0		numberProvider
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Ldai$a;Lerr;Ljm;Levy;)V	b	lambda$run$4
		p	2		enchantment
		p	3		level
	m	(Lets;)Ljava/util/Map;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	enchantments
	f	Z	c	add
c	ets$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$a
	m	(Z)V	<init>	<init>
		p	1		add
	m	()Lets$a;	a	getThis
	m	(Ljm;Levy;)Lets$a;	a	withEnchantment
		p	1		enchantment
		p	2		level
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	enchantments
	f	Z	b	add
c	ett	net/minecraft/world/level/storage/loot/functions/SetFireworkExplosionFunction
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		shape
		p	3		colors
		p	4		fadeColors
		p	5		trail
		p	6		twinkle
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcxl;)Lcxl;	a	apply
		p	1		current
	m	(Lett;)Ljava/util/Optional;	a	lambda$static$4
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
		p	0		instance
	m	(Lett;)Ljava/util/Optional;	b	lambda$static$3
		p	0		function
	m	(Lett;)Ljava/util/Optional;	c	lambda$static$2
		p	0		function
	m	(Lett;)Ljava/util/Optional;	d	lambda$static$1
		p	0		function
	m	(Lett;)Ljava/util/Optional;	e	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcxl;	b	DEFAULT_VALUE
	f	Ljava/util/Optional;	c	shape
	f	Ljava/util/Optional;	d	colors
	f	Ljava/util/Optional;	e	fadeColors
	f	Ljava/util/Optional;	f	trail
	f	Ljava/util/Optional;	h	twinkle
c	etu	net/minecraft/world/level/storage/loot/functions/SetFireworksFunction
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		explosions
		p	3		flightDuration
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcxm;)Lcxm;	a	apply
		p	1		fireworksComponent
	m	(Lcxm;Letd$e;)Ljava/util/List;	a	lambda$apply$3
		p	1		values
	m	(Letu;)Ljava/util/Optional;	a	lambda$static$1
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Letu;)Ljava/util/Optional;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcxm;	b	DEFAULT_VALUE
	f	Ljava/util/Optional;	c	explosions
	f	Ljava/util/Optional;	d	flightDuration
c	etv	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	m	(Ljava/util/List;Lawu;)V	<init>	<init>
		p	1		conditions
		p	2		options
	m	(Lawu;)Lete$a;	a	setInstrumentOptions
		p	0		options
	m	(Lawu;Ljava/util/List;)Letf;	a	lambda$setInstrumentOptions$2
		p	1		conditions
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letv;)Lawu;	a	lambda$static$0
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lawu;	b	options
c	etw	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetCount
	m	(Ljava/util/List;Levy;Z)V	<init>	<init>
		p	1		conditions
		p	2		countRange
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letw;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		function
	m	(Levy;)Lete$a;	a	setCount
		p	0		countRange
	m	(Levy;Ljava/util/List;)Letf;	a	lambda$setCount$3
	m	(Levy;Z)Lete$a;	a	setCount
		p	0		countRange
		p	1		add
	m	(Levy;ZLjava/util/List;)Letf;	a	lambda$setCount$4
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Letw;)Levy;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	value
	f	Z	c	add
c	etx	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetDamage
	m	(Ljava/util/List;Levy;Z)V	<init>	<init>
		p	1		conditions
		p	2		durabilityRange
		p	3		add
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Letx;)Ljava/lang/Boolean;	a	lambda$static$1
		p	0		function
	m	(Levy;)Lete$a;	a	setDamage
		p	0		durabilityRange
	m	(Levy;Ljava/util/List;)Letf;	a	lambda$setDamage$3
		p	1		conditions
	m	(Levy;Z)Lete$a;	a	setDamage
		p	0		durabilityRange
		p	1		add
	m	(Levy;ZLjava/util/List;)Letf;	a	lambda$setDamage$4
		p	2		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Letx;)Levy;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Levy;	c	damage
	f	Z	d	add
c	ety	net/minecraft/world/level/storage/loot/functions/SetItemFunction
	m	(Ljava/util/List;Ljm;)V	<init>	<init>
		p	1		conditions
		p	2		item
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lety;)Ljm;	a	lambda$static$0
		p	0		lootFunction
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	item
c	etz	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore
	m	(Ljava/util/List;Ljava/util/List;Letd;Ljava/util/Optional;)V	<init>	<init>
		p	1		conditions
		p	2		lore
		p	3		operation
		p	4		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcxp;Lerr;)Ljava/util/List;	a	updateLore
		p	1		current
		p	2		context
	m	(Lerr$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$4
		p	0		entity
	m	(Lerr;Lcxp;)Lcxp;	a	lambda$run$5
		p	2		component
	m	(Letz;)Ljava/util/Optional;	a	lambda$static$2
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Letz;)Letd;	b	lambda$static$1
		p	0		function
	m	()Letz$a;	c	setLore
	m	(Letz;)Ljava/util/List;	c	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	lore
	f	Letd;	c	mode
	f	Ljava/util/Optional;	d	resolutionContext
c	etz$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetLore$a
	m	()Letz$a;	a	getThis
	m	(Lerr$b;)Letz$a;	a	setResolutionContext
		p	1		target
	m	(Letd;)Letz$a;	a	setMode
		p	1		operation
	m	(Lwz;)Letz$a;	a	addLine
		p	1		lore
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Ljava/util/Optional;	a	resolutionContext
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	lore
	f	Letd;	c	mode
c	eua	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Leua$a;)V	<init>	<init>
		p	1		conditions
		p	2		name
		p	3		entity
		p	4		target
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcuq;Lerr;Lwz;)V	a	lambda$run$7
		p	3		name
	m	(Lerr$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$4
		p	0		entity
	m	(Lerr;Lerr$b;)Ljava/util/function/UnaryOperator;	a	createResolver
		p	0		context
		p	1		sourceEntity
	m	(Let;Lbsr;Lwz;)Lwz;	a	lambda$createResolver$5
		p	2		textComponent
	m	(Leua;)Leua$a;	a	lambda$static$2
		p	0		function
	m	(Lwz;)Lwz;	a	lambda$createResolver$6
		p	0		textComponent
	m	(Lwz;Lerr$b;Leua$a;Ljava/util/List;)Letf;	a	lambda$setName$9
		p	3		conditions
	m	(Lwz;Leua$a;)Lete$a;	a	setName
		p	0		name
		p	1		target
	m	(Lwz;Leua$a;Lerr$b;)Lete$a;	a	setName
		p	0		name
		p	1		target
		p	2		entity
	m	(Lwz;Leua$a;Ljava/util/List;)Letf;	a	lambda$setName$8
		p	2		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Leua;)Ljava/util/Optional;	b	lambda$static$1
		p	0		function
	m	(Leua;)Ljava/util/Optional;	c	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Optional;	c	name
	f	Ljava/util/Optional;	d	resolutionContext
	f	Leua$a;	e	target
c	eua$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetName$a
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		id
	m	()Lkp;	a	component
	m	()[Leua$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leua$a;	a	CUSTOM_NAME
	f	Leua$a;	b	ITEM_NAME
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Leua$a;	e	$VALUES
c	eub	net/minecraft/world/level/storage/loot/functions/SetOminousBottleAmplifierFunction
	m	(Ljava/util/List;Levy;)V	<init>	<init>
		p	1		conditions
		p	2		amplifier
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Leub;)Levy;	a	lambda$static$0
		p	0		lootFunction
	m	(Levy;)Lete$a;	a	setAmplifier
		p	0		amplifier
	m	(Levy;Ljava/util/List;)Letf;	a	lambda$setAmplifier$2
		p	1		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	m	()Levy;	c	amplifier
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	amplifierGenerator
c	euc	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	m	(Ljava/util/List;Ljm;)V	<init>	<init>
		p	1		conditions
		p	2		potion
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Leuc;)Ljm;	a	lambda$static$0
		p	0		function
	m	(Ljm;)Lete$a;	a	setPotion
		p	0		potion
	m	(Ljm;Ljava/util/List;)Letf;	a	lambda$setPotion$2
		p	1		conditions
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
		p	0		instance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	potion
c	eud	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
		p	1		conditions
		p	2		stewEffects
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Leud$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$4
		p	0		stewEffect
	m	(Leud;)Ljava/util/List;	a	lambda$static$2
		p	0		function
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		stewEffects
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
		p	0		instance
	m	(Leud$b;)Ljava/lang/String;	b	lambda$static$0
	m	()Leud$a;	c	stewEffect
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EFFECTS_LIST
	f	Ljava/util/List;	c	effects
c	eud$a	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect$a
	m	()Leud$a;	a	getThis
	m	(Ljm;Levy;)Leud$a;	a	withEffect
		p	1		effect
		p	2		durationRange
	m	()Letf;	b	build
	m	()Lete$a;	c	getThis
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	effects
c	eud$b	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSetStewEffect$b
	m	()Ljm;	a	effect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()Levy;	b	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljm;	b	effect
	f	Levy;	c	duration
c	eue	net/minecraft/world/level/storage/loot/functions/SetWritableBookPagesFunction
	m	(Ljava/util/List;Ljava/util/List;Letd;)V	<init>	<init>
		p	1		conditions
		p	2		pages
		p	3		operation
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcya;)Lcya;	a	apply
		p	1		current
	m	(Leue;)Letd;	a	lambda$static$1
		p	0		function
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
		p	0		instance
	m	(Leue;)Ljava/util/List;	b	lambda$static$0
		p	0		function
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	pages
	f	Letd;	c	pageOperation
c	euf	net/minecraft/world/level/storage/loot/functions/SetWrittenBookPagesFunction
	m	(Ljava/util/List;Ljava/util/List;Letd;)V	<init>	<init>
		p	1		conditions
		p	2		pages
		p	3		operation
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcyb;)Lcyb;	a	apply
		p	1		current
	m	(Leuf;)Letd;	a	lambda$static$3
		p	0		function
	m	(Lwz;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		text
	m	(Lwz;Ljava/lang/Object;)Lwz;	a	lambda$static$0
		p	1		value
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Leuf;)Ljava/util/List;	b	lambda$static$2
		p	0		function
	f	Lcom/mojang/serialization/Codec;	a	PAGE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljava/util/List;	c	pages
	f	Letd;	d	pageOperation
c	eug	net/minecraft/world/level/storage/loot/functions/LootItemFunctionSmelt
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		conditions
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	()Lete$a;	c	smelted
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
c	euh	net/minecraft/world/level/storage/loot/functions/ToggleTooltips
	m	(Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
		p	1		conditions
		p	2		toggles
	m	(Lcuq;Lerr;)Lcuq;	a	run
		p	1		stack
		p	2		context
	m	(Lcuq;Leuh$a;Ljava/lang/Boolean;)V	a	lambda$run$5
		p	1		componentType
		p	2		showInTooltip
	m	(Leuh$a;)Leuh$a;	a	lambda$static$0
		p	0		toggle
	m	(Leuh;)Ljava/util/Map;	a	lambda$static$3
		p	0		lootFunction
	m	(Lkp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		componentType
	m	()Letg;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
		p	0		instance
	m	(Lkp;)Ljava/lang/String;	b	lambda$static$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	TOGGLES
	f	Lcom/mojang/serialization/Codec;	c	TOGGLE_CODEC
	f	Ljava/util/Map;	d	values
c	euh$a	net/minecraft/world/level/storage/loot/functions/ToggleTooltips$a
	m	()Lkp;	a	type
	m	(Lcuq;Z)V	a	applyIfPresent
		p	1		stack
		p	2		showInTooltip
	m	()Leuh$b;	b	setter
	f	Lkp;	a	type
	f	Leuh$b;	b	setter
c	euh$b	net/minecraft/world/level/storage/loot/functions/ToggleTooltips$b
	m	(Ljava/lang/Object;Z)Ljava/lang/Object;	withTooltip	withTooltip
		p	1		componentType
		p	2		showInTooltip
c	euk	net/minecraft/world/level/storage/loot/parameters/LootContextParameter
	m	(Lakr;)V	<init>	<init>
		p	1		id
	m	()Lakr;	a	getName
	f	Lakr;	a	name
c	eul	net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
		p	1		required
		p	2		allowed
	m	()Ljava/util/Set;	a	getRequired
	m	(Layu;Lers;)V	a	validateUser
		p	1		errorReporter
		p	2		parameterConsumer
	m	(Lerx;Lers;)V	a	validateUser
		p	1		lootTableReporter
		p	2		parameterConsumer
	m	(Leuk;)Z	a	isAllowed
		p	1		parameter
	m	()Ljava/util/Set;	b	getAllowed
	m	(Leuk;)Ljava/lang/String;	b	lambda$toString$0
		p	1		parameter
	m	()Leul$a;	c	builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	all
c	eul$a	net/minecraft/world/level/storage/loot/parameters/LootContextParameterSet$Builder
	m	()Leul;	a	build
	m	(Leuk;)Leul$a;	a	required
		p	1		parameter
	m	(Leuk;)Leul$a;	b	optional
		p	1		parameter
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
c	eum	net/minecraft/world/level/storage/loot/parameters/LootContextParameterSets
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
		p	0		id
	m	(Leul$a;)V	a	lambda$static$25
		p	0		builder
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Leul;	a	register
		p	0		name
		p	1		type
	m	(Lakr;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	m	(Leul$a;)V	b	lambda$static$24
		p	0		builder
	m	(Lakr;)Ljava/lang/String;	c	lambda$static$0
	m	(Leul$a;)V	c	lambda$static$23
		p	0		builder
	m	(Leul$a;)V	d	lambda$static$22
		p	0		builder
	m	(Leul$a;)V	e	lambda$static$21
		p	0		builder
	m	(Leul$a;)V	f	lambda$static$20
		p	0		builder
	m	(Leul$a;)V	g	lambda$static$19
		p	0		builder
	m	(Leul$a;)V	h	lambda$static$18
		p	0		builder
	m	(Leul$a;)V	i	lambda$static$17
		p	0		builder
	m	(Leul$a;)V	j	lambda$static$16
		p	0		builder
	m	(Leul$a;)V	k	lambda$static$15
		p	0		builder
	m	(Leul$a;)V	l	lambda$static$14
		p	0		builder
	m	(Leul$a;)V	m	lambda$static$13
		p	0		builder
	m	(Leul$a;)V	n	lambda$static$12
		p	0		builder
	m	(Leul$a;)V	o	lambda$static$11
		p	0		builder
	m	(Leul$a;)V	p	lambda$static$10
		p	0		builder
	m	(Leul$a;)V	q	lambda$static$9
		p	0		builder
	m	(Leul$a;)V	r	lambda$static$8
		p	0		builder
	m	(Leul$a;)V	s	lambda$static$7
		p	0		builder
	m	(Leul$a;)V	t	lambda$static$6
		p	0		builder
	m	(Leul$a;)V	u	lambda$static$5
		p	0		builder
	m	(Leul$a;)V	v	lambda$static$4
		p	0		builder
	m	(Leul$a;)V	w	lambda$static$3
		p	0		builder
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leul;	b	EMPTY
	f	Leul;	c	CHEST
	f	Leul;	d	COMMAND
	f	Leul;	e	SELECTOR
	f	Leul;	f	FISHING
	f	Leul;	g	ENTITY
	f	Leul;	h	EQUIPMENT
	f	Leul;	i	ARCHAEOLOGY
	f	Leul;	j	GIFT
	f	Leul;	k	PIGLIN_BARTER
	f	Leul;	l	VAULT
	f	Leul;	m	ADVANCEMENT_REWARD
	f	Leul;	n	ADVANCEMENT_ENTITY
	f	Leul;	o	ADVANCEMENT_LOCATION
	f	Leul;	p	BLOCK_USE
	f	Leul;	q	ALL_PARAMS
	f	Leul;	r	BLOCK
	f	Leul;	s	SHEARING
	f	Leul;	t	ENCHANTED_DAMAGE
	f	Leul;	u	ENCHANTED_ITEM
	f	Leul;	v	ENCHANTED_LOCATION
	f	Leul;	w	ENCHANTED_ENTITY
	f	Leul;	x	HIT_BLOCK
	f	Lcom/google/common/collect/BiMap;	y	REGISTRY
c	eun	net/minecraft/world/level/storage/loot/parameters/LootContextParameters
	m	(Ljava/lang/String;)Leuk;	a	create
		p	0		name
	f	Leuk;	a	THIS_ENTITY
	f	Leuk;	b	LAST_DAMAGE_PLAYER
	f	Leuk;	c	DAMAGE_SOURCE
	f	Leuk;	d	ATTACKING_ENTITY
	f	Leuk;	e	DIRECT_ATTACKING_ENTITY
	f	Leuk;	f	ORIGIN
	f	Leuk;	g	BLOCK_STATE
	f	Leuk;	h	BLOCK_ENTITY
	f	Leuk;	i	TOOL
	f	Leuk;	j	EXPLOSION_RADIUS
	f	Leuk;	k	ENCHANTMENT_LEVEL
	f	Leuk;	l	ENCHANTMENT_ACTIVE
c	eup	net/minecraft/world/level/storage/loot/predicates/AllOfCondition
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Leup;	a	allOf
		p	0		terms
	m	([Levc$a;)Leup$a;	a	allOf
		p	0		terms
	m	()Levd;	b	getType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
c	eup$a	net/minecraft/world/level/storage/loot/predicates/AllOfCondition$a
	m	([Levc$a;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Levc;	a	create
		p	1		terms
	m	(Levc$a;)Leup$a;	and	and
		p	1		condition
c	euq	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		terms
	m	([Levc$a;)Leuq$a;	a	anyOf
		p	0		terms
	m	()Levd;	b	getType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
c	euq$a	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$a
	m	([Levc$a;)V	<init>	<init>
		p	1		terms
	m	(Ljava/util/List;)Levc;	a	create
		p	1		terms
	m	(Levc$a;)Leuq$a;	or	or
		p	1		condition
c	eur	net/minecraft/world/level/storage/loot/predicates/LootItemConditionTableBonus
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Ljm;Ljava/util/List;)Levc;	a	lambda$bonusLevelFlatChance$1
	m	(Ljm;[F)Levc$a;	a	bonusLevelFlatChance
		p	0		enchantment
		p	1		chances
	m	()Levd;	b	getType
	m	()Ljm;	c	enchantment
	m	()Ljava/util/List;	d	values
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	enchantment
	f	Ljava/util/List;	c	values
c	eus	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition
	m	(Ljava/util/List;Ljava/util/function/Predicate;)V	<init>	<init>
		p	1		terms
		p	2		predicate
	m	(Lerr;)Z	a	test
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Leus;)Ljava/util/List;	a	lambda$createInlineCodec$2
		p	0		condition
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	createCodec
		p	0		termsToCondition
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
		p	1		instance
	m	(Leus;)Ljava/util/List;	b	lambda$createCodec$0
		p	0		condition
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	createInlineCodec
		p	0		termsToCondition
	f	Ljava/util/function/Predicate;	a	composedPredicate
	f	Ljava/util/List;	c	terms
c	eus$a	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$a
	m	([Levc$a;)V	<init>	<init>
		p	1		terms
	m	(Levc$a;)V	a	addTerm
		p	1		builder
	m	(Ljava/util/List;)Levc;	a	create
		p	1		terms
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	terms
c	eut	net/minecraft/world/level/storage/loot/predicates/LootItemConditionReference
	m	(Lakq;)Levc$a;	a	conditionReference
		p	0		key
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Lerx;Ljm$c;)V	a	lambda$validate$1
		p	2		entry
	m	()Levd;	b	getType
	m	(Lakq;)Levc;	b	lambda$conditionReference$3
	m	(Lerx;)V	b	lambda$validate$2
	m	()Lakq;	c	name
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakq;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
c	euu	net/minecraft/world/level/storage/loot/predicates/LootItemConditionUser
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Leuu;	a_	when
		p	1		conditions
		p	2		toBuilderFunction
	m	(Levc$a;)Leuu;	b	when
		p	1		condition
	m	()Leuu;	d	unwrap
c	euv	net/minecraft/world/level/storage/loot/predicates/LootItemConditionDamageSourceProperties
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lbk$a;)Levc$a;	a	hasDamageSource
		p	0		builder
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	(Lbk$a;)Levc;	b	lambda$hasDamageSource$1
	m	()Ljava/util/Optional;	c	predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
c	euw	net/minecraft/world/level/storage/loot/predicates/EnchantmentActiveCheck
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Levc$a;	c	enchantmentActiveCheck
	m	()Levc$a;	d	enchantmentInactiveCheck
	m	()Z	e	active
	m	()Levc;	f	lambda$enchantmentInactiveCheck$2
	m	()Levc;	g	lambda$enchantmentActiveCheck$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Z	b	active
c	eux	net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore
	m	(Ljava/util/Map;Lerr$b;)V	<init>	<init>
		p	1		scores
		p	2		target
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerq;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$1
		p	0		operator
	m	(Lerr$b;)Leux$a;	a	hasScores
		p	0		target
	m	(Lerr;)Z	a	test
	m	(Lerr;Lbsr;Leyg;Ljava/lang/String;Lerq;)Z	a	hasScore
		p	1		context
		p	2		entity
		p	3		scoreboard
		p	4		objectiveName
		p	5		range
	m	()Levd;	b	getType
	m	()Ljava/util/Map;	c	scores
	m	()Lerr$b;	d	entityTarget
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	scores
	f	Lerr$b;	c	entityTarget
c	eux$a	net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityScore$a
	m	(Lerr$b;)V	<init>	<init>
		p	1		target
	m	(Ljava/lang/String;Lerq;)Leux$a;	a	withScore
		p	1		name
		p	2		value
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	scores
	f	Lerr$b;	b	entityTarget
c	euy	net/minecraft/world/level/storage/loot/predicates/LootItemConditionSurvivesExplosion
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Levc$a;	c	survivesExplosion
	m	()Levc;	d	lambda$survivesExplosion$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leuy;	b	INSTANCE
c	euz	net/minecraft/world/level/storage/loot/predicates/LootItemConditionInverted
	m	(Levc;)V	<init>	<init>
		p	1		term
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Lerx;)V	a	validate
		p	1		reporter
	m	(Leuz;)Levc;	a	lambda$invert$1
	m	(Levc$a;)Levc$a;	a	invert
		p	0		term
	m	()Levd;	b	getType
	m	()Levc;	c	term
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levc;	b	term
c	eva	net/minecraft/world/level/storage/loot/predicates/LootItemConditionLocationCheck
	m	(Ljava/util/Optional;Ljd;)V	<init>	<init>
		p	2		offset
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
		p	0		instance
	m	(Ldf$a;)Levc$a;	a	checkLocation
		p	0		predicateBuilder
	m	(Ldf$a;Ljd;)Levc$a;	a	checkLocation
		p	0		predicateBuilder
		p	1		pos
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
		p	0		instance
	m	(Ldf$a;)Levc;	b	lambda$checkLocation$2
	m	(Ldf$a;Ljd;)Levc;	b	lambda$checkLocation$3
	m	()Ljava/util/Optional;	c	predicate
	m	()Ljd;	d	offset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
	f	Ljd;	c	offset
	f	Lcom/mojang/serialization/MapCodec;	g	OFFSET_CODEC
c	evb	net/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldfy;)Levb$a;	a	hasBlockStateProperties
		p	0		block
	m	(Lerr;)Z	a	test
	m	(Levb;)Lcom/mojang/serialization/DataResult;	a	validate
		p	0		condition
	m	(Levb;Leb;)Ljava/util/Optional;	a	lambda$validate$1
		p	1		predicate
	m	(Levb;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
		p	1		property
	m	()Levd;	b	getType
	m	(Levb;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	()Ljm;	c	block
	m	()Ljava/util/Optional;	d	properties
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljm;	b	block
	f	Ljava/util/Optional;	c	properties
c	evb$a	net/minecraft/world/level/storage/loot/predicates/LootItemConditionBlockStateProperty$a
	m	(Ldfy;)V	<init>	<init>
		p	1		block
	m	(Leb$a;)Levb$a;	a	setProperties
		p	1		builder
	f	Ljm;	a	block
	f	Ljava/util/Optional;	b	properties
c	evc	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	m	()Levd;	b	getType
	m	()Lcom/mojang/serialization/Codec;	c	lambda$static$0
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	e	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	f	CODEC
c	evc$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$a
	m	(Levc$a;)Leup$a;	and	and
		p	1		condition
	m	(Levc$a;)Leuq$a;	or	or
		p	1		condition
c	evd	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	eve	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Levd;	a	register
		p	0		id
		p	1		codec
	f	Levd;	a	INVERTED
	f	Levd;	b	ANY_OF
	f	Levd;	c	ALL_OF
	f	Levd;	d	RANDOM_CHANCE
	f	Levd;	e	RANDOM_CHANCE_WITH_ENCHANTED_BONUS
	f	Levd;	f	ENTITY_PROPERTIES
	f	Levd;	g	KILLED_BY_PLAYER
	f	Levd;	h	ENTITY_SCORES
	f	Levd;	i	BLOCK_STATE_PROPERTY
	f	Levd;	j	MATCH_TOOL
	f	Levd;	k	TABLE_BONUS
	f	Levd;	l	SURVIVES_EXPLOSION
	f	Levd;	m	DAMAGE_SOURCE_PROPERTIES
	f	Levd;	n	LOCATION_CHECK
	f	Levd;	o	WEATHER_CHECK
	f	Levd;	p	REFERENCE
	f	Levd;	q	TIME_CHECK
	f	Levd;	r	VALUE_CHECK
	f	Levd;	s	ENCHANTMENT_ACTIVE_CHECK
c	evf	net/minecraft/world/level/storage/loot/predicates/LootItemConditionEntityProperty
	m	(Ljava/util/Optional;Lerr$b;)V	<init>	<init>
		p	2		entity
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lbv$a;Lerr$b;)Levc;	a	lambda$hasProperties$1
	m	(Lbv;Lerr$b;)Levc;	a	lambda$hasProperties$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr$b;)Levc$a;	a	entityPresent
		p	0		entity
	m	(Lerr$b;Lbv$a;)Levc$a;	a	hasProperties
		p	0		entity
		p	1		predicateBuilder
	m	(Lerr$b;Lbv;)Levc$a;	a	hasProperties
		p	0		entity
		p	1		predicate
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Ljava/util/Optional;	c	predicate
	m	()Lerr$b;	d	entityTarget
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
	f	Lerr$b;	c	entityTarget
c	evg	net/minecraft/world/level/storage/loot/predicates/LootItemConditionKilledByPlayer
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Levc$a;	c	killedByPlayer
	m	()Levc;	d	lambda$killedByPlayer$0
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levg;	b	INSTANCE
c	evh	net/minecraft/world/level/storage/loot/predicates/LootItemConditionRandomChance
	m	(F)Levc$a;	a	randomChance
		p	0		chance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Levy;)Levc$a;	a	randomChance
		p	0		chance
	m	()Levd;	b	getType
	m	(F)Levc;	b	lambda$randomChance$1
	m	(Levy;)Levc;	b	lambda$randomChance$2
	m	()Levy;	c	chance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	chance
c	evi	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithEnchantedBonusCondition
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(FFLjo$b;)Levc;	a	lambda$randomChanceAndLootingBoost$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Ljo$a;FF)Levc$a;	a	randomChanceAndLootingBoost
		p	0		registryLookup
		p	1		base
		p	2		perLevelAboveFirst
	m	()Levd;	b	getType
	m	()F	c	unenchantedChance
	m	()Ldaj;	d	enchantedChance
	m	()Ljm;	e	enchantment
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	unenchantedChance
	f	Ldaj;	c	enchantedChance
	f	Ljm;	g	enchantment
c	evj	net/minecraft/world/level/storage/loot/predicates/LootItemConditionMatchTool
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lcs$a;)Levc$a;	a	toolMatches
		p	0		predicate
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	(Lcs$a;)Levc;	b	lambda$toolMatches$1
	m	()Ljava/util/Optional;	c	predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	predicate
c	evk	net/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck
	m	(Ljava/util/Optional;Lerq;)V	<init>	<init>
		p	2		value
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerq;)Levk$a;	a	time
		p	0		value
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Ljava/util/Optional;	c	period
	m	()Lerq;	d	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	period
	f	Lerq;	c	value
c	evk$a	net/minecraft/world/level/storage/loot/predicates/LootItemConditionTimeCheck$a
	m	(Lerq;)V	<init>	<init>
		p	1		value
	m	()Levk;	a	build
	m	(J)Levk$a;	a	setPeriod
		p	1		period
	f	Ljava/util/Optional;	a	period
	f	Lerq;	b	value
c	evl	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	m	(Levy;Lerq;)V	<init>	<init>
		p	1		value
		p	2		range
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	(Levy;Lerq;)Levc$a;	a	hasValue
		p	0		value
		p	1		range
	m	()Levd;	b	getType
	m	(Levy;Lerq;)Levc;	b	lambda$hasValue$1
	m	()Levy;	c	provider
	m	()Lerq;	d	range
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	provider
	f	Lerq;	c	range
c	evm	net/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Z	a	test
	m	()Levd;	b	getType
	m	()Levm$a;	c	weather
	m	()Ljava/util/Optional;	d	isRaining
	m	()Ljava/util/Optional;	e	isThundering
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	isRaining
	f	Ljava/util/Optional;	c	isThundering
c	evm$a	net/minecraft/world/level/storage/loot/predicates/LootItemConditionWeatherCheck$a
	m	()Levm;	a	build
	m	(Z)Levm$a;	a	setRaining
		p	1		raining
	m	(Z)Levm$a;	b	setThundering
		p	1		thundering
	f	Ljava/util/Optional;	a	isRaining
	f	Ljava/util/Optional;	b	isThundering
c	evo	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	m	(Levo$a;)V	<init>	<init>
		p	1		target
	m	()Levp;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
		p	0		instance
	m	(Lerr$b;)Levq;	a	forContextEntity
		p	0		target
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	(Levo;)Levo$a;	a	lambda$static$3
		p	0		provider
	m	(Ljava/lang/String;)Levo$a;	a	lambda$static$0
		p	0		type
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lerr$b;)Levo$a;	b	forEntity
		p	0		entityTarget
	m	(Levo;)Levo$a;	b	lambda$static$1
		p	0		provider
	f	Levo;	a	BLOCK_ENTITY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	INLINE_CODEC
	f	Ljava/lang/String;	d	BLOCK_ENTITY_ID
	f	Levo$a;	e	BLOCK_ENTITY_PROVIDER
	f	Lcom/mojang/serialization/Codec;	f	GETTER_CODEC
	f	Levo$a;	g	getter
c	evo$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()Ljava/lang/String;	a	getId
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	evo$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	m	()Ljava/lang/String;	a	getId
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	f	Lerr$b;	a	val$target
c	evo$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$a
	m	()Ljava/lang/String;	a	getId
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	evp	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	evq	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	()Levp;	a	getType
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	evr	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Levq;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		provider
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Levp;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Levp;	b	STORAGE
	f	Levp;	c	CONTEXT
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
c	evs	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	m	(Lakr;)V	<init>	<init>
		p	1		source
	m	()Levp;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Luy;	a	get
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lakr;	c	id
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	b	id
c	evu	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	m	(Levy;Levy;)V	<init>	<init>
		p	1		n
		p	2		p
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(IF)Levu;	a	binomial
		p	0		n
		p	1		p
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)I	a	getInt
		p	1		context
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()Levy;	c	n
	m	()Levy;	d	p
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	n
	f	Levy;	c	p
c	evv	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	m	(F)V	<init>	<init>
		p	1		value
	m	(F)Levv;	a	exactly
		p	0		value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()F	c	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	F	c	value
c	evw	net/minecraft/world/level/storage/loot/providers/number/EnchantmentLevelProvider
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Ldaj;)Levw;	a	forEnchantmentLevel
		p	0		amount
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()Ldaj;	c	amount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldaj;	b	amount
c	evx	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	evy	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	(Lerr;)I	a	getInt
		p	1		context
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
c	evz	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Levy;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		provider
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Levx;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Levx;	b	CONSTANT
	f	Levx;	c	UNIFORM
	f	Levx;	d	BINOMIAL
	f	Levx;	e	SCORE
	f	Levx;	f	STORAGE
	f	Levx;	g	ENCHANTMENT_LEVEL
	f	Lcom/mojang/serialization/Codec;	h	TYPED_CODEC
c	ewa	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	m	(Lewh;Ljava/lang/String;F)V	<init>	<init>
		p	1		target
		p	2		score
		p	3		scale
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr$b;Ljava/lang/String;)Lewa;	a	fromScoreboard
		p	0		target
		p	1		score
	m	(Lerr$b;Ljava/lang/String;F)Lewa;	a	fromScoreboard
		p	0		target
		p	1		score
		p	2		scale
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()Lewh;	c	target
	m	()Ljava/lang/String;	d	score
	m	()F	e	scale
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lewh;	b	target
	f	Ljava/lang/String;	c	score
	f	F	d	scale
c	ewb	net/minecraft/world/level/storage/loot/providers/number/StorageValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)I	a	getInt
		p	1		context
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()Lakr;	c	storage
	m	(Lerr;)Ljava/util/Optional;	c	getNumericTag
		p	1		context
	m	()Lfl$g;	d	path
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lakr;	b	storage
	f	Lfl$g;	c	path
c	ewc	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	m	(Levy;Levy;)V	<init>	<init>
		p	1		min
		p	2		max
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(FF)Lewc;	a	between
		p	0		min
		p	1		max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)I	a	getInt
		p	1		context
	m	()Levx;	b	getType
	m	(Lerr;)F	b	getFloat
		p	1		context
	m	()Levy;	c	min
	m	()Levy;	d	max
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levy;	b	min
	f	Levy;	c	max
c	ewe	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	m	(Lerr$b;)V	<init>	<init>
		p	1		target
	m	()Lewg;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr$b;)Lewh;	a	forTarget
		p	0		target
	m	(Lerr;)Leyf;	a	getScoreHolder
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lerr$b;	c	target
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	Lerr$b;	c	target
c	ewf	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	()Lewg;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
		p	0		instance
	m	(Lerr;)Leyf;	a	getScoreHolder
		p	1		context
	m	(Ljava/lang/String;)Lewh;	a	forName
		p	0		name
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	c	name
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/lang/String;	b	name
c	ewg	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
c	ewh	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	()Lewg;	a	getType
	m	(Lerr;)Leyf;	a	getScoreHolder
		p	1		context
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	ewi	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lewh;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
		p	0		provider
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lewg;	a	register
		p	0		id
		p	1		codec
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lewg;	b	FIXED
	f	Lewg;	c	CONTEXT
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
c	ewl	net/minecraft/world/level/timers/CustomFunctionCallback
	m	(Lakr;)V	<init>	<init>
		p	1		name
	m	(Lalg;Lig;)V	a	lambda$handle$0
		p	1		function
	m	(Lnet/minecraft/server/MinecraftServer;Lewp;J)V	a	handle
	m	(Ljava/lang/Object;Lewp;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Lakr;	a	functionId
c	ewl$a	net/minecraft/world/level/timers/CustomFunctionCallback$a
	m	(Lub;)Lewl;	a	deserialize
	m	(Lub;Lewl;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lub;Lewn;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lub;)Lewn;	b	deserialize
		p	1		nbt
c	ewm	net/minecraft/world/level/timers/CustomFunctionCallbackTag
	m	(Lakr;)V	<init>	<init>
		p	1		name
	m	(Lnet/minecraft/server/MinecraftServer;Lewp;J)V	a	handle
	m	(Ljava/lang/Object;Lewp;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
	f	Lakr;	a	tagId
c	ewm$a	net/minecraft/world/level/timers/CustomFunctionCallbackTag$a
	m	(Lub;)Lewm;	a	deserialize
	m	(Lub;Lewm;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lub;Lewn;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	(Lub;)Lewn;	b	deserialize
		p	1		nbt
c	ewn	net/minecraft/world/level/timers/CustomFunctionCallbackTimer
	m	(Ljava/lang/Object;Lewp;J)V	handle	handle
		p	1		server
		p	2		events
		p	3		time
c	ewn$a	net/minecraft/world/level/timers/CustomFunctionCallbackTimer$a
	m	(Lakr;Ljava/lang/Class;)V	<init>	<init>
		p	1		id
		p	2		callbackClass
	m	()Lakr;	a	getId
	m	(Lub;Lewn;)V	a	serialize
		p	1		nbt
		p	2		callback
	m	()Ljava/lang/Class;	b	getCls
	m	(Lub;)Lewn;	b	deserialize
		p	1		nbt
	f	Lakr;	a	id
	f	Ljava/lang/Class;	b	cls
c	ewo	net/minecraft/world/level/timers/CustomFunctionCallbackTimers
	m	(Lewn$a;)Lewo;	a	register
		p	1		serializer
	m	(Lewn;)Lub;	a	serialize
		p	1		callback
	m	(Ljava/lang/Class;)Lewn$a;	a	getSerializer
		p	1		clazz
	m	(Lub;)Lewn;	a	deserialize
		p	1		nbt
	f	Lewo;	a	SERVER_CALLBACKS
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Map;	c	idToSerializer
	f	Ljava/util/Map;	d	classToSerializer
c	ewp	net/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue
	m	(Lewo;)V	<init>	<init>
		p	1		timerCallbackSerializer
	m	(Lewo;Ljava/util/stream/Stream;)V	<init>	<init>
		p	1		timerCallbackSerializer
		p	2		nbts
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
		p	1		nbt
	m	(Lewp$a;)Lub;	a	storeEvent
		p	1		event
	m	(Ljava/lang/Object;J)V	a	tick
		p	1		server
		p	2		time
	m	(Ljava/lang/String;)I	a	remove
		p	1		name
	m	(Ljava/lang/String;JLewn;)V	a	schedule
		p	1		name
		p	2		triggerTime
		p	4		callback
	m	(Lub;)V	a	loadEvent
		p	1		nbt
	m	()Luh;	b	store
	m	(Lewp$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
		p	0		event
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Lewp$a;)J	c	lambda$createComparator$0
		p	0		event
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Lewo;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
c	ewp$a	net/minecraft/world/level/timers/CustomFunctionCallbackTimerQueue$a
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Lewn;)V	<init>	<init>
		p	1		triggerTime
		p	3		id
		p	4		name
		p	5		callback
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Lewn;	d	callback
c	ewr	net/minecraft/world/level/validation/ContentValidationException
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	<init>	<init>
		p	1		path
		p	2		symlinks
	m	(Lewt;)Ljava/lang/String;	a	lambda$getMessage$0
		p	0		symlink
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String;	a	getMessage
		p	0		path
		p	1		symlinks
	f	Ljava/nio/file/Path;	a	directory
	f	Ljava/util/List;	b	entries
c	ews	net/minecraft/world/level/validation/DirectoryValidator
	m	(Ljava/nio/file/PathMatcher;)V	<init>	<init>
		p	1		matcher
	m	(Ljava/nio/file/Path;)Ljava/util/List;	a	validateSymlink
		p	1		path
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	a	validateSymlink
		p	1		path
		p	2		results
	m	(Ljava/nio/file/Path;Z)Ljava/util/List;	a	validateDirectory
		p	1		path
		p	2		resolveSymlink
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	b	validateKnownDirectory
		p	1		path
		p	2		results
	f	Ljava/nio/file/PathMatcher;	a	symlinkTargetAllowList
c	ews$1	net/minecraft/world/level/validation/DirectoryValidator$1
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	preVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	b	visitFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V	c	validateSymlink
		p	1		path
		p	2		attributes
	f	Ljava/util/List;	a	val$issues
	f	Lews;	b	this$0
c	ewt	net/minecraft/world/level/validation/ForbiddenSymlinkInfo
	m	()Ljava/nio/file/Path;	a	link
	m	()Ljava/nio/file/Path;	b	target
	f	Ljava/nio/file/Path;	a	link
	f	Ljava/nio/file/Path;	b	target
c	ewu	net/minecraft/world/level/validation/PathAllowList
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		allowedEntries
	m	(Ljava/io/BufferedReader;)Lewu;	a	readPlain
		p	0		reader
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	a	lambda$readPlain$5
		p	0		line
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	getForFileSystem
		p	1		fileSystem
	m	(Ljava/nio/file/FileSystem;Lewu$a;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$0
		p	1		entry
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$4
		p	2		scheme
	m	(Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$2
		p	0		path
	m	(Ljava/util/List;Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$3
		p	1		path
	m	(Ljava/nio/file/Path;)Z	b	lambda$getForFileSystem$1
		p	0		path
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	COMMENT_PREFIX
	f	Ljava/util/List;	c	entries
	f	Ljava/util/Map;	d	compiledPaths
c	ewu$a	net/minecraft/world/level/validation/PathAllowList$a
	m	()Lewu$b;	a	type
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	parse
		p	0		line
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	compile
		p	1		fileSystem
	m	()Ljava/lang/String;	b	pattern
	m	(Ljava/lang/String;)Lewu$a;	b	glob
		p	0		pattern
	m	(Ljava/lang/String;)Lewu$a;	c	regex
		p	0		pattern
	m	(Ljava/lang/String;)Lewu$a;	d	prefix
		p	0		prefix
	f	Lewu$b;	a	type
	f	Ljava/lang/String;	b	pattern
c	ewu$b	net/minecraft/world/level/validation/PathAllowList$b
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$static$0
		p	1		path
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$static$1
		p	0		fileSystem
		p	1		prefix
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	compile	compile
		p	1		fileSystem
		p	2		pattern
	f	Lewu$b;	a	FILESYSTEM
	f	Lewu$b;	b	PREFIX
c	ewx	net/minecraft/world/phys/AxisAlignedBB
	m	(DDDDDD)V	<init>	<init>
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	(Lexc;Lexc;)V	<init>	<init>
		p	1		pos1
		p	2		pos2
	m	(Ljd;)V	<init>	<init>
		p	1		pos
	m	()D	a	getSize
	m	(D)Lewx;	a	setMinX
		p	1		minX
	m	(DDD)Lewx;	a	contract
		p	1		x
		p	3		y
		p	5		z
	m	(DDDDDD)Z	a	intersects
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	(Lejj;)Lewx;	a	of
		p	0		mutable
	m	(Lewx;)Lewx;	a	intersect
		p	1		box
	m	(Lewx;Lexc;[DLji;DDD)Lji;	a	getDirection
		p	0		box
		p	1		intersectingVector
		p	2		traceDistanceResult
		p	3		approachDirection
		p	4		deltaX
		p	6		deltaY
		p	8		deltaZ
	m	(Lexc;)Lewx;	a	unitCubeFromLowerCorner
		p	0		pos
	m	(Lexc;DDD)Lewx;	a	ofSize
		p	0		center
		p	1		dx
		p	3		dy
		p	5		dz
	m	(Lexc;Lexc;)Z	a	intersects
		p	1		pos1
		p	2		pos2
	m	(Ljava/lang/Iterable;Lexc;Lexc;Ljd;)Lewy;	a	clip
		p	0		boxes
		p	1		from
		p	2		to
		p	3		pos
	m	(Ljd;)Lewx;	a	move
		p	1		blockPos
	m	(Ljd;Ljd;)Lewx;	a	encapsulatingFullBlocks
		p	0		pos1
		p	1		pos2
	m	(Lji$a;)D	a	min
		p	1		axis
	m	(Lorg/joml/Vector3f;)Lewx;	a	move
		p	1		offset
	m	([DLji;DDDDDDDDLji;DDD)Lji;	a	clipPoint
		p	0		traceDistanceResult
		p	1		approachDirection
		p	2		deltaX
		p	4		deltaY
		p	6		deltaZ
		p	8		begin
		p	10		minX
		p	12		maxX
		p	14		minZ
		p	16		maxZ
		p	18		resultDirection
		p	19		startX
		p	21		startY
		p	23		startZ
	m	()D	b	getXsize
	m	(D)Lewx;	b	setMinY
		p	1		minY
	m	(DDD)Lewx;	b	expandTowards
		p	1		x
		p	3		y
		p	5		z
	m	(Lewx;)Lewx;	b	minmax
		p	1		box
	m	(Lexc;)Lewx;	b	expandTowards
		p	1		scale
	m	(Lexc;Lexc;)Ljava/util/Optional;	b	clip
		p	1		min
		p	2		max
	m	(Lji$a;)D	b	max
		p	1		axis
	m	()D	c	getYsize
	m	(D)Lewx;	c	setMinZ
		p	1		minZ
	m	(DDD)Lewx;	c	inflate
		p	1		x
		p	3		y
		p	5		z
	m	(Lewx;)Z	c	intersects
		p	1		box
	m	(Lexc;)Lewx;	c	move
		p	1		vec
	m	()D	d	getZsize
	m	(D)Lewx;	d	setMaxX
		p	1		maxX
	m	(DDD)Lewx;	d	move
		p	1		x
		p	3		y
		p	5		z
	m	(Lexc;)Z	d	contains
		p	1		pos
	m	()Z	e	hasNaN
	m	(D)Lewx;	e	setMaxY
		p	1		maxY
	m	(DDD)Z	e	contains
		p	1		x
		p	3		y
		p	5		z
	m	(Lexc;)D	e	distanceToSqr
		p	1		pos
	m	()Lexc;	f	getCenter
	m	(D)Lewx;	f	setMaxZ
		p	1		maxZ
	m	(DDD)Lewx;	f	deflate
		p	1		x
		p	3		y
		p	5		z
	m	()Lexc;	g	getBottomCenter
	m	(D)Lewx;	g	inflate
		p	1		value
	m	()Lexc;	h	getMinPosition
	m	(D)Lewx;	h	deflate
		p	1		value
	m	()Lexc;	i	getMaxPosition
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	f	D	g	EPSILON
c	ewy	net/minecraft/world/phys/MovingObjectPositionBlock
	m	(Lexc;Lji;Ljd;Z)V	<init>	<init>
		p	1		pos
		p	2		side
		p	3		blockPos
		p	4		insideBlock
	m	(ZLexc;Lji;Ljd;Z)V	<init>	<init>
		p	1		missed
		p	2		pos
		p	3		side
		p	4		blockPos
		p	5		insideBlock
	m	()Ljd;	a	getBlockPos
	m	(Lexc;Lji;Ljd;)Lewy;	a	miss
		p	0		pos
		p	1		side
		p	2		blockPos
	m	(Ljd;)Lewy;	a	withPosition
		p	1		blockPos
	m	(Lji;)Lewy;	a	withDirection
		p	1		side
	m	()Lji;	b	getDirection
	m	()Lexa$a;	c	getType
	m	()Z	d	isInside
	f	Lji;	b	direction
	f	Ljd;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
c	ewz	net/minecraft/world/phys/MovingObjectPositionEntity
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(Lbsr;Lexc;)V	<init>	<init>
		p	1		entity
		p	2		pos
	m	()Lbsr;	a	getEntity
	m	()Lexa$a;	c	getType
	f	Lbsr;	b	entity
c	exa	net/minecraft/world/phys/MovingObjectPosition
	m	(Lexc;)V	<init>	<init>
		p	1		pos
	m	(Lbsr;)D	a	distanceTo
		p	1		entity
	m	()Lexa$a;	c	getType
	m	()Lexc;	e	getLocation
	f	Lexc;	a	location
c	exa$a	net/minecraft/world/phys/MovingObjectPosition$EnumMovingObjectType
	m	()[Lexa$a;	a	$values
	f	Lexa$a;	a	MISS
	f	Lexa$a;	b	BLOCK
	f	Lexa$a;	c	ENTITY
	f	[Lexa$a;	d	$VALUES
c	exb	net/minecraft/world/phys/Vec2F
	m	(FF)V	<init>	<init>
		p	1		x
		p	2		y
	m	()Lexb;	a	normalized
	m	(F)Lexb;	a	scale
		p	1		value
	m	(Lexb;)F	a	dot
		p	1		vec
	m	()F	b	length
	m	(F)Lexb;	b	add
		p	1		value
	m	(Lexb;)Lexb;	b	add
		p	1		vec
	m	()F	c	lengthSquared
	m	(Lexb;)Z	c	equals
		p	1		other
	m	()Lexb;	d	negated
	m	(Lexb;)F	d	distanceToSqr
		p	1		vec
	f	Lexb;	a	ZERO
	f	Lexb;	b	ONE
	f	Lexb;	c	UNIT_X
	f	Lexb;	d	NEG_UNIT_X
	f	Lexb;	e	UNIT_Y
	f	Lexb;	f	NEG_UNIT_Y
	f	Lexb;	g	MAX
	f	Lexb;	h	MIN
	f	F	i	x
	f	F	j	y
c	exc	net/minecraft/world/phys/Vec3D
	m	(DDD)V	<init>	<init>
		p	1		x
		p	3		y
		p	5		z
	m	(Lorg/joml/Vector3f;)V	<init>	<init>
		p	1		vec
	m	()D	a	x
	m	(D)Lexc;	a	scale
		p	1		value
	m	(DDD)Lexc;	a	subtract
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lexc;	a	xRot
		p	1		angle
	m	(FF)Lexc;	a	directionFromRotation
		p	0		pitch
		p	1		yaw
	m	(I)Lexc;	a	fromRGB24
		p	0		rgb
	m	(Layw;F)Lexc;	a	offsetRandom
		p	1		random
		p	2		multiplier
	m	(Lexb;)Lexc;	a	directionFromRotation
		p	0		polar
	m	(Lexc;)Lexc;	a	vectorTo
		p	1		vec
	m	(Lexc;D)Lexc;	a	lerp
		p	1		to
		p	2		delta
	m	(Lexc;DD)Z	a	closerThan
		p	1		vec
		p	2		horizontalRange
		p	4		verticalRange
	m	(Ljava/util/EnumSet;)Lexc;	a	align
		p	1		axes
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
		p	0		coordinates
	m	(Lji$a;)D	a	get
		p	1		axis
	m	(Lji$a;D)Lexc;	a	with
		p	1		axis
		p	2		value
	m	(Lji;D)Lexc;	a	relative
		p	1		direction
		p	2		value
	m	(Ljw;D)Z	a	closerThan
		p	1		pos
		p	2		radius
	m	(Lkh;)Lexc;	a	atLowerCornerOf
		p	0		vec
	m	(Lkh;D)Lexc;	a	upFromBottomCenterOf
		p	0		vec
		p	1		deltaY
	m	(Lkh;DDD)Lexc;	a	atLowerCornerWithOffset
		p	0		vec
		p	1		deltaX
		p	3		deltaY
		p	5		deltaZ
	m	()D	b	y
	m	(DDD)Lexc;	b	add
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lexc;	b	yRot
		p	1		angle
	m	(Lexc;)D	b	dot
		p	1		vec
	m	(Ljava/util/List;)Lexc;	b	lambda$static$0
		p	0		coords
	m	(Lkh;)Lexc;	b	atCenterOf
		p	0		vec
	m	()D	c	z
	m	(DDD)D	c	distanceToSqr
		p	1		x
		p	3		y
		p	5		z
	m	(F)Lexc;	c	zRot
		p	1		angle
	m	(Lexc;)Lexc;	c	cross
		p	1		vec
	m	(Lkh;)Lexc;	c	atBottomCenterOf
		p	0		vec
	m	()Lexc;	d	normalize
	m	(DDD)Lexc;	d	multiply
		p	1		x
		p	3		y
		p	5		z
	m	(Lexc;)Lexc;	d	subtract
		p	1		vec
	m	()Lexc;	e	reverse
	m	(Lexc;)Lexc;	e	add
		p	1		vec
	m	()D	f	length
	m	(Lexc;)D	f	distanceTo
		p	1		vec
	m	()D	g	lengthSqr
	m	(Lexc;)D	g	distanceToSqr
		p	1		vec
	m	()D	h	horizontalDistance
	m	(Lexc;)Lexc;	h	multiply
		p	1		vec
	m	()D	i	horizontalDistanceSqr
	m	(Lexc;)Ljava/util/List;	i	lambda$static$2
		p	0		vec
	m	()Lorg/joml/Vector3f;	j	toVector3f
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lexc;	b	ZERO
	f	D	c	x
	f	D	d	y
	f	D	e	z
c	exe	net/minecraft/world/phys/shapes/VoxelShapeArray
	m	(Lexl;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lexl;[D[D[D)V	<init>	<init>
		p	1		shape
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
	m	(Lji$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
c	exe$1	net/minecraft/world/phys/shapes/VoxelShapeArray$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
c	exf	net/minecraft/world/phys/shapes/VoxelShapeBitSet
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	(Lexl;)V	<init>	<init>
		p	1		other
	m	()Z	a	isEmpty
	m	(III)I	a	getIndex
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)Z	a	isZStripFull
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(IIIII)Z	a	isXZRectangleFull
		p	1		x1
		p	2		x2
		p	3		z1
		p	4		z2
		p	5		y
	m	(IIIIIIIII)Lexf;	a	withFilledBounds
		p	0		sizeX
		p	1		sizeY
		p	2		sizeZ
		p	3		minX
		p	4		minY
		p	5		minZ
		p	6		maxX
		p	7		maxY
		p	8		maxZ
	m	(IIIZ)V	a	fillUpdateBounds
		p	1		x
		p	2		y
		p	3		z
		p	4		updateBounds
	m	(Lexg;Lexl;IILexl;IILexf;II[I[ZIII)Z	a	lambda$join$0
		p	12		z1
		p	13		z2
		p	14		zIndex
	m	(Lexl;Lexl$b;Z)V	a	forAllBoxes
		p	0		voxelSet
		p	1		callback
		p	2		coalesce
	m	(Lexl;Lexl;Lexo;Lexo;Lexo;Lexg;)Lexf;	a	join
		p	0		first
		p	1		second
		p	2		xPoints
		p	3		yPoints
		p	4		zPoints
		p	5		function
	m	(Lexo;Lexg;Lexl;ILexl;ILexf;I[I[ZIII)Z	a	lambda$join$1
		p	10		y1
		p	11		y2
		p	12		yIndex
	m	(Lexo;Lexo;Lexg;Lexl;Lexl;Lexf;[IIII)Z	a	lambda$join$2
		p	7		x1
		p	8		x2
		p	9		xIndex
	m	(Lji$a;)I	a	firstFull
		p	1		axis
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(IIII)V	b	clearZStrip
		p	1		z1
		p	2		z2
		p	3		x
		p	4		y
	m	(Lji$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	m	(III)Z	d	isInterior
		p	1		x
		p	2		y
		p	3		z
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
c	exg	net/minecraft/world/phys/shapes/OperatorBoolean
	m	(ZZ)Z	a	lambda$static$15
		p	0		a
		p	1		b
	m	(ZZ)Z	apply	apply
		p	1		a
		p	2		b
	m	(ZZ)Z	b	lambda$static$14
		p	0		a
		p	1		b
	m	(ZZ)Z	c	lambda$static$13
		p	0		a
		p	1		b
	m	(ZZ)Z	d	lambda$static$12
		p	0		a
		p	1		b
	m	(ZZ)Z	e	lambda$static$11
		p	0		a
		p	1		b
	m	(ZZ)Z	f	lambda$static$10
		p	0		a
		p	1		b
	m	(ZZ)Z	g	lambda$static$9
		p	0		a
		p	1		b
	m	(ZZ)Z	h	lambda$static$8
		p	0		a
		p	1		b
	m	(ZZ)Z	i	lambda$static$7
		p	0		a
		p	1		b
	m	(ZZ)Z	j	lambda$static$6
		p	0		a
		p	1		b
	m	(ZZ)Z	k	lambda$static$5
		p	0		a
		p	1		b
	m	(ZZ)Z	l	lambda$static$4
		p	0		a
		p	1		b
	m	(ZZ)Z	m	lambda$static$3
		p	0		a
		p	1		b
	m	(ZZ)Z	n	lambda$static$2
		p	0		a
		p	1		b
	m	(ZZ)Z	o	lambda$static$1
		p	0		a
		p	1		b
	m	(ZZ)Z	p	lambda$static$0
		p	0		a
		p	1		b
	f	Lexg;	a	FALSE
	f	Lexg;	b	NOT_OR
	f	Lexg;	c	ONLY_SECOND
	f	Lexg;	d	NOT_FIRST
	f	Lexg;	e	ONLY_FIRST
	f	Lexg;	f	NOT_SECOND
	f	Lexg;	g	NOT_SAME
	f	Lexg;	h	NOT_AND
	f	Lexg;	i	AND
	f	Lexg;	j	SAME
	f	Lexg;	k	SECOND
	f	Lexg;	l	CAUSES
	f	Lexg;	m	FIRST
	f	Lexg;	n	CAUSED_BY
	f	Lexg;	o	OR
	f	Lexg;	p	TRUE
c	exh	net/minecraft/world/phys/shapes/VoxelShapeCollision
	m	()Lexh;	a	empty
	m	(Lbsr;)Lexh;	a	of
		p	0		entity
	m	(Lcul;)Z	a	isHoldingItem
		p	1		item
	m	(Lepe;Lepe;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Lexv;Ljd;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
c	exi	net/minecraft/world/phys/shapes/VoxelShapeCubePoint
	m	(I)V	<init>	<init>
		p	1		sectionCount
	f	I	a	parts
c	exj	net/minecraft/world/phys/shapes/VoxelShapeCube
	m	(Lexl;)V	<init>	<init>
		p	1		voxels
	m	(Lji$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lji$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
c	exk	net/minecraft/world/phys/shapes/VoxelShapeCubeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lexo$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lexi;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
c	exl	net/minecraft/world/phys/shapes/VoxelShapeDiscrete
	m	(III)V	<init>	<init>
		p	1		sizeX
		p	2		sizeY
		p	3		sizeZ
	m	()Z	a	isEmpty
	m	(Lexl$a;)V	a	forAllFaces
		p	1		consumer
	m	(Lexl$a;Lja;)V	a	forAllAxisFaces
		p	1		consumer
		p	2		direction
	m	(Lexl$b;Lja;Z)V	a	forAllAxisEdges
		p	1		callback
		p	2		direction
		p	3		coalesce
	m	(Lexl$b;Z)V	a	forAllEdges
		p	1		callback
		p	2		coalesce
	m	(Lja;III)Z	a	isFullWide
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lji$a;)I	a	firstFull
		p	1		axis
	m	(Lji$a;II)I	a	firstFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	b	getXSize
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lexl$b;Z)V	b	forAllBoxes
		p	1		consumer
		p	2		coalesce
	m	(Lja;III)Z	b	isFull
		p	1		cycle
		p	2		x
		p	3		y
		p	4		z
	m	(Lji$a;)I	b	lastFull
		p	1		axis
	m	(Lji$a;II)I	b	lastFull
		p	1		axis
		p	2		from
		p	3		to
	m	()I	c	getYSize
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	m	(Lji$a;)I	c	getSize
		p	1		axis
	m	()I	d	getZSize
	m	(III)Z	e	isFullWide
		p	1		x
		p	2		y
		p	3		z
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	f	[Lji$a;	d	AXIS_VALUES
c	exl$a	net/minecraft/world/phys/shapes/VoxelShapeDiscrete$a
	m	(Lji;III)V	consume	consume
		p	1		direction
		p	2		x
		p	3		y
		p	4		z
c	exl$b	net/minecraft/world/phys/shapes/VoxelShapeDiscrete$b
	m	(IIIIII)V	consume	consume
		p	1		x1
		p	2		y1
		p	3		z1
		p	4		x2
		p	5		y2
		p	6		z2
c	exm	net/minecraft/world/phys/shapes/VoxelShapeCollisionEntity
	m	(Lbsr;)V	<init>	<init>
		p	1		entity
	m	(ZDLcuq;Ljava/util/function/Predicate;Lbsr;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Lcul;)Z	a	isHoldingItem
		p	1		item
	m	(Lepe;)Z	a	lambda$new$1
	m	(Lepe;Lepe;)Z	a	canStandOnFluid
		p	1		stateAbove
		p	2		state
	m	(Lexv;Ljd;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
	m	()Z	b	isDescending
	m	(Lepe;)Z	b	lambda$static$0
		p	0		fluidState
	m	()Lbsr;	c	getEntity
	f	Lexh;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Lcuq;	d	heldItem
	f	Ljava/util/function/Predicate;	e	canStandOnFluid
	f	Lbsr;	f	entity
c	exm$1	net/minecraft/world/phys/shapes/VoxelShapeCollisionEntity$1
	m	(ZDLcuq;Ljava/util/function/Predicate;Lbsr;)V	<init>	<init>
		p	1		descending
		p	2		minY
		p	4		heldItem
		p	5		walkOnFluidPredicate
		p	6		entity
	m	(Lexv;Ljd;Z)Z	a	isAbove
		p	1		shape
		p	2		pos
		p	3		defaultValue
c	exn	net/minecraft/world/phys/shapes/VoxelShapeMergerIdentical
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
		p	1		values
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lexo$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
c	exo	net/minecraft/world/phys/shapes/VoxelShapeMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lexo$a;)Z	a	forMergedIndexes
		p	1		predicate
c	exo$a	net/minecraft/world/phys/shapes/VoxelShapeMerger$a
	m	(III)Z	merge	merge
		p	1		x
		p	2		y
		p	3		index
c	exp	net/minecraft/world/phys/shapes/VoxelShapeMergerList
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		includeFirstOnly
		p	4		includeSecondOnly
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lexo$a;)Z	a	forMergedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
c	exq	net/minecraft/world/phys/shapes/VoxelShapeMergerDisjoint
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
		p	1		first
		p	2		second
		p	3		inverted
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lexo$a;)Z	a	forMergedIndexes
		p	1		predicate
	m	(Lexo$a;III)Z	a	lambda$forMergedIndexes$0
		p	1		x
		p	2		y
		p	3		index
	m	(Lexo$a;)Z	b	forNonSwappedIndexes
		p	1		predicate
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
c	exr	net/minecraft/world/phys/shapes/DoubleListOffset
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
		p	1		oldList
		p	2		offset
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
c	exs	net/minecraft/world/phys/shapes/VoxelShapes
	m	()Lexv;	a	empty
	m	(DD)I	a	findBits
		p	0		min
		p	2		max
	m	(DDDDDD)Lexv;	a	box
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(II)J	a	lcm
		p	0		a
		p	1		b
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lexo;	a	createIndexMerger
		p	0		size
		p	1		first
		p	2		second
		p	3		includeFirst
		p	4		includeSecond
	m	(Lewx;)Lexv;	a	create
		p	0		box
	m	(Lexg;Lexl;IILexl;IIIII)Z	a	lambda$joinIsNotEmpty$1
		p	7		z1
		p	8		z2
		p	9		index3
	m	(Lexo;Lexg;Lexl;ILexl;IIII)Z	a	lambda$joinIsNotEmpty$2
		p	6		y1
		p	7		y2
		p	8		index2
	m	(Lexo;Lexo;Lexg;Lexl;Lexl;III)Z	a	lambda$joinIsNotEmpty$3
		p	5		x1
		p	6		x2
		p	7		index1
	m	(Lexo;Lexo;Lexo;Lexl;Lexl;Lexg;)Z	a	joinIsNotEmpty
		p	0		mergedX
		p	1		mergedY
		p	2		mergedZ
		p	3		shape1
		p	4		shape2
		p	5		predicate
	m	(Lexv;Lexv;)Lexv;	a	or
		p	0		first
		p	1		second
	m	(Lexv;Lexv;Lexg;)Lexv;	a	join
		p	0		first
		p	1		second
		p	2		function
	m	(Lexv;Lexv;Lji;)Z	a	blockOccudes
		p	0		shape
		p	1		neighbor
		p	2		direction
	m	(Lexv;Lji;)Lexv;	a	getFaceShape
		p	0		shape
		p	1		direction
	m	(Lexv;[Lexv;)Lexv;	a	or
		p	0		first
		p	1		others
	m	(Lji$a;Lewx;Ljava/lang/Iterable;D)D	a	collide
		p	0		axis
		p	1		box
		p	2		shapes
		p	3		maxDist
	m	()Lexv;	b	block
	m	(DDDDDD)Lexv;	b	create
		p	0		minX
		p	2		minY
		p	4		minZ
		p	6		maxX
		p	8		maxY
		p	10		maxZ
	m	(Lexv;Lexv;)Z	b	faceShapeOccludes
		p	0		one
		p	1		two
	m	(Lexv;Lexv;Lexg;)Lexv;	b	joinUnoptimized
		p	0		one
		p	1		two
		p	2		function
	m	(Lexv;Lexv;Lji;)Z	b	mergedFaceOccludes
		p	0		one
		p	1		two
		p	2		direction
	m	()Lexj;	c	lambda$static$0
	m	(Lexv;Lexv;Lexg;)Z	c	joinIsNotEmpty
		p	0		shape1
		p	1		shape2
		p	2		predicate
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Lexv;	c	INFINITY
	f	Lexv;	d	BLOCK
	f	Lexv;	e	EMPTY
c	exs$a	net/minecraft/world/phys/shapes/VoxelShapes$a
	m	(DDDDDD)V	consume	consume
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
c	ext	net/minecraft/world/phys/shapes/VoxelShapeSlice
	m	(Lexv;Lji$a;I)V	<init>	<init>
		p	1		shape
		p	2		axis
		p	3		sliceWidth
	m	(Lexl;Lji$a;I)Lexl;	a	makeSlice
		p	0		voxelSet
		p	1		axis
		p	2		sliceWidth
	m	(Lji$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	f	Lexv;	b	delegate
	f	Lji$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
c	exu	net/minecraft/world/phys/shapes/VoxelShapeDiscreteSlice
	m	(Lexl;IIIIII)V	<init>	<init>
		p	1		parent
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lji$a;)I	a	firstFull
		p	1		axis
	m	(Lji$a;I)I	a	clampToShape
		p	1		axis
		p	2		value
	m	(III)Z	b	isFull
		p	1		x
		p	2		y
		p	3		z
	m	(Lji$a;)I	b	lastFull
		p	1		axis
	m	(III)V	c	fill
		p	1		x
		p	2		y
		p	3		z
	f	Lexl;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
c	exv	net/minecraft/world/phys/shapes/VoxelShape
	m	(Lexl;)V	<init>	<init>
		p	1		voxels
	m	()Lewx;	a	bounds
	m	(DDD)Lexv;	a	move
		p	1		x
		p	3		y
		p	5		z
	m	(DLji$a;I)Z	a	lambda$findIndex$4
	m	(Lexc;)Ljava/util/Optional;	a	closestPointTo
		p	1		target
	m	(Lexc;Lexc;Ljd;)Lewy;	a	clip
		p	1		start
		p	2		end
		p	3		pos
	m	(Lexc;[Lexc;DDDDDD)V	a	lambda$closestPointTo$5
		p	2		minX
		p	4		minY
		p	6		minZ
		p	8		maxX
		p	10		maxY
		p	12		maxZ
	m	(Lexs$a;)V	a	forAllEdges
		p	1		consumer
	m	(Lexs$a;IIIIII)V	a	lambda$forAllEdges$1
		p	2		minX
		p	3		minY
		p	4		minZ
		p	5		maxX
		p	6		maxY
		p	7		maxZ
	m	(Lexs$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
		p	4		minX
		p	5		minY
		p	6		minZ
		p	7		maxX
		p	8		maxY
		p	9		maxZ
	m	(Lja;Lewx;D)D	a	collideX
		p	1		axisCycle
		p	2		box
		p	3		maxDist
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
		p	1		x1
		p	3		y1
		p	5		z1
		p	7		x2
		p	9		y2
		p	11		z2
	m	(Lji$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
		p	1		axis
	m	(Lji$a;D)I	a	findIndex
		p	1		axis
		p	2		coord
	m	(Lji$a;DD)D	a	min
		p	1		axis
		p	2		from
		p	4		to
	m	(Lji$a;I)D	a	get
		p	1		axis
		p	2		index
	m	(Lji$a;Lewx;D)D	a	collide
		p	1		axis
		p	2		box
		p	3		maxDist
	m	(Lji;)Lexv;	a	getFaceShape
		p	1		facing
	m	([Lexv;DDDDDD)V	a	lambda$optimize$0
		p	1		minX
		p	3		minY
		p	5		minZ
		p	7		maxX
		p	9		maxY
		p	11		maxZ
	m	()Lexv;	b	singleEncompassing
	m	(Lexs$a;)V	b	forAllBoxes
		p	1		consumer
	m	(Lji$a;)D	b	min
		p	1		axis
	m	(Lji$a;DD)D	b	max
		p	1		axis
		p	2		from
		p	4		to
	m	(Lji;)Lexv;	b	calculateFace
		p	1		direction
	m	()Z	c	isEmpty
	m	(Lji$a;)D	c	max
		p	1		axis
	m	()Lexv;	d	optimize
	m	()Ljava/util/List;	e	toAabbs
	f	Lexl;	a	shape
	f	[Lexv;	b	faces
c	exx	net/minecraft/world/scores/DisplaySlot
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
		p	3		id
		p	4		name
	m	()I	a	id
	m	(Ln;)Lexx;	a	teamColorToSlot
		p	0		formatting
	m	()[Lexx;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Lexx;	a	LIST
	f	Lexx;	b	SIDEBAR
	f	Lexx;	c	BELOW_NAME
	f	Lexx;	d	TEAM_BLACK
	f	Lexx;	e	TEAM_DARK_BLUE
	f	Lexx;	f	TEAM_DARK_GREEN
	f	Lexx;	g	TEAM_DARK_AQUA
	f	Lexx;	h	TEAM_DARK_RED
	f	Lexx;	i	TEAM_DARK_PURPLE
	f	Lexx;	j	TEAM_GOLD
	f	Lexx;	k	TEAM_GRAY
	f	Lexx;	l	TEAM_DARK_GRAY
	f	Lexx;	m	TEAM_BLUE
	f	Lexx;	n	TEAM_GREEN
	f	Lexx;	o	TEAM_AQUA
	f	Lexx;	p	TEAM_RED
	f	Lexx;	q	TEAM_LIGHT_PURPLE
	f	Lexx;	r	TEAM_YELLOW
	f	Lexx;	s	TEAM_WHITE
	f	Lazk$a;	t	CODEC
	f	Ljava/util/function/IntFunction;	u	BY_ID
	f	I	v	id
	f	Ljava/lang/String;	w	name
	f	[Lexx;	x	$VALUES
c	exx$1	net/minecraft/world/scores/DisplaySlot$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
c	exy	net/minecraft/world/scores/ScoreboardObjective
	m	(Leyg;Ljava/lang/String;Leyj;Lwz;Leyj$a;ZLyp;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
		p	3		criterion
		p	4		displayName
		p	5		renderType
		p	6		displayAutoUpdate
		p	7		numberFormat
	m	()Leyg;	a	getScoreboard
	m	(Leyj$a;)V	a	setRenderType
		p	1		renderType
	m	(Lwz;)V	a	setDisplayName
		p	1		name
	m	(Lxw;)Lxw;	a	lambda$createFormattedDisplayName$0
		p	1		style
	m	(Lyp;)Lyp;	a	numberFormatOrDefault
		p	1		format
	m	(Z)V	a	setDisplayAutoUpdate
		p	1		displayAutoUpdate
	m	()Ljava/lang/String;	b	getName
	m	(Lyp;)V	b	setNumberFormat
		p	1		numberFormat
	m	()Leyj;	c	getCriteria
	m	()Lwz;	d	getDisplayName
	m	()Z	e	displayAutoUpdate
	m	()Lyp;	f	numberFormat
	m	()Lwz;	g	getFormattedDisplayName
	m	()Leyj$a;	h	getRenderType
	m	()Lwz;	i	createFormattedDisplayName
	f	Leyg;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Leyj;	c	criteria
	f	Lwz;	d	displayName
	f	Lwz;	e	formattedDisplayName
	f	Leyj$a;	f	renderType
	f	Z	g	displayAutoUpdate
	f	Lyp;	h	numberFormat
c	exz	net/minecraft/world/scores/PlayerScoreEntry
	m	()Z	a	isHidden
	m	(Lyp;)Lxn;	a	formatValue
		p	1		format
	m	()Lwz;	b	ownerName
	m	()Ljava/lang/String;	c	owner
	m	()I	d	value
	m	()Lwz;	e	display
	m	()Lyp;	f	numberFormatOverride
	f	Ljava/lang/String;	a	owner
	f	I	b	value
	f	Lwz;	c	display
	f	Lyp;	d	numberFormatOverride
c	eya	net/minecraft/world/scores/PlayerScores
	m	()Z	a	hasScores
	m	(Lexy;)Leyd;	a	get
		p	1		objective
	m	(Lexy;Leyd;)V	a	setScore
		p	1		objective
		p	2		score
	m	(Lexy;Ljava/util/function/Consumer;)Leyd;	a	getOrCreate
		p	1		objective
		p	2		scoreConsumer
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lexy;Leyd;)V	a	lambda$listScores$1
		p	1		objective
		p	2		score
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Leyd;	a	lambda$getOrCreate$0
		p	1		objective2
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	listScores
	m	(Lexy;)Z	b	remove
		p	1		objective
	m	()Ljava/util/Map;	c	listRawScores
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectOpenHashMap;	a	scores
c	eyb	net/minecraft/world/scores/ScoreboardTeam
	m	(Leyg;Ljava/lang/String;)V	<init>	<init>
		p	1		scoreboard
		p	2		name
	m	()Leyg;	a	getScoreboard
	m	(I)V	a	unpackOptions
		p	1		flags
	m	(Leyi$a;)V	a	setCollisionRule
		p	1		collisionRule
	m	(Leyi$b;)V	a	setNameTagVisibility
		p	1		nameTagVisibilityRule
	m	(Leyi;Lwz;)Lxn;	a	formatNameForTeam
		p	0		team
		p	1		name
	m	(Ln;)V	a	setColor
		p	1		color
	m	(Lwz;)V	a	setDisplayName
		p	1		displayName
	m	(Z)V	a	setAllowFriendlyFire
		p	1		friendlyFire
	m	()Ljava/lang/String;	b	getName
	m	(Leyi$b;)V	b	setDeathMessageVisibility
		p	1		deathMessageVisibilityRule
	m	(Lwz;)V	b	setPlayerPrefix
		p	1		prefix
	m	(Z)V	b	setSeeFriendlyInvisibles
		p	1		showFriendlyInvisible
	m	()Lwz;	c	getDisplayName
	m	(Lwz;)V	c	setPlayerSuffix
		p	1		suffix
	m	()Lxn;	d	getFormattedDisplayName
	m	(Lwz;)Lxn;	d	getFormattedName
		p	1		name
	m	()Lwz;	e	getPlayerPrefix
	m	()Lwz;	f	getPlayerSuffix
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leyi$b;	j	getNameTagVisibility
	m	()Leyi$b;	k	getDeathMessageVisibility
	m	()Leyi$a;	l	getCollisionRule
	m	()I	m	packOptions
	m	()Ln;	n	getColor
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Leyg;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Lwz;	f	displayName
	f	Lwz;	g	playerPrefix
	f	Lwz;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Leyi$b;	k	nameTagVisibility
	f	Leyi$b;	l	deathMessageVisibility
	f	Ln;	m	color
	f	Leyi$a;	n	collisionRule
	f	Lxw;	o	displayNameStyle
c	eyc	net/minecraft/world/scores/ReadOnlyScoreInfo
	m	()I	a	value
	m	(Leyc;Lyp;)Lxn;	a	safeFormatValue
		p	0		score
		p	1		fallbackFormat
	m	(Lyp;)Lxn;	a	formatValue
		p	1		fallbackFormat
	m	()Z	b	isLocked
	m	()Lyp;	c	numberFormat
c	eyd	net/minecraft/world/scores/ScoreboardScore
	m	()I	a	value
	m	(I)V	a	value
		p	1		score
	m	(Leyd;Lyp;)V	a	lambda$read$1
		p	1		format
	m	(Ljo$a;)Lub;	a	write
		p	1		registries
	m	(Lub;Ljo$a;)Leyd;	a	read
		p	0		nbt
		p	1		registries
	m	(Lub;Luy;)V	a	lambda$write$0
		p	1		formatElement
	m	(Lwz;)V	a	display
		p	1		text
	m	(Z)V	a	setLocked
		p	1		locked
	m	()Z	b	isLocked
	m	(Lyp;)V	b	numberFormat
		p	1		numberFormat
	m	()Lyp;	c	numberFormat
	m	()Lwz;	d	display
	f	Ljava/lang/String;	a	TAG_SCORE
	f	Ljava/lang/String;	b	TAG_LOCKED
	f	Ljava/lang/String;	c	TAG_DISPLAY
	f	Ljava/lang/String;	d	TAG_FORMAT
	f	I	e	value
	f	Z	f	locked
	f	Lwz;	g	display
	f	Lyp;	h	numberFormat
c	eye	net/minecraft/world/scores/ScoreAccess
	m	()I	a	get
	m	(I)V	a	set
		p	1		score
	m	(Lwz;)V	a	display
		p	1		text
	m	(Lyp;)V	a	numberFormatOverride
		p	1		numberFormat
	m	()I	b	increment
	m	(I)I	b	add
		p	1		amount
	m	()V	c	reset
	m	()Z	d	locked
	m	()V	e	unlock
	m	()V	f	lock
	m	()Lwz;	g	display
c	eyf	net/minecraft/world/scores/ScoreHolder
	m	()Lwz;	S_	getDisplayName
	m	(Lcom/mojang/authlib/GameProfile;)Leyf;	a	fromGameProfile
		p	0		gameProfile
	m	(Lxw;)Lxw;	a	lambda$getFeedbackDisplayName$0
		p	1		style
	m	(Ljava/lang/String;)Leyf;	c	forNameOnly
		p	0		name
	m	()Ljava/lang/String;	cB	getScoreboardName
	m	()Lwz;	gY	getFeedbackDisplayName
	f	Ljava/lang/String;	a_	WILDCARD_NAME
	f	Leyf;	cC	WILDCARD
c	eyf$1	net/minecraft/world/scores/ScoreHolder$1
	m	()Ljava/lang/String;	cB	getScoreboardName
c	eyf$2	net/minecraft/world/scores/ScoreHolder$2
	m	()Ljava/lang/String;	cB	getScoreboardName
	m	()Lwz;	gY	getFeedbackDisplayName
	f	Ljava/lang/String;	b	val$name
	f	Lwz;	c	val$feedbackName
c	eyf$3	net/minecraft/world/scores/ScoreHolder$3
	m	()Ljava/lang/String;	cB	getScoreboardName
	f	Ljava/lang/String;	b	val$name
c	eyg	net/minecraft/world/scores/Scoreboard
	m	(Lbsr;)V	a	entityRemoved
		p	1		entity
	m	(Lexx;)Lexy;	a	getDisplayObjective
		p	1		slot
	m	(Lexx;Lexy;)V	a	setDisplayObjective
		p	1		slot
		p	2		objective
	m	(Lexy;)V	a	onObjectiveAdded
		p	1		objective
	m	(Lexy;Ljava/util/List;Ljava/lang/String;Leya;)V	a	lambda$listPlayerScores$4
		p	2		scoreHolderName
		p	3		scores
	m	(Leyb;)V	a	onTeamAdded
		p	1		team
	m	(Leyf;)V	a	onPlayerRemoved
		p	1		scoreHolder
	m	(Leyf;Lexy;)V	a	onScoreLockChanged
		p	1		scoreHolder
		p	2		objective
	m	(Leyf;Lexy;Leyd;)V	a	onScoreChanged
		p	1		scoreHolder
		p	2		objective
		p	3		score
	m	(Leyf;Lexy;Z)Leye;	a	getOrCreatePlayerScore
		p	1		scoreHolder
		p	2		objective
		p	3		forceWritable
	m	(Leyj;Leyf;Ljava/util/function/Consumer;)V	a	forAllObjectives
		p	1		criterion
		p	2		scoreHolder
		p	3		action
	m	(Ljava/lang/Object;)Ljava/util/List;	a	lambda$addObjective$0
		p	0		criterion2
	m	(Ljava/lang/String;)Lexy;	a	getObjective
		p	1		name
	m	(Ljava/lang/String;Leyb;)Z	a	addPlayerToTeam
		p	1		scoreHolderName
		p	2		team
	m	(Ljava/lang/String;Leyj;Lwz;Leyj$a;ZLyp;)Lexy;	a	addObjective
		p	1		name
		p	2		criterion
		p	3		displayName
		p	4		renderType
		p	5		displayAutoUpdate
		p	6		numberFormat
	m	(Ljava/util/function/Consumer;Leyf;Lexy;)V	a	lambda$forAllObjectives$1
		p	3		objective
	m	(Ljo$a;)Luh;	a	savePlayerScores
		p	1		registries
	m	(Ljo$a;Ljava/lang/String;Luh;Lexy;Leyd;)V	a	lambda$savePlayerScores$5
		p	3		objective
		p	4		score
	m	(Ljo$a;Luh;Ljava/lang/String;Leya;)V	a	lambda$savePlayerScores$6
		p	2		name
		p	3		scores
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Leyd;)V	a	lambda$getOrCreatePlayerScore$3
		p	1		score
	m	(Luh;Ljo$a;)V	a	loadPlayerScores
		p	1		list
		p	2		registries
	m	(Lexy;)V	b	onObjectiveChanged
		p	1		objective
	m	(Leyb;)V	b	onTeamChanged
		p	1		team
	m	(Leyf;)V	b	resetAllPlayerScores
		p	1		scoreHolder
	m	(Leyf;Lexy;)V	b	onPlayerScoreRemoved
		p	1		scoreHolder
		p	2		objective
	m	(Ljava/lang/String;)Leyb;	b	getPlayerTeam
		p	1		name
	m	(Ljava/lang/String;Leyb;)V	b	removePlayerFromTeam
		p	1		scoreHolderName
		p	2		team
	m	()Ljava/util/Collection;	c	getObjectives
	m	(Lexy;)V	c	onObjectiveRemoved
		p	1		objective
	m	(Leyb;)V	c	onTeamRemoved
		p	1		team
	m	(Leyf;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	listPlayerScores
		p	1		scoreHolder
	m	(Leyf;Lexy;)Leye;	c	getOrCreatePlayerScore
		p	1		scoreHolder
		p	2		objective
	m	(Ljava/lang/String;)Leyb;	c	addPlayerTeam
		p	1		name
	m	()Ljava/util/Collection;	d	getObjectiveNames
	m	(Leyb;)V	d	removePlayerTeam
		p	1		team
	m	(Leyf;Lexy;)Leyc;	d	getPlayerScoreInfo
		p	1		scoreHolder
		p	2		objective
	m	(Ljava/lang/String;)Z	d	removePlayerFromTeam
		p	1		scoreHolderName
	m	()Ljava/util/Collection;	e	getTrackedPlayers
	m	(Leyf;Lexy;)V	e	resetSinglePlayerScore
		p	1		scoreHolder
		p	2		objective
	m	(Ljava/lang/String;)Leyb;	e	getPlayersTeam
		p	1		scoreHolderName
	m	()Ljava/util/Collection;	f	getTeamNames
	m	(Ljava/lang/String;)Leya;	f	getOrCreatePlayerInfo
		p	1		scoreHolderName
	m	()Ljava/util/Collection;	g	getPlayerTeams
	m	(Ljava/lang/String;)Leya;	g	lambda$getOrCreatePlayerInfo$2
		p	0		name
	m	(Lexy;)Ljava/util/Collection;	i	listPlayerScores
		p	1		objective
	m	(Lexy;)V	j	removeObjective
		p	1		objective
	f	Ljava/lang/String;	a	HIDDEN_SCORE_PREFIX
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	c	objectivesByName
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	d	objectivesByCriteria
	f	Ljava/util/Map;	e	playerScores
	f	Ljava/util/Map;	f	displayObjectives
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	g	teamsByName
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	h	teamsByPlayer
c	eyg$1	net/minecraft/world/scores/Scoreboard$1
	m	()I	a	get
	m	(I)V	a	set
		p	1		score
	m	(Lwz;)V	a	display
		p	1		text
	m	(Lyp;)V	a	numberFormatOverride
		p	1		numberFormat
	m	(Z)V	a	setLocked
		p	1		locked
	m	()Z	d	locked
	m	()V	e	unlock
	m	()V	f	lock
	m	()Lwz;	g	display
	m	()V	h	sendScoreToPlayers
	f	Leyd;	a	val$score
	f	Z	b	val$canModify
	f	Lorg/apache/commons/lang3/mutable/MutableBoolean;	c	val$requiresSync
	f	Lexy;	d	val$objective
	f	Leyf;	e	val$scoreHolder
	f	Leyg;	f	this$0
c	eyh	net/minecraft/world/scores/PersistentScoreboard
	m	(Leyg;)V	<init>	<init>
		p	1		scoreboard
	m	(Leyb;Luh;)V	a	loadTeamPlayers
		p	1		team
		p	2		nbt
	m	(Ljava/lang/String;)Leyj;	a	lambda$loadObjectives$0
	m	(Ljo$a;)Luh;	a	saveTeams
		p	1		registries
	m	(Lub;)V	a	loadDisplaySlots
		p	1		nbt
	m	(Lub;Ljo$a;)Lub;	a	save
		p	1		nbt
		p	2		registryLookup
	m	(Lub;Luy;)V	a	lambda$saveObjectives$1
	m	(Luh;Ljo$a;)V	a	loadTeams
		p	1		nbt
		p	2		registries
	m	(Ljo$a;)Luh;	b	saveObjectives
		p	1		registries
	m	(Lub;)V	b	saveDisplaySlots
		p	1		nbt
	m	(Lub;Ljo$a;)Leyh;	b	load
		p	1		nbt
		p	2		registries
	m	(Luh;Ljo$a;)V	b	loadObjectives
		p	1		nbt
		p	2		registries
	f	Ljava/lang/String;	a	FILE_ID
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leyg;	c	scoreboard
c	eyi	net/minecraft/world/scores/ScoreboardTeamBase
	m	(Leyi;)Z	a	isAlliedTo
		p	1		team
	m	()Ljava/lang/String;	b	getName
	m	(Lwz;)Lxn;	d	getFormattedName
		p	1		name
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Z	h	isAllowFriendlyFire
	m	()Z	i	canSeeFriendlyInvisibles
	m	()Leyi$b;	j	getNameTagVisibility
	m	()Leyi$b;	k	getDeathMessageVisibility
	m	()Leyi$a;	l	getCollisionRule
	m	()Ln;	n	getColor
c	eyi$a	net/minecraft/world/scores/ScoreboardTeamBase$EnumTeamPush
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()Lwz;	a	getDisplayName
	m	(Leyi$a;)Leyi$a;	a	lambda$static$1
	m	(Ljava/lang/String;)Leyi$a;	a	byName
		p	0		name
	m	()[Leyi$a;	b	$values
	m	(Leyi$a;)Ljava/lang/String;	b	lambda$static$0
		p	0		collisionRule
	f	Leyi$a;	a	ALWAYS
	f	Leyi$a;	b	NEVER
	f	Leyi$a;	c	PUSH_OTHER_TEAMS
	f	Leyi$a;	d	PUSH_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leyi$a;	h	$VALUES
c	eyi$b	net/minecraft/world/scores/ScoreboardTeamBase$EnumNameTagVisibility
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
		p	3		name
		p	4		value
	m	()[Ljava/lang/String;	a	getAllNames
	m	(Leyi$b;)Leyi$b;	a	lambda$static$1
	m	(Ljava/lang/String;)Leyi$b;	a	byName
		p	0		name
	m	()Lwz;	b	getDisplayName
	m	(Leyi$b;)Ljava/lang/String;	b	lambda$static$0
		p	0		visibilityRule
	m	()[Leyi$b;	c	$values
	f	Leyi$b;	a	ALWAYS
	f	Leyi$b;	b	NEVER
	f	Leyi$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Leyi$b;	d	HIDE_FOR_OWN_TEAM
	f	Ljava/lang/String;	e	name
	f	I	f	id
	f	Ljava/util/Map;	g	BY_NAME
	f	[Leyi$b;	h	$VALUES
c	eyj	net/minecraft/world/scores/criteria/IScoreboardCriteria
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		name
	m	(Ljava/lang/String;ZLeyj$a;)V	<init>	<init>
		p	1		name
		p	2		readOnly
		p	3		defaultRenderType
	m	(Lavy;Lakr;)Ljava/util/Optional;	a	getStat
		p	0		statType
		p	1		id
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
		p	0		name
	m	(Ljava/lang/String;ILavy;)Ljava/util/Optional;	a	lambda$byName$0
		p	2		type
	m	(Ljava/lang/String;ZLeyj$a;)Leyj;	a	registerCustom
		p	0		name
		p	1		readOnly
		p	2		defaultRenderType
	m	(Ljava/lang/String;)Leyj;	b	registerCustom
		p	0		name
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Leyj$a;	f	getDefaultRenderType
	f	Ljava/util/Map;	a	CUSTOM_CRITERIA
	f	Leyj;	b	DUMMY
	f	Leyj;	c	TRIGGER
	f	Leyj;	d	DEATH_COUNT
	f	Leyj;	e	KILL_COUNT_PLAYERS
	f	Leyj;	f	KILL_COUNT_ALL
	f	Leyj;	g	HEALTH
	f	Leyj;	h	FOOD
	f	Leyj;	i	AIR
	f	Leyj;	j	ARMOR
	f	Leyj;	k	EXPERIENCE
	f	Leyj;	l	LEVEL
	f	[Leyj;	m	TEAM_KILL
	f	[Leyj;	n	KILLED_BY_TEAM
	f	Ljava/util/Map;	o	CRITERIA_CACHE
	f	Ljava/lang/String;	p	name
	f	Z	q	readOnly
	f	Leyj$a;	r	renderType
c	eyj$a	net/minecraft/world/scores/criteria/IScoreboardCriteria$EnumScoreboardHealthDisplay
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
		p	3		name
	m	()Ljava/lang/String;	a	getId
	m	(Ljava/lang/String;)Leyj$a;	a	byId
		p	0		name
	m	()[Leyj$a;	b	$values
	m	()Ljava/lang/String;	c	getSerializedName
	f	Leyj$a;	a	INTEGER
	f	Leyj$a;	b	HEARTS
	f	Lazk$a;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Leyj$a;	e	$VALUES
c	eym	net/minecraft/world/ticks/TickListEmpty
	m	()Leyw;	a	emptyContainer
	m	()Leyp;	b	emptyLevelList
	f	Leyw;	a	CONTAINER_BLACKHOLE
	f	Leyp;	b	LEVEL_BLACKHOLE
c	eym$1	net/minecraft/world/ticks/TickListEmpty$1
	m	()I	a	count
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	eym$2	net/minecraft/world/ticks/TickListEmpty$2
	m	()I	a	count
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Ljd;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eyn	net/minecraft/world/ticks/ContainerSingleItem
	m	()V	a	clearContent
	m	(I)Lcuq;	a	getItem
		p	1		slot
	m	(II)Lcuq;	a	removeItem
		p	1		slot
		p	2		amount
	m	(ILcuq;)V	a	setItem
		p	1		slot
		p	2		stack
	m	()I	b	getContainerSize
	m	(I)Lcuq;	b	removeItemNoUpdate
		p	1		slot
	m	(Lcuq;)V	b	setTheItem
		p	1		stack
	m	()Z	c	isEmpty
	m	(I)Lcuq;	c	splitTheItem
		p	1		count
	m	()Lcuq;	f	getTheItem
	m	()Lcuq;	h	removeTheItem
c	eyn$a	net/minecraft/world/ticks/ContainerSingleItem$a
	m	(Lcmx;)Z	a	stillValid
		p	1		player
	m	()Ldqh;	v	getContainerBlockEntity
c	eyo	net/minecraft/world/ticks/LevelChunkTicks
	m	(Ljava/util/List;)V	<init>	<init>
		p	1		ticks
	m	()I	a	count
	m	(J)V	a	unpack
		p	1		time
	m	(JLjava/util/function/Function;)Luh;	a	save
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
		p	1		tickConsumer
	m	(Ljava/util/function/Predicate;)V	a	removeIf
		p	1		predicate
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Luh;Ljava/util/function/Function;Ldcd;)Leyo;	a	load
		p	0		tickQueue
		p	1		nameToTypeFunction
		p	2		pos
	m	()Leyt;	b	peek
	m	(JLjava/util/function/Function;)Luy;	b	save
		p	1		time
		p	3		typeToNameFunction
	m	(Leyt;)V	b	scheduleUnchecked
		p	1		orderedTick
	m	()Leyt;	c	poll
	m	()Ljava/util/stream/Stream;	d	getAll
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
c	eyp	net/minecraft/world/ticks/LevelTickAccess
	m	(Ljd;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
c	eyq	net/minecraft/world/ticks/TickListServer
	m	(Ljava/util/function/LongPredicate;Ljava/util/function/Supplier;)V	<init>	<init>
		p	1		tickingFutureReadyPredicate
		p	2		profilerGetter
	m	()I	a	count
	m	(I)Z	a	canScheduleMoreTicks
		p	1		maxTicks
	m	(J)V	a	sortContainersToTick
		p	1		time
	m	(JI)V	a	drainContainers
		p	1		time
		p	3		maxTicks
	m	(JILbnf;)V	a	collectTicks
		p	1		time
		p	3		maxTicks
		p	4		profiler
	m	(JILjava/util/function/BiConsumer;)V	a	tick
		p	1		time
		p	3		maxTicks
		p	4		ticker
	m	(Ldcd;)V	a	removeContainer
		p	1		pos
	m	(Ldcd;Leyo;)V	a	addContainer
		p	1		pos
		p	2		scheduler
	m	(Lejj;)V	a	clearArea
		p	1		box
	m	(Lejj;Leyq$a;)V	a	forContainersInArea
		p	1		box
		p	2		visitor
	m	(Lejj;Leyt;)Z	a	lambda$copyAreaFrom$5
		p	1		tick
	m	(Lejj;Lkh;)V	a	copyArea
		p	1		box
		p	2		offset
	m	(Leyo;Leyo;)I	a	lambda$static$0
		p	0		a
		p	1		b
	m	(Leyo;Leyt;)V	a	lambda$new$2
		p	1		chunkTickScheduler
		p	2		tick
	m	(Leyq;Lejj;Lkh;)V	a	copyAreaFrom
		p	1		scheduler
		p	2		box
		p	3		offset
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
		p	0		map
	m	(Ljava/util/Queue;Leyo;JI)V	a	drainFromCurrentContainer
		p	1		tickableChunkTickSchedulers
		p	2		chunkTickScheduler
		p	3		tick
		p	5		maxTicks
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
		p	1		ticker
	m	(Ljava/util/function/Predicate;JLeyo;)V	a	lambda$clearArea$4
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLeyo;)V	a	lambda$copyAreaFrom$6
		p	2		chunkPos
		p	4		chunkTickScheduler
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Lkh;JJLeyt;)V	a	lambda$copyAreaFrom$7
		p	6		tick
	m	()V	b	rescheduleLeftoverContainers
	m	(Lejj;Leyt;)Z	b	lambda$clearArea$3
		p	1		tick
	m	(Leyt;)V	b	updateContainerScheduling
		p	1		tick
	m	(Ljd;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	m	()V	c	cleanupAfterTick
	m	(Leyt;)V	c	scheduleForThisTick
		p	1		tick
	m	()V	d	calculateTickSetIfNeeded
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Ljava/util/function/Supplier;	c	profiler
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	e	nextTickForContainer
	f	Ljava/util/Queue;	f	containersToTick
	f	Ljava/util/Queue;	g	toRunThisTick
	f	Ljava/util/List;	h	alreadyRunThisTick
	f	Ljava/util/Set;	i	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	j	chunkScheduleUpdater
c	eyq$a	net/minecraft/world/ticks/TickListServer$a
	m	(JLeyo;)V	accept	accept
		p	1		chunkPos
		p	3		chunkTickScheduler
c	eyr	net/minecraft/world/ticks/ProtoChunkTickList
	m	()I	a	count
	m	(Leys;)V	a	schedule
		p	1		tick
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Luh;Ljava/util/function/Function;Ldcd;)Leyr;	a	load
		p	0		tickList
		p	1		typeToNameFunction
		p	2		pos
	m	()Ljava/util/List;	b	scheduledTicks
	m	(JLjava/util/function/Function;)Luy;	b	save
		p	1		time
		p	3		typeToNameFunction
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
c	eys	net/minecraft/world/ticks/TickListChunk
	m	()Ljava/lang/Object;	a	type
	m	(JJ)Leyt;	a	unpack
		p	1		time
		p	3		subTickOrder
	m	(JLjava/util/function/Consumer;Leys;)V	a	lambda$loadTickList$0
		p	3		tick
	m	(Leyt;Ljava/util/function/Function;J)Lub;	a	saveTick
		p	0		orderedTick
		p	1		typeToNameFunction
		p	2		delay
	m	(Ljava/lang/Object;Ljd;)Leys;	a	probe
		p	0		type
		p	1		pos
	m	(Ljava/lang/String;Ljd;ILeyx;)Lub;	a	saveTick
		p	0		type
		p	1		pos
		p	2		delay
		p	3		priority
	m	(Ljava/util/function/Function;)Lub;	a	save
		p	1		typeToNameFunction
	m	(Lub;Ljava/lang/Object;)Leys;	a	lambda$loadTick$1
		p	1		type
	m	(Lub;Ljava/util/function/Function;)Ljava/util/Optional;	a	loadTick
		p	0		nbt
		p	1		nameToType
	m	(Luh;Ljava/util/function/Function;Ldcd;Ljava/util/function/Consumer;)V	a	loadTickList
		p	0		tickList
		p	1		nameToTypeFunction
		p	2		pos
		p	3		tickConsumer
	m	()Ljd;	b	pos
	m	()I	c	delay
	m	()Leyx;	d	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	b	type
	f	Ljd;	c	pos
	f	I	d	delay
	f	Leyx;	e	priority
	f	Ljava/lang/String;	f	TAG_ID
	f	Ljava/lang/String;	g	TAG_X
	f	Ljava/lang/String;	h	TAG_Y
	f	Ljava/lang/String;	i	TAG_Z
	f	Ljava/lang/String;	j	TAG_DELAY
	f	Ljava/lang/String;	k	TAG_PRIORITY
c	eys$1	net/minecraft/world/ticks/TickListChunk$1
	m	(Leys;)I	a	hashCode
	m	(Leys;Leys;)Z	a	equals
c	eyt	net/minecraft/world/ticks/NextTickListEntry
	m	(Ljava/lang/Object;Ljd;JJ)V	<init>	<init>
		p	1		type
		p	2		pos
		p	3		triggerTick
		p	5		subTickOrder
	m	()Ljava/lang/Object;	a	type
	m	(Leyt;Leyt;)I	a	lambda$static$1
		p	0		first
		p	1		second
	m	(Ljava/lang/Object;Ljd;)Leyt;	a	probe
		p	0		type
		p	1		pos
	m	()Ljd;	b	pos
	m	(Leyt;Leyt;)I	b	lambda$static$0
		p	0		first
		p	1		second
	m	()J	c	triggerTick
	m	()Leyx;	d	priority
	m	()J	e	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	f	Ljava/lang/Object;	d	type
	f	Ljd;	e	pos
	f	J	f	triggerTick
	f	Leyx;	g	priority
	f	J	h	subTickOrder
c	eyt$1	net/minecraft/world/ticks/NextTickListEntry$1
	m	(Leyt;)I	a	hashCode
	m	(Leyt;Leyt;)Z	a	equals
c	eyu	net/minecraft/world/ticks/SerializableTickContainer
	m	(JLjava/util/function/Function;)Luy;	b	save
		p	1		time
		p	3		typeToNameFunction
c	eyv	net/minecraft/world/ticks/TickList
	m	()I	a	count
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
c	eyw	net/minecraft/world/ticks/TickContainerAccess
c	eyx	net/minecraft/world/ticks/TickListPriority
	m	(Ljava/lang/String;II)V	<init>	<init>
		p	3		index
	m	()I	a	getValue
	m	(I)Leyx;	a	byValue
		p	0		index
	m	()[Leyx;	b	$values
	f	Leyx;	a	EXTREMELY_HIGH
	f	Leyx;	b	VERY_HIGH
	f	Leyx;	c	HIGH
	f	Leyx;	d	NORMAL
	f	Leyx;	e	LOW
	f	Leyx;	f	VERY_LOW
	f	Leyx;	g	EXTREMELY_LOW
	f	I	h	value
	f	[Leyx;	i	$VALUES
c	eyy	net/minecraft/world/ticks/TickListWorldGen
	m	(Ljava/util/function/Function;)V	<init>	<init>
		p	1		mapper
	m	()I	a	count
	m	(Leyt;)V	a	schedule
		p	1		orderedTick
	m	(Ljd;Ljava/lang/Object;)Z	a	hasScheduledTick
		p	1		pos
		p	2		type
	m	(Ljd;Ljava/lang/Object;)Z	b	willTickThisTick
		p	1		pos
		p	2		type
	f	Ljava/util/function/Function;	a	containerGetter
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
		p	0		input
	m	(Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLae;Z)Llz;	a	createStandardGenerator
		p	0		output
		p	1		inputs
		p	2		includeClient
		p	3		includeServer
		p	4		includeDev
		p	5		includeReports
		p	6		validate
		p	7		gameVersion
		p	8		ignoreCache
	m	(Ljava/util/Collection;Lmc;)Lpf;	a	lambda$createStandardGenerator$4
		p	1		outputx
	m	(Ljava/util/concurrent/CompletableFuture;Lpz;Lmc;)Lqe;	a	lambda$createStandardGenerator$3
		p	2		outputx
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lma$a;	a	bindRegistries
		p	0		baseFactory
		p	1		registryLookupFuture
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Lmc;)Lma;	a	lambda$bindRegistries$1
		p	2		output
	m	(Lmc;)Lnm;	a	lambda$createStandardGenerator$6
		p	0		outputx
	m	(Ljava/util/Collection;Lmc;)Lph;	b	lambda$createStandardGenerator$2
		p	1		outputx
	m	(Lmc;)Lnm;	b	lambda$createStandardGenerator$5
		p	0		outputx
	m	([Ljava/lang/String;)V	main	main
		p	0		args
c	net/minecraft/server/Main	net/minecraft/server/Main
	m	()Z	a	lambda$main$2
	m	(Lalo$c;Lcom/mojang/serialization/Dynamic;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lapp;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$main$1
		p	6		applyExecutor
	m	(Lapo;Lcom/mojang/serialization/Dynamic;ZLatp;)Lalo$c;	a	loadOrCreateConfig
		p	0		serverPropertiesHandler
		p	1		dynamic
		p	2		safeMode
		p	3		dataPackManager
	m	(Lcom/mojang/serialization/Dynamic;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lapp;Ljoptsimple/OptionSpec;Lalo$a;)Lalo$b;	a	lambda$main$0
		p	5		context
	m	(Lerf$c;Latp;Lalp;Lapp;Lalm;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lapn;	a	lambda$main$3
		p	11		thread
	m	(Lerf$c;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lka;Z)V	a	forceUpgrade
		p	0		session
		p	1		dataFixer
		p	2		eraseCache
		p	3		continueCheck
		p	4		dynamicRegistryManager
		p	5		recreateRegionFiles
	m	(Ljava/nio/file/Path;)V	a	writePidFile
		p	0		path
	m	([Ljava/lang/String;)V	main	main
		p	0		args
	f	Lorg/slf4j/Logger;	a	LOGGER
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Lapn;	a	val$dedicatedServer
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	m	(Ljava/lang/Thread;Lerf$c;Latp;Lalp;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lalm;Lare;)V	<init>	<init>
		p	1		serverThread
		p	2		session
		p	3		dataPackManager
		p	4		saveLoader
		p	5		proxy
		p	6		dataFixer
		p	7		apiServices
		p	8		worldGenerationProgressListenerFactory
	m	()V	A	waitForTasks
	m	()Z	B	pollTask
	m	()Ljava/util/Optional;	C	getWorldScreenshotFile
	m	()Ljava/nio/file/Path;	D	getServerDirectory
	m	()Z	E	isPaused
	m	()V	F	onTickRateChanged
	m	()V	G	forceTimeSynchronization
	m	()Z	H	isShutdown
	m	()Laqu;	I	overworld
	m	()Ljava/util/Set;	J	levelKeys
	m	()Ljava/lang/Iterable;	K	getAllLevels
	m	()Ljava/lang/String;	L	getServerVersion
	m	()I	M	getPlayerCount
	m	()Z	M_	shouldInformAdmins
	m	()I	N	getMaxPlayers
	m	()[Ljava/lang/String;	O	getPlayerNames
	m	()Layn;	P	getModdedStatus
	m	()Ljava/security/KeyPair;	Q	getKeyPair
	m	()I	R	getPort
	m	()Lcom/mojang/authlib/GameProfile;	S	getSingleplayerProfile
	m	()Z	T	isSingleplayer
	m	()V	U	initializeKeyPair
	m	()Z	V	isSpawningMonsters
	m	()Z	W	isDemo
	m	()Ljava/util/Optional;	X	getServerResourcePack
	m	()Z	Y	isResourcePackRequired
	m	()Z	Z	usesAuthentication
	m	(I)V	a	setPort
		p	1		serverPort
	m	(J)V	a	logTickMethodTime
		p	1		tickStartTime
	m	(Lac;)Lac;	a	fillServerSystemReport
		p	1		details
	m	(Lakq;)Laqu;	a	getLevel
		p	1		key
	m	(Laln;)Z	a	shouldRun
	m	(Laqu;)I	a	getSpawnRadius
		p	1		world
	m	(Laqu;Laqs;Lerk;Ljm$c;)V	a	lambda$setInitialSpawn$5
		p	3		feature
	m	(Laqu;Lerk;ZZ)V	a	setInitialSpawn
		p	0		world
		p	1		worldProperties
		p	2		bonusChest
		p	3		debugWorld
	m	(Laqu;Ljd;Lcmx;)Z	a	isUnderSpawnProtection
		p	1		world
		p	2		pos
		p	3		player
	m	(Laqv;)Larz;	a	createTextFilterForPlayer
		p	1		player
	m	(Laqv;Lbls;)V	a	subscribeToDebugSample
		p	1		player
		p	2		type
	m	(Lard;)V	a	createLevels
		p	1		worldGenerationProgressListener
	m	(Latp;Lcpl;)V	a	enableForcedFeaturePacks
		p	0		resourcePackManager
		p	1		enabledFeatures
	m	(Latp;Lddr;ZZ)Lddr;	a	configurePackRepository
		p	0		resourcePackManager
		p	1		dataConfiguration
		p	2		initMode
		p	3		safeMode
	m	(Latp;Ljava/util/Collection;Lcpl;Z)Lddr;	a	configureRepositoryWithSelection
		p	0		resourcePackManager
		p	1		enabledProfiles
		p	2		enabledFeatures
		p	3		allowEnabling
	m	(Latp;Z)Ldck;	a	getSelectedPacks
		p	0		dataPackManager
		p	1		allowEnabling
	m	(Latu;Lalc;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$27
		p	1		dataPackContents
	m	(Latu;Lalc;Ljava/lang/Throwable;)V	a	lambda$reloadResources$26
		p	1		dataPackContents
		p	2		throwable
	m	(Laur;)V	a	setPlayerList
		p	1		playerManager
	m	(Layp$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$31
		p	0		module
	m	(Lbne;)V	a	lambda$new$0
		p	1		profileResult
	m	(Lbqo;Z)V	a	setDifficulty
		p	1		difficulty
		p	2		forceUpdate
	m	(Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$28
		p	1		resourcePacks
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
		p	1		profile
	m	(Ldct;)V	a	setDefaultGameType
		p	1		gameMode
	m	(Ldct;ZI)Z	a	publishServer
		p	1		gameMode
		p	2		cheatsAllowed
		p	3		port
	m	(Ldcw;)Z	a	isLevelEnabled
		p	1		world
	m	(Ldws;)Ljava/lang/String;	a	lambda$storeChunkIoError$35
	m	(Ldws;Lo;Ldcd;)V	a	lambda$storeChunkIoError$36
	m	(Leqz;)V	a	readScoreboard
		p	1		persistentStateManager
	m	(Lerd;)Ljava/nio/file/Path;	a	getWorldPath
		p	1		worldSavePath
	m	(Lerl;)V	a	setupDebugLevel
		p	1		properties
	m	(Let;)V	a	kickUnlistedPlayers
		p	1		source
	m	(Ljava/lang/Runnable;)Laln;	a	wrapRunnable
	m	(Ljava/lang/RuntimeException;)V	a	setFatalException
		p	0		exception
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
		p	0		thread
		p	1		throwable
	m	(Ljava/lang/Throwable;)Lo;	a	constructOrExtractCrashReport
		p	0		throwable
	m	(Ljava/lang/Throwable;Ldws;Ldcd;)V	a	reportChunkLoadFailure
		p	1		exception
		p	2		key
		p	3		chunkPos
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
		p	1		file
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
		p	1		dataPacks
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$30
		p	1		name
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$29
		p	2		resourceManagerHolder
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
		p	1		shouldKeepTicking
	m	(Ljava/util/function/Consumer;Lbne;)V	a	lambda$startRecordingMetrics$34
		p	2		result
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
		p	1		resultConsumer
		p	2		dumpConsumer
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
		p	0		serverFactory
	m	(Ljz;)Ljava/util/Optional;	a	lambda$setInitialSpawn$4
		p	0		featureRegistry
	m	(Lo;)V	a	onServerCrash
		p	1		report
	m	(Lo;Ldcd;Ldws;)V	a	storeChunkIoError
		p	1		report
		p	2		pos
		p	3		key
	m	(Lwz;)V	a	sendSystemMessage
		p	1		message
	m	(Lwz;Lwv$a;Ljava/lang/String;)V	a	logChatMessage
		p	1		message
		p	2		params
		p	3		prefix
	m	(Z)V	a	halt
		p	1		waitForShutdown
	m	(ZZZ)Z	a	saveAllChunks
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()I	aA	getCompressionThreshold
	m	()Z	aB	enforceSecureProfile
	m	()J	aC	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	aD	getFixerUpper
	m	()Lale;	aE	getAdvancements
	m	()Lalg;	aF	getFunctions
	m	()Latp;	aG	getPackRepository
	m	()Leu;	aH	getCommands
	m	()Let;	aI	createCommandSourceStack
	m	()Lczd;	aJ	getRecipeManager
	m	()Lalk;	aK	getScoreboard
	m	()Leqw;	aL	getCommandStorage
	m	()Ldcs;	aM	getGameRules
	m	()Lalt;	aN	getCustomBossEvents
	m	()Z	aO	isEnforceWhitelist
	m	()F	aP	getCurrentSmoothedTickTime
	m	()Lall;	aQ	tickRateManager
	m	()J	aR	getAverageTickTimeNanos
	m	()[J	aS	getTickTimesNanos
	m	()Lbnf;	aT	getProfiler
	m	()V	aU	endMetricsRecordingTick
	m	()Z	aV	isRecordingMetrics
	m	()V	aW	stopRecordingMetrics
	m	()V	aX	finishRecordingMetrics
	m	()V	aY	cancelRecordingMetrics
	m	()Z	aZ	forceSynchronousWrites
	m	(Ljava/lang/String;)V	a_	setLocalIp
		p	1		serverIp
	m	()Z	aa	getPreventProxyConnections
	m	()Z	ab	isSpawningAnimals
	m	()Z	ac	areNpcsEnabled
	m	()Z	ad	isPvpAllowed
	m	()Z	ae	isFlightAllowed
	m	()Ljava/lang/String;	af	getMotd
	m	()Z	ag	isStopped
	m	()Laur;	ah	getPlayerList
	m	()Lart;	ai	getConnection
	m	()Z	aj	isReady
	m	()Z	ak	hasGui
	m	()I	al	getTickCount
	m	()I	am	getSpawnProtectionRadius
	m	()Z	an	repliesToStatus
	m	()Z	ao	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ap	getProxy
	m	()I	aq	getPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	ar	getSessionService
	m	()Lazb;	as	getProfileKeySignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	at	getProfileRepository
	m	()Laun;	au	getProfileCache
	m	()Lajq;	av	getStatus
	m	()V	aw	invalidateStatus
	m	()I	ax	getAbsoluteMaxWorldSize
	m	()Z	ay	scheduleExecutables
	m	()Ljava/lang/Thread;	az	getRunningThread
	m	(I)I	b	getScaledTrackingDistance
		p	1		initialDistance
	m	(Lac;)Lac;	b	fillSystemReport
		p	1		details
	m	(Laln;)V	b	doRunTask
	m	(Laqu;)V	b	synchronizeTime
		p	1		world
	m	(Laqv;)Laqw;	b	createGameModeForPlayer
		p	1		player
	m	(Lard;)V	b	prepareLevels
		p	1		worldGenerationProgressListener
	m	(Lcom/mojang/authlib/GameProfile;)V	b	setSingleplayerProfile
		p	1		hostProfile
	m	(Ljava/lang/Runnable;)V	b	addTickable
		p	1		tickable
	m	(Ljava/lang/String;)V	b	setId
		p	1		serverId
	m	(Ljava/lang/Throwable;Ldws;Ldcd;)V	b	reportChunkSaveFailure
		p	1		exception
		p	2		key
		p	3		chunkPos
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
		p	1		path
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$25
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
		p	1		stopCondition
	m	(Z)V	b	setDifficultyLocked
		p	1		locked
	m	(ZZZ)Z	b	saveEverything
		p	1		suppressLogs
		p	2		flush
		p	3		force
	m	()Ljava/util/Optional;	bD	loadStatusIcon
	m	()I	bE	computeNextAutosaveInterval
	m	()Lajq;	bF	buildServerStatus
	m	()Lajq$b;	bG	buildPlayerStatus
	m	()V	bH	updateMobSpawningFlags
	m	()V	bI	startMetricsRecordingTick
	m	()Ljava/lang/String;	bJ	lambda$fillSystemReport$24
	m	()Ljava/lang/String;	bK	lambda$fillSystemReport$23
	m	()Ljava/lang/String;	bL	lambda$fillSystemReport$22
	m	()Ljava/lang/String;	bM	lambda$fillSystemReport$21
	m	()Ljava/lang/String;	bN	lambda$fillSystemReport$20
	m	()Ljava/lang/String;	bO	lambda$fillSystemReport$19
	m	()Ljava/lang/String;	bP	lambda$fillSystemReport$18
	m	()Ljava/lang/String;	bQ	lambda$fillSystemReport$17
	m	()Ljava/util/Optional;	bR	lambda$loadStatusIcon$13
	m	()Z	bS	lambda$waitUntilNextTick$10
	m	()Z	bT	lambda$runServer$8
	m	()Z	bU	lambda$stopServer$7
	m	()Lenu;	ba	getStructureManager
	m	()Lerl;	bb	getWorldData
	m	()Lka$b;	bc	registryAccess
	m	()Ljt;	bd	registries
	m	()Lalb$b;	be	reloadableRegistries
	m	()Ldct;	bf	getForcedGameType
	m	()Laue;	bg	getResourceManager
	m	()Z	bh	isCurrentlySaving
	m	()Z	bi	isTimeProfilerRunning
	m	()V	bj	startTimeProfiler
	m	()Lbne;	bk	stopTimeProfiler
	m	()I	bl	getMaxChainedNeighborUpdates
	m	()Lwu;	bm	getChatDecorator
	m	()Z	bn	logIPs
	m	()Z	bo	acceptsTransfers
	m	()Lcwt;	bp	potionBrewing
	m	()Lalj;	bq	serverLinks
	m	()V	br	logFullTickTime
	m	()V	bs	startMeasuringTaskExecutionTime
	m	()V	bt	finishMeasuringTaskExecutionTime
	m	()Z	bu	haveTime
	m	()Z	bv	pollTaskInternal
	m	(I)V	c	setPlayerIdleTimeout
		p	1		playerIdleTimeout
	m	(Laqu;)Ljava/lang/String;	c	lambda$tickChildren$16
	m	(Laqv;)V	c	sendDifficultyUpdate
		p	1		player
	m	(Lcom/mojang/authlib/GameProfile;)I	c	getProfilePermissions
		p	1		profile
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
		p	1		runnable
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	c	getFile
		p	1		path
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
		p	1		path
	m	(Ljava/util/function/BooleanSupplier;)V	c	tickChildren
		p	1		shouldKeepTicking
	m	(Z)V	c	setDemo
		p	1		demo
	m	(Laqu;)Z	d	lambda$stopServer$6
		p	0		world
	m	(Laqv;)V	d	lambda$tickChildren$15
		p	0		player
	m	(Ljava/lang/Runnable;)V	d	doRunTask
		p	1		task
	m	(Ljava/lang/String;)V	d	setMotd
		p	1		motd
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
		p	1		path
	m	(Ljava/util/function/BooleanSupplier;)Z	d	lambda$managedBlock$9
	m	(Z)V	d	setUsesAuthentication
		p	1		onlineMode
	m	()Z	e	initServer
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
		p	1		task
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
		p	1		path
	m	(Z)V	e	setPreventProxyConnections
		p	1		preventProxyConnections
	m	()Lblu;	f	getTickTimeLogger
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
		p	1		runnable
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
		p	1		path
	m	(Z)V	f	setPvpAllowed
		p	1		pvpEnabled
	m	()Z	g	isTickTimeLoggingEnabled
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
		p	1		path
	m	(Z)V	g	setFlightAllowed
		p	1		flightEnabled
	m	(Ljava/nio/file/Path;)V	h	lambda$startMetricsRecordingTick$33
		p	1		path
	m	(Z)V	h	setEnforceWhitelist
		p	1		enforceWhitelist
	m	()V	i	onServerExit
	m	(Ljava/nio/file/Path;)V	i	lambda$startMetricsRecordingTick$32
	m	()Z	j	isHardcore
	m	(Ljava/nio/file/Path;)Ljava/util/Optional;	j	lambda$loadStatusIcon$14
		p	0		path
	m	()I	k	getOperatorUserPermissionLevel
	m	(Ljava/nio/file/Path;)Z	k	lambda$loadStatusIcon$12
		p	0		path
	m	()Z	k_	acceptsSuccess
	m	()I	l	getFunctionCompilationLevel
	m	(Ljava/nio/file/Path;)Z	l	lambda$loadStatusIcon$11
		p	0		path
	m	()Z	m	shouldRconBroadcast
	m	(Ljava/nio/file/Path;)V	m	lambda$new$1
		p	0		path
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	p	isEpollEnabled
	m	()Z	q	isCommandBlockEnabled
	m	()Z	r	isPublished
	m	()V	t	forceDifficulty
	m	()V	t_	loadLevel
	m	()Ldct;	u_	getDefaultGameType
	m	()V	v	stopServer
	m	()V	v_	waitUntilNextTick
	m	()Ljava/lang/String;	w	getLocalIp
	m	()Z	w_	acceptsFailure
	m	()Z	x	isRunning
	m	()V	y	runServer
	m	()Z	z	throwIfFatalException
	f	Lbnf;	A	profiler
	f	Ljava/util/function/Consumer;	B	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	C	onMetricsRecordingFinished
	f	Z	D	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$c;	E	debugCommandProfiler
	f	Z	F	debugCommandProfilerDelayStart
	f	Lart;	G	connection
	f	Lare;	H	progressListenerFactory
	f	Lajq;	I	status
	f	Lajq$a;	J	statusIcon
	f	Layw;	K	random
	f	Lcom/mojang/datafixers/DataFixer;	L	fixerUpper
	f	Ljava/lang/String;	M	localIp
	f	I	N	port
	f	Ljt;	O	registries
	f	Ljava/util/Map;	P	levels
	f	Laur;	Q	playerList
	f	Z	R	running
	f	Z	S	stopped
	f	I	T	tickCount
	f	I	U	ticksUntilAutosave
	f	Z	V	onlineMode
	f	Z	W	preventProxyConnections
	f	Z	X	pvp
	f	Z	Y	allowFlight
	f	Ljava/lang/String;	Z	motd
	f	Lenu;	aA	structureTemplateManager
	f	Lall;	aB	tickRateManager
	f	Lcwt;	aC	potionBrewing
	f	Z	aD	isSaving
	f	Ljava/util/concurrent/atomic/AtomicReference;	aE	fatalException
	f	I	aa	playerIdleTimeout
	f	[J	ab	tickTimesNanos
	f	J	ac	aggregatedTickTimesNanos
	f	Ljava/security/KeyPair;	ad	keyPair
	f	Lcom/mojang/authlib/GameProfile;	ae	singleplayerProfile
	f	Z	af	isDemo
	f	Z	ag	isReady
	f	J	ah	lastOverloadWarningNanos
	f	J	ai	lastServerStatus
	f	Ljava/lang/Thread;	aj	serverThread
	f	J	ak	lastTickNanos
	f	J	al	taskExecutionStartNanos
	f	J	am	idleTimeNanos
	f	J	an	nextTickTimeNanos
	f	J	ao	delayedTasksMaxNextTickTimeNanos
	f	Z	ap	mayHaveDelayedTasks
	f	Latp;	aq	packRepository
	f	Lalk;	ar	scoreboard
	f	Leqw;	as	commandStorage
	f	Lalt;	at	customBossEvents
	f	Lalg;	au	functionManager
	f	Z	av	enforceWhitelist
	f	F	aw	smoothedTickTimeMillis
	f	Ljava/util/concurrent/Executor;	ax	executor
	f	Ljava/lang/String;	ay	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	az	resources
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	I	c	ABSOLUTE_MAX_WORLD_SIZE
	f	Ldda;	d	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	e	ANONYMOUS_PLAYER_PROFILE
	f	Lerf$c;	f	storageSource
	f	Leri;	g	playerDataStorage
	f	Ljava/net/Proxy;	h	proxy
	f	Lalm;	i	services
	f	Lerl;	j	worldData
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	F	l	AVERAGE_TICK_TIME_SMOOTHING
	f	I	m	TICK_STATS_SPAN
	f	J	n	OVERLOADED_THRESHOLD_NANOS
	f	I	o	OVERLOADED_TICKS_THRESHOLD
	f	J	p	OVERLOADED_WARNING_INTERVAL_NANOS
	f	I	q	OVERLOADED_TICKS_WARNING_INTERVAL
	f	J	r	STATUS_EXPIRE_TIME_NANOS
	f	J	s	PREPARE_LEVELS_DEFAULT_DELAY_NANOS
	f	I	t	MAX_STATUS_PLAYER_SAMPLE
	f	I	u	SPAWN_POSITION_SEARCH_RADIUS
	f	I	v	AUTOSAVE_INTERVAL
	f	I	w	MIMINUM_AUTOSAVE_TICKS
	f	I	x	MAX_TICK_LATENCY
	f	Ljava/util/List;	y	tickables
	f	Lbot;	z	metricsRecorder
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	m	(Ldcs$e;Ldcs$f;)V	a	visit
		p	1		key
		p	2		type
	f	Ljava/util/List;	a	val$entries
	f	Ldcs;	b	val$gameRules
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	m	()Latu;	a	resourceManager
	m	()Lalc;	b	managers
	f	Latu;	a	resourceManager
	f	Lalc;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	m	()Ljava/util/UUID;	a	id
	m	()Ljava/lang/String;	b	url
	m	()Ljava/lang/String;	c	hash
	m	()Z	d	isRequired
	m	()Lwz;	e	prompt
	f	Ljava/util/UUID;	a	id
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	isRequired
	f	Lwz;	e	prompt
c	net/minecraft/server/MinecraftServer$c	net/minecraft/server/MinecraftServer$TimeProfiler
	m	(JI)V	<init>	<init>
		p	1		time
		p	3		tick
	m	(JI)Lbne;	a	stop
		p	1		endTime
		p	3		endTick
	f	J	a	startNanos
	f	I	b	startTick
c	net/minecraft/server/MinecraftServer$c$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	m	()J	a	getStartTimeNano
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
		p	1		parentPath
	m	(Ljava/nio/file/Path;)Z	a	saveResults
		p	1		path
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$c;	c	this$0
c	net/minecraft/util/profiling/jfr/event/PacketSentEvent	net/minecraft/util/profiling/jfr/event/PacketSentEvent
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetDirection
		p	3		packetId
		p	4		remoteAddress
		p	5		bytes
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b
	m	(Ljava/lang/String;)V	<init>	<init>
		p	1		remoteAddress
	m	()V	a	commitEvent
	m	(I)V	a	trackSentPacket
		p	1		bytes
	m	(I)V	b	trackReceivedPacket
		p	1		bytes
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
c	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
		p	1		protocolId
		p	2		packetDirection
		p	3		packetId
		p	4		remoteAddress
		p	5		bytes
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	m	(F)V	<init>	<init>
		p	1		averageTickMilliseconds
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	m	(Ldcd;Lakq;Ljava/lang/String;)V	<init>	<init>
		p	1		chunkPos
		p	2		world
		p	3		targetStatus
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
c	net/minecraft/util/profiling/jfr/event/ChunkRegionReadEvent	net/minecraft/util/profiling/jfr/event/ChunkRegionReadEvent
	m	(Ldws;Ldcd;Ldwr;I)V	<init>	<init>
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
c	net/minecraft/util/profiling/jfr/event/ChunkRegionWriteEvent	net/minecraft/util/profiling/jfr/event/ChunkRegionWriteEvent
	m	(Ldws;Ldcd;Ldwr;I)V	<init>	<init>
		p	1		key
		p	2		chunkPos
		p	3		format
		p	4		bytes
